sub_401028
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_43c176
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_401064
push ebp
mov ebp esp
push ecx
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x4 ]
call sub_4013b6
mov eax [ eax ]
cmp eax [ rwxdata ]
je r-xdata
xor eax eax
mov edi esi
call sub_401333
mov eax [ eax ]
jmp r-xdata
pop edi
pop esi
leave
retn
sub_401095
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_401064
pop ecx
mov ecx [ ebp + 0xc ]
sub eax ecx
jns r-xdata
mov esi [ ebp + 0x14 ]
cmp esi eax
jbe r-xdata
xor eax eax
push esi
add ecx edi
push ecx
push [ ebp + 0x18 ]
call sub_43bd20
mov eax [ ebp + 0x1c ]
add esp 0xc
mov [ eax ] esi
pop edi
xor eax eax
pop esi
pop ebp
retn 0x18
mov esi eax
sub_4010d2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx 0x100000
sub ecx eax
cmp ecx esi
jae r-xdata
add eax [ ebp + 0x8 ]
push esi
push [ ebp + 0x18 ]
push eax
call sub_43bd20
mov eax [ ebp + 0x1c ]
add esp 0xc
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x18
sub_40110c
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0xc ] eax
push esi
push edi
push eax
lea eax [ rwxdata ]
mov [ eax ] esp
add [ eax ] 0x4
lea eax [ rwxdata ]
mov [ eax ] ecx
lea eax [ rwxdata ]
mov [ eax ] edx
lea eax [ rwxdata ]
mov [ eax ] ebp
lea esi [ rwxdata ]
mov [ eax ] esi
lea edi [ rwxdata ]
mov [ eax ] edi
push [ rwxdata ]
push rwxdata
call sub_401050
pop ecx
pop ecx
push [ rwxdata ]
push rwxdata
call sub_401050
pop ecx
pop ecx
mov [ rwxdata ] 0x60
mov al [ rwxdata ]
mov [ rwxdata ] al
mov [ rwxdata ] 0xea
mov al [ rwxdata ]
mov [ rwxdata ] al
push 0x7
pop ecx
mov esi r--data
lea edi [ ebp - 0x28 ]
[ edi ] [ esi ]
mov [ ebp - 0x40 ] r--data
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x3c ] 0x0
mov [ ebp - 0x2c ] rwxdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ rwxdata ]
xor ecx ecx
push ecx
push eax
push [ ebp - 0x2c ]
push sub_401095
call sub_401e00
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x30 ]
mov eax [ rwxdata ]
xor ecx ecx
push ecx
push eax
push [ ebp - 0x2c ]
push sub_401095
call sub_402020
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x2c ] rwxdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ rwxdata ]
xor ecx ecx
push ecx
push eax
push [ ebp - 0x2c ]
push sub_401095
call sub_401e00
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x30 ]
mov eax [ rwxdata ]
xor ecx ecx
push ecx
push eax
push [ ebp - 0x2c ]
push sub_401095
call sub_402020
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x48 ] rwxdata
push 0x100000
push rwxdata
call sub_401050
pop ecx
pop ecx
and [ ebp - 0x4c ] 0x0
jmp r-xdata
xor eax eax
pop edi
pop esi
mov ecx [ ebp - 0xc ]
xor ecx ebp
call sub_43bd0f
leave
retn 0x10
mov eax [ ebp - 0x38 ]
add eax rwxdata
mov [ ebp - 0x54 ] eax
push 0x100000
push rwxdata
call sub_401050
pop ecx
pop ecx
lea eax [ ebp - 0x38 ]
push eax
push sub_4010d2
push [ ebp - 0x54 ]
push 0x0
push [ ebp - 0x44 ]
call sub_402160
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x38 ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x38 ]
mov [ rwxdata ] eax
mov esp [ rwxdata ]
mov ebp [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov esi [ rwxdata ]
mov edi [ rwxdata ]
lea eax [ rwxdata ]
jmp eax
cmp [ ebp - 0x4c ] 0x1388
jge r-xdata
lea eax [ ebp - 0x38 ]
push eax
push sub_4010d2
push [ ebp - 0x48 ]
push 0x0
push [ ebp - 0x44 ]
call sub_402160
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov eax [ ebp - 0x4c ]
inc eax
mov [ ebp - 0x4c ] eax
sub_401333
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov edx edi
call sub_4014cc
mov esi eax
cmp esi [ rwxdata ]
je r-xdata
mov eax [ edi ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] eax
push ebx
lea eax [ ebp - 0x8 ]
push eax
call sub_401cf2
push esi
lea ecx [ ebp - 0x4 ]
push ecx
mov ebx eax
call sub_4019a4
mov esi [ ebp - 0x4 ]
pop ebx
mov eax [ edi ]
cmp eax [ esi + 0xc ]
jae r-xdata
lea eax [ esi + 0x10 ]
pop esi
leave
retn
sub_40137a
push 0x4
mov eax sub_453a4d
call sub_448d22
and [ ebp - 0x4 ] 0x0
mov eax [ rwxdata ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
call sub_40147c
push [ rwxdata ]
call sub_43c44d
pop ecx
call sub_448dfa
retn
sub_4013b6
push ebp
mov ebp esp
push ecx
push ecx
mov edx esi
call sub_4014cc
mov ecx [ rwxdata ]
mov [ ebp - 0x4 ] eax
cmp eax ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x8 ]
mov edx [ esi ]
cmp edx [ eax + 0xc ]
jb r-xdata
lea eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ eax ]
mov [ edi ] eax
mov eax edi
leave
retn
sub_401414
push ebp
mov ebp esp
push ecx
mov eax [ rwxdata ]
mov ecx [ eax ]
push esi
push eax
push ecx
lea esi [ ebp - 0x4 ]
call sub_40147c
pop esi
leave
retn
sub_40147c
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
mov [ esi ] ecx
push edi
call sub_40179d
mov eax [ rwxdata ]
mov eax [ eax ]
mov [ esi ] eax
jmp r-xdata
lea eax [ ebp + 0x8 ]
mov edi ecx
call sub_4018f9
push edi
lea eax [ ebp - 0x4 ]
push eax
call sub_40155f
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
pop edi
mov eax esi
leave
retn 0x8
sub_4014cc
mov eax [ rwxdata ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ edx ]
mov eax ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
cmp [ ecx + 0xc ] edx
jae r-xdata
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4014f1
and [ rwxdata ] 0x0
call sub_401960
mov [ rwxdata ] eax
mov [ eax ] eax
mov eax [ rwxdata ]
mov [ eax + 0x4 ] eax
mov eax [ rwxdata ]
mov [ eax + 0x8 ] eax
mov eax [ rwxdata ]
mov [ eax + 0x14 ] 0x1
mov eax [ rwxdata ]
mov [ eax + 0x15 ] 0x1
mov eax rwxdata
retn 0x4
sub_40155f
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x15 ] 0x0
push esi
push edi
je r-xdata
lea eax [ ebp + 0xc ]
call sub_4018f9
mov edx [ ebx ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_43bb45
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
mov [ eax ] edx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ rwxdata ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ rwxdata ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov edx [ rwxdata ]
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebx + 0x14 ] cl
cmp [ ebx + 0x14 ] 0x1
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
push ebx
call sub_43c44d
cmp [ rwxdata ] 0x0
pop ecx
pop edi
pop esi
pop ebx
jbe r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ edx ] ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x8
dec [ rwxdata ]
mov eax [ rwxdata ]
cmp edi [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ edi + 0x14 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ edi + 0x14 ] 0x1
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] 0x1
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_401885
mov ecx [ esi ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] 0x1
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_40183f
mov ecx [ esi + 0x8 ]
mov edi esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x14 ] 0x1
call sub_401885
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x0
call sub_40183f
mov ecx [ esi ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x14 ] 0x1
call sub_40183f
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x0
call sub_401885
mov ecx [ esi + 0x8 ]
sub_40180a
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ esi + 0x8 ]
mov ecx ebx
call sub_40180a
mov esi [ esi ]
push edi
call sub_43c44d
cmp [ esi + 0x15 ] 0x0
pop ecx
mov edi esi
je r-xdata
sub_40183f
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ rwxdata ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ edx ] eax
jmp r-xdata
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn
sub_401885
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ rwxdata ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx ] eax
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn
sub_4018f9
mov ecx [ eax ]
push ebx
xor bl bl
cmp [ ecx + 0x15 ] bl
jne r-xdata
pop ebx
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
jmp r-xdata
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] bl
je r-xdata
mov [ eax ] ecx
mov edx ecx
mov [ eax ] edx
pop ebx
retn
sub_40192f
push ebp
mov ebp esp
push ebx
push [ ebp + 0x10 ]
call sub_401cf2
push [ ebp + 0xc ]
mov ebx eax
push [ ebp + 0x8 ]
call sub_4019a4
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0xc
sub_401960
push ebp
mov ebp esp
sub esp 0xc
push 0x18
call sub_43c55a
pop ecx
test eax eax
jne r-xdata
leave
retn
lea esi [ ebp - 0xc ]
call sub_401000
push r--data
mov eax esi
push eax
call sub_43d1c8
sub_4019a4
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rwxdata ] 0x0
push edi
jne r-xdata
mov edi [ rwxdata ]
push esi
mov esi [ ebp + 0xc ]
cmp esi [ edi ]
jne r-xdata
mov eax [ rwxdata ]
push 0x1
push [ ebp + 0x8 ]
mov edi ebx
call sub_401b2e
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
jae r-xdata
pop edi
leave
retn 0x8
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax + 0xc ]
cmp ecx [ ebx + 0xc ]
jae r-xdata
push ebx
lea esi [ ebp - 0x8 ]
call sub_401a91
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
push 0x1
mov edi ebx
jmp r-xdata
mov eax [ ebx + 0xc ]
cmp [ esi + 0xc ] eax
jae r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
call sub_401c84
mov eax [ ebp - 0x4 ]
mov ecx [ ebx + 0xc ]
cmp [ eax + 0xc ] ecx
jae r-xdata
push 0x0
mov edi ebx
jmp r-xdata
mov eax esi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
call sub_4018f9
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
mov edi ebx
je r-xdata
push [ ebp + 0x8 ]
call sub_401b2e
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop esi
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
mov edi ebx
je r-xdata
mov ecx [ ebx + 0xc ]
cmp ecx [ eax + 0xc ]
jae r-xdata
push 0x1
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
push 0x0
sub_401a91
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ rwxdata ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push ebx
push edi
mov ebx ecx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov edi ebx
mov [ ebp - 0x8 ] edi
je r-xdata
mov edx [ ebp + 0x8 ]
mov edi [ edx + 0xc ]
mov ecx [ edi + 0xc ]
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0xc ]
jae r-xdata
cmp ebx [ ecx ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
push eax
call sub_43c44d
pop ecx
mov [ esi ] edi
mov [ esi + 0x4 ] 0x0
push [ ebp - 0x4 ]
lea ecx [ ebp + 0x8 ]
push ecx
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_401c84
mov edi [ ebp - 0x8 ]
mov edi [ ebp + 0x8 ]
push 0x1
lea eax [ ebp + 0x8 ]
push eax
cmp edi [ eax + 0xc ]
mov ebx eax
setb [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov eax ebx
call sub_401b2e
mov eax [ eax ]
mov [ esi ] eax
mov [ esi + 0x4 ] 0x1
jmp r-xdata
pop edi
mov eax esi
pop ebx
leave
retn 0x4
sub_401b2e
push ebp
mov ebp esp
cmp [ rwxdata ] 0x1ffffffe
jb r-xdata
inc [ rwxdata ]
push ebx
mov [ edi + 0x4 ] eax
mov ecx [ rwxdata ]
xor bl bl
push esi
cmp eax ecx
jne r-xdata
push edi
call sub_43c44d
mov [ esp ] r--data
call sub_43baf8
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ ecx + 0x4 ] edi
mov eax [ rwxdata ]
mov [ eax ] edi
mov eax [ rwxdata ]
mov [ eax + 0x8 ] edi
jmp r-xdata
mov [ eax + 0x8 ] edi
mov ecx [ rwxdata ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edi
mov ecx [ rwxdata ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov esi edi
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov [ ecx ] edi
jmp r-xdata
cmp [ eax + 0x14 ] bl
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ ebp + 0x8 ]
pop esi
mov [ eax ] edi
pop ebx
pop ebp
retn 0x8
mov ecx [ ecx ]
cmp [ ecx + 0x14 ] bl
jne r-xdata
mov ecx [ ecx + 0x8 ]
cmp [ ecx + 0x14 ] bl
je r-xdata
cmp esi [ eax ]
jne r-xdata
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] bl
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] bl
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_40183f
mov esi eax
mov ecx esi
call sub_401885
mov eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] bl
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_401885
jmp r-xdata
mov esi eax
mov ecx esi
call sub_40183f
sub_401c84
mov ecx [ eax ]
push ebx
xor bl bl
cmp [ ecx + 0x15 ] bl
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
jmp r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
mov [ eax ] ecx
pop ebx
retn
mov edx ecx
mov [ eax ] edx
pop ebx
retn
sub_401e00
push ebp
mov ebp esp
sub esp 0x208
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x208 ]
push eax
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x204 ]
push edx
push 0x200
push 0x0
push 0x0
push eax
call ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x61726a20
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x14
mov [ eax ] 0x0
sub_401e60
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push 0x0
push eax
push ecx
push esi
call [ SetFilePointerEx@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
push 0x0
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
push esi
call [ ReadFile@IAT ]
mov ecx [ ebp + 0x1c ]
pop esi
test ecx ecx
je r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
pop ebp
retn 0x18
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
sub_401eb0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov ecx eax
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push edx
push eax
push esi
sar ecx 0x1f
call [ SetFilePointer@IAT ]
mov edi [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
push 0x0
lea ecx [ ebp + 0x8 ]
push ecx
push edi
push edx
push esi
call [ WriteFile@IAT ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ ecx ] edx
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x18
cmp edi edx
jne r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x18
sub_401f20
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x1
push eax
mov [ ebp - 0x208 ] edi
mov [ ebp - 0x20c ] ecx
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
lea edx [ ebp - 0x210 ]
push edx
push esi
call [ GetFileSize@IAT ]
xor ecx ecx
push ecx
push ecx
mov edi eax
push ecx
xor eax eax
push eax
push esi
xor ebx ebx
call [ SetFilePointerEx@IAT ]
push ebx
lea eax [ ebp - 0x214 ]
push eax
push 0x200
lea ecx [ ebp - 0x204 ]
push ecx
push esi
call [ ReadFile@IAT ]
push 0x40
call sub_43c55a
add esp 0x4
test eax eax
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x20c ]
mov ecx [ ebp - 0x208 ]
push edx
push ebx
push ecx
push 0x61726a20
push ebx
push edi
push esi
push sub_401e60
mov ecx eax
call sub_403ca0
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0xc
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0xc
mov [ edi ] 0x1
sub_402020
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x1c
push 0x40
call sub_43c55a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x14 ]
push 0x0
push edx
mov edx [ ebp + 0x10 ]
push esi
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push ecx
push edx
mov ecx eax
call sub_403ca0
pop esi
pop ebp
retn 0x1c
sub_402070
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push rwxdata
push rwxdata
push 0x0
push eax
call sub_43cbad
add esp 0x14
test eax eax
je r-xdata
xor al al
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov [ eax + 0x34 ] ecx
mov al 0x1
pop ebp
retn 0x8
sub_4020b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push rwxdata
push rwxdata
push 0x0
push eax
call sub_43cbad
add esp 0x14
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_4020e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push rwxdata
push rwxdata
push 0x0
push eax
call sub_43cbad
add esp 0x14
test eax eax
je r-xdata
mov eax 0x1
pop ebp
retn 0x4
mov ecx eax
call sub_4024a0
pop ebp
retn 0x4
sub_402120
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push rwxdata
push rwxdata
push 0x0
push eax
call sub_43cbad
add esp 0x14
test eax eax
je r-xdata
mov eax 0x1
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
mov ecx eax
call sub_402b00
pop ebp
retn 0xc
sub_402160
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push rwxdata
push rwxdata
push 0x0
push eax
call sub_43cbad
add esp 0x14
test eax eax
je r-xdata
mov eax 0x1
pop ebp
retn 0x14
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
push edx
mov ecx eax
call sub_4024d0
pop ebp
retn 0x14
sub_4021b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push rwxdata
push rwxdata
push 0x0
push eax
call sub_43cbad
add esp 0x14
test eax eax
je r-xdata
pop ebp
retn 0x14
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
push edx
mov ecx eax
call sub_402560
sub_4021f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x0
push rwxdata
push rwxdata
push 0x0
push ebx
call sub_43cbad
add esp 0x14
test eax eax
je r-xdata
mov esi 0x1
mov ecx eax
call sub_4024a0
mov esi eax
jmp r-xdata
push 0x0
push rwxdata
push rwxdata
push 0x0
push ebx
call sub_43cbad
add esp 0x14
test eax eax
je r-xdata
mov [ edi + eax * 4 ] eax
inc eax
cmp eax esi
jb r-xdata
xor ecx ecx
mov eax esi
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_43c55a
mov edi eax
add esp 0x4
xor eax eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
push edi
push esi
mov ecx eax
call sub_402560
sub_402290
push ebp
mov ebp esp
push 0x1c
call sub_43c55a
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push ecx
mov ecx eax
call sub_404120
pop ebp
retn
sub_4022e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push rwxdata
push rwxdata
push 0x0
push esi
call sub_43cbad
add esp 0x14
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax 0x1
pop esi
pop ebp
retn 0x4
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
xor eax eax
pop esi
pop ebp
retn 0x4
sub_402370
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_402410
push ebp
mov ebp esp
push 0xffffffff
push sub_4501f3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push eax
call edx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_4047c0
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_401df0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_43c44d
add esp 0x4
sub_4024a0
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x4 ] 0x0
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4024d0
push ebp
mov ebp esp
push 0xffffffff
push sub_450218
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push 0x0
push eax
push ecx
lea ecx [ ebp - 0x4c ]
call sub_404dc0
mov eax [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx + 0x1c ]
lea ecx [ ebp - 0x4c ]
push ecx
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x0
call edx
mov esi eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_404960
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
sub_402560
push ebp
mov ebp esp
push 0xffffffff
push sub_450248
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
test edi edi
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push eax
push ecx
push esi
lea ecx [ ebp - 0x4c ]
call sub_404d60
mov eax [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx + 0x1c ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx [ ebp + 0xc ]
push 0x0
push edi
push ecx
push eax
mov [ ebp - 0x4 ] 0x0
call edx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_404960
sub_402680
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_4026e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
inc ebx
cmp ebx [ esi + 0x8 ]
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
push edi
push ebx
call sub_43c55a
add esp 0x4
cmp [ esi + 0x8 ] 0x0
mov edi eax
jle r-xdata
mov ecx [ esi + 0x4 ]
mov [ esi ] edi
mov [ edi + ecx ] 0x0
mov [ esi + 0x8 ] ebx
pop edi
xor eax eax
cmp [ esi + 0x4 ] eax
jle r-xdata
mov eax [ esi ]
push eax
call sub_43c44d
add esp 0x4
lea esp [ esp ]
mov ecx [ esi ]
mov dl [ eax + ecx ]
mov [ eax + edi ] dl
inc eax
cmp eax [ esi + 0x4 ]
jl r-xdata
sub_402740
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_402770
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
xor eax eax
dec ecx
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edi edi
inc eax
cmp eax ecx
jb r-xdata
cmp [ edx + eax * 2 ] 0x0
je r-xdata
sub_402790
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
xor ecx ecx
dec edi
je r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax + ecx * 2 ] dx
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
sub esi eax
xor edx edx
pop esi
mov [ ebx + ecx * 2 ] dx
pop ebx
pop edi
pop ebp
retn
mov [ esi + eax ] dx
inc ecx
add eax 0x2
cmp ecx edi
jb r-xdata
movzx edx [ eax ]
test dx dx
je r-xdata
xor eax eax
pop esi
mov [ ebx + ecx * 2 ] ax
pop ebx
pop edi
pop ebp
retn
sub_4027e0
push ebp
mov ebp esp
push 0xffffffff
push sub_45027b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_43c44d
mov eax [ esi + 0x10 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_402840
push ebp
mov ebp esp
push 0xffffffff
push sub_4502ab
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_404e40
mov esi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_4028a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4502db
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_405040
mov esi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_402900
push ebp
mov ebp esp
push 0xffffffff
push sub_45030b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_405040
mov esi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_402960
push ebp
mov ebp esp
push 0xffffffff
push sub_45033b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ecx + 0x8 ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_404e40
mov esi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_402a00
push ebp
mov ebp esp
push 0xffffffff
push sub_45036b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_43c44d
mov eax [ esi + 0x10 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_402a60
push ebp
mov ebp esp
push 0xffffffff
push sub_4503a3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push eax
call edx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_4047c0
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_401df0
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call sub_43c44d
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_402b00
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx ecx
xor eax eax
xor ecx ecx
mov [ ebp - 0x18 ] ax
mov [ ebp - 0x20 ] cx
cmp [ ebx + 0x4 ] eax
je r-xdata
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0xc ]
push edi
xor edx edx
mov [ esi + 0x38 ] dx
lea edi [ esi + 0x38 ]
lea edx [ ebp - 0x20 ]
push edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push 0x3
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
mov [ esi + 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] ax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_4057f0
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
lea eax [ eax + eax + 0x2 ]
add esp 0x8
cmp eax 0x800
jb r-xdata
or eax 0xffffffff
mov [ esi + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] ax
je r-xdata
mov ecx [ ebp - 0x18 ]
mov [ esi + 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
lea edx [ ecx + ecx ]
push edx
push eax
push edi
call sub_43bd20
mov eax [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
xor ecx ecx
push eax
mov [ esi + edx * 2 + 0x38 ] cx
call sub_43c44d
add esp 0x10
jmp r-xdata
mov [ ebp + 0xc ] 0x3fe
or eax 0xffffffff
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] ax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_405480
add esp 0x4
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
mov edx [ edx + 0x18 ]
lea ecx [ ebp - 0x20 ]
push ecx
push 0x8
push edi
push eax
call edx
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x20 ]
push edx
mov [ esi ] ebx
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push 0x9
push edi
push eax
mov eax [ ecx + 0x18 ]
call eax
test eax eax
jne r-xdata
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] ax
je r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
call sub_405480
add esp 0x4
mov [ esi + 0x14 ] edx
jmp r-xdata
lea edx [ ebp - 0x20 ]
push edx
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push 0x7
push edi
push eax
mov eax [ ecx + 0x18 ]
call eax
test eax eax
jne r-xdata
mov [ esi + 0x1d ] 0x0
cmp [ ebp - 0x20 ] ax
je r-xdata
cmp [ ebp - 0x18 ] ax
setne al
mov [ esi + 0x1c ] al
jmp r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
mov edx [ edx + 0x18 ]
push 0x6
push edi
push eax
call edx
test eax eax
jne r-xdata
xor eax eax
mov [ esi + 0x24 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] ax
je r-xdata
cmp [ ebp - 0x18 ] ax
setne cl
mov [ esi + 0x1d ] cl
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push 0xf
push edi
push eax
mov eax [ ecx + 0x18 ]
call eax
test eax eax
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] ax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov [ esi + 0x24 ] ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
mov edx [ edx + 0x18 ]
lea ecx [ ebp - 0x20 ]
push ecx
push 0xc
push edi
push eax
call edx
test eax eax
jne r-xdata
xor eax eax
pop edi
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x20 ] ax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov [ esi + 0x34 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x20 ]
push ecx
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
mov edx [ edx + 0x18 ]
push 0xb
push edi
push eax
call edx
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
pop edi
mov [ esi + 0x2c ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x28 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esi + 0x30 ] eax
mov ebx [ ebx + 0x4 ]
mov edx [ ebx ]
mov ecx [ edx + 0x18 ]
lea eax [ ebp - 0x20 ]
push eax
push 0xa
push edi
push ebx
call ecx
test eax eax
jne r-xdata
sub_402dc0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
add esi edx
cmp esi eax
pop esi
jle r-xdata
pop ebp
retn 0x8
sub eax edx
mov [ ecx ] eax
sub_402de0
push ebp
mov ebp esp
push 0xffffffff
push sub_4503c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0xc ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_43c44d
mov eax [ esi ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_402e40
push ebp
mov ebp esp
push 0xffffffff
push sub_4503f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_402ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_450428
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_402f10
push ebp
mov ebp esp
push 0xffffffff
push sub_450458
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0xc ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_43c44d
mov eax [ esi ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_402f80
push ebp
mov ebp esp
push 0xffffffff
push sub_45048b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ecx + 0xa30 ]
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_43c44d
mov eax [ esi + 0x10 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_402fe0
push ebp
mov ebp esp
push 0xffffffff
push sub_4504bb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ecx + 0x8 ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_404e40
mov esi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_403040
push ebp
mov ebp esp
push 0xffffffff
push sub_4504eb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x10 ]
xor edi edi
push 0x3
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
call sub_4026e0
lea ecx [ esi + 0x1c ]
push 0x3
mov [ ebp - 0x4 ] edi
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
call sub_4026e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4030b0
push ebp
mov ebp esp
push 0xffffffff
push sub_45051b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x10 ]
xor edi edi
push 0x3
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
call sub_4026e0
lea ecx [ esi + 0x1c ]
push 0x3
mov [ ebp - 0x4 ] edi
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
call sub_4026e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_403120
push ebp
mov ebp esp
push 0xffffffff
push sub_450548
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edi [ edx * 4 ]
mov [ ebp - 0x10 ] ecx
add edi 0x4
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ esi + 0xc ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_43c44d
mov ecx [ esi ]
push ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
push esi
call sub_43c44d
add esp 0xc
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
mov [ ebp - 0x14 ] esi
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
sub_4031d0
push ebp
mov ebp esp
push 0xffffffff
push sub_450591
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
lea edi [ esi + 0x48 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_404e40
mov edi [ edi + 0xc ]
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
add esi 0x18
mov [ ebp - 0x14 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_405040
mov esi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
call eax
sub_403290
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax 0x10
push esi
nop
movzx eax [ edx ]
movzx esi [ ecx ]
sub eax esi
jne r-xdata
sub eax 0x4
add ecx 0x4
add edx 0x4
cmp eax 0x4
jae r-xdata
sar eax 0x1f
or eax 0x1
xor edx edx
test eax eax
sete dl
pop esi
mov eax edx
pop ebp
retn
movzx eax [ edx + 0x1 ]
movzx esi [ ecx + 0x1 ]
sub eax esi
jne r-xdata
mov esi [ edx ]
cmp esi [ ecx ]
jne r-xdata
xor eax eax
xor edx edx
test eax eax
sete dl
pop esi
mov eax edx
pop ebp
retn
movzx eax [ edx + 0x2 ]
movzx esi [ ecx + 0x2 ]
sub eax esi
jne r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_403310
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0xc ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x10 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_403430
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x14 ]
mov eax [ ecx + 0x14 ]
jne r-xdata
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push 0x1
call edx
xor eax eax
sub_403510
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4031d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_403540
push esi
push 0x0
push 0x0
mov esi ecx
call sub_4074f0
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov eax esi
pop esi
retn
sub_403590
push ebp
mov ebp esp
push 0xffffffff
push sub_4505e7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
xor ebx ebx
mov [ esi + 0x10 ] ebx
lea edi [ esi + 0x14 ]
lea ecx [ edi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
push 0x3
mov [ ebp - 0x14 ] edi
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
call sub_4026e0
lea ecx [ edi + 0x1c ]
push 0x3
mov [ ebp - 0x4 ] ebx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
call sub_4026e0
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x5c ] ebx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
push 0xd68
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x78 ] eax
mov [ esi + 0x74 ] eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x6c ] eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x7c ] bl
call sub_43c55a
mov edi eax
add esp 0x4
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x4
cmp edi ebx
je r-xdata
xor edi edi
push ebx
push ebx
mov ecx edi
call sub_4074f0
mov [ edi ] r--data
mov [ edi + 0x4 ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0xc ] r--data
mov [ edi + 0x10 ] r--data
jmp r-xdata
mov eax [ esi + 0x60 ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x64 ] edi
cmp edi ebx
je r-xdata
mov eax esi
mov [ esi + 0x60 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_4036d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0xc ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_403850
push ebp
mov ebp esp
push 0xffffffff
push sub_450631
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x60 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov eax [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
add esi 0x14
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov eax [ esi + 0x10 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4038e0
push ebp
mov ebp esp
push 0xffffffff
push sub_450671
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x60 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov eax [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea edi [ esi + 0x14 ]
mov [ ebp - 0x10 ] edi
mov eax [ edi + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov eax [ edi + 0x10 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4039a0
push ebp
mov ebp esp
push 0xffffffff
push sub_45069b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ esi + 0xa30 ]
lea ecx [ edi + 0x10 ]
xor ebx ebx
push 0x3
mov [ ebp - 0x10 ] edi
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
call sub_4026e0
lea ecx [ edi + 0x1c ]
push 0x3
mov [ ebp - 0x4 ] ebx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
call sub_4026e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403a40
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4031d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_403a70
push ebp
mov ebp esp
push 0xffffffff
push sub_4506cb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
mov [ esi + 0x4 ] edi
lea ebx [ esi + 0xa38 ]
lea ecx [ ebx + 0x10 ]
mov [ esi ] r--data
push 0x3
mov [ ebp - 0x10 ] ebx
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
call sub_4026e0
lea ecx [ ebx + 0x1c ]
push 0x3
mov [ ebp - 0x4 ] edi
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
call sub_4026e0
mov [ esi + 0xa7c ] edi
mov [ esi + 0xa80 ] edi
mov [ esi + 0xa84 ] edi
mov [ esi + 0xa88 ] 0x4
mov [ esi + 0xa78 ] r--data
mov [ esi + 0xa8c ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403b20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
sub_403b90
push ebp
mov ebp esp
push 0xffffffff
push sub_45071c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov eax [ edi + 0xa8c ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
lea esi [ edi + 0xa78 ]
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_404780
lea esi [ edi + 0xa38 ]
mov [ ebp - 0x14 ] esi
mov eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_43c44d
mov eax [ esi + 0x10 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_403c40
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_403b90
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_403c70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_403b90
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_403ca0
push ebp
mov ebp esp
push 0xffffffff
push sub_450769
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
lea edi [ esi + 0x8 ]
push ecx
xor ebx ebx
mov ecx edi
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
call sub_404910
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x4 ] 0x1
cmp eax 0x61726a20
je r-xdata
push 0xa90
call sub_43c55a
add esp 0x4
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
cmp eax 0x677a2020
je r-xdata
xor eax eax
mov ecx eax
call sub_403a70
jmp r-xdata
push 0x80
call sub_43c55a
add esp 0x4
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov ecx [ ebp + 0x1c ]
cmp ecx ebx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push ecx
call eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push ebx
push ebx
push edi
push eax
call edx
mov [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0x1
mov ecx eax
call sub_403590
jmp r-xdata
mov ecx [ esi + 0x4 ]
or eax 0xffffffff
cmp ecx ebx
je r-xdata
mov ebx [ ebp + 0x24 ]
test ebx ebx
je r-xdata
mov [ ecx ] eax
mov [ esi + 0x30 ] 0x0
xor eax eax
lea ecx [ ebx + 0x4 ]
mov edi edi
lea edi [ eax + 0x1 ]
xor ecx ecx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_43c55a
push edi
push ebx
push eax
mov [ esi + 0x30 ] eax
call sub_402790
add esp 0x10
jmp r-xdata
cmp [ ecx - 0x2 ] 0x0
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
inc eax
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
add eax 0x2
add eax 0x3
add ecx 0x6
cmp eax 0x3ff
jb r-xdata
cmp [ ecx - 0x4 ] 0x0
je r-xdata
jmp r-xdata
sub_403e20
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404690
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ecx + eax * 4 ] edx
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
pop esi
pop ebp
retn 0x4
sub_403e50
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
inc ebx
cmp ebx [ esi + 0x8 ]
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
xor ecx ecx
mov eax ebx
mov edx 0x2
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_43c55a
add esp 0x4
cmp [ esi + 0x8 ] 0x0
mov edi eax
jle r-xdata
mov ecx [ esi + 0x4 ]
mov [ esi ] edi
xor edx edx
mov [ edi + ecx * 2 ] dx
mov [ esi + 0x8 ] ebx
pop edi
xor eax eax
cmp [ esi + 0x4 ] eax
jle r-xdata
mov eax [ esi ]
push eax
call sub_43c44d
add esp 0x4
jmp r-xdata
mov ecx [ esi ]
mov dx [ ecx + eax * 2 ]
mov [ edi + eax * 2 ] dx
inc eax
cmp eax [ esi + 0x4 ]
jl r-xdata
sub_403ec0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push esi
mov esi eax
sub esi ecx
mov edi edi
movzx edx [ ecx ]
mov [ esi + ecx ] dx
add ecx 0x2
test dx dx
jne r-xdata
pop esi
pop ebp
retn
sub_403f20
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov eax [ edi + 0x4 ]
push eax
call sub_403e50
mov edx [ edi ]
mov ecx [ esi ]
jmp r-xdata
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
mov ecx [ edi + 0x4 ]
pop edi
mov [ esi + 0x4 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403f90
push ebp
mov ebp esp
push 0xffffffff
push sub_450798
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_403ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_4507c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_404060
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x1c ]
lea edx [ edi + 0x20 ]
mov [ esi + 0x1c ] ecx
push edx
lea ecx [ esi + 0x20 ]
call sub_403f20
mov eax [ edi + 0x2c ]
mov [ esi + 0x2c ] eax
mov ecx [ edi + 0x30 ]
mov [ esi + 0x30 ] ecx
mov edx [ edi + 0x34 ]
pop edi
mov [ esi + 0x34 ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4040c0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push eax
call sub_43c44d
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4040f0
push esi
mov esi ecx
lea ecx [ esi + 0x20 ]
xor eax eax
push 0x3
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
call sub_403e50
or eax 0xffffffff
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov eax esi
pop esi
retn
sub_404120
push ebp
mov ebp esp
push 0xffffffff
push sub_45080e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
mov [ esi ] r--data
mov [ ebp - 0x4 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x8 ] r--data
push 0xe0
mov [ ebp - 0x4 ] 0x1
call sub_43c55a
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_40d730
cmp eax edi
je r-xdata
add eax 0x4
jmp r-xdata
mov [ esi + 0x4 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_4041c0
push ebp
mov ebp esp
push 0xffffffff
push sub_45084b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
lea edi [ esi + 0x8 ]
add esp 0x4
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_404680
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_401df0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_404250
push ebp
mov ebp esp
push 0xffffffff
push sub_45087b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x38
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ eax + edx * 4 ] edi
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_404060
mov edi eax
sub_4042d0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
push esi
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edi edi
add edi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ esi + 0x20 ]
push ecx
call sub_43c44d
push esi
call sub_43c44d
add esp 0x8
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
sub_404340
push ebp
mov ebp esp
push 0xffffffff
push sub_4508bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
lea edi [ esi + 0x8 ]
add esp 0x4
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_404680
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_401df0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4043e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4508f3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
push 0x3
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
call sub_403e50
or eax 0xffffffff
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push ebx
push 0x3
push ebx
push 0x7
push 0x80
push eax
mov [ ebp - 0x4 ] ebx
call [ CreateFileW@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
mov esi eax
call [ GetFileAttributesW@IAT ]
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
push ecx
push esi
call [ GetFileTime@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push esi
call [ GetFileSize@IAT ]
push 0x38
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] ebx
lea esi [ edi + 0x8 ]
call sub_43c55a
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor edi edi
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx eax
call sub_404060
mov edi eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_404690
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ eax + edx * 4 ] edi
mov ecx [ ebp - 0x28 ]
inc [ esi + 0x8 ]
push ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4044f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
push esi
mov esi [ ecx + 0x8 ]
sub esi eax
push esi
push eax
mov eax [ edx + 0x4 ]
call eax
pop esi
pop ebp
retn 0x4
sub_404510
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi [ esi + 0x4 ]
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp edi 0x80000000
jb r-xdata
push ebx
mov ebx [ esi + 0x10 ]
mov ecx ebx
imul ecx edi
xor edx edx
mov eax ecx
div ebx
cmp eax edi
je r-xdata
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x100ec1
call sub_43d1c8
xor ebx ebx
test ecx ecx
je r-xdata
push r--data
lea ecx [ ebp + 0x8 ]
push ecx
mov [ ebp + 0x8 ] 0x100ec2
call sub_43d1c8
mov eax [ esi + 0xc ]
push eax
call sub_43c44d
add esp 0x4
mov [ esi + 0xc ] ebx
mov [ esi + 0x4 ] edi
pop ebx
push ecx
call sub_43c55a
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
jl r-xdata
push r--data
lea edx [ ebp + 0x8 ]
push edx
mov [ ebp + 0x8 ] 0x100ec3
call sub_43d1c8
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0xc ]
imul ecx eax
push ecx
push edx
push ebx
call sub_43bd20
add esp 0xc
mov eax edi
sub_4045e0
push ebp
mov ebp esp
mov eax [ ecx + 0x10 ]
mov edx [ ecx + 0xc ]
push esi
mov esi [ ecx + 0x8 ]
mov ecx [ ebp + 0xc ]
sub esi ecx
imul esi eax
push esi
mov esi eax
imul eax [ ebp + 0x8 ]
imul esi ecx
add esi edx
add eax edx
push esi
push eax
call sub_43d220
add esp 0xc
pop esi
pop ebp
retn 0x8
sub_404620
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x8 ]
lea eax [ edx + edi ]
cmp eax ecx
jle r-xdata
test edi edi
jle r-xdata
mov edi ecx
sub edi edx
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x10 ]
push ebx
lea ebx [ edx + edi ]
sub ecx ebx
imul ecx eax
push ecx
mov ecx eax
imul eax edx
imul ecx ebx
mov ebx ecx
mov ecx [ esi + 0xc ]
add ebx ecx
add eax ecx
push ebx
push eax
call sub_43d220
add esp 0xc
sub [ esi + 0x8 ] edi
pop ebx
sub_404690
mov edx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
retn
mov eax 0x1
cmp edx 0x40
jl r-xdata
cmp edx 0x8
jl r-xdata
mov eax edx
shr eax 0x2
add edx eax
push edx
call sub_404510
retn
add edx eax
push edx
call sub_404510
mov eax 0x8
sub_4046d0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
cmp [ esi + 0x8 ] eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov edi [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
sub edi edx
imul edi eax
push edi
mov edi eax
imul edi edx
inc edx
imul edx eax
add edi ecx
add edx ecx
push edi
push edx
call sub_43d220
add esp 0xc
inc [ esi + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov ecx 0x1
cmp eax 0x40
jl r-xdata
cmp eax 0x8
jl r-xdata
mov ecx eax
shr ecx 0x2
jmp r-xdata
add eax ecx
push eax
mov ecx esi
call sub_404510
mov ecx 0x8
sub_404740
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push ecx
push 0x0
mov ecx esi
call edx
mov eax [ esi + 0xc ]
push eax
call sub_43c44d
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
sub_404780
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
push 0x0
mov [ esi ] r--data
call [ r--data ]
mov ecx [ esi + 0xc ]
push ecx
call sub_43c44d
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
sub_4047e0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x14 ]
push ecx
mov ecx [ esi + 0x10 ]
push edx
mov edx [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push ecx
push edx
call eax
mov eax [ ebp + 0x8 ]
add [ esi + 0x10 ] eax
mov ecx [ ebp + 0x14 ]
adc [ esi + 0x14 ] 0x0
pop esi
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn 0x10
mov [ ecx ] eax
sub_404820
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
pop ebp
retn 0x10
sub_404840
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
add eax 0x10
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
add eax 0x10
add [ eax ] ecx
adc [ eax + 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x1
pop ebp
retn 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
add edx [ ebp + 0xc ]
lea eax [ ecx + 0x10 ]
mov ecx [ ecx + 0x1c ]
adc ecx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
xor eax eax
pop ebp
retn 0x14
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
sub_404910
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x18 ] ecx
mov cl [ ebp + 0x18 ]
mov [ eax ] r--data
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] cl
pop ebp
retn 0x14
sub_4049f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
lea eax [ esi + 0x4 ]
mov [ ecx ] eax
mov [ esi + 0x14 ] edx
xor eax eax
pop esi
pop ebp
retn 0x10
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x24 ]
push 0x1
push ecx
push edx
call eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] 0x0
sub_404a50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x24 ]
push 0x2
push edx
push eax
call ecx
sub_404a70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add [ esi + 0x14 ] eax
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx [ esi + 0x34 ]
adc [ esi + 0x18 ] 0x0
push edx
mov edx [ esi + 0xc ]
push eax
mov eax [ esi + 0x38 ]
push eax
mov eax [ esi + 0x8 ]
push ecx
push edx
mov [ ebp + 0x10 ] 0x0
call eax
mov ecx [ ebp + 0x10 ]
add [ esi + 0x34 ] ecx
mov edx [ ebp + 0x14 ]
adc [ esi + 0x38 ] 0x0
test edx edx
je r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
pop esi
pop ebp
retn 0x10
mov [ edx ] ecx
pop esi
pop ebp
retn 0x10
sub_404ae0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x3c ]
push ecx
mov ecx [ esi + 0x38 ]
push edx
mov edx [ esi + 0x10 ]
push eax
mov eax [ esi + 0xc ]
push ecx
push edx
mov [ ebp - 0x4 ] 0x0
call eax
mov ecx [ ebp - 0x4 ]
add [ esi + 0x38 ] ecx
mov edx [ ebp + 0x14 ]
adc [ esi + 0x3c ] 0x0
pop esi
test edx edx
je r-xdata
mov esp ebp
pop ebp
retn 0x10
mov [ edx ] ecx
sub_404b50
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
add eax 0x34
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
add eax 0x34
add [ eax ] ecx
adc [ eax + 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x18 ]
test ecx ecx
je r-xdata
mov eax 0x1
pop ebp
retn 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
add edx [ ebp + 0xc ]
lea eax [ ecx + 0x34 ]
mov ecx [ ecx + 0x30 ]
adc ecx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
xor eax eax
pop ebp
retn 0x14
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
sub_404bf0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
xor eax eax
dec ecx
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edi edi
inc eax
cmp eax ecx
jb r-xdata
cmp [ edx + eax * 2 ] 0x0
je r-xdata
sub_404ca0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push edi
push 0x0
push rwxdata
push rwxdata
push 0x0
push eax
call sub_43cbad
mov edi eax
add esp 0x14
test edi edi
je r-xdata
xor eax eax
pop edi
pop ebp
retn 0x8
mov eax [ edi + 0x30 ]
xor ecx ecx
add eax 0x4
nop
push esi
lea esi [ ecx + 0x1 ]
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_43c55a
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edx [ edi + 0x30 ]
push esi
push edx
push eax
call sub_402790
add esp 0x10
pop esi
cmp [ eax - 0x2 ] 0x0
je r-xdata
inc ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
add ecx 0x2
add ecx 0x3
add eax 0x6
cmp ecx 0x3ff
jb r-xdata
cmp [ eax - 0x4 ] 0x0
je r-xdata
jmp r-xdata
sub_404d60
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0xc ] ecx
xor ecx ecx
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] cl
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] ecx
pop ebp
retn 0xc
sub_404dc0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0xc ] ecx
xor ecx ecx
mov [ eax + 0x10 ] edx
mov dl [ ebp + 0x10 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] dl
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] ecx
pop ebp
retn 0xc
sub_404e80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_404eb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_404f00
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0x1
jae r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edi 0x1
push eax
call sub_410630
push edi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x18 ] edi
call sub_410610
add esp 0x8
xor ecx ecx
mov [ esi + 0x8 ] eax
test eax eax
pop edi
setne al
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x18 ] edi
jne r-xdata
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_404f60
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0xc ] edi
pop edi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_404f90
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi ]
push edi
sub eax ecx
cdq
add [ esi + 0x10 ] eax
mov eax [ esi + 0xc ]
lea edi [ ebp - 0x8 ]
adc [ esi + 0x14 ] edx
mov edx [ eax ]
push edi
mov edi [ esi + 0x18 ]
push edi
push ecx
push eax
mov eax [ edx + 0xc ]
call eax
pop edi
test eax eax
je r-xdata
xor al al
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ esi ] eax
add eax ecx
mov [ esi + 0x4 ] eax
test ecx ecx
sete al
xor edx edx
mov [ esi + 0x1c ] al
test al al
sete al
pop esi
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x4 ] eax
call sub_43d1c8
sub_405000
push esi
mov esi ecx
call sub_404f90
test al al
jne r-xdata
mov ecx [ esi ]
mov al [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
add [ esi + 0x10 ] 0x1
adc [ esi + 0x14 ] 0x0
or al 0xff
pop esi
retn
sub_405080
mov eax [ ecx + 0x18 ]
mov edx [ ecx + 0x1c ]
push ebx
push esi
mov esi [ ecx + 0xc ]
xor ebx ebx
push edi
mov edi [ ecx + 0x4 ]
sub eax esi
sbb edx ebx
add eax edi
adc edx ebx
cmp esi edi
pop edi
pop esi
pop ebx
jbe r-xdata
retn
mov ecx [ ecx + 0x10 ]
add eax ecx
adc edx 0x0
sub_4050d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_405100
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0x1
jae r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov edi 0x1
push eax
call sub_410630
push edi
mov [ esi ] 0x0
mov [ esi + 0x10 ] edi
call sub_410610
add esp 0x8
xor ecx ecx
mov [ esi ] eax
test eax eax
pop edi
setne al
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_405150
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x14 ] edi
pop edi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_405180
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ esi + 0x4 ]
cmp eax edi
jb r-xdata
sub edi eax
mov eax [ esi + 0x20 ]
xor edx edx
xor ebx ebx
cmp eax edx
je r-xdata
mov edi [ esi + 0x10 ]
mov eax [ esi + 0x14 ]
cmp eax edx
je r-xdata
mov ecx [ esi ]
add ecx [ esi + 0xc ]
push edi
push ecx
push eax
call sub_43d220
add [ esi + 0x20 ] edi
add esp 0xc
xor edx edx
mov eax [ esi + 0x10 ]
add [ esi + 0xc ] edi
cmp [ esi + 0xc ] eax
jne r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi ]
add ecx [ esi + 0xc ]
push edi
mov [ ebp - 0x4 ] edx
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
mov edi [ ebp - 0x4 ]
mov ebx eax
xor edx edx
cmp [ esi + 0x4 ] eax
jne r-xdata
mov [ esi + 0xc ] edx
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x4 ]
jbe r-xdata
mov [ esi + 0x24 ] 0x1
mov [ esi + 0x4 ] edx
add [ esi + 0x18 ] edi
pop edi
mov [ esi + 0x8 ] eax
adc [ esi + 0x1c ] edx
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
sub_405220
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
push edi
cmp eax ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jb r-xdata
sub ecx eax
mov edi ecx
mov edi [ esi + 0x10 ]
sub edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi ]
add ecx [ esi + 0xc ]
push edi
push ecx
push eax
call sub_43d220
add esp 0xc
add [ esi + 0x20 ] edi
mov eax [ esi + 0x20 ]
xor ebx ebx
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
add [ esi + 0xc ] edi
cmp [ esi + 0xc ] edx
jne r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi ]
add ecx [ esi + 0xc ]
push edi
mov [ ebp - 0x4 ] ebx
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
mov edi [ ebp - 0x4 ]
mov ebx eax
cmp [ esi + 0x4 ] edx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
jbe r-xdata
mov [ esi + 0x24 ] 0x1
mov [ esi + 0x4 ] 0x0
add [ esi + 0x18 ] edi
mov [ esi + 0x8 ] edx
adc [ esi + 0x1c ] 0x0
test ebx ebx
jne r-xdata
mov edx eax
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp eax ecx
jne r-xdata
sub_4052e0
push ebp
mov ebp esp
push ecx
call sub_405220
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
push r--data
lea eax [ ebp - 0x4 ]
push eax
call sub_43d1c8
sub_405330
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov al [ ebp + 0x8 ]
push esi
push edi
mov edi edx
test al al
je r-xdata
xor esi esi
push ebx
mov [ edi ] al
inc edi
mov eax 0xcccccccd
mul ecx
shr edx 0x3
mov al dl
add al al
add al al
inc esi
lea ebx [ eax + edx ]
add bl bl
sub cl bl
add cl 0x30
mov [ ebp + esi - 0x15 ] cl
mov ecx edx
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0xc ]
sub ebx esi
test ebx ebx
jle r-xdata
pop ebx
mov edi edi
push ebx
push 0x30
push edi
call sub_43d590
add esp 0xc
add edi ebx
mov cl [ ebp + esi - 0x15 ]
dec esi
mov [ edi ] cl
inc edi
test esi esi
jg r-xdata
mov ecx [ ebp - 0x4 ]
mov [ edi ] 0x0
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_4053c0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
push ecx
push eax
mov [ esi ] 0x0
call [ FileTimeToSystemTime@IAT ]
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x14 ]
push 0x4
push 0x0
mov edx esi
call sub_405330
movzx ecx [ ebp - 0x12 ]
push 0x2
push 0x2d
mov edx eax
call sub_405330
movzx ecx [ ebp - 0xe ]
push 0x2
push 0x2d
mov edx eax
call sub_405330
add esp 0x18
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor al al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov al 0x1
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn
movzx ecx [ ebp - 0xc ]
push 0x2
push 0x20
mov edx eax
call sub_405330
movzx ecx [ ebp - 0xa ]
push 0x2
push 0x3a
mov edx eax
call sub_405330
add esp 0x10
cmp [ ebp + 0x14 ] 0x0
je r-xdata
movzx ecx [ ebp - 0x8 ]
push 0x2
push 0x3a
mov edx eax
call sub_405330
add esp 0x8
sub_405480
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx ]
add eax 0xffffffef
cmp eax 0x4
ja r-xdata
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x24e9f
call sub_43d1c8
mov edi edi
cwde
push esp
inc eax
add [ edi - 0x59ffbfac ] bl
push esp
inc eax
add [ ebp - 0x52ffbfac ] dh
push esp
inc eax
add [ ebp - 0x75 ] dl
in al dx
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] ax
je r-xdata
jmp [ eax * 4 + jump_table_4054cc ]
pop ebp
retn
lea ecx [ ecx ]
movzx eax [ ecx + 0x8 ]
cdq
pop ebp
retn
movzx eax [ ecx + 0x8 ]
cdq
pop ebp
retn
mov eax [ ecx + 0x8 ]
xor edx edx
pop ebp
retn
mov eax [ ecx + 0x8 ]
mov edx [ ecx + 0xc ]
pop ebp
retn
inc eax
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
sub_405520
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push esi
mov esi eax
sub esi ecx
mov edi edi
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
test dl dl
jne r-xdata
pop esi
pop ebp
retn
sub_405540
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push eax
push esi
mov [ ebp - 0x4 ] 0x0
call sub_4106e0
add esp 0xc
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_405570
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor eax eax
push edi
mov edi ecx
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
xor esi esi
cmp [ ebx ] ax
je r-xdata
push esi
call sub_403e50
mov ecx [ edi ]
mov edx ebx
lea esp [ esp ]
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
mov [ edi + 0x4 ] esi
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
inc esi
cmp [ ebx + esi * 2 ] ax
jne r-xdata
sub_4055c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
cmp [ ebx ] 0x0
je r-xdata
push edi
call sub_4026e0
mov ecx [ esi ]
mov edx ebx
lea ebx [ ebx ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc edi
cmp [ edi + ebx ] 0x0
jne r-xdata
sub_405610
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x44 ]
push eax
push ecx
push edx
mov [ ebp - 0x48 ] 0x0
call sub_4109e0
xor edi edi
add esp 0xc
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
cmp [ ebp - 0x44 ] di
je r-xdata
push edi
mov ecx esi
call sub_403e50
mov ecx [ esi ]
lea edx [ ebp - 0x44 ]
jmp r-xdata
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] edi
xor ecx ebp
mov eax esi
pop edi
call sub_43bd0f
mov esp ebp
pop ebp
retn
inc edi
cmp [ ebp + edi * 2 - 0x44 ] 0x0
jne r-xdata
sub_4056a0
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x44 ]
push eax
push ecx
push edx
mov [ ebp - 0x48 ] 0x0
call sub_410ad0
xor edi edi
add esp 0xc
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
cmp [ ebp - 0x44 ] di
je r-xdata
push edi
mov ecx esi
call sub_403e50
mov ecx [ esi ]
lea edx [ ebp - 0x44 ]
jmp r-xdata
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] edi
xor ecx ebp
mov eax esi
pop edi
call sub_43bd0f
mov esp ebp
pop ebp
retn
inc edi
cmp [ ebp + edi * 2 - 0x44 ] 0x0
jne r-xdata
sub_405730
push ebp
mov ebp esp
push 0xffffffff
push sub_450918
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push ecx
push edx
lea ecx [ ebp - 0x30 ]
push ecx
xor ebx ebx
push eax
mov [ ebp - 0x40 ] ebx
call sub_4053c0
add esp 0x10
xor esi esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
cmp [ ebp - 0x30 ] bl
je r-xdata
push esi
lea ecx [ ebp - 0x3c ]
call sub_4026e0
mov ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x30 ]
jmp r-xdata
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
cmp al bl
jne r-xdata
mov [ ebp - 0x38 ] esi
lea edx [ ebp - 0x3c ]
push edx
push edi
mov [ ebp - 0x4 ] ebx
call sub_405540
mov eax [ ebp - 0x3c ]
push eax
call sub_43c44d
add esp 0xc
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
inc esi
cmp [ ebp + esi - 0x30 ] bl
jne r-xdata
sub_4057f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx 0x40
ja r-xdata
push r--data
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] 0x24ae5
call sub_43d1c8
pop ss
pop eax
inc eax
add [ edx - 0x34ffbfa8 ] dh
pop eax
inc eax
add [ edx ] dh
pop eax
inc eax
add ch bh
pop eax
inc eax
add [ edi + 0x58 ] al
inc eax
add [ eax + 0x58 ] ah
inc eax
add [ esi + 0x58 ] ah
inc eax
add bl ah
pop eax
inc eax
add [ ebp + 0x58 ] bh
inc eax
add [ edi + 0x1f004058 ] dl
pop ecx
inc eax
add [ eax ] al
or eax [ ecx ]
add cl [ ebx ]
or ecx [ ebx ]
or eax [ ebx ]
or ecx [ ebx ]
add al 0xb
or ecx [ ebx ]
or ecx [ ebx ]
add eax 0x9080706
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or cl ah
int3
movzx ecx [ ecx + lookup_table_405964 ]
push esi
jmp [ ecx * 4 + jump_table_405934 ]
mov esi [ ebp + 0x8 ]
push 0x3
mov ecx esi
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
call sub_403e50
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x8 ]
mov esi [ ebp + 0x8 ]
push edx
mov ecx esi
call sub_405570
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
movzx eax [ eax + 0x8 ]
movzx eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov esi [ ebp + 0x8 ]
push edx
push eax
call sub_405610
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x8 ]
mov esi [ ebp + 0x8 ]
push ecx
push edx
call sub_405610
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1
push 0x1
add eax 0x8
push eax
push esi
call sub_405730
add esp 0x10
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
movsx eax [ eax + 0x8 ]
mov esi [ ebp + 0x8 ]
cdq
push edx
push eax
call sub_4056a0
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ eax + 0x8 ]
mov esi [ ebp + 0x8 ]
cdq
push edx
push eax
call sub_4056a0
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x8 ]
mov esi [ ebp + 0x8 ]
push ecx
push edx
call sub_4056a0
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp [ eax + 0x8 ] dx
mov eax r--data
jne r-xdata
mov esi [ ebp + 0x8 ]
cdq
push edx
push eax
call sub_405610
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_405570
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax r--data
sub_4059b0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
jb r-xdata
mov ecx [ esi ]
mov dl [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] dl
inc [ esi ]
mov al 0x1
pop esi
pop ebp
retn 0x4
call sub_404f90
test al al
jne r-xdata
pop esi
pop ebp
retn 0x4
sub_4059f0
xor eax eax
mov [ ecx + 0x101 ] eax
mov [ ecx + 0x105 ] eax
mov [ ecx + 0x109 ] eax
mov [ ecx + 0x10d ] eax
mov [ ecx + 0x111 ] eax
mov [ ecx + 0x115 ] eax
mov [ ecx + 0x119 ] eax
mov [ ecx + 0x11d ] ax
mov [ ecx + 0x11f ] al
mov [ ecx + 0x120 ] eax
mov [ ecx + 0x124 ] eax
mov [ ecx + 0x128 ] eax
mov [ ecx + 0x12c ] eax
mov [ ecx + 0x130 ] eax
mov [ ecx + 0x134 ] eax
mov [ ecx + 0x138 ] eax
mov [ ecx + 0x13c ] eax
retn
sub_405a60
push esi
push 0x90
mov esi ecx
push 0x8
push esi
call sub_43d590
push 0x70
lea eax [ esi + 0x90 ]
push 0x9
push eax
call sub_43d590
mov eax 0x7070707
mov [ esi + 0x100 ] eax
mov [ esi + 0x104 ] eax
mov [ esi + 0x108 ] eax
mov [ esi + 0x10c ] eax
mov [ esi + 0x110 ] eax
mov [ esi + 0x114 ] eax
mov eax 0x8080808
mov [ esi + 0x118 ] eax
mov [ esi + 0x11c ] eax
mov eax 0x5050505
mov [ esi + 0x120 ] eax
mov [ esi + 0x124 ] eax
mov [ esi + 0x128 ] eax
mov [ esi + 0x12c ] eax
mov [ esi + 0x130 ] eax
mov [ esi + 0x134 ] eax
mov [ esi + 0x138 ] eax
add esp 0x18
mov [ esi + 0x13c ] eax
pop esi
retn
sub_405b10
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
push edi
mov edi eax
sub edi ecx
dec edi
cmp ecx eax
jb r-xdata
mov ecx [ esi + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
jbe r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp edi [ esi + 0x10 ]
jne r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
cmp edx ebx
jbe r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x10 ]
cmp ecx edx
jae r-xdata
mov eax [ esi ]
mov dl [ eax + edi ]
mov ecx [ esi + 0x4 ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
inc edi
cmp eax [ esi + 0x8 ]
jne r-xdata
xor edi edi
mov ecx [ esi ]
lea edx [ ecx + edi ]
add ecx eax
add eax ebx
mov [ esi + 0x4 ] eax
add edi edx
dec ebx
jne r-xdata
mov ecx esi
call sub_4052e0
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
dec ebx
jne r-xdata
pop ebx
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x8
pop ebx
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x8
sub_405bb0
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
push ebx
mov bl [ ebp + 0x8 ]
mov [ eax + edx ] bl
inc [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
pop ebx
cmp eax [ ecx + 0x8 ]
jne r-xdata
pop ebp
retn 0x4
call sub_4052e0
sub_405be0
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
sub eax [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
dec eax
cmp eax edx
jb r-xdata
mov edx [ ecx ]
mov al [ eax + edx ]
pop ebp
retn 0x4
mov ecx [ ecx ]
add eax edx
mov al [ eax + ecx ]
pop ebp
retn 0x4
sub_405c90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_405cf0
mov eax [ ecx + 0x8 ]
sub eax [ ecx + 0x10 ]
push esi
mov esi 0x20
sub esi [ ecx ]
cdq
shr esi 0x3
push edi
xor edi edi
sub eax esi
sbb edx edi
add eax [ ecx + 0x28 ]
adc edx edi
add eax [ ecx + 0x18 ]
pop edi
adc edx [ ecx + 0x1c ]
pop esi
retn
sub_405d20
mov eax [ ecx + 0x28 ]
test eax eax
jne r-xdata
add eax eax
add eax eax
mov edx 0x20
sub edx [ ecx ]
add eax eax
cmp edx eax
sbb eax eax
neg eax
retn
xor al al
retn
sub_405d40
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
xor esi esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
xor ecx ecx
lea edx [ edi + 0x80 ]
pop edi
pop esi
xor al al
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
inc [ ebp + eax * 4 - 0x44 ]
lea eax [ ebp + eax * 4 - 0x44 ]
mov [ edx ] 0xffffffff
inc ecx
add edx 0x4
cmp ecx 0x120
jb r-xdata
movzx eax [ ebx + ecx ]
cmp eax 0xf
jg r-xdata
xor eax eax
mov [ ebp - 0x44 ] esi
mov [ edi ] esi
mov [ edi + 0x40 ] esi
mov [ ebp - 0x88 ] esi
lea esi [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp + esi * 4 - 0x44 ]
mov ecx 0xf
sub ecx esi
shl edx cl
add eax edx
mov [ ebp - 0x90 ] eax
cmp eax 0x8000
ja r-xdata
cmp esi 0xf
jne r-xdata
mov ecx [ edi + esi * 4 + 0x3c ]
add ecx [ ebp + esi * 4 - 0x48 ]
mov [ edi + esi * 4 ] eax
mov [ edi + esi * 4 + 0x40 ] ecx
mov [ ebp + esi * 4 - 0x84 ] ecx
cmp esi 0x9
jg r-xdata
mov eax 0x8000
inc esi
cmp esi 0xf
jle r-xdata
mov ecx [ ebp - 0x88 ]
shr eax 0x6
cmp ecx eax
jae r-xdata
mov eax [ ebp - 0x90 ]
mov ecx 0x1
mov [ ebp - 0x88 ] ecx
sub ecx ebx
mov [ ebp - 0x8c ] ecx
mov ecx 0x2
sub ecx ebx
mov [ ebp - 0x90 ] ecx
mov ecx 0x3
sub ecx ebx
mov [ ebp - 0x94 ] ecx
mov ecx 0x4
sub ecx ebx
or esi 0xffffffff
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x98 ] ecx
sub esi ebx
sub eax ecx
push eax
lea edx [ edi + ecx + 0x500 ]
push esi
push edx
mov [ ebp - 0x8c ] eax
call sub_43d590
mov eax [ ebp - 0x8c ]
add esp 0xc
add [ ebp - 0x88 ] eax
movzx ecx [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
lea ebx [ esi + eax ]
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
movzx ecx [ eax + 0x1 ]
test ecx ecx
je r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
mov ebx [ ebp - 0x88 ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
movzx ecx [ eax + 0x2 ]
test ecx ecx
je r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
mov ebx [ ebp - 0x8c ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
add ebx eax
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
movzx ecx [ eax + 0x3 ]
test ecx ecx
je r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
mov ebx [ ebp - 0x90 ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
add ebx eax
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
movzx ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
mov ebx [ ebp - 0x94 ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
add ebx eax
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
add [ ebp - 0x88 ] 0x6
add eax 0x6
lea ecx [ esi + eax ]
cmp ecx 0x120
jb r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
mov ebx [ ebp - 0x98 ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
add ebx eax
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
movzx ecx [ eax - 0x1 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov al 0x1
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
sub_405fc0
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
xor edx edx
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
xor ecx ecx
lea esi [ edi + 0x80 ]
lea ebx [ ebx ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
inc [ ebp + eax * 4 - 0x44 ]
lea eax [ ebp + eax * 4 - 0x44 ]
mov [ esi ] 0xffffffff
inc ecx
add esi 0x4
cmp ecx 0x20
jb r-xdata
movzx eax [ ebx + ecx ]
cmp eax 0xf
jg r-xdata
mov [ ebp - 0x44 ] edx
mov [ edi ] edx
mov [ edi + 0x40 ] edx
xor eax eax
mov [ ebp - 0x88 ] edx
mov esi 0x1
lea esp [ esp ]
cmp esi 0xf
jne r-xdata
mov ecx [ edi + esi * 4 + 0x3c ]
add ecx [ ebp + esi * 4 - 0x48 ]
mov [ edi + esi * 4 ] eax
mov [ edi + esi * 4 + 0x40 ] ecx
mov [ ebp + esi * 4 - 0x84 ] ecx
cmp esi 0x9
jg r-xdata
mov eax 0x8000
mov eax [ ebp - 0x8c ]
inc esi
cmp esi 0xf
jle r-xdata
shr eax 0x6
cmp edx eax
jae r-xdata
mov ebx [ ebp + esi * 4 - 0x44 ]
mov ecx 0xf
sub ecx esi
shl ebx cl
add eax ebx
mov [ ebp - 0x8c ] eax
cmp eax 0x8000
ja r-xdata
mov ecx [ ebp - 0x90 ]
mov edx 0x1
sub edx ecx
mov [ ebp - 0x90 ] edx
mov edx 0x2
sub edx ecx
or esi 0xffffffff
mov [ ebp - 0x88 ] 0x1
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8c ] edx
sub esi ecx
lea esp [ esp ]
sub eax edx
mov ebx eax
push ebx
lea ecx [ edi + edx + 0x100 ]
push esi
push ecx
call sub_43d590
add esp 0xc
add [ ebp - 0x88 ] ebx
mov edx [ ebp - 0x88 ]
movzx ecx [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
lea ebx [ esi + eax ]
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
movzx ecx [ eax + 0x1 ]
test ecx ecx
je r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
mov ebx [ ebp - 0x88 ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
movzx ecx [ eax + 0x2 ]
test ecx ecx
je r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
mov ebx [ ebp - 0x90 ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
add ebx eax
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
add [ ebp - 0x88 ] 0x4
add eax 0x4
lea edx [ esi + eax ]
cmp edx 0x20
jb r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
mov ebx [ ebp - 0x8c ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
add ebx eax
mov [ edi + edx * 4 + 0x80 ] ebx
inc edx
mov [ ecx ] edx
movzx ecx [ eax - 0x1 ]
test ecx ecx
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
sub_4061f0
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
xor edx edx
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
xor ecx ecx
lea esi [ edi + 0x80 ]
lea ebx [ ebx ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
inc [ ebp + eax * 4 - 0x44 ]
lea eax [ ebp + eax * 4 - 0x44 ]
mov [ esi ] 0xffffffff
inc ecx
add esi 0x4
cmp ecx 0x13
jb r-xdata
movzx eax [ ebx + ecx ]
cmp eax 0xf
jg r-xdata
mov [ ebp - 0x44 ] edx
mov [ edi ] edx
mov [ edi + 0x40 ] edx
xor eax eax
mov [ ebp - 0x88 ] edx
mov esi 0x1
lea esp [ esp ]
cmp esi 0xf
jne r-xdata
mov ecx [ edi + esi * 4 + 0x3c ]
add ecx [ ebp + esi * 4 - 0x48 ]
mov [ edi + esi * 4 ] eax
mov [ edi + esi * 4 + 0x40 ] ecx
mov [ ebp + esi * 4 - 0x84 ] ecx
cmp esi 0x9
jg r-xdata
mov eax 0x8000
mov eax [ ebp - 0x8c ]
inc esi
cmp esi 0xf
jle r-xdata
shr eax 0x6
cmp edx eax
jae r-xdata
mov ebx [ ebp + esi * 4 - 0x44 ]
mov ecx 0xf
sub ecx esi
shl ebx cl
add eax ebx
mov [ ebp - 0x8c ] eax
cmp eax 0x8000
ja r-xdata
xor eax eax
lea esp [ esp ]
sub eax edx
mov ebx eax
push ebx
lea ecx [ edi + edx + 0xcc ]
push esi
push ecx
call sub_43d590
add esp 0xc
add [ ebp - 0x88 ] ebx
mov edx [ ebp - 0x88 ]
inc eax
cmp eax 0x13
jb r-xdata
mov edx [ ebp + ecx * 4 - 0x84 ]
lea ecx [ ebp + ecx * 4 - 0x84 ]
mov [ edi + edx * 4 + 0x80 ] eax
inc edx
mov [ ecx ] edx
mov edx [ ebp - 0x90 ]
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
sub_406370
push esi
mov esi ecx
cmp [ esi ] 0x8
jb r-xdata
pop esi
retn
push ebx
push edi
lea ebx [ ebx ]
mov eax [ esi + 0x8 ]
mov cl [ eax ]
inc eax
mov [ esi + 0x8 ] eax
jmp r-xdata
lea ecx [ esi + 0x8 ]
call sub_404f90
test al al
je r-xdata
mov eax [ esi ]
movzx edx cl
mov ecx 0x20
sub ecx eax
mov ebx edx
shl ebx cl
add eax 0xfffffff8
or [ esi + 0x30 ] ebx
movzx ecx [ edx + rwxdata ]
mov edx [ esi + 0x4 ]
shl edx 0x8
or ecx edx
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
cmp eax 0x8
jae r-xdata
or cl 0xff
inc [ esi + 0x28 ]
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0xc ]
jb r-xdata
pop edi
pop ebx
sub_406420
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_406370
mov eax [ esi + 0x4 ]
mov ecx 0x8
sub ecx [ esi ]
pop esi
shr eax cl
mov ecx 0x18
sub ecx [ ebp + 0x8 ]
and eax 0xffffff
shr eax cl
pop ebp
retn 0x4
sub_4064c0
mov eax [ ecx + 0x68 ]
test eax eax
jne r-xdata
add eax eax
add eax eax
mov edx 0x20
sub edx [ ecx + 0x40 ]
add eax eax
cmp edx eax
setb al
retn
xor al al
retn
sub_406540
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x44 ]
sub eax [ ecx + 0x4c ]
push ebx
push edi
cdq
mov edi 0x20
sub edi [ ecx + 0x3c ]
xor ebx ebx
shr edi 0x3
sub eax edi
sbb edx ebx
add eax [ ecx + 0x64 ]
pop edi
adc edx ebx
add eax [ ecx + 0x54 ]
pop ebx
adc edx [ ecx + 0x58 ]
mov [ esi ] eax
mov [ esi + 0x4 ] edx
xor eax eax
pop esi
pop ebp
retn 0x8
mov eax 0x80070057
pop esi
pop ebp
retn 0x8
sub_4065d0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_406370
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
add [ esi ] ecx
mov eax 0x1
shl eax cl
dec eax
and eax edx
shr edx cl
mov [ esi + 0x30 ] edx
pop esi
pop ebp
retn 0x4
sub_406620
push esi
mov esi ecx
mov ecx [ esi ]
cmp ecx 0x20
jne r-xdata
mov al [ esi + 0x30 ]
shr [ esi + 0x30 ] 0x8
add ecx 0x8
mov [ esi ] ecx
pop esi
retn
mov eax [ esi + 0x8 ]
push edi
cmp eax [ esi + 0xc ]
jb r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ecx ]
inc ecx
pop edi
mov [ esi + 0x8 ] ecx
pop esi
retn
lea ecx [ esi + 0x8 ]
call sub_404f90
test al al
je r-xdata
or al 0xff
inc [ esi + 0x28 ]
pop edi
pop esi
retn
sub_406690
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_406370
mov ebx [ edi ]
mov eax [ edi + 0x4 ]
mov ecx 0x8
sub ecx ebx
shr eax cl
shr eax 0x9
and eax 0x7fff
cmp eax [ esi + 0x24 ]
jae r-xdata
mov edx 0xa
cmp eax [ esi + 0x28 ]
jb r-xdata
mov ecx eax
shr ecx 0x6
movzx edx [ ecx + esi + 0xcc ]
jmp r-xdata
mov ecx edx
shr [ edi + 0x30 ] cl
add ebx edx
mov [ edi ] ebx
sub eax [ esi + edx * 4 - 0x4 ]
mov ecx 0xf
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0x40 ]
cmp eax 0x13
jb r-xdata
inc edx
cmp eax [ esi + edx * 4 ]
jae r-xdata
mov eax [ esi + eax * 4 + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
sub_406720
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_406370
mov ebx [ edi ]
mov eax [ edi + 0x4 ]
mov ecx 0x8
sub ecx ebx
shr eax cl
shr eax 0x9
and eax 0x7fff
cmp eax [ esi + 0x24 ]
jae r-xdata
mov edx 0xa
cmp eax [ esi + 0x28 ]
jb r-xdata
mov ecx eax
shr ecx 0x6
movzx edx [ ecx + esi + 0x500 ]
jmp r-xdata
mov ecx edx
shr [ edi + 0x30 ] cl
add ebx edx
mov [ edi ] ebx
sub eax [ esi + edx * 4 - 0x4 ]
mov ecx 0xf
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0x40 ]
cmp eax 0x120
jb r-xdata
inc edx
cmp eax [ esi + edx * 4 ]
jae r-xdata
mov eax [ esi + eax * 4 + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
sub_4067b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
call sub_406370
mov ebx [ edi ]
mov eax [ edi + 0x4 ]
mov ecx 0x8
sub ecx ebx
shr eax cl
shr eax 0x9
and eax 0x7fff
cmp eax [ esi + 0x24 ]
jae r-xdata
mov edx 0xa
cmp eax [ esi + 0x28 ]
jb r-xdata
mov ecx eax
shr ecx 0x6
movzx edx [ ecx + esi + 0x100 ]
jmp r-xdata
mov ecx edx
shr [ edi + 0x30 ] cl
add ebx edx
mov [ edi ] ebx
sub eax [ esi + edx * 4 - 0x4 ]
mov ecx 0xf
sub ecx edx
shr eax cl
add eax [ esi + edx * 4 + 0x40 ]
cmp eax 0x20
jb r-xdata
inc edx
cmp eax [ esi + edx * 4 ]
jae r-xdata
mov eax [ esi + eax * 4 + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
sub_406840
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi [ esi ]
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov ecx [ esi ]
add ecx 0x18
call sub_405220
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] 0x0
sub_406870
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x20000
lea ecx [ esi + 0x48 ]
call sub_404f00
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] bl
je r-xdata
mov eax 0x8007000e
pop esi
pop ebp
retn 0x4
pop ebx
xor eax eax
pop esi
pop ebp
retn 0x4
lea ecx [ esi + 0x48 ]
call sub_404e60
mov [ esi + 0x40 ] 0x20
mov [ esi + 0x44 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0xd53 ] bl
sub_4068d0
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x40 ]
mov ecx esi
call sub_406370
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
add [ esi ] ecx
mov eax 0x1
shl eax cl
dec eax
and eax edx
shr edx cl
mov [ esi + 0x30 ] edx
pop esi
pop ebp
retn 0x4
sub_406900
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
lea eax [ ecx + 0xa78 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
lea esi [ ecx + 0x40 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push esi
call sub_406690
cmp eax 0x10
jae r-xdata
cmp eax 0x13
jae r-xdata
mov [ edi + ebx ] al
inc edi
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp eax 0x10
jne r-xdata
cmp edi [ ebp + 0xc ]
jl r-xdata
mov ecx esi
cmp eax 0x11
jne r-xdata
test edi edi
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_406370
mov eax [ esi + 0x30 ]
add [ esi ] 0x7
mov ecx eax
and ecx 0x7f
shr eax 0x7
mov [ esi + 0x30 ] eax
lea eax [ ecx + 0xb ]
call sub_406370
mov eax [ esi + 0x30 ]
add [ esi ] 0x3
mov ecx eax
and ecx 0x7
shr eax 0x3
mov [ esi + 0x30 ] eax
lea eax [ ecx + 0x3 ]
jmp r-xdata
mov ecx esi
call sub_406370
mov eax [ esi + 0x30 ]
add [ esi ] 0x2
mov ecx eax
shr eax 0x2
and ecx 0x3
mov [ esi + 0x30 ] eax
lea eax [ ecx + 0x3 ]
test eax eax
jle r-xdata
cmp edi [ ebp + 0xc ]
jge r-xdata
test eax eax
jle r-xdata
lea esp [ esp ]
mov [ edi + ebx ] 0x0
dec eax
inc edi
test eax eax
jg r-xdata
mov cl [ edi + ebx - 0x1 ]
mov [ edi + ebx ] cl
dec eax
inc edi
test eax eax
jg r-xdata
cmp edi [ ebp + 0xc ]
jge r-xdata
jmp r-xdata
sub_406a00
push ebp
mov ebp esp
sub esp 0x2a4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi ecx
lea ecx [ edi + 0x40 ]
call sub_406370
mov eax [ edi + 0x70 ]
inc [ edi + 0x40 ]
mov ecx eax
and ecx 0x1
shr eax 0x1
cmp ecx 0x1
mov [ edi + 0x70 ] eax
sete al
lea ecx [ edi + 0x40 ]
mov [ edi + 0xd48 ] al
call sub_406370
mov eax [ edi + 0x70 ]
add [ edi + 0x40 ] 0x2
mov ecx eax
and ecx 0x3
shr eax 0x2
mov [ edi + 0x70 ] eax
cmp ecx 0x2
jbe r-xdata
test ecx ecx
jne r-xdata
pop edi
xor al al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov [ edi + 0xd49 ] 0x0
cmp ecx 0x1
jne r-xdata
mov [ edi + 0xd49 ] 0x1
mov eax [ edi + 0x40 ]
mov ecx eax
neg ecx
and ecx 0x7
shr [ edi + 0x70 ] cl
add eax ecx
lea ecx [ edi + 0x40 ]
mov [ edi + 0x40 ] eax
call sub_406370
mov eax [ edi + 0x70 ]
add [ edi + 0x40 ] 0x10
movzx ecx ax
shr eax 0x10
mov [ edi + 0x70 ] eax
cmp [ edi + 0xd50 ] 0x0
mov [ edi + 0xd44 ] ecx
je r-xdata
lea ecx [ edi + 0x40 ]
call sub_406370
mov eax [ edi + 0x70 ]
add [ edi + 0x40 ] 0x5
mov ecx eax
and ecx 0x1f
add ecx 0x101
shr eax 0x5
mov [ ebp - 0x2a0 ] ecx
lea ecx [ edi + 0x40 ]
mov [ edi + 0x70 ] eax
call sub_406370
mov eax [ edi + 0x70 ]
add [ edi + 0x40 ] 0x5
mov ecx eax
and ecx 0x1f
shr eax 0x5
inc ecx
mov [ edi + 0x70 ] eax
mov [ edi + 0xd4c ] ecx
lea ecx [ edi + 0x40 ]
call sub_406370
mov eax [ edi + 0x70 ]
add [ edi + 0x40 ] 0x4
mov ecx eax
and ecx 0xf
shr eax 0x4
add ecx 0x4
mov [ edi + 0x70 ] eax
cmp [ edi + 0xd51 ] 0x0
mov [ ebp - 0x2a4 ] ecx
jne r-xdata
lea ecx [ ebp - 0x298 ]
call sub_405a60
xor edx edx
cmp [ edi + 0xd51 ] dl
setne dl
lea edx [ edx + edx + 0x1e ]
mov [ edi + 0xd4c ] edx
jmp r-xdata
lea ecx [ edi + 0x40 ]
call sub_406370
mov eax [ edi + 0x70 ]
add [ edi + 0x40 ] 0x10
movzx ecx ax
shr eax 0x10
not ecx
mov [ edi + 0x70 ] eax
movzx ecx cx
xor eax eax
cmp [ edi + 0xd44 ] ecx
pop edi
sete al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
pop edi
mov al 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x29c ] eax
push ebx
jmp r-xdata
cmp [ edi + 0xd4c ] 0x1e
ja r-xdata
lea edx [ ebp - 0x298 ]
push edx
lea ecx [ edi + 0x78 ]
call sub_405d40
test al al
je r-xdata
movzx ebx [ eax + r--data ]
cmp eax [ ebp - 0x2a4 ]
jge r-xdata
lea eax [ ebp - 0x178 ]
push eax
lea ecx [ edi + 0x778 ]
call sub_405fc0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov [ ebp + ebx - 0x18 ] 0x0
lea ecx [ edi + 0x40 ]
call sub_406370
mov eax [ edi + 0x70 ]
add [ edi + 0x40 ] 0x3
mov ecx eax
and ecx 0x7
shr eax 0x3
mov [ edi + 0x70 ] eax
mov eax [ ebp - 0x29c ]
mov [ ebp + ebx - 0x18 ] cl
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ edi + 0xa78 ]
call sub_4061f0
pop ebx
test al al
je r-xdata
inc eax
mov [ ebp - 0x29c ] eax
cmp eax 0x13
jb r-xdata
mov ecx [ edi + 0xd4c ]
mov esi [ ebp - 0x2a0 ]
add ecx esi
push ecx
lea edx [ ebp - 0x158 ]
push edx
mov ecx edi
call sub_406900
test al al
je r-xdata
lea ecx [ ebp - 0x298 ]
call sub_4059f0
push esi
lea eax [ ebp - 0x158 ]
push eax
lea ecx [ ebp - 0x298 ]
push ecx
call sub_43bd20
mov edx [ edi + 0xd4c ]
push edx
lea eax [ ebp + esi - 0x158 ]
push eax
lea ecx [ ebp - 0x178 ]
push ecx
call sub_43bd20
add esp 0x18
sub_406cc0
push ebp
mov ebp esp
sub esp 0xc
push edi
mov edi ecx
mov eax [ edi + 0xd54 ]
cmp eax 0xffffffff
jne r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0xd52 ] 0x0
jne r-xdata
cmp [ edi + 0xd54 ] 0x0
push esi
jle r-xdata
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x4
movzx ecx [ edi + 0xd53 ]
push ecx
mov ecx edi
call sub_406870
test eax eax
jne r-xdata
movzx eax [ edi + 0xd51 ]
neg eax
sbb eax eax
and eax 0x8000
add eax 0x8000
lea ecx [ edi + 0x18 ]
push eax
call sub_405100
test al al
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x4
movzx edx [ edi + 0xd52 ]
lea ecx [ edi + 0x18 ]
push edx
call sub_410be0
mov [ edi + 0xd48 ] 0x0
mov [ edi + 0xd54 ] 0x0
mov [ edi + 0xd5c ] 0x1
mov eax 0x8007000e
pop edi
mov esp ebp
pop ebp
retn 0x4
pop esi
xor eax eax
pop ebx
lea ecx [ ecx ]
dec [ edi + 0xd54 ]
mov eax [ edi + 0x1c ]
sub eax [ edi + 0xd58 ]
mov edx [ edi + 0x28 ]
lea ecx [ edi + 0x18 ]
dec eax
cmp eax edx
jb r-xdata
cmp [ edi + 0xd49 ] 0x0
je r-xdata
cmp [ edi + 0xd48 ] 0x0
jne r-xdata
mov edx [ ecx ]
mov al [ eax + edx ]
mov esi [ ecx + 0x4 ]
mov ebx edx
mov [ esi + ebx ] al
inc [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
add eax edx
test ebx ebx
je r-xdata
cmp [ edi + 0xd44 ] 0x0
jbe r-xdata
pop esi
pop ebx
mov [ edi + 0xd54 ] 0xffffffff
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_406a00
test al al
je r-xdata
mov ebx [ ebp + 0x8 ]
dec ebx
cmp [ edi + 0xd54 ] 0x0
mov [ ebp + 0x8 ] ebx
jg r-xdata
call sub_4052e0
lea ecx [ ecx ]
sete al
mov [ edi + 0xd5c ] al
jmp r-xdata
test ebx ebx
je r-xdata
pop esi
pop ebx
mov eax 0x1
pop edi
mov esp ebp
pop ebp
retn 0x4
mov [ edi + 0xd5c ] 0x0
lea esi [ edi + 0x40 ]
push esi
lea ecx [ edi + 0x78 ]
call sub_406720
cmp eax 0x100
jae r-xdata
test ebx ebx
jne r-xdata
cmp [ edi + 0xd44 ] 0x0
mov [ ebp + 0x8 ] ebx
mov ecx [ edi + 0x40 ]
cmp ecx 0x20
jne r-xdata
je r-xdata
mov edx [ edi + 0x1c ]
mov esi [ edi + 0x18 ]
lea ecx [ edi + 0x18 ]
mov [ edx + esi ] al
inc [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
cmp [ edi + 0xd5c ] 0x0
je r-xdata
pop esi
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x4
mov al [ edi + 0x70 ]
add ecx 0x8
shr [ edi + 0x70 ] 0x8
mov [ edi + 0x40 ] ecx
mov ecx [ edi + 0x48 ]
cmp ecx [ edi + 0x4c ]
jb r-xdata
mov [ edi + 0xd5c ] 0x1
jmp r-xdata
cmp eax 0x11e
jae r-xdata
dec ebx
mov [ ebp + 0x8 ] ebx
jmp r-xdata
call sub_4052e0
dec [ edi + 0xd44 ]
dec ebx
cmp [ edi + 0xd44 ] 0x0
ja r-xdata
call sub_4052e0
mov ecx [ edi + 0x48 ]
mov al [ ecx ]
inc ecx
mov [ edi + 0x48 ] ecx
jmp r-xdata
lea ecx [ edi + 0x48 ]
call sub_404f90
test al al
je r-xdata
cmp [ edi + 0xd51 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
mov edx [ edi + 0x1c ]
mov esi [ edi + 0x18 ]
lea ecx [ edi + 0x18 ]
mov [ edx + esi ] al
inc [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
or al 0xff
inc [ edi + 0x68 ]
jmp r-xdata
movzx edx [ eax + r--data ]
movzx ebx [ eax + r--data ]
mov [ ebp - 0x4 ] edx
movzx ecx [ eax + r--data ]
movzx ebx [ eax + r--data ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ edi + 0x68 ] 0x4
ja r-xdata
push esi
lea ecx [ edi + 0x778 ]
call sub_4067b0
mov [ ebp - 0xc ] eax
cmp eax [ edi + 0xd4c ]
jae r-xdata
mov [ ebp - 0x8 ] ecx
mov ecx esi
call sub_406370
mov edx [ esi + 0x30 ]
add [ esi ] ebx
mov ecx ebx
mov eax 0x1
shl eax cl
dec eax
and eax edx
shr edx cl
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + eax + 0x3 ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x30 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
cmp eax ecx
jbe r-xdata
movzx ebx [ eax + r--data ]
mov ecx esi
call sub_406370
mov edx [ esi + 0x30 ]
add [ esi ] ebx
mov ecx ebx
mov ebx [ ebp - 0x8 ]
mov eax 0x1
shl eax cl
push ebx
dec eax
and eax edx
shr edx cl
lea ecx [ edi + 0x18 ]
mov [ esi + 0x30 ] edx
mov edx [ ebp - 0xc ]
mov esi [ edx * 4 + r--data ]
add esi eax
push esi
call sub_405b10
test al al
je r-xdata
sub [ ebp + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
sub eax ebx
mov ebx [ ebp + 0x8 ]
jne r-xdata
mov [ edi + 0xd54 ] eax
mov [ edi + 0xd58 ] esi
sub_407020
push ebp
mov ebp esp
push 0xffffffff
push sub_450948
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ ebp + 0x8 ]
xor ebx ebx
push eax
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] ebx
call sub_405150
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0xd53 ] bl
je r-xdata
mov eax [ esi + 0x48 ]
sub eax [ esi + 0x50 ]
mov ecx 0x20
sub ecx [ esi + 0x40 ]
cdq
xor ebx ebx
shr ecx 0x3
sub eax ecx
sbb edx ebx
add eax [ esi + 0x68 ]
adc edx ebx
add eax [ esi + 0x58 ]
adc edx [ esi + 0x5c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
jmp r-xdata
push edi
mov ecx esi
call sub_406cc0
mov edi eax
test edi edi
je r-xdata
lea ecx [ esi + 0x18 ]
call sub_405080
mov ecx [ ebx ]
sub ecx eax
mov eax [ ebx + 0x4 ]
sbb eax edx
add ecx [ ebp - 0x30 ]
adc eax [ ebp - 0x2c ]
test eax eax
ja r-xdata
lea ecx [ esi + 0x18 ]
call sub_405080
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] edx
cmp [ esi + 0xd54 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x0
je r-xdata
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0xd54 ] 0xffffffff
jne r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
lea ecx [ esi + 0x18 ]
call sub_405220
mov edi ecx
test ecx ecx
je r-xdata
cmp ecx edi
jae r-xdata
mov edi 0x40000
test ebx ebx
je r-xdata
mov eax [ esi + 0x48 ]
sub eax [ esi + 0x50 ]
mov ecx 0x20
sub ecx [ esi + 0x40 ]
cdq
shr ecx 0x3
xor edi edi
sub eax ecx
sbb edx edi
add eax [ esi + 0x68 ]
lea ecx [ esi + 0x18 ]
adc edx edi
add eax [ esi + 0x58 ]
adc edx [ esi + 0x5c ]
sub eax [ ebp - 0x28 ]
sbb edx [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_405080
sub eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x38 ]
sbb edx [ ebp - 0x2c ]
push ecx
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x34 ] edx
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea ecx [ ebp - 0x40 ]
push ecx
push eax
call edx
mov edi eax
test edi edi
je r-xdata
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x1c ] 0x0
call sub_405220
mov ebx eax
xor edi edi
cmp ebx edi
jne r-xdata
cmp [ esi + 0xd5d ] 0x0
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ esi + 0x2c ] 0x0
cmp [ ebp - 0x1c ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x20 ]
mov eax [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x0
cmp eax edi
je r-xdata
mov eax [ esi + 0x68 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x40 ]
mov ecx eax
neg ecx
and ecx 0x7
shr [ esi + 0x70 ] cl
add eax ecx
mov [ esi + 0x40 ] eax
xor ebx ebx
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
lea ecx [ esi + 0x18 ]
call sub_405220
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] edi
lea edx [ eax * 8 ]
mov eax 0x20
sub eax [ esi + 0x40 ]
cmp eax edx
setb al
test al al
je r-xdata
mov ecx [ esi + 0x40 ]
cmp ecx 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov esi [ ebp - 0x20 ]
mov eax [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x0
cmp eax edi
je r-xdata
mov al [ esi + 0x70 ]
shr [ esi + 0x70 ] 0x8
add ecx 0x8
mov [ esi + 0x40 ] ecx
mov [ ebx + esi + 0xd5e ] al
inc ebx
jmp r-xdata
mov ecx [ esi + 0x48 ]
cmp ecx [ esi + 0x4c ]
jb r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] edi
cmp ebx 0x4
jge r-xdata
mov ecx [ esi + 0x48 ]
mov al [ ecx ]
inc ecx
mov [ esi + 0x48 ] ecx
mov [ ebx + esi + 0xd5e ] al
inc ebx
jmp r-xdata
lea ecx [ esi + 0x48 ]
call sub_404f90
test al al
je r-xdata
inc [ esi + 0x68 ]
or al 0xff
mov [ ebx + esi + 0xd5e ] al
inc ebx
jmp r-xdata
sub_407340
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov edx [ eax + 0xc ]
lea esi [ edi + 0x8 ]
push ecx
push esi
call edx
mov ebx [ ebp + 0x18 ]
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0xc ]
lea eax [ edi + 0xc ]
push ebx
push eax
call edx
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x10 ]
push eax
push ebx
push ecx
mov ecx edi
call sub_407020
mov edx [ esi ]
mov edi eax
mov eax [ edx + 0x10 ]
push esi
call eax
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_407390
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x4c ] 0x0
sub_4073c0
push ebp
mov ebp esp
push 0xffffffff
push sub_450970
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x8 ]
call sub_405080
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push ecx
lea ecx [ esi - 0x10 ]
mov [ ebp - 0x1c ] edx
mov [ esi + 0x28 ] eax
call sub_406cc0
test eax eax
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test ebx ebx
je r-xdata
lea ecx [ esi + 0x8 ]
call sub_405220
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ esi + 0x8 ]
call sub_405080
sub eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
mov [ ebx ] eax
sub_4074b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movzx eax [ esi + 0xd52 ]
push eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0xd54 ] 0xfffffffe
call sub_410be0
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
push edx
push eax
mov ecx esi
call sub_407020
pop esi
pop ebp
retn 0x10
sub_4074f0
push ebp
mov ebp esp
push 0xffffffff
push sub_45099b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
xor ebx ebx
mov [ esi + 0x14 ] ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x38 ] ebx
lea ecx [ esi + 0x48 ]
mov [ ebp - 0x4 ] ebx
call sub_404ee0
mov al [ ebp + 0xc ]
mov cl [ ebp + 0x8 ]
mov [ esi + 0xd50 ] al
mov [ esi + 0xd51 ] cl
mov [ esi + 0xd52 ] 0x100
mov [ esi + 0xd5d ] bl
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4075b0
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x118 ]
push eax
mov [ ebp - 0x118 ] 0x114
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_43bd0f
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x108 ] 0x2
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_407610
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_43bd0f
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x118 ]
push ecx
mov [ rwxdata ] eax
mov [ ebp - 0x118 ] 0x114
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0x108 ] 0x2
je r-xdata
sub_4077f0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push 0x8
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_411f40
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] edx
xor eax eax
sub_407840
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax ecx
mov edx [ eax + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] edx
push 0x8
lea edx [ ebp - 0xc ]
push edx
push ecx
mov [ ebp - 0x8 ] eax
call sub_411fb0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0xc
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
sub_4078a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x6
jb r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ eax + eax * 2 ]
mov ecx [ eax * 4 + rwxdata ]
lea eax [ eax * 4 + rwxdata ]
mov [ edx ] ecx
mov ax [ eax + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ ecx ] ax
mov [ edx ] 0x0
xor eax eax
pop ebp
retn 0x14
mov eax 0x80070057
pop ebp
retn 0x14
sub_407920
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
cmp [ ebp + 0xc ] 0x2c
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_411270
lea ecx [ ebp - 0x10 ]
call sub_4110c0
xor eax eax
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov edx [ eax + 0x54 ]
mov eax [ eax + 0x50 ]
push edx
push eax
lea ecx [ ebp - 0x10 ]
call sub_411b80
sub_4079b0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
add ecx 0x5c
call sub_412220
pop ebp
retn 0x10
sub_407a30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_407b10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_407b50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_407ba0
push ebp
mov ebp esp
push ebx
mov ebx [ ecx + 0x8 ]
push esi
mov esi ebx
sub esi [ ecx + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
dec esi
cmp edi esi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp ebx 0x40
jle r-xdata
xor eax eax
cmp ebx 0x8
setle al
dec eax
and eax 0xc
add eax 0x4
mov eax ebx
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
add ebx eax
push ebx
call sub_4026e0
sub edi esi
mov eax edi
lea edx [ eax + esi ]
cmp edx edi
jge r-xdata
sub_407bf0
mov eax [ ecx + 0x48 ]
sub eax [ ecx + 0x50 ]
push esi
mov esi 0x20
sub esi [ ecx + 0x40 ]
cdq
shr esi 0x3
push edi
xor edi edi
sub eax esi
sbb edx edi
add eax [ ecx + 0x68 ]
adc edx edi
add eax [ ecx + 0x58 ]
pop edi
adc edx [ ecx + 0x5c ]
pop esi
retn
sub_407c20
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
push 0x0
lea ecx [ esi + 0x10 ]
mov [ esi + 0x8 ] 0x0
call sub_414940
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov eax esi
pop esi
retn
sub_407c60
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_407d20
push ebp
mov ebp esp
push esi
mov esi ecx
lea ecx [ esi + 0x10 ]
call sub_4144b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_407d50
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_407d80
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_407dd0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
movzx edx [ esi + 0x1 ]
movzx ecx [ esi ]
mov eax 0x8b1f
mov [ ebp - 0x10 ] ax
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
and dl 0x8
mov [ ebp - 0xc ] eax
mov [ ebp - 0xe ] cl
movzx ecx [ esi + 0x2 ]
mov [ ebp - 0xd ] dl
movzx edx [ esi + 0x3 ]
push 0xa
lea eax [ ebp - 0x10 ]
push eax
push edi
mov [ ebp - 0x8 ] cl
mov [ ebp - 0x7 ] dl
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
test [ esi + 0x1 ] 0x8
je r-xdata
xor eax eax
mov eax [ esi + 0x14 ]
mov esi [ esi + 0x10 ]
inc eax
push eax
push esi
push edi
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
sub_407e60
push ebp
mov ebp esp
push 0xffffffff
push sub_4509d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor eax eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
add eax 0xfffffffd
mov bl 0x1
mov [ ebp - 0x4 ] bl
cmp eax 0x14
ja r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_411270
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_4110c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
movzx edx [ eax + lookup_table_408008 ]
jmp [ edx * 4 + jump_table_407fec ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x15 ] 0x8
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x17 ]
cmp al 0x14
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
add eax 0x24
push 0x0
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_4106e0
add esp 0xc
mov eax [ eax ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x2
call sub_411620
mov ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0x4
jmp r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call sub_414aa0
add esp 0x8
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x34 ]
call sub_411c30
jmp r-xdata
mov eax [ eax + 0x20 ]
push 0x0
push eax
lea ecx [ ebp - 0x34 ]
call sub_411b80
jmp r-xdata
mov ecx [ eax + 0x54 ]
mov edx [ eax + 0x50 ]
push ecx
push edx
lea ecx [ ebp - 0x34 ]
call sub_411b80
jmp r-xdata
mov eax [ rwxdata ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_4116e0
jmp r-xdata
movzx ecx al
mov eax [ ecx * 4 + rwxdata ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_4116e0
jmp r-xdata
mov edx [ eax + 0x1c ]
push edx
lea ecx [ ebp - 0x34 ]
call sub_411ac0
sub_40800f
push es
push es
add eax [ esi ]
push es
push es
push es
push es
push es
add al 0x6
push es
push es
add eax 0x55cccccc
mov ebp esp
push 0xffffffff
push sub_4509f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ eax + 0x10 ]
lea ebx [ esi + 0x40 ]
push ebx
push 0x1
push 0x0
push 0x0
mov [ ebp - 0x4 ] 0x0
push edi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0x1
call ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x10
mov edx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
push edi
push eax
mov eax [ edx + 0xc ]
call eax
mov edi eax
test edi edi
jne r-xdata
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
push 0x2
push 0xffffffff
push 0xfffffff8
push eax
mov eax [ ecx + 0x10 ]
call eax
mov ecx [ ebp - 0x2c ]
sub ecx [ ebx ]
mov edx [ ebp - 0x28 ]
sbb edx [ ebx + 0x4 ]
add ecx 0x8
mov edi eax
adc edx 0x0
mov [ esi + 0x50 ] ecx
mov [ esi + 0x54 ] edx
mov [ esi + 0x58 ] 0x1
test edi edi
jne r-xdata
mov eax edi
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x10 ]
push esi
call edx
mov eax edi
jmp r-xdata
mov ebx [ ebp - 0x20 ]
push 0x8
lea eax [ ebp - 0x1c ]
push eax
push ebx
call sub_411f40
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] edx
xor edi edi
mov edi eax
jmp r-xdata
mov [ esi + 0x5c ] ebx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
sub_408135
mov esi [ ebp - 0x24 ]
mov ecx [ esi ]
mov edx [ ecx + 0x10 ]
mov edi [ ebp - 0x20 ]
push esi
call edx
mov eax edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x10
sub_40814d
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x10
sub_408170
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x58 ] 0x0
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov eax [ esi + 0x64 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0x10 ]
add eax 0x8
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x5c ] 0x0
sub_4081d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_408260
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_4082d0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
xor ecx ecx
mov [ esi + 0x4 ] 0x0
mov [ eax ] cx
mov edx [ edi + 0x4 ]
push edx
mov ecx esi
call sub_403e50
mov edx [ edi ]
mov ecx [ esi ]
jmp r-xdata
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
sub_408320
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
mov ecx [ ecx ]
mov dx [ ebp + 0x8 ]
cmp [ ecx + eax * 2 - 0x2 ] dx
lea eax [ ecx + eax * 2 - 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
pop ebp
retn 0x4
jmp r-xdata
cmp eax ecx
je r-xdata
sub eax 0x2
cmp [ eax ] dx
jne r-xdata
sub_408360
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov eax [ edi + 0x4 ]
push eax
call sub_4026e0
mov edx [ edi ]
mov ecx [ esi ]
jmp r-xdata
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov ecx [ edi + 0x4 ]
pop edi
mov [ esi + 0x4 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4083b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov [ esi + 0x4 ] 0x0
mov [ eax ] 0x0
mov ecx [ edi + 0x4 ]
push ecx
mov ecx esi
call sub_4026e0
mov edx [ edi ]
mov ecx [ esi ]
lea esp [ esp ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov edx [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
sub_408400
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
mov ecx edi
sub ecx [ esi + 0x4 ]
dec ecx
cmp ecx 0x1
jge r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dl [ ebp + 0x8 ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp edi 0x40
jle r-xdata
xor eax eax
cmp edi 0x8
setle al
dec eax
and eax 0xc
add eax 0x4
mov eax edi
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
add edi eax
push edi
mov ecx esi
call sub_4026e0
mov eax 0x1
sub eax ecx
lea edx [ eax + ecx ]
cmp edx 0x1
jge r-xdata
sub_4084b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
lea ecx [ esi + 0x10 ]
call sub_4144b0
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_4084e0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_408510
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_408540
push ebp
mov ebp esp
push edi
xor edi edi
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x68 ]
pop edi
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov edi edi
add eax eax
add eax eax
mov edx 0x20
sub edx [ ecx + 0x40 ]
add eax eax
cmp edx eax
setb al
xor ecx ecx
test al al
setne cl
mov eax ecx
pop ebp
retn
xor al al
xor ecx ecx
test al al
setne cl
mov eax ecx
pop ebp
retn
lea ecx [ esi + 0x40 ]
call sub_406370
mov eax [ esi + 0x70 ]
add [ esi + 0x40 ] 0x8
movzx ecx al
shr eax 0x8
mov [ esi + 0x70 ] eax
mov eax [ ebp + 0xc ]
mov [ edi + eax ] cl
inc edi
cmp edi ebx
jb r-xdata
pop esi
sub_4085b0
push edi
mov edi eax
test edi edi
je r-xdata
mov eax [ ebx + 0x68 ]
pop edi
test eax eax
jne r-xdata
push esi
mov ecx 0x20
sub ecx [ ebx + 0x40 ]
lea edx [ eax * 8 ]
cmp ecx edx
setb al
xor ecx ecx
test al al
setne cl
mov eax ecx
retn
xor al al
xor ecx ecx
test al al
setne cl
mov eax ecx
retn
lea ecx [ ebx + 0x40 ]
call sub_406370
add [ ebx + 0x40 ] 0x8
shr [ ebx + 0x70 ] 0x8
dec edi
jne r-xdata
pop esi
sub_408600
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov [ ecx ] ax
xor edi edi
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx edi
mov dx bx
shl dx cl
add edi 0x8
or [ eax ] dx
cmp edi 0x10
jl r-xdata
lea ecx [ esi + 0x40 ]
call sub_406370
mov eax [ esi + 0x70 ]
add [ esi + 0x40 ] 0x8
movzx ebx al
shr eax 0x8
mov ecx esi
mov [ esi + 0x70 ] eax
call sub_4064c0
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
sub_408660
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ eax ]
mov [ eax ] 0x0
cmp [ ebp + 0x10 ] edi
jbe r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ esi + 0x40 ]
call sub_406370
mov eax [ esi + 0x70 ]
add [ esi + 0x40 ] 0x8
movzx ebx al
shr eax 0x8
mov ecx esi
mov [ esi + 0x70 ] eax
call sub_4064c0
test al al
jne r-xdata
test bl bl
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
call sub_408400
inc edi
cmp edi [ ebp + 0x10 ]
jb r-xdata
sub_4086d0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ esi + 0x14 ] eax
mov [ ecx ] al
mov edx [ esi + 0x1c ]
mov [ esi + 0x20 ] eax
push edi
mov edi [ ebp + 0x8 ]
mov [ edx ] al
lea eax [ ebp - 0x10 ]
push eax
push edi
mov ebx 0xa
call sub_408540
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov ecx 0x8b1f
cmp [ ebp - 0x10 ] cx
je r-xdata
mov al [ ebp - 0xe ]
mov [ esi ] al
cmp al 0x8
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xc ]
mov al [ ebp - 0xd ]
mov cl [ ebp - 0x8 ]
mov [ esi + 0x4 ] edx
mov dl [ ebp - 0x7 ]
mov [ esi + 0x1 ] al
mov [ esi + 0x2 ] cl
mov [ esi + 0x3 ] dl
test al 0x4
je r-xdata
test [ esi + 0x1 ] 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push edi
call sub_408600
add esp 0x8
test eax eax
jne r-xdata
test [ esi + 0x1 ] 0x10
je r-xdata
push 0x400
lea eax [ esi + 0x10 ]
push eax
push edi
call sub_408660
add esp 0xc
test eax eax
jne r-xdata
movzx eax [ ebp - 0x14 ]
mov ebx edi
call sub_4085b0
test eax eax
jne r-xdata
test [ esi + 0x1 ] 0x2
je r-xdata
push 0x10000
lea eax [ esi + 0x1c ]
push eax
push edi
call sub_408660
add esp 0xc
test eax eax
jne r-xdata
mov ecx edi
call sub_4064c0
xor edx edx
test al al
setne dl
mov eax edx
lea ecx [ ebp - 0x14 ]
push ecx
push edi
call sub_408600
add esp 0x8
test eax eax
jne r-xdata
sub_4087f0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0xc ]
push eax
push esi
mov ebx 0x8
mov edi ecx
call sub_408540
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ esi + 0x68 ]
test eax eax
jne r-xdata
mov ecx 0x20
sub ecx [ esi + 0x40 ]
lea edx [ eax * 8 ]
cmp ecx edx
setb al
xor al al
jmp r-xdata
xor ecx ecx
test al al
setne cl
mov eax ecx
sub_408870
push ebp
mov ebp esp
push 0xffffffff
push sub_450a20
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov ecx [ esi - 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ esi - 0x4 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp - 0x4 ] 0x1
call edx
mov eax [ esi + 0x60 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
add eax 0x8
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov edi [ esi + 0x60 ]
push 0x20000
lea ecx [ edi + 0x48 ]
call sub_404f00
cmp al bl
je r-xdata
mov ecx [ esi + 0x60 ]
push ecx
lea ecx [ esi + 0x10 ]
call sub_4086d0
mov ecx [ esi + 0x60 ]
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x48 ]
sub eax [ ecx + 0x50 ]
mov edi 0x20
sub edi [ ecx + 0x40 ]
xor ebx ebx
cdq
shr edi 0x3
sub eax edi
sbb edx ebx
add eax [ ecx + 0x68 ]
mov [ ebp - 0x4 ] ebx
adc edx ebx
add eax [ ecx + 0x58 ]
adc edx [ ecx + 0x5c ]
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] edx
cmp [ ebp + 0xc ] ebx
je r-xdata
lea ecx [ edi + 0x48 ]
call sub_404e60
mov [ edi + 0x40 ] 0x20
mov [ edi + 0x44 ] ebx
mov [ edi + 0x68 ] ebx
mov [ edi + 0x70 ] ebx
mov [ edi + 0xd53 ] bl
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi - 0x4 ]
mov eax [ edx + 0x10 ]
add esi 0xfffffffc
push esi
call eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_408970
mov esi [ ebp + 0x8 ]
mov edx [ esi - 0x4 ]
mov eax [ edx + 0x10 ]
add esi 0xfffffffc
push esi
call eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4089c0
push ebp
mov ebp esp
push 0xffffffff
push sub_450a73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x10 ]
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
jne r-xdata
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x5c ] edi
je r-xdata
cmp eax 0x1
jne r-xdata
mov edx [ ebx ]
mov ecx [ edx + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
push ebx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
call ecx
cmp eax edi
jne r-xdata
mov edx [ esi + 0x54 ]
mov eax [ esi + 0x50 ]
mov ecx [ ebx ]
mov ecx [ ecx + 0xc ]
push edx
push eax
push ebx
call ecx
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
cmp [ eax ] edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ ebp + 0x10 ] edi
mov eax [ ebx ]
xor edx edx
cmp [ ebp + 0x14 ] edx
lea ecx [ ebp + 0x10 ]
setne dl
mov [ ebp - 0x4 ] 0x1
mov edi edx
mov edx [ eax + 0x14 ]
push edi
push ecx
push 0x0
push ebx
call edx
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x18 ]
push edi
push ebx
call ecx
push 0x20
call sub_43c55a
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov [ eax + 0x8 ] edi
mov ebx eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_407d80
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x18 ] 0xffffffff
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push ebx
call eax
mov [ ebp + 0xc ] ebx
cmp ebx edi
je r-xdata
push 0x38
call sub_43c55a
add esp 0x4
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax edi
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ ebp + 0x10 ] edi
xor edi edi
mov [ ebp - 0x14 ] edi
mov ecx eax
call sub_415060
mov edi eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
push 0x1
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x4
call sub_414f50
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov [ ebp - 0x4 ] 0x2
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ ebp + 0x17 ] 0x1
mov edx [ esi + 0x44 ]
mov ecx [ eax ]
push 0x0
push 0x0
push edx
mov edx [ esi + 0x40 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
push 0x3
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
call sub_4026e0
xor ebx ebx
push 0x3
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
call sub_4026e0
mov [ ebp - 0x4 ] 0x6
cmp [ ebp + 0x17 ] bl
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
cmp ecx eax
je r-xdata
mov ecx [ esi + 0x64 ]
push 0x1
call sub_406870
mov [ ebp - 0x4 ] 0x2
test edi edi
je r-xdata
mov ecx [ esi + 0x64 ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_4086d0
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi + 0x5c ] ebx
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
cmp ecx eax
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push ecx
call eax
xor eax eax
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0x1
call ecx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
call edx
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
mov [ ebp - 0x28 ] edx
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] eax
mov [ edi + 0x18 ] 0xffffffff
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
push 0x0
push edx
push eax
mov eax [ ecx + 0x14 ]
mov [ ebp + 0x17 ] 0x0
call eax
mov ebx eax
test ebx ebx
je r-xdata
cmp ebx 0x1
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx eax
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push ecx
call eax
xor eax eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x64 ]
mov edx [ eax + 0x40 ]
mov ecx edx
neg ecx
and ecx 0x7
shr [ eax + 0x70 ] cl
add edx ecx
mov [ eax + 0x40 ] edx
mov eax [ esi + 0x64 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_4087f0
test eax eax
je r-xdata
lea ecx [ ebp - 0x58 ]
cmp ebx 0x1
je r-xdata
movzx esi [ ebp + 0x17 ]
mov eax [ ebp - 0x3c ]
neg esi
sbb esi esi
push eax
and esi 0x2
mov [ ebp - 0x4 ] 0x4
call sub_43c44d
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43c44d
add esp 0x8
jmp r-xdata
mov edx [ ebp - 0x3c ]
push edx
call sub_43c44d
mov eax [ ebp - 0x48 ]
push eax
call sub_43c44d
add esp 0x8
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push ecx
call eax
mov ecx [ edi + 0x18 ]
not ecx
cmp [ ebp - 0x50 ] ecx
jne r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x2
jmp r-xdata
call sub_402a00
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi 0x3
mov eax [ edi + 0x10 ]
sub eax [ ebp - 0x28 ]
mov edx [ edi + 0x14 ]
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0x4c ] eax
jne r-xdata
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x4
call sub_402a00
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x1c ]
call eax
mov esi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
xor edi edi
mov [ ebp + 0xc ] edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x4
call sub_402a00
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ esi + 0x64 ]
mov eax [ ecx + 0x48 ]
sub eax [ ecx + 0x50 ]
mov edi 0x20
sub edi [ ecx + 0x40 ]
cdq
shr edi 0x3
xor ebx ebx
sub eax edi
mov edi [ ebp - 0x18 ]
sbb edx ebx
add eax [ ecx + 0x68 ]
adc edx ebx
add eax [ ecx + 0x58 ]
adc edx [ ecx + 0x5c ]
mov ecx [ ebp - 0x14 ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] edx
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] edx
mov [ esi + 0x58 ] 0x1
mov eax [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x2c ] edx
call sub_414e60
mov ebx eax
xor eax eax
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_408ed0
push ebp
mov ebp esp
push 0xffffffff
push sub_450a9b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
movzx eax [ esi ]
mov [ edi ] al
mov cl [ esi + 0x1 ]
mov [ edi + 0x1 ] cl
mov dl [ esi + 0x2 ]
mov [ edi + 0x2 ] dl
movzx eax [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov ecx [ esi + 0x4 ]
mov [ edi + 0x4 ] ecx
mov edx [ esi + 0x8 ]
mov [ edi + 0x8 ] edx
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] eax
mov ecx [ esi + 0x14 ]
push ecx
lea ecx [ edi + 0x10 ]
call sub_4026e0
mov edx [ esi + 0x10 ]
mov ecx [ edi + 0x10 ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov edx [ esi + 0x14 ]
mov [ edi + 0x14 ] edx
xor eax eax
mov [ edi + 0x1c ] eax
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] eax
mov eax [ esi + 0x20 ]
push eax
lea ecx [ edi + 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_4026e0
mov edx [ esi + 0x1c ]
mov ecx [ edi + 0x1c ]
lea esp [ esp ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov ecx [ esi + 0x20 ]
mov [ edi + 0x20 ] ecx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408fb0
push ebp
mov ebp esp
push 0xffffffff
push sub_450ac8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
xor ebx ebx
lea edx [ ecx + esi ]
mov [ ebp - 0x10 ] ebx
cmp edx eax
jle r-xdata
cmp ecx ebx
jne r-xdata
mov esi eax
sub esi ecx
push 0x3
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
call sub_403e50
push esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] ebx
call sub_403e50
xor eax eax
cmp esi ebx
mov ebx [ ebp - 0x1c ]
jle r-xdata
cmp esi eax
jne r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ ebx + esi * 2 ] ax
push esi
mov ecx edi
mov [ ebp - 0x18 ] esi
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_403e50
mov ecx [ edi ]
mov edx ebx
mov ecx [ ebp + 0xc ]
add ecx ecx
lea esp [ esp ]
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_403f20
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
push ebx
mov [ edi + 0x4 ] esi
call sub_43c44d
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ edi ]
mov dx [ ecx + edx ]
mov [ ebx + eax * 2 ] dx
inc eax
add ecx 0x2
cmp eax esi
jl r-xdata
sub_4090d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_409100
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_409130
push ebp
mov ebp esp
push 0xffffffff
push sub_450b2e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0x1c ]
mov edx [ ebp + 0xc ]
mov eax [ esi ]
mov eax [ eax + 0xc ]
push ecx
push edx
xor edi edi
push esi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] edi
call eax
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov eax [ ecx + 0x10 ]
lea edx [ ebp - 0x2c ]
push edx
push esi
call eax
cmp eax edi
jne r-xdata
mov [ ebp - 0x10 ] edi
mov ecx [ esi ]
mov eax [ ecx + 0x1c ]
lea edx [ ebp - 0x10 ]
push edx
push edi
push esi
mov [ ebp - 0x4 ] edi
call eax
mov esi eax
cmp esi edi
je r-xdata
push 0x20
call sub_43c55a
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov [ eax + 0x8 ] edi
mov esi eax
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov ebx eax
cmp eax edi
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp - 0x1c ] esi
cmp esi edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esi + 0x8 ] ebx
push 0x38
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x18 ] 0xffffffff
call sub_43c55a
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor ebx ebx
mov ecx eax
call sub_415060
mov ebx eax
jmp r-xdata
mov edx [ ebp + 0x1c ]
push 0x1
push edx
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_414f50
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_408ed0
mov ecx [ ebp + 0x18 ]
cmp [ ecx + 0xc ] edi
mov eax [ ebp + 0x8 ]
setbe dl
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x54 ] 0x8
mov [ ebp - 0x51 ] 0x0
lea edx [ edx + edx + 0x2 ]
mov [ ebp - 0x52 ] dl
call sub_407dd0
mov edi eax
test edi edi
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x20 ] ebx
cmp ebx edi
je r-xdata
push 0x9b08
call sub_43c55a
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov ecx [ ebp - 0x38 ]
push ecx
call sub_43c44d
mov edx [ ebp - 0x44 ]
push edx
call sub_43c44d
add esp 0x8
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_407c20
mov edi eax
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
call ecx
mov [ ebp - 0x4 ] 0x6
test edi edi
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x24 ] edi
test edi edi
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
lea eax [ edi + 0x4 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edi ]
mov eax [ ecx + 0xc ]
push ebx
push 0x0
push 0x0
push edx
push esi
push edi
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x4
test edi edi
je r-xdata
mov ecx [ ebp + 0x18 ]
push eax
call sub_4120a0
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov edx [ ebp + 0x8 ]
not eax
mov [ ebp - 0x4c ] eax
mov ecx [ esi + 0x14 ]
mov eax [ esi + 0x10 ]
mov [ ebp - 0x14 ] ecx
push edx
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x48 ] eax
call sub_407840
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0x4
call edx
lea ecx [ ebp - 0x54 ]
call sub_402a00
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x54 ]
call sub_402a00
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push edi
call eax
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x20 ]
push 0x0
push eax
call edx
mov [ ebp + 0x1c ] eax
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0x4
call ecx
lea ecx [ ebp - 0x54 ]
call sub_402a00
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0x4
call ecx
lea ecx [ ebp - 0x54 ]
call sub_402a00
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
call ecx
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x8 ]
push ebx
call edx
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push ebx
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push ebx
call eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409530
push ebp
mov ebp esp
push 0xffffffff
push sub_450b5b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x80
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx eax
call sub_403590
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4095a0
push ebp
mov ebp esp
push 0xffffffff
push sub_450b8b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x80
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx eax
call sub_403590
test eax eax
je r-xdata
add eax 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_409610
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
push esi
mov esi [ ebp + 0x8 ]
sub edx eax
push edx
push eax
push esi
mov [ ebp - 0x4 ] 0x0
call sub_408fb0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_409640
push ebp
mov ebp esp
sub esp 0x58
cmp [ ebp + 0x10 ] 0x1
je r-xdata
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax 0x80070057
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp + 0x10 ]
push edx
mov edx [ eax + 0x14 ]
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push esi
call edx
test eax eax
jne r-xdata
mov eax 0x80004005
pop esi
mov esp ebp
pop ebp
retn 0x10
pop esi
mov esp ebp
pop ebp
retn 0x10
push ebx
push edi
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0xc ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_408ed0
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x57 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x18 ]
xor ecx ecx
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x20 ]
push ecx
push 0xc
push 0x0
push esi
call edx
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x18 ]
xor eax eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7
push 0x0
push esi
call ecx
mov ebx eax
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_4110c0
lea ecx [ ebp - 0x58 ]
call sub_402a00
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp - 0x20 ] 0x40
jne r-xdata
lea ecx [ ebp - 0x58 ]
call sub_402a00
pop edi
pop ebx
mov eax 0x80070057
pop esi
mov esp ebp
pop ebp
retn 0x10
cmp [ edi + 0x54 ] 0x0
jne r-xdata
cmp [ ebp - 0x20 ] 0x15
lea ecx [ ebp - 0x20 ]
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x54 ]
mov [ ebp - 0xc ] eax
push edx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ecx
call sub_414ad0
add esp 0x8
lea ecx [ ebp - 0x20 ]
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi [ edi + 0x38 ]
mov ebx [ edi + 0x3c ]
je r-xdata
lea ecx [ ebp - 0x58 ]
call sub_402a00
pop edi
pop ebx
mov eax 0x80004001
pop esi
mov esp ebp
pop ebp
retn 0x10
call sub_4110c0
mov edx [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] edx
call sub_4110c0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
push esi
add edi 0x60
push edi
lea eax [ ebp - 0x58 ]
push eax
push ecx
push ebx
push edx
call sub_409130
add esp 0x18
jmp r-xdata
call sub_4110c0
mov eax [ esi ]
mov edx [ eax + 0x18 ]
xor ecx ecx
mov [ ebp - 0x30 ] ecx
lea ecx [ ebp - 0x30 ]
push ecx
push 0x3
push ebx
push esi
call edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ edi + 0x54 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push 0x0
push 0x0
push ebx
push esi
push eax
call edx
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_407dd0
add esi [ edi + 0x40 ]
adc ebx [ edi + 0x44 ]
mov esi eax
mov ax [ ebp - 0x30 ]
cmp ax 0x8
jne r-xdata
lea ecx [ ebp - 0x30 ]
call sub_4110c0
lea ecx [ ebp - 0x58 ]
call sub_402a00
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x58 ]
call sub_402a00
pop edi
mov eax esi
pop ebx
mov edi [ edi + 0x54 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
call sub_415340
add esp 0xc
test ax ax
je r-xdata
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_405570
push 0x5c
lea ecx [ ebp - 0x10 ]
call sub_408320
test eax eax
js r-xdata
lea ecx [ ebp - 0x30 ]
call sub_4110c0
mov eax [ esi ]
mov edx [ eax + 0x18 ]
xor ecx ecx
mov [ ebp - 0x20 ] ecx
lea ecx [ ebp - 0x20 ]
push ecx
push 0x6
push 0x0
push esi
call edx
mov ebx eax
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
call sub_410870
add esp 0xc
push eax
lea ecx [ ebp - 0x48 ]
call sub_4083b0
mov edx [ ebp - 0x1c ]
push edx
call sub_43c44d
add esp 0x4
cmp [ ebp - 0x44 ] 0x0
je r-xdata
inc eax
push eax
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x10 ]
call sub_409610
push eax
lea ecx [ ebp - 0x10 ]
call sub_4082d0
mov edx [ ebp - 0x1c ]
push edx
call sub_43c44d
add esp 0x4
mov ax [ ebp - 0x20 ]
cmp ax 0xb
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
add esp 0x4
or [ ebp - 0x57 ] 0x8
test ax ax
cmp [ ebp - 0x18 ] bx
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_4110c0
je r-xdata
sub_4099c0
push ebp
mov ebp esp
cmp [ eax ] 0x60
jne r-xdata
xor al al
pop ebp
retn
cmp [ eax + 0x1 ] 0xea
jne r-xdata
movzx ecx [ eax + 0x2 ]
add eax 0x4
cmp [ eax + 0x6 ] 0x2
jne r-xdata
movzx edx [ eax ]
cmp edx ecx
ja r-xdata
lea edx [ ecx + 0x8 ]
cmp [ ebp + 0x8 ] edx
jb r-xdata
add ecx 0xffffffe2
cmp ecx 0xa0a
ja r-xdata
cmp [ eax + 0x1c ] 0x8
ja r-xdata
mov al 0x1
pop ebp
retn
sub_409a10
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
mov eax [ ecx + 0xa58 ]
push edx
push eax
mov [ ebp + 0xc ] esi
call sub_411ee0
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x8
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
push r--data
lea ecx [ ebp + 0x8 ]
push ecx
mov [ ebp + 0x8 ] eax
call sub_43d1c8
sub_409a60
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp + 0x8 ]
mov [ edi ] 0x0
mov edx [ esi + 0xa58 ]
push ecx
push edx
mov [ ebp - 0x4 ] 0x2
call sub_411ee0
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x4 ] 0x2
je r-xdata
movzx eax [ ebp + 0x8 ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp - 0x8 ] eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
call sub_43d1c8
xor eax eax
cmp eax 0xa28
jbe r-xdata
add eax 0x4
push eax
lea edx [ esi + 0x4 ]
push edx
mov ecx esi
call sub_409a10
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x8 ] 0x2
call sub_43d1c8
mov eax [ esi ]
add eax 0x6
add [ esi + 0xa68 ] eax
adc [ esi + 0xa6c ] 0x0
mov [ edi ] 0x1
sub_409b10
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0xa58 ]
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push edx
mov [ ebp - 0x8 ] 0x2
call sub_411ee0
add esp 0xc
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x8 ] 0x2
je r-xdata
mov ax [ ebp - 0x4 ]
cmp al 0x60
jne r-xdata
mov [ ebp + 0x8 ] eax
push r--data
lea eax [ ebp + 0x8 ]
push eax
call sub_43d1c8
push r--data
lea edx [ ebp + 0x8 ]
push edx
mov [ ebp + 0x8 ] 0x2
call sub_43d1c8
int3
cmp ah 0xea
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_409a60
sub_409b90
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
mov [ ebp - 0x8 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] edi
jne r-xdata
push r--data
lea edx [ ebp - 0x8 ]
push edx
mov [ ebp - 0x8 ] ebx
call sub_43d1c8
movzx eax [ ebp - 0x4 ]
mov [ esi ] eax
cmp eax ebx
je r-xdata
xor eax eax
cmp eax 0xa28
ja r-xdata
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] edi
call sub_43d1c8
mov edx [ esi + 0xa58 ]
lea edi [ eax + 0x4 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x4 ]
push ecx
push edx
mov [ ebp - 0xc ] edi
call sub_411ee0
add esp 0xc
cmp eax ebx
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x8 ] ebx
call sub_43d1c8
mov ecx [ esi ]
add ecx 0x6
add [ esi + 0xa68 ] ecx
mov ecx [ esi + 0xa5c ]
lea eax [ esi + 0xa68 ]
adc [ eax + 0x4 ] ebx
cmp ecx ebx
je r-xdata
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x8 ] bl
jne r-xdata
mov edx [ esi + 0xa58 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
mov edi 0x2
push edx
mov [ ebp - 0xc ] edi
call sub_411ee0
add esp 0xc
cmp eax ebx
jne r-xdata
mov edx [ ecx ]
push eax
lea eax [ esi + 0xa60 ]
push eax
push ecx
mov ecx [ edx + 0x10 ]
call ecx
cmp eax ebx
jne r-xdata
sub_409cb0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0xc
jb r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ eax + eax * 2 ]
mov ecx [ eax * 4 + rwxdata ]
lea eax [ eax * 4 + rwxdata ]
mov [ edx ] ecx
mov ax [ eax + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ ecx ] ax
mov [ edx ] 0x0
xor eax eax
pop ebp
retn 0x14
mov eax 0x80070057
pop ebp
retn 0x14
sub_409d20
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x5
jb r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ eax + eax * 2 ]
mov ecx [ eax * 4 + rwxdata ]
lea eax [ eax * 4 + rwxdata ]
mov [ edx ] ecx
mov ax [ eax + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ ecx ] ax
mov [ edx ] 0x0
xor eax eax
pop ebp
retn 0x14
mov eax 0x80070057
pop ebp
retn 0x14
sub_409d70
push ebp
mov ebp esp
sub esp 0x10
push esi
xor esi esi
cmp eax esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_414a20
add esp 0x8
test al al
je r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_411c30
sub_409e90
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call sub_43c44d
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_409ef0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_409f20
push ebp
mov ebp esp
push 0xffffffff
push sub_450bbb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ecx + 0x8 ]
mov [ ebp - 0x10 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_404e40
mov esi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_409fb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_40a040
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_415220
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40a090
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_415220
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_40a0c0
push ebp
mov ebp esp
push 0xffffffff
push sub_450be8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
push 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4106e0
add esp 0xc
mov ecx [ eax ]
push ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_411620
mov edx [ ebp - 0x18 ]
push edx
call sub_43c44d
add esp 0x4
sub_40a130
push ebp
mov ebp esp
push 0xffffffff
push sub_450c18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor ebx ebx
xor eax eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
add eax 0xfffffffc
mov [ ebp - 0x4 ] 0x1
cmp eax 0x18
ja r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp - 0x20 ]
call sub_411270
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] bl
call sub_4110c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx edx [ eax + lookup_table_40a270 ]
jmp [ edx * 4 + jump_table_40a258 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
add ecx 0xa48
push ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xa3c ]
lea edx [ ebp - 0x20 ]
push edx
call sub_409d70
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xa40 ]
lea ecx [ ebp - 0x20 ]
push ecx
call sub_409d70
add esp 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax + 0xa38 ]
cmp al 0xb
jae r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x20 ]
push edx
add eax 0xa54
push eax
call sub_40a0c0
add esp 0x8
mov eax [ rwxdata ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_411620
jmp r-xdata
movzx ecx al
mov eax [ ecx * 4 + rwxdata ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_411620
jmp r-xdata
sub_40a290
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0xa78 ]
call sub_404680
mov eax [ esi + 0xa8c ]
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0xa8c ] 0x0
sub_40a2f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_40a370
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi [ esi + 0x4 ]
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push ebx
test edi edi
je r-xdata
xor ebx ebx
push edi
call sub_43c55a
mov ebx eax
mov eax [ esi + 0x4 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call sub_43c44d
add esp 0x4
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] edi
pop ebx
cmp eax edi
jb r-xdata
push eax
mov eax [ esi + 0x8 ]
push eax
push ebx
call sub_43d220
add esp 0xc
jmp r-xdata
mov eax edi
sub_40a3f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40a420
push ebp
mov ebp esp
push 0xffffffff
push sub_450c48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
push 0x3
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
call sub_4026e0
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
cmp [ ecx ] esi
jbe r-xdata
mov edx [ ebp - 0x24 ]
push edx
call sub_43c44d
add esp 0x4
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov ebx [ ebp + 0x10 ]
lea edx [ ebp - 0x24 ]
mov [ ecx ] esi
cmp edx ebx
je r-xdata
mov ecx ebx
sub ecx edi
dec ecx
cmp ecx 0x1
jge r-xdata
mov ecx [ ebp - 0x24 ]
push ecx
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov [ ebx + 0x4 ] 0x0
push edi
mov ecx ebx
mov [ eax ] 0x0
call sub_4026e0
mov edx [ ebp - 0x24 ]
mov ecx [ ebx ]
mov eax [ ebp - 0x24 ]
cmp ebx 0x40
jle r-xdata
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov [ ebx + 0x4 ] edi
mov eax [ ebp + 0x8 ]
mov al [ esi + eax ]
inc esi
mov [ ebp - 0xd ] al
mov [ ebp - 0x18 ] esi
test al al
je r-xdata
xor eax eax
cmp ebx 0x8
setle al
dec eax
and eax 0xc
add eax 0x4
mov eax ebx
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
lea eax [ ebx + eax + 0x1 ]
mov [ ebp - 0x14 ] eax
cmp eax ebx
je r-xdata
mov eax 0x1
sub eax ecx
lea edx [ eax + ecx ]
cmp edx 0x1
jge r-xdata
push eax
call sub_43c55a
add esp 0x4
mov esi eax
test ebx ebx
jle r-xdata
mov ebx [ ebp - 0x14 ]
mov eax esi
mov [ esi + edi ] 0x0
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
jmp r-xdata
test edi edi
jle r-xdata
mov cl [ ebp - 0xd ]
mov [ edi + eax ] cl
mov ecx [ ebp + 0xc ]
inc edi
mov [ edi + eax ] 0x0
mov [ ebp - 0x20 ] edi
cmp esi [ ecx ]
jb r-xdata
mov eax [ ebp - 0x24 ]
push eax
call sub_43c44d
add esp 0x4
mov ecx [ ebp - 0x24 ]
sub ecx esi
mov edx edi
mov bl [ ecx + eax ]
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
sub_40a5a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx ecx
cmp eax 0x1e
jae r-xdata
push esi
push edi
mov edi [ ebp + 0x8 ]
movzx esi [ edi ]
cmp esi eax
ja r-xdata
mov eax 0x1
pop ebx
pop ebp
retn 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x8
mov cl [ edi + 0x3 ]
mov [ ebx ] cl
cmp [ edi + 0x6 ] 0x2
je r-xdata
mov edx [ edi + 0x8 ]
mov [ ebx + 0x4 ] edx
mov ecx [ edi + 0xc ]
sub eax esi
mov [ ebx + 0x8 ] ecx
mov edx [ edi + 0x10 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebx + 0xc ] edx
push ecx
lea edx [ esi + edi ]
push edx
call sub_40a420
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
add esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub eax esi
mov [ ebp + 0x8 ] eax
add ebx 0x1c
push ebx
lea eax [ ebp + 0x8 ]
push eax
add esi edi
push esi
call sub_40a420
add esp 0xc
sub_40a630
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x1e
jae r-xdata
push edi
mov edi [ ebp + 0x8 ]
movzx edx [ edi + 0x1 ]
mov al [ edi ]
mov [ esi + 0x2c ] dl
movzx edx [ edi + 0x2 ]
mov [ esi + 0x2d ] dl
movzx edx [ edi + 0x3 ]
mov [ esi + 0x2e ] dl
movzx edx [ edi + 0x4 ]
mov [ esi + 0x2f ] dl
test [ esi + 0x2f ] 0x8
movzx edx [ edi + 0x5 ]
mov [ esi + 0x30 ] dl
movzx edx [ edi + 0x6 ]
mov [ esi + 0x31 ] dl
mov edx [ edi + 0x8 ]
mov [ esi + 0x18 ] edx
mov edx [ edi + 0xc ]
mov [ esi + 0x1c ] edx
mov edx [ edi + 0x10 ]
mov [ esi + 0x20 ] edx
mov edx [ edi + 0x14 ]
mov [ esi + 0x24 ] edx
mov dx [ edi + 0x1a ]
mov [ esi + 0x32 ] dx
mov [ esi + 0x28 ] 0x0
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x8
push ebx
movzx ebx al
sub ecx ebx
push esi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
push eax
lea ecx [ ebx + edi ]
push ecx
call sub_40a420
add esp 0xc
test eax eax
jne r-xdata
cmp al 0x22
jb r-xdata
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
add ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add esi 0xc
sub eax ebx
push esi
lea edx [ ebp + 0x8 ]
push edx
add ebx edi
push ebx
mov [ ebp + 0x8 ] eax
call sub_40a420
add esp 0xc
mov edx [ edi + 0x1e ]
mov [ esi + 0x28 ] edx
sub_40a700
push ebp
mov ebp esp
push 0xffffffff
push sub_450c78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
push 0x10000
mov [ ebp - 0x4 ] ebx
call sub_43c55a
push ebx
mov esi eax
call sub_43c44d
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push ecx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] 0x10000
mov [ ebp - 0x10 ] 0xa30
call sub_411ee0
mov edi eax
add esp 0x14
cmp edi ebx
je r-xdata
mov edi [ ebp - 0x10 ]
cmp edi 0x26
jae r-xdata
push esi
call sub_43c44d
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov eax esi
call sub_4099c0
add esp 0x4
test al al
jne r-xdata
push esi
call sub_43c44d
add esp 0x4
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec edi
push edi
lea edx [ esi + 0x1 ]
push edx
push esi
call sub_43d220
add esp 0xc
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] ebx
lea ecx [ ecx ]
mov eax 0x10000
sub eax edi
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ esi + edi ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_411ee0
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ eax + 0x4 ]
ja r-xdata
push esi
call sub_43c44d
add esp 0x4
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add edi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edi
cmp edi 0x26
jb r-xdata
jb r-xdata
lea ebx [ edi - 0x25 ]
mov [ ebp - 0x18 ] ebx
test ebx ebx
je r-xdata
mov edx [ ebp - 0x20 ]
cmp edx [ eax ]
ja r-xdata
add [ ebp - 0x20 ] eax
lea edx [ esi + ebx ]
adc [ ebp - 0x1c ] 0x0
sub edi ebx
push edi
push edx
push esi
call sub_43d220
add esp 0xc
xor ebx ebx
jmp r-xdata
cmp [ esi + eax ] 0x60
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax ebx
nop
cmp [ esi + eax ] 0x60
lea ecx [ esi + eax ]
jne r-xdata
je r-xdata
inc eax
cmp [ esi + eax ] 0x60
jne r-xdata
inc eax
cmp eax ebx
jb r-xdata
cmp [ ecx + 0x1 ] 0xea
jne r-xdata
cmp eax ebx
jae r-xdata
cmp [ ecx + 0xa ] 0x2
movzx edx [ ecx + 0x2 ]
jne r-xdata
movzx edi [ ecx + 0x4 ]
cmp edi edx
mov edi [ ebp - 0x14 ]
ja r-xdata
sub edi eax
lea ebx [ edx + 0x8 ]
cmp edi ebx
jb r-xdata
mov edi [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
add edx 0xffffffe2
cmp edx 0xa0a
ja r-xdata
cmp [ ecx + 0x20 ] 0x8
jbe r-xdata
mov ecx [ ebp + 0x10 ]
xor edx edx
add eax [ ebp - 0x20 ]
adc edx [ ebp - 0x1c ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
sub_40a910
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0xa58 ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push edx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
call sub_40a700
add esp 0xc
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0xa58 ]
mov ecx [ eax ]
push 0x0
push 0x0
push edx
mov edx [ ebp - 0x8 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
jne r-xdata
lea ecx [ ebp + 0xb ]
push ecx
mov ecx esi
call sub_409b10
test eax eax
jne r-xdata
cmp [ ebp + 0xb ] al
jne r-xdata
mov edx [ esi ]
push edx
lea eax [ esi + 0x4 ]
push eax
lea ecx [ esi + 0xa30 ]
call sub_40a5a0
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_409b90
sub_40a9b0
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov esi ecx
mov edx [ esi + 0xa58 ]
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push edx
mov [ ebp - 0x8 ] 0x2
call sub_411ee0
mov edi [ ebp + 0x8 ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x8 ] 0x2
je r-xdata
mov ax [ ebp - 0x4 ]
cmp al 0x60
jne r-xdata
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x0
call sub_43d1c8
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x2
call sub_43d1c8
int3
cmp ah 0xea
jne r-xdata
push edi
mov ecx esi
call sub_409a60
test eax eax
jne r-xdata
cmp [ edi ] al
je r-xdata
xor eax eax
mov [ edi ] al
mov ecx [ esi ]
push ecx
mov ecx [ ebp + 0xc ]
lea edx [ esi + 0x4 ]
push edx
call sub_40a630
test eax eax
jne r-xdata
mov ecx esi
call sub_409b90
test eax eax
jne r-xdata
mov [ edi ] 0x1
sub_40aa60
push ebp
mov ebp esp
push 0xffffffff
push sub_450cb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor eax eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x38 ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ edx + 0xa84 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ ebp + 0x10 ]
add ecx 0xfffffffd
mov ebx 0x1
mov [ ebp - 0x4 ] bl
cmp ecx 0x1a
ja r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_411270
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x0
call sub_4110c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
movzx edx [ ecx + lookup_table_40ac58 ]
jmp [ edx * 4 + jump_table_40ac24 ]
push ebx
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_4106e0
add esp 0xc
push eax
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_415d70
add esp 0x8
mov eax [ eax ]
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x3
call sub_411620
mov edx [ ebp - 0x1c ]
push edx
call sub_43c44d
mov eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x4 ] bl
call sub_43c44d
jmp r-xdata
cmp [ eax + 0x31 ] 0x3
sete cl
movzx edx cl
push edx
lea ecx [ ebp - 0x38 ]
call sub_4117e0
jmp r-xdata
mov eax [ eax + 0x20 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_411ac0
jmp r-xdata
mov ecx [ eax + 0x1c ]
push ecx
lea ecx [ ebp - 0x38 ]
call sub_411ac0
jmp r-xdata
test [ eax + 0x2f ] 0xc
je r-xdata
mov ecx eax
call sub_409990
push eax
lea ecx [ ebp - 0x38 ]
call sub_411ac0
jmp r-xdata
mov al [ eax + 0x2f ]
and al bl
movzx ecx al
push ecx
lea ecx [ ebp - 0x38 ]
call sub_4117e0
jmp r-xdata
mov edx [ eax + 0x24 ]
push edx
lea ecx [ ebp - 0x38 ]
call sub_411ac0
jmp r-xdata
movzx eax [ eax + 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_411890
jmp r-xdata
mov al [ eax + 0x2e ]
lea ecx [ ebp - 0x38 ]
call sub_409dc0
jmp r-xdata
mov eax [ eax + 0x18 ]
lea ecx [ ebp - 0x38 ]
push ecx
call sub_409d70
add esp 0x4
jmp r-xdata
lea edx [ ebp - 0x38 ]
push edx
add eax 0xc
push eax
call sub_40a0c0
add esp 0x8
mov edx [ eax + 0x28 ]
push 0x0
push edx
lea ecx [ ebp - 0x38 ]
call sub_411b80
jmp r-xdata
sub_40ac80
push ebp
mov ebp esp
push 0xffffffff
push sub_450ce8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
push 0x3
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_4026e0
lea ecx [ esi + 0xc ]
push 0x3
mov [ ebp - 0x4 ] edi
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
call sub_4026e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40acf0
push ebp
mov ebp esp
push 0xffffffff
push sub_450d1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x28 ] eax
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] eax
call sub_404ee0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40ad50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_40adb0
push ebp
mov ebp esp
push 0xffffffff
push sub_450d61
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
lea esi [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_404e40
mov esi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea esi [ edi + 0x8 ]
mov [ ebp - 0x14 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_405040
mov esi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
call eax
sub_40ae50
push ebp
mov ebp esp
push 0xffffffff
push sub_450d8b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x28 ] eax
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] eax
call sub_404ee0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40aeb0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_40af10
push ebp
mov ebp esp
push 0xffffffff
push sub_450dd1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
lea esi [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_404e40
mov esi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea esi [ edi + 0x8 ]
mov [ ebp - 0x14 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_405040
mov esi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
call eax
sub_40afb0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40af10
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40afe0
push ebp
mov ebp esp
push 0xffffffff
push sub_450df8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov eax [ edi + 0x4 ]
push eax
call sub_4026e0
mov edx [ edi ]
mov ecx [ esi ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov edx [ edi + 0x10 ]
push edx
lea ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] ebx
call sub_4026e0
mov edx [ edi + 0xc ]
mov ecx [ esi + 0xc ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x18 ]
mov [ esi + 0x18 ] ecx
mov edx [ edi + 0x1c ]
mov [ esi + 0x1c ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x24 ]
mov [ esi + 0x24 ] ecx
mov edx [ edi + 0x28 ]
mov [ esi + 0x28 ] edx
movzx eax [ edi + 0x2c ]
mov [ esi + 0x2c ] al
movzx ecx [ edi + 0x2d ]
mov [ esi + 0x2d ] cl
movzx edx [ edi + 0x2e ]
mov [ esi + 0x2e ] dl
movzx eax [ edi + 0x2f ]
mov [ esi + 0x2f ] al
movzx ecx [ edi + 0x30 ]
mov [ esi + 0x30 ] cl
movzx edx [ edi + 0x31 ]
mov [ esi + 0x31 ] dl
mov ax [ edi + 0x32 ]
mov [ esi + 0x32 ] ax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x38 ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x3c ] edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b0e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40b110
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40adb0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40b140
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_40af10
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_40b170
push ebp
mov ebp esp
push 0xffffffff
push sub_450e79
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x10 ]
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
cmp ecx 0xffffffff
sete al
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x11 ] al
test al al
je r-xdata
cmp ecx ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xa80 ]
mov [ ebp + 0x10 ] ecx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
xor ecx ecx
nop
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push esi
push edx
mov edx [ ecx + 0xc ]
push eax
call edx
xor esi esi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x18
mov [ ebp - 0x4 ] 0x2
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
test al al
je r-xdata
xor eax eax
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
mov eax ecx
jmp r-xdata
push 0x38
mov [ ebp - 0x4 ] 0x3
call sub_43c55a
add esp 0x4
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x2c ] eax
cmp eax ebx
je r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + 0xa84 ]
mov eax [ ebx + eax * 4 ]
add edx [ eax + 0x20 ]
mov eax [ eax + 0x1c ]
adc esi 0x0
add edi eax
adc [ ebp - 0x48 ] 0x0
mov al [ ebp - 0x11 ]
inc ecx
xor ebx ebx
jmp r-xdata
mov [ ebp - 0x40 ] ebx
mov ecx eax
call sub_415060
mov ebx eax
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov edx [ ebp + 0x18 ]
push edi
push edx
mov ecx ebx
mov [ ebp - 0x4 ] 0x5
call sub_414f50
push 0x28
call sub_43c55a
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
xor edi edi
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x30 ] edi
mov eax edi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov [ eax + 0x8 ] edi
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0xa8c ]
mov [ ebp - 0x4 ] 0x6
test edi edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov [ ebp - 0x28 ] eax
cmp eax edi
je r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov eax [ ebp - 0x30 ]
mov [ eax + 0x8 ] edi
xor edi edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x5
je r-xdata
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0x58 ]
mov [ ebx + 0x24 ] ecx
mov ecx ebx
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x28 ] edx
mov [ ebx + 0x2c ] eax
call sub_414e60
mov esi eax
xor ebx ebx
cmp esi ebx
je r-xdata
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x3
je r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x18 ] ebx
xor eax eax
cmp [ ebp + 0x14 ] ebx
mov [ ebp - 0x4 ] 0x7
setne al
cmp [ ebp - 0x11 ] 0x0
mov esi eax
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
cmp [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp + 0xc ]
mov eax [ ecx + edi * 4 ]
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebx + 0x31 ] 0x3
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0xa84 ]
mov ebx [ ecx + eax * 4 ]
mov edi [ ebp + 0x18 ]
mov edx [ edi ]
mov edx [ edx + 0x14 ]
push esi
lea ecx [ ebp - 0x18 ]
push ecx
push eax
push edi
call edx
mov [ ebp - 0x34 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0x24 ] 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x18 ]
push esi
push edi
call ecx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ edi ]
mov ecx [ eax + 0x18 ]
push esi
push edi
call ecx
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x1c ]
push 0x0
push edi
call ecx
mov esi eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
test esi esi
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] bl
cmp eax ebx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] edi
mov ecx [ ebx + 0x1c ]
push 0x20
mov [ ebp - 0x64 ] ecx
call sub_43c55a
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov [ eax + 0x8 ] edi
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x5
cmp eax edi
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov edi [ ebp - 0x3c ]
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov esi [ ebp - 0x4c ]
mov ebx [ ebp - 0x40 ]
inc edi
add [ ebp - 0x5c ] eax
mov eax 0x0
adc [ ebp - 0x58 ] ecx
add esi [ ebp - 0x64 ]
adc [ ebp - 0x48 ] eax
mov [ ebp - 0x4c ] esi
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov [ ebp - 0x44 ] esi
cmp esi edi
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x3c ] edi
cmp edi [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x34 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ ebp - 0x30 ]
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x18 ] 0xffffffff
mov eax [ ebx + 0x1c ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ edx + 0x14 ] ecx
mov [ edx + 0x18 ] edi
mov [ edx + 0x1c ] edi
mov [ edx + 0x20 ] cl
mov eax [ eax + 0xa8c ]
mov ecx [ eax ]
lea edx [ ebp - 0x6c ]
push edx
mov edx [ ebx + 0x3c ]
push edi
push edx
mov edx [ ebx + 0x38 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
test [ ebx + 0x2f ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x18 ] edi
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x0
cmp eax edi
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
je r-xdata
movzx eax [ ebx + 0x30 ]
cmp eax 0x4
ja r-xdata
mov edi 0x1
jmp r-xdata
jmp [ eax * 4 + jump_table_40b940 ]
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
mov eax [ ebp + 0x18 ]
mov edx [ eax ]
push edi
push eax
mov eax [ edx + 0x1c ]
mov [ ebp - 0x44 ] 0x0
call eax
mov esi eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
test esi esi
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x2c ]
mov edi [ ebp - 0x28 ]
mov ecx [ eax ]
push edx
push 0x0
push 0x0
push esi
push edi
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ ebp - 0x34 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] edi
jne r-xdata
cmp [ ebp - 0x20 ] edi
jne r-xdata
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ ebp - 0x38 ]
xor ecx ecx
cmp [ edx + 0x10 ] eax
jne r-xdata
mov eax [ ebp - 0x24 ]
push 0x6648
call sub_43c55a
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x9
cmp eax edi
je r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
push 0x58
call sub_43c55a
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0xa
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
test eax eax
je r-xdata
mov edi 0x2
jmp r-xdata
mov edx [ edx + 0x14 ]
cmp edx ecx
jne r-xdata
push edi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x8
call sub_402680
mov ecx eax
call sub_40acf0
mov edi eax
mov edx [ ebp - 0x1c ]
mov edi [ ebp - 0x28 ]
mov ecx [ eax ]
push edx
lea edx [ ebp - 0x54 ]
push edx
push 0x0
push esi
push edi
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ ebp - 0x34 ] eax
push edi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x8
call sub_402680
mov ecx eax
call sub_40ae50
mov edi eax
mov edi [ esi + 0x18 ]
not edi
sub edi [ ebx + 0x24 ]
neg edi
sbb edi edi
and edi 0x3
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x7
call edx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x5
test edi edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40b960
push ebp
mov ebp esp
push 0xffffffff
push sub_450eab
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x40
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ eax + edx * 4 ] edi
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_40afe0
mov edi eax
sub_40b9e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_40adb0
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_40ba10
push ebp
mov ebp esp
push 0xffffffff
push sub_450eeb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi ]
mov ecx [ eax + 0x10 ]
push edi
call ecx
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ edi + 0xa64 ] ecx
lea ecx [ edi + 0x8 ]
push edx
mov [ edi + 0xa60 ] esi
mov [ edi + 0xa70 ] ebx
mov [ edi + 0xa74 ] ebx
mov [ edi + 0xa68 ] ebx
mov [ edi + 0xa6c ] ebx
call sub_40a910
cmp eax ebx
jne r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
push ebx
push esi
call ecx
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push esi
call eax
cmp eax ebx
jne r-xdata
push 0x4
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x50 ] ebx
call sub_43c55a
add esp 0x4
mov esi eax
cmp [ ebp - 0x50 ] ebx
jle r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x18 ]
push edx
push ebx
push eax
mov eax [ ecx + 0xc ]
call eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x54 ]
mov [ ebp - 0x58 ] esi
mov [ ecx + esi ] 0x0
mov [ ebp - 0x50 ] 0x4
push 0x4
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
call sub_43c55a
add esp 0x4
mov esi eax
cmp [ ebp - 0x44 ] ebx
jle r-xdata
xor eax eax
cmp [ ebp - 0x54 ] ebx
jle r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x4c ] esi
mov [ eax + esi ] 0x0
mov [ ebp - 0x44 ] 0x4
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp + 0xf ]
push edx
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_40a9b0
mov esi eax
cmp esi ebx
jne r-xdata
xor eax eax
cmp [ ebp - 0x48 ] ebx
jle r-xdata
mov eax [ ebp - 0x58 ]
push eax
call sub_43c44d
add esp 0x4
mov ecx [ ebp - 0x58 ]
mov dl [ eax + ecx ]
mov [ eax + esi ] dl
inc eax
cmp eax [ ebp - 0x54 ]
jl r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_43c44d
mov eax [ ebp - 0x58 ]
push eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push 0x1
push ebx
push ebx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov esi eax
cmp esi ebx
jne r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_43c44d
add esp 0x4
mov edx [ ebp - 0x4c ]
mov cl [ edx + eax ]
mov [ eax + esi ] cl
inc eax
cmp eax [ ebp - 0x48 ]
jl r-xdata
call sub_43c44d
add esp 0x8
mov eax esi
mov ecx [ ebp - 0x4c ]
push ecx
call sub_43c44d
mov edx [ ebp - 0x58 ]
push edx
jmp r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
mov eax [ ebp - 0x4c ]
push eax
call sub_43c44d
mov ecx [ ebp - 0x58 ]
push ecx
call sub_43c44d
add esp 0x8
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x40
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
lea ecx [ edi + 0xa78 ]
mov [ ebp - 0x4 ] 0x1
call sub_404690
mov edx [ edi + 0xa80 ]
mov eax [ edi + 0xa84 ]
push 0x0
mov [ eax + edx * 4 ] ebx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x3c ]
inc [ edi + 0xa80 ]
mov ecx [ eax ]
push 0x1
push 0x0
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
jne r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
mov ecx eax
call sub_40afe0
mov ebx eax
push r--data
lea edx [ ebp + 0x10 ]
push edx
mov [ ebp + 0x10 ] 0x0
call sub_43d1c8
cmp [ ebp + 0x10 ] 0x0
mov ecx [ edi + 0xa80 ]
mov eax ecx
cdq
lea ebx [ edi + 0xa68 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x4 ] edx
mov edx [ ebp - 0x20 ]
lea esi [ edi + 0xa70 ]
mov [ esi ] edx
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
mov ecx [ ebp - 0x58 ]
push ecx
call sub_43c44d
add esp 0x8
xor ebx ebx
jmp r-xdata
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
imul eax eax 0x64
sub ecx eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push esi
push ebx
push eax
call edx
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x4c ]
push eax
call sub_43c44d
mov ecx [ ebp - 0x58 ]
push ecx
sub_40bd30
push ebp
mov ebp esp
push 0xffffffff
push sub_450f10
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_40ba10
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x10 ]
push esi
mov [ ebp - 0x4 ] 0x0
call ecx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test ebx ebx
je r-xdata
mov eax [ esi + 0xa8c ]
test eax eax
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push ebx
call eax
mov [ esi + 0xa8c ] ebx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40bdf3
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x10 ]
mov edi [ ebp + 0x14 ]
push esi
call ecx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40be40
push ebp
mov ebp esp
push 0xffffffff
push sub_450f3b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xa90
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx eax
call sub_403a70
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40c010
or eax 0xffffffff
push esi
mov esi ecx
mov [ esi + 0x98 ] eax
mov [ esi + 0x9c ] eax
mov [ esi + 0xb0 ] eax
mov [ esi + 0xb4 ] eax
mov [ esi + 0xb8 ] eax
mov [ esi + 0xac ] eax
mov [ esi + 0xa8 ] eax
mov [ esi + 0xa0 ] eax
mov [ esi + 0xa4 ] eax
xor al al
mov [ esi + 0xbc ] 0x3000000
mov [ esi + 0xc0 ] 0x1
mov [ esi + 0xc2 ] al
call sub_417120
mov [ esi + 0xc4 ] eax
pop esi
retn
sub_40c0b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0xe
jb r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ eax + eax * 2 ]
mov ecx [ eax * 4 + rwxdata ]
lea eax [ eax * 4 + rwxdata ]
mov [ edx ] ecx
mov ax [ eax + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ ecx ] ax
mov [ edx ] 0x0
xor eax eax
pop ebp
retn 0x14
mov eax 0x80070057
pop ebp
retn 0x14
sub_40c120
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x4
jb r-xdata
mov edx [ ebp + 0x14 ]
lea eax [ eax + eax * 2 ]
mov ecx [ eax * 4 + rwxdata ]
lea eax [ eax * 4 + rwxdata ]
mov [ edx ] ecx
mov ax [ eax + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ ecx ] ax
mov [ edx ] 0x0
xor eax eax
pop ebp
retn 0x14
mov eax 0x80070057
pop ebp
retn 0x14
sub_40c1d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_40c280
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c2c0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi ] ecx
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x8 ]
mov [ esi ] 0x0
mov [ esi ] eax
pop esi
pop ebp
retn 0x4
sub_40c3a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_40c3d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c470
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_40c4a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_40c5e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_40c620
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx ]
call eax
pop ebp
retn 0x8
sub_40c6a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx 0x9901
cmp [ eax ] dx
jne r-xdata
xor al al
pop ebp
retn 0x4
cmp [ eax + 0x8 ] 0x7
jb r-xdata
mov eax [ eax + 0xc ]
movzx edx [ eax + 0x1 ]
push esi
movzx esi [ eax ]
shl dx 0x8
or dx si
mov [ ecx ] dx
cmp [ eax + 0x2 ] 0x41
pop esi
jne r-xdata
cmp [ eax + 0x3 ] 0x45
jne r-xdata
mov dl [ eax + 0x4 ]
mov [ ecx + 0x2 ] dl
movzx eax [ eax + 0x5 ]
mov [ ecx + 0x4 ] ax
mov al 0x1
pop ebp
retn 0x4
sub_40c700
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x17
je r-xdata
cmp [ edx + 0x8 ] 0x8
mov eax [ edx + 0xc ]
jb r-xdata
xor al al
pop ebp
retn 0x4
movzx edx [ eax + 0x1 ]
shl dx 0x8
push esi
movzx esi [ eax ]
or dx si
mov [ ecx ] dx
movzx edx [ eax + 0x3 ]
movzx esi [ eax + 0x2 ]
shl dx 0x8
or dx si
mov [ ecx + 0x2 ] dx
movzx edx [ eax + 0x5 ]
movzx esi [ eax + 0x4 ]
shl dx 0x8
or dx si
mov [ ecx + 0x4 ] dx
movzx edx [ eax + 0x7 ]
movzx eax [ eax + 0x6 ]
shl dx 0x8
or dx ax
xor eax eax
cmp [ ecx ] 0x2
mov [ ecx + 0x6 ] dx
sete al
pop esi
pop ebp
retn 0x4
sub_40c7c0
push ebp
mov ebp esp
push 0xffffffff
push sub_450f68
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
mov [ esi ] edi
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] edi
call sub_404ee0
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x58 ] r--data
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40c830
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_40c860
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0xc
mov ecx [ eax ]
push 0x0
lea edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
pop ebp
retn 0xc
sub_40c890
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0xc
mov ecx [ eax ]
push 0x0
lea edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
pop ebp
retn 0xc
sub_40c8d0
push ebp
mov ebp esp
push 0xffffffff
push sub_450fa6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0xc ] ebx
push 0xd0
mov [ ebp - 0x4 ] ebx
call sub_43c55a
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_41b060
mov edi eax
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ ebp - 0x4 ] bl
mov [ esi + 0x8 ] edi
cmp edi ebx
je r-xdata
mov eax esi
mov [ esi + 0xc ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_40c970
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_40c9e0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x9
lea edx [ ebp - 0x10 ]
push edx
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] ecx
call sub_411f40
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp - 0xe ] 0x5
jne r-xdata
mov eax 0x80004001
cmp [ ebp - 0xd ] al
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x4 ]
add eax 0x4
push 0x5
lea edx [ ebp - 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push edx
mov edx [ ebp - 0x14 ]
push edx
push 0x0
push ebx
push edi
push eax
mov eax [ ecx + 0xc ]
call eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x18
sub_40cab0
push ebp
mov ebp esp
push 0xffffffff
push sub_450fdb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] r--data
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0xc ] 0x3
lea ecx [ esi + 0x104 ]
mov [ ebp - 0x4 ] eax
call sub_41b420
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40cb30
push esi
mov esi ecx
call sub_41b890
mov [ esi + 0x134 ] r--data
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x134 ] r--data
xor eax eax
mov [ esi + 0x160 ] eax
mov [ esi + 0x164 ] eax
mov [ esi + 0x15c ] r--data
mov eax esi
pop esi
retn
sub_40cb80
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_40cc80
push ebp
mov ebp esp
push 0xffffffff
push sub_451000
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0xbc ] edi
add esi 0xc0
mov eax edi
push esi
push eax
call sub_41cbe0
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_40cd20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp eax [ esi + 0x8 ]
jl r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
push eax
call sub_4026e0
sub_40cd40
mov edx [ ecx ]
xor eax eax
cmp [ edx ] al
je r-xdata
mov [ edx + eax ] al
mov [ ecx + 0x4 ] eax
retn
push esi
mov esi edx
jmp r-xdata
inc eax
cmp [ esi + eax ] 0x0
jne r-xdata
mov [ edx + eax ] 0x0
pop esi
mov [ ecx + 0x4 ] eax
retn
sub_40cd70
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov eax [ edi ]
xor esi esi
mov [ edi + 0x4 ] esi
mov [ eax ] 0x0
cmp [ ebx ] 0x0
je r-xdata
push esi
call sub_4026e0
mov ecx [ edi ]
mov edx ebx
lea ebx [ ebx ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov [ edi + 0x4 ] esi
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
inc esi
cmp [ esi + ebx ] 0x0
jne r-xdata
sub_40cdc0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
xor esi esi
cmp [ edx ] 0x0
push edi
mov edi ecx
je r-xdata
push ebx
mov ebx [ edi + 0x8 ]
mov ecx ebx
sub ecx [ edi + 0x4 ]
dec ecx
cmp esi ecx
jle r-xdata
inc esi
cmp [ esi + edx ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
add eax [ edi ]
pop ebx
cmp ebx 0x40
jle r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
test cl cl
jne r-xdata
add [ edi + 0x4 ] esi
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
xor eax eax
cmp ebx 0x8
setle al
dec eax
and eax 0xc
add eax 0x4
mov eax ebx
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
add ebx eax
push ebx
mov ecx edi
call sub_4026e0
mov edx [ ebp + 0x8 ]
mov eax esi
sub eax ecx
lea edx [ eax + ecx ]
cmp edx esi
jge r-xdata
sub_40ce40
push ebp
mov ebp esp
push 0xffffffff
push sub_451028
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40cef0
push ebp
mov ebp esp
push 0xffffffff
push sub_451058
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40cf90
push ebp
mov ebp esp
push 0xffffffff
push sub_451088
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40d010
push ebp
mov ebp esp
push 0xffffffff
push sub_4510b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40d080
push ebp
mov ebp esp
push 0xffffffff
push sub_4510e8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40d0f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push eax
mov [ esi + 0x4 ] r--data
call sub_43c44d
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40d120
push ebp
mov ebp esp
push 0xffffffff
push sub_451118
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40d190
push ebp
mov ebp esp
push 0xffffffff
push sub_451148
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40d200
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push eax
call sub_43c44d
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40d230
push ebp
mov ebp esp
push 0xffffffff
push sub_451178
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40d2a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
mov [ esi ] cx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_40d2d0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40d300
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push edi
push eax
call sub_43c44d
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ecx
mov edi [ eax + 0x4 ]
add esp 0x4
cmp edi ecx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
push edi
call sub_43c55a
mov ebx eax
mov eax [ esi + 0x4 ]
add esp 0x4
test eax eax
je r-xdata
mov edx [ esi + 0x8 ]
push edx
call sub_43c44d
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] edi
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
pop ebx
push ecx
mov ecx [ esi + 0x8 ]
push eax
push ecx
call sub_43d220
add esp 0xc
cmp eax edi
jb r-xdata
mov ecx [ esi + 0x8 ]
push eax
push ecx
push ebx
call sub_43d220
add esp 0xc
mov eax edi
sub_40d3a0
push ebp
mov ebp esp
push ebx
xor edx edx
push esi
push edi
cmp [ ecx + 0x8 ] edx
jle r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
inc edx
cmp edx [ ecx + 0x8 ]
jl r-xdata
cmp [ eax + 0x8 ] 0x7
jb r-xdata
mov eax [ ecx + 0xc ]
mov eax [ eax + edx * 4 ]
mov edi 0x9901
cmp [ eax ] di
jne r-xdata
mov eax [ eax + 0xc ]
movzx edi [ eax + 0x1 ]
movzx ebx [ eax ]
shl di 0x8
or di bx
mov [ esi ] di
cmp [ eax + 0x2 ] 0x41
jne r-xdata
cmp [ eax + 0x3 ] 0x45
je r-xdata
mov cl [ eax + 0x4 ]
mov [ esi + 0x2 ] cl
movzx edx [ eax + 0x5 ]
pop edi
mov [ esi + 0x4 ] dx
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
sub_40d410
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
cmp [ ecx + 0x8 ] edi
jle r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc edi
cmp edi [ ecx + 0x8 ]
jl r-xdata
cmp [ esi + 0x8 ] 0x8
mov eax [ esi + 0xc ]
jb r-xdata
mov eax [ ecx + 0xc ]
mov esi [ eax + edi * 4 ]
cmp [ esi ] 0x17
jne r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ eax ]
shl si 0x8
or si bx
mov [ edx ] si
movzx esi [ eax + 0x3 ]
movzx ebx [ eax + 0x2 ]
shl si 0x8
or si bx
mov [ edx + 0x2 ] si
movzx esi [ eax + 0x5 ]
movzx ebx [ eax + 0x4 ]
shl si 0x8
or si bx
mov [ edx + 0x4 ] si
movzx esi [ eax + 0x7 ]
movzx eax [ eax + 0x6 ]
shl si 0x8
or si ax
cmp [ edx ] 0x2
mov [ edx + 0x6 ] si
sete al
test al al
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
sub_40d4b0
push ebp
mov ebp esp
push esi
mov esi [ ecx + 0x8 ]
xor eax eax
test esi esi
jle r-xdata
xor al al
pop esi
pop ebp
retn 0x8
mov edx [ ecx + 0xc ]
pop esi
pop ebp
jmp sub_41d080
inc eax
add edx 0x4
cmp eax esi
jl r-xdata
mov ecx [ edx ]
cmp [ ecx ] 0xa
je r-xdata
sub_40d4e0
push ebp
mov ebp esp
push esi
mov esi [ ecx + 0x8 ]
xor eax eax
push edi
test esi esi
jle r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x8
mov edx [ ecx + 0xc ]
pop edi
pop esi
pop ebp
jmp sub_41d100
inc eax
add edx 0x4
cmp eax esi
jl r-xdata
mov ecx [ edx ]
mov edi 0x5455
cmp [ ecx ] di
je r-xdata
sub_40d520
push ebp
mov ebp esp
push 0xffffffff
push sub_4511c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
push 0x3
mov ecx esi
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_403e50
mov ax [ edi + 0x2 ]
mov edi [ ebp + 0xc ]
shr ax 0xb
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
test al 0x1
je r-xdata
cmp [ esi + 0x4 ] ebx
jne r-xdata
push esi
push edi
call sub_41d3c0
add esp 0x8
test al al
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
lea eax [ ebp - 0x1c ]
push edi
push eax
call sub_4106e0
add esp 0xc
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_4082d0
mov ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0x4
mov ecx [ esi ]
xor edx edx
mov [ esi + 0x4 ] ebx
mov [ ecx ] dx
sub_40d5e0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x63
jne r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov eax 0x2
push ecx
lea ecx [ esi + 0x68 ]
mov [ ebp - 0x8 ] ax
call sub_40d3a0
test al al
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41ced0
test al al
je r-xdata
xor eax eax
cmp [ ebp - 0x8 ] 0x1
pop esi
sete al
mov esp ebp
pop ebp
retn
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
sub_40d640
push ebp
mov ebp esp
push 0xffffffff
push sub_4511e8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40d6a0
push ebp
mov ebp esp
push 0xffffffff
push sub_45122e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x60 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x58 ] r--data
call sub_43c44d
lea edi [ esi + 0x20 ]
add esp 0x4
mov [ ebp - 0x14 ] edi
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_404e40
mov edi [ edi + 0xc ]
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
mov esi [ esi ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
call eax
sub_40d730
push ebp
mov ebp esp
push 0xffffffff
push sub_45128a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
xor ebx ebx
mov [ esi + 0x10 ] ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] 0x4
mov [ esi + 0x14 ] r--data
lea edi [ esi + 0x28 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] edi
mov [ edi ] ebx
lea ecx [ edi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_404ee0
mov [ edi + 0x40 ] ebx
mov [ edi + 0x44 ] ebx
mov [ edi + 0x48 ] ebx
mov [ edi + 0x4c ] ebx
mov [ edi + 0x58 ] r--data
mov [ edi + 0x5c ] ebx
mov [ edi + 0x60 ] ebx
mov [ esi + 0xc8 ] ebx
mov [ esi + 0xd0 ] ebx
mov [ esi + 0xd4 ] ebx
mov [ esi + 0xd8 ] ebx
mov [ esi + 0xdc ] 0x4
mov [ esi + 0xcc ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_40c010
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d830
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0xc ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_40d9b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4512c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
push 0x3
mov ecx esi
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_4026e0
mov eax [ ebp + 0xc ]
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
cmp edi ebx
jle r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x1 ]
cmp eax [ esi + 0x8 ]
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x8 ]
mov ebx [ esi ]
push edi
push eax
push ebx
call sub_43bd20
mov [ ebx + edi ] 0x0
mov ecx [ esi ]
xor eax eax
add esp 0xc
cmp [ ecx ] al
je r-xdata
push eax
mov ecx esi
call sub_4026e0
mov [ ecx + eax ] 0x0
mov [ esi + 0x4 ] eax
mov edx ecx
inc eax
cmp [ edx + eax ] 0x0
jne r-xdata
sub_40da60
push ebp
mov ebp esp
push 0xffffffff
push sub_451308
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor eax eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
add eax 0xffffffe4
mov [ ebp - 0x4 ] 0x1
cmp eax 0x10
ja r-xdata
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_411270
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x0
call sub_4110c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx edx [ eax + lookup_table_40dbbc ]
jmp [ edx * 4 + jump_table_40dba8 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax + 0x90 ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0xffffff80
push ecx
lea edx [ ebp - 0x28 ]
push edx
call sub_40d9b0
add esp 0x8
push 0x0
push eax
lea eax [ ebp - 0x1c ]
mov bl 0x2
push eax
mov [ ebp - 0x4 ] bl
call sub_4106e0
add esp 0xc
mov eax [ eax ]
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x3
call sub_411620
mov ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x4 ] bl
call sub_43c44d
mov edx [ ebp - 0x28 ]
add esp 0x4
push edx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x78 ]
sub ecx [ eax + 0x70 ]
mov edx [ eax + 0x7c ]
sbb edx [ eax + 0x74 ]
push edx
push ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x70 ]
mov ecx [ ecx + 0x74 ]
mov edx eax
or edx ecx
je r-xdata
push eax
lea ecx [ ebp - 0x38 ]
call sub_4117e0
jmp r-xdata
lea ecx [ ebp - 0x38 ]
call sub_411b80
push ecx
push eax
sub_40dbd0
push ebp
mov ebp esp
push 0xffffffff
push sub_451366
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x64 ] edx
xor edx edx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x58 ] dx
mov [ ebp - 0x56 ] dx
mov eax [ eax + 0x20 ]
mov esi [ eax + ecx * 4 ]
mov eax [ ebp + 0x10 ]
add eax 0xfffffffd
mov [ ebp - 0x4 ] 0x1
cmp eax 0x25
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_411270
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x0
call sub_4110c0
xor eax eax
jmp r-xdata
movzx ecx [ eax + lookup_table_40e0d4 ]
jmp [ ecx * 4 + jump_table_40e094 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x10
lea edx [ esi + 0x20 ]
push edx
lea eax [ ebp - 0x7c ]
push eax
mov ecx esi
call sub_40d520
push eax
lea ecx [ ebp - 0x70 ]
mov bl 0x2
push ecx
mov [ ebp - 0x4 ] bl
call sub_415da0
add esp 0x8
mov eax [ eax ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_411620
mov edx [ ebp - 0x70 ]
push edx
mov [ ebp - 0x4 ] bl
call sub_43c44d
mov eax [ ebp - 0x7c ]
add esp 0x4
push eax
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
jmp r-xdata
mov ecx esi
call sub_41ced0
lea ecx [ ebp - 0x58 ]
push eax
call sub_4117e0
jmp r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x18 ]
push ecx
push edx
lea ecx [ ebp - 0x58 ]
call sub_411b80
jmp r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
push eax
push ecx
lea ecx [ ebp - 0x58 ]
call sub_411b80
jmp r-xdata
lea edx [ ebp - 0x60 ]
push edx
push ebx
lea ecx [ esi + 0x68 ]
call sub_40d4b0
test al al
je r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push 0x2
lea ecx [ esi + 0x68 ]
call sub_40d4b0
test al al
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ esi + 0x68 ]
call sub_40d4b0
test al al
je r-xdata
lea edx [ ebp - 0x3c ]
push edx
push ebx
lea ecx [ esi + 0x68 ]
call sub_40d4b0
test al al
jne r-xdata
mov ecx esi
call sub_41cf90
push eax
jmp r-xdata
mov dl [ esi + 0x2 ]
and dl 0x1
movzx eax dl
push eax
lea ecx [ ebp - 0x58 ]
call sub_4117e0
jmp r-xdata
lea ecx [ esi + 0x7c ]
push ecx
lea edx [ ebp - 0x88 ]
push edx
call sub_40d9b0
add esp 0x8
push eax
lea eax [ ebp - 0x94 ]
mov bl 0x4
push eax
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_40d520
mov eax [ eax ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x5
call sub_411620
mov ecx [ ebp - 0x94 ]
push ecx
mov [ ebp - 0x4 ] bl
call sub_43c44d
mov edx [ ebp - 0x88 ]
add esp 0x4
push edx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
jmp r-xdata
mov ecx esi
call sub_40d5e0
test al al
je r-xdata
movzx edi [ esi + 0x4 ]
push 0x3
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
call sub_4026e0
test [ esi + 0x2 ] 0x1
mov [ ebp - 0x4 ] 0x6
je r-xdata
mov al [ esi + 0x41 ]
cmp al 0x14
jae r-xdata
movzx edx [ esi ]
push edx
lea eax [ ebp - 0x48 ]
push eax
push ebx
lea ecx [ esi + 0x68 ]
call sub_40d4e0
lea ecx [ ebp - 0x58 ]
test al al
je r-xdata
push ebx
jmp r-xdata
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0x58 ]
call sub_411c30
jmp r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_411c30
jmp r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_411c30
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
push ebx
lea ecx [ esi + 0x68 ]
call sub_40d4e0
test al al
je r-xdata
lea ecx [ ebp - 0x58 ]
mov eax [ esi + 0xc ]
push eax
jmp r-xdata
cmp di 0xb
jae r-xdata
cmp edi 0x63
jne r-xdata
mov eax [ rwxdata ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_4116e0
jmp r-xdata
movzx ecx al
mov eax [ ecx * 4 + rwxdata ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_4116e0
jmp r-xdata
push 0x2
jmp r-xdata
push 0x1
jmp r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x60 ]
push eax
push ecx
call sub_414a20
add esp 0x8
test al al
je r-xdata
mov edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x3c ]
push ecx
push edx
call sub_414aa0
add esp 0x8
lea ecx [ ebp - 0x3c ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_411c30
jmp r-xdata
movzx eax di
lea ecx [ eax - 0xc ]
cmp ecx 0x56
ja r-xdata
movzx ecx di
mov edx [ ecx * 4 + rwxdata ]
push edx
jmp r-xdata
mov ecx esi
call sub_40bf80
test al al
je r-xdata
mov ecx [ rwxdata ]
push ecx
lea ecx [ ebp - 0x40 ]
call sub_40cd70
lea eax [ ebp - 0x48 ]
xor edx edx
push eax
lea ecx [ esi + 0x68 ]
mov [ ebp - 0x46 ] 0x3
mov [ ebp - 0x44 ] dx
call sub_40d3a0
test al al
je r-xdata
call sub_411ac0
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
lea edx [ ebp - 0x3c ]
push edx
lea eax [ ebp - 0x60 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
test eax eax
jne r-xdata
push 0xa
lea edx [ ebp - 0x34 ]
push edx
cdq
push edx
push eax
call sub_410940
add esp 0x10
lea eax [ ebp - 0x34 ]
movzx ecx [ ecx + lookup_table_40e114 ]
jmp [ ecx * 4 + jump_table_40e0fc ]
lea ecx [ ebp - 0x40 ]
call sub_40cdc0
mov eax [ rwxdata ]
push eax
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ esi + 0x68 ]
call sub_40d410
test al al
je r-xdata
push 0x2d
lea ecx [ ebp - 0x40 ]
call sub_408400
movzx eax [ ebp - 0x46 ]
inc eax
push 0xa
shl eax 0x6
lea ecx [ ebp - 0x34 ]
cdq
push ecx
push edx
push eax
call sub_410940
add esp 0x10
lea edx [ ebp - 0x34 ]
push edx
lea ecx [ ebp - 0x40 ]
call sub_40cdc0
push 0x20
lea ecx [ ebp - 0x40 ]
call sub_408400
movzx edi [ ebp - 0x44 ]
jmp r-xdata
mov edx [ rwxdata ]
push edx
lea ecx [ ebp - 0x40 ]
call sub_40cdc0
mov al [ esi + 0x2 ]
shr al 0x1
test al 0x1
je r-xdata
mov ecx [ rwxdata ]
push ecx
jmp r-xdata
mov edx [ rwxdata ]
push edx
jmp r-xdata
mov eax [ rwxdata ]
jmp r-xdata
mov ecx [ rwxdata ]
push ecx
jmp r-xdata
mov edx [ rwxdata ]
push edx
jmp r-xdata
mov cx [ ebp - 0x5e ]
xor eax eax
mov esi [ ebp - 0x40 ]
push esi
lea ecx [ ebp - 0x58 ]
call sub_4116e0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
jmp r-xdata
push r--data
jmp r-xdata
push eax
lea ecx [ ebp - 0x40 ]
call sub_40cdc0
xor al al
jne r-xdata
cmp cx [ eax * 8 + rwxdata ]
jne r-xdata
push 0x20
lea ecx [ ebp - 0x40 ]
call sub_408400
inc eax
jmp r-xdata
mov ecx [ eax * 8 + rwxdata ]
push ecx
jmp r-xdata
cmp eax 0xb
jae r-xdata
sub_40e070
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x10
sub_40e11a
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x3020505
add al 0xcc
int3
sub_40e170
push ebp
mov ebp esp
push 0xffffffff
push sub_451398
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x0
push ebx
mov [ ebp - 0x4 ] 0x1
call ecx
mov esi [ ebp + 0xc ]
mov edx [ esi ]
mov eax [ edx + 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
push ecx
lea edi [ ebx + 0x28 ]
push esi
mov ecx edi
call sub_4184c0
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
add ebx 0x14
push ebx
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_419870
mov esi eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_40e2a0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40e2d0
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] 0x4
mov [ eax + 0x24 ] r--data
retn
sub_40e310
push ebp
mov ebp esp
push 0xffffffff
push sub_4513cb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] r--data
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0xc ] 0x3
lea ecx [ esi + 0x104 ]
mov [ ebp - 0x4 ] eax
call sub_41b420
mov [ esi + 0x238 ] r--data
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x238 ] r--data
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_40e3b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x238 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_40e4d0
push esi
mov esi ecx
call sub_41b890
mov [ esi + 0x134 ] r--data
xor eax eax
mov [ esi + 0x160 ] eax
mov [ esi + 0x164 ] eax
mov [ esi + 0x15c ] r--data
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x134 ] r--data
mov eax esi
pop esi
retn
sub_40e520
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x134 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_40e630
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_40e710
push ebp
mov ebp esp
push 0xffffffff
push sub_45142f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x24 ]
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x5
call sub_404680
mov ecx edi
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_40e7e0
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov [ esi ] r--data
call sub_40d300
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40e810
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
push esi
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edi edi
add edi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ esi + 0xc ]
push ecx
mov [ esi + 0x4 ] r--data
call sub_43c44d
push esi
call sub_43c44d
add esp 0x8
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
sub_40e890
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
push esi
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edi edi
add edi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_43c44d
push esi
call sub_43c44d
add esp 0x8
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
sub_40e900
push ebp
mov ebp esp
push 0xffffffff
push sub_45145b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x8
call sub_43c55a
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
mov [ esi ] cx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov [ edx + ecx * 4 ] esi
mov eax [ edi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ edi + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
jmp r-xdata
sub_40e9a0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
push esi
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edi edi
add edi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
push esi
call sub_43c44d
add esp 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40ea20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
mov [ esi ] cx
lea ecx [ esi + 0x4 ]
xor edx edx
add eax 0x4
push eax
mov [ ecx ] r--data
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
call sub_40d300
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40ea50
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
push eax
mov [ esi + 0x24 ] r--data
call sub_43c44d
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40ea80
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x164 ]
push eax
mov [ esi + 0x15c ] r--data
call sub_43c44d
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40eac0
push ebp
mov ebp esp
push 0xffffffff
push sub_451493
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
lea esi [ edi + 0x2c ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov eax [ edi + 0x20 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40eb40
push ebp
mov ebp esp
push 0xffffffff
push sub_4514e4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xcc ]
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_404680
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_404780
mov eax [ esi + 0xc8 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x0
call sub_40d6a0
add esi 0x14
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40ec00
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40ec30
push ebp
mov ebp esp
push 0xffffffff
push sub_4515c5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
mov esi [ ebp + 0x28 ]
xor ebx ebx
mov [ esi ] 0x2
mov [ ebp - 0x28 ] ebx
mov edi [ ebp + 0x14 ]
test [ edi + 0x2 ] 0x1
movzx eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xf ] 0x1
mov [ ebp - 0xd ] bl
mov [ ebp - 0xe ] bl
mov [ ebp - 0x2c ] eax
je r-xdata
push 0x20
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
test [ edi + 0x2 ] 0x40
je r-xdata
xor esi esi
mov [ ebp - 0x14 ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov [ eax + 0x8 ] ebx
mov esi eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x2c ] 0x63
jne r-xdata
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ edi + 0x68 ]
call sub_40d410
test al al
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov [ ebp - 0x34 ] esi
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x40 ]
mov edx 0x2
push eax
lea ecx [ edi + 0x68 ]
mov [ ebp - 0x40 ] dx
call sub_40d3a0
test al al
je r-xdata
mov [ esi ] 0x1
jmp r-xdata
mov [ ebp - 0xe ] 0x1
mov ecx [ esi + 0x8 ]
cmp ecx ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ ebp + 0x18 ]
cmp [ ebp - 0x40 ] 0x1
mov [ ebp - 0xd ] 0x1
sete [ ebp - 0xf ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov dl [ ebp - 0xf ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x1c ] dl
mov [ esi + 0x18 ] 0xffffffff
mov [ ebp - 0x30 ] ebx
cmp [ ebp - 0xd ] 0x0
mov ebx [ edi + 0x10 ]
mov edi [ edi + 0x14 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x3c ] edi
je r-xdata
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
movzx eax [ ecx + 0x94 ]
cdq
mov esi eax
xor eax eax
add esi [ ecx + 0x90 ]
mov edi edx
adc edi eax
add esi [ ecx + 0x48 ]
adc edi [ ecx + 0x4c ]
mov ecx [ ebp - 0x3c ]
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
push edi
push esi
call sub_418380
add esi ebx
adc edi [ ebp - 0x3c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp + 0x14 ]
test [ edx + 0x2 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
test edi edi
ja r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0x2c ]
mov edx [ ebp - 0x2c ]
xor ebx ebx
xor esi esi
cmp edi ebx
jle r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
add ebx 0xfffffff6
adc edi 0xffffffff
mov [ ebp - 0x3c ] edi
jb r-xdata
cmp esi edi
jne r-xdata
mov eax [ eax + 0x30 ]
cmp [ ebp - 0xe ] 0x0
mov edi [ ebp - 0x18 ]
je r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx edx
xor eax eax
add ecx 0x68
mov [ ebp - 0x3e ] 0x3
mov [ ebp - 0x3c ] ax
call sub_40d3a0
test al al
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call ecx
jmp r-xdata
cmp ebx 0xa
jae r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x30 ]
mov esi [ ecx + esi * 4 ]
mov esi [ esi + 0x4 ]
mov [ ebp + 0xc ] esi
mov [ ebp + 0x1c ] ebx
mov edx [ esi ]
mov ecx [ edx ]
lea eax [ ebp + 0x1c ]
push eax
push r--data
push esi
mov [ ebp - 0x4 ] 0x12
call ecx
mov eax [ ebp + 0x1c ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4 ] 0xd
mov [ ebp - 0x40 ] dx
cmp dx bx
jne r-xdata
mov ecx [ ebp - 0x18 ]
inc esi
add eax 0x4
cmp esi [ ecx + 0x2c ]
jl r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x3c ]
mov edi [ ebp - 0x18 ]
cmp [ edi + 0x14 ] 0x0
mov [ ebp - 0x2c ] eax
jne r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
mov edx [ ebp + 0x14 ]
mov cl [ edx + 0x2 ]
mov [ ebp + 0x1b ] cl
mov edx [ eax ]
mov edx [ edx + 0xc ]
push 0x1
lea ecx [ ebp + 0x1b ]
push ecx
push eax
call edx
mov edi eax
mov eax [ ebp + 0x1c ]
cmp edi ebx
je r-xdata
cmp dx 0x1
jne r-xdata
push 0x18
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
mov ecx [ eax ]
cmp [ ecx ] dx
je r-xdata
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
push 0x24
call sub_43c55a
add esp 0x4
test eax eax
je r-xdata
mov esi [ edi + 0x10 ]
test esi esi
je r-xdata
push 0x184
call sub_43c55a
add esp 0x4
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
push 0x240
call sub_43c55a
add esp 0x4
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ ebp + 0x18 ] ebx
mov eax [ esi ]
mov edx [ eax ]
lea ecx [ ebp + 0x18 ]
push ecx
push r--data
push esi
mov [ ebp - 0x4 ] 0x13
call edx
mov eax [ ebp + 0x18 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
cmp dx 0x6
jne r-xdata
push 0xc008
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
jmp r-xdata
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] ebx
mov edx [ eax ]
mov esi eax
push eax
mov eax [ edx + 0x4 ]
call eax
jmp r-xdata
mov ebx esi
mov [ ebp - 0x1c ] ebx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push esi
call eax
xor eax eax
mov ecx eax
call sub_40e610
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
jmp r-xdata
xor eax eax
mov ecx eax
call sub_40e4d0
jmp r-xdata
mov al [ ebp - 0x3e ]
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0x1b ] al
mov eax [ ecx + 0x8 ]
mov edx [ eax + 0x238 ]
mov edx [ edx + 0xc ]
add eax 0x238
push 0x1
lea ecx [ ebp + 0x1b ]
push ecx
mov ebx esi
push eax
mov [ ebp - 0x1c ] ebx
call edx
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
xor eax eax
mov ecx eax
call sub_40e310
jmp r-xdata
push eax
call edx
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
mov edx [ ebp + 0x24 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov esi eax
mov eax [ ebp + 0x18 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp dx 0xe
jne r-xdata
push 0x248
call sub_43c55a
add esp 0x4
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] 0xe
cmp eax ebx
je r-xdata
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov ecx [ eax ]
mov esi eax
push eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x18 ]
add esi 0x20
cmp [ esi ] edi
jne r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x3
cmp eax edi
je r-xdata
push eax
lea ecx [ edi + 0xc ]
mov [ edi ] eax
call sub_40c3a0
push eax
lea ecx [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x3
mov [ edi + 0x4 ] eax
call sub_40c3a0
xor edi edi
mov [ ebp - 0x24 ] edi
mov ecx [ ebx ]
mov eax [ ecx ]
lea edx [ ebp - 0x24 ]
push edx
push r--data
push ebx
mov [ ebp - 0x4 ] 0x6
call eax
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0x2
test esi esi
je r-xdata
push eax
lea ecx [ edi + 0x14 ]
mov [ ebp - 0x4 ] 0x3
mov [ edi + 0x8 ] eax
call sub_40c3a0
xor ebx ebx
mov [ ebp + 0x1c ] ebx
mov eax [ ebp + 0x14 ]
test [ eax + 0x2 ] 0x1
mov [ ebp - 0x4 ] 0x14
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp dx 0x62
jne r-xdata
push 0x10
call sub_43c55a
add esp 0x4
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] 0xf
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_421790
mov esi eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
call edx
mov [ ebp - 0x3c ] esi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov eax [ esi ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx ]
push esi
push r--data
push eax
call edx
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0x2
call ecx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
mov edi [ ebp - 0x20 ]
test edi edi
je r-xdata
mov edi [ ebp - 0x18 ]
cmp [ edi + 0x1c ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x0
call edx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
cmp dx 0xc
jne r-xdata
push 0x1cf0
call sub_43c55a
add esp 0x4
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] 0x10
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_40c8d0
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp - 0x4 ] 0xd
cmp esi ebx
je r-xdata
xor esi esi
mov ax [ ebp - 0x40 ]
mov [ esi ] ax
mov ecx [ ebp - 0x3c ]
mov [ esi + 0x4 ] ecx
mov eax [ ebp - 0x3c ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push edi
push edi
push eax
call edx
mov esi eax
cmp esi edi
jne r-xdata
mov [ ebp + 0x18 ] edi
mov ecx [ eax ]
lea edx [ ebp + 0x18 ]
push edx
push eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x4 ] 0x7
call eax
mov esi eax
cmp esi edi
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ebx edi
mov [ ebp + 0x1c ] ebx
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push edi
call eax
mov esi [ edi + 0x18 ]
mov edi [ ebp - 0x1c ]
test edi edi
je r-xdata
push 0x78
call sub_43c55a
add esp 0x4
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] 0x15
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax 0xff
cmp dx ax
jbe r-xdata
mov eax 0x40202
xor edx edx
jmp r-xdata
xor eax eax
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0xd
call sub_402680
jmp r-xdata
push 0x1
mov ecx eax
call sub_421090
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0xd
call sub_402680
jmp r-xdata
mov ecx [ esi ]
push esi
mov [ ebp - 0x4 ] 0xd
cmp esi ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ edi + 0x24 ]
mov [ ebp - 0x4 ] 0xd
call sub_404690
mov ecx [ edi + 0x2c ]
mov edx [ edi + 0x30 ]
mov [ edx + ecx * 4 ] esi
mov esi [ edi + 0x2c ]
lea eax [ esi + 0x1 ]
mov [ edi + 0x2c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x3
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_402d80
cmp [ ebp - 0xd ] 0x0
mov [ ebp - 0x4 ] 0x8
jne r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x3
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x3
cmp esi 0x80004001
jne r-xdata
mov [ ebp - 0x4 ] 0x3
test ebx ebx
je r-xdata
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
xor eax eax
mov ecx eax
call sub_420590
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
movzx eax dl
cdq
add eax 0x40100
adc edx ebx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x28 ]
mov [ ecx ] 0x1
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
push ebx
lea ecx [ ebp - 0x3c ]
push ecx
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_41c9b0
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
mov edi [ ebp - 0x18 ]
push 0x8
call sub_43c55a
mov esi eax
add esp 0x4
mov [ ebp + 0x18 ] esi
mov [ ebp - 0x4 ] 0x11
cmp esi ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ ebp + 0x18 ]
push edx
lea ecx [ ebp - 0x58 ]
call sub_405570
push edi
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x64 ]
push ecx
mov [ ebp - 0x4 ] 0x9
call sub_410870
add esp 0xc
push eax
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0xa
call sub_4083b0
mov edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x4 ] 0x9
call sub_43c44d
mov eax [ ebp - 0x58 ]
push eax
cmp [ ebp - 0xe ] 0x0
jne r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0x2
call edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
cmp eax edi
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
test esi esi
je r-xdata
mov eax [ ebp + 0x28 ]
mov [ eax ] 0x1
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x8 ]
push ebx
call edx
cmp [ ebp - 0xd ] 0x0
mov [ esi + 0x74 ] edi
mov edi [ ebp - 0x20 ]
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
xor esi esi
lea esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x14
mov [ edi + 0x18 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x3c ] ebx
jne r-xdata
mov eax [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
cmp eax ebx
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
call sub_43c44d
mov eax [ ebp + 0x18 ]
add esp 0x4
push eax
call [ SysFreeString@IAT ]
jmp r-xdata
call sub_43c44d
mov ecx [ ebp + 0x18 ]
add esp 0x4
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x3
cmp eax edi
je r-xdata
mov eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_405570
push 0x1
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x4 ] 0xb
call sub_410870
add esp 0xc
push eax
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0xc
call sub_4083b0
mov eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] 0xb
call sub_43c44d
mov ecx [ ebp - 0x58 ]
push ecx
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x8 ]
push ebx
call edx
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0xe ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x8 ]
push edi
call sub_41b2d0
jmp r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
test esi esi
je r-xdata
mov eax [ ebp + 0x28 ]
mov [ eax ] 0x1
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0x2
call edx
mov eax [ ebp - 0x20 ]
cmp eax edi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0x4 ] 0x8
call sub_43c44d
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x24 ]
mov esi [ ebp - 0x44 ]
mov ecx [ eax ]
add esp 0x8
push edx
push esi
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ ebp - 0x4 ] 0x7
push esi
cmp eax edi
je r-xdata
cmp [ ebp - 0xf ] 0x0
mov bl 0x1
mov [ ebp - 0x10 ] bl
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
call ecx
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
call ecx
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov eax [ edi ]
push edi
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
push edi
call sub_41c050
mov eax [ ebp + 0x14 ]
mov edx [ eax + 0x1c ]
mov ecx [ eax + 0x18 ]
push edx
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x18 ]
push ecx
mov ecx [ eax + 0x4 ]
push edx
push edi
call sub_41bd10
mov esi eax
test esi esi
jne r-xdata
mov esi eax
test esi esi
jne r-xdata
mov [ edi + 0x1c ] esi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x20 ]
cmp eax ebx
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp + 0x14 ]
not eax
cmp eax [ ecx + 0xc ]
sete bl
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ edi ]
push edi
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x10 ]
add eax 0x4
mov ecx [ eax + 0x8 ]
call ecx
cmp esi 0x1
jne r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0xc ]
add eax 0x4
push edi
push eax
call edx
mov esi eax
test esi esi
je r-xdata
mov edx [ ebp - 0x18 ]
lea ecx [ ebp + 0x1b ]
push ecx
mov ecx [ edx + 0x4 ]
call sub_41bab0
mov esi eax
test esi esi
jne r-xdata
mov esi [ ebp - 0x30 ]
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
mov ecx [ ebp + 0x10 ]
push 0x0
push 0xa
push edx
push eax
call sub_418380
mov esi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x0
call edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
call edx
mov esi [ ebx + 0x1c ]
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x28 ] ecx
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
cmp [ ebp + 0x1b ] al
jne r-xdata
mov eax 0x3
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
mov [ ebp - 0x30 ] esi
call sub_41b3b0
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x10 ]
add eax 0x4
jmp r-xdata
cmp [ ebp - 0xd ] 0x0
mov ebx esi
mov [ ebp + 0x1c ] ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
jmp r-xdata
test bl bl
je r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
push eax
call edx
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x14 ]
add edx 0x18
push edx
mov edx [ ebp - 0x14 ]
push 0x0
push edx
push ebx
push eax
mov eax [ ecx + 0xc ]
call eax
mov esi eax
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x8 ]
call sub_41b380
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov eax [ esi ]
push esi
cmp [ ebp - 0x1c ] 0x0
mov edx [ ebp + 0x28 ]
mov [ edx ] eax
mov [ ebp - 0x4 ] 0x2
je r-xdata
jmp r-xdata
sub_40f940
push ebp
mov ebp esp
push 0xffffffff
push sub_45160e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x84 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x7c ] r--data
call sub_43c44d
lea edi [ esi + 0x68 ]
add esp 0x4
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_404680
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_404780
lea edi [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x4
call sub_404680
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_404780
mov eax [ esi + 0x20 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40fa00
push ebp
mov ebp esp
push 0xffffffff
push sub_45163b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x10
call sub_43c55a
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
xor edx edx
mov [ ebp - 0x4 ] edx
cmp esi edx
je r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
mov [ esi ] cx
lea ecx [ esi + 0x4 ]
add eax 0x4
push eax
mov [ ecx ] r--data
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
call sub_40d300
jmp r-xdata
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov edx [ edi + 0x8 ]
mov eax [ edi + 0xc ]
mov [ eax + edx * 4 ] esi
mov eax [ edi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ edi + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40faa0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x2c ]
push eax
mov [ esi + 0x24 ] r--data
call sub_43c44d
push esi
call sub_43c44d
add esp 0x8
xor eax eax
sub_40fad0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x164 ]
push eax
mov [ esi + 0x15c ] r--data
call sub_43c44d
push esi
call sub_43c44d
add esp 0x8
xor eax eax
sub_40fb10
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40eb40
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40fb50
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f940
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_40fb80
push ebp
mov ebp esp
push 0xffffffff
push sub_45166b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x8 ]
mov eax [ esi + 0x8 ]
add eax edi
push eax
mov [ ebp - 0x14 ] edi
call sub_404510
mov [ ebp - 0x10 ] 0x0
test edi edi
jle r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ ebp - 0x10 ]
mov ebx [ edx + eax * 4 ]
push 0x10
call sub_43c55a
mov edi eax
add esp 0x4
mov [ ebp - 0x18 ] edi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
xor edi edi
mov cx [ ebx ]
mov [ edi ] cx
lea ecx [ edi + 0x4 ]
add ebx 0x4
push ebx
mov [ ecx ] r--data
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
call sub_40d300
jmp r-xdata
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ eax + edx * 4 ] edi
mov eax [ ebp - 0x10 ]
inc [ esi + 0x8 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ ebp - 0x14 ]
jl r-xdata
sub_40fc90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_40eb40
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_40fcc0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
push esi
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edi edi
add edi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx esi
call sub_40f940
push esi
call sub_43c44d
add esp 0x4
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
sub_40fd80
push ebp
mov ebp esp
push 0xffffffff
push sub_451698
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x4
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
call sub_404680
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_40fb80
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40fdf0
push ebp
mov ebp esp
push 0xffffffff
push sub_4516c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x4
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
call sub_404680
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_40fb80
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40fe60
push ebp
mov ebp esp
push 0xffffffff
push sub_451703
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
mov ax [ edi ]
mov [ esi ] ax
mov cx [ edi + 0x2 ]
mov [ esi + 0x2 ] cx
mov dx [ edi + 0x4 ]
mov [ esi + 0x4 ] dx
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0xc ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov ecx [ edi + 0x18 ]
mov [ esi + 0x18 ] ecx
mov edx [ edi + 0x1c ]
xor eax eax
mov [ esi + 0x1c ] edx
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov eax [ edi + 0x24 ]
push eax
lea ecx [ esi + 0x20 ]
call sub_4026e0
mov edx [ edi + 0x20 ]
mov ecx [ esi + 0x20 ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov ecx [ edi + 0x24 ]
mov [ esi + 0x24 ] ecx
lea ebx [ esi + 0x2c ]
xor eax eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] ebx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x4
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
mov [ ebx ] r--data
call sub_404680
add edi 0x2c
push edi
mov ecx ebx
call sub_40fb80
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40ff50
push ebp
mov ebp esp
push 0xffffffff
push sub_45173b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_40fe60
mov cx [ edi + 0x40 ]
mov [ esi + 0x40 ] cx
mov dx [ edi + 0x42 ]
mov [ esi + 0x42 ] dx
mov ecx [ edi + 0x44 ]
mov [ esi + 0x44 ] ecx
mov edx [ edi + 0x48 ]
mov [ esi + 0x48 ] edx
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov ecx [ edi + 0x54 ]
mov [ esi + 0x54 ] ecx
mov edx [ edi + 0x58 ]
mov [ esi + 0x58 ] edx
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x60 ]
mov [ esi + 0x60 ] edx
mov ecx [ edi + 0x64 ]
lea ebx [ esi + 0x68 ]
xor eax eax
mov [ esi + 0x64 ] ecx
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] ebx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x4
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
mov [ ebx ] r--data
call sub_404680
lea edx [ edi + 0x68 ]
push edx
mov ecx ebx
call sub_40fb80
lea ecx [ esi + 0x7c ]
xor eax eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
lea eax [ edi + 0x7c ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ecx ] r--data
call sub_40d300
mov cl [ edi + 0x88 ]
mov [ esi + 0x88 ] cl
mov dl [ edi + 0x89 ]
mov [ esi + 0x89 ] dl
mov al [ edi + 0x8a ]
mov [ esi + 0x8a ] al
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_410060
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_40ff50
mov eax [ edi + 0x90 ]
mov [ esi + 0x90 ] eax
mov cx [ edi + 0x94 ]
pop edi
mov [ esi + 0x94 ] cx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4100a0
push ebp
mov ebp esp
push 0xffffffff
push sub_45178e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4c ] 0x4
mov [ ebp - 0x5c ] r--data
xor edx edx
xor esi esi
xor edi edi
cmp [ ebp + 0x10 ] 0xffffffff
mov [ ebp - 0x4 ] 0x1
sete al
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x19 ] al
test al al
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x1c ]
mov [ ebp + 0x10 ] ecx
xor ecx ecx
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] dl
call sub_40e710
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edi [ ebp + 0x18 ]
mov ecx [ edi ]
push esi
push edx
mov edx [ ecx + 0xc ]
push edi
call edx
mov esi eax
cmp esi ebx
jne r-xdata
test al al
je r-xdata
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x0
call sub_40e710
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push 0x38
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
call sub_43c55a
add esp 0x4
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + ecx * 4 ]
mov eax ecx
jmp r-xdata
xor esi esi
mov [ ebp - 0x40 ] esi
mov ecx eax
call sub_415060
mov esi eax
mov [ ebp - 0x40 ] eax
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + 0x20 ]
mov eax [ ebx + eax * 4 ]
add edx [ eax + 0x18 ]
adc esi [ eax + 0x1c ]
add edi [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
adc [ ebp - 0x24 ] eax
mov al [ ebp - 0x19 ]
inc ecx
xor ebx ebx
jmp r-xdata
push ebx
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_414f50
mov [ ebp - 0x20 ] ebx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] esi
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
mov [ esi + 0x20 ] eax
mov eax [ ebp - 0x2c ]
mov [ esi + 0x24 ] ecx
mov ecx esi
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ esi + 0x28 ] edx
mov [ esi + 0x2c ] eax
call sub_414e60
mov esi eax
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x0
call sub_40e710
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
call edx
mov [ ebp - 0x14 ] 0x0
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
mov [ ebp - 0x4 ] 0x4
setne bl
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edi ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
mov esi [ eax + ecx * 4 ]
mov esi [ ebp - 0x20 ]
jmp r-xdata
mov ecx [ edi ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x20 ]
mov esi [ eax + esi * 4 ]
push esi
lea ecx [ ebp - 0x118 ]
call sub_40ff50
mov ecx [ esi + 0x90 ]
mov [ ebp - 0x88 ] ecx
mov dx [ esi + 0x94 ]
mov [ ebp - 0x84 ] dx
cmp [ ebp - 0x90 ] 0x0
mov [ ebp - 0x4 ] 0x5
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ eax ]
mov edx [ edx + 0x14 ]
push ebx
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push eax
call edx
mov edi eax
test edi edi
je r-xdata
lea ecx [ ebp - 0x118 ]
call sub_41ced0
test al al
jne r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ edi + 0x28 ]
call sub_418c00
mov esi eax
cmp esi 0x1
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov ecx [ eax + 0x18 ]
push ebx
push edi
call ecx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp - 0x100 ]
mov ecx [ ebp - 0xfc ]
mov edx [ ebp - 0x108 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x104 ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] eax
jne r-xdata
test esi esi
jne r-xdata
lea ecx [ ebp - 0x118 ]
call sub_41ced0
test al al
jne r-xdata
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x0
call sub_40e710
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x118 ]
mov [ ebp - 0x4 ] 0x4
call sub_40f940
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push ebx
push eax
call edx
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x118 ]
mov [ ebp - 0x4 ] 0x4
call sub_40f940
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
mov edi [ ebp + 0x18 ]
mov ecx [ edi ]
mov edx [ ecx + 0x18 ]
push ebx
push edi
call edx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
mov edx [ edi + 0xc4 ]
mov ebx [ ebp + 0x18 ]
mov eax [ edi + 0xc8 ]
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx [ ebp - 0x18 ]
push edx
mov edx [ ebp - 0x14 ]
push ecx
push ebx
push edx
lea ecx [ ebp - 0x118 ]
push ecx
lea edx [ edi + 0x28 ]
push edx
add edi 0xcc
push edi
push eax
lea ecx [ ebp - 0x80 ]
call sub_40ec30
mov esi eax
test esi esi
jne r-xdata
lea ecx [ ebp - 0x118 ]
mov [ ebp - 0x4 ] 0x4
call sub_40f940
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x118 ]
mov [ ebp - 0x4 ] 0x4
call sub_40f940
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
inc [ ebp - 0x20 ]
mov eax [ ebp - 0x48 ]
add [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x28 ]
adc [ ebp - 0x2c ] ecx
add [ ebp - 0x38 ] edx
mov eax [ ebp - 0x24 ]
mov esi [ ebp - 0x40 ]
adc [ ebp - 0x34 ] eax
xor ebx ebx
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push 0x1
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x14 ] 0x0
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
mov edx [ ecx + 0x8 ]
call edx
mov ecx [ ebp - 0x3c ]
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
push ecx
push ebx
call edx
lea ecx [ ebp - 0x118 ]
mov esi eax
mov [ ebp - 0x4 ] 0x4
call sub_40f940
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x14 ] esi
mov edx [ ebp - 0x20 ]
mov edi [ ebp - 0x18 ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x1c ]
push edi
call ecx
mov esi eax
test esi esi
je r-xdata
test eax eax
je r-xdata
jmp r-xdata
test eax eax
je r-xdata
sub_410610
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
push 0x4
push 0x1000
push eax
push 0x0
call [ VirtualAlloc@IAT ]
pop ebp
retn
pop ebp
retn
sub_410660
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
push 0x4
push 0x1000
push eax
push 0x0
call [ VirtualAlloc@IAT ]
pop ebp
retn
pop ebp
retn
sub_4106c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp eax [ esi + 0x8 ]
jl r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
push eax
call sub_403e50
sub_4106e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4517c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
push 0x3
mov ecx esi
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_403e50
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
cmp [ edi + 0x4 ] ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ edi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jl r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edi [ edi ]
inc ebx
push ebx
push eax
mov eax [ ebp + 0x10 ]
push ecx
push edi
push 0x0
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
mov ecx esi
call sub_403e50
mov edx [ esi ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
mov [ esi + 0x4 ] eax
push r--data
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp + 0xc ] 0x44e74
call sub_43d1c8
sub_4107a0
push ebp
mov ebp esp
push 0xffffffff
push sub_451809
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
push 0x3
mov ecx esi
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_4026e0
mov eax [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov [ eax ] bl
mov eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ eax + eax ]
cmp ebx [ esi + 0x8 ]
jl r-xdata
mov eax [ esi ]
mov ecx [ edi + 0x4 ]
mov edi [ edi ]
lea edx [ ebp + 0xc ]
push edx
lea edx [ ebp + 0x14 ]
push edx
inc ebx
push ebx
push eax
mov eax [ ebp + 0x10 ]
push ecx
push edi
push 0x0
push eax
call [ WideCharToMultiByte@IAT ]
cmp [ ebp + 0xc ] 0x0
mov edx [ ebp + 0x18 ]
setne cl
mov [ edx ] cl
test eax eax
jne r-xdata
push ebx
mov ecx esi
call sub_4026e0
mov ecx [ esi ]
mov [ eax + ecx ] 0x0
mov [ esi + 0x4 ] eax
push r--data
lea eax [ ebp + 0x18 ]
push eax
mov [ ebp + 0x18 ] 0x44e75
call sub_43d1c8
sub_410870
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0xb ]
push eax
push 0x5f
push ecx
push edx
push esi
mov [ ebp - 0x4 ] 0x0
call sub_4107a0
add esp 0x14
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_4108a0
push ebp
mov ebp esp
push 0xffffffff
push sub_451849
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
push 0x3
mov ecx esi
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_4026e0
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
add eax eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
cmp eax [ esi + 0x8 ]
jl r-xdata
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ CharToOemW@IAT ]
mov ecx [ esi ]
xor eax eax
cmp [ ecx ] bl
je r-xdata
push eax
mov ecx esi
call sub_4026e0
mov [ ecx + eax ] bl
mov [ esi + 0x4 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx ecx
inc eax
cmp [ edx + eax ] bl
jne r-xdata
sub_410940
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
add ecx 0xfffffffe
mov [ ebp - 0x50 ] eax
cmp ecx 0x22
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov [ eax ] 0x0
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
push ebx
mov edi edi
add ecx 0x57
add ecx 0x30
jmp r-xdata
mov edx [ ebp + 0x14 ]
push edi
push edx
push ecx
push eax
call sub_43d720
mov [ ebp - 0x54 ] ebx
cmp ecx 0xa
jge r-xdata
pop ebx
lea ebx [ ebx ]
mov [ ebp + esi - 0x4c ] cl
mov ecx edx
mov edx eax
inc esi
or edx ecx
jne r-xdata
mov eax [ ebp - 0x50 ]
mov cl [ ebp + esi - 0x4d ]
dec esi
mov [ eax ] cl
inc eax
mov [ ebp - 0x50 ] eax
test esi esi
jg r-xdata
mov edx eax
pop edi
mov [ edx ] 0x0
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_4109e0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov edi edi
push 0x0
push 0xa
push eax
push esi
call sub_43d7c0
lea ecx [ eax + eax * 4 ]
add ecx ecx
sub esi ecx
add esi 0x30
mov [ ebp + edi * 2 - 0x44 ] si
mov esi eax
mov eax edx
mov edx esi
inc edi
or edx eax
jne r-xdata
mov ax [ ebp + edi * 2 - 0x46 ]
dec edi
mov [ ebx ] ax
add ebx 0x2
test edi edi
jg r-xdata
xor ecx ecx
mov [ ebx ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_410a90
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test ecx ecx
jg r-xdata
mov edx [ ebp + 0x10 ]
push 0xa
push edx
push ecx
push eax
call sub_410940
add esp 0x10
pop ebp
retn
jl r-xdata
mov edx [ ebp + 0x10 ]
inc edx
mov [ edx - 0x1 ] 0x2d
neg eax
adc ecx 0x0
mov [ ebp + 0x10 ] edx
neg ecx
test eax eax
jae r-xdata
sub_410ad0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test ecx ecx
jg r-xdata
mov edx [ ebp + 0x10 ]
push edx
push ecx
push eax
call sub_4109e0
add esp 0xc
pop ebp
retn
jl r-xdata
mov edx [ ebp + 0x10 ]
push esi
mov esi 0x2d
mov [ edx ] si
add edx 0x2
neg eax
adc ecx 0x0
mov [ ebp + 0x10 ] edx
neg ecx
pop esi
test eax eax
jae r-xdata
sub_410b10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0xf
shr eax 0x4
lea edx [ ecx + 0x30 ]
cmp ecx 0xa
jl r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi eax
and esi 0xf
shr eax 0x4
mov [ ecx + 0x7 ] dl
lea edx [ esi + 0x30 ]
cmp esi 0xa
jl r-xdata
lea edx [ ecx + 0x37 ]
mov esi eax
and esi 0xf
shr eax 0x4
mov [ ecx + 0x6 ] dl
lea edx [ esi + 0x30 ]
cmp esi 0xa
jl r-xdata
lea edx [ esi + 0x37 ]
mov esi eax
and esi 0xf
shr eax 0x4
mov [ ecx + 0x5 ] dl
lea edx [ esi + 0x30 ]
cmp esi 0xa
jl r-xdata
lea edx [ esi + 0x37 ]
mov esi eax
and esi 0xf
shr eax 0x4
mov [ ecx + 0x4 ] dl
lea edx [ esi + 0x30 ]
cmp esi 0xa
jl r-xdata
lea edx [ esi + 0x37 ]
mov esi eax
and esi 0xf
shr eax 0x4
mov [ ecx + 0x3 ] dl
lea edx [ esi + 0x30 ]
cmp esi 0xa
jl r-xdata
lea edx [ esi + 0x37 ]
mov esi eax
and esi 0xf
shr eax 0x4
mov [ ecx + 0x2 ] dl
lea edx [ esi + 0x30 ]
cmp esi 0xa
jl r-xdata
lea edx [ esi + 0x37 ]
and eax 0xf
mov [ ecx + 0x1 ] dl
pop esi
cmp eax 0xa
jge r-xdata
lea edx [ esi + 0x37 ]
add eax 0x37
mov [ ecx ] al
mov [ ecx + 0x8 ] 0x0
pop ebp
retn
add eax 0x30
mov [ ecx ] al
mov [ ecx + 0x8 ] 0x0
pop ebp
retn
sub_410c00
push ebx
push esi
mov eax ecx
xor esi esi
mov edx esi
sar edx 0x1
and edx 0x55
mov ecx esi
and ecx 0x55
add ecx ecx
or edx ecx
mov ebx edx
and edx 0x33
add edx edx
sar ebx 0x2
add edx edx
and ebx 0x33
or ebx edx
mov edx ebx
sar edx 0x4
and dl 0xf
shl bl 0x4
or dl bl
mov [ esi + rwxdata ] dl
inc esi
cmp esi 0x100
jl r-xdata
pop esi
pop ebx
retn
sub_410c50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_403290
add esp 0x8
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_410c70
push ebp
mov ebp esp
mov ecx [ rwxdata ]
cmp ecx 0x30
jae r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax ] 0x37
jne r-xdata
mov [ ecx * 4 + rwxdata ] edx
inc ecx
mov [ rwxdata ] ecx
cmp [ eax + 0x2 ] 0x7a
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov [ rwxdata ] ecx
sub_410cf0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x14 ]
push r--data
mov [ ebp - 0x8 ] eax
push ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x7 ] 0x0
call sub_403290
add esp 0x8
test eax eax
je r-xdata
or eax 0xffffffff
mov ecx [ rwxdata ]
mov dl [ esi + 0xd ]
xor eax eax
test ecx ecx
je r-xdata
mov esi [ eax * 4 + rwxdata ]
cmp [ esi + 0xc ] dl
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn
inc eax
cmp eax ecx
jb r-xdata
sub_410d70
push ebp
mov ebp esp
push 0xffffffff
push sub_451870
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0xc ]
push r--data
push edi
mov [ ebp - 0x4 ] 0x0
call sub_403290
push r--data
push edi
mov esi eax
call sub_403290
add esp 0x10
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_410cf0
add esp 0x4
test eax eax
jns r-xdata
test eax eax
jne r-xdata
mov eax [ eax * 4 + rwxdata ]
test esi esi
je r-xdata
mov eax 0x80040111
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0x80004002
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov ecx [ eax + 0x28 ]
call ecx
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call eax
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_410e90
push ebp
mov ebp esp
push 0xffffffff
push sub_451898
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax [ rwxdata ]
jb r-xdata
mov eax [ eax * 4 + rwxdata ]
xor ecx ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
cmp ecx 0x6
ja r-xdata
mov eax 0x80070057
jmp r-xdata
push esi
lea ecx [ ebp - 0x34 ]
call sub_411270
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] bl
call sub_4110c0
xor eax eax
jmp r-xdata
jmp [ ecx * 4 + jump_table_410ff4 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov al [ eax + 0xc ]
mov [ ebp - 0x24 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x20 ] edx
mov edx [ r--data ]
mov [ ebp - 0x1c ] ecx
push 0x10
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] edx
push ecx
mov [ ebp - 0x17 ] al
call [ SysAllocStringByteLen@IAT ]
mov [ esi + 0x8 ] eax
cmp eax ebx
je r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
cmp [ eax + 0x2c ] ebx
setne al
movzx ecx al
push ecx
lea ecx [ ebp - 0x34 ]
call sub_4117e0
jmp r-xdata
movzx edx [ eax + 0x24 ]
push edx
lea ecx [ ebp - 0x34 ]
call sub_4117e0
jmp r-xdata
lea ecx [ eax + 0xd ]
mov eax [ eax + 0x20 ]
call sub_410cb0
lea ecx [ ebp - 0x34 ]
mov esi eax
mov [ ebp - 0x4 ] bl
call sub_4110c0
mov eax esi
jmp r-xdata
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] bl
call sub_4110c0
xor eax eax
jmp r-xdata
mov edx 0x8
mov [ esi ] dx
jmp r-xdata
cmp eax ebx
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_411620
sub_411050
movzx eax [ ecx ]
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push ecx
call [ VariantClear@IAT ]
retn
movzx eax [ eax + lookup_table_411080 ]
jmp [ eax * 4 + jump_table_411078 ]
xor edx edx
mov [ ecx ] edx
xor eax eax
retn
sub_411082
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
sub_4110c0
movzx eax [ ecx ]
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push ecx
call [ VariantClear@IAT ]
retn
movzx eax [ eax + lookup_table_4110f0 ]
jmp [ eax * 4 + jump_table_4110e8 ]
xor edx edx
mov [ ecx ] edx
xor eax eax
retn
sub_4110f2
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call [ VariantClear@IAT ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx ]
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push ecx
push esi
call [ VariantCopy@IAT ]
pop esi
pop ebp
retn 0x4
movzx eax [ eax + lookup_table_411184 ]
jmp [ eax * 4 + jump_table_41117c ]
push 0x10
push ecx
push esi
call sub_43d220
add esp 0xc
xor eax eax
pop esi
pop ebp
retn 0x4
sub_411186
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
int3
sub_4111d0
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi ]
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
js r-xdata
movzx eax [ eax + lookup_table_411230 ]
jmp [ eax * 4 + jump_table_411228 ]
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0xc ]
xor ecx ecx
mov [ esi + 0xc ] edx
mov [ eax ] cx
xor eax eax
xor ecx ecx
mov [ esi ] ecx
jmp r-xdata
sub_411270
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movzx eax [ esi ]
add eax 0xfffffffe
push edi
mov edi ecx
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
js r-xdata
movzx eax [ eax + lookup_table_4112d0 ]
jmp [ eax * 4 + jump_table_4112c8 ]
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
xor ecx ecx
mov [ esi + 0xc ] eax
mov [ edi ] cx
xor eax eax
xor ecx ecx
mov [ esi ] ecx
jmp r-xdata
sub_4112d2
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
push esi
mov esi ecx
movzx eax [ esi ]
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_411354 ]
jmp [ eax * 4 + jump_table_41134c ]
pop esi
retn
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
xor ecx ecx
mov [ esi ] ecx
xor eax eax
pop esi
retn
sub_411356
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
int3
sub_4113a0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call [ VariantClear@IAT ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx ]
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push ecx
push esi
call [ VariantCopy@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_41141c ]
jmp [ eax * 4 + jump_table_411414 ]
pop esi
pop ebp
retn 0x4
cmp eax 0x8007000e
jne r-xdata
push 0x10
push ecx
push esi
call sub_43d220
add esp 0xc
pop esi
pop ebp
retn 0x4
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
mov ecx [ rwxdata ]
push r--data
lea edx [ ebp + 0x8 ]
push edx
mov [ ebp + 0x8 ] ecx
call sub_43d1c8
sub_41141e
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
int3
sub_411460
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
cmp ax cx
jae r-xdata
xor edx edx
cmp ax cx
setne dl
mov eax edx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_411490
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov cl [ ebp + 0xc ]
cmp al cl
jae r-xdata
xor edx edx
cmp al cl
setne dl
mov eax edx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_4114b0
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
cmp ax cx
jge r-xdata
xor edx edx
cmp ax cx
setne dl
mov eax edx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_4114e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jge r-xdata
xor edx edx
cmp eax ecx
setne dl
mov eax edx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_411500
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
xor edx edx
cmp eax ecx
setne dl
mov eax edx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_411520
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ecx
jg r-xdata
cmp esi edx
jl r-xdata
mov eax 0x1
pop esi
pop ebp
retn
cmp eax ecx
jne r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
cmp esi edx
jae r-xdata
xor eax eax
pop esi
pop ebp
retn
jne r-xdata
sub_411560
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ecx
ja r-xdata
cmp esi edx
jb r-xdata
mov eax 0x1
pop esi
pop ebp
retn
cmp eax ecx
jne r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
cmp esi edx
jae r-xdata
xor eax eax
pop esi
pop ebp
retn
jne r-xdata
sub_4115a0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push ecx
mov ecx esi
mov [ esi ] ax
call sub_4113a0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4115c0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push ecx
mov ecx esi
mov [ esi ] ax
call sub_4113a0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411620
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi ]
add eax 0xfffffffe
push edi
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_4116a0 ]
jmp [ eax * 4 + jump_table_411698 ]
mov edi [ ebp + 0x8 ]
push edi
mov [ esi ] 0x8
call [ SysAllocString@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
xor ecx ecx
mov [ esi ] ecx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test edi edi
je r-xdata
mov ecx [ rwxdata ]
push r--data
lea edx [ ebp + 0x8 ]
push edx
mov [ ebp + 0x8 ] ecx
call sub_43d1c8
sub_4116e0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
movzx eax [ esi ]
add eax 0xfffffffe
push edi
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_411794 ]
jmp [ eax * 4 + jump_table_41178c ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
mov [ esi ] 0x8
lea edx [ eax + 0x1 ]
jmp r-xdata
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
xor ecx ecx
mov [ esi ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edi eax
lea ecx [ edi + edi ]
push ecx
push 0x0
call [ SysAllocStringByteLen@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ rwxdata ]
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] edx
call sub_43d1c8
movsx cx [ eax + ebx ]
mov edx [ esi + 0x8 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp eax edi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
sub_411796
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
int3
sub_4117e0
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi ]
cmp eax 0xb
je r-xdata
movzx eax [ ebp + 0x8 ]
neg eax
sbb eax eax
mov [ esi + 0x8 ] ax
mov eax esi
pop esi
pop ebp
retn 0x4
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_411844 ]
jmp [ eax * 4 + jump_table_41183c ]
mov edx 0xb
mov [ esi ] dx
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
xor ecx ecx
mov [ esi ] ecx
jmp r-xdata
sub_411846
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
int3
sub_411890
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi ]
cmp eax 0x11
je r-xdata
mov cl [ ebp + 0x8 ]
mov [ esi + 0x8 ] cl
mov eax esi
pop esi
pop ebp
retn 0x4
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_411910 ]
jmp [ eax * 4 + jump_table_411908 ]
mov al [ ebp + 0x8 ]
mov edx 0x11
mov [ esi + 0x8 ] al
mov [ esi ] dx
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
mov al [ ebp + 0x8 ]
xor ecx ecx
mov [ esi ] ecx
mov edx 0x11
mov [ esi + 0x8 ] al
mov [ esi ] dx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411912
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi ]
cmp eax 0x2
je r-xdata
mov cx [ ebp + 0x8 ]
mov [ esi + 0x8 ] cx
mov eax esi
pop esi
pop ebp
retn 0x4
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + sub_4119c0 ]
jmp [ eax * 4 + jump_table_4119b8 ]
mov ax [ ebp + 0x8 ]
mov edx 0x2
mov [ esi + 0x8 ] ax
mov [ esi ] dx
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
xor ecx ecx
mov [ esi ] ecx
jmp r-xdata
sub_4119c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi ]
cmp eax 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_411a80 ]
jmp [ eax * 4 + jump_table_411a78 ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
mov [ esi + 0x8 ] eax
mov [ esi ] dx
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ esi ] ecx
mov edx 0x3
mov [ esi + 0x8 ] eax
mov [ esi ] dx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411a82
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
sub_411ac0
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi ]
cmp eax 0x13
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_411b40 ]
jmp [ eax * 4 + jump_table_411b38 ]
mov eax [ ebp + 0x8 ]
mov edx 0x13
mov [ esi + 0x8 ] eax
mov [ esi ] dx
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ esi ] ecx
mov edx 0x13
mov [ esi + 0x8 ] eax
mov [ esi ] dx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411b80
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi ]
cmp eax 0x15
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
mov eax esi
pop esi
pop ebp
retn 0x8
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_411be4 ]
jmp [ eax * 4 + jump_table_411bdc ]
mov edx 0x15
mov [ esi ] dx
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
xor ecx ecx
mov [ esi ] ecx
jmp r-xdata
sub_411be6
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
int3
sub_411c30
push ebp
mov ebp esp
push esi
mov esi ecx
movzx eax [ esi ]
cmp eax 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
add eax 0xfffffffe
cmp eax 0x3e
ja r-xdata
push esi
call [ VariantClear@IAT ]
test eax eax
jns r-xdata
movzx eax [ eax + lookup_table_411c98 ]
jmp [ eax * 4 + jump_table_411c90 ]
mov edx 0x40
mov [ esi ] dx
mov ecx 0xa
mov [ esi ] cx
mov [ esi + 0x8 ] eax
xor ecx ecx
mov [ esi ] ecx
jmp r-xdata
sub_411c9a
add [ eax ] al
add [ eax ] al
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add ah cl
int3
sub_411ce0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ ecx ]
push esi
movzx esi [ eax ]
cmp dx si
je r-xdata
cmp edx 0x40
ja r-xdata
mov eax esi
mov ecx edx
cmp cx ax
jae r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
movzx edx [ edx + lookup_table_411e34 ]
jmp [ edx * 4 + jump_table_411e08 ]
xor edx edx
cmp cx ax
setne dl
pop esi
mov eax edx
pop ebp
retn 0x4
or eax 0xffffffff
pop esi
pop ebp
retn 0x4
movzx eax [ eax + 0x8 ]
movzx ecx [ ecx + 0x8 ]
push eax
push ecx
call sub_411490
add esp 0x8
pop esi
pop ebp
retn 0x4
movzx edx [ eax + 0x8 ]
movzx eax [ ecx + 0x8 ]
push edx
push eax
call sub_4114b0
add esp 0x8
pop esi
pop ebp
retn 0x4
movzx edx [ eax + 0x8 ]
movzx eax [ ecx + 0x8 ]
push edx
push eax
call sub_411460
add esp 0x8
pop esi
pop ebp
retn 0x4
mov edx [ eax + 0x8 ]
mov eax [ ecx + 0x8 ]
push edx
push eax
call sub_4114e0
add esp 0x8
pop esi
pop ebp
retn 0x4
mov edx [ eax + 0x8 ]
mov eax [ ecx + 0x8 ]
push edx
push eax
call sub_411500
add esp 0x8
pop esi
pop ebp
retn 0x4
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push edx
mov edx [ ecx + 0xc ]
push eax
mov eax [ ecx + 0x8 ]
push edx
push eax
call sub_411520
add esp 0x10
pop esi
pop ebp
retn 0x4
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push edx
mov edx [ ecx + 0xc ]
push eax
mov eax [ ecx + 0x8 ]
push edx
push eax
call sub_411560
add esp 0x10
pop esi
pop ebp
retn 0x4
movzx edx [ eax + 0x8 ]
movzx eax [ ecx + 0x8 ]
push edx
push eax
call sub_4114b0
add esp 0x8
neg eax
pop esi
pop ebp
retn 0x4
add eax 0x8
push eax
add ecx 0x8
push ecx
call [ CompareFileTime@IAT ]
pop esi
pop ebp
retn 0x4
sub_411e3f
add ecx [ edx ]
or cl [ edx ]
or cl [ edx ]
add al 0x5
push es
pop es
or [ edx ] cl
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ ecx ]
int3
sub_411e80
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push ecx
mov ecx esi
mov [ esi ] ax
call sub_411620
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411ec0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push ecx
mov ecx esi
mov [ esi ] ax
call sub_411620
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411ee0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ edi ]
mov [ edi ] 0x0
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov eax esi
cmp esi 0x80000000
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx [ edx + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
call ecx
mov ecx [ ebp + 0x10 ]
add [ edi ] ecx
add ebx ecx
sub esi ecx
test eax eax
jne r-xdata
mov eax 0x80000000
pop edi
pop esi
pop ebx
pop ebp
retn
test ecx ecx
je r-xdata
test esi esi
jne r-xdata
sub_411f40
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
lea eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov [ ebp + 0x10 ] esi
call sub_411ee0
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebp
retn
cmp esi [ ebp + 0x10 ]
setne al
sub_411f70
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
lea eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov [ ebp + 0x10 ] esi
call sub_411ee0
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov eax esi
sub eax [ ebp + 0x10 ]
neg eax
sbb eax eax
and eax 0x80004005
sub_411fb0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ecx [ ebx ]
lea edx [ ebp + 0x10 ]
push edx
push eax
mov eax [ ecx + 0xc ]
push edi
push ebx
call eax
mov ecx [ ebp + 0x10 ]
add edi ecx
sub esi ecx
test eax eax
jne r-xdata
mov eax 0x80000000
pop edi
pop esi
pop ebx
pop ebp
retn
test ecx ecx
je r-xdata
pop edi
pop esi
mov eax 0x80004005
pop ebx
pop ebp
retn
test esi esi
jne r-xdata
mov eax esi
cmp esi 0x80000000
jb r-xdata
sub_412040
mov eax [ ecx ]
cmp eax 0xffffffff
jne r-xdata
cmp [ ecx + 0xc ] 0xffffffff
jne r-xdata
mov eax 0x5
cmp [ ecx + 0x4 ] 0xffffffff
jne r-xdata
cmp eax 0x5
sbb edx edx
inc edx
mov [ ecx + 0xc ] edx
cmp [ ecx + 0x8 ] 0xffffffff
jne r-xdata
cmp eax 0x9
jb r-xdata
retn
cmp eax 0x9
jb r-xdata
cmp eax 0x7
sbb edx edx
and edx 0xfffffffe
add edx 0x3
mov edx 0xa
jmp r-xdata
cmp eax 0x7
sbb eax eax
and eax 0xffffffe0
add eax 0x40
mov [ ecx + 0x8 ] eax
mov eax 0x80
mov [ ecx + 0x8 ] eax
retn
mov [ ecx + 0x4 ] edx
sub_4120a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4518d3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
call sub_412040
mov eax [ ecx + 0xc ]
mov edx 0x13
mov [ ebp - 0x60 ] dx
xor edx edx
mov [ ebp - 0x5e ] dx
mov edx 0x13
mov [ ebp - 0x50 ] dx
xor edx edx
mov [ ebp - 0x4e ] dx
mov edx 0x13
mov [ ebp - 0x58 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x40 ] dx
xor edx edx
mov [ ebp - 0x48 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x3e ] dx
mov edx 0x13
mov [ ebp - 0x38 ] eax
mov eax [ ecx + 0x10 ]
mov [ ebp - 0x30 ] dx
xor edx edx
mov [ ebp - 0x2e ] dx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x20 ] 0xc
mov [ ebp - 0x1c ] 0xb
mov [ ebp - 0x18 ] 0x8
mov [ ebp - 0x14 ] 0xa
lea eax [ edx + 0x4 ]
cmp [ ecx + 0x14 ] dl
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0xc ]
push eax
lea edx [ ebp - 0x60 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
push esi
call ecx
push j_sub_4110c0
push 0x4
push 0x10
lea edx [ ebp - 0x60 ]
push edx
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43d898
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov eax 0x3
sub_4121d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
push edx
call sub_421a60
add esp 0x8
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_4121f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push eax
push 0x0
push esi
mov [ ebp - 0x4 ] 0x0
call sub_408fb0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_412220
push ebp
mov ebp esp
push 0xffffffff
push sub_451956
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
or eax 0xffffffff
xor ebx ebx
mov [ ecx + 0x10 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx ] eax
mov [ ecx + 0x14 ] bl
mov [ ebp - 0x24 ] ebx
cmp [ ebp + 0x10 ] ebx
jle r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_403e50
mov edx [ ebp - 0x20 ]
mov eax edi
sub edx edi
jmp r-xdata
nop
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
cmp cx bx
jne r-xdata
inc esi
cmp [ edi + esi * 2 ] bx
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x4 ] ebx
call [ CharUpperW@IAT ]
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x20 ]
push edx
call sub_43c44d
add esp 0x4
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp - 0x20 ]
cmp [ edi ] 0x58
push 0x1
jne r-xdata
lea edx [ ebp - 0x34 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_4121f0
mov eax [ eax ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x2
call sub_421a60
mov ecx [ ebp - 0x34 ]
test eax eax
push ecx
sete [ ebp + 0xf ]
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0xc
lea ecx [ ebp - 0x20 ]
cmp [ ebp + 0xf ] bl
je r-xdata
lea ecx [ ebp - 0x70 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0xc ] 0x9
call sub_409610
mov ecx [ ebp - 0x10 ]
lea edx [ ebp + 0xc ]
push edx
push ecx
push eax
mov [ ebp - 0x4 ] 0x1
call sub_421b20
mov edx [ ebp - 0x70 ]
push edx
mov esi eax
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0x10
cmp esi ebx
jne r-xdata
push 0x4
lea eax [ ebp - 0x88 ]
push eax
call sub_4121f0
mov ecx [ eax ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_421a60
mov edx [ ebp - 0x88 ]
test eax eax
push edx
sete [ ebp + 0xf ]
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0xc
lea ecx [ ebp - 0x20 ]
cmp [ ebp + 0xf ] bl
je r-xdata
push 0x1
lea edx [ ebp - 0x58 ]
push edx
mov [ ebp + 0xc ] 0x1
call sub_409610
mov edx [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
push ecx
push edx
push eax
mov [ ebp - 0x4 ] 0x3
call sub_421b20
mov esi eax
mov eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0x10
cmp esi ebx
jne r-xdata
push edi
call sub_43c44d
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
mov [ ecx ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4c ]
push eax
call sub_4121f0
mov ecx [ eax ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x6
call sub_421a60
mov edx [ ebp - 0x4c ]
test eax eax
push edx
sete [ ebp + 0xf ]
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0xc
push 0x2
lea ecx [ ebp - 0x20 ]
cmp [ ebp + 0xf ] bl
je r-xdata
push 0x4
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp + 0xc ] 0xa
call sub_409610
mov edx [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
push ecx
push edx
push eax
mov [ ebp - 0x4 ] 0x5
call sub_421b20
mov esi eax
mov eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0x10
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0xc ] ecx
jmp r-xdata
push edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
mov eax [ ebp - 0x24 ]
add [ ebp - 0x10 ] 0x10
inc eax
add esp 0x4
mov [ ebp - 0x24 ] eax
cmp eax [ ebp + 0x10 ]
jl r-xdata
lea eax [ ebp - 0x7c ]
push eax
call sub_4121f0
mov ecx [ eax ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x8
call sub_421a60
mov edx [ ebp - 0x7c ]
test eax eax
push edx
sete [ ebp + 0xf ]
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0xc
cmp [ ebp + 0xf ] bl
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp + 0xc ] 0x80
call sub_409610
mov edx [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
push ecx
push edx
push eax
mov [ ebp - 0x4 ] 0x7
call sub_421b20
mov esi eax
mov eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0x10
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov edi [ ecx + edx * 4 ]
xor esi esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
cmp [ edi ] bx
je r-xdata
push edi
call sub_43c44d
add esp 0x4
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x2
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x28 ] 0xffffffff
call sub_409610
mov edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x28 ]
push ecx
push edx
push eax
mov [ ebp - 0x4 ] 0x9
call sub_421b20
mov esi eax
mov eax [ ebp - 0x94 ]
push eax
mov [ ebp - 0x4 ] bl
call sub_43c44d
add esp 0x10
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] 0x1
sub_4125f0
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
push ebx
mov bl [ ebp + 0x8 ]
mov [ eax + edx ] bl
inc [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
pop ebx
cmp eax [ ecx + 0x8 ]
jne r-xdata
pop ebp
retn 0x4
call sub_4052e0
sub_412680
push esi
push edi
mov esi ecx
mov edi 0x8
cmp [ esi + 0x28 ] edi
jae r-xdata
mov [ esi + 0x28 ] edi
pop edi
mov [ esi + 0x2c ] 0x0
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dl [ esi + 0x2c ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx esi
call sub_4052e0
sub_4126c0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov dl 0x1
shl dl cl
mov ecx 0x8
sub ecx eax
dec dl
and dl bl
shl dl cl
pop ebx
or [ esi + 0x2c ] dl
sub eax edi
mov [ esi + 0x28 ] eax
mov edx [ esi + 0x4 ]
sub edi eax
mov ecx 0x8
sub ecx eax
mov al bl
shl al cl
mov ecx [ esi ]
or al [ esi + 0x2c ]
mov [ ecx + edx ] al
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi + 0x28 ]
shr ebx cl
mov [ esi + 0x28 ] 0x8
mov [ esi + 0x2c ] 0x0
test edi edi
jne r-xdata
mov ecx esi
call sub_4052e0
mov eax [ esi + 0x28 ]
cmp edi eax
jb r-xdata
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
sub_412740
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
push ebx
mov bl [ ebp + 0x8 ]
mov [ eax + edx ] bl
inc [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
pop ebx
cmp eax [ ecx + 0x8 ]
jne r-xdata
pop ebp
retn 0x4
call sub_4052e0
sub_4127a0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
xor esi esi
mov edi edi
inc esi
cmp esi 0x1d
jb r-xdata
push eax
lea ecx [ edx + rwxdata ]
push esi
push ecx
call sub_43d590
add esp 0xc
mov cl [ esi + r--data ]
movzx edx [ esi + r--data ]
mov eax 0x1
shl eax cl
test eax eax
jle r-xdata
xor bl bl
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] bl
mov edi r--data
inc bl
inc edi
mov [ ebp - 0x8 ] bl
cmp bl 0x12
jb r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push esi
lea eax [ eax + rwxdata ]
push ecx
push eax
call sub_43d590
add esp 0xc
add [ ebp - 0x4 ] esi
mov cl [ edi ]
mov esi 0x1
shl esi cl
test esi esi
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412830
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x200
jae r-xdata
shr eax 0x8
movzx eax [ eax + rwxdata ]
add eax 0x10
pop ebp
retn
movzx eax [ eax + rwxdata ]
pop ebp
retn
sub_4128a0
push ebp
mov ebp esp
push 0xffffffff
push sub_451980
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
cmp [ esi + 0x4a8 ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x12e0 ] 0x0
jne r-xdata
push 0x3fffc
call sub_4105e0
add esp 0x4
mov [ esi + 0x4a8 ] eax
test eax eax
je r-xdata
cmp [ esi + 0x4cd ] 0x0
je r-xdata
push 0x53000
call sub_4105e0
add esp 0x4
mov [ esi + 0x12e0 ] eax
test eax eax
je r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x4bc ] 0x0
jne r-xdata
cmp [ esi + 0x4b8 ] 0x0
jne r-xdata
cmp [ esi + 0x4e4 ] 0x0
jne r-xdata
push 0x410
call sub_4105e0
add esp 0x4
mov [ esi + 0x4bc ] eax
test eax eax
je r-xdata
push 0x13ffec
call sub_410610
add esp 0x4
mov [ esi + 0x4b8 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x9af4 ]
test eax eax
je r-xdata
movzx edx [ esi + 0x4e5 ]
mov ecx [ esi + 0x4d8 ]
xor eax eax
cmp [ esi + 0x4b5 ] al
push rwxdata
setne al
mov [ esi + 0x48 ] 0x3
mov [ esi + 0x54 ] eax
mov eax [ esi + 0x4b0 ]
sub ecx eax
neg edx
push ecx
sbb edx edx
push eax
and edx 0x8000
push 0x11101
add edx 0x8000
push edx
push esi
call sub_4223a0
add esp 0x18
test eax eax
je r-xdata
mov [ esi + 0x4ac ] eax
mov [ esi + 0x4e4 ] 0x1
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x2c ] eax
push 0x100000
lea ecx [ esi + 0x470 ]
call sub_405100
test al al
jne r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412a40
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
lea edi [ esi + 0x1 ]
lea ebx [ ebx ]
pop edi
pop esi
mov eax 0x80070057
pop ebx
pop ebp
retn 0xc
jmp [ edx * 4 + jump_table_412b34 ]
cmp [ eax ] 0x13
jne r-xdata
cmp [ eax ] 0x13
jne r-xdata
cmp [ eax ] 0x13
jne r-xdata
cmp [ eax ] 0x13
jne r-xdata
mov edx [ eax + 0x8 ]
mov [ ecx + 0x4c8 ] edx
test edx edx
jne r-xdata
mov edx [ eax + 0x8 ]
mov [ ecx + 0x4b0 ] edx
cmp edx 0x3
jb r-xdata
mov edx [ eax + 0x8 ]
mov [ ecx + 0x9af4 ] edx
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
sete dl
test dl dl
mov [ ecx + 0x4b4 ] dl
sete dl
mov [ ecx + 0x4b5 ] dl
mov edx [ ecx + 0x4c8 ]
cmp edx edi
jne r-xdata
mov [ ecx + 0x4c8 ] edi
cmp edx [ ecx + 0x4d8 ]
jbe r-xdata
add esi edi
add eax 0x10
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov edx [ ebx + esi * 4 ]
add edx 0xfffffff8
cmp edx 0x4
ja r-xdata
cmp edx 0xa
jg r-xdata
mov [ ecx + 0x4c4 ] edi
jmp r-xdata
add edx 0xfffffff8
mov [ ecx + 0x4c4 ] edx
mov [ ecx + 0x4c8 ] 0xa
jmp r-xdata
mov [ ecx + 0x4c4 ] 0x2
jmp r-xdata
sub_412b50
push esi
mov esi ecx
mov eax [ esi + 0x4b8 ]
push edi
push eax
call sub_410630
mov ecx [ esi + 0x4bc ]
xor edi edi
push ecx
mov [ esi + 0x4b8 ] edi
call sub_410600
mov edx [ esi + 0x4a8 ]
push edx
mov [ esi + 0x4bc ] edi
call sub_410600
mov eax [ esi + 0x12e0 ]
push eax
mov [ esi + 0x4a8 ] edi
call sub_410600
add esp 0x10
mov [ esi + 0x12e0 ] edi
pop edi
pop esi
retn
sub_412bb0
push ebp
mov ebp esp
sub esp 0x830
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x4cd ] 0x0
je r-xdata
cmp [ esi + 0x4b5 ] 0x0
je r-xdata
cmp [ esi + 0x50c ] 0x0
mov eax [ esi + 0x4c0 ]
mov ecx [ esi + 0x4b8 ]
lea ecx [ ecx + eax * 2 ]
mov [ esi + 0x4ac ] ecx
je r-xdata
lea edx [ ebp - 0x820 ]
push edx
push esi
call sub_423180
lea ecx [ ebp - 0x820 ]
push ecx
push esi
call sub_422b70
jmp r-xdata
movzx edx [ ecx ]
lea eax [ edx + eax + 0x1 ]
mov [ esi + 0x4c0 ] eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
cmp [ esi + 0x4cd ] 0x0
je r-xdata
push ebx
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ esi + 0x4ac ]
add esp 0x8
mov [ ebp - 0x82c ] eax
mov [ ecx ] ax
test eax eax
je r-xdata
cmp [ esi + 0x50c ] 0x0
jne r-xdata
inc eax
add [ esi + 0x4c0 ] eax
mov edx [ ebp + eax * 4 - 0x828 ]
mov ecx [ esi + 0x4b0 ]
mov [ ebp - 0x824 ] edx
cmp edx ecx
jne r-xdata
nop
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn
inc [ esi + 0x510 ]
pop ebx
cmp ecx [ esi + 0x4d8 ]
je r-xdata
movzx ecx [ ebp + ebx * 4 - 0x820 ]
mov edx [ esi + 0x4ac ]
mov [ edx + ebx * 2 + 0x2 ] cx
movzx ecx [ ebp + ebx * 4 - 0x81c ]
mov edx [ esi + 0x4ac ]
mov [ edx + ebx * 2 + 0x4 ] cx
add ebx 0x2
cmp ebx eax
jb r-xdata
mov ecx [ esi + 0xc ]
sub ecx [ esi + 0x4 ]
push edi
mov edi [ esi ]
dec edi
mov edx edi
sub edx [ ebp + eax * 4 - 0x824 ]
mov eax [ esi + 0x4d8 ]
inc ecx
dec edx
cmp ecx eax
jbe r-xdata
mov eax [ ebp - 0x824 ]
cmp eax ecx
jae r-xdata
mov ecx eax
mov ecx [ esi + 0x4ac ]
mov [ ecx + ebx * 2 - 0x2 ] ax
mov eax [ ebp - 0x82c ]
pop edi
add eax edi
sub edx edi
mov [ ebp - 0x828 ] eax
mov [ ebp - 0x830 ] edx
jmp r-xdata
mov dl [ eax ]
mov edi [ ebp - 0x830 ]
cmp dl [ edi + eax ]
mov eax [ ebp - 0x824 ]
jne r-xdata
inc [ ebp - 0x828 ]
inc eax
mov [ ebp - 0x824 ] eax
cmp eax ecx
jb r-xdata
mov eax [ ebp - 0x828 ]
sub_412d50
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x50c ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
cmp [ esi + 0x4b5 ] 0x0
push edi
push esi
je r-xdata
call sub_4235a0
add esp 0x8
add [ esi + 0x510 ] edi
call sub_4232b0
add esp 0x8
add [ esi + 0x510 ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_412da0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
mov [ ecx + 0x514 ] edx
movzx eax [ ecx + edx * 8 + 0x12e8 ]
movzx esi [ ecx + edx * 8 + 0x12ea ]
push edi
jmp r-xdata
movzx ebx si
lea esi [ eax * 8 ]
movzx edi [ esi + ecx + 0x12ea ]
mov edx eax
mov [ ebp - 0x4 ] edi
lea edi [ eax + 0x25d ]
movzx eax [ ecx + edi * 8 ]
mov [ esi + ecx + 0x12ea ] bx
mov si [ ebp + 0xc ]
mov [ ecx + edi * 8 ] si
mov [ ebp + 0xc ] edx
test edx edx
jne r-xdata
mov esi [ ebp - 0x4 ]
movzx eax [ ecx + 0x12ea ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
movzx eax [ ecx + 0x12e8 ]
pop edi
pop esi
mov [ ecx + 0x518 ] eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_412e20
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi ecx
mov ecx [ esi + 0x518 ]
cmp [ esi + 0x514 ] ecx
je r-xdata
push edi
xor edi edi
mov ecx esi
mov [ esi + 0x514 ] edi
mov [ esi + 0x518 ] edi
call sub_412bb0
mov eax [ esi + 0x4ac ]
movzx ecx [ eax ]
cmp ecx edi
jne r-xdata
movzx eax [ esi + ecx * 8 + 0x12e8 ]
mov edx [ ebp + 0x8 ]
sub eax ecx
movzx ecx [ esi + ecx * 8 + 0x12ea ]
mov [ edx ] ecx
mov ecx [ esi + 0x518 ]
movzx edx [ esi + ecx * 8 + 0x12e8 ]
mov [ esi + 0x518 ] edx
pop esi
mov esp ebp
pop ebp
retn 0x4
movzx edi [ eax + ecx * 2 - 0x2 ]
add eax 0x2
cmp edi [ esi + 0x4b0 ]
jbe r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
sub ecx [ esi + 0x510 ]
push ebx
movzx edx [ ecx ]
movzx ecx [ edx + esi + 0x51c ]
mov [ esi + 0x12ec ] ecx
mov ecx 0x1
mov [ esi + 0x12f8 ] cx
xor edx edx
mov ecx 0x3
mov [ esi + 0x12f0 ] dx
mov [ esi + 0x12f4 ] 0xfffffff
cmp edi ecx
jb r-xdata
movzx eax [ eax + ecx * 2 - 0x2 ]
mov ecx [ ebp + 0x8 ]
lea edx [ edi - 0x1 ]
mov [ ecx ] eax
push edx
mov ecx esi
call sub_412d50
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ebx 0x1
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
mov [ ebp - 0x1c ] eax
lea edx [ esi + 0x1302 ]
mov edx [ ebp + 0x8 ]
push ebx
push edx
mov ecx esi
call sub_412da0
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea eax [ esi + 0x12f4 ]
mov [ ebp - 0xc ] eax
shr eax 0x8
movzx eax [ eax + rwxdata ]
add eax 0x10
movzx eax [ eax + rwxdata ]
jmp r-xdata
cmp [ esi + 0x4c0 ] 0x9f7e6
jae r-xdata
inc ecx
add edx 0x8
cmp ecx edi
jbe r-xdata
add eax 0x4
mov [ ebp - 0x1c ] eax
movzx eax [ esi + eax + 0x71c ]
movzx ebx [ esi + ecx + 0x619 ]
add eax ebx
mov [ edx - 0x6 ] eax
mov eax [ ebp - 0x1c ]
movzx ebx [ eax ]
cmp ecx ebx
jne r-xdata
mov ecx esi
call sub_412bb0
mov eax [ esi + 0x4ac ]
movzx ecx [ eax ]
xor edi edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
movzx eax [ eax + 0x2 ]
xor ebx ebx
mov [ edx - 0x2 ] bx
mov [ edx ] ax
cmp eax 0x200
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ esi ]
sub edx [ esi + 0x510 ]
mov ebx [ ecx - 0x8 ]
mov ecx [ ebp - 0x4 ]
movzx eax [ edx + ecx ]
movzx eax [ eax + esi + 0x51c ]
mov edx [ ebp - 0xc ]
add eax ebx
cmp eax [ edx ]
jae r-xdata
movzx edi [ eax + ecx * 2 - 0x2 ]
cmp edi [ esi + 0x4b0 ]
ja r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ edx ] eax
mov [ edx + 0x4 ] cx
mov edx [ ebp + 0x8 ]
push ebx
push edx
mov ecx esi
call sub_412da0
mov ecx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebp - 0x1c ]
mov dx [ ecx + eax * 2 ]
mov eax [ ebp - 0x4 ]
lea ecx [ edi + eax ]
mov [ esi + eax * 8 + 0x12ea ] dx
mov [ esi + 0x514 ] ecx
dec edi
mov [ esi + eax * 8 + 0x12e8 ] cx
push edi
mov ecx esi
call sub_412d50
mov eax ebx
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
inc ecx
add edx 0x8
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov ebx ecx
cmp ecx [ ebp - 0x18 ]
jne r-xdata
add ecx edi
mov edi [ ebp - 0x18 ]
cmp edi ecx
jae r-xdata
cmp ebx 0x1000
je r-xdata
mov ecx [ ebp - 0x10 ]
movzx eax [ ecx + 0x4 ]
xor edi edi
mov [ ebp - 0x14 ] edi
cmp eax 0x200
jae r-xdata
sub ecx edi
lea eax [ esi + edi * 8 + 0x12e4 ]
add edi ecx
mov [ ebp - 0x18 ] edi
lea ebx [ ebx ]
mov ecx eax
shr ecx 0x8
movzx ecx [ ecx + rwxdata ]
add ecx 0x10
movzx ecx [ eax + rwxdata ]
jmp r-xdata
add eax 0x8
dec ecx
mov [ eax ] 0xfffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
movzx ecx [ esi + ecx + 0x619 ]
add ecx ebx
cmp ecx [ edx ]
jae r-xdata
movzx ecx [ esi + ecx + 0x71c ]
add ebx ecx
mov [ ebp - 0x8 ] 0x3
add edx 0x10
jmp r-xdata
mov ecx [ ebp - 0x10 ]
movzx ecx [ ecx + edi * 2 + 0x2 ]
mov edi [ ebp - 0x14 ]
cmp [ ebp - 0x8 ] ecx
jne r-xdata
mov [ edx ] ecx
mov cx [ ebp - 0x4 ]
mov [ edx + 0x4 ] cx
mov [ edx + 0x6 ] ax
inc [ ebp - 0x8 ]
add edx 0x8
jmp r-xdata
add edi 0x2
mov [ ebp - 0x14 ] edi
cmp edi [ ebp - 0x1c ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
cmp eax 0x200
jae r-xdata
shr eax 0x8
movzx eax [ eax + rwxdata ]
add eax 0x10
movzx eax [ eax + rwxdata ]
jmp r-xdata
mov ecx eax
shr ecx 0x8
movzx ecx [ ecx + rwxdata ]
add ecx 0x10
movzx ecx [ eax + rwxdata ]
jmp r-xdata
movzx eax [ esi + eax + 0x71c ]
mov ecx [ ebp - 0x10 ]
sub ebx eax
movzx eax [ ecx + edi * 2 + 0x4 ]
cmp eax 0x200
jae r-xdata
movzx ecx [ esi + ecx + 0x71c ]
add ebx ecx
sub_413190
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412bb0
mov eax [ esi + 0x4ac ]
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
push ebx
movzx ebx [ eax + ecx * 2 - 0x2 ]
movzx eax [ eax + ecx * 2 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp [ esi + 0x50c ] 0x0
push edi
lea edi [ ebx - 0x1 ]
jne r-xdata
lea eax [ ecx + 0x1 ]
pop esi
pop ebp
retn 0x4
pop edi
mov eax ebx
pop ebx
pop esi
pop ebp
retn 0x4
test edi edi
je r-xdata
cmp [ esi + 0x4b5 ] 0x0
push edi
push esi
je r-xdata
call sub_4235a0
add esp 0x8
add [ esi + 0x510 ] edi
call sub_4232b0
add esp 0x8
add [ esi + 0x510 ] edi
pop edi
mov eax ebx
pop ebx
pop esi
pop ebp
retn 0x4
sub_413210
push esi
push 0x100
mov esi ecx
push 0x8
push esi
call sub_43d590
mov [ esi + 0x100 ] 0xd
mov eax 0x5050505
mov [ esi + 0x101 ] eax
mov [ esi + 0x105 ] eax
mov [ esi + 0x109 ] eax
mov [ esi + 0x10d ] eax
mov [ esi + 0x111 ] eax
mov [ esi + 0x115 ] eax
mov [ esi + 0x119 ] eax
mov [ esi + 0x11d ] ax
mov [ esi + 0x11f ] al
mov [ esi + 0x120 ] eax
mov [ esi + 0x124 ] eax
mov [ esi + 0x128 ] eax
mov [ esi + 0x12c ] eax
mov [ esi + 0x130 ] eax
mov [ esi + 0x134 ] eax
mov [ esi + 0x138 ] eax
add esp 0xc
mov [ esi + 0x13c ] eax
pop esi
retn
sub_4132a0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push ebx
push esi
movzx esi [ eax ]
push edi
xor edi edi
mov [ ebp - 0x8 ] 0xff
lea ecx [ edi + 0x7 ]
lea edx [ edi + 0x4 ]
cmp esi edi
jne r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
cmp ebx edi
jle r-xdata
mov ecx 0x8a
lea edx [ edi + 0x3 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax esi
lea esi [ ebx - 0x1 ]
mov ebx [ ebp - 0x4 ]
cmp ebx esi
jge r-xdata
mov esi 0xff
mov esi [ ebp + 0x8 ]
movzx esi [ ebx + esi + 0x1 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp edi edx
jge r-xdata
cmp eax esi
je r-xdata
inc edi
cmp edi ecx
jge r-xdata
test eax eax
je r-xdata
add [ ecx + eax * 4 ] edi
jmp r-xdata
inc ebx
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
cmp [ ebp - 0x4 ] ebx
jl r-xdata
cmp edi 0xa
jg r-xdata
cmp eax [ ebp - 0x8 ]
je r-xdata
xor edi edi
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
inc [ ecx + 0x48 ]
inc [ ecx + 0x44 ]
jmp r-xdata
inc [ ecx + 0x40 ]
jmp r-xdata
inc [ ecx + eax * 4 ]
cmp eax esi
jne r-xdata
mov ecx 0x8a
lea edx [ edi + 0x3 ]
jmp r-xdata
mov ecx 0x7
lea edx [ ecx - 0x3 ]
mov ecx 0x6
lea edx [ ecx - 0x3 ]
jmp r-xdata
sub_413380
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
push esi
movzx esi [ eax ]
push edi
xor edi edi
mov ebx ecx
mov [ ebp - 0x10 ] 0xff
lea eax [ edi + 0x7 ]
mov [ ebp - 0x4 ] 0x4
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] edi
cmp ecx edi
jle r-xdata
mov eax 0x8a
mov [ ebp - 0x4 ] 0x3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
dec ecx
cmp [ ebp - 0xc ] ecx
jge r-xdata
mov [ ebp - 0x8 ] 0xff
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
movzx ecx [ edx + ecx + 0x1 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
jge r-xdata
cmp esi [ ebp - 0x8 ]
je r-xdata
inc edi
cmp edi eax
jge r-xdata
test esi esi
je r-xdata
test edi edi
jle r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
inc edx
mov [ ebp - 0xc ] edx
cmp edx ecx
jl r-xdata
cmp edi 0xa
jg r-xdata
cmp esi [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] esi
test eax eax
jne r-xdata
nop
mov esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
movzx ecx [ eax + 0x12 ]
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x48 ]
push ecx
push eax
mov ecx ebx
call sub_413370
push 0x7
add edi 0xfffffff5
mov edx [ ebp + 0x10 ]
movzx eax [ edx + 0x11 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0x44 ]
push eax
push edx
mov ecx ebx
call sub_413370
push 0x3
add edi 0xfffffffd
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movzx edx [ ecx + 0x10 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x40 ]
push edx
push ecx
mov ecx ebx
call sub_413370
push 0x2
add edi 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ esi + eax ]
mov edx [ ebp + 0x14 ]
mov eax [ edx + esi * 4 ]
push ecx
push eax
mov ecx ebx
call sub_413370
dec edi
cmp esi eax
jne r-xdata
mov eax 0x8a
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
mov edx [ ebp + 0x10 ]
movzx eax [ esi + edx ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + esi * 4 ]
push eax
push edx
mov ecx ebx
call sub_413370
dec edi
jne r-xdata
jmp r-xdata
push edi
mov ecx ebx
call sub_413370
mov eax 0x7
mov [ ebp - 0x4 ] 0x4
mov eax 0x6
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
sub_413500
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
push 0x120
lea eax [ esi + 0x73c ]
push eax
lea ecx [ esi + 0xd7c ]
push ecx
lea edx [ esi + 0x87c ]
push edx
call sub_423690
push edi
push 0x20
lea eax [ esi + 0x85c ]
push eax
lea ecx [ esi + 0x11fc ]
push ecx
add esi 0xcfc
push esi
call sub_423690
add esp 0x28
pop edi
pop esi
pop ebp
retn 0x4
sub_413550
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
xor edi edi
xor esi esi
xor eax eax
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
cmp ebx 0x2
jl r-xdata
cmp eax ebx
jae r-xdata
movzx edi [ ecx + eax ]
imul edi [ edx + eax * 4 ]
mov ebx [ ebp + 0x10 ]
add esi edi
movzx edi [ ecx + eax + 0x1 ]
imul edi [ edx + eax * 4 + 0x4 ]
add [ ebp - 0x4 ] edi
add eax 0x2
lea edi [ ebx - 0x1 ]
cmp eax edi
jb r-xdata
mov eax [ ebp - 0x4 ]
add eax esi
add eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx edi [ eax + ecx ]
imul edi [ edx + eax * 4 ]
mov edi [ ebp - 0x8 ]
sub_4135c0
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
sub ecx eax
push ecx
push edx
lea eax [ edi + eax * 4 ]
push eax
call sub_413550
mov ecx [ ebp + 0xc ]
push esi
push ecx
push edi
mov ebx eax
call sub_413550
add esp 0x18
pop edi
pop esi
add eax ebx
pop ebx
pop ebp
retn
sub_413600
push esi
push edi
mov esi ecx
mov eax [ esi + 0x4e0 ]
push 0x101
push eax
push 0x120
lea ecx [ esi + 0x73c ]
push ecx
lea edx [ esi + 0x87c ]
push edx
call sub_4135c0
push 0x0
push r--data
mov edi eax
lea eax [ esi + 0x85c ]
push 0x20
push eax
add esi 0xcfc
push esi
call sub_4135c0
add esp 0x28
add eax edi
pop edi
pop esi
retn
sub_413650
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov esi ecx
push 0x480
xor edi edi
lea eax [ esi + 0x87c ]
push edi
push eax
call sub_43d590
push 0x80
lea ecx [ esi + 0xcfc ]
push edi
push ecx
call sub_43d590
mov edx [ esi + 0x12dc ]
add esp 0x18
mov [ esi + 0x508 ] edi
mov [ ebp - 0x8 ] edx
mov [ esi + 0x12dc ] edi
lea esp [ esp ]
cmp [ esi + 0x4b4 ] 0x0
mov ecx esi
je r-xdata
cmp [ esi + 0x4c0 ] 0x9f7e6
jae r-xdata
lea edx [ ebp - 0x4 ]
push edx
call sub_412e20
call sub_412bb0
mov eax [ esi + 0x4ac ]
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x12dc ]
inc [ esi + 0xc7c ]
add [ esi + 0x510 ] eax
pop edi
mov [ esi + 0x50c ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
cmp [ esi + 0x12dc ] ecx
jae r-xdata
mov edx [ esi ]
sub edx [ esi + 0x510 ]
mov dl [ edx ]
movzx edi dl
inc [ esi + edi * 4 + 0x87c ]
lea edi [ esi + edi * 4 + 0x87c ]
movzx edx dl
mov edi 0x8000
mov [ ecx ] di
mov [ ecx + 0x2 ] dx
sub [ esi + 0x510 ] eax
add [ esi + 0x12dc ] eax
jmp r-xdata
lea edx [ eax - 0x3 ]
mov [ ecx ] dx
movzx edx [ edx + rwxdata ]
inc [ esi + edx * 4 + 0xc80 ]
lea edx [ esi + edx * 4 + 0xc80 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x2 ] dx
cmp edx 0x200
jae r-xdata
cmp [ esi + 0x50c ] 0x0
movzx ebx [ eax + ecx * 2 - 0x2 ]
movzx ecx [ eax + ecx * 2 ]
mov [ ebp - 0x4 ] ecx
lea edi [ ebx - 0x1 ]
jne r-xdata
lea eax [ ecx + 0x1 ]
jmp r-xdata
cmp [ esi + 0x50c ] 0x0
jne r-xdata
mov eax [ esi + 0x518 ]
cmp eax [ esi + 0x514 ]
jne r-xdata
shr edx 0x8
movzx ecx [ edx + rwxdata ]
inc [ esi + ecx * 4 + 0xd3c ]
sub [ esi + 0x510 ] eax
add ecx 0x10
add [ esi + 0x12dc ] eax
jmp r-xdata
movzx ecx [ edx + rwxdata ]
inc [ esi + ecx * 4 + 0xcfc ]
sub [ esi + 0x510 ] eax
add [ esi + 0x12dc ] eax
jmp r-xdata
mov eax ebx
jmp r-xdata
test edi edi
je r-xdata
mov edx [ esi + 0x508 ]
mov ecx [ esi + 0x4a8 ]
lea ecx [ ecx + edx * 4 ]
inc edx
mov [ esi + 0x508 ] edx
cmp eax 0x3
jb r-xdata
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
je r-xdata
cmp [ esi + 0x4b5 ] 0x0
push edi
push esi
je r-xdata
mov eax [ esi + 0x508 ]
cmp eax [ esi + 0x4d0 ]
jae r-xdata
call sub_4235a0
add esp 0x8
add [ esi + 0x510 ] edi
call sub_4232b0
add esp 0x8
add [ esi + 0x510 ] edi
mov eax ebx
jmp r-xdata
sub_413850
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4b4 ] 0x0
jne r-xdata
pop esi
pop ebp
retn 0x4
mov dl [ rwxdata ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ esi + eax + 0x51c ] cl
inc eax
cmp eax 0x100
jb r-xdata
mov cl dl
mov cl [ eax + edi ]
test cl cl
jne r-xdata
xor eax eax
cmp [ esi + 0x4d4 ] eax
jbe r-xdata
add esi 0x71d
mov eax r--data
add edi 0x121
mov edx 0x8
lea esp [ esp ]
jmp r-xdata
mov bl [ eax - 0x1 ]
add bl cl
mov [ esi - 0x1 ] bl
mov cl [ edi ]
test cl cl
jne r-xdata
mov cl [ rwxdata ]
movzx ecx [ eax + rwxdata ]
mov dl [ edi + ecx + 0x101 ]
test dl dl
jne r-xdata
mov bl [ eax ]
add bl cl
mov [ esi ] bl
mov cl [ edi + 0x1 ]
test cl cl
jne r-xdata
mov cl [ rwxdata ]
mov ebx [ esi + 0x4e0 ]
mov cl [ ebx + ecx ]
add cl dl
mov [ esi + eax + 0x61c ] cl
inc eax
cmp eax [ esi + 0x4d4 ]
jb r-xdata
mov dl [ rwxdata ]
mov bl [ eax + 0x1 ]
add bl cl
mov [ esi + 0x1 ] bl
mov cl [ edi + 0x2 ]
test cl cl
jne r-xdata
mov cl [ rwxdata ]
mov bl [ eax + 0x2 ]
add bl cl
mov [ esi + 0x2 ] bl
add edi 0x4
add eax 0x4
add esi 0x4
dec edx
jne r-xdata
mov cl [ rwxdata ]
mov cl [ edi - 0x1 ]
test cl cl
jne r-xdata
pop edi
pop ebx
sub_413960
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0x10 ] edx
jbe r-xdata
pop ebp
retn
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov ecx [ esi + edx * 4 ]
mov eax ecx
shr eax 0x1
and eax 0x5555
and ecx 0x5555
add ecx ecx
or eax ecx
mov ecx eax
and eax 0x3333
add eax eax
shr ecx 0x2
add eax eax
and ecx 0x3333
or ecx eax
mov eax ecx
shr eax 0x4
and ecx 0xf0f
and eax 0xf0f
shl ecx 0x4
or eax ecx
mov ebx eax
shr ebx 0x8
movzx eax al
and ebx 0xff
shl eax 0x8
or ebx eax
movzx eax [ edx + edi ]
mov ecx 0x10
sub ecx eax
shr ebx cl
inc edx
mov [ esi + edx * 4 - 0x4 ] ebx
cmp edx [ ebp + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
sub_4139f0
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov esi ecx
push 0x120
lea eax [ esi + 0x73c ]
push eax
lea ecx [ esi + 0xd7c ]
push ecx
call sub_413960
lea eax [ esi + 0x85c ]
push 0x20
push eax
lea edx [ esi + 0x11fc ]
push edx
call sub_413960
xor edi edi
add esp 0x18
mov [ ebp - 0x4 ] edi
cmp [ esi + 0x508 ] edi
jbe r-xdata
movzx edx [ esi + 0x83c ]
mov eax [ esi + 0x117c ]
push edx
push eax
lea ecx [ esi + 0x470 ]
call sub_4126c0
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
lea esp [ esp ]
mov edi eax
movzx ebx [ edi + rwxdata ]
movzx eax [ ebx + esi + 0x83d ]
mov ecx [ esi + ebx * 4 + 0x1180 ]
push eax
push ecx
lea ecx [ esi + 0x470 ]
call sub_4126c0
mov edx [ esi + 0x4e0 ]
mov ecx [ esi + 0x4dc ]
movzx eax [ edx + ebx ]
movzx edx [ ecx + ebx ]
push eax
sub edi edx
push edi
lea ecx [ esi + 0x470 ]
call sub_4126c0
mov eax [ ebp - 0x8 ]
movzx edi [ eax + 0x2 ]
cmp edi 0x200
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ eax + esi + 0x73c ]
mov edx [ esi + eax * 4 + 0xd7c ]
push ecx
push edx
lea ecx [ esi + 0x470 ]
call sub_4126c0
jmp r-xdata
mov ecx edi
shr ecx 0x8
movzx ebx [ ecx + rwxdata ]
add ebx 0x10
movzx ebx [ edi + rwxdata ]
jmp r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi [ esi + 0x508 ]
jb r-xdata
mov eax [ esi + 0x4a8 ]
lea ecx [ eax + edi * 4 ]
movzx eax [ ecx ]
mov edx 0x8000
mov [ ebp - 0x8 ] ecx
cmp ax dx
jb r-xdata
pop ebx
movzx edx [ esi + ebx + 0x85c ]
mov eax [ esi + ebx * 4 + 0x11fc ]
push edx
push eax
lea ecx [ esi + 0x470 ]
call sub_4126c0
movzx ecx [ ebx + r--data ]
sub edi [ ebx * 4 + r--data ]
push ecx
push edi
lea ecx [ esi + 0x470 ]
call sub_4126c0
mov edi [ ebp - 0x4 ]
sub_413b60
push esi
mov esi eax
xor eax eax
xor edx edx
mov edx 0x8
sub edx ecx
jmp r-xdata
lea edx [ edx + ecx * 8 ]
lea eax [ eax + edx + 0x23 ]
xor edx edx
sub esi ecx
jne r-xdata
mov ecx 0xffff
mov ecx esi
cmp esi 0x10000
jb r-xdata
lea ecx [ edx + 0x3 ]
and ecx 0x7
jbe r-xdata
pop esi
retn
sub_413ba0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edi
lea esi [ edi + 0x470 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ebx eax
cmp eax 0x10000
jb r-xdata
sub eax ebx
cmp [ ebp + 0x10 ] 0x0
mov [ ebp + 0x8 ] eax
je r-xdata
mov ebx 0xffff
xor eax eax
test eax eax
jne r-xdata
movzx eax bx
push 0x10
push eax
mov ecx edi
mov [ esi + 0x28 ] 0x8
mov [ esi + 0x2c ] 0x0
call sub_413370
mov ecx ebx
not ecx
movzx edx cx
push 0x10
push edx
mov ecx edi
call sub_413370
mov edi [ edi ]
sub edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dl [ esi + 0x2c ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax 0x1
jmp r-xdata
sub [ ebp + 0xc ] ebx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + edi ]
mov ecx [ esi ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx esi
call sub_4052e0
push 0x1
push eax
mov ecx edi
call sub_413370
push 0x2
push 0x0
mov ecx edi
call sub_413370
cmp [ esi + 0x28 ] 0x8
jae r-xdata
mov edi [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax ebx
jb r-xdata
mov ecx esi
call sub_4052e0
sub_413ca0
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
imul edi edi 0x14c
mov ebx ecx
add edi [ ebx + 0x12e0 ]
mov eax [ edi + 0x144 ]
mov [ ebx + 0x12dc ] eax
mov ecx [ edi + 0x148 ]
mov [ ebp - 0x54 ] ecx
push edi
mov ecx ebx
call sub_413850
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
lea esi [ ebx + 0x73c ]
mov ecx 0x50
[ edi ] [ esi ]
mov [ ebx + 0x4fc ] 0x11e
mov ecx 0x101
jmp r-xdata
mov esi eax
lea ebx [ ebx ]
mov eax [ ebx + 0x4fc ]
cmp [ eax + ebx + 0x73b ] 0x0
jne r-xdata
cmp eax 0x1b58
jbe r-xdata
mov eax 0xc
jmp r-xdata
mov [ ebx + 0x500 ] 0x20
jmp r-xdata
dec eax
mov [ ebx + 0x4fc ] eax
cmp eax ecx
ja r-xdata
mov ecx 0x7d0
cmp ecx eax
sbb eax eax
neg eax
add eax 0x9
mov eax 0xb
jmp r-xdata
push eax
mov ecx ebx
call sub_413500
lea eax [ ebx + 0x73c ]
push eax
mov ecx ebx
call sub_413850
dec esi
jne r-xdata
mov eax [ ebx + 0x500 ]
cmp [ eax + ebx + 0x85b ] 0x0
jne r-xdata
mov edx [ ebp - 0x54 ]
mov ecx ebx
mov [ ebx + 0x4c0 ] edx
call sub_413650
mov eax [ ebx + 0x508 ]
cmp eax 0x4650
jbe r-xdata
push 0x4c
lea edx [ ebp - 0x50 ]
push 0x0
push edx
call sub_43d590
mov ecx [ ebx + 0x4fc ]
add esp 0xc
lea eax [ ebp - 0x50 ]
push eax
push ecx
lea eax [ ebx + 0x73c ]
push eax
mov ecx ebx
call sub_4132a0
mov eax [ ebx + 0x500 ]
lea edx [ ebp - 0x50 ]
push edx
push eax
lea ecx [ ebx + 0x85c ]
push ecx
mov ecx ebx
call sub_4132a0
push 0x7
push 0x13
lea esi [ ebx + 0x12c8 ]
push esi
lea edx [ ebx + 0x127c ]
push edx
lea eax [ ebp - 0x50 ]
push eax
call sub_423690
add esp 0x14
mov [ ebx + 0x504 ] 0x4
mov eax 0x1
mov edx r--data
dec eax
mov [ ebx + 0x500 ] eax
cmp eax 0x1
ja r-xdata
mov [ ebx + eax + 0x4e5 ] cl
inc eax
lea ecx [ eax - 0x1 ]
cmp ecx 0x13
jb r-xdata
lea edi [ eax - 0x1 ]
cmp edi [ ebx + 0x504 ]
jb r-xdata
movzx ecx [ edx + eax - 0x1 ]
mov cl [ ecx + ebx + 0x12c8 ]
test cl cl
je r-xdata
push 0x10
push r--data
push 0x13
lea edx [ ebp - 0x50 ]
push esi
push edx
call sub_4135c0
add esp 0x14
mov ecx ebx
mov esi eax
call sub_413600
mov ebx [ ebx + 0x504 ]
mov ecx [ ebp - 0x4 ]
add esi eax
lea eax [ ebx + ebx * 2 ]
pop edi
lea eax [ esi + eax + 0x11 ]
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x504 ] eax
sub_413eb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
imul eax eax 0x14c
push esi
mov esi ecx
add eax [ esi + 0x12e0 ]
push edi
mov ecx [ eax + 0x144 ]
mov [ esi + 0x12dc ] ecx
mov edx [ eax + 0x148 ]
lea edi [ esi + 0x73c ]
mov ecx edi
mov [ esi + 0x4c0 ] edx
call sub_405a60
push edi
mov ecx esi
call sub_413850
mov ecx esi
call sub_413650
mov ecx esi
call sub_413600
pop edi
add eax 0x3
pop esi
pop ebp
retn 0x4
sub_413f10
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edi
imul esi esi 0x14c
mov ebx ecx
add esi [ ebx + 0x12e0 ]
mov [ esi + 0x142 ] 0x0
mov eax [ ebx + 0x4c4 ]
push eax
push edi
mov [ ebp - 0x8 ] esi
call sub_413ca0
mov ecx [ ebx + 0x12dc ]
mov [ esi + 0x144 ] ecx
cmp [ ebx + 0x4cc ] 0x0
mov edx [ ebx + 0x4c0 ]
mov ecx [ ebx + 0x510 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x508 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] ecx
je r-xdata
mov eax [ ebx + 0x12dc ]
xor edx edx
call sub_413b60
cmp eax [ ebp - 0x4 ]
setbe cl
mov [ esi + 0x141 ] cl
test cl cl
je r-xdata
cmp eax [ rwxdata ]
ja r-xdata
mov edx [ ebp + 0xc ]
mov [ esi + 0x140 ] 0x0
cmp edx 0x1
jle r-xdata
mov [ ebp - 0x4 ] eax
push edi
mov ecx ebx
call sub_413eb0
cmp eax [ ebp - 0x4 ]
setb cl
mov [ esi + 0x142 ] cl
test cl cl
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
pop edi
mov [ ebx + 0x510 ] eax
mov eax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0x4c0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0xc ]
cmp eax [ rwxdata ]
jb r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x12e0 ]
mov ecx edi
imul ecx ecx 0x298
add eax ecx
mov [ ebp - 0xc ] ecx
mov edi eax
mov ecx 0x50
[ edi ] [ esi ]
mov esi [ ebp - 0x8 ]
mov ecx [ esi + 0x144 ]
shr ecx 0x1
mov [ eax + 0x144 ] ecx
mov ecx [ esi + 0x148 ]
mov [ eax + 0x148 ] ecx
mov [ ebp + 0xc ] eax
lea eax [ edx - 0x1 ]
mov edx [ ebp + 0x8 ]
push eax
mov [ ebp - 0x10 ] eax
lea eax [ edx + edx ]
push eax
mov ecx ebx
call sub_413f10
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x144 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x144 ]
mov ecx [ rwxdata ]
sub edx eax
cmp eax ecx
jb r-xdata
cmp edx ecx
jb r-xdata
mov eax [ ebx + 0x12e0 ]
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x14c ]
mov edi eax
mov ecx 0x50
[ edi ] [ esi ]
mov [ eax + 0x144 ] edx
mov edx [ ebx + 0x4c0 ]
mov [ eax + 0x148 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x144 ]
sub [ ebx + 0x510 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax + eax + 0x1 ]
push edx
push ecx
mov ecx ebx
call sub_413f10
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
add ecx eax
cmp ecx [ ebp - 0x4 ]
setb al
mov [ edx + 0x140 ] al
test al al
je r-xdata
mov [ ebp - 0x4 ] ecx
sub_4140e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ebx
imul edi edi 0x14c
mov esi ecx
add edi [ esi + 0x12e0 ]
cmp [ edi + 0x140 ] 0x0
je r-xdata
cmp [ edi + 0x141 ] 0x0
je r-xdata
push 0x0
lea eax [ ebx + ebx ]
push eax
mov ecx esi
call sub_4140e0
lea ebx [ ebx + ebx + 0x1 ]
mov edi ebx
imul edi edi 0x14c
add edi [ esi + 0x12e0 ]
cmp [ edi + 0x140 ] 0x0
jne r-xdata
xor ecx ecx
cmp [ ebp + 0xc ] cl
push 0x1
setne cl
push ecx
mov ecx esi
call sub_413370
cmp [ edi + 0x142 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x510 ]
mov eax [ edi + 0x144 ]
push ecx
push edx
push eax
mov ecx esi
call sub_413ba0
mov ecx [ edi + 0x144 ]
sub [ esi + 0x510 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ esi + 0x4c8 ] 0x1
jg r-xdata
push 0x2
push 0x1
mov ecx esi
call sub_413370
push ebx
mov ecx esi
call sub_413eb0
xor eax eax
lea edx [ esi + 0x87c ]
lea esp [ esp ]
push 0x1
push ebx
mov ecx esi
call sub_413ca0
cmp [ esi + 0x4cc ] 0x0
je r-xdata
movzx ebx [ esi + eax + 0x73c ]
mov ecx 0x9
sub ecx ebx
mov ebx 0x1
shl ebx cl
inc eax
add edx 0x4
mov [ edx - 0x4 ] ebx
cmp eax 0x120
jb r-xdata
xor eax eax
lea edx [ esi + 0xcfc ]
lea esp [ esp ]
push 0x13
lea ebx [ esi + 0x12c8 ]
lea eax [ esi + 0x127c ]
push ebx
push eax
call sub_413960
add esp 0xc
lea eax [ esi + 0x127c ]
push eax
mov eax [ esi + 0x4fc ]
push ebx
push eax
lea ecx [ esi + 0x73c ]
push ecx
mov ecx esi
call sub_413380
mov edx [ esi + 0x500 ]
lea eax [ esi + 0x127c ]
push eax
push ebx
push edx
lea eax [ esi + 0x85c ]
push eax
mov ecx esi
call sub_413380
jmp r-xdata
push 0x2
push 0x2
mov ecx esi
call sub_413370
mov edx [ esi + 0x4fc ]
push 0x5
sub edx 0x101
push edx
mov ecx esi
call sub_413370
mov eax [ esi + 0x500 ]
push 0x5
dec eax
push eax
mov ecx esi
call sub_413370
mov ecx [ esi + 0x504 ]
sub ecx 0x4
push 0x4
push ecx
mov ecx esi
call sub_413370
xor ebx ebx
cmp [ esi + 0x504 ] ebx
jbe r-xdata
movzx ebx [ esi + eax + 0x85c ]
mov ecx 0x9
sub ecx ebx
mov ebx 0x1
shl ebx cl
inc eax
add edx 0x4
mov [ edx - 0x4 ] ebx
cmp eax 0x20
jb r-xdata
push 0x9
mov ecx esi
call sub_413500
jmp r-xdata
movzx edx [ esi + ebx + 0x4e6 ]
push 0x3
push edx
mov ecx esi
call sub_413370
inc ebx
cmp ebx [ esi + 0x504 ]
jb r-xdata
mov ecx esi
call sub_4139f0
mov ecx [ edi + 0x144 ]
sub [ esi + 0x510 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_414300
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
add ecx 0xc
call sub_412a40
pop ebp
retn 0x10
sub_414320
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push edx
add ecx 0xc
call sub_412a40
pop ebp
retn 0x10
sub_414360
push esi
mov esi ecx
cmp [ esi + 0x28 ] 0x8
jae r-xdata
mov [ esi + 0x28 ] 0x8
mov [ esi + 0x2c ] 0x0
mov ecx esi
pop esi
jmp sub_405220
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dl [ esi + 0x2c ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx esi
call sub_4052e0
sub_4143a0
push esi
mov esi ecx
mov eax [ esi + 0x4a4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x484 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x4a4 ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x484 ] 0x0
sub_4143e0
push esi
mov esi [ ecx ]
mov eax [ esi + 0x4a4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x484 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x4a4 ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x484 ] 0x0
sub_414430
push ebp
mov ebp esp
push 0xffffffff
push sub_4519ab
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_405040
mov esi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_4144b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4519e9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x4b8 ]
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_410630
mov ecx [ esi + 0x4bc ]
push ecx
mov [ esi + 0x4b8 ] edi
call sub_410600
mov edx [ esi + 0x4a8 ]
push edx
mov [ esi + 0x4bc ] edi
call sub_410600
mov eax [ esi + 0x12e0 ]
push eax
mov [ esi + 0x4a8 ] edi
call sub_410600
push rwxdata
push esi
mov [ esi + 0x12e0 ] edi
call sub_422340
mov eax [ esi + 0x4a4 ]
add esp 0x18
cmp eax edi
je r-xdata
add esi 0x470
mov [ ebp - 0x10 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_405040
mov esi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp esi edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_414590
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
mov ecx [ esi ]
push edi
cmp ecx 0x80000000
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
lea edi [ ebp + 0x10 ]
push edi
push ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ esi ] ecx
pop esi
pop ebp
retn
mov ecx 0x80000000
sub_4145d0
push ebp
mov ebp esp
push 0xffffffff
push sub_451a18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4c4 ]
mov edx 0x1
cmp ecx edx
jne r-xdata
mov eax edx
xor ebx ebx
cmp [ esi + 0x4c8 ] edx
jne r-xdata
mov eax edx
cmp ecx edx
jne r-xdata
xor ebx ebx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ esi + 0x4c8 ]
mov edi [ ebp + 0x8 ]
shl eax 0xc
add eax 0x1c00
mov [ esi + 0x4d0 ] eax
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
cmp [ esi + 0x4c8 ] edx
jne r-xdata
mov [ esi + 0x4cc ] al
test al al
jne r-xdata
mov eax [ esi + 0x4a4 ]
cmp eax ebx
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
xor eax eax
jmp r-xdata
lea eax [ esi + 0x4a0 ]
mov [ esi + 0x4a4 ] edi
push esi
mov [ eax ] sub_414590
mov [ esi + 0x34 ] eax
call sub_4225f0
mov eax [ ebp + 0xc ]
add esp 0x4
lea edi [ esi + 0x470 ]
push eax
mov ecx edi
call sub_405150
mov ecx edi
call sub_405060
mov [ edi + 0x28 ] 0x8
mov [ edi + 0x2c ] 0x0
mov [ ebp + 0x8 ] esi
mov [ esi + 0x518 ] ebx
mov [ esi + 0x514 ] ebx
mov [ ebp - 0x4 ] ebx
mov ebx [ esi + 0x12e0 ]
add ebx 0x14c
mov ecx ebx
mov [ ebp + 0xc ] ebx
mov [ ebx + 0x148 ] 0x0
call sub_413210
mov [ esi + 0x510 ] 0x0
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx esi
mov [ esi + 0x4cd ] al
call sub_4128a0
cmp eax ebx
jne r-xdata
mov [ ebx + 0x144 ] 0xedfb
mov ecx [ esi + 0x4c8 ]
push ecx
push 0x1
mov ecx esi
mov [ esi + 0x50c ] 0x0
call sub_413f10
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
sete al
movzx ecx al
push ecx
push 0x1
mov ecx esi
call sub_4140e0
mov edx [ esi + 0x12e0 ]
mov eax [ edx + 0x290 ]
add [ ebp - 0x14 ] eax
adc [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
jne r-xdata
mov ecx edi
call sub_405080
mov ecx 0xf
sub ecx [ edi + 0x28 ]
xor ebx ebx
shr ecx 0x3
add eax ecx
adc edx ebx
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call edx
mov ebx eax
test ebx ebx
jne r-xdata
mov esi [ esi + 0x6c ]
test esi esi
jne r-xdata
mov eax [ esi + 0x4a4 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4143e0
mov eax esi
mov ecx edi
call sub_414360
mov esi eax
mov eax [ esi + 0x484 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x4a4 ] 0x0
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x484 ] 0x0
sub_414830
push ebp
mov ebp esp
push 0xffffffff
push sub_451a40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4145d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4148e0
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x8 ]
add ecx 0x10
call sub_414830
pop ebp
retn 0x18
sub_414910
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x8 ]
add ecx 0x10
call sub_414830
pop ebp
retn 0x18
sub_414940
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x470 ] eax
mov [ esi + 0x474 ] eax
mov [ esi + 0x484 ] eax
mov [ esi + 0x490 ] eax
mov [ esi + 0x4a4 ] eax
xor edx edx
mov ecx 0x1
mov [ esi + 0x4c4 ] ecx
mov [ esi + 0x4c8 ] ecx
mov cl [ ebp + 0x8 ]
cmp cl al
sete dl
mov [ esi + 0x4a8 ] eax
mov [ esi + 0x4b0 ] 0x20
mov [ esi + 0x4b4 ] 0x100
mov [ esi + 0x4b8 ] eax
mov [ esi + 0x4bc ] eax
mov [ esi + 0x4e4 ] al
add edx 0x101
mov [ esi + 0x4d8 ] edx
xor edx edx
cmp cl al
sete dl
mov [ esi + 0x4e5 ] cl
mov [ esi + 0x12e0 ] eax
mov [ esi + 0x9af4 ] eax
add edx 0xff
mov [ esi + 0x4d4 ] edx
mov edx r--data
cmp cl al
jne r-xdata
cmp cl al
mov [ esi + 0x4dc ] edx
mov eax r--data
jne r-xdata
mov edx r--data
push esi
mov [ esi + 0x4e0 ] eax
call sub_422240
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax r--data
sub_414a20
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
shr eax 0x10
push eax
call [ DosDateTimeToFileTime@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_414a40
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push esi
call [ FileTimeToDosDateTime@IAT ]
test eax eax
mov eax [ ebp + 0xc ]
jne r-xdata
movzx ecx [ ebp - 0x4 ]
movzx edx [ ebp - 0x8 ]
shl ecx 0x10
add ecx edx
mov [ eax ] ecx
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x4 ] 0x1c00000
pop esi
sbb edx edx
and edx 0x814083
add edx 0xff9fbf7d
mov [ eax ] edx
xor al al
mov esp ebp
pop ebp
retn
sub_414aa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push 0x0
add eax 0xb6109100
push 0x989680
adc ecx 0x2
push ecx
push eax
call sub_43d900
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
pop ebp
retn
sub_414ad0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov edx [ edx ]
push esi
xor esi esi
xor ecx ecx
add ecx edx
adc eax esi
pop esi
cmp eax 0x19db1de
ja r-xdata
push 0x0
add ecx 0x2ac18000
push 0x989680
adc eax 0xfe624e21
push eax
push ecx
call sub_43d7c0
test edx edx
jne r-xdata
jb r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0xffffffff
xor al al
pop ebp
retn
cmp eax 0xffffffff
jbe r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
xor al al
pop ebp
retn
cmp ecx 0xd53e8000
jae r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov al 0x1
pop ebp
retn
sub_414b40
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x20 ]
lea ecx [ ebx - 0x641 ]
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
cmp ecx 0x20ce
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor al al
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
dec eax
mov [ ebp - 0x14 ] eax
cmp eax 0xb
ja r-xdata
mov eax [ ebp + 0x10 ]
dec eax
cmp eax 0x1e
ja r-xdata
cmp [ ebp + 0x14 ] 0x17
ja r-xdata
mov eax 0x3b
cmp [ ebp + 0x18 ] eax
ja r-xdata
cmp [ ebp + 0x1c ] eax
ja r-xdata
mov eax 0x51eb851f
mul ecx
shr edx 0x7
push esi
mov esi edx
mov eax 0x51eb851f
mul ecx
shr edx 0x5
sub esi edx
mov edx ecx
imul edx edx 0x16d
add esi edx
shr ecx 0x2
add esi ecx
mov [ ebp - 0x10 ] 0x1e1f1c1f
mov [ ebp - 0xc ] 0x1f1f1e1f
mov [ ebp - 0x8 ] 0x1f1e1f1e
test bl 0x3
jne r-xdata
mov ebx [ ebp - 0x14 ]
xor ecx ecx
xor edx edx
xor eax eax
mov [ ebp + 0xc ] ebx
cmp ebx 0x2
jl r-xdata
mov eax 0x51eb851f
mul ebx
shr edx 0x5
imul edx edx 0x64
mov eax ebx
sub eax edx
jne r-xdata
cmp eax ebx
jae r-xdata
movzx ebx [ ebp + eax - 0x10 ]
add ecx ebx
movzx ebx [ ebp + eax - 0xf ]
add edx ebx
mov ebx [ ebp + 0xc ]
add eax 0x2
dec ebx
cmp eax ebx
jb r-xdata
mov [ ebp - 0xf ] 0x1d
mov eax 0x51eb851f
mul ebx
shr edx 0x7
imul edx edx 0x190
sub ebx edx
jne r-xdata
add edx ecx
mov ecx [ ebp + 0x10 ]
add edx esi
lea eax [ edx + ecx - 0x1 ]
lea edx [ eax + eax * 2 ]
mov eax [ ebp + 0x14 ]
lea eax [ eax + edx * 8 ]
xor ecx ecx
mov edx eax
mov esi ecx
shld esi edx 0x4
shl edx 0x4
sub edx eax
sbb esi ecx
mov eax edx
mov ecx esi
shld ecx eax 0x2
xor edx edx
add eax eax
add eax eax
add eax [ ebp + 0x18 ]
adc ecx edx
mov edx eax
mov esi ecx
shld esi edx 0x4
shl edx 0x4
sub edx eax
sbb esi ecx
shld esi edx 0x2
add edx edx
add edx edx
xor eax eax
add edx [ ebp + 0x1c ]
adc esi eax
mov [ edi + 0x4 ] esi
pop esi
mov [ edi ] edx
pop edi
mov al 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
movzx eax [ ebp + eax - 0x10 ]
add esi eax
mov ebx [ ebp + 0xc ]
sub_414ce0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call [ GetSystemTime@IAT ]
push esi
lea ecx [ ebp - 0x14 ]
push ecx
call [ SystemTimeToFileTime@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_414d20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
xor eax eax
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
add [ esi + 0x10 ] ecx
mov edx [ ebp + 0x14 ]
adc [ esi + 0x14 ] 0x0
pop esi
test edx edx
je r-xdata
mov eax [ ecx ]
mov eax [ eax + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push ecx
call eax
pop ebp
retn 0x10
mov [ edx ] ecx
sub_414d60
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push edi
mov edi [ ebp + 0x10 ]
lea edx [ ebp + 0x8 ]
push edx
push edi
push ebx
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] 0x0
test edi edi
je r-xdata
mov ecx [ esi + 0x18 ]
push eax
mov edx ebx
call sub_423a00
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ esi + 0x1c ] 0x1
sub_414dc0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push edi
mov edi [ ebp + 0xc ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
push edi
push eax
mov eax [ ecx + 0xc ]
call eax
mov ecx [ esi + 0x18 ]
mov ebx eax
mov eax [ ebp + 0x8 ]
add [ esi + 0x10 ] eax
push eax
mov edx edi
adc [ esi + 0x14 ] 0x0
call sub_423a00
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
sub_414e10
push ebp
mov ebp esp
xor ecx ecx
cmp [ ebp + 0x14 ] ecx
jne r-xdata
mov eax 0x80004005
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x18 ]
push esi
push ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] 0xffffffff
mov eax [ eax + 0x8 ]
mov edx [ eax ]
push ecx
push ecx
push eax
mov eax [ edx + 0x10 ]
call eax
pop esi
pop ebp
retn 0x14
sub_414ea0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_414f20
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx ]
call eax
pop ebp
retn 0x8
sub_414f50
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
lea edi [ esi + 0xc ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ edi ] 0x0
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
mov eax ebx
push edi
mov [ esi + 0x8 ] ebx
mov ecx [ eax ]
mov edx [ ecx ]
push r--data
push eax
call edx
mov al [ ebp + 0xc ]
pop edi
mov [ esi + 0x10 ] al
pop esi
pop ebx
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_414fb0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov edx [ esi + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ eax ]
add [ ebp - 0x8 ] ecx
mov edx [ eax + 0x4 ]
adc [ ebp - 0x4 ] edx
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ecx [ eax ]
add [ ebp - 0x10 ] ecx
mov edx [ eax + 0x4 ]
adc [ ebp - 0xc ] edx
mov eax [ esi + 0x18 ]
add [ ebp - 0x8 ] eax
mov ecx [ esi + 0x1c ]
adc [ ebp - 0x4 ] ecx
add [ ebp - 0x10 ] eax
adc [ ebp - 0xc ] ecx
cmp [ esi + 0x31 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
xor eax eax
cmp [ esi + 0x10 ] 0x0
lea eax [ ebp - 0x8 ]
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0x8 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jne r-xdata
mov esi [ esi + 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x10 ]
push eax
push esi
call edx
pop esi
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0x10 ]
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_415060
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x30 ] 0x101
retn
sub_415090
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_4150f0
push ebp
mov ebp esp
push 0xffffffff
push sub_451a6b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_415160
push ebp
mov ebp esp
push 0xffffffff
push sub_451a9b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4151e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_415240
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push esi
lea esi [ ebx + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x20000
call sub_410610
add esp 0x4
mov [ ebx + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov ecx [ ecx + 0xc ]
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push edx
mov edx [ ebx + 0xc ]
push edx
push eax
call ecx
test eax eax
jne r-xdata
mov ecx [ edi ]
sub ecx [ esi ]
mov eax [ edi + 0x4 ]
sbb eax [ esi + 0x4 ]
test eax eax
ja r-xdata
mov eax 0x8007000e
pop ebx
pop ebp
retn 0x18
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
jb r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov edx [ edi ]
sub edx [ esi ]
mov [ ebp + 0x8 ] edx
cmp ecx edx
jae r-xdata
add [ esi ] eax
adc [ esi + 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
push eax
push edx
push ecx
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
mov edx 0x20000
mov [ ebp + 0x8 ] edx
test edi edi
je r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push esi
push esi
push eax
call edx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_415340
push ebp
mov ebp esp
push 0xffffffff
push sub_451ac8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x18
call sub_43c55a
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] edi
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push edi
push ecx
mov ecx [ edx + 0xc ]
push eax
push esi
mov [ ebp - 0x4 ] edi
call ecx
mov edx [ esi ]
mov edi eax
mov eax [ edx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp - 0x10 ] esi
cmp esi edi
je r-xdata
sub_415410
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub eax 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
add eax 0x10
dec eax
je r-xdata
xor eax eax
pop ebp
retn 0x14
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
add eax 0x10
add [ eax ] edx
adc [ eax + 0x4 ] ecx
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx [ ebp + 0xc ]
lea eax [ ecx + 0x10 ]
mov ecx [ ecx + 0x24 ]
adc ecx [ ebp + 0x10 ]
jmp r-xdata
mov eax 0x80030001
pop ebp
retn 0x14
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
sub_415480
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi 0x0
push edi
mov edi [ ebp + 0xc ]
mov eax edi
mov ecx ebx
je r-xdata
cmp [ edx + 0x8 ] eax
jne r-xdata
dec esi
je r-xdata
mov [ edx + 0x18 ] 0x0
cmp [ edx + 0xc ] ecx
je r-xdata
mov eax [ edx + 0x8 ]
mov ecx [ edx + 0xc ]
dec esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x14
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
mov [ edx + 0xc ] ecx
mov edx [ ebp + 0x18 ]
test edx edx
je r-xdata
mov eax [ edx + 0x28 ]
mov ecx [ edx + 0x2c ]
jmp r-xdata
pop edi
pop esi
mov eax 0x80030001
pop ebx
pop ebp
retn 0x14
add eax edi
adc ecx ebx
sub_415510
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x10 ]
cmp ecx edx
ja r-xdata
mov eax esi
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
jb r-xdata
mov edx ecx
pop esi
pop ebp
retn
cmp eax esi
jae r-xdata
sub_415540
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push esi
mov esi [ ecx + 0x1c ]
mov ecx [ ecx + 0x18 ]
push 0x0
push 0x0
push esi
push ecx
push eax
call edx
pop esi
retn
sub_415560
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_415590
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
push 0x0
mov [ ecx + 0x20 ] edi
mov edi [ ebp + 0x14 ]
push 0x0
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x2c ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x24 ] edi
mov ecx [ ecx + 0x8 ]
mov edi [ ecx ]
push edx
push eax
mov eax [ edi + 0x10 ]
push ecx
call eax
pop edi
pop ebp
retn 0x10
sub_4155e0
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ ecx + 0x10 ]
push 0x0
push 0x0
push esi
push ecx
push eax
call edx
pop esi
retn
sub_415600
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0x14 ]
xor edx edx
push edi
xor edi edi
sub ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] edx
sbb eax [ esi + 0x1c ]
cmp eax edi
ja r-xdata
mov ecx ebx
jb r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
test ecx ecx
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea edi [ ebp - 0x4 ]
push edi
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push eax
call edx
mov edx [ ebp - 0x4 ]
add [ esi + 0x18 ] edx
adc [ esi + 0x1c ] 0x0
test edx edx
jne r-xdata
xor eax eax
test ecx ecx
je r-xdata
cmp ecx ebx
jb r-xdata
mov esp ebp
pop ebp
retn 0x10
mov [ ecx ] edx
mov [ esi + 0x20 ] 0x1
sub_415670
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x14 ]
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x20 ]
push edi
mov edi [ esi + 0x10 ]
cmp edx eax
jb r-xdata
mov [ eax ] 0x0
sub ecx edi
push ebx
sbb eax edx
mov ebx ecx
xor ecx ecx
cmp eax ecx
ja r-xdata
ja r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
add eax edi
adc ecx edx
pop ebx
cmp eax [ esi + 0x18 ]
jne r-xdata
jb r-xdata
cmp edi ecx
jne r-xdata
cmp edi ecx
jb r-xdata
mov edx [ esi + 0x8 ]
push 0x0
push 0x0
push ecx
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ecx
mov edi [ edx ]
push eax
mov eax [ edi + 0x10 ]
push edx
call eax
test eax eax
jne r-xdata
cmp ecx [ esi + 0x1c ]
je r-xdata
mov [ ebp + 0x10 ] ebx
cmp ebx [ ebp + 0x10 ]
jae r-xdata
pop edi
mov eax 0x80004005
pop esi
pop ebp
retn 0x10
cmp edx eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x10
xor ecx ecx
add [ esi + 0x18 ] edx
adc [ esi + 0x1c ] ecx
add [ esi + 0x10 ] edx
adc [ esi + 0x14 ] ecx
mov [ ecx ] edx
sub_415740
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x2c ]
mov edx [ esi + 0xc ]
mov edi [ esi + 0x28 ]
mov eax [ esi + 0x8 ]
cmp edx ecx
jb r-xdata
mov [ ebx ] 0x0
cmp [ esi + 0x18 ] 0x0
jne r-xdata
ja r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x10 ]
cmp ecx eax
jbe r-xdata
mov ecx [ esi + 0x30 ]
mov edi 0x1
shl edi cl
call sub_43d960
mov ecx [ esi + 0x30 ]
mov ebx eax
lea eax [ edi - 0x1 ]
and eax [ esi + 0x8 ]
xor edx edx
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x40 ]
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] eax
call sub_43d940
add eax [ esi + 0x20 ]
adc edx [ esi + 0x24 ]
xor ecx ecx
add eax [ ebp + 0x8 ]
adc edx ecx
cmp eax [ esi + 0x10 ]
jne r-xdata
cmp eax edi
jne r-xdata
cmp eax edi
jb r-xdata
mov eax [ esi + 0x1c ]
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea edi [ ebp + 0x10 ]
push edi
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push eax
call edx
mov ecx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov ecx eax
mov [ ebp + 0x10 ] ecx
mov ecx [ esi + 0x1c ]
push 0x0
push 0x0
push edx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
mov ecx [ ecx ]
mov edx [ ecx + 0x10 ]
push eax
mov eax [ esi + 0x1c ]
push eax
call edx
test eax eax
jne r-xdata
cmp edx [ esi + 0x14 ]
je r-xdata
pop edi
pop esi
mov eax 0x80004005
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp edx ecx
jne r-xdata
xor edx edx
add [ esi + 0x10 ] ecx
adc [ esi + 0x14 ] edx
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] edx
sub [ esi + 0x18 ] ecx
mov [ ebx ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub edi [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
lea ecx [ ebx * 4 + 0x4 ]
sub edx ebx
mov [ esi + 0x18 ] edi
mov eax 0x1
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0xc ] edx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ eax + ebx ]
cmp ecx [ esi + 0x3c ]
jae r-xdata
mov ecx [ esi + 0x28 ]
sub ecx [ esi + 0x8 ]
mov eax [ esi + 0x2c ]
sbb eax [ esi + 0xc ]
mov edi [ esi + 0x18 ]
xor edx edx
cmp edx eax
jb r-xdata
mov edi [ esi + 0x40 ]
add edx ecx
mov ecx [ ebp + 0x8 ]
cmp edx [ ecx + edi ]
jne r-xdata
mov ebx [ ebp + 0x14 ]
ja r-xdata
mov ecx [ esi + 0x30 ]
mov edx 0x1
shl edx cl
lea ecx [ eax + ebx + 0x1 ]
add [ esi + 0x18 ] edx
cmp ecx [ esi + 0x3c ]
jae r-xdata
mov [ esi + 0x18 ] ecx
cmp edi ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0x8 ]
lea ecx [ eax + ecx + 0x1 ]
cmp ecx [ ebx + edi + 0x4 ]
jne r-xdata
mov ecx [ esi + 0x18 ]
add ecx edx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x18 ] ecx
mov ecx [ ebp - 0x8 ]
lea ecx [ eax + ecx + 0x2 ]
cmp ecx [ esi + 0x3c ]
jae r-xdata
mov ebx [ ebp - 0x4 ]
lea ebx [ eax + ebx + 0x2 ]
cmp ebx [ edi + ecx * 4 ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
add [ ebp + 0x8 ] 0xc
add ecx edx
add eax 0x3
mov [ esi + 0x18 ] ecx
cmp eax 0x40
jl r-xdata
mov ebx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
sub_415910
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
mov eax [ ebp + 0x10 ]
xor edi edi
cmp edi edx
jb r-xdata
mov [ ebx ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
ja r-xdata
mov ecx edi
mov edx [ ecx ]
lea edi [ ebp + 0x10 ]
push edi
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
mov ecx [ edx + 0xc ]
call ecx
mov ecx eax
mov eax [ ebp + 0x10 ]
jmp r-xdata
or ecx edx
jne r-xdata
cmp eax ecx
jbe r-xdata
pop edi
pop esi
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebx ] eax
sub [ esi + 0x10 ] eax
sbb [ esi + 0x14 ] 0x0
test ebx ebx
je r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp + 0x10 ] eax
mov [ esi + 0x18 ] 0x1
cmp [ esi + 0x19 ] cl
jne r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x80004005
pop ebx
mov esp ebp
pop ebp
retn 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebx ] eax
sub_4159d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
sub_415a50
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_415a80
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_415ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_451af8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x1c ]
xor ebx ebx
push 0x30
mov [ eax ] ebx
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov [ eax + 0x8 ] ebx
mov esi eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] edi
push ebx
mov [ esi + 0x20 ] edx
mov edx [ ebp + 0x18 ]
push ebx
mov [ esi + 0x24 ] edx
mov edx [ esi + 0x8 ]
push ecx
mov [ esi + 0x28 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x2c ] ecx
mov [ esi + 0x1c ] ecx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov edi [ edx ]
push eax
mov eax [ edi + 0x10 ]
push edx
call eax
mov edi eax
cmp edi ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi ]
mov ecx [ eax + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push esi
call ecx
mov edx [ ebp + 0x1c ]
mov [ edx ] esi
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415bd0
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
sub edx ecx
lea edx [ edx + edx + 0x2 ]
push edx
mov edx [ ebp + 0x8 ]
lea ecx [ eax + ecx * 2 ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_43d220
add esp 0xc
pop ebp
retn 0x8
sub_415c10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ eax ]
push 0x0
add ecx eax
push ecx
push eax
mov eax [ ebp + 0xc ]
push eax
call [ CharPrevExA@IAT ]
xor ecx ecx
cmp [ eax ] 0x2f
sete al
pop ebp
retn
xor al al
pop ebp
retn
sub_415c40
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0xc ]
lea edx [ ecx + edi ]
cmp edx eax
jle r-xdata
test edi edi
jle r-xdata
mov edi eax
sub edi ecx
pop edi
pop esi
pop ebp
retn 0x8
lea edx [ ecx + edi ]
sub eax edx
push ebx
mov ebx [ esi ]
lea eax [ eax + eax + 0x2 ]
push eax
lea edx [ ebx + edx * 2 ]
push edx
lea eax [ ebx + ecx * 2 ]
push eax
call sub_43d220
add esp 0xc
sub [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
pop ebx
sub_415c90
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov dx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
movzx ecx [ esi + eax * 2 ]
lea eax [ esi + eax * 2 ]
cmp cx dx
je r-xdata
sub eax esi
sar eax 0x1
pop esi
pop ebp
retn 0x8
lea esp [ esp ]
or eax 0xffffffff
pop esi
pop ebp
retn 0x8
movzx ecx [ eax + 0x2 ]
add eax 0x2
cmp cx dx
jne r-xdata
test cx cx
je r-xdata
sub_415ce0
push ebp
mov ebp esp
push ebx
mov bx [ ebp + 0x8 ]
xor eax eax
cmp bx [ ebp + 0xc ]
je r-xdata
pop ebx
pop ebp
retn 0x8
xor edx edx
cmp [ ecx + 0x4 ] eax
jle r-xdata
push esi
push edi
lea esp [ esp ]
sub edx edi
sar edx 0x1
js r-xdata
mov edi edi
pop edi
pop esi
mov si [ ebp + 0xc ]
mov [ edi + edx * 2 ] si
inc edx
inc eax
cmp edx [ ecx + 0x4 ]
jl r-xdata
movzx esi [ edx + 0x2 ]
add edx 0x2
cmp si bx
jne r-xdata
mov edi [ ecx ]
movzx esi [ edi + edx * 2 ]
lea edx [ edi + edx * 2 ]
cmp si bx
je r-xdata
test si si
je r-xdata
sub_415d40
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_403f20
push 0x2f
push 0x5c
mov ecx esi
call sub_415ce0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_415d70
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_403f20
push 0x5c
push 0x2f
mov ecx esi
call sub_415ce0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_415da0
push ebp
mov ebp esp
push 0xffffffff
push sub_451b28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp [ eax + 0x4 ] edi
jne r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_415d70
add esp 0x8
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x18 ]
cmp [ ebx + edi * 2 - 0x2 ] 0x5c
jne r-xdata
mov esi [ ebp + 0x8 ]
push 0x3
mov ecx esi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_403e50
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx esi
call sub_403f20
push ebx
call sub_43c44d
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edi - 0x1 ]
lea ecx [ eax + 0x1 ]
mov esi 0x1
cmp ecx edi
jle r-xdata
lea ecx [ eax + esi ]
mov edx edi
sub edx ecx
lea edx [ edx + edx + 0x2 ]
push edx
lea ecx [ ebx + ecx * 2 ]
push ecx
lea edx [ ebx + eax * 2 ]
push edx
call sub_43d220
add esp 0xc
sub edi esi
mov [ ebp - 0x18 ] edi
mov esi edi
sub esi eax
test esi esi
jle r-xdata
sub_415ec0
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0xa0 ] eax
xor eax eax
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0xb0 ] edx
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
test edi edi
jle r-xdata
mov [ ebp - 0x8c ] 0x0
mov eax 0x1
movzx ecx [ edx + eax ]
inc [ ebp + ecx * 4 - 0x48 ]
lea ecx [ ebp + ecx * 4 - 0x48 ]
inc eax
cmp eax edi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x48 ]
mov edi [ ebp + eax * 4 - 0x44 ]
mov ecx 0x10
sub ecx eax
shl edx cl
mov ecx 0xf
sub ecx eax
shl edi cl
add edx [ ebp + eax * 4 - 0x90 ]
mov ecx 0xe
mov [ ebp + eax * 4 - 0x8c ] edx
add edx edi
mov edi [ ebp + eax * 4 - 0x40 ]
sub ecx eax
shl edi cl
mov [ ebp + eax * 4 - 0x88 ] edx
mov ecx 0xd
sub ecx eax
add edx edi
mov edi [ ebp + eax * 4 - 0x3c ]
shl edi cl
mov [ ebp + eax * 4 - 0x84 ] edx
add eax 0x4
add edi edx
mov [ ebp + eax * 4 - 0x90 ] edi
cmp eax 0x10
jbe r-xdata
cmp [ ebp - 0x4c ] 0x10000
je r-xdata
mov edi 0x10
sub edi esi
mov eax 0x1
mov [ ebp - 0xa8 ] edi
cmp esi eax
jl r-xdata
push r--data
lea edx [ ebp - 0x94 ]
push edx
mov [ ebp - 0x94 ] r--data
call sub_43d1c8
mov ecx 0x10
sub ecx eax
lea ebx [ ebx ]
lea edx [ esi - 0x1 ]
mov edx 0x1
shl edx cl
inc eax
dec ecx
mov [ ebp + eax * 4 - 0x4c ] edx
cmp eax 0x10
jbe r-xdata
mov eax [ ebp + esi * 4 - 0x8c ]
mov ecx edi
shr eax cl
cmp eax 0x10000
je r-xdata
mov ecx edi
shr [ ebp + eax * 4 - 0x90 ] cl
mov ecx edx
mov ebx 0x1
shl ebx cl
inc eax
dec edx
mov [ ebp + eax * 4 - 0x4c ] ebx
cmp eax esi
jle r-xdata
cmp eax 0x10
ja r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx 0xf
sub ecx esi
mov eax 0x1
shl eax cl
xor edi edi
mov [ ebp - 0x98 ] edi
mov [ ebp - 0xac ] eax
test ebx ebx
jle r-xdata
mov edx 0x1
mov ecx esi
shl edx cl
cmp eax edx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x14
lea esp [ esp ]
mov ecx [ ebp - 0xa0 ]
lea edi [ ecx + eax * 4 ]
mov ecx edx
sub ecx eax
xor eax eax
[ edi ]
inc edi
mov [ ebp - 0x98 ] edi
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov ecx [ ebp + edx * 4 - 0x48 ]
lea eax [ ebp + edx * 4 - 0x90 ]
mov [ ebp - 0x9c ] eax
mov eax [ eax ]
add ecx eax
mov [ ebp - 0x94 ] ecx
cmp edx esi
jg r-xdata
mov edx [ ebp - 0xb0 ]
movzx edx [ edx + edi ]
test edx edx
je r-xdata
mov ecx [ ebp - 0xa8 ]
mov edi eax
shr edi cl
sub edx esi
mov ecx [ ebp - 0xa0 ]
lea ecx [ ecx + edi * 4 ]
je r-xdata
cmp ecx [ ebp + 0x18 ]
ja r-xdata
mov edi [ ebp - 0x98 ]
mov [ ecx ] edi
mov esi [ ebp - 0xa4 ]
lea esi [ esi + ebx * 4 + 0x1044 ]
push r--data
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x9c ] r--data
call sub_43d1c8
int3
cmp eax ecx
jae r-xdata
mov ecx [ ecx ]
mov edi [ ebp - 0xa4 ]
test [ ebp - 0xac ] eax
je r-xdata
mov [ esi - 0xfec ] 0x0
mov [ esi ] 0x0
mov [ ecx ] ebx
inc ebx
add esi 0x4
mov edx [ ebp - 0x9c ]
mov [ edx ] ecx
mov ecx [ ebp - 0xa0 ]
lea edi [ ecx + eax * 4 ]
mov ecx [ ebp - 0x94 ]
sub ecx eax
mov eax [ ebp - 0x98 ]
[ edi ]
mov edi eax
jmp r-xdata
lea ecx [ edi + ecx * 4 + 0x58 ]
lea ecx [ edi + ecx * 4 + 0x1044 ]
jmp r-xdata
mov ecx [ ebp - 0x94 ]
cmp [ ecx ] 0x0
jne r-xdata
mov esi [ ebp - 0xb4 ]
add eax eax
dec edx
jne r-xdata
sub_4161d0
mov eax [ ecx + 0x8 ]
sub eax [ ecx + 0x10 ]
push esi
mov esi 0x20
sub esi [ ecx ]
cdq
push edi
shr esi 0x3
xor edi edi
sub eax esi
sbb edx edi
add eax [ ecx + 0x18 ]
pop edi
adc edx [ ecx + 0x1c ]
pop esi
retn
sub_416200
push ebp
mov ebp esp
mov eax ecx
mov ecx 0x8
sub ecx [ eax ]
mov eax [ eax + 0x4 ]
shr eax cl
mov ecx 0x18
sub ecx [ ebp + 0x8 ]
and eax 0xffffff
shr eax cl
pop ebp
retn 0x4
sub_416230
push esi
mov esi ecx
cmp [ esi ] 0x8
jb r-xdata
pop esi
retn
push edi
lea esp [ esp ]
mov al [ ecx ]
inc ecx
mov [ esi + 0x8 ] ecx
lea ecx [ esi + 0x8 ]
call sub_405000
jmp r-xdata
mov ecx [ esi + 0x8 ]
cmp ecx [ esi + 0xc ]
jb r-xdata
pop edi
mov ecx [ esi + 0x4 ]
add [ esi ] 0xfffffff8
movzx edx al
shl ecx 0x8
or ecx edx
mov [ esi + 0x4 ] ecx
cmp [ esi ] 0x8
jae r-xdata
sub_4162e0
push ebp
mov ebp esp
mov eax ecx
mov edx [ eax ]
push esi
mov esi [ eax + 0x4 ]
mov ecx 0x8
sub ecx edx
shr esi cl
push edi
mov edi [ ebp + 0x8 ]
mov ecx 0x18
sub ecx edi
and esi 0xffffff
shr esi cl
add edx edi
mov ecx eax
mov [ eax ] edx
call sub_416230
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_416320
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x1c ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x44 ] 0x0
sub_416360
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi [ esi ]
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esi ]
add ecx 0x8
call sub_405220
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x1c ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x44 ] 0x0
sub_4163b0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ecx + 0x30 ]
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ecx + 0x34 ]
push esi
lea esi [ ecx + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov ecx 0x8
sub ecx eax
shr ebx cl
push edi
mov edi 0x18
sub edi edx
mov ecx edi
and ebx 0xffffff
shr ebx cl
add eax edx
mov ecx esi
mov [ esi ] eax
mov [ ebp - 0x8 ] ebx
call sub_416230
test ebx ebx
jne r-xdata
xor edx edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx 0x8
sub ecx eax
add eax [ ebp + 0xc ]
shr ebx cl
mov ecx edi
mov [ esi ] eax
and ebx 0xffffff
shr ebx cl
mov ecx esi
call sub_416230
mov eax [ ebp + 0x8 ]
test eax eax
jle r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
cmp edx edi
jae r-xdata
lea esp [ esp ]
mov edi [ ebp - 0x4 ]
add edi 0x6244
mov eax ebx
mov ecx 0x100
[ edi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
push eax
add ecx 0x222e
push 0x0
push ecx
call sub_43d590
add esp 0xc
push 0x100
lea edx [ esi + 0x6244 ]
push edx
push 0x8
lea eax [ esi + 0x222e ]
push eax
push edi
mov ecx esi
call sub_415ec0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx edi
sub ecx edx
push ecx
lea eax [ edx + esi + 0x222e ]
push 0x0
push eax
call sub_43d590
add esp 0xc
mov eax 0x3
jl r-xdata
mov ecx 0x1000
test ecx eax
je r-xdata
add [ esi ] eax
cmp [ esi ] 0x8
jb r-xdata
lea eax [ ebx - 0x3 ]
shr ecx 0x1
inc ebx
test eax ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx + 0x222e ] bl
inc edx
mov [ ebp + 0xc ] edx
cmp edx [ ebp + 0x10 ]
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp ecx [ esi + 0xc ]
jb r-xdata
cmp ebx 0x7
cmp edx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
mov ecx 0x8
sub ecx eax
shr edi cl
add eax 0x2
mov ecx esi
mov [ esi ] eax
shr edi 0x16
and edi 0x3
call sub_416230
dec edi
js r-xdata
mov al [ ecx ]
inc ecx
mov [ esi + 0x8 ] ecx
lea ecx [ esi + 0x8 ]
call sub_405000
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx 0x8
sub ecx [ esi ]
shr eax cl
shr eax 0x8
and eax 0xffff
mov ebx eax
shr ebx 0xd
cmp ebx 0x7
jne r-xdata
mov edx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
inc edi
push edi
lea eax [ ebx + edx + 0x222e ]
push 0x0
push eax
call sub_43d590
add esp 0xc
add ebx edi
mov [ ebp + 0xc ] ebx
mov edx [ ebp + 0xc ]
mov edx [ esi + 0x4 ]
add [ esi ] 0xfffffff8
movzx eax al
shl edx 0x8
or edx eax
mov [ esi + 0x4 ] edx
cmp [ esi ] 0x8
jae r-xdata
sub_416580
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x30 ]
mov ebx [ edi + 0x34 ]
mov ecx 0x8
sub ecx eax
shr ebx cl
add eax 0x9
lea ecx [ edi + 0x30 ]
mov [ edi + 0x30 ] eax
shr ebx 0xf
and ebx 0x1ff
mov [ ebp - 0x8 ] ebx
call sub_416230
test ebx ebx
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
jle r-xdata
mov eax [ edi + 0x30 ]
mov ebx [ edi + 0x34 ]
mov ecx 0x8
sub ecx eax
shr ebx cl
add eax 0x9
lea ecx [ edi + 0x30 ]
mov [ edi + 0x30 ] eax
shr ebx 0xf
and ebx 0x1ff
call sub_416230
push 0x1fe
lea eax [ edi + 0x2030 ]
push 0x0
push eax
call sub_43d590
add esp 0xc
add edi 0x2244
mov eax ebx
mov ecx 0x1000
[ edi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx 0x1fe
sub edx eax
push edx
lea ecx [ eax + edi + 0x2030 ]
push 0x0
push ecx
call sub_43d590
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x34 ]
mov ecx 0x8
sub ecx [ edi + 0x30 ]
shr eax cl
shr eax 0x8
and eax 0xffff
mov ecx eax
shr ecx 0x8
mov ebx [ edi + ecx * 4 + 0x6244 ]
cmp ebx 0x13
jl r-xdata
movzx edx [ edi + ebx + 0x222e ]
add [ edi + 0x30 ] edx
cmp [ edi + 0x30 ] 0x8
jb r-xdata
mov ecx 0x80
jmp r-xdata
cmp ebx 0x2
jg r-xdata
lea esp [ esp ]
test eax ecx
je r-xdata
mov eax [ ebp - 0x4 ]
sub bl 0x2
mov [ edi + eax + 0x2030 ] bl
inc eax
mov [ ebp - 0x4 ] eax
test ebx ebx
jne r-xdata
mov al [ edx ]
inc edx
mov [ ecx ] edx
call sub_405000
jmp r-xdata
mov ebx [ edi + ebx * 4 + 0x58 ]
mov ebx [ edi + ebx * 4 + 0x1044 ]
jmp r-xdata
cmp edx 0x1fe
jge r-xdata
mov eax [ edi + 0x30 ]
mov ecx 0x8
sub ecx eax
cmp ebx 0x1
mov ebx [ edi + 0x34 ]
jne r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov edx [ edi + 0x38 ]
cmp edx [ edi + 0x3c ]
lea ecx [ edi + 0x38 ]
jb r-xdata
mov ecx [ edi + 0x34 ]
add [ edi + 0x30 ] 0xfffffff8
movzx edx al
shl ecx 0x8
or ecx edx
mov [ edi + 0x34 ] ecx
cmp [ edi + 0x30 ] 0x8
jae r-xdata
shr ecx 0x1
cmp ebx 0x13
jge r-xdata
push 0x1000
lea ecx [ edi + 0x2244 ]
push ecx
push 0xc
lea eax [ edi + 0x2030 ]
push eax
push 0x1fe
mov ecx edi
call sub_415ec0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
shr ebx cl
add eax 0x9
lea ecx [ edi + 0x30 ]
mov [ edi + 0x30 ] eax
shr ebx 0xf
and ebx 0x1ff
call sub_416230
lea eax [ ebx + 0x14 ]
shr ebx cl
add eax 0x4
lea ecx [ edi + 0x30 ]
mov [ edi + 0x30 ] eax
shr ebx 0x14
and ebx 0xf
call sub_416230
lea eax [ ebx + 0x3 ]
jmp r-xdata
dec eax
js r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x8 ]
jl r-xdata
mov ecx [ ebp - 0x4 ]
lea ebx [ eax + 0x1 ]
push ebx
lea ecx [ ecx + edi + 0x2030 ]
push 0x0
push ecx
call sub_43d590
add esp 0xc
add [ ebp - 0x4 ] ebx
jmp r-xdata
sub_416790
mov edx ecx
mov eax [ edx + 0x34 ]
push esi
push edi
lea edi [ edx + 0x30 ]
mov ecx 0x8
sub ecx [ edi ]
shr eax cl
shr eax 0x8
and eax 0xffff
mov ecx eax
shr ecx 0x4
mov esi [ edx + ecx * 4 + 0x2244 ]
cmp esi 0x1fe
jb r-xdata
movzx edx [ esi + edx + 0x2030 ]
add [ edi ] edx
mov ecx edi
call sub_416230
pop edi
mov eax esi
pop esi
retn
mov ecx 0x8
mov esi [ edx + esi * 4 + 0x58 ]
mov esi [ edx + esi * 4 + 0x1044 ]
jmp r-xdata
test eax ecx
je r-xdata
shr ecx 0x1
cmp esi 0x1fe
jae r-xdata
sub_416800
mov edx ecx
mov eax [ edx + 0x34 ]
push esi
push edi
lea edi [ edx + 0x30 ]
mov ecx 0x8
sub ecx [ edi ]
shr eax cl
shr eax 0x8
and eax 0xffff
mov ecx eax
shr ecx 0x8
mov esi [ edx + ecx * 4 + 0x6244 ]
cmp esi 0x11
jb r-xdata
movzx edx [ esi + edx + 0x222e ]
add [ edi ] edx
mov ecx edi
call sub_416230
test esi esi
je r-xdata
mov ecx 0x80
pop edi
mov eax esi
pop esi
retn
mov eax [ edi ]
push ebx
mov ebx [ edi + 0x4 ]
mov ecx 0x8
sub ecx eax
shr ebx cl
dec esi
mov ecx 0x18
sub ecx esi
and ebx 0xffffff
shr ebx cl
add eax esi
mov ecx edi
mov [ edi ] eax
call sub_416230
mov ecx esi
mov eax 0x1
shl eax cl
add eax ebx
pop ebx
pop edi
pop esi
retn
mov esi [ edx + esi * 4 + 0x58 ]
mov esi [ edx + esi * 4 + 0x1044 ]
jmp r-xdata
test eax ecx
je r-xdata
shr ecx 0x1
cmp esi 0x11
jae r-xdata
sub_4168a0
push ebp
mov ebp esp
push 0xffffffff
push sub_451b58
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
lea esi [ ebx + 0x8 ]
push 0x6800
mov ecx esi
call sub_405100
test al al
jne r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea ecx [ ebx + 0x38 ]
push 0x100000
call sub_404f00
test al al
je r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
xor eax eax
lea edi [ ebx + 0x2244 ]
mov ecx 0x1000
[ edi ]
mov eax [ ebp + 0xc ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
call sub_405150
push edi
mov ecx esi
call sub_410be0
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebx + 0x38 ]
call sub_404f60
lea ecx [ ebx + 0x38 ]
call sub_404e60
lea ecx [ ebx + 0x30 ]
mov [ ebx + 0x30 ] 0x20
call sub_416230
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] 0x1
mov edx [ ebp - 0x10 ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x14 ]
cmp edx [ eax + 0x4 ]
ja r-xdata
mov ecx esi
mov [ ebp - 0x18 ] 0x0
call sub_405220
mov esi eax
jb r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax ]
jae r-xdata
dec [ ebp + 0xc ]
mov ecx ebx
call sub_416790
cmp eax 0x100
jae r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
lea esi [ eax - 0xfd ]
mov ecx ebx
mov [ ebp + 0x8 ] esi
call sub_416800
xor ecx ecx
cmp ecx [ ebp - 0x10 ]
ja r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
lea esi [ ebx + 0x8 ]
mov [ ecx + edx ] al
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ ebx + 0x34 ]
mov ecx 0x8
sub ecx eax
shr esi cl
add eax 0x10
lea ecx [ ebx + 0x30 ]
mov [ ebx + 0x30 ] eax
shr esi 0x8
and esi 0xffff
call sub_416230
push 0x3
push 0x5
push 0x13
mov ecx ebx
mov [ ebp + 0xc ] esi
call sub_4163b0
mov ecx ebx
call sub_416580
push 0xffffffff
push 0x5
push 0x11
mov ecx ebx
call sub_4163b0
mov eax [ ebx + 0x38 ]
sub eax [ ebx + 0x40 ]
mov ecx 0x20
sub ecx [ ebx + 0x30 ]
cdq
shr ecx 0x3
xor esi esi
sub eax ecx
sbb edx esi
add eax [ ebx + 0x48 ]
lea ecx [ ebp - 0x14 ]
adc edx [ ebx + 0x4c ]
push ecx
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] edx
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call edx
mov esi eax
test esi esi
jne r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_416360
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
jb r-xdata
add [ ebp - 0x14 ] 0x1
jmp r-xdata
mov ecx esi
call sub_4052e0
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_416360
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push esi
lea esi [ ebx + 0x8 ]
push eax
mov ecx esi
call sub_405b10
mov eax [ ebp + 0x8 ]
add [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x14 ]
jae r-xdata
adc [ ebp - 0x10 ] 0x0
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx + 0x4 ]
jb r-xdata
ja r-xdata
mov eax ecx
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax ]
jb r-xdata
sub_416b20
push ebp
mov ebp esp
push 0xffffffff
push sub_451b80
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_4168a0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_416c00
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x1c ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x44 ] 0x0
sub_416c40
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi [ esi ]
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esi ]
add ecx 0x8
call sub_405220
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x1c ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x44 ] 0x0
sub_416c90
push ebp
mov ebp esp
push 0xffffffff
push sub_451ba8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push 0x6800
lea ecx [ ebx + 0x8 ]
call sub_405100
test al al
jne r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push 0x100000
lea ecx [ ebx + 0x38 ]
call sub_404f00
test al al
je r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebx + 0x8 ]
call sub_405150
push 0x0
lea ecx [ ebx + 0x8 ]
call sub_410be0
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebx + 0x38 ]
call sub_404f60
lea esi [ ebx + 0x30 ]
lea ecx [ esi + 0x8 ]
call sub_404e60
mov ecx esi
mov [ esi ] 0x20
call sub_416230
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jb r-xdata
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x24 ] 0x0
call sub_405220
mov edi eax
mov eax [ ebx + 0x1c ]
xor esi esi
mov [ ebp - 0x4 ] 0xffffffff
cmp eax esi
je r-xdata
ja r-xdata
mov eax [ ebx + 0x44 ]
cmp eax esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebx + 0x1c ] esi
xor edx edx
mov [ ebp + 0x8 ] 0x1
mov [ ebp + 0xc ] edx
mov [ ebp - 0x14 ] edx
mov edi edi
cmp [ eax ] 0x0
jbe r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebx + 0x44 ] esi
test ebx ebx
je r-xdata
lea esp [ esp ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
add [ ebp + 0xc ] eax
inc edx
add eax eax
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x14 ] edx
cmp edx 0x7
jb r-xdata
mov al [ ecx ]
inc ecx
mov [ esi + 0x8 ] ecx
lea ecx [ esi + 0x8 ]
call sub_405000
mov edx [ ebp - 0x14 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx 0x8
sub ecx eax
shr ebx cl
mov ecx 0x18
sub ecx edx
add eax edx
and ebx 0xffffff
shr ebx cl
mov ecx esi
mov [ esi ] eax
call sub_416230
add [ ebp + 0xc ] ebx
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx 0x8
sub ecx eax
shr ebx cl
inc eax
mov [ esi ] eax
shr ebx 0x17
and ebx 0x1
cmp eax 0x8
jb r-xdata
mov ecx [ esi + 0x8 ]
cmp ecx [ esi + 0xc ]
jb r-xdata
mov ecx [ esi + 0x4 ]
add [ esi ] 0xfffffff8
movzx eax al
shl ecx 0x8
or ecx eax
mov [ esi + 0x4 ] ecx
cmp [ esi ] 0x8
jae r-xdata
add [ ebp + 0xc ] 0x2
mov edx 0x9
mov [ ebp - 0x14 ] 0x200
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x18 ] edx
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx 0x8
sub ecx eax
shr ebx cl
add eax 0x8
mov ecx esi
mov [ esi ] eax
shr ebx 0x10
and ebx 0xff
call sub_416230
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0xc ]
mov eax [ ecx + 0x8 ]
add ecx 0x8
mov [ edx + eax ] bl
mov ebx 0x1
add [ ecx + 0x4 ] ebx
mov eax [ ecx + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
test ebx ebx
je r-xdata
mov ecx [ esi + 0x8 ]
cmp ecx [ esi + 0xc ]
jb r-xdata
add [ ebp - 0x20 ] ebx
jmp r-xdata
call sub_4052e0
test edx edx
je r-xdata
mov eax [ ebp - 0x14 ]
add [ ebp + 0x8 ] eax
inc edx
add eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
cmp edx 0xd
jb r-xdata
mov al [ ecx ]
inc ecx
mov [ esi + 0x8 ] ecx
lea ecx [ esi + 0x8 ]
call sub_405000
mov edx [ ebp - 0x18 ]
jmp r-xdata
adc [ ebp - 0x1c ] 0x0
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x1c ]
cmp edx [ ecx + 0x4 ]
jb r-xdata
xor eax eax
cmp eax [ ebp - 0x1c ]
ja r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx 0x8
sub ecx eax
shr ebx cl
mov ecx 0x18
sub ecx edx
add eax edx
and ebx 0xffffff
shr ebx cl
mov [ esi ] eax
cmp eax 0x8
jb r-xdata
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
mov ecx 0x8
sub ecx eax
shr ebx cl
inc eax
mov [ esi ] eax
shr ebx 0x17
and ebx 0x1
cmp eax 0x8
jb r-xdata
mov ecx [ esi + 0x4 ]
add [ esi ] 0xfffffff8
movzx eax al
shl ecx 0x8
or ecx eax
mov [ esi + 0x4 ] ecx
cmp [ esi ] 0x8
jae r-xdata
ja r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x4 ] 0xffffffff
call sub_405220
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
xor edi edi
cmp eax edi
je r-xdata
jb r-xdata
add [ ebp + 0x8 ] ebx
mov ecx [ esi + 0x8 ]
cmp ecx [ esi + 0xc ]
jb r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
cmp eax [ ecx ]
jb r-xdata
mov eax [ esi + 0x44 ]
cmp eax edi
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ esi + 0x1c ] edi
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x10 ]
push edx
add ecx 0x8
call sub_405b10
mov eax [ ebp + 0xc ]
add [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x20 ]
jae r-xdata
mov al [ ecx ]
inc ecx
mov [ esi + 0x8 ] ecx
lea ecx [ esi + 0x8 ]
call sub_405000
jmp r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x44 ] edi
mov ecx [ esi + 0x4 ]
add [ esi ] 0xfffffff8
movzx edx al
shl ecx 0x8
or ecx edx
mov [ esi + 0x4 ] ecx
cmp [ esi ] 0x8
jae r-xdata
sub_417060
push ebp
mov ebp esp
push 0xffffffff
push sub_451bd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_416c90
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_417160
push ebp
mov ebp esp
sub esp 0x64
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push r--data
push r--data
mov [ ebp - 0x64 ] 0x40
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] 0x20
call [ GlobalMemoryStatus@IAT ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x1c ]
cmp eax ecx
jb r-xdata
lea ecx [ ebp - 0x64 ]
push ecx
call eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor edx edx
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov eax ecx
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x58 ]
push esi
mov esi [ ebp - 0x5c ]
cmp ecx edx
ja r-xdata
mov eax esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x3c ]
jb r-xdata
mov edx ecx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
cmp eax esi
jae r-xdata
sub_417220
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
sub eax [ esi ]
push edi
cmp eax ebx
jb r-xdata
xor edi edi
test ebx ebx
je r-xdata
xor eax eax
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
mov edi edi
add [ esi ] ebx
mov edi [ ebp + 0x8 ]
lea ecx [ ecx ]
mov ecx [ esi ]
mov dl [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ edi + eax ] dl
inc [ esi ]
inc edi
cmp edi ebx
jb r-xdata
mov ecx esi
call sub_404f90
test al al
je r-xdata
mov ecx [ esi ]
mov dl [ eax + ecx ]
mov [ eax + edi ] dl
inc eax
cmp eax ebx
jb r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4172f0
mov eax [ ecx ]
mov [ edx ] eax
cmp eax [ rwxdata ]
jne r-xdata
cmp eax [ rwxdata ]
jne r-xdata
xor eax eax
cmp [ ecx + 0x4 ] ax
sete al
retn
xor eax eax
retn
cmp [ ecx + 0x4 ] 0x80
jae r-xdata
mov eax 0x1
retn
sub_417320
push esi
movzx esi [ ecx + 0x4 ]
cmp si [ eax + 0x4 ]
je r-xdata
movzx ecx [ ecx + 0x2 ]
movzx edx [ eax + 0x2 ]
cmp cx dx
jne r-xdata
xor al al
pop esi
retn
mov eax 0xffff
cmp esi 0x8
je r-xdata
mov al 0x1
pop esi
retn
mov eax 0x7ff9
cmp esi 0x6
ja r-xdata
and edx eax
and ecx eax
xor eax eax
cmp ecx edx
sete al
pop esi
retn
mov eax 0x7fff
and edx eax
and ecx eax
xor eax eax
cmp ecx edx
sete al
pop esi
retn
sub_417380
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ eax ]
mov [ ecx ] dx
movzx edx [ eax + 0x2 ]
mov [ ecx + 0x2 ] dx
movzx edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] dx
movzx edx [ eax + 0x6 ]
mov [ ecx + 0x6 ] dx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0xc ] edx
mov ax [ eax + 0x10 ]
mov [ ecx + 0x10 ] ax
pop ebp
retn 0x4
sub_4173e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ eax ]
mov [ ecx ] dx
movzx edx [ eax + 0x2 ]
mov [ ecx + 0x2 ] dx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0x10 ] edx
mov edx [ eax + 0x10 ]
mov [ ecx + 0x14 ] edx
mov edx [ eax + 0x14 ]
mov [ ecx + 0x18 ] edx
mov edx [ eax + 0x18 ]
mov [ ecx + 0x1c ] edx
mov edx [ eax + 0x1c ]
mov [ ecx + 0x20 ] edx
mov edx [ eax + 0x20 ]
mov [ ecx + 0x24 ] edx
mov edx [ eax + 0x24 ]
mov [ ecx + 0x28 ] edx
mov eax [ eax + 0x28 ]
mov [ ecx + 0x2c ] eax
pop ebp
retn 0x4
sub_417440
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_4174d0
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi ] 0x0
sub_417500
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
mov ecx [ eax ]
push 0x0
push 0x0
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
pop ebp
retn 0x8
sub_417540
push ebp
mov ebp esp
push 0xffffffff
push sub_451bf0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ ebp + 0xc ]
xor ebx ebx
xor edi edi
mov [ ebp + 0xc ] eax
cmp [ esi + 0x18 ] bl
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ esi ]
lea ecx [ ebp + 0xc ]
push ecx
push edx
push eax
call sub_411ee0
mov edi eax
mov eax [ ebp + 0xc ]
add esp 0xc
push eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] ebx
call sub_417220
jmp r-xdata
add [ esi + 0x10 ] eax
mov eax edi
adc [ esi + 0x14 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
je r-xdata
sub_4175f0
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
add ecx 0x10
push ecx
mov ecx [ ebp + 0xc ]
push 0x1
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call edx
test eax eax
je r-xdata
pop ebp
retn 0x8
push r--data
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] 0x7
call sub_43d1c8
sub_417630
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
push esi
push edx
call sub_417540
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
pop esi
sete al
pop ebp
retn 0x8
push r--data
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] 0x6
call sub_43d1c8
sub_417670
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
push esi
push edx
call sub_417540
test eax eax
je r-xdata
cmp [ ebp + 0xc ] esi
pop esi
je r-xdata
push r--data
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] 0x6
call sub_43d1c8
pop ebp
retn 0x8
push r--data
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp + 0xc ] 0x0
call sub_43d1c8
sub_4176c0
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea edx [ ebp - 0x1 ]
push edx
call sub_417540
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x1
je r-xdata
push r--data
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] 0x6
call sub_43d1c8
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x8 ] 0x0
call sub_43d1c8
sub_417710
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x8 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
push edx
call sub_417540
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x2
je r-xdata
push r--data
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] 0x6
call sub_43d1c8
mov ax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x8 ] 0x0
call sub_43d1c8
sub_417770
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x4 ]
push eax
push 0x4
lea edx [ ebp - 0x8 ]
push edx
call sub_417540
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_43d1c8
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_43d1c8
sub_4177c0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x8
lea edx [ ebp - 0xc ]
push edx
call sub_417540
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x8
je r-xdata
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] 0x6
call sub_43d1c8
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] 0x0
call sub_43d1c8
sub_417830
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x4 ]
push eax
push 0x4
lea edx [ ebp - 0x8 ]
push edx
call sub_417540
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x6
call sub_43d1c8
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov al 0x1
mov esp ebp
pop ebp
retn 0x4
xor al al
mov esp ebp
pop ebp
retn 0x4
sub_4178a0
push ebp
mov ebp esp
mov eax 0x1010
call sub_43d980
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov al [ edi + 0x2 ]
shr al 0x3
mov [ ebp - 0x1008 ] ecx
test al 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ edi + 0x10 ]
mov edi [ edi + 0x14 ]
mov esi [ eax ]
add ecx 0x10
push ecx
push 0x1
push edi
push edx
mov edx [ esi + 0x10 ]
push eax
call edx
test eax eax
je r-xdata
lea edx [ ebp - 0x1010 ]
push edx
push 0x1000
lea eax [ ebp - 0x1004 ]
xor esi esi
push eax
mov [ ebp - 0x100c ] esi
call sub_417540
test eax eax
jne r-xdata
xor eax eax
push r--data
lea eax [ ebp - 0x1008 ]
push eax
mov [ ebp - 0x1008 ] 0x7
call sub_43d1c8
int3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
lea esp [ esp ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x100c ]
lea ecx [ ebp - 0x1004 ]
xor eax eax
sub edx ecx
nop
inc eax
lea ecx [ esi - 0x10 ]
cmp eax ecx
jbe r-xdata
lea ebx [ edx + eax ]
lea ebx [ ebp + ebx - 0x1004 ]
cmp ecx ebx
je r-xdata
mov ebx [ ebp + eax - 0x1004 ]
mov ecx [ ebp + eax - 0xffc ]
cmp ebx [ rwxdata ]
jne r-xdata
add [ ebp - 0x100c ] eax
xor ecx ecx
cmp eax esi
jae r-xdata
mov edx [ ebp + eax - 0x1000 ]
mov [ edi + 0xc ] edx
mov edx [ ebp + eax - 0xff8 ]
mov [ edi + 0x18 ] edx
mov edx [ ebp - 0x1008 ]
mov [ edi + 0x10 ] ecx
xor ecx ecx
mov [ edi + 0x14 ] ecx
mov [ edi + 0x1c ] ecx
mov ecx [ edx ]
mov edi [ ecx ]
sub eax esi
add edx 0x10
push edx
add eax 0x10
cdq
push 0x1
push edx
push eax
mov eax [ edi + 0x10 ]
push ecx
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x1010 ]
push eax
mov edx 0x1000
sub edx ecx
lea eax [ ebp + ecx - 0x1004 ]
push edx
mov esi ecx
mov ecx [ ebp - 0x1008 ]
push eax
call sub_417540
test eax eax
je r-xdata
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1008 ]
push ecx
mov [ ebp - 0x1008 ] 0x7
call sub_43d1c8
add esi [ ebp - 0x1010 ]
cmp esi 0x10
jb r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov dl [ ebp + eax - 0x1004 ]
mov [ ebp + ecx - 0x1004 ] dl
inc eax
inc ecx
cmp eax esi
jb r-xdata
sub_417a80
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push 0x0
push edx
mov edx [ ebp + 0x8 ]
mov esi ecx
mov eax [ esi ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp - 0x40 ]
push ecx
push 0x38
lea edx [ ebp - 0x3c ]
push edx
mov ecx esi
call sub_417540
test eax eax
je r-xdata
cmp [ ebp - 0x40 ] 0x38
je r-xdata
push r--data
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x40 ] 0x6
call sub_43d1c8
mov ecx [ ebp - 0x3c ]
cmp ecx [ rwxdata ]
jne r-xdata
pop edi
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ edi ] edx
mov edx [ ebp - 0x8 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
xor eax eax
sub_417b50
push ebp
mov ebp esp
mov eax [ ecx ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push edi
push esi
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] esi
jne r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
cmp [ ebp + 0xc ] edi
jne r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x8
sub_417bc0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call sub_43c44d
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_417bf0
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebx + 0x4 ]
push esi
cmp ecx 0x40
jbe r-xdata
mov eax 0x8
cmp eax ecx
sbb eax eax
and eax 0xc
add eax 0x4
mov eax ecx
shr eax 0x2
jmp r-xdata
lea esi [ ecx + eax ]
cmp esi eax
jae r-xdata
mov eax edx
mov edx [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
cmp esi ecx
je r-xdata
lea esi [ ecx + edx ]
pop esi
pop ebx
pop ebp
retn 0x4
push edi
test esi esi
je r-xdata
xor edi edi
push esi
call sub_43c55a
mov edi eax
mov eax [ ebx + 0x4 ]
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebx + 0x8 ]
push edx
call sub_43c44d
add esp 0x4
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
pop edi
cmp eax esi
jb r-xdata
mov ecx [ ebx + 0x8 ]
push eax
push ecx
push edi
call sub_43d220
add esp 0xc
jmp r-xdata
mov eax esi
sub_417c80
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push ecx
push eax
call sub_421a20
add esp 0x8
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_417cc0
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
pop edi
pop esi
retn
mov eax [ esi + 0x20 ]
push eax
call sub_43c44d
add esp 0x4
mov [ esi + 0x20 ] edi
mov [ esi + 0x1c ] edi
sub_417cf0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
xor esi esi
mov [ ebp - 0x8 ] ecx
test ebx ebx
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
ja r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_417540
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
push r--data
lea edx [ ebp + 0xc ]
push edx
mov [ ebp + 0xc ] 0x6
call sub_43d1c8
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov edi edi
push r--data
lea eax [ ebp + 0xc ]
push eax
mov [ ebp + 0xc ] 0x0
call sub_43d1c8
int3
add edi 0x1
adc esi eax
cmp esi ebx
jb r-xdata
ja r-xdata
cmp edi [ ebp + 0x8 ]
jb r-xdata
sub_417d70
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp esi [ edi + 0x4 ]
je r-xdata
test esi esi
je r-xdata
push ebx
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edi [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
push esi
push edi
call sub_417540
test eax eax
je r-xdata
xor ebx ebx
push esi
call sub_43c55a
mov ebx eax
mov eax [ edi + 0x4 ]
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x6
call sub_43d1c8
mov ecx [ edi + 0x8 ]
push ecx
call sub_43c44d
add esp 0x4
mov [ edi + 0x8 ] ebx
mov [ edi + 0x4 ] esi
pop ebx
cmp eax esi
jb r-xdata
push r--data
lea ecx [ ebp + 0x8 ]
push ecx
mov [ ebp + 0x8 ] 0x0
call sub_43d1c8
push eax
mov eax [ edi + 0x8 ]
push eax
push ebx
call sub_43d220
add esp 0xc
jmp r-xdata
mov eax esi
sub_417e20
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
test edi edi
jne r-xdata
cmp edi [ esi + 0x8 ]
jl r-xdata
mov eax [ esi ]
mov [ esi + 0x4 ] 0x0
mov [ eax ] 0x0
push ebx
mov ebx [ esi ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
push edi
push ebx
call sub_417540
test eax eax
je r-xdata
push edi
mov ecx esi
call sub_4026e0
cmp [ ebp + 0x8 ] edi
je r-xdata
push r--data
lea edx [ ebp + 0x8 ]
push edx
mov [ ebp + 0x8 ] 0x6
call sub_43d1c8
mov [ ebx + edi ] 0x0
mov ecx [ esi ]
xor eax eax
pop ebx
cmp [ ecx ] al
je r-xdata
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x0
call sub_43d1c8
mov [ ecx + eax ] 0x0
pop edi
mov [ esi + 0x4 ] eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx ecx
nop
inc eax
cmp [ edx + eax ] 0x0
jne r-xdata
sub_417ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_451c18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push 0x2
xor edi edi
push edi
push edi
push eax
mov eax [ ecx + 0x10 ]
call eax
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x34 ] r--data
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] edi
push 0x1002a
mov [ ebp - 0x4 ] edi
call sub_43c55a
push edi
mov ebx eax
call sub_43c44d
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
add esp 0x8
mov edx 0x1002a
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x30 ] edx
cmp ecx edi
ja r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
jb r-xdata
xor edx edx
sub eax [ ebp - 0x14 ]
lea edi [ esi + 0x10 ]
push edi
sbb ecx edx
push 0x0
mov [ ebp - 0x20 ] eax
mov eax [ esi ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push ecx
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
push ecx
push eax
call edx
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x14 ] eax
cmp eax 0x16
jb r-xdata
cmp eax edx
jae r-xdata
mov eax [ edi ]
cmp eax [ ebp - 0x20 ]
jne r-xdata
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
mov eax [ ebp - 0x18 ]
jmp r-xdata
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
mov eax 0x1
mov ecx [ edi + 0x4 ]
cmp ecx [ ebp - 0x1c ]
jne r-xdata
add esp 0x4
mov edi [ ebp - 0x14 ]
push edi
push ebx
mov ecx esi
call sub_417630
test al al
je r-xdata
add edi 0xffffffea
js r-xdata
mov esi [ ebp + 0x8 ]
dec edi
jns r-xdata
cmp edi 0x14
jb r-xdata
mov edx [ ebx + edi ]
cmp edx [ rwxdata ]
jne r-xdata
cmp [ ebx + edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + edi - 0x14 ]
cmp eax [ rwxdata ]
jne r-xdata
mov eax [ ebx + edi + 0xc ]
mov [ esi ] eax
mov eax edi
cdq
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] 0x0
mov ecx [ ebx + edi + 0x10 ]
mov edi [ esi + 0x4 ]
mov [ esi + 0x8 ] ecx
mov ecx 0x0
sbb edx ecx
add eax [ ebp - 0x28 ]
mov ecx [ esi ]
adc edx [ ebp - 0x24 ]
add ecx [ esi + 0x8 ]
mov [ esi + 0xc ] 0x0
adc edi [ esi + 0xc ]
cmp eax ecx
jne r-xdata
mov ecx [ ebx + edi - 0x8 ]
mov eax [ ebx + edi - 0xc ]
push esi
push ecx
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] eax
call sub_417a80
test eax eax
je r-xdata
sub eax ecx
mov ecx [ ebp - 0x10 ]
sbb edx edi
mov [ ecx + 0x40 ] eax
mov [ ecx + 0x44 ] edx
jmp r-xdata
cmp edx edi
je r-xdata
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x48 ]
add ecx [ ebp - 0x20 ]
mov edx [ eax + 0x4c ]
adc edx [ ebp - 0x1c ]
push esi
push edx
push ecx
mov ecx eax
call sub_417a80
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x48 ]
mov edx [ eax + 0x4c ]
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
sub_418100
push esi
push edi
mov esi ecx
lea ecx [ esi + 0x20 ]
xor edi edi
push 0x3
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edi
call sub_4026e0
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
pop edi
mov [ esi + 0x3c ] 0x4
mov [ esi + 0x2c ] r--data
mov eax esi
pop esi
retn
sub_418140
push ebp
mov ebp esp
push 0xffffffff
push sub_451c48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
cmp [ esi + 0x5c ] edi
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
push 0x4
lea edx [ ebp - 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x8 ]
push edx
push eax
mov [ esi + 0x14 ] ecx
call sub_411f40
add esp 0xc
cmp eax edi
jne r-xdata
mov eax [ esi + 0x60 ]
push eax
call sub_43c44d
add esp 0x4
mov [ esi + 0x60 ] edi
mov [ esi + 0x5c ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
add [ esi + 0x10 ] 0x4
mov eax [ ebp - 0x10 ]
adc [ esi + 0x14 ] edi
mov [ esi + 0x4 ] eax
cmp eax [ rwxdata ]
je r-xdata
xor eax eax
cmp eax [ rwxdata ]
je r-xdata
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x2c ] r--data
push 0x10000
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] edi
call sub_417bf0
mov cx [ ebp - 0xf ]
mov edi [ ebp - 0x24 ]
mov [ edi ] cx
mov dl [ ebp - 0xd ]
mov [ edi + 0x2 ] dl
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
add ecx 0x1
adc eax 0x0
mov ebx 0x3
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
mov edi edi
mov eax 0x10000
sub eax ebx
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ edi + ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_411ee0
add esp 0xc
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
sub ecx [ esi + 0x8 ]
sbb eax [ esi + 0xc ]
cmp eax [ edx + 0x4 ]
ja r-xdata
push edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
mov eax [ ebp - 0x18 ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] 0x0
add ebx eax
cmp ebx 0x6
jb r-xdata
push edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x4
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jb r-xdata
lea edx [ ebx - 0x5 ]
xor eax eax
test edx edx
je r-xdata
cmp ecx [ edx ]
ja r-xdata
add [ ebp - 0x20 ] edx
lea ecx [ edi + edx ]
adc [ ebp - 0x1c ] 0x0
sub ebx edx
push ebx
push ecx
push edi
call sub_43d220
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
add esp 0xc
jmp r-xdata
cmp [ edi + eax ] 0x50
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
inc eax
cmp eax edx
jb r-xdata
mov ecx [ edi + eax ]
mov [ esi + 0x4 ] ecx
cmp ecx [ rwxdata ]
jne r-xdata
cmp ecx [ rwxdata ]
jne r-xdata
cmp [ edi + eax + 0x4 ] 0x0
sete cl
test cl cl
jne r-xdata
cmp [ edi + eax + 0x4 ] 0x80
jae r-xdata
mov ecx [ ebp - 0x20 ]
add ecx eax
mov eax [ ebp - 0x1c ]
adc eax 0x0
mov [ esi + 0x48 ] ecx
add ecx 0x4
mov [ esi + 0x4c ] eax
adc eax 0x0
push edi
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x4
sub_418380
push ebp
mov ebp esp
push 0xffffffff
push sub_451c78
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x28
call sub_43c55a
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov [ eax + 0x8 ] ebx
mov esi eax
jmp r-xdata
mov eax [ edi + 0x40 ]
add eax [ ebp + 0x8 ]
mov ecx [ edi + 0x44 ]
adc ecx [ ebp + 0xc ]
mov edx [ edi ]
mov edx [ edx ]
mov [ ebp - 0x4 ] ebx
lea ebx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push ebx
push ecx
push eax
mov eax [ edi ]
push eax
mov eax [ edx + 0x10 ]
call eax
mov edi [ edi ]
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_418450
push ebx
push esi
mov esi ecx
lea ecx [ esi + 0x20 ]
xor ebx ebx
push 0x3
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
call sub_4026e0
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov eax r--data
mov [ esi + 0x2c ] eax
mov ecx 0x4
mov [ esi + 0x3c ] ecx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x74 ] ebx
mov [ esi + 0x68 ] eax
mov [ esi + 0x78 ] ecx
mov [ esi + 0x80 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x7c ] r--data
mov [ esi + 0x88 ] bx
mov [ esi + 0x8a ] bl
mov eax esi
pop esi
pop ebx
retn
sub_4184c0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov [ esi + 0x18 ] 0x0
mov eax [ esi + 0x2c ]
push edi
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] 0x0
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x10 ]
lea ebx [ esi + 0x8 ]
push ebx
push 0x1
push 0x0
push 0x0
push edi
call ecx
test eax eax
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi ] 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ebx ]
mov eax [ ebx + 0x4 ]
push ecx
push edi
mov ecx esi
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] eax
call sub_418140
test eax eax
jne r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ edi ]
mov edx [ edx + 0x10 ]
push eax
push eax
mov eax [ esi + 0x14 ]
push eax
push ecx
push edi
call edx
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] edi
xor eax eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_418570
push ebp
mov ebp esp
push 0xffffffff
push sub_451cb3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov edi ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x44 ] edx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x40 ] edx
call sub_404680
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x2c ] eax
cmp eax 0x4
jae r-xdata
xor esi esi
mov [ ebp - 0x5c ] r--data
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] esi
lea eax [ ebp - 0x6c ]
push eax
mov ebx 0x2
push ebx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] esi
call sub_417540
test eax eax
jne r-xdata
xor edi edi
xor esi esi
xor ebx ebx
jb r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] 0x6
call sub_43d1c8
cmp [ ebp - 0x6c ] ebx
sete al
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x18
ja r-xdata
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] esi
call sub_43d1c8
mov dx [ ebp - 0x34 ]
lea eax [ ebp - 0x64 ]
push eax
push ebx
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx edi
mov [ ebp - 0x60 ] dx
call sub_417540
test eax eax
jne r-xdata
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x24 ]
push edx
push 0x1
lea eax [ ebp - 0x2d ]
push eax
call sub_417540
test eax eax
jne r-xdata
cmp [ ebp - 0x2c ] ebx
jbe r-xdata
push r--data
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x24 ] 0x6
call sub_43d1c8
cmp [ ebp - 0x64 ] ebx
sete al
test al al
je r-xdata
cmp [ ebp - 0x24 ] 0x1
jne r-xdata
lea ecx [ ecx ]
push r--data
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x28 ] esi
call sub_43d1c8
mov ebx [ ebp - 0x2c ]
movzx esi [ ebp - 0x3c ]
sub ebx 0x4
mov [ ebp - 0x2c ] ebx
cmp esi ebx
jbe r-xdata
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] ebx
call sub_43d1c8
int3
add edi 0x1
adc esi ebx
cmp esi ebx
jb r-xdata
cmp [ ebp - 0x34 ] 0x1
jne r-xdata
mov esi ebx
ja r-xdata
push esi
lea ecx [ ebp - 0x5c ]
push ecx
mov ecx edi
call sub_417d70
push 0x10
call sub_43c55a
mov edi eax
add esp 0x4
mov [ ebp - 0x2c ] edi
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4c ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp edi [ ebp - 0x2c ]
jb r-xdata
xor edi edi
mov dx [ ebp - 0x60 ]
lea ecx [ edi + 0x4 ]
mov [ edi ] dx
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov [ ecx ] r--data
call sub_40d300
jmp r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x38 ]
jmp r-xdata
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x0
call sub_404690
mov eax [ ebp - 0x50 ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0xc ]
mov [ edx + ecx * 4 ] edi
inc [ eax + 0x8 ]
mov eax [ ebp - 0x48 ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp esi 0x8
jb r-xdata
mov edx [ ebp - 0x40 ]
cmp [ edx ] 0xffff
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp esi 0x8
jb r-xdata
push 0x0
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x4
jmp r-xdata
lea edx [ ebp - 0x68 ]
push edx
push 0x8
lea eax [ ebp - 0x20 ]
push eax
mov ecx edi
call sub_417540
test eax eax
jne r-xdata
xor edi edi
test esi esi
je r-xdata
cmp esi 0x4
jb r-xdata
cmp esi 0x8
jb r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x8
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx edi
call sub_417540
test eax eax
jne r-xdata
push r--data
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] 0x6
call sub_43d1c8
cmp [ ebp - 0x68 ] 0x8
sete al
test al al
je r-xdata
mov eax [ ebp - 0x54 ]
sub ebx esi
push eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x5c ] r--data
call sub_43c44d
add esp 0x4
cmp ebx 0x4
jae r-xdata
lea esp [ esp ]
mov ecx edi
call sub_417770
mov ecx [ ebp - 0x40 ]
sub ebx 0x4
mov [ ecx ] eax
sub esi 0x4
mov ecx edi
call sub_4177c0
mov ecx [ ebp - 0x48 ]
sub ebx 0x8
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov [ ebp - 0x2c ] ebx
sub esi 0x8
cmp [ ebp - 0x28 ] 0x8
sete al
test al al
je r-xdata
push r--data
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x28 ] 0x0
call sub_43d1c8
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
sub ebx 0x8
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ ebp - 0x2c ] ebx
sub esi 0x8
cmp [ ebp - 0x24 ] 0x1
sete al
test al al
je r-xdata
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] 0x0
call sub_43d1c8
mov eax [ ebp - 0x44 ]
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
sub ebx 0x8
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x2c ] ebx
sub esi 0x8
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] 0x0
call sub_43d1c8
inc edi
cmp edi esi
jb r-xdata
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x24 ]
push edx
push 0x1
lea eax [ ebp - 0x2d ]
push eax
call sub_417540
test eax eax
jne r-xdata
jmp r-xdata
sub_418960
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x24 ]
push eax
push 0x1a
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x28 ] ecx
call sub_417540
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
je r-xdata
push r--data
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x28 ] 0x6
call sub_43d1c8
mov dl [ ebp - 0x20 ]
mov al [ ebp - 0x1f ]
mov cx [ ebp - 0x1e ]
mov [ esi ] dl
movzx edx [ ebp - 0x1c ]
mov [ esi + 0x2 ] cx
mov ecx [ ebp - 0x16 ]
mov [ esi + 0x1 ] al
mov eax [ ebp - 0x1a ]
mov [ esi + 0xc ] ecx
mov ecx [ ebp - 0xe ]
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0x4 ] dx
mov edx [ ebp - 0x12 ]
lea edi [ esi + 0x10 ]
lea ebx [ esi + 0x18 ]
mov [ ebx ] ecx
mov [ edi + 0x4 ] eax
mov [ ebx + 0x4 ] eax
movzx eax [ ebp - 0xa ]
mov [ edi ] edx
movzx edx [ ebp - 0x8 ]
lea ecx [ esi + 0x20 ]
push ecx
mov ecx [ ebp - 0x28 ]
push eax
mov [ ebp - 0x24 ] eax
mov [ esi + 0x94 ] dx
call sub_417e20
movzx eax [ esi + 0x94 ]
mov edx [ ebp - 0x24 ]
add edx 0x1e
xor ecx ecx
mov [ esi + 0x90 ] edx
cmp ax cx
jbe r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] 0x0
call sub_43d1c8
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x24 ] ecx
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x30 ]
push edx
push edi
push ebx
add esi 0x2c
push esi
push eax
call sub_418570
sub_418a80
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
push 0x2a
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x3c ] ecx
mov [ esi + 0x89 ] 0x1
call sub_417540
test eax eax
je r-xdata
cmp [ ebp - 0x34 ] 0x2a
je r-xdata
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] 0x6
call sub_43d1c8
mov cl [ ebp - 0x2e ]
movzx edx [ ebp - 0x30 ]
mov al [ ebp - 0x2f ]
mov [ esi ] cl
mov cx [ ebp - 0x2a ]
push ebx
mov [ esi + 0x4 ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x40 ] dl
movzx edx [ ebp - 0x2d ]
push edi
mov [ esi + 0x10 ] ecx
movzx ecx [ ebp - 0x16 ]
lea edi [ esi + 0x10 ]
mov [ esi + 0x1 ] dl
mov edx [ ebp - 0x28 ]
mov [ esi + 0x41 ] al
mov ax [ ebp - 0x2c ]
mov [ ebp - 0x38 ] ecx
movzx ecx [ ebp - 0x12 ]
mov [ esi + 0x8 ] edx
mov edx [ ebp - 0x1c ]
mov [ esi + 0x2 ] ax
mov eax [ ebp - 0x24 ]
lea ebx [ esi + 0x18 ]
mov [ ebx ] edx
movzx edx [ ebp - 0x14 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0xe ]
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x44 ] ecx
movzx ecx [ ebp - 0x18 ]
mov [ edi + 0x4 ] eax
mov [ ebx + 0x4 ] eax
mov [ ebp - 0x40 ] edx
mov dx [ ebp - 0x10 ]
mov [ esi + 0x4c ] eax
lea eax [ esi + 0x20 ]
push eax
mov [ esi + 0x42 ] dx
mov edx [ ebp - 0xa ]
push ecx
mov ecx [ ebp - 0x3c ]
mov [ esi + 0x48 ] edx
call sub_417e20
mov eax [ ebp - 0x38 ]
test ax ax
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
push ecx
mov [ ebp - 0x34 ] 0x0
call sub_43d1c8
cmp [ ebp - 0x34 ] 0x0
pop edi
pop ebx
je r-xdata
lea edx [ ebp - 0x34 ]
push edx
lea ecx [ esi + 0x48 ]
push ecx
push edi
push ebx
lea ecx [ esi + 0x68 ]
movzx edx ax
push ecx
mov ecx [ ebp - 0x3c ]
push edx
call sub_418570
movzx ecx [ ebp - 0x40 ]
push ecx
mov ecx [ ebp - 0x3c ]
add esi 0x7c
push esi
call sub_417d70
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
push r--data
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x38 ] 0x5
call sub_43d1c8
sub_418be0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404680
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_40fb80
mov eax esi
pop esi
pop ebp
retn 0x4
sub_418c00
push ebp
mov ebp esp
push 0xffffffff
push sub_451ceb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x88 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x48 ]
add eax [ esi + 0x40 ]
mov ecx [ edi + 0x4c ]
adc ecx [ esi + 0x44 ]
mov edx [ esi ]
mov ebx [ edx ]
push 0x0
push 0x0
push ecx
push eax
mov eax [ ebx + 0x10 ]
push edx
mov [ ebp - 0x4 ] 0x0
call eax
xor ebx ebx
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0xa8 ]
call sub_418450
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_417770
lea ecx [ ebp - 0xa8 ]
cmp eax [ rwxdata ]
je r-xdata
push ecx
mov ecx esi
call sub_418960
mov esi eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] bl
lea eax [ ebp - 0xa8 ]
mov ecx edi
call sub_417320
test al al
jne r-xdata
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] bl
call sub_40f940
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov dl [ ebp - 0xa6 ]
shr dl 0x3
test dl 0x1
jne r-xdata
mov [ ebp - 0x4 ] bl
lea ecx [ ebp - 0xa8 ]
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
mov eax [ edi + 0xc ]
cmp eax [ ebp - 0x9c ]
jne r-xdata
call sub_40f940
mov eax 0x1
mov edx [ ebp - 0x18 ]
mov ax [ ebp - 0x14 ]
lea ecx [ ebp - 0x7c ]
push ecx
lea ecx [ edi + 0x2c ]
mov [ edi + 0x90 ] edx
mov [ edi + 0x94 ] ax
call sub_418be0
lea ecx [ ebp - 0xa8 ]
mov [ edi + 0x88 ] 0x1
mov [ ebp - 0x4 ] bl
call sub_40f940
mov ecx [ edi + 0x10 ]
cmp ecx [ ebp - 0x98 ]
jne r-xdata
mov edx [ edi + 0x14 ]
cmp edx [ ebp - 0x94 ]
jne r-xdata
mov eax [ edi + 0x18 ]
cmp eax [ ebp - 0x90 ]
jne r-xdata
mov ecx [ edi + 0x1c ]
cmp ecx [ ebp - 0x8c ]
jne r-xdata
sub_418da0
push ebp
mov ebp esp
push 0xffffffff
push sub_451d10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x88 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
mov [ ebp - 0x4 ] 0x0
call sub_418c00
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov al [ esi + 0x2 ]
shr al 0x3
test al 0x1
je r-xdata
movzx eax [ esi + 0x94 ]
mov ecx [ ebx + 0x40 ]
cdq
xor edi edi
add eax [ esi + 0x90 ]
push 0x0
adc edx edi
add eax [ esi + 0x48 ]
mov edi [ ebx + 0x44 ]
adc edx [ esi + 0x4c ]
add ecx [ esi + 0x10 ]
push 0x0
adc edi [ esi + 0x14 ]
add ecx eax
mov eax [ ebx ]
adc edi edx
mov edx [ eax ]
push edi
push ecx
push eax
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov ecx ebx
call sub_417770
cmp eax [ rwxdata ]
jne r-xdata
mov eax 0x1
mov ecx ebx
call sub_417770
mov ecx ebx
mov [ ebp + 0x8 ] eax
call sub_417770
mov ecx ebx
mov [ ebp - 0x14 ] eax
xor edi edi
call sub_417770
mov ecx [ ebp + 0x8 ]
cmp ecx [ esi + 0xc ]
jne r-xdata
mov edx [ esi + 0x10 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
xor ecx ecx
cmp [ esi + 0x18 ] eax
jne r-xdata
cmp [ esi + 0x1c ] ecx
jne r-xdata
sub_418ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_451d3b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x98
call sub_43c55a
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ebx [ ebp + 0x8 ]
push ebx
mov ecx esi
call sub_40ff50
mov eax [ ebx + 0x90 ]
mov [ esi + 0x90 ] eax
mov cx [ ebx + 0x94 ]
mov [ esi + 0x94 ] cx
jmp r-xdata
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov edx [ edi + 0x8 ]
mov eax [ edi + 0xc ]
mov [ eax + edx * 4 ] esi
mov eax [ edi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ edi + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_418f70
push ebp
mov ebp esp
push 0xffffffff
push sub_451d6b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa4
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ ebp + 0x8 ]
call sub_404680
mov edx [ ebp + 0x10 ]
mov eax [ edi ]
mov ebx [ ebp + 0xc ]
mov ecx [ eax ]
lea esi [ edi + 0x10 ]
push esi
push 0x0
push edx
push ebx
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp [ esi ] ebx
jne r-xdata
mov eax 0x1
mov edx [ esi + 0x4 ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
push 0x8000
lea ecx [ edi + 0x20 ]
call sub_404f00
test al al
jne r-xdata
mov eax [ edi ]
push eax
lea ecx [ edi + 0x20 ]
call sub_404f60
lea ecx [ edi + 0x20 ]
call sub_404e60
mov ecx [ esi ]
sub ecx [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
sbb eax [ ebp + 0x10 ]
mov [ edi + 0x18 ] 0x1
cmp eax [ ebp + 0x18 ]
ja r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ esi ]
sub eax [ ebp + 0xc ]
mov esi [ esi + 0x4 ]
sbb esi [ ebp + 0x10 ]
cmp eax [ ebp + 0x14 ]
jne r-xdata
jb r-xdata
cmp esi [ ebp + 0x18 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x4
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx edi
call sub_417540
test eax eax
jne r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push r--data
lea ecx [ ebp + 0x8 ]
push ecx
mov [ ebp + 0x8 ] 0x6
call sub_43d1c8
cmp [ ebp - 0x18 ] 0x4
sete al
test al al
je r-xdata
lea esp [ esp ]
push r--data
lea edx [ ebp + 0x1c ]
push edx
mov [ ebp + 0x1c ] 0x0
call sub_43d1c8
mov edx [ ebp - 0x10 ]
cmp edx [ rwxdata ]
jne r-xdata
lea ecx [ ebp - 0xb0 ]
call sub_418450
lea eax [ ebp - 0xb0 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_418a80
mov ebx eax
lea ecx [ ebp - 0xb0 ]
test ebx ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_40f940
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push ecx
mov ecx [ ebp + 0x8 ]
call sub_418ec0
mov ebx [ ebp + 0x1c ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_40f940
mov ecx [ esi ]
sub ecx [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
sbb eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x18 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov eax 0x10624dd3
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
imul eax eax 0x3e8
mov edx ecx
sub edx eax
jne r-xdata
ja r-xdata
mov eax ecx
cdq
push edx
push eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
push ebx
call eax
mov ebx eax
test ebx ebx
jne r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_40f940
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4191f0
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
lea eax [ ebp - 0x10 ]
xor edi edi
push eax
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
call sub_417ec0
cmp eax edi
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edi [ ebp + 0x10 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
mov [ edi ] ecx
mov ecx [ ebp - 0x8 ]
mov [ edi + 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax ] ecx
push ebx
mov [ eax + 0x4 ] edx
mov eax [ ebp + 0x14 ]
add ecx [ esi + 0x40 ]
push eax
mov eax [ edi + 0x4 ]
adc edx [ esi + 0x44 ]
push eax
mov eax [ edi ]
push eax
push edx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_418f70
mov ebx eax
cmp ebx 0x1
jne r-xdata
lea edx [ ebp + 0x14 ]
push edx
push 0x4
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_417540
test eax eax
je r-xdata
mov edx [ esi + 0x40 ]
or edx [ esi + 0x44 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0x4
jne r-xdata
push r--data
lea ecx [ ebp + 0x14 ]
push ecx
mov [ ebp + 0x14 ] 0x6
call sub_43d1c8
mov eax [ ebp + 0x14 ]
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
push eax
mov eax [ esi + 0x48 ]
add eax [ ebp - 0x8 ]
push ecx
mov ecx [ esi + 0x4c ]
adc ecx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
push ecx
push eax
push edx
mov ecx esi
call sub_418f70
mov ebx eax
test ebx ebx
jne r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x8 ]
mov eax ebx
mov [ esi + 0x4 ] edx
pop ebx
mov eax [ esi + 0x48 ]
mov ecx [ esi + 0x4c ]
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] ecx
sub_4192f0
push ebp
mov ebp esp
push 0xffffffff
push sub_451db1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x138
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_404680
mov eax [ ebp + 0x14 ]
xor ebx ebx
mov [ eax ] ebx
mov ecx [ esi + 0x4 ]
cmp ecx [ rwxdata ]
jne r-xdata
mov edx [ esi + 0x10 ]
mov ecx [ esi + 0x14 ]
mov eax [ ebp + 0x10 ]
add edx 0xfffffffc
adc ecx 0xffffffff
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ ebp + 0x8 ] ebx
cmp [ edi + 0x8 ] ebx
jle r-xdata
lea ecx [ ecx ]
xor ecx ecx
cmp [ edi + 0x8 ] ebx
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x8c ] eax
mov [ ecx + eax ] bl
mov eax 0x4
mov ecx r--data
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x80 ] ecx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] bx
mov [ ebp - 0x22 ] bl
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x8 ]
mov eax [ esi + 0x14 ]
sbb eax [ esi + 0xc ]
add edx 0xfffffffc
lea ecx [ ebp - 0xac ]
adc eax 0xffffffff
push ecx
mov ecx esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x60 ] eax
call sub_418960
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
xor ecx ecx
cmp [ ebp - 0x88 ] ebx
jle r-xdata
xor eax eax
mov edi edi
mov ecx [ ebp + 0xc ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_40f940
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea edx [ ebp - 0xac ]
push edx
mov ecx esi
mov [ ebp - 0x24 ] 0x1
call sub_4178a0
push 0x98
call sub_43c55a
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x8c ]
push eax
call sub_43c44d
mov eax [ ebp + 0x8 ]
add esp 0x4
mov edx [ ebp - 0x8c ]
mov dl [ edx + ecx ]
mov [ ecx + eax ] dl
inc ecx
cmp ecx [ ebp - 0x88 ]
jl r-xdata
mov eax [ edi + 0xc ]
mov eax [ eax + ecx * 4 ]
mov edx [ esi + 0x40 ]
sub [ eax + 0x48 ] edx
mov edx [ esi + 0x44 ]
sbb [ eax + 0x4c ] edx
inc ecx
cmp ecx [ edi + 0x8 ]
jl r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
mov eax 0x10624dd3
imul [ ebp + 0x8 ]
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
mov edx [ ebp + 0x8 ]
imul eax eax 0x3e8
sub edx eax
jne r-xdata
mov [ ebp + 0x8 ] ebx
lea ecx [ ebp - 0xac ]
push ecx
mov ecx eax
call sub_40ff50
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x90 ] edx
mov cx [ ebp - 0x18 ]
mov [ eax + 0x94 ] cx
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp eax [ rwxdata ]
jne r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ecx ]
cdq
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ecx + 0x4 ]
push edx
call eax
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x4
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx esi
call sub_417540
test eax eax
jne r-xdata
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
imul eax eax 0x64
mov edx ecx
sub edx eax
jne r-xdata
mov ecx edi
mov [ ebp - 0x4 ] bl
call sub_404690
mov edx [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov [ eax + edx * 4 ] ecx
inc [ edi + 0x8 ]
mov ecx [ edi + 0x8 ]
cmp [ ebp + 0xc ] ebx
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x144 ]
call sub_418450
lea ecx [ ebp - 0x144 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_418a80
mov [ ebp + 0x10 ] eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push r--data
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp + 0xc ] 0x6
call sub_43d1c8
cmp [ ebp - 0x10 ] 0x4
mov [ ebp - 0x4 ] 0xffffffff
sete al
lea ecx [ ebp - 0xac ]
cmp al bl
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp + 0x8 ] eax
mov eax ecx
mov ecx [ ebp + 0xc ]
cdq
push edx
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
push ecx
call edx
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_40f940
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] ebx
jne r-xdata
call sub_40f940
mov edx [ ebp - 0x14 ]
mov [ esi + 0x4 ] edx
call sub_40f940
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp + 0x10 ] ebx
mov [ ebp + 0x10 ] ebx
cmp [ edi + 0x8 ] ebx
jle r-xdata
push 0x4
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x88 ] ebx
mov [ ebp - 0x84 ] ebx
call sub_43c55a
add esp 0x4
mov [ ebp + 0x8 ] eax
cmp [ ebp - 0x84 ] ebx
jle r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x144 ]
mov ecx [ edi + 0xc ]
add eax ebx
cdq
sub eax edx
sar eax 0x1
mov edx [ ecx + eax * 4 ]
mov ecx [ edx + 0x48 ]
sub ecx [ esi + 0x40 ]
mov edx [ edx + 0x4c ]
sbb edx [ esi + 0x44 ]
cmp [ ebp - 0xfc ] ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ edi + 0x8 ]
je r-xdata
mov edx [ edi + 0xc ]
mov eax [ ebp + 0x10 ]
mov eax [ edx + eax * 4 ]
mov ecx [ ebp - 0x124 ]
mov edx [ eax + 0x20 ]
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_421a20
add esp 0x8
test eax eax
je r-xdata
cmp [ ebp - 0xf8 ] edx
ja r-xdata
cmp [ ebp - 0xf8 ] edx
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x48 ]
sub ecx [ ebp - 0xfc ]
mov edx [ eax + 0x4c ]
sbb edx [ ebp - 0xf8 ]
mov [ esi + 0x40 ] ecx
mov [ esi + 0x44 ] edx
mov eax [ ebp + 0x10 ]
inc eax
mov [ ebp + 0x10 ] eax
cmp eax [ edi + 0x8 ]
jl r-xdata
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ ebp + 0x10 ] ebx
jmp r-xdata
jb r-xdata
mov edx [ edi + 0xc ]
mov ebx [ edx + eax * 4 ]
mov ax [ ebp - 0x104 ]
lea ecx [ ebx + 0x68 ]
mov [ ebx + 0x40 ] ax
call sub_404680
lea ecx [ ebp - 0xdc ]
push ecx
lea ecx [ ebx + 0x68 ]
call sub_40fb80
lea eax [ ebp - 0x144 ]
mov ecx ebx
call sub_417320
test al al
je r-xdata
jmp r-xdata
cmp ebx eax
jge r-xdata
mov ebx [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0xfc ] ecx
jae r-xdata
mov edx [ ebx + 0xc ]
cmp edx [ ebp - 0x138 ]
jne r-xdata
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x24 ]
cmp eax [ ebp - 0x120 ]
jne r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x134 ]
jne r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx [ ebp - 0x130 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
cmp edx [ ebp - 0x12c ]
jne r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x128 ]
jne r-xdata
lea ecx [ ebp - 0x124 ]
push ecx
lea ecx [ ebx + 0x20 ]
call sub_4083b0
mov dx [ ebp - 0x102 ]
lea ecx [ ebp - 0xc8 ]
mov [ ebx + 0x42 ] dx
mov eax [ ebp - 0x100 ]
push ecx
lea ecx [ ebx + 0x7c ]
mov [ ebx + 0x44 ] eax
call sub_40d300
mov dl [ ebp - 0xbb ]
lea eax [ esi + 0x4 ]
push eax
mov ecx esi
mov [ ebx + 0x89 ] dl
call sub_417830
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x144 ]
test al al
je r-xdata
call sub_40f940
call sub_40f940
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
inc [ eax ]
inc ecx
xor ebx ebx
mov [ ebp + 0x8 ] ecx
cmp ecx [ edi + 0x8 ]
jl r-xdata
sub_419870
push ebp
mov ebp esp
push 0xffffffff
push sub_451dd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xbc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov esi ecx
mov ecx ebx
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] edi
mov [ esi + 0x68 ] 0x0
call sub_404680
push edi
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x70 ]
push ecx
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_4191f0
mov [ ebp - 0x4 ] 0xffffffff
cmp eax 0x1
je r-xdata
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x5c ] edx
cmp eax 0x1
jne r-xdata
test eax eax
je r-xdata
push 0x30
lea eax [ ebp - 0xbc ]
push 0x0
push eax
call sub_43d590
mov edi [ esi + 0x10 ]
mov ebx [ esi + 0x14 ]
mov ecx [ esi + 0x4 ]
add esp 0xc
sub edi [ esi + 0x40 ]
mov [ ebp - 0x55 ] 0x0
sbb ebx [ esi + 0x44 ]
add edi 0xfffffffc
adc ebx 0xffffffff
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x64 ] ebx
cmp ecx [ rwxdata ]
jne r-xdata
mov edx [ esi + 0x4c ]
lea edi [ esi + 0x10 ]
push edi
xor eax eax
push 0x0
push edx
mov edx [ esi + 0x48 ]
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov eax [ esi ]
mov [ esi + 0x18 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
cmp ecx [ rwxdata ]
jne r-xdata
mov ecx esi
mov [ ebp - 0x55 ] 0x1
mov [ esi + 0x68 ] 0x1
call sub_4177c0
mov ebx edx
push 0x2c
lea edx [ ebp - 0x54 ]
push edx
mov ecx esi
mov edi eax
call sub_417670
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0xbc ]
call sub_4173e0
add edi 0xffffffd4
adc ebx 0xffffffff
push ebx
push edi
mov ecx esi
call sub_417cf0
lea eax [ esi + 0x4 ]
push eax
mov ecx esi
call sub_417830
test al al
je r-xdata
mov ecx [ edi ]
cmp ecx [ esi + 0x48 ]
jne r-xdata
mov edx [ esi + 0x4 ]
cmp edx [ rwxdata ]
jne r-xdata
mov ecx esi
call sub_417770
mov ecx esi
call sub_4177c0
mov ecx esi
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] edx
call sub_417770
cmp edi [ ebp - 0x68 ]
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0xb8 ] 0x0
jne r-xdata
mov edx [ edi + 0x4 ]
cmp edx [ esi + 0x4c ]
jne r-xdata
push 0x12
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_417670
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ ebp - 0x8c ]
call sub_417380
mov cl [ ebp - 0x55 ]
test cl cl
je r-xdata
cmp ebx [ ebp - 0x64 ]
jne r-xdata
push r--data
lea eax [ ebp - 0xc4 ]
push eax
mov [ ebp - 0xc4 ] 0x5
call sub_43d1c8
cmp [ ebp - 0xb4 ] 0x0
jne r-xdata
lea eax [ esi + 0x4 ]
push eax
mov ecx esi
call sub_417830
test al al
je r-xdata
movzx eax [ ebp - 0x8c ]
mov [ ebp - 0xb8 ] eax
mov edx 0xffff
cmp [ ebp - 0x8c ] dx
je r-xdata
lea eax [ esi + 0x4 ]
push eax
mov ecx esi
call sub_417830
test al al
je r-xdata
mov eax [ ebp - 0x5c ]
cdq
cmp [ ebp - 0xac ] eax
jne r-xdata
mov eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x70 ]
push edx
push eax
push ebx
mov ecx esi
call sub_4192f0
test eax eax
jne r-xdata
movzx edi [ ebp - 0x8a ]
jmp r-xdata
mov edx 0xffff
cmp [ ebp - 0x8a ] dx
je r-xdata
test cl cl
je r-xdata
cmp [ ebp - 0xa8 ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ ebp - 0x70 ]
mov ecx [ ebp - 0x6c ]
mov edi [ edi + 0x4 ]
sub eax edx
sbb edi ecx
add eax 0xfffffffc
adc edi 0xffffffff
sub edx [ esi + 0x40 ]
mov [ ebp - 0x78 ] eax
sbb ecx [ esi + 0x44 ]
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x70 ] edx
mov [ ebp - 0x6c ] ecx
test cl cl
je r-xdata
mov edi [ ebp - 0xb4 ]
cmp [ ebp - 0xa4 ] eax
jne r-xdata
movzx eax [ ebp - 0x88 ]
cdq
mov [ ebp - 0xac ] eax
mov [ ebp - 0xa8 ] edx
mov eax 0xffff
cmp [ ebp - 0x88 ] ax
je r-xdata
cmp [ ebp - 0xa0 ] edx
jne r-xdata
movzx eax [ ebp - 0x86 ]
cdq
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa0 ] edx
mov edx 0xffff
cmp [ ebp - 0x86 ] dx
je r-xdata
test cl cl
je r-xdata
mov ecx [ ebp - 0x9c ]
cmp ecx [ ebp - 0x78 ]
jne r-xdata
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x98 ] 0x0
cmp [ ebp - 0x84 ] 0xffffffff
je r-xdata
test cl cl
je r-xdata
mov edx [ ebp - 0x98 ]
cmp edx [ ebp - 0x74 ]
jne r-xdata
mov ebx [ ebp - 0x80 ]
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x80 ] 0xffffffff
je r-xdata
test cl cl
je r-xdata
mov eax [ ebp - 0x94 ]
cmp eax [ ebp - 0x70 ]
jne r-xdata
movzx ecx [ ebp - 0x7c ]
push ecx
lea edx [ esi + 0x58 ]
push edx
mov ecx esi
call sub_417d70
cmp [ ebp - 0xb8 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x94 ]
mov edx [ ebp - 0x60 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx [ ebp - 0x6c ]
je r-xdata
push r--data
lea eax [ ebp - 0xc0 ]
push eax
mov [ ebp - 0xc0 ] 0x5
call sub_43d1c8
int3
test edi edi
jne r-xdata
mov edi [ ebp - 0x68 ]
mov ebx [ ebp - 0x64 ]
mov edi [ ebp - 0x5c ]
cmp [ ebp - 0xac ] di
jne r-xdata
cmp [ ebp - 0xa4 ] di
jne r-xdata
mov eax [ ebp - 0x9c ]
cmp eax [ ebp - 0x78 ]
jne r-xdata
cmp ebx [ ebp - 0x70 ]
je r-xdata
lea ecx [ esi + 0x20 ]
mov [ esi + 0x18 ] 0x0
call sub_404e40
mov edx [ ebp - 0x60 ]
cmp edi [ edx + 0x8 ]
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
sete al
mov [ esi + 0x69 ] al
mov [ esi + 0x50 ] ecx
mov [ esi + 0x54 ] edx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x60 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_419cd0
push esi
mov esi ecx
cmp [ esi ] 0x8
jb r-xdata
pop esi
retn
push edi
lea esp [ esp ]
mov eax [ esi + 0x8 ]
mov dl [ eax ]
inc eax
mov [ esi + 0x8 ] eax
jmp r-xdata
lea ecx [ esi + 0x8 ]
call sub_404f90
test al al
je r-xdata
mov eax [ esi ]
mov ecx 0x20
sub ecx eax
movzx edx dl
shl edx cl
add eax 0xfffffff8
mov [ esi ] eax
or [ esi + 0x4 ] edx
cmp eax 0x8
jae r-xdata
or dl 0xff
inc [ esi + 0x28 ]
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0xc ]
jb r-xdata
pop edi
sub_419d30
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_419cd0
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
add [ esi ] ecx
mov eax 0x1
shl eax cl
dec eax
and eax edx
shr edx cl
mov [ esi + 0x4 ] edx
pop esi
pop ebp
retn 0x4
sub_419d60
push ebp
mov ebp esp
push 0xffffffff
push sub_451e85
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ ebp - 0x80 ]
call sub_404ee0
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x38 ] edi
push 0x100000
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x1
call sub_404f00
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_404f60
lea ecx [ ebp - 0x80 ]
call sub_404e60
push 0x100000
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x88 ] 0x20
mov [ ebp - 0x84 ] edi
mov [ ebp - 0x60 ] edi
call sub_405100
test al al
jne r-xdata
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x2
call sub_405040
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x0
cmp eax edi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_405150
lea ecx [ ebp - 0x58 ]
call sub_405060
xor eax eax
movzx edx ax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp + 0xb ] al
mov [ ebp - 0x18 ] eax
mov eax edx
shl edx 0x10
or eax edx
lea edi [ esi + 0x8 ]
mov ecx 0x1000
push 0x2000
[ edi ]
lea eax [ esi + 0x4008 ]
push 0x0
push eax
mov [ ebp + 0xc ] 0x9
mov ebx 0x101
call sub_43d590
push ebx
lea eax [ esi + 0x8008 ]
push 0x0
push eax
call sub_43d590
push 0x1eff
lea eax [ esi + 0x8109 ]
push 0x1
push eax
call sub_43d590
add esp 0x24
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x4
call sub_405040
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x0
cmp eax edi
je r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp + 0x18 ] eax
mov ecx eax
mov [ ebp - 0x4 ] 0x3
call sub_404e40
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esi + eax + 0x8008 ] 0x0
jne r-xdata
add ecx ecx
add ecx ecx
mov edx 0x20
sub edx [ ebp - 0x88 ]
add ecx ecx
cmp edx ecx
setb cl
test cl cl
jne r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp + 0x18 ] eax
mov ecx eax
mov [ ebp - 0x4 ] 0x5
call sub_404e40
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x6
call sub_405040
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
lea ecx [ ebp - 0x58 ]
call sub_405220
mov esi eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0xc
call sub_405040
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea eax [ ebp - 0x80 ]
mov [ ebp + 0x18 ] eax
mov ecx eax
mov [ ebp - 0x4 ] 0x7
call sub_404e40
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x10 ]
xor edi edi
or ecx 0xffffffff
cmp eax 0x100
jb r-xdata
lea ecx [ ebp - 0x88 ]
call sub_419cd0
mov eax [ ebp - 0x84 ]
mov ecx [ ebp + 0xc ]
add [ ebp - 0x88 ] ecx
and edi eax
shr eax cl
mov [ ebp - 0x84 ] eax
cmp edi 0x1
jne r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp + 0x18 ] eax
mov ecx eax
mov [ ebp - 0x4 ] 0xd
call sub_404e40
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + edi + 0x6008 ] al
inc edi
cmp [ ebp + 0xb ] 0x0
je r-xdata
lea edx [ ebx - 0x1 ]
cmp eax edx
jne r-xdata
cmp edi 0x2
jne r-xdata
cmp ecx 0xd
jge r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test edi edi
jle r-xdata
mov [ ebx + esi + 0x4007 ] al
test ecx ecx
js r-xdata
mov dl [ esi + eax + 0x4008 ]
mov [ esi + edi + 0x6008 ] dl
movzx eax [ esi + eax * 2 + 0x8 ]
inc edi
cmp eax 0x100
jae r-xdata
mov ecx edi
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x8
call sub_405040
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
lea ecx [ ebp - 0x88 ]
call sub_419cd0
mov ecx [ ebp + 0xc ]
add [ ebp - 0x88 ] ecx
mov edi 0x1
shl edi cl
dec edi
mov eax edi
and eax [ ebp - 0x84 ]
shr [ ebp - 0x84 ] cl
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
inc [ ebp + 0xc ]
jmp r-xdata
cmp ebx 0x2000
jae r-xdata
mov al [ esi + edi + 0x6007 ]
mov edx [ ebp - 0x54 ]
mov ecx [ ebp - 0x58 ]
dec edi
mov [ edx + ecx ] al
mov eax [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x54 ] eax
cmp eax [ ebp - 0x50 ]
jne r-xdata
mov [ esi + ecx + 0x6008 ] al
lea eax [ ebp - 0x80 ]
mov [ ebp + 0x18 ] eax
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_404e40
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push 0x1eff
lea eax [ esi + 0xa109 ]
push 0x0
push eax
call sub_43d590
add esp 0xc
lea ecx [ esi + 0x810a ]
lea eax [ esi + 0x20c ]
mov edx 0x633
mov [ ebx + esi + 0x8007 ] 0x1
mov [ ebp + 0xb ] 0x0
cmp [ esi + ebx + 0x8008 ] 0x0
jne r-xdata
test edi edi
jg r-xdata
lea ecx [ ebp - 0x58 ]
call sub_4052e0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ecx ] 0x0
jne r-xdata
movzx edi [ eax - 0x2 ]
mov [ edi + esi + 0xa008 ] 0x1
mov ecx eax
sub ecx [ ebp - 0x20 ]
mov edi edx
sbb edi [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edi
jne r-xdata
cmp ebx 0x2000
jae r-xdata
inc ebx
cmp ebx 0x2000
jb r-xdata
cmp [ ecx + 0x1 ] 0x0
jne r-xdata
movzx edi [ eax ]
mov [ edi + esi + 0xa008 ] 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x80 ]
sub eax [ ebp - 0x78 ]
mov [ ebp - 0x1c ] edx
cdq
mov ecx 0x20
sub ecx [ ebp - 0x88 ]
xor edi edi
shr ecx 0x3
sub eax ecx
sbb edx edi
add eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x28 ]
adc edx edi
add eax [ ebp - 0x70 ]
push ecx
adc edx [ ebp - 0x6c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] edx
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea ecx [ ebp - 0x30 ]
push ecx
push eax
call edx
mov edi eax
test edi edi
je r-xdata
cmp ecx 0x40000
jbe r-xdata
mov ax [ ebp - 0x10 ]
mov [ esi + ebx + 0x8008 ] 0x0
mov [ esi + ebx * 2 + 0x8 ] ax
mov [ ebp + 0xb ] 0x1
inc ebx
jmp r-xdata
cmp [ ecx + 0x2 ] 0x0
jne r-xdata
movzx edi [ eax + 0x2 ]
mov [ edi + esi + 0xa008 ] 0x1
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0xa
call sub_405040
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ecx
lea ecx [ ebp - 0x58 ]
call sub_405080
cmp [ ebp + 0x18 ] 0x0
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
je r-xdata
cmp [ ecx + 0x3 ] 0x0
jne r-xdata
movzx edi [ eax + 0x4 ]
mov [ edi + esi + 0xa008 ] 0x1
lea eax [ ebp - 0x80 ]
mov [ ebp + 0x18 ] eax
mov ecx eax
mov [ ebp - 0x4 ] 0xb
call sub_404e40
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
add eax 0xa
add ecx 0x5
dec edx
jne r-xdata
movzx edi [ eax + 0x6 ]
mov [ edi + esi + 0xa008 ] 0x1
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
mov eax 0x101
jmp r-xdata
cmp [ esi + eax + 0xa008 ] 0x0
jne r-xdata
inc eax
cmp eax 0x2000
jb r-xdata
mov [ esi + eax + 0x8008 ] 0x1
mov ebx 0x101
nop
cmp ebx 0x2000
jae r-xdata
cmp [ ebx + esi + 0x8009 ] 0x0
jne r-xdata
mov dx [ ebp - 0x18 ]
mov [ esi + ebx + 0x8008 ] 0x0
mov [ esi + ebx * 2 + 0x8 ] dx
mov [ ebp + 0xb ] 0x1
inc ebx
jmp r-xdata
inc ebx
jmp r-xdata
cmp [ ebx + esi + 0x800a ] 0x0
jne r-xdata
add ebx 0x2
jmp r-xdata
cmp [ ebx + esi + 0x800b ] 0x0
jne r-xdata
add ebx 0x3
jmp r-xdata
cmp [ ebx + esi + 0x800c ] 0x0
jne r-xdata
add ebx 0x4
add ebx 0x5
cmp ebx 0x2000
jb r-xdata
cmp [ esi + ebx + 0x8008 ] 0x0
jne r-xdata
jmp r-xdata
sub_41a400
push ebp
mov ebp esp
push 0xffffffff
push sub_451eb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_419d60
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a4c0
cmp eax 0x5
ja r-xdata
mov eax 0x80004005
retn
jmp [ eax * 4 + jump_table_41a4f0 ]
xor eax eax
retn
mov eax 0x8007000e
retn
mov eax 0x80070057
retn
mov eax 0x80004001
retn
mov eax 0x1
retn
sub_41a590
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_410600
mov edx [ esi + 0xbc ]
push edx
call sub_4105e0
add esp 0x8
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
mov ecx [ esi + 0xbc ]
cmp ecx [ esi + 0xb8 ]
je r-xdata
mov eax [ esi + 0xbc ]
mov [ esi + 0xb8 ] eax
mov eax 0x8007000e
pop esi
retn
xor eax eax
pop esi
retn
sub_41a5e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push rwxdata
push eax
push ecx
lea edx [ esi + 0x28 ]
push edx
call sub_425770
add esp 0x10
cmp eax 0x5
ja r-xdata
mov eax 0x80004005
pop esi
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_41a68c ]
mov eax 0x8007000e
pop esi
pop ebp
retn 0xc
mov eax 0x80070057
pop esi
pop ebp
retn 0xc
mov eax 0x80004001
pop esi
pop ebp
retn 0xc
mov eax 0x1
pop esi
pop ebp
retn 0xc
mov [ esi + 0x98 ] 0x1
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_410600
mov edx [ esi + 0xb8 ]
push edx
call sub_4105e0
add esp 0x8
mov [ esi + 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ esi + 0xb8 ]
cmp ecx [ esi + 0xb4 ]
je r-xdata
mov eax [ esi + 0xb8 ]
mov [ esi + 0xb4 ] eax
xor eax eax
pop esi
pop ebp
retn 0xc
sub_41a6b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
setne al
mov [ ecx + 0x9d ] al
test al al
je r-xdata
mov [ ecx + 0xb0 ] 0x0
mov [ ecx + 0xb4 ] 0x0
mov [ ecx + 0xc4 ] 0x0
add ecx 0x2c
push ecx
call sub_424e90
add esp 0x4
pop ebp
retn 0x4
mov eax [ edx ]
mov [ ecx + 0xa0 ] eax
mov edx [ edx + 0x4 ]
mov [ ecx + 0xa4 ] edx
sub_41a710
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi [ ebp + 0xc ]
cmp esi edx
setne cl
mov [ eax + 0x98 ] edx
mov [ eax + 0x9c ] edx
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8d ] cl
cmp cl dl
je r-xdata
mov [ eax + 0xa0 ] edx
mov [ eax + 0xa4 ] edx
mov [ eax + 0xb4 ] edx
add eax 0x1c
push eax
call sub_424e90
add esp 0x4
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
mov [ eax + 0x90 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x94 ] ecx
sub_41a780
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x9c ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
mov ecx [ esi + 0xac ]
mov edx [ esi + 0x54 ]
push edi
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x50 ]
mov edi edx
mov [ ebp - 0x1c ] ecx
mov ecx [ esi + 0xc0 ]
sub edi eax
cmp edi ecx
jae r-xdata
add ecx eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edi [ esi + 0x50 ]
mov ecx [ ebp - 0x8 ]
xor ebx ebx
sub ecx edi
cmp [ esi + 0x9d ] bl
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
mov [ eax ] 0x0
mov eax [ esi + 0xb8 ]
push eax
mov eax [ esi + 0x20 ]
mov [ esi + 0x24 ] 0x0
mov edx [ ecx ]
push eax
push ecx
mov ecx [ edx + 0xc ]
call ecx
test eax eax
jne r-xdata
push ebx
mov eax [ esi + 0x24 ]
mov edx [ esi + 0x28 ]
sub edx eax
mov [ ebp - 0xc ] edx
lea edx [ ebp - 0x18 ]
push edx
push ebx
lea edx [ ebp - 0xc ]
push edx
mov edx [ esi + 0x20 ]
add edx eax
push edx
add ecx edi
push ecx
lea eax [ esi + 0x2c ]
push eax
call sub_424f10
mov ecx [ ebp - 0xc ]
add [ esi + 0x24 ] ecx
mov edx [ esi + 0x50 ]
add esp 0x18
add [ esi + 0xa8 ] ecx
mov ebx eax
mov eax edx
adc [ esi + 0xac ] 0x0
sub eax edi
add [ esi + 0xb0 ] eax
lea edi [ esi + 0xb0 ]
mov [ ebp - 0x10 ] ebx
adc [ edi + 0x4 ] 0x0
test ecx ecx
jne r-xdata
mov eax [ esi + 0xa0 ]
sub eax [ esi + 0xb0 ]
mov edx [ esi + 0xa4 ]
sbb edx [ esi + 0xb4 ]
mov [ ebp - 0x2c ] edx
xor edx edx
cmp [ ebp - 0x2c ] edx
ja r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
xor cl cl
test eax eax
jne r-xdata
jb r-xdata
xor al al
mov eax [ edi + 0x4 ]
cmp eax [ esi + 0xa4 ]
jb r-xdata
mov cl 0x1
jmp r-xdata
mov ecx eax
cmp [ esi + 0xc8 ] dl
je r-xdata
cmp eax ecx
ja r-xdata
mov eax [ esi + 0xc4 ]
mov ecx [ esi + 0x40 ]
sub edx eax
push edx
mov edx [ ebp + 0xc ]
add ecx eax
push ecx
push edx
call sub_411fb0
mov ecx [ esi + 0x50 ]
mov edx [ esi + 0x54 ]
add esp 0xc
mov [ ebp - 0x14 ] eax
mov [ esi + 0xc4 ] ecx
cmp ecx edx
jne r-xdata
cmp edx [ ebp - 0x8 ]
je r-xdata
ja r-xdata
cmp [ esi + 0x9d ] 0x0
mov [ ebp - 0x2 ] cl
je r-xdata
mov ebx 0x1
mov ecx [ esi + 0x50 ]
mov eax [ esi + 0xc0 ]
mov ebx edx
sub ebx ecx
cmp ebx eax
jae r-xdata
xor eax eax
mov [ esi + 0x50 ] eax
mov [ esi + 0xc4 ] eax
test cl cl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ edi ]
cmp eax [ esi + 0xa0 ]
jb r-xdata
add eax ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] edx
jmp r-xdata
test al al
je r-xdata
mov [ ebp - 0x1 ] al
test ebx ebx
jne r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x1 ] al
jne r-xdata
mov edx [ esi + 0x24 ]
cmp edx [ esi + 0x28 ]
lea eax [ esi + 0x28 ]
jne r-xdata
mov eax [ esi + 0xa8 ]
sub eax [ ebp - 0x20 ]
mov ecx [ esi + 0xac ]
sbb ecx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ eax ]
mov edx [ edx + 0xc ]
mov [ ebp - 0x24 ] ecx
push edi
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call edx
test eax eax
je r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0x2 ] al
jne r-xdata
xor eax eax
cmp [ ebp - 0x18 ] 0x1
pop ebx
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_41a9e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ esi + 0x10 ]
lea eax [ esi + 0x10 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
push edx
push eax
mov ecx esi
call sub_41a780
pop esi
pop ebp
retn 0x18
mov eax 0x80070057
pop esi
pop ebp
retn 0x18
sub_41aa30
push esi
mov esi ecx
lea eax [ esi + 0x2c ]
push rwxdata
push eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x14 ] r--data
call sub_4255d0
mov ecx [ esi + 0x20 ]
push ecx
call sub_410600
mov esi [ esi + 0x1c ]
add esp 0xc
test esi esi
je r-xdata
pop esi
retn
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
call eax
sub_41aa90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0xc ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x10 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x14 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_41ac10
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x18 ]
mov eax [ ecx + 0x18 ]
jne r-xdata
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push 0x1
call edx
xor eax eax
sub_41ad20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x10 ] esi
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_41ad60
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x10 ] 0x0
sub_41ad90
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
lea ebx [ ebx ]
mov [ eax ] 0x0
mov edx [ esi + 0x10 ]
mov ecx [ ebx ]
sub ecx edx
cmp [ esi + 0x89 ] 0x0
mov [ ebp + 0x8 ] ecx
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax [ esi + 0x8 ]
push ebx
push edx
mov edx [ esi + 0xc ]
mov [ ebx ] 0x0
mov [ esi + 0x10 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0xc ]
push 0x0
lea ecx [ ebp + 0x8 ]
push ecx
add eax edx
push eax
lea ecx [ ebp + 0x10 ]
push ecx
lea edx [ esi + 0x18 ]
push ebx
push edx
mov [ ebp + 0x10 ] edi
call sub_425200
mov edx [ ebp + 0x8 ]
add [ esi + 0x10 ] edx
mov ecx [ ebp + 0x10 ]
add esp 0x1c
add [ esi + 0x94 ] edx
adc [ esi + 0x98 ] 0x0
add [ esi + 0x9c ] ecx
adc [ esi + 0xa0 ] 0x0
add ebx ecx
mov [ ebp + 0xc ] ebx
mov ebx [ ebp + 0x14 ]
sub edi ecx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x8c ]
sub ecx [ esi + 0x9c ]
mov eax [ esi + 0x90 ]
sbb eax [ esi + 0xa0 ]
xor ebx ebx
cmp eax ebx
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax 0x5
ja r-xdata
add [ ebx ] ecx
jb r-xdata
pop edi
pop esi
mov eax 0x80004005
pop ebx
mov esp ebp
pop ebp
retn 0x10
jmp [ eax * 4 + jump_table_41aee8 ]
mov edi ecx
cmp ecx edi
jae r-xdata
test edx edx
jne r-xdata
pop edi
pop esi
mov eax 0x8007000e
pop ebx
mov esp ebp
pop ebp
retn 0x10
pop edi
pop esi
mov eax 0x80070057
pop ebx
mov esp ebp
pop ebp
retn 0x10
pop edi
pop esi
mov eax 0x80004001
pop ebx
mov esp ebp
pop ebp
retn 0x10
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ esi + 0x14 ]
lea ebx [ esi + 0x14 ]
jne r-xdata
xor eax eax
sub_41af00
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
xor edx edx
cmp ecx edx
setne al
mov [ esi + 0x9d ] al
cmp al dl
je r-xdata
mov [ esi + 0xb0 ] edx
mov [ esi + 0xb4 ] edx
mov [ esi + 0xc4 ] edx
lea edx [ esi + 0x2c ]
push edx
call sub_424e90
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x1c ]
add esp 0x4
push ecx
push edx
push eax
mov ecx esi
call sub_41a780
pop esi
pop ebp
retn 0xc
mov eax [ ecx ]
mov [ esi + 0xa0 ] eax
mov ecx [ ecx + 0x4 ]
mov [ esi + 0xa4 ] ecx
sub_41af70
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_410600
mov edx [ esi + 0xbc ]
push edx
call sub_4105e0
add esp 0x8
mov [ esi + 0x20 ] eax
test eax eax
je r-xdata
mov ecx [ esi + 0xbc ]
cmp ecx [ esi + 0xb8 ]
je r-xdata
mov eax 0x8007000e
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0xbc ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
push edi
test ebx ebx
je r-xdata
mov [ eax ] 0x0
xor eax eax
mov edi [ esi + 0x28 ]
lea ecx [ esi + 0x28 ]
cmp [ esi + 0x24 ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
sub edi eax
cmp edi ebx
jbe r-xdata
mov eax [ esi + 0x1c ]
push ecx
mov [ ecx ] 0x0
mov ecx [ esi + 0xb8 ]
push ecx
mov ecx [ esi + 0x20 ]
mov [ esi + 0x24 ] 0x0
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
test eax eax
jne r-xdata
mov ecx [ esi + 0x20 ]
mov edx [ ebp + 0x8 ]
push edi
add ecx eax
push ecx
push edx
call sub_43bd20
add [ esi + 0x24 ] edi
mov eax [ ebp + 0x10 ]
add esp 0xc
add [ esi + 0xa8 ] edi
adc [ esi + 0xac ] 0x0
add [ ebp + 0x8 ] edi
sub ebx edi
test eax eax
je r-xdata
mov edi ebx
pop edi
pop ebx
pop esi
pop ebp
retn 0xc
mov edi [ esi + 0x28 ]
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
add [ eax ] edi
sub_41b060
mov eax ecx
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0xc ] r--data
mov [ eax + 0x10 ] r--data
mov [ eax + 0x14 ] r--data
xor ecx ecx
mov [ eax + 0x18 ] ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0xc ] r--data
mov [ eax + 0x10 ] r--data
mov [ eax + 0x14 ] r--data
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x9c ] cx
mov [ eax + 0xbc ] 0x100000
mov [ eax + 0xc0 ] __dos_header
mov [ eax + 0xc8 ] cl
mov [ eax + 0xa8 ] ecx
mov [ eax + 0xac ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x3c ] ecx
retn
sub_41b100
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41aa30
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_41b160
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x1 ]
cmp edx 0x2
ja r-xdata
xor al al
pop ebp
retn 0x4
mov [ ecx + 0xc ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41b180
xor ecx ecx
test edx edx
je r-xdata
retn
push ebx
add eax 0x2
push edi
jmp r-xdata
movzx edi [ eax - 0x2 ]
movzx ebx [ eax - 0x1 ]
shl edi 0x8
or edi ebx
movzx ebx [ eax ]
shl edi 0x8
or edi ebx
movzx ebx [ eax + 0x1 ]
shl edi 0x8
or edi ebx
mov [ esi + ecx * 4 ] edi
inc ecx
add eax 0x4
cmp ecx edx
jb r-xdata
pop edi
pop ebx
sub_41b1c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi [ esi + 0xc ]
and edi 0x3
lea edi [ edi * 4 + 0x4 ]
push edi
lea ebx [ esi + 0x10 ]
push ebx
mov ecx rwxdata
call sub_4268a0
mov eax [ esi ]
mov ecx [ eax + 0xc ]
push esi
call ecx
push edi
mov edi [ ebp + 0x8 ]
push ebx
push edi
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push 0x2
add esi 0x20
push esi
push edi
call sub_411fb0
add esp 0xc
sub_41b220
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push 0xa
lea eax [ ebp - 0x10 ]
push eax
add ecx 0x30
call sub_426a60
push 0xa
lea ecx [ ebp - 0x10 ]
push ecx
push esi
call sub_411fb0
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
sub_41b270
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ecx - 0x22c ] 0x3
movzx eax [ eax ]
lea edx [ eax - 0x1 ]
cmp edx 0x2
ja r-xdata
mov eax 0x80070057
pop ebp
retn 0xc
xor al al
xor ecx ecx
test al al
setne cl
lea eax [ ecx - 0x1 ]
and eax 0x80070057
pop ebp
retn 0xc
mov [ ecx - 0x22c ] eax
xor ecx ecx
mov al 0x1
test al al
setne cl
lea eax [ ecx - 0x1 ]
and eax 0x80070057
pop ebp
retn 0xc
sub_41b2d0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov esi [ edi + 0xc ]
and esi 0x3
lea esi [ esi * 4 + 0x4 ]
lea ecx [ esi + 0x2 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
push eax
call sub_411f70
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
test esi esi
je r-xdata
mov al [ ebp + esi - 0x17 ]
mov dl [ ebp + esi - 0x18 ]
mov [ edi + 0x101 ] al
mov [ edi + 0x100 ] dl
xor eax eax
push esi
lea ecx [ ebp - 0x18 ]
lea eax [ edi + 0x10 ]
push ecx
push eax
call sub_43bd20
add esp 0xc
sub_41b350
xor ecx ecx
push edi
test esi esi
je r-xdata
mov al 0x1
pop edi
retn
mov edi edx
sub edi eax
jmp r-xdata
mov dl [ edi + eax ]
cmp dl [ eax ]
jne r-xdata
xor al al
pop edi
retn
inc ecx
inc eax
cmp ecx esi
jb r-xdata
sub_41b380
mov edx 0xffffffe0
lea eax [ ecx + 0x20 ]
sub edx ecx
lea ebx [ ebx ]
xor al al
retn
inc eax
lea ecx [ edx + eax ]
cmp ecx 0x2
jb r-xdata
mov cl [ eax ]
cmp cl [ eax + 0xe0 ]
jne r-xdata
mov al 0x1
retn
sub_41b3b0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
push 0xa
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov [ edi ] 0x0
call sub_411f70
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
push 0xa
lea edx [ ebp - 0x1c ]
push edx
lea ecx [ esi + 0x30 ]
call sub_426a60
xor eax eax
xor al al
jmp r-xdata
inc eax
cmp eax 0xa
jb r-xdata
mov [ edi ] al
xor eax eax
mov cl [ ebp + eax - 0x10 ]
cmp cl [ ebp + eax - 0x1c ]
jne r-xdata
mov al 0x1
sub_41b440
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
lea eax [ ecx + eax * 4 + 0x18 ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ ecx ] 0x10
pop ebp
retn
sub_41b470
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov eax [ ecx ]
push ebx
mov ebx [ ebp + 0x10 ]
push edi
lea edi [ ecx + edx * 4 + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
cmp eax 0x10
je r-xdata
cmp ebx 0x10
jb r-xdata
mov dl [ edi + eax ]
xor [ esi ] dl
inc eax
inc esi
dec ebx
je r-xdata
xor edx edx
cmp ebx edx
je r-xdata
shr ebx 0x4
push ebx
lea ecx [ edi + 0x10 ]
mov edx esi
call [ rwxdata ]
mov ecx [ ebp + 0x8 ]
shl ebx 0x4
add esi ebx
sub [ ebp + 0x10 ] ebx
mov ebx [ ebp + 0x10 ]
mov eax 0x10
mov [ ebp + 0x10 ] ebx
cmp eax 0x10
jne r-xdata
mov [ ecx ] eax
pop esi
mov [ edi ] edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov [ edi + 0xc ] edx
push 0x1
lea ecx [ edi + 0x10 ]
mov edx edi
call [ rwxdata ]
xor eax eax
lea ebx [ ebx ]
mov ecx [ ebp + 0x8 ]
cmp eax 0x10
jne r-xdata
mov cl [ edi + eax ]
xor [ esi ] cl
inc eax
inc esi
dec ebx
je r-xdata
sub_41b510
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
push esi
lea eax [ ebx + 0x104 ]
push edi
push eax
call sub_41b470
add esp 0xc
push esi
push edi
lea ecx [ ebx + 0x30 ]
call sub_426320
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b550
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
push esi
push edi
lea ecx [ ebx + 0x30 ]
call sub_426320
push esi
push edi
add ebx 0x104
push ebx
call sub_41b470
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b590
push ebp
mov ebp esp
sub esp 0x190
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
and eax 0x3
lea ecx [ eax * 8 + 0x8 ]
lea edx [ eax * 4 + 0x4 ]
shr edx 0x2
lea eax [ edi + 0x10 ]
lea esi [ ebp - 0x18c ]
mov [ ebp - 0x190 ] ecx
lea ebx [ ecx + ecx + 0x2 ]
call sub_41b180
lea eax [ ebx + 0x3 ]
shr eax 0x2
push eax
mov eax [ edi + 0x28 ]
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx [ edi + 0x2c ]
push 0x3e8
push edx
mov edx esi
push edx
push eax
push ecx
call sub_427eb0
xor esi esi
add esp 0x1c
xor eax eax
cmp ebx esi
jbe r-xdata
mov ebx [ ebp - 0x190 ]
push ebx
lea eax [ ebp + ebx - 0x48 ]
push eax
lea ecx [ edi + 0x30 ]
call sub_426990
mov cx [ ebp + ebx * 2 - 0x48 ]
mov [ edi + 0x20 ] cx
mov edx [ edi + 0x108 ]
lea eax [ edi + edx * 4 + 0x11c ]
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ edi + 0x104 ] 0x10
mov eax [ edi + 0x108 ]
push ebx
lea ecx [ edi + eax * 4 + 0x12c ]
lea edx [ ebp - 0x48 ]
call sub_426de0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
mov edx eax
and edx 0x3
mov ecx 0x3
sub ecx edx
add ecx ecx
mov edx eax
shr edx 0x2
mov edx [ ebp + edx * 4 - 0x8c ]
add ecx ecx
add ecx ecx
shr edx cl
inc eax
mov [ ebp + eax - 0x49 ] dl
cmp eax ebx
jb r-xdata
sub_41b6b0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x63
jbe r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp edi [ esi + 0x24 ]
je r-xdata
mov eax 0x80070057
pop edi
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x28 ]
push edi
push edx
push eax
call sub_43bd20
add esp 0xc
pop esi
xor eax eax
pop edi
pop ebp
retn 0xc
push ebx
test edi edi
je r-xdata
xor ebx ebx
push edi
call sub_43c55a
mov ebx eax
mov eax [ esi + 0x24 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
push ecx
call sub_43c44d
add esp 0x4
mov [ esi + 0x28 ] ebx
mov [ esi + 0x24 ] edi
pop ebx
cmp eax edi
jb r-xdata
push eax
mov eax [ esi + 0x28 ]
push eax
push ebx
call sub_43d220
add esp 0xc
jmp r-xdata
mov eax edi
sub_41b750
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x10
jae r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp + 0xc ]
shr esi 0x4
lea ecx [ eax + ecx * 4 + 0x18 ]
mov eax [ eax + 0xc ]
push esi
call eax
mov eax esi
shl eax 0x4
pop esi
pop ebp
retn 0xc
mov eax 0x10
pop esi
pop ebp
retn 0xc
sub_41b7a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test al 0x7
jne r-xdata
mov eax 0x80070057
pop ebp
retn 0xc
lea ecx [ eax - 0x10 ]
cmp ecx 0x10
ja r-xdata
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x10 ]
lea ecx [ eax + edx * 4 + 0x24 ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_41b7e0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x10
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
lea edx [ eax + ecx * 4 + 0x14 ]
push edx
call sub_427960
add esp 0x8
xor eax eax
pop ebp
retn 0xc
mov eax 0x80070057
pop ebp
retn 0xc
sub_41b850
mov eax ecx
mov [ eax + 0x4 ] r--data
mov ecx 0xfffffff8
sub ecx eax
mov [ eax + 0x8 ] 0x0
shr ecx 0x2
and ecx 0x3
mov [ eax + 0x14 ] ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov edx [ rwxdata ]
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] sub_426de0
retn
sub_41b890
mov eax ecx
mov [ eax + 0x4 ] r--data
mov ecx 0xfffffff8
sub ecx eax
mov [ eax + 0x8 ] 0x0
shr ecx 0x2
and ecx 0x3
mov [ eax + 0x14 ] ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov edx [ rwxdata ]
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] sub_426f10
retn
sub_41b8f0
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x8 ]
push edi
push 0x40
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_43d590
mov edi esi
lea edx [ ebp - 0x44 ]
add esp 0xc
xor ecx ecx
sub edi edx
lea eax [ ebp + ecx - 0x44 ]
movzx edx [ edi + eax ]
xor [ eax ] dl
movzx edx [ esi + ecx + 0x1 ]
xor [ eax + 0x1 ] dl
movzx edx [ esi + ecx + 0x2 ]
xor [ eax + 0x2 ] dl
movzx edx [ esi + ecx + 0x3 ]
xor [ eax + 0x3 ] dl
movzx edx [ esi + ecx + 0x4 ]
xor [ eax + 0x4 ] dl
add ecx 0x5
cmp ecx 0x14
jb r-xdata
lea ecx [ ebp - 0xac ]
call sub_425950
push 0x40
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x8c ] 0x0
call sub_426320
push ebx
lea ecx [ ebp - 0xac ]
call sub_4264d0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_41b9a0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
lea eax [ ebp - 0x18 ]
push eax
mov edi edx
call sub_4264d0
push 0x36
lea ebx [ ebp - 0x40 ]
lea esi [ ebp - 0x18 ]
call sub_41b8f0
push 0x5c
lea ebx [ ebp - 0x2c ]
call sub_41b8f0
add esp 0x8
mov ecx 0x8
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_41ba00
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
lea ecx [ ebp - 0xa8 ]
call sub_425950
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x88 ] 0x0
call sub_426320
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0xa8 ]
call sub_4264d0
push 0x36
lea ebx [ ebp - 0x40 ]
lea esi [ ebp - 0x18 ]
call sub_41b8f0
push 0x5c
lea ebx [ ebp - 0x2c ]
call sub_41b8f0
add esp 0x8
mov ecx 0x8
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
sub_41bab0
push ebp
mov ebp esp
sub esp 0x9c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ eax ] 0x0
cmp [ esi + 0x180 ] 0x10
mov [ ebp - 0x9c ] eax
jae r-xdata
push ebx
mov ebx [ esi + 0x168 ]
cmp [ ebx ] 0x3
jne r-xdata
mov eax 0x80004001
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
pop ebx
mov eax 0x80004001
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
movzx eax [ ebx + 0x2 ]
mov ecx 0x660e
cmp ax cx
jb r-xdata
add eax 0x99f2
cmp ax 0x2
jbe r-xdata
movzx edx [ ebx + 0x4 ]
movzx ecx [ ebx + 0x6 ]
movzx eax ax
add eax 0x2
push edi
mov edi eax
shl edi 0x6
cmp edi edx
jne r-xdata
mov eax 0x80004001
add eax eax
add eax eax
add eax eax
mov [ esi + 0x158 ] eax
test cl 0x1
je r-xdata
test ecx 0x4000
jne r-xdata
movzx eax [ ebx + 0x8 ]
mov [ ebp - 0x90 ] eax
test al 0xf
jne r-xdata
lea ecx [ eax + 0x10 ]
cmp ecx [ esi + 0x180 ]
ja r-xdata
push eax
lea edx [ ebx + 0xa ]
push edx
push ebx
call sub_43d220
mov ecx [ ebp - 0x90 ]
lea eax [ ecx + ebx + 0x10 ]
add esp 0xc
cmp [ eax - 0x6 ] 0x0
mov [ ebp - 0x94 ] eax
jne r-xdata
movzx eax [ eax - 0x2 ]
mov [ ebp - 0x98 ] eax
test al 0xf
jne r-xdata
lea eax [ eax + ecx + 0x10 ]
cmp eax [ esi + 0x180 ]
jne r-xdata
mov edx [ esi + 0x158 ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0xc ]
push edx
lea edi [ esi + 0x4 ]
lea eax [ esi + 0x138 ]
push eax
push edi
call ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop ebx
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi ]
push 0x10
lea eax [ esi + 0x170 ]
push eax
mov eax [ edx + 0x10 ]
push edi
call eax
test eax eax
jne r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0xc ]
push esi
call edx
mov ecx [ ebp - 0x90 ]
mov eax [ esi ]
mov edx [ eax + 0x10 ]
push ecx
push ebx
push esi
call edx
lea ecx [ ebp - 0x8c ]
call sub_425950
push 0x10
lea eax [ esi + 0x170 ]
push eax
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x6c ] 0x0
call sub_426320
mov eax [ ebp - 0x90 ]
add eax 0xfffffff0
push eax
push ebx
lea ecx [ ebp - 0x8c ]
call sub_426320
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x8c ]
call sub_41b9a0
mov edx [ esi + 0x158 ]
mov ecx [ edi ]
mov ecx [ ecx + 0xc ]
push edx
lea eax [ ebp - 0x24 ]
push eax
push edi
call ecx
test eax eax
jne r-xdata
mov edx [ edi ]
push 0x10
lea eax [ esi + 0x170 ]
push eax
mov eax [ edx + 0x10 ]
push edi
call eax
test eax eax
jne r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0xc ]
push esi
call edx
mov edi [ ebp - 0x98 ]
mov ebx [ ebp - 0x94 ]
mov eax [ esi ]
mov ecx [ eax + 0x10 ]
push edi
push ebx
push esi
call ecx
cmp edi 0x4
jb r-xdata
lea edx [ edi - 0x4 ]
mov ecx ebx
call sub_423a20
cmp [ edi + ebx - 0x4 ] eax
jne r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x9c ]
mov [ edx ] 0x1
mov eax [ esi ]
mov ecx [ eax + 0xc ]
push esi
call ecx
sub_41bd10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push 0x2
lea eax [ ebp + 0x8 ]
push eax
push ebx
mov esi ecx
call sub_411f40
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
movzx eax [ ebp + 0x8 ]
mov [ esi + 0x16c ] eax
test eax eax
je r-xdata
mov eax 0x80004001
cmp eax 0x10
jne r-xdata
push eax
lea ecx [ esi + 0x170 ]
push ecx
push ebx
call sub_411f40
add esp 0xc
test eax eax
jne r-xdata
push 0x4
lea edx [ ebp + 0x8 ]
push edx
push ebx
call sub_411f40
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x180 ] eax
cmp eax 0x10
jb r-xdata
cmp eax 0x40000
ja r-xdata
add eax 0x10
cmp eax [ esi + 0x160 ]
jbe r-xdata
mov edx [ esi + 0x180 ]
mov eax [ esi + 0x168 ]
push edx
push eax
push ebx
call sub_411f40
add esp 0xc
pop esi
pop ebx
pop ebp
retn 0x10
push edi
lea ecx [ esi + 0x15c ]
call sub_40c600
mov eax [ esi + 0x180 ]
add eax 0x10
push eax
lea ecx [ esi + 0x15c ]
call sub_40a370
mov ecx [ esi + 0x164 ]
add ecx 0xf
and ecx 0xfffffff0
mov [ esi + 0x168 ] ecx
pop edi
sub_41be20
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
movzx edx [ ebp + 0x8 ]
xor edx eax
shr eax 0x8
and edx 0xff
mov edx [ edx * 4 + rwxdata ]
xor edx eax
movzx eax dl
add eax [ ecx + 0x10 ]
mov [ ecx + 0xc ] edx
mov edx [ ecx + 0x14 ]
imul eax eax 0x8088405
inc eax
mov [ ecx + 0x10 ] eax
shr eax 0x18
xor eax edx
and eax 0xff
shr edx 0x8
xor edx [ eax * 4 + rwxdata ]
mov [ ecx + 0x14 ] edx
pop ebp
retn 0x4
sub_41be70
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
xor esi esi
mov [ edx + 0x8 ] 0x12345678
mov [ edx + 0xc ] 0x23456789
mov [ edx + 0x10 ] 0x34567890
test edi edi
je r-xdata
mov eax [ edx + 0x8 ]
mov ecx [ edx + 0xc ]
mov [ edx + 0x14 ] eax
mov eax [ edx + 0x10 ]
pop edi
mov [ edx + 0x1c ] eax
mov [ edx + 0x18 ] ecx
xor eax eax
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0xc ]
lea ebx [ ebx ]
movzx ecx [ esi + ebx ]
mov eax [ edx + 0x8 ]
xor ecx eax
shr eax 0x8
and ecx 0xff
mov ecx [ ecx * 4 + rwxdata ]
xor ecx eax
movzx eax cl
add eax [ edx + 0xc ]
mov [ edx + 0x8 ] ecx
mov ecx [ edx + 0x10 ]
imul eax eax 0x8088405
inc eax
mov [ edx + 0xc ] eax
shr eax 0x18
xor eax ecx
and eax 0xff
shr ecx 0x8
xor ecx [ eax * 4 + rwxdata ]
inc esi
mov [ edx + 0x10 ] ecx
cmp esi edi
jb r-xdata
pop ebx
sub_41bf40
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0xa
lea eax [ ebp - 0x10 ]
mov esi ecx
push eax
mov ecx rwxdata
call sub_4268a0
mov eax [ ebp + 0xc ]
mov edx [ esi + 0x18 ]
mov ecx eax
shr eax 0x10
shr ecx 0x18
mov [ ebp - 0x6 ] al
mov eax [ esi + 0x1c ]
mov [ ebp - 0x5 ] cl
mov ecx [ esi + 0x20 ]
mov [ esi + 0x10 ] eax
push 0xc
mov [ esi + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
mov [ esi + 0xc ] edx
mov edx [ esi ]
mov ecx [ edx + 0x10 ]
push eax
push esi
call ecx
push 0xc
lea edx [ ebp - 0x10 ]
push edx
push edi
call sub_411fb0
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
sub_41bfc0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
xor edi edi
test eax eax
je r-xdata
pop edi
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
mov dl [ edi + ebx ]
or ecx 0x2
mov eax ecx
xor eax 0x1
imul eax ecx
shr eax 0x8
xor al dl
mov [ edi + ebx ] al
mov ecx [ esi + 0xc ]
movzx edx dl
xor edx ecx
shr ecx 0x8
and edx 0xff
mov edx [ edx * 4 + rwxdata ]
xor edx ecx
mov eax [ ebp + 0x10 ]
movzx ecx dl
add ecx [ esi + 0x10 ]
mov [ esi + 0xc ] edx
mov edx [ esi + 0x14 ]
imul ecx ecx 0x8088405
inc ecx
mov [ esi + 0x10 ] ecx
shr ecx 0x18
xor ecx edx
and ecx 0xff
shr edx 0x8
xor edx [ ecx * 4 + rwxdata ]
inc edi
mov [ esi + 0x14 ] edx
cmp edi eax
jb r-xdata
pop esi
pop ebx
sub_41c050
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_411f70
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x1c ]
mov edx [ esi + 0x18 ]
mov ecx [ esi + 0x20 ]
mov [ esi + 0x10 ] eax
push 0xc
mov [ esi + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
mov [ esi + 0xc ] edx
mov edx [ esi ]
mov ecx [ edx + 0x10 ]
push eax
push esi
call ecx
xor eax eax
sub_41c0b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
xor edi edi
test eax eax
je r-xdata
pop edi
pop ebp
retn 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
mov edx ecx
or edx 0x2
mov eax edx
xor eax 0x1
imul eax edx
mov edx [ ebp + 0xc ]
shr eax 0x8
xor al [ edi + edx ]
mov edx [ esi + 0xc ]
movzx ebx al
xor ebx edx
shr edx 0x8
and ebx 0xff
mov ebx [ ebx * 4 + rwxdata ]
xor ebx edx
movzx edx bl
add edx [ esi + 0x10 ]
mov [ esi + 0xc ] ebx
imul edx edx 0x8088405
inc edx
mov [ esi + 0x10 ] edx
shr edx 0x18
xor edx ecx
shr ecx 0x8
and edx 0xff
xor ecx [ edx * 4 + rwxdata ]
inc edi
mov [ esi + 0x14 ] ecx
mov ecx [ ebp + 0xc ]
mov [ edi + ecx - 0x1 ] al
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov eax [ ebp + 0x10 ]
pop esi
pop ebx
sub_41c180
push ebp
mov ebp esp
push 0xffffffff
push sub_451ed8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x1c ] ecx
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov esi eax
test esi esi
je r-xdata
mov ax [ ebp - 0x1c ]
test ax ax
jne r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4110c0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
cmp ax 0x13
jne r-xdata
mov [ edi ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4110c0
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
mov [ edi ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4110c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_41c250
push ebp
mov ebp esp
push 0xffffffff
push sub_451f08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x1c ] ecx
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov esi eax
test esi esi
je r-xdata
mov ax [ ebp - 0x1c ]
test ax ax
jne r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4110c0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
cmp ax 0xb
jne r-xdata
mov [ edi ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4110c0
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x0
setne cl
mov [ edi ] cl
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4110c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_41c3c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_41c3f0
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov eax [ ebx ]
push esi
xor ecx ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] 0x0
mov [ eax ] cx
xor esi esi
cmp [ edi ] cx
je r-xdata
push esi
mov ecx ebx
call sub_403e50
mov ecx [ ebx ]
mov edx edi
inc esi
cmp [ edi + esi * 2 ] cx
jne r-xdata
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
pop edi
mov [ ebx + 0x4 ] esi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_41c450
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x3
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_403e50
mov [ esi + 0x20 ] bx
mov eax esi
pop esi
pop ebx
retn
sub_41c470
push ebp
mov ebp esp
push esi
push edi
xor edi edi
cmp [ rwxdata ] edi
jbe r-xdata
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
nop
pop ebx
pop edi
xor al al
pop esi
pop ebp
retn
xor edi edi
cmp [ ebx + 0x8 ] edi
jbe r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov ecx [ esi + 0xc ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x14 ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov [ eax ] edx
pop edi
mov [ ecx ] 0x1
mov al 0x1
pop esi
pop ebp
retn
inc edi
cmp edi [ rwxdata ]
jb r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x10 ]
mov esi [ edx + edi * 4 ]
mov ecx [ eax ]
mov edx [ esi ]
push ecx
push edx
call sub_421ab0
add esp 0x8
test eax eax
je r-xdata
mov esi [ edi * 4 + rwxdata ]
mov eax [ esi + 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_421ab0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov edx [ esi + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x4 ] edx
mov eax [ esi + 0x18 ]
mov [ ecx ] eax
mov edx [ esi + 0x1c ]
mov eax [ ebp + 0x1c ]
pop ebx
pop edi
mov [ eax ] edx
mov al 0x1
pop esi
pop ebp
retn
inc edi
cmp edi [ ebx + 0x8 ]
jb r-xdata
sub_41c530
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ rwxdata ]
xor eax eax
push edi
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
jmp r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn
mov edi [ ecx + 0x8 ]
xor eax eax
test edi edi
je r-xdata
mov ecx [ eax * 4 + rwxdata ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
mov ecx [ ecx + 0xc ]
lea esp [ esp ]
inc eax
cmp eax esi
jb r-xdata
cmp edx [ ecx + 0xc ]
je r-xdata
inc eax
add ecx 0x4
cmp eax edi
jb r-xdata
cmp edx [ esi + 0x14 ]
je r-xdata
mov edi [ ecx + 0x10 ]
mov ebx [ ebp + 0x18 ]
mov eax [ ebx ]
xor ecx ecx
mov [ ebx + 0x4 ] 0x0
mov [ eax ] cx
xor esi esi
cmp [ edi ] cx
je r-xdata
mov esi [ ecx ]
cmp ebx [ esi + 0x10 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
push esi
mov ecx ebx
call sub_403e50
mov ecx [ ebx ]
mov edx edi
lea esp [ esp ]
inc esi
cmp [ edi + esi * 2 ] cx
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edi + 0x4 ] 0x0
xor eax eax
mov [ edx ] ax
mov ecx [ esi + 0x4 ]
push ecx
mov ecx edi
call sub_403e50
mov edx [ esi ]
mov ecx [ edi ]
nop
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
pop edi
mov [ ebx + 0x4 ] esi
pop esi
mov al 0x1
pop ebx
pop ebp
retn
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
mov edx [ esi + 0x4 ]
mov [ edi + 0x4 ] edx
sub_41c630
push ebp
mov ebp esp
push 0xffffffff
push sub_451f3b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ rwxdata ]
mov dl [ ebp + 0x24 ]
mov edi [ ebp + 0x14 ]
xor eax eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
lea esp [ esp ]
cmp [ ebp + 0x28 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
xor esi esi
test edi edi
je r-xdata
inc eax
cmp eax ecx
jb r-xdata
cmp [ esi + 0xc ] edi
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x18 ]
cmp [ ebx ] 0x0
je r-xdata
mov ecx [ eax + 0xc ]
mov esi [ eax * 4 + rwxdata ]
mov ebx [ esi + 0x8 ]
cmp ebx [ ebp + 0x10 ]
jne r-xdata
jmp r-xdata
test dl dl
je r-xdata
push 0x78
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
inc esi
add ecx 0x4
cmp esi edi
jb r-xdata
mov edx [ eax + 0x14 ]
cmp edx [ ebp + 0x14 ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor esi esi
mov ecx eax
call sub_420590
mov esi eax
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x24 ] 0x0
je r-xdata
mov eax [ esi ]
call eax
cmp [ esi + 0x18 ] 0x0
mov edi eax
jne r-xdata
mov eax [ esi + 0x4 ]
call eax
cmp [ esi + 0x18 ] 0x0
mov edi eax
je r-xdata
mov edi [ ebp + 0x1c ]
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
cmp [ eax + 0x21 ] 0x0
jne r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
mov [ edi ] esi
mov edi [ ebx ]
test edi edi
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx 0x1
cmp [ eax + 0x1c ] ecx
jne r-xdata
mov ecx 0x1
cmp [ eax + 0x1c ] ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
test edi edi
je r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x14 ]
push ecx
push r--data
push esi
push eax
call edx
test eax eax
jne r-xdata
cmp [ eax + 0x18 ] ecx
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x18 ]
push ecx
push r--data
push esi
push eax
call edx
test eax eax
je r-xdata
cmp [ eax + 0x18 ] ecx
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ ebp + 0x20 ]
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov esi [ ebp + 0x1c ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x74 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x14 ]
push ebx
push r--data
push esi
push edi
call ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x18 ]
push ebx
push r--data
push esi
push edi
call ecx
test eax eax
je r-xdata
test edi edi
setne al
mov [ esi ] edi
test al al
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp eax 0x80004002
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp eax 0x80004002
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ edi ]
mov ecx [ edx + 0x14 ]
push eax
push r--data
push esi
push edi
call ecx
test eax eax
je r-xdata
cmp eax 0x80040111
jne r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ edi ]
mov ecx [ edx + 0x18 ]
push eax
push r--data
push esi
push edi
call ecx
test eax eax
je r-xdata
cmp eax 0x80040111
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c920
push ebp
mov ebp esp
push 0xffffffff
push sub_451f68
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push 0x1
push eax
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_41c630
mov esi eax
mov eax [ ebp - 0x10 ]
add esp 0x24
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_41c9b0
push ebp
mov ebp esp
push 0xffffffff
push sub_451fa8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push 0x1
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_41c630
mov esi eax
mov eax [ ebp - 0x10 ]
add esp 0x24
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41ca50
push ebp
mov ebp esp
push 0xffffffff
push sub_451fe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x1c ]
push ebx
push eax
mov eax [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_41c630
mov esi eax
mov eax [ ebp - 0x10 ]
add esp 0x24
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41caf0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_403f20
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov cl [ edi + 0x20 ]
mov [ esi + 0x20 ] cl
mov dl [ edi + 0x21 ]
pop edi
mov [ esi + 0x21 ] dl
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41cb30
push ebp
mov ebp esp
push 0xffffffff
push sub_45200b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
push 0x28
call sub_43c55a
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_403f20
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov cl [ edi + 0x20 ]
mov [ esi + 0x20 ] cl
mov dl [ edi + 0x21 ]
mov [ esi + 0x21 ] dl
jmp r-xdata
mov ecx ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov [ ecx + eax * 4 ] esi
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x1 ]
mov [ ebx + 0x8 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41cbe0
push ebp
mov ebp esp
push 0xffffffff
push sub_452040
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
lea ecx [ ebp + 0x8 ]
push ecx
push esi
call edx
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
cmp [ ebp + 0x8 ] edi
ja r-xdata
push 0x3
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] edi
call sub_403e50
mov [ ebp - 0x24 ] 0x0
xor eax eax
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x1c ] eax
mov edx [ esi ]
mov ecx [ edx + 0x10 ]
lea eax [ ebp - 0x1c ]
push eax
push edi
push ebx
push esi
mov [ ebp - 0x4 ] 0x1
call ecx
mov edi eax
test edi edi
jne r-xdata
xor eax eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_4110c0
mov edx [ ebp - 0x44 ]
push edx
call sub_43c44d
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x1c ] 0x15
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x30 ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
call sub_4110c0
mov edx [ esi ]
mov ecx [ edx + 0x10 ]
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push ebx
push esi
call ecx
mov edi eax
test edi edi
jne r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] al
call sub_4110c0
mov edx [ ebp - 0x44 ]
push edx
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_4110c0
mov eax [ ebp - 0x44 ]
push eax
call sub_43c44d
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ax [ ebp - 0x1c ]
cmp ax 0x8
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
inc ebx
add esp 0x4
cmp ebx [ ebp + 0x8 ]
jb r-xdata
test ax ax
jne r-xdata
mov edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x44 ]
call sub_41c3f0
jmp r-xdata
xor edi edi
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_4110c0
mov ecx [ ebp - 0x44 ]
push ecx
call sub_43c44d
add esp 0x4
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x4
push ebx
push esi
lea edi [ ebp - 0x2c ]
call sub_41c180
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
push 0x5
push ebx
push esi
lea edi [ ebp - 0x28 ]
call sub_41c180
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
push 0x8
push ebx
push esi
lea edi [ ebp - 0x24 ]
call sub_41c250
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_4110c0
mov ecx [ ebp - 0x44 ]
push ecx
call sub_43c44d
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x7
push ebx
push esi
lea edi [ ebp - 0x23 ]
call sub_41c250
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x44 ]
push eax
call sub_41cb30
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_4110c0
mov ecx [ ebp - 0x44 ]
push ecx
sub_41ce60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
mov ecx [ ebp + 0xc ]
cmp dl [ ecx ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ eax + 0x1 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_41ce90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
mov ecx [ ebp + 0xc ]
cmp dl [ ecx ]
jne r-xdata
xor eax eax
xor ecx ecx
test al al
sete al
pop ebp
retn
mov al [ eax + 0x1 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov eax 0x1
xor ecx ecx
test al al
sete al
pop ebp
retn
sub_41ced0
push esi
mov esi ecx
mov al [ esi + 0x41 ]
test al al
je r-xdata
mov eax 0x1
cmp al 0xb
je r-xdata
cmp [ esi + 0x89 ] 0x0
je r-xdata
mov al 0x1
pop esi
retn
xor eax eax
jmp r-xdata
xor al al
pop esi
retn
movzx eax [ esi + 0x41 ]
cmp eax 0xf
ja r-xdata
movzx eax ax
push eax
lea ecx [ esi + 0x20 ]
push ecx
call sub_415c10
add esp 0x8
test al al
je r-xdata
movzx edx [ eax + lookup_table_41cf58 ]
jmp [ edx * 4 + jump_table_41cf48 ]
movzx eax [ esi + 0x46 ]
and eax 0xc00
cmp eax 0x400
je r-xdata
mov eax [ esi + 0x44 ]
shr eax 0x4
and eax 0x1
pop esi
retn
cmp eax 0x800
sete al
pop esi
retn
sub_41cf70
push esi
add ecx 0x20
push 0x1
push ecx
xor esi esi
call sub_415c10
add esp 0x8
test al al
lea eax [ esi + 0x10 ]
jne r-xdata
pop esi
retn
mov eax esi
sub_41cf90
mov al [ ecx + 0x41 ]
push esi
xor esi esi
test al al
je r-xdata
cmp [ ecx + 0x89 ] 0x0
je r-xdata
cmp al 0xb
jne r-xdata
call sub_41ced0
test al al
je r-xdata
mov esi [ ecx + 0x44 ]
mov eax esi
pop esi
retn
or esi 0x10
sub_41cfc0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0xc ]
mov edx 0x1
shl dx cl
mov ecx [ ebp + 0x8 ]
push esi
mov si [ ebp + 0x10 ]
dec dx
shl dx cl
shl si cl
not dx
and dx [ eax + 0x2 ]
or dx si
mov [ eax + 0x2 ] dx
pop esi
pop ebp
retn 0xc
sub_41d000
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
not edx
and [ ecx + 0x2 ] dx
pop ebp
retn 0x8
mov ax [ ebp + 0x8 ]
or [ ecx + 0x2 ] ax
pop ebp
retn 0x8
sub_41d080
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
cmp [ ecx ] 0xa
mov edx [ ecx + 0x8 ]
jne r-xdata
xor al al
pop edi
pop ebp
retn 0x8
cmp edx 0x20
jb r-xdata
mov eax [ ecx + 0xc ]
sub edx 0x4
add eax 0x4
push esi
cmp edx 0x4
jbe r-xdata
pop esi
xor al al
pop edi
pop ebp
retn 0x8
movzx ecx [ eax + 0x2 ]
movzx esi [ eax ]
sub edx 0x4
add eax 0x4
cmp ecx edx
jbe r-xdata
cmp esi 0x1
jne r-xdata
mov ecx edx
sub edx ecx
add eax ecx
cmp edx 0x4
ja r-xdata
cmp ecx 0x18
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ eax + ecx * 8 ]
mov [ edi ] edx
mov eax [ eax + ecx * 8 + 0x4 ]
mov [ edi + 0x4 ] eax
pop esi
mov al 0x1
pop edi
pop ebp
retn 0x8
sub_41d100
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov edx 0x5455
push esi
mov esi [ ecx + 0x8 ]
cmp [ ecx ] dx
jne r-xdata
xor al al
pop esi
pop ebp
retn 0x8
cmp esi 0x5
jb r-xdata
mov eax [ ecx + 0xc ]
mov dl [ eax ]
push edi
mov edi [ ebp + 0x8 ]
inc eax
dec esi
xor ecx ecx
movzx edx dl
push ebx
inc ecx
cmp ecx 0x3
jl r-xdata
cmp esi 0x4
jb r-xdata
mov ebx 0x1
shl ebx cl
test edx ebx
je r-xdata
pop ebx
pop edi
xor al al
pop esi
pop ebp
retn 0x8
cmp edi ecx
je r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
pop ebx
pop edi
mov [ ecx ] eax
mov al 0x1
pop esi
pop ebp
retn 0x8
add eax 0x4
sub esi 0x4
sub_41d170
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edx edx
xor edi edi
cmp [ ebp + 0x14 ] edx
je r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax ] edx
mov eax 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov al [ edi + eax ]
inc edi
cmp al 0x80
jae r-xdata
cmp al 0xc0
jb r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ ecx ] edx
xor eax eax
pop ebx
pop ebp
retn
mov esi 0x1
nop
inc edx
jmp r-xdata
movzx eax al
mov [ ecx + edx * 2 ] ax
movzx ebx [ esi + r--data ]
movzx eax al
sub eax ebx
jmp r-xdata
inc esi
cmp esi 0x5
jl r-xdata
cmp edi [ ebp + 0x14 ]
jne r-xdata
cmp edi [ ebp + 0x14 ]
je r-xdata
cmp al [ esi + r--data ]
jb r-xdata
cmp eax 0x10000
jae r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ edi + ecx ]
inc edi
lea ebx [ ecx + 0x80 ]
cmp bl 0x3f
ja r-xdata
sub eax 0x10000
cmp eax 0x100000
jae r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx ecx cl
add ecx 0xffffff80
shl eax 0x6
or eax ecx
dec esi
jne r-xdata
test ecx ecx
je r-xdata
inc edx
jmp r-xdata
mov [ ecx + edx * 2 ] ax
mov ecx [ ebp + 0x8 ]
add edx 0x2
mov esi eax
shr esi 0xa
sub esi 0x2800
and eax 0x3ff
sub eax 0x2400
mov [ ecx + edx * 2 ] si
mov [ ecx + edx * 2 + 0x2 ] ax
sub_41d270
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
xor edi edi
xor esi esi
test ebx ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] edi
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
movzx edx [ ecx + esi * 2 ]
inc esi
mov [ ebp - 0x4 ] esi
cmp edx 0x80
jae r-xdata
lea eax [ edx - 0xd800 ]
cmp eax 0x7ff
ja r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x1
mov ecx 0xb
lea esp [ esp ]
cmp edx 0xdc00
jae r-xdata
inc edi
jmp r-xdata
mov [ edi + eax ] dl
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
add ecx 0x5
inc eax
cmp ecx 0x1f
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
lea esi [ eax + eax * 2 ]
inc edi
add esi esi
lea ecx [ eax + eax * 2 ]
add ecx ecx
mov ebx edx
shr ebx cl
add bl [ eax + r--data ]
mov [ edi + esi ] bl
mov esi 0x1
shl esi cl
cmp edx esi
jb r-xdata
movzx ecx [ ecx + esi * 2 ]
inc esi
add ecx 0xffff2400
mov [ ebp - 0x4 ] esi
cmp ecx 0x3ff
ja r-xdata
inc edi
test eax eax
jne r-xdata
mov ecx esi
mov ebx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
and bl 0x3f
add bl 0x80
mov [ edi + ecx ] bl
shl eax 0xa
or eax ecx
lea edx [ eax + 0x10000 ]
dec eax
sub esi 0x6
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ebx [ ebp + 0x14 ]
mov esi [ ebp - 0x4 ]
sub_41d390
push esi
mov esi [ ecx ]
xor edx edx
cmp [ esi ] dx
je r-xdata
xor eax eax
mov [ esi + edx * 2 ] ax
mov [ ecx + 0x4 ] edx
pop esi
retn
mov eax esi
lea esp [ esp ]
add eax 0x2
inc edx
cmp [ eax ] 0x0
jne r-xdata
sub_41d3c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
xor eax eax
mov [ esi + 0x4 ] eax
xor edx edx
mov [ ecx ] dx
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
push edi
push ecx
push edx
lea ecx [ ebp + 0xc ]
push ecx
push eax
mov [ ebp + 0xc ] eax
call sub_41d170
mov eax [ ebp + 0xc ]
add esp 0x10
cmp eax [ esi + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov ebx [ ebx ]
mov edi [ esi ]
push eax
push ebx
lea edx [ ebp + 0xc ]
push edx
push edi
call sub_41d170
mov edx [ ebp + 0xc ]
xor ecx ecx
mov [ edi + edx * 2 ] cx
mov edi [ esi ]
add esp 0x10
cmp [ edi ] cx
je r-xdata
push eax
mov ecx esi
call sub_403e50
xor edx edx
mov [ edi + ecx * 2 ] dx
pop edi
mov [ esi + 0x4 ] ecx
test eax eax
pop esi
setne al
pop ebx
pop ebp
retn
mov edx edi
add edx 0x2
inc ecx
cmp [ edx ] 0x0
jne r-xdata
sub_41d450
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
xor eax eax
mov [ esi + 0x4 ] eax
push edi
mov [ ecx ] al
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
push edx
push ecx
lea edx [ ebp + 0xc ]
push edx
push eax
mov [ ebp + 0xc ] eax
call sub_41d270
mov eax [ ebp + 0xc ]
add esp 0x10
cmp eax [ esi + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov ebx [ ebx ]
mov edi [ esi ]
push eax
push ebx
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_41d270
mov ecx [ ebp + 0xc ]
mov [ edi + ecx ] 0x0
mov edx [ esi ]
xor ecx ecx
add esp 0x10
cmp [ edx ] cl
je r-xdata
push eax
mov ecx esi
call sub_4026e0
pop edi
mov [ edx + ecx ] 0x0
mov [ esi + 0x4 ] ecx
test eax eax
pop esi
setne al
pop ebx
pop ebp
retn
mov edi edx
inc ecx
cmp [ edi + ecx ] 0x0
jne r-xdata
sub_41d520
push ebp
mov ebp esp
push 0xffffffff
push sub_452068
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ ebp - 0x1c ] ecx
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov edi eax
test edi edi
je r-xdata
mov ax [ ebp - 0x1c ]
cmp ax 0x40
jne r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4110c0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
test ax ax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4110c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4110c0
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
sub_41d620
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404690
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + ecx ] dl
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
pop esi
pop ebp
retn 0x4
sub_41d6a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_41d6d0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_41d700
push ebp
mov ebp esp
push ebx
mov ebx [ ecx + 0x8 ]
push esi
mov esi ebx
sub esi [ ecx + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
dec esi
cmp edi esi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp ebx 0x40
jle r-xdata
xor eax eax
cmp ebx 0x8
setle al
dec eax
and eax 0xc
add eax 0x4
mov eax ebx
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
add ebx eax
push ebx
call sub_403e50
sub edi esi
mov eax edi
lea edx [ eax + esi ]
cmp edx edi
jge r-xdata
sub_41d750
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx ]
call eax
pop ebp
retn 0x8
sub_41d7a0
mov edx [ ecx + 0x4 ]
xor eax eax
push esi
test edx edx
jle r-xdata
mov al 0x1
pop esi
retn
mov ecx [ ecx ]
lea esp [ esp ]
xor al al
pop esi
retn
inc eax
add ecx 0x2
cmp eax edx
jl r-xdata
movzx esi [ ecx ]
add esi 0xffffffe0
cmp si 0x5f
ja r-xdata
sub_41d7e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4520a3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
mov eax [ esi + 0x14 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_43c44d
add esp 0x8
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_41d850
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
mov ecx edi
sub ecx [ esi + 0x4 ]
dec ecx
cmp ecx 0x1
jge r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov dx [ ebp + 0x8 ]
mov [ ecx + eax * 2 ] dx
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp edi 0x40
jle r-xdata
xor eax eax
cmp edi 0x8
setle al
dec eax
and eax 0xc
add eax 0x4
mov eax edi
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
add edi eax
push edi
mov ecx esi
call sub_403e50
mov eax 0x1
sub eax ecx
lea edx [ eax + ecx ]
cmp edx 0x1
jge r-xdata
sub_41d8e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4520c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_41d940
push ebp
mov ebp esp
push 0xffffffff
push sub_4520f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_41d9b0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push eax
call sub_43c44d
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_41d9e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push ecx
push eax
call sub_421a60
add esp 0x8
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_41da00
push ebp
mov ebp esp
push 0xffffffff
push sub_452133
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x1
mov [ esi ] r--data
lea ecx [ esi + 0x14 ]
push 0x3
mov [ ebp - 0x4 ] ebx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
call sub_403e50
lea ecx [ esi + 0x48 ]
mov [ esi + 0x2c ] bl
mov [ esi + 0x44 ] bl
push 0x3
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
mov [ ecx + 0x8 ] ebx
call sub_4026e0
mov [ esi + 0x54 ] 0x300
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41da90
xor eax eax
push esi
mov esi ecx
lea ecx [ esi + 0x20 ]
mov [ esi + 0x3 ] ax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
push 0x3
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
call sub_4026e0
mov eax esi
pop esi
retn
sub_41dac0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
push esi
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edi edi
add edi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ esi + 0x20 ]
push ecx
call sub_43c44d
push esi
call sub_43c44d
add esp 0x8
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
sub_41db30
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov [ esi ] al
movzx ecx [ edi + 0x1 ]
mov [ esi + 0x1 ] cl
mov dl [ edi + 0x2 ]
mov [ esi + 0x2 ] dl
movzx eax [ edi + 0x3 ]
mov [ esi + 0x3 ] al
movzx ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] cl
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov edx [ edi + 0x24 ]
push edx
lea ecx [ esi + 0x20 ]
call sub_4026e0
mov edx [ edi + 0x20 ]
mov ecx [ esi + 0x20 ]
lea esp [ esp ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x2c ]
mov [ esi + 0x2c ] ecx
mov edx [ edi + 0x30 ]
mov [ esi + 0x30 ] edx
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x38 ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x40 ]
mov [ esi + 0x40 ] eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41dbe0
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
call sub_417120
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xbc ] eax
add ecx 0xfffffff8
mov [ ebp - 0x24 ] eax
call sub_40c010
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x14 ] 0x0
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] ebx
lea esp [ esp ]
push esi
lea ecx [ ebp - 0xc ]
call sub_403e50
mov edx [ ebp - 0xc ]
mov eax edi
sub edx edi
jmp r-xdata
jmp r-xdata
movzx ecx [ eax ]
mov [ eax + edx ] cx
add eax 0x2
test cx cx
jne r-xdata
inc esi
cmp [ edi + esi * 2 ] ax
jne r-xdata
mov edx [ ebp - 0xc ]
mov edi [ CharUpperW@IAT ]
push edx
mov [ ebp - 0x8 ] esi
call edi
test esi esi
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_43c44d
add esp 0x4
pop edi
pop esi
mov eax 0x80070057
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov esi [ ebp - 0xc ]
cmp [ esi ] 0x58
jne r-xdata
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
push ebx
push 0x1
lea ecx [ ebp - 0x84 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] 0x9
call sub_409610
push eax
call sub_421b20
mov edx [ ebp - 0x84 ]
push edx
mov esi eax
call sub_43c44d
add esp 0x10
test esi esi
jne r-xdata
push 0x2
lea ecx [ ebp - 0x54 ]
push ecx
lea ecx [ ebp - 0xc ]
call sub_4121f0
mov edx [ eax ]
push r--data
push edx
call sub_421a60
test eax eax
mov eax [ ebp - 0x54 ]
push eax
sete [ ebp + 0x13 ]
call sub_43c44d
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
je r-xdata
movzx eax [ ebx ]
cmp eax 0x8
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call sub_43c44d
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x90 ] eax
jmp r-xdata
cmp [ esi ] 0x44
jne r-xdata
cmp [ ebx ] 0x8
jne r-xdata
cmp eax 0x13
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
lea ecx [ ebp - 0xfc ]
call sub_405570
mov esi [ ebp - 0xfc ]
push esi
call edi
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_43c44d
mov eax [ ebp - 0x14 ]
inc eax
add ebx 0x10
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ebx
cmp eax [ ebp + 0x14 ]
jl r-xdata
push 0x3
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0xc ]
call sub_4121f0
mov edx [ eax ]
push r--data
push edx
call sub_421a60
test eax eax
mov eax [ ebp - 0x30 ]
push eax
sete [ ebp + 0x13 ]
call sub_43c44d
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
je r-xdata
lea edx [ ebp + 0x10 ]
push edx
push ebx
push 0x1
lea eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] 0xdbba0
call sub_409610
push eax
call sub_421da0
mov ecx [ ebp - 0xe4 ]
push ecx
mov esi eax
call sub_43c44d
add esp 0x10
test esi esi
jne r-xdata
push esi
call sub_43c44d
add esp 0x4
pop edi
pop esi
mov eax 0x80070057
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x10 ]
mov edx [ ecx + 0x8 ]
push edx
lea ecx [ ebp - 0x20 ]
call sub_405570
mov esi [ ebp - 0x20 ]
push esi
call [ CharUpperW@IAT ]
push 0x3
lea eax [ ebp - 0xb4 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_4121f0
mov ecx [ eax ]
push r--data
push ecx
call sub_421a60
mov edx [ ebp - 0xb4 ]
test eax eax
push edx
sete bl
call sub_43c44d
add esp 0xc
test bl bl
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0xe
ja r-xdata
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
mov [ ecx + 0x94 ] eax
call sub_43c44d
add esp 0x4
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
mov edi [ eax + ecx * 4 ]
xor eax eax
xor esi esi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ edi ] ax
je r-xdata
cmp [ esi ] 0x4f
jne r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
push ebx
push 0x3
lea edx [ ebp - 0xcc ]
push edx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] 0x1000000
call sub_409610
push eax
call sub_421da0
mov esi eax
mov eax [ ebp - 0xcc ]
push eax
call sub_43c44d
add esp 0x10
test esi esi
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_43c44d
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x98 ] edx
jmp r-xdata
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
jne r-xdata
push 0x3
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_409610
push eax
lea ecx [ ebp - 0x20 ]
call sub_4082d0
mov ecx [ ebp - 0x6c ]
push ecx
call sub_43c44d
mov esi [ ebp - 0x20 ]
push r--data
push esi
call sub_421a60
add esp 0xc
test eax eax
jne r-xdata
movzx ecx [ eax + lookup_table_41e568 ]
jmp [ ecx * 4 + jump_table_41e560 ]
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push esi
mov [ edx + 0x94 ] 0x8
call sub_43c44d
add esp 0x4
jmp r-xdata
push 0x4
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0xc ]
call sub_4121f0
mov eax [ eax ]
push r--data
push eax
call sub_421a60
mov ecx [ ebp - 0x3c ]
test eax eax
push ecx
sete [ ebp + 0x13 ]
call sub_43c44d
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
push ebx
push 0x1
lea ecx [ ebp - 0x9c ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] 0x8
call sub_409610
push eax
call sub_421b20
mov edx [ ebp - 0x9c ]
push edx
mov esi eax
call sub_43c44d
add esp 0x10
test esi esi
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_43c44d
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0xac ] ecx
jmp r-xdata
push esi
call sub_43c44d
mov ecx [ ebp - 0xc ]
push ecx
call sub_43c44d
add esp 0x8
pop edi
pop esi
mov eax 0x80070057
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
push esi
mov [ eax + 0xb5 ] 0x1
call sub_43c44d
mov ebx [ ebp - 0x10 ]
add esp 0x4
jmp r-xdata
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov [ eax + 0xb7 ] 0x1
mov [ eax + 0xb5 ] 0x101
call sub_43c44d
mov ebx [ ebp - 0x10 ]
add esp 0x4
jmp r-xdata
movzx edx al
mov eax [ ebp + 0x8 ]
mov [ eax + 0x94 ] edx
jmp r-xdata
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov [ eax + 0x94 ] 0x9
call sub_43c44d
add esp 0x4
jmp r-xdata
push r--data
push 0x2
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebp - 0xc ]
call sub_4121f0
push eax
call sub_4121d0
mov edx [ ebp - 0x60 ]
push edx
mov [ ebp + 0x13 ] al
call sub_43c44d
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
je r-xdata
lea edx [ ebp + 0x10 ]
push edx
push ebx
push 0x4
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] 0xa
call sub_409610
push eax
call sub_421b20
mov ecx [ ebp - 0x48 ]
push ecx
mov esi eax
call sub_43c44d
add esp 0x10
test esi esi
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb0 ] eax
jmp r-xdata
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov [ eax + 0xb7 ] 0x2
mov [ eax + 0xb5 ] 0x101
call sub_43c44d
mov ebx [ ebp - 0x10 ]
add esp 0x4
jmp r-xdata
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
mov [ ecx + 0x94 ] 0xc
call sub_43c44d
add esp 0x4
jmp r-xdata
push r--data
push 0x2
lea edx [ ebp - 0x90 ]
push edx
lea ecx [ ebp - 0xc ]
call sub_4121f0
push eax
call sub_4121d0
mov [ ebp + 0x13 ] al
mov eax [ ebp - 0x90 ]
push eax
call sub_43c44d
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
push ebx
push 0x2
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] 0x80
call sub_409610
push eax
call sub_421b20
mov edx [ ebp - 0x78 ]
push edx
mov esi eax
call sub_43c44d
add esp 0x10
test esi esi
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov [ eax + 0xb7 ] 0x3
mov [ eax + 0xb5 ] 0x101
call sub_43c44d
mov ebx [ ebp - 0x10 ]
add esp 0x4
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push r--data
push esi
call sub_421a60
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push esi
mov [ edx + 0x94 ] 0xe
call sub_43c44d
add esp 0x4
jmp r-xdata
push r--data
push 0x2
lea edx [ ebp - 0xc0 ]
push edx
lea ecx [ ebp - 0xc ]
call sub_4121f0
push eax
call sub_4121d0
mov [ ebp + 0x13 ] al
mov eax [ ebp - 0xc0 ]
push eax
call sub_43c44d
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
je r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
push ebx
push 0x2
lea edx [ ebp - 0xa8 ]
push edx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] 0xffffffff
call sub_409610
push eax
call sub_421b20
mov esi eax
mov eax [ ebp - 0xa8 ]
push eax
call sub_43c44d
add esp 0x10
test esi esi
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xa4 ] eax
jmp r-xdata
push esi
call sub_43c44d
mov eax [ ebp - 0xc ]
push eax
call sub_43c44d
add esp 0x8
pop edi
pop esi
mov eax 0x80070057
pop ebx
mov esp ebp
pop ebp
retn 0x10
push esi
call sub_43c44d
mov edx [ ebp - 0xc ]
push edx
call sub_43c44d
add esp 0x8
pop edi
pop esi
mov eax 0x80070057
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
push esi
mov [ eax + 0x94 ] 0x62
call sub_43c44d
add esp 0x4
jmp r-xdata
push r--data
push 0x1
lea ecx [ ebp - 0xf0 ]
push ecx
lea ecx [ ebp - 0xc ]
call sub_4121f0
push eax
call sub_4121d0
mov edx [ ebp - 0xf0 ]
push edx
mov [ ebp + 0x13 ] al
call sub_43c44d
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
add eax 0xbc
push eax
push ecx
push ebx
push 0x2
lea edx [ ebp - 0xd8 ]
push edx
lea ecx [ ebp - 0xc ]
call sub_409610
push eax
call sub_421f60
mov esi eax
mov eax [ ebp - 0xd8 ]
push eax
call sub_43c44d
add esp 0x14
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0xa8 ] ecx
mov [ eax + 0xb4 ] 0x1
jmp r-xdata
push r--data
push esi
call sub_421ab0
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
push ebx
push 0x1
lea ecx [ ebp - 0x108 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] 0x1
call sub_409610
push eax
call sub_421b20
mov edx [ ebp - 0x108 ]
push edx
mov esi eax
call sub_43c44d
add esp 0x10
test esi esi
jne r-xdata
push r--data
push esi
call sub_421ab0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
add edx 0xb8
push ebx
push edx
call sub_421e80
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x9c ] eax
jmp r-xdata
push r--data
push esi
call sub_421ab0
add esp 0x8
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
add esi 0xb9
push ebx
push esi
call sub_421e80
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov esi [ ebp + 0x8 ]
add esi 0xba
push ebx
push esi
call sub_421e80
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_43c44d
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi ] al
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call sub_43c44d
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi ] al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0xba ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb9 ] al
sub_41e580
push ebp
mov ebp esp
push 0xffffffff
push sub_45215b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x48
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ eax + edx * 4 ] edi
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_41db30
mov edi eax
sub_41e600
push ebp
mov ebp esp
push 0xffffffff
push sub_4522f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x168
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor esi esi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] 0x4
mov [ ebp - 0x34 ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x4 ] 0x14
mov [ ebp + 0x10 ] edi
cmp edi esi
je r-xdata
xor eax eax
push 0x4
mov [ ebp - 0xe5 ] 0x0
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xcc ] eax
lea esi [ ebp - 0xc8 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xc0 ] eax
call sub_43c55a
add esp 0x4
cmp [ ebp - 0xc0 ] 0x0
mov edi eax
jle r-xdata
mov edx [ edi ]
mov ecx [ edx ]
lea eax [ ebp - 0x40 ]
push eax
push r--data
push edi
mov [ ebp - 0x4 ] 0x15
call ecx
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0x14
call eax
mov [ ebp - 0x9c ] esi
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x94 ] esi
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0xa0 ] r--data
push 0x3
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x16
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x84 ] esi
call sub_403e50
xor eax eax
lea ebx [ eax + 0x4 ]
push ebx
mov [ ebp - 0x4 ] 0x17
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x5c ] 0x0
lea esi [ ebp - 0x58 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
call sub_43c55a
add esp 0x4
cmp [ ebp - 0x50 ] 0x0
mov edi eax
jle r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov eax [ esi + 0x4 ]
mov [ esi ] edi
mov [ edi + eax ] 0x0
mov eax 0x4
mov [ esi + 0x8 ] eax
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x2
jne r-xdata
xor eax eax
lea esp [ esp ]
mov eax [ esi + 0x4 ]
mov [ esi ] edi
mov [ edi + eax ] 0x0
mov [ esi + 0x8 ] ebx
mov [ ebp - 0x4c ] 0x300
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x18
test eax eax
je r-xdata
xor eax eax
mov edi edi
mov eax [ ebp + 0x14 ]
mov edx [ eax ]
mov edx [ edx + 0x14 ]
lea ecx [ ebp - 0x48 ]
push ecx
lea ecx [ ebp - 0x130 ]
push ecx
lea ecx [ ebp - 0xec ]
push ecx
push ebx
push eax
call edx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0xc8 ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x3
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov eax 0x80004005
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi ]
push eax
call sub_43c44d
add esp 0x4
mov ecx [ esi ]
mov dl [ eax + ecx ]
mov [ eax + edi ] dl
inc eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x5c ] 0x0
mov [ ebp + 0x10 ] 0x0
mov ecx [ eax ]
lea edx [ ebp + 0x10 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x4 ] 0x19
call eax
mov esi eax
xor ebx ebx
cmp esi ebx
je r-xdata
mov eax [ esi ]
push eax
call sub_43c44d
add esp 0x4
mov ecx [ esi ]
mov dl [ eax + ecx ]
mov [ eax + edi ] dl
inc eax
jmp r-xdata
mov esi [ ebp - 0x130 ]
mov edx [ ebp - 0xec ]
test esi esi
setne cl
test edx edx
setne al
mov [ ebp - 0xe8 ] al
mov eax [ ebp - 0x48 ]
cmp eax 0xffffffff
mov [ ebp - 0xe7 ] cl
setne cl
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xdc ] ebx
test cl cl
je r-xdata
mov eax [ ebp - 0xc8 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x4
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax [ esi + 0x4 ]
jge r-xdata
cmp [ edi + 0x98 ] 0x0
jge r-xdata
mov esi 0x5
cmp [ ebp - 0x48 ] ebx
mov edi [ ebp + 0x8 ]
setne al
mov [ ebp - 0x5c ] al
test al al
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
call [ SysFreeString@IAT ]
mov edx [ ebp - 0x58 ]
push edx
mov [ ebp - 0x4 ] 0x1b
call sub_43c44d
mov eax [ ebp - 0x8c ]
add esp 0x4
push eax
mov [ ebp - 0x4 ] 0x1a
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x14
call sub_404780
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
cmp eax [ esi + 0x4 ]
jge r-xdata
test esi esi
je r-xdata
test edx edx
je r-xdata
mov bl [ edi + 0x98 ]
mov ebx esi
neg ebx
sbb bl bl
and bl 0x8
jmp r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov [ ebp - 0x4 ] 0x18
call [ SysFreeString@IAT ]
jmp r-xdata
cmp [ edi + 0xb9 ] bl
je r-xdata
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x1c
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test edx edx
je r-xdata
xor eax eax
push 0x3
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
call sub_403e50
xor edx edx
mov [ ebp - 0x12c ] edx
mov edi [ ebp + 0x14 ]
mov ebx [ ebp - 0x3c ]
mov ecx [ edi ]
mov eax [ ecx + 0x18 ]
lea edx [ ebp - 0x12c ]
push edx
push 0x9
push ebx
push edi
mov [ ebp - 0x4 ] 0x6
call eax
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x1c ]
mov eax [ ecx + eax * 4 ]
test [ eax + 0x2 ] 0x1
je r-xdata
cmp bl 0x8
je r-xdata
lea ecx [ ebp - 0xa0 ]
call sub_404690
mov edx [ ebp - 0x98 ]
mov eax [ ebp - 0x94 ]
mov [ eax + edx ] 0x0
inc [ ebp - 0x98 ]
lea ecx [ ebp - 0xa0 ]
call sub_404690
mov eax [ ebp - 0x98 ]
mov ecx [ ebp - 0x94 ]
mov [ ecx + eax ] bl
inc [ ebp - 0x98 ]
test bl bl
je r-xdata
mov esi [ edi + 0x94 ]
test esi esi
jns r-xdata
mov cl [ ebp - 0x1d ]
mov [ ebp - 0x4c ] cl
mov al [ edi + 0xba ]
mov [ ebp - 0x4c ] al
jmp r-xdata
push 0x48
call sub_43c55a
mov ecx eax
add esp 0x4
mov [ ebp - 0x15c ] ecx
mov [ ebp - 0x4 ] 0x13
test ecx ecx
je r-xdata
xor eax eax
mov [ ebp - 0xfc ] eax
mov eax [ ebp + 0x14 ]
mov edx [ eax ]
mov edx [ edx + 0x18 ]
lea ecx [ ebp - 0xfc ]
push ecx
mov ecx [ ebp - 0x3c ]
push 0x7
push ecx
push eax
mov [ ebp - 0x4 ] 0x10
call edx
mov esi eax
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xfc ]
test esi esi
je r-xdata
mov ax [ ebp - 0x12c ]
test ax ax
jne r-xdata
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
mov ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov edx [ ebp - 0xc8 ]
add esp 0x4
push edx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x7
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test [ eax + 0x2 ] 0x40
jne r-xdata
mov cl 0x1
cmp bl 0x9
je r-xdata
push ebx
lea ecx [ ebp - 0x1c ]
call sub_403e50
mov edx esi
mov esi [ ebp - 0x1c ]
mov ecx esi
lea ebx [ ebx ]
inc ebx
jmp r-xdata
mov dl [ edi + 0xbb ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4b ] dl
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
lea esp [ esp ]
xor esi esi
lea edx [ ebp - 0xe8 ]
push edx
call sub_41db30
mov esi eax
jmp r-xdata
cmp [ ebp - 0xfc ] 0x15
je r-xdata
call sub_4110c0
mov eax [ ebp - 0xc8 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x11
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp ax 0x13
je r-xdata
mov [ ebp - 0xd8 ] 0x0
jmp r-xdata
mov [ ebp - 0x1d ] 0x1
cmp [ eax + 0x4 ] 0x63
jne r-xdata
mov al 0x1
test cl cl
je r-xdata
xor cl cl
jmp r-xdata
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
xor eax eax
cmp [ esi + ebx * 2 ] 0x0
je r-xdata
mov edi [ ebp + 0x14 ]
cmp ebx [ ebp + 0x10 ]
jae r-xdata
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x2
call sub_404690
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x28 ]
mov [ ecx + eax * 4 ] esi
mov edx [ ebp - 0xc8 ]
mov esi 0x1
add [ ebp - 0x2c ] esi
push edx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add [ ebp - 0x3c ] esi
mov ebx [ ebp - 0x3c ]
add esp 0x4
xor esi esi
jmp r-xdata
mov esi [ ebp - 0xf4 ]
mov edi [ ebp - 0xf0 ]
call sub_4110c0
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xcc ] edi
call sub_4110c0
mov ecx [ ebp - 0xc8 ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x12
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
jmp r-xdata
mov edx [ ebp - 0x124 ]
mov [ ebp - 0xd8 ] edx
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
mov eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov ecx [ ebp - 0xc8 ]
add esp 0x4
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x8
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
xor eax eax
mov [ ebp - 0x10c ] eax
mov edx [ edi ]
mov ecx [ edx + 0x18 ]
lea eax [ ebp - 0x10c ]
push eax
push 0x3
push ebx
push edi
mov [ ebp - 0x4 ] 0x9
call ecx
mov esi eax
test esi esi
je r-xdata
cmp bl 0xc
jne r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edx [ edi + 0x9c ]
mov ecx [ edi + 0xa4 ]
mov [ ebp - 0x6c ] edx
mov edx [ edi + 0xa8 ]
mov [ ebp - 0x78 ] edx
mov edx [ edi + 0xac ]
mov [ ebp - 0x70 ] edx
mov dl [ edi + 0xb8 ]
mov [ ebp - 0x74 ] dl
mov edx [ edi + 0xa0 ]
mov [ ebp - 0x80 ] edx
mov edx [ edi + 0xb0 ]
mov [ ebp - 0x68 ] edx
mov edx [ edi + 0xb4 ]
mov [ ebp - 0x64 ] edx
mov edx [ edi + 0xc0 ]
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x60 ] edx
test al al
je r-xdata
cmp bl 0xe
sete al
mov [ ebp + 0xb ] cl
mov [ ebp + 0x13 ] al
test al al
jne r-xdata
mov al 0x1
movzx ecx [ esi + eax * 2 ]
add ecx 0xffffffe0
cmp cx 0x5f
ja r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ax [ ebp - 0x10c ]
test ax ax
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
mov edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov eax [ ebp - 0xc8 ]
add esp 0x4
push eax
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0xa
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp bl 0x62
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
je r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0x58 ]
push ecx
mov [ ebp - 0x4 ] 0x1e
call sub_43c44d
mov edx [ ebp - 0x8c ]
add esp 0x4
push edx
mov [ ebp - 0x4 ] 0x1d
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x14
call sub_404780
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor al al
jmp r-xdata
inc eax
jmp r-xdata
cmp ax 0x8
je r-xdata
mov edx [ ebp - 0x1c ]
xor ecx ecx
mov [ ebp - 0x18 ] 0x0
mov [ edx ] cx
jmp r-xdata
mov eax [ edi + 0x24 ]
mov edx [ ebp + 0x14 ]
push edx
lea ecx [ edi + 0x24 ]
neg eax
sbb eax eax
and eax ecx
mov ecx [ edi + 0xc4 ]
lea edx [ ebp - 0xa0 ]
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x34 ]
push edx
lea eax [ edi + 0x10 ]
push eax
add edi 0xc8
push edi
push ecx
call sub_42e810
add esp 0x20
mov esi eax
mov ecx [ ebp - 0x58 ]
push ecx
mov [ ebp - 0x4 ] 0x24
call sub_43c44d
mov edx [ ebp - 0x8c ]
add esp 0x4
push edx
mov [ ebp - 0x4 ] 0x23
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x14
call sub_404780
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov eax esi
cmp esi 0x1
jge r-xdata
cmp [ ebp - 0x6c ] 0xffffffff
jne r-xdata
cmp esi 0x9
jl r-xdata
cmp [ ebp - 0x80 ] 0xffffffff
jne r-xdata
or eax 0xffffffff
cmp [ ebp - 0x6c ] eax
jne r-xdata
cmp [ ebp - 0x78 ] 0xffffffff
jne r-xdata
cmp esi 0x9
jl r-xdata
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_405570
push 0x1
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x154 ]
mov bl 0x21
push edx
mov [ ebp - 0x4 ] bl
call sub_410870
add esp 0xc
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x22
call sub_4083b0
mov eax [ ebp - 0x154 ]
push eax
mov [ ebp - 0x4 ] bl
call sub_43c44d
mov ecx [ ebp - 0x1c ]
add esp 0x4
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_43c44d
add esp 0x4
cmp [ ebp - 0x54 ] 0x63
jbe r-xdata
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x1f
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test al al
push esi
sete bl
call sub_43c44d
add esp 0x4
test bl bl
je r-xdata
cmp eax ebx
jge r-xdata
mov edx [ ebp - 0x104 ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_41c3f0
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
xor eax eax
mov [ ebp - 0x11c ] eax
mov edx [ edi ]
mov ecx [ edx + 0x18 ]
lea eax [ ebp - 0x11c ]
push eax
push 0x6
push ebx
push edi
mov [ ebp - 0x4 ] 0xb
call ecx
mov esi eax
test esi esi
je r-xdata
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x25
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi 0x9
jle r-xdata
mov eax 0x1
jmp r-xdata
cmp esi 0x5
jl r-xdata
xor ecx ecx
cmp esi 0x7
setge cl
inc ecx
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x7c ] 0x7
jmp r-xdata
xor eax eax
cmp esi 0x5
setge al
mov [ ebp - 0x80 ] eax
cmp [ ebp - 0x78 ] eax
jne r-xdata
cmp esi 0x9
jl r-xdata
cmp esi 0x9
jl r-xdata
xor ecx ecx
cmp esi 0x7
setge cl
lea ecx [ ecx + ecx + 0x1 ]
mov ecx 0xa
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
call [ SysFreeString@IAT ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x14
call sub_41d7e0
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ax [ ebp - 0x11c ]
test ax ax
jne r-xdata
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
or edx 0xffffffff
cmp [ ebp - 0x68 ] edx
jne r-xdata
mov eax 0x9
xor edx edx
cmp esi 0x3
setl dl
dec edx
and edx 0x61a80
add edx 0x186a0
mov [ ebp - 0x6c ] edx
jmp r-xdata
mov [ ebp - 0x6c ] 0xdbba0
jmp r-xdata
mov eax [ rwxdata ]
cmp esi 0x5
jge r-xdata
xor edx edx
cmp esi 0x7
setl dl
dec edx
and edx 0x20
add edx 0x20
mov [ ebp - 0x78 ] edx
cmp esi 0x7
jl r-xdata
mov [ ebp - 0x6c ] 0x4000000
jmp r-xdata
xor eax eax
cmp esi 0x7
setl al
dec eax
and eax 0x20
add eax 0x20
mov [ ebp - 0x78 ] eax
jmp r-xdata
mov [ ebp - 0x78 ] 0x80
jmp r-xdata
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x34 ] r--data
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x20
call sub_404680
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp ax 0xb
je r-xdata
mov [ ebp - 0xe6 ] al
jmp r-xdata
cmp [ ebp - 0x64 ] edx
jne r-xdata
lea ecx [ edx + 0x9 ]
cmp eax 0x8
jg r-xdata
push eax
lea ecx [ ebp - 0x8c ]
call sub_41c3f0
mov ecx [ ebp - 0x7c ]
mov eax [ rwxdata ]
cmp esi 0x5
jl r-xdata
mov [ ebp - 0x6c ] 0x2000000
jmp r-xdata
cmp [ ebp - 0x114 ] 0x0
setne al
mov [ ebp - 0xe6 ] al
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
xor ecx ecx
mov [ ebp - 0x148 ] ecx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
lea ecx [ ebp - 0x148 ]
push ecx
push 0x28
push ebx
push edi
mov [ ebp - 0x4 ] 0xc
call edx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x80 ] edx
jne r-xdata
lea ecx [ eax + 0x3 ]
mov [ ebp - 0x64 ] ecx
add ecx 0x13
mov esi 0x1
shl esi cl
mov [ ebp - 0x68 ] esi
mov ecx eax
xor ecx ecx
cmp esi 0x3
setl cl
dec ecx
and ecx 0xf0000
add ecx 0x10000
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x6c ] 0x1000000
jmp r-xdata
cmp [ ebp - 0x148 ] 0x13
jne r-xdata
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
xor edx edx
cmp eax 0x7
setge dl
mov [ ebp - 0x80 ] edx
mov eax [ ebp + 0x8 ]
mov cl [ eax + 0xbc ]
mov [ ebp - 0xe5 ] cl
cmp [ ebp - 0x140 ] 0x0
sete dl
mov [ ebp - 0xe5 ] dl
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov eax [ ebp - 0xc8 ]
add esp 0x4
push eax
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_41d8e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0xb
push ebx
push edi
lea esi [ ebp - 0xb4 ]
call sub_41d520
mov esi eax
add esp 0xc
test esi esi
je r-xdata
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x5
call sub_4110c0
push 0xc
push ebx
push edi
lea esi [ ebp - 0xbc ]
call sub_41d520
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push 0xa
push ebx
push edi
lea esi [ ebp - 0xac ]
call sub_41d520
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
jne r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov edx [ ebp - 0xc8 ]
add esp 0x4
push edx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_41d8e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov ecx [ ebp - 0xc8 ]
add esp 0x4
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_41d8e0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x138 ] edi
mov [ ebp - 0x134 ] edi
cmp [ ebp - 0xb8 ] edi
jne r-xdata
lea edx [ ebp - 0x138 ]
push edx
lea eax [ ebp - 0xbc ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0xbc ] edi
je r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
call sub_414a40
add esp 0x8
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x168 ]
push eax
call sub_415d40
add esp 0x8
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xd
call sub_4082d0
mov ecx [ ebp - 0x168 ]
push ecx
mov [ ebp - 0x4 ] 0x5
call sub_43c44d
mov ecx [ ebp - 0x18 ]
add esp 0x4
cmp ecx edi
je r-xdata
cmp [ ebp - 0xe6 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + ecx * 2 - 0x2 ] 0x2f
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0xbd ] 0x0
jne r-xdata
push 0x2f
lea ecx [ ebp - 0x1c ]
call sub_41d850
mov ecx [ ebp - 0x18 ]
cmp [ ebp - 0xe6 ] 0x0
jne r-xdata
lea eax [ ebp - 0x35 ]
push eax
push 0x5f
push 0x1
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x174 ]
push edx
call sub_4107a0
add esp 0x14
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0xe
call sub_4083b0
mov eax [ ebp - 0x174 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_43c44d
add esp 0x4
cmp [ esi + 0xbd ] 0x0
jne r-xdata
cmp [ esi + 0xbe ] 0x0
jne r-xdata
push eax
jmp r-xdata
xor bl bl
cmp [ ebp - 0x35 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
xor eax eax
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov edx [ ebp - 0xc8 ]
add esp 0x4
push edx
test bl bl
je r-xdata
mov edx [ ebp - 0x154 ]
and [ ebp - 0x44 ] 0xfffffffe
push edx
call sub_43c44d
add esp 0x4
mov bl 0x1
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc8 ]
push ecx
lea edx [ ebp - 0x154 ]
push edx
call sub_4106e0
add esp 0xc
or [ ebp - 0x44 ] 0x1
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov [ ebp - 0x4 ] 0xf
call sub_41d9e0
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0xc8 ]
push ecx
lea edx [ ebp - 0x1c ]
setne al
push edx
mov [ ebp - 0xe4 ] al
call sub_41d450
add esp 0x8
test al al
je r-xdata
mov esi 0x80
cmp [ edx + eax * 2 ] si
jae r-xdata
cmp [ ebp - 0xc4 ] 0x10000
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x2
push edx
jl r-xdata
mov ecx [ ebp - 0x18 ]
test [ ebp - 0x44 ] 0x1
mov [ ebp - 0x4 ] 0x5
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_43c44d
mov ecx [ ebp - 0xc8 ]
add esp 0x4
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_41d8e0
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax ecx
inc eax
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0xdc ] ecx
call sub_43c44d
mov edx [ ebp - 0xec ]
add esp 0x4
call sub_43c44d
mov eax [ ebp - 0xc8 ]
add esp 0x4
push eax
jmp r-xdata
cmp eax ecx
jge r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
call sub_41d8e0
sub_41f710
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x48 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ ebp + 0x8 ]
push edi
push eax
push ecx
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x50 ]
sub ecx [ esi + 0x58 ]
mov eax [ esi + 0x54 ]
sbb eax [ esi + 0x5c ]
xor edx edx
cmp edx eax
jb r-xdata
pop edi
pop esi
pop ebp
retn 0x8
add [ esi + 0x58 ] edi
adc [ esi + 0x5c ] eax
ja r-xdata
mov edi ecx
cmp edi ecx
jbe r-xdata
sub_41f850
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx ]
call eax
pop ebp
retn 0x8
sub_41f8d0
push ebp
mov ebp esp
push 0xffffffff
push sub_45236d
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x1c ] r--data
mov [ esi + 0x20 ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] r--data
mov eax [ esi + 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_410630
mov eax [ esi + 0x74 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x6c ]
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x68 ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x64 ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x60 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x38 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ esi + 0x34 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_41fb40
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0xc ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x10 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x60 ] 0x0
lea ecx [ esi + 0x60 ]
jne r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x14 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x64 ] 0x0
lea ecx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ esi + 0x18 ]
mov [ edx ] ecx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0x74 ]
mov edx [ eax ]
push ecx
push r--data
push eax
mov eax [ edx ]
call eax
test eax eax
jne r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x68 ] 0x0
lea ecx [ esi + 0x68 ]
jne r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ esi + 0x1c ]
mov [ edx ] ecx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0x74 ]
mov edx [ eax ]
push ecx
push r--data
push eax
mov eax [ edx ]
call eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x6c ] 0x0
lea ecx [ esi + 0x6c ]
jne r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ esi + 0x20 ]
mov [ edx ] ecx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0x74 ]
mov edx [ eax ]
push ecx
push r--data
push eax
mov eax [ edx ]
call eax
test eax eax
jne r-xdata
mov eax 0x80004002
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x70 ] 0x0
lea ecx [ esi + 0x70 ]
jne r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ esi + 0x24 ]
mov [ edx ] ecx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0x74 ]
mov edx [ eax ]
push ecx
push r--data
push eax
mov eax [ edx ]
call eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ esi + 0x28 ]
mov [ edx ] ecx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0x74 ]
mov edx [ eax ]
push ecx
push r--data
push eax
mov eax [ edx ]
call eax
test eax eax
jne r-xdata
sub_41fe20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
push edi
lea ebx [ esi + 0x58 ]
xor edi edi
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ esi + 0x48 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push eax
mov [ ebp + 0x8 ] ebx
call edx
cmp eax edi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x18 ]
test ecx ecx
setne al
mov [ esi + 0x48 ] al
test al al
je r-xdata
cmp [ esi + 0x48 ] 0x0
je r-xdata
mov eax [ ecx ]
mov [ esi + 0x50 ] eax
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x54 ] ecx
mov eax [ esi + 0x30 ]
mov ecx 0x20000
sub ecx edi
lea edx [ ebp - 0x4 ]
push edx
add eax edi
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
push eax
push ecx
call sub_411ee0
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ esi + 0x54 ]
ja r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ esi + 0x74 ]
mov edx [ esi + 0x30 ]
mov ecx [ eax ]
add ebx edi
push ebx
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov edi eax
cmp edi ebx
jbe r-xdata
xor eax eax
jb r-xdata
test edi edi
je r-xdata
lea ebx [ ebx ]
mov eax [ ebx ]
cmp eax [ esi + 0x50 ]
jae r-xdata
test ebx ebx
je r-xdata
cmp [ esi + 0x48 ] 0x0
mov [ ebp + 0x18 ] edi
je r-xdata
mov ecx [ esi + 0x30 ]
mov [ ebx + ecx ] 0x0
inc ebx
cmp ebx edi
jb r-xdata
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x30 ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push ebx
push ecx
push eax
call edx
mov edi eax
cmp [ esi + 0x48 ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp + 0x18 ] ebx
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ esi + 0x30 ]
mov edx [ ebp + 0x10 ]
push eax
push ecx
push edx
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x50 ]
sub ecx [ edx ]
mov eax [ esi + 0x54 ]
sbb eax [ edx + 0x4 ]
xor edx edx
cmp edx eax
jb r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ esi + 0x30 ]
mov edx [ ebp + 0x10 ]
push eax
push ecx
push edx
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x50 ]
sub ecx [ edi ]
mov eax [ esi + 0x54 ]
sbb eax [ edi + 0x4 ]
xor edx edx
cmp edx eax
jb r-xdata
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x8 ]
add [ eax ] ecx
mov ecx [ ebp + 0x1c ]
adc [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
ja r-xdata
mov eax [ ebp + 0x18 ]
add [ edi ] eax
adc [ edi + 0x4 ] 0x0
ja r-xdata
xor ecx ecx
cmp edi ebx
jae r-xdata
mov edx [ ecx ]
push eax
push eax
mov eax [ edx + 0xc ]
push ecx
call eax
test eax eax
jne r-xdata
mov [ ebp + 0x18 ] ecx
cmp edi ecx
jbe r-xdata
mov [ ebp + 0x18 ] ecx
cmp ebx ecx
jbe r-xdata
mov ebx [ ebp + 0x8 ]
mov edi ecx
jmp r-xdata
nop
mov eax [ esi + 0x30 ]
mov dl [ eax + edi ]
mov [ eax + ecx ] dl
inc edi
inc ecx
cmp edi ebx
jb r-xdata
sub_41ffd0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ esi + 0x30 ] ebx
cmp edi ebx
je r-xdata
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x2c ] edi
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x3c ] bl
mov esi [ esi + 0x68 ]
mov ecx [ esi ]
mov edx [ ecx + 0xc ]
push esi
call edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_420020
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] 0x0
sub_420050
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov [ eax ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x20 ]
push ebx
push ecx
add edx eax
push edx
call sub_43bd20
mov eax [ ebp + 0x14 ]
sub edi ebx
add esp 0xc
mov [ ebp + 0x10 ] edi
test eax eax
je r-xdata
mov ebx edi
mov edi [ esi + 0x2c ]
mov eax [ esi + 0x64 ]
mov edx [ esi + 0x20 ]
mov ecx [ eax ]
add [ ebp + 0xc ] ebx
add edi ebx
push edi
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov [ esi + 0x2c ] eax
test eax eax
je r-xdata
add [ eax ] ebx
mov [ esi + 0x2c ] edi
cmp eax edi
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x38 ] 0x0
mov ebx eax
je r-xdata
pop edi
pop esi
mov eax 0x80004005
pop ebx
pop ebp
retn 0x10
mov ecx [ esi + 0x20 ]
mov eax [ esi + 0x28 ]
push ebx
push ecx
push eax
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x40 ]
sub ecx [ esi + 0x48 ]
mov eax [ esi + 0x44 ]
sbb eax [ esi + 0x4c ]
xor edx edx
cmp edx eax
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
add [ esi + 0x48 ] ebx
adc [ esi + 0x4c ] eax
xor ecx ecx
cmp [ esi + 0x2c ] edi
jae r-xdata
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ esi + 0x2c ] ecx
jbe r-xdata
lea esp [ esp ]
mov ebx ecx
cmp ebx ecx
jbe r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0x2c ]
mov eax [ esi + 0x20 ]
mov dl [ eax + edx ]
mov [ eax + ecx ] dl
inc [ esi + 0x2c ]
inc ecx
cmp [ esi + 0x2c ] edi
jb r-xdata
mov eax [ esi + 0x2c ]
mov ebx 0x20000
sub ebx eax
cmp edi ebx
jae r-xdata
sub_420160
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x28 ]
push edi
test ecx ecx
je r-xdata
mov esi [ esi + 0x24 ]
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x0
mov edx [ esi ]
mov ecx [ edx ]
push r--data
push esi
call ecx
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x60 ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push ecx
mov ecx [ esi + 0x1c ]
push ecx
push eax
call edx
mov edi eax
mov eax [ esi + 0x28 ]
cmp eax edi
jae r-xdata
xor eax eax
mov edx [ eax ]
push eax
mov eax [ edx + 0xc ]
call eax
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp [ esi + 0x34 ] 0x0
mov edi [ esi + 0x28 ]
push ebx
mov ebx [ esi + 0x24 ]
je r-xdata
mov eax 0x1
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ esi + 0x1c ]
push edi
push ecx
push ebx
call sub_411fb0
add esp 0xc
xor ecx ecx
pop ebx
cmp eax ecx
jne r-xdata
mov ecx [ esi + 0x3c ]
sub ecx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
sbb eax [ esi + 0x48 ]
xor edx edx
cmp edx eax
jb r-xdata
mov edx [ esi + 0x28 ]
mov ecx [ esi + 0x1c ]
mov [ ecx + edx ] 0x0
add [ esi + 0x28 ] eax
cmp [ esi + 0x28 ] edi
jb r-xdata
mov eax [ esi + 0x60 ]
mov edx [ esi + 0x1c ]
mov ecx [ eax ]
push edi
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
add [ esi + 0x44 ] edi
adc [ esi + 0x48 ] ecx
mov [ esi + 0x28 ] ecx
ja r-xdata
pop edi
mov eax 0x80004005
pop esi
pop ebp
retn 0x4
mov edi ecx
cmp edi ecx
jbe r-xdata
sub_420260
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ esi + 0x38 ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x3c ] ebx
cmp edi ebx
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x30 ] edi
mov [ esi + 0x54 ] ebx
mov [ esi + 0x58 ] ebx
mov [ esi + 0x44 ] bl
mov esi [ esi + 0x70 ]
mov ecx [ esi ]
mov edx [ ecx + 0xc ]
push esi
call edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_4202b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x30 ] 0x0
sub_4202e0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
mov [ eax ] ebx
xor eax eax
mov esi [ ebp + 0x8 ]
mov edi 0x1
mov ecx [ esi + 0x38 ]
mov eax [ esi + 0x3c ]
mov edi [ ebp + 0x10 ]
sub eax ecx
cmp edi eax
jb r-xdata
xor eax eax
cmp ecx [ esi + 0x34 ]
jae r-xdata
mov edx [ esi + 0x28 ]
mov eax [ ebp + 0xc ]
push edi
add edx ecx
push edx
push eax
call sub_43bd20
mov eax [ ebp + 0x14 ]
add [ esi + 0x38 ] edi
add esp 0xc
cmp eax ebx
je r-xdata
mov edi eax
mov ecx [ esi + 0x2c ]
mov edx 0x20000
sub edx eax
mov [ ebp + 0x8 ] edx
lea edx [ ebp + 0x8 ]
push edx
mov edx [ esi + 0x28 ]
add edx eax
push edx
push ecx
mov [ esi + 0x34 ] eax
mov [ esi + 0x3c ] ebx
mov [ esi + 0x38 ] ebx
call sub_411ee0
add esp 0xc
cmp eax ebx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov edx [ esi + 0x3c ]
add edx ecx
mov dl [ edx + eax ]
mov [ ecx + eax ] dl
mov ecx [ esi + 0x3c ]
add eax edi
add ecx eax
cmp ecx [ esi + 0x34 ]
jb r-xdata
add [ eax ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
add [ esi + 0x34 ] eax
mov ecx [ esi + 0x34 ]
mov eax [ esi + 0x6c ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push ecx
mov ecx [ esi + 0x28 ]
push ecx
push eax
call edx
mov [ esi + 0x3c ] eax
cmp eax ebx
jne r-xdata
mov ecx [ esi + 0x34 ]
cmp ecx eax
jae r-xdata
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x3c ]
cmp [ esi + 0x38 ] ecx
jne r-xdata
lea ebx [ ebx ]
mov [ esi + 0x3c ] eax
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x28 ]
mov [ eax + ecx ] bl
add [ esi + 0x34 ] edi
mov edx [ esi + 0x34 ]
cmp edx [ esi + 0x3c ]
jb r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ eax ]
push edx
mov edx [ esi + 0x28 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov [ esi + 0x3c ] eax
jmp r-xdata
sub_420410
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x48 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
pop ebp
retn 0xc
sub_420430
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x48 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
pop ebp
retn 0x10
sub_4204a0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x48 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
pop ebp
retn 0xc
sub_420560
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41f8d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_420590
push ebp
mov ebp esp
push 0xffffffff
push sub_4523e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x1c ] r--data
mov [ esi + 0x20 ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] r--data
xor edi edi
mov [ esi + 0x2c ] edi
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] r--data
mov [ esi + 0x1c ] r--data
mov [ esi + 0x20 ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x34 ] edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
push 0x20000
mov [ ebp - 0x4 ] 0x7
call sub_410610
add esp 0x4
mov [ esi + 0x30 ] eax
cmp eax edi
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] 0x1
call sub_43d1c8
sub_4206b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x2c ]
mov eax [ esi + 0x2c ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_41f8d0
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_420860
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
cmp [ esi ] eax
pop esi
setne al
retn
push 0x100000
call sub_410610
add esp 0x4
mov [ esi ] eax
sub_4208c0
push esi
mov esi ecx
lea eax [ esi + 0x34 ]
push rwxdata
push eax
mov [ esi ] r--data
call sub_42f000
mov ecx [ esi + 0x30 ]
push ecx
call sub_410630
add esp 0xc
lea ecx [ esi + 0x8 ]
pop esi
jmp sub_42ed50
sub_4208f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_420950
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi + 0x30 ] esi
jne r-xdata
push ebx
push 0x100000
lea ecx [ edi + 0x8 ]
call sub_42ed70
test al al
je r-xdata
push 0x100000
call sub_410610
add esp 0x4
mov [ edi + 0x30 ] eax
cmp eax esi
jne r-xdata
pop ebx
pop edi
mov eax 0x8007000e
pop esi
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
mov [ edi + 0x1c ] eax
mov eax [ edi + 0x14 ]
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
mov [ edi + 0x28 ] 0x0
mov [ edi + 0x2c ] esi
pop edi
mov eax 0x8007000e
pop esi
mov esp ebp
pop ebp
retn 0x18
lea ecx [ edi + 0x8 ]
call sub_42edc0
mov al [ ecx ]
inc ecx
mov [ edi + 0xc ] ecx
jmp r-xdata
mov ecx [ edi + 0xc ]
cmp ecx [ edi + 0x10 ]
je r-xdata
cmp [ edi + 0x28 ] 0x0
jne r-xdata
mov [ ebp + esi + 0xc ] al
inc esi
cmp esi 0x2
jl r-xdata
mov eax 0x1
movzx eax [ ebp + 0xc ]
mov esi eax
and esi 0xf
mov ebx eax
inc esi
shr ebx 0xc
cmp esi 0x2
jb r-xdata
cmp ebx 0x2
ja r-xdata
jne r-xdata
and eax 0xff0
add eax 0x10
push rwxdata
shl eax 0x10
push eax
add edi 0x34
push edi
call sub_42f030
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop edi
mov eax 0x80004001
pop esi
mov esp ebp
pop ebp
retn 0x18
push edi
call sub_430990
add esp 0x4
test eax eax
je r-xdata
push ebx
push esi
push edi
call sub_42f8c0
add esp 0xc
xor eax eax
mov [ ebp + 0xf ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea esp [ esp ]
mov [ ebp - 0x4 ] 0x100000
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x4 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x30 ]
xor esi esi
nop
mov ecx [ eax ]
sub ecx [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
sbb eax [ ebp - 0x8 ]
test eax eax
ja r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
jb r-xdata
mov ecx [ eax + 0x30 ]
add [ ebp - 0xc ] esi
mov edx [ ebp + 0x10 ]
push esi
adc [ ebp - 0x8 ] 0x0
push ecx
push edx
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
test ebx ebx
js r-xdata
jb r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x18
cmp [ esi + 0x1cec ] al
je r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ eax ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x2c ]
test eax eax
jne r-xdata
mov [ esi + edi ] bl
inc esi
cmp esi [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x4 ] ecx
cmp ecx 0x100000
jae r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0xf ] al
jne r-xdata
cmp [ ecx + 0x28 ] al
jne r-xdata
add eax 0x34
push eax
call sub_430a70
mov ebx eax
mov eax [ ebp + 0x8 ]
add esp 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
cmp [ esi + 0x80 ] 0x0
jne r-xdata
lea eax [ esi + 0x34 ]
push eax
call sub_430a70
mov ecx [ esi + 0x2c ]
add esp 0x4
test ecx ecx
je r-xdata
test ebx ebx
js r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
pop ebx
pop edi
mov eax ecx
pop esi
mov esp ebp
pop ebp
retn 0x18
cmp ebx 0xffffffff
jne r-xdata
cmp [ ebp + 0x1c ] eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp + 0xf ] 0x1
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x14 ]
cdq
add eax [ ecx + 0x20 ]
adc edx [ ecx + 0x24 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x14 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
je r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x18
sub_420bd0
push esi
mov esi ecx
lea eax [ esi + 0x34 ]
push rwxdata
push eax
mov [ esi ] r--data
call sub_42f000
mov ecx [ esi + 0x30 ]
push ecx
call sub_410630
add esp 0xc
lea ecx [ esi + 0x8 ]
pop esi
jmp sub_42ee50
sub_420c00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_420c60
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
pop edi
pop esi
mov eax 0x80070057
pop ebx
pop ebp
retn 0xc
mov edx [ ebx + esi * 4 ]
sub edx 0x2
mov eax [ edi + 0x8 ]
je r-xdata
lea edx [ eax - 0x100000 ]
cmp edx 0xff00000
ja r-xdata
dec edx
je r-xdata
shr eax 0x14
mov [ ecx + 0x1cec ] eax
lea edx [ eax - 0x2 ]
cmp edx 0xe
ja r-xdata
sub edx 0x9
jne r-xdata
cmp [ edi ] 0x13
jne r-xdata
movzx eax al
mov [ ecx + 0x1cf0 ] eax
jmp r-xdata
cmp eax 0x1
ja r-xdata
inc esi
add edi 0x10
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ecx + 0x1cf4 ] eax
jmp r-xdata
sub_420cf0
push ebp
mov ebp esp
sub esp 0x14
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x30 ] ebx
jne r-xdata
push esi
lea esi [ edi + 0x8 ]
push 0x100000
mov ecx esi
call sub_42ee70
test al al
je r-xdata
push 0x100000
call sub_410610
add esp 0x4
mov [ edi + 0x30 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop edi
mov eax 0x8007000e
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ edi + 0x1cec ]
push rwxdata
shl ecx 0x14
lea eax [ edi + 0x34 ]
push ecx
push eax
mov [ ebp - 0x4 ] eax
call sub_42f030
add esp 0xc
test eax eax
jne r-xdata
pop edi
mov eax 0x8007000e
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0x10 ]
mov [ edi + 0x1c ] edx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
add ecx eax
mov [ esi + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov edx [ edi + 0x1cf4 ]
mov eax [ edi + 0x1cf0 ]
push edx
push eax
push ecx
mov [ edi + 0x84 ] ebx
mov [ edi + 0x7c ] 0xffffffff
call sub_42f8c0
mov edx [ edi + 0x1cf4 ]
mov eax [ edi + 0x1cec ]
shl edx 0x8
lea ecx [ edx + eax - 0x1 ]
mov edx [ edi + 0x1cf0 ]
mov eax [ esi + 0x4 ]
add ecx ecx
lea ebx [ edx + ecx * 8 - 0x1 ]
mov [ eax ] bl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
add esp 0xc
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi + 0x4 ]
shr ebx 0x8
mov [ ecx ] bl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx esi
call sub_42eeb0
mov eax [ edi + 0x28 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov ecx esi
call sub_42eeb0
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ edi + 0x30 ]
push 0x100000
push ecx
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call edx
cmp eax ebx
jne r-xdata
mov edi edi
mov edi [ ebp - 0x4 ]
push 0xffffffff
push edi
call sub_430f80
push edi
call sub_430e80
add esp 0xc
mov ecx esi
call sub_42eeb0
xor ebx ebx
test eax eax
je r-xdata
add [ ebp - 0xc ] eax
mov ecx [ ebp + 0x1c ]
adc [ ebp - 0x8 ] 0x0
test ecx ecx
je r-xdata
mov eax [ edi + 0x30 ]
movzx ecx [ ebx + eax ]
mov edx [ ebp - 0x4 ]
push ecx
push edx
call sub_430f80
mov eax [ edi + 0x28 ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ edi + 0x30 ]
push 0x100000
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ esi + 0xc ]
cdq
add eax [ esi + 0x18 ]
adc edx [ esi + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] edx
lea edx [ ebp - 0x14 ]
push edx
lea edx [ ebp - 0xc ]
push edx
push ecx
call eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
inc ebx
cmp ebx eax
jb r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_420ef0
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x34 ]
push rwxdata
push eax
mov [ esi ] r--data
call sub_42f000
mov ecx [ esi + 0x30 ]
push ecx
call sub_410630
add esp 0xc
lea ecx [ esi + 0x8 ]
call sub_42ed50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_420f40
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x34 ]
push rwxdata
push eax
mov [ esi ] r--data
call sub_42f000
mov ecx [ esi + 0x30 ]
push ecx
call sub_410630
add esp 0xc
lea ecx [ esi + 0x8 ]
call sub_42ee50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_420f90
push esi
mov esi ecx
push edi
lea edi [ esi + 0x8 ]
mov [ esi + 0x4 ] 0x0
mov ecx edi
mov [ esi ] r--data
call sub_42ef40
mov [ esi + 0x30 ] 0x0
lea eax [ esi + 0x34 ]
push eax
mov [ esi + 0x1cec ] 0x10
mov [ esi + 0x1cf0 ] 0x6
mov [ esi + 0x1cf4 ] 0x0
mov [ esi + 0x88 ] edi
call sub_42ef50
add esp 0x4
pop edi
mov eax esi
pop esi
retn
sub_420ff0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
lea eax [ esi + 0x34 ]
push rwxdata
push eax
mov [ esi ] r--data
call sub_42f000
mov ecx [ esi + 0x30 ]
push ecx
call sub_410630
add esp 0xc
lea ecx [ esi + 0x8 ]
call sub_42ed50
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_421040
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
lea eax [ esi + 0x34 ]
push rwxdata
push eax
mov [ esi ] r--data
call sub_42f000
mov ecx [ esi + 0x30 ]
push ecx
call sub_410630
add esp 0xc
lea ecx [ esi + 0x8 ]
call sub_42ee50
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_421090
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
lea edi [ esi + 0x8 ]
mov [ esi + 0x4 ] 0x0
mov ecx edi
mov [ esi ] r--data
call sub_42ee40
mov al [ ebp + 0x8 ]
lea ecx [ esi + 0x34 ]
mov [ esi + 0x30 ] 0x0
push ecx
mov [ esi + 0x1cec ] al
mov [ esi + 0x88 ] edi
call sub_42ef50
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421100
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x1
jae r-xdata
mov eax [ ebp + 0xc ]
mov al [ eax ]
mov edx [ ebp + 0x8 ]
mov cl al
shr cl 0x1
and cl 0x1
mov [ edx + 0x234 ] cl
mov ecx 0x0
setne cl
shr al 0x2
add ecx 0x6
and al 0x1
mov [ edx + 0x235 ] al
mov eax 0x0
setne al
mov [ edx + 0x238 ] ecx
add eax 0x2
mov [ edx + 0x23c ] eax
xor eax eax
pop ebp
retn 0xc
mov eax 0x80070057
pop ebp
retn 0xc
sub_421180
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x24 ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x4c ] 0x0
sub_4211c0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
lea esi [ ecx + 0x38 ]
mov ecx esi
call sub_406370
mov eax [ esi + 0x30 ]
add [ esi ] 0x8
movzx ecx al
shr eax 0x8
mov [ esi + 0x30 ] eax
lea eax [ ecx + 0x1 ]
xor ebx ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
jle r-xdata
cmp ebx [ ebp + 0x10 ]
pop esi
pop ebx
je r-xdata
push edi
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4313b0
mov esp ebp
pop ebp
retn 0xc
xor al al
mov esp ebp
pop ebp
retn 0xc
push r--data
lea eax [ ebp + 0x10 ]
push eax
mov [ ebp + 0x10 ] 0x0
call sub_43d1c8
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx [ ebp - 0x8 ]
add ebx [ ebp + 0xc ]
push eax
push edx
push ebx
call sub_43d590
add esp 0xc
mov ebx edi
mov ecx esi
call sub_406370
mov eax [ esi + 0x30 ]
add [ esi ] 0x4
mov ecx eax
and ecx 0xf
inc ecx
shr eax 0x4
mov [ ebp - 0x8 ] ecx
mov ecx esi
mov [ esi + 0x30 ] eax
call sub_406370
mov eax [ esi + 0x30 ]
add [ esi ] 0x4
mov ecx eax
shr eax 0x4
and ecx 0xf
mov [ esi + 0x30 ] eax
lea eax [ ecx + 0x1 ]
lea edi [ eax + ebx ]
cmp edi [ ebp + 0x10 ]
jg r-xdata
pop edi
sub_421290
push ebp
mov ebp esp
sub esp 0x184
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x239 ] 0x0
je r-xdata
push 0x40
lea edx [ ebp - 0x84 ]
push edx
lea eax [ esi + 0x108 ]
push eax
mov ecx esi
call sub_4211c0
test al al
je r-xdata
push 0x100
lea eax [ ebp - 0x184 ]
push eax
lea ecx [ esi + 0x70 ]
push ecx
mov ecx esi
call sub_4211c0
test al al
jne r-xdata
xor al al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
push 0x40
lea ecx [ ebp - 0x44 ]
push ecx
lea edx [ esi + 0x1a0 ]
push edx
mov ecx esi
call sub_4211c0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_421320
push esi
mov esi [ ecx ]
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x24 ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x4c ] 0x0
sub_421360
push ebp
mov ebp esp
push 0xffffffff
push sub_452418
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
push 0x100000
lea ecx [ edi + 0x40 ]
call sub_404f00
test al al
jne r-xdata
mov eax [ rwxdata ]
lea ebx [ edi + 0x10 ]
push eax
mov ecx ebx
call sub_405100
test al al
je r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov ecx [ eax ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x20 ] ecx
push eax
mov ecx ebx
mov [ ebp - 0x1c ] edx
call sub_405150
push 0x0
mov ecx ebx
call sub_410be0
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ edi + 0x40 ]
call sub_404f60
lea esi [ edi + 0x38 ]
lea ecx [ esi + 0x8 ]
call sub_404e60
xor eax eax
mov [ esi ] 0x20
mov [ esi + 0x4 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x30 ] eax
mov [ ebp + 0x14 ] edi
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_421290
test al al
jne r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x1c ]
ja r-xdata
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_421320
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x1c ]
jb r-xdata
jb r-xdata
mov ecx ebx
call sub_405220
lea ecx [ ebp + 0x14 ]
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_421320
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
ja r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x20 ]
jae r-xdata
mov eax [ ebp - 0x20 ]
cmp [ ebp - 0x18 ] eax
ja r-xdata
mov ecx esi
call sub_406370
mov eax [ esi + 0x30 ]
inc [ esi ]
mov ecx eax
shr eax 0x1
and ecx 0x1
mov [ esi + 0x30 ] eax
jne r-xdata
movzx eax [ ebp - 0x18 ]
xor ecx ecx
or eax ecx
jne r-xdata
lea ecx [ ecx ]
cmp [ edi + 0x239 ] 0x0
je r-xdata
mov eax [ edi + 0x23c ]
mov ecx esi
mov [ ebp + 0xc ] eax
call sub_406370
mov ecx [ ebp + 0xc ]
mov eax [ esi + 0x30 ]
add [ esi ] ecx
mov edi 0x1
shl edi cl
push esi
dec edi
and edi eax
shr eax cl
mov ecx [ ebp - 0x10 ]
add ecx 0x1a0
mov [ esi + 0x30 ] eax
call sub_4314f0
cmp eax 0x40
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x10 ]
mov ecx 0x20
sub ecx [ esi ]
cdq
shr ecx 0x3
xor edi edi
sub eax ecx
sbb edx edi
add eax [ esi + 0x18 ]
lea ecx [ ebp - 0x18 ]
adc edx [ esi + 0x1c ]
add eax [ esi + 0x28 ]
push ecx
adc edx edi
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x24 ] edx
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call edx
mov edi eax
test edi edi
jne r-xdata
mov ecx esi
call sub_406370
mov eax [ esi + 0x30 ]
add [ esi ] 0x8
movzx ecx al
shr eax 0x8
mov [ esi + 0x30 ] eax
mov al cl
push esi
lea ecx [ edi + 0x70 ]
call sub_4314f0
cmp eax 0x100
jae r-xdata
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0x23c ]
shl eax cl
push esi
lea ecx [ edx + 0x108 ]
add eax edi
mov [ ebp + 0xc ] eax
call sub_4314f0
cmp eax 0x40
jae r-xdata
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_421320
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edi [ ebp - 0x10 ]
add [ ebp - 0x18 ] 0x1
mov ecx ebx
call sub_4052e0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edi [ ecx + 0x240 ]
add edi eax
cmp eax 0x3f
jne r-xdata
ja r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov [ ecx + edx ] al
inc [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
xor eax eax
cmp eax [ ebp - 0x14 ]
jb r-xdata
mov ecx esi
call sub_406370
mov eax [ esi + 0x30 ]
add [ esi ] 0x8
movzx ecx al
shr eax 0x8
mov [ esi + 0x30 ] eax
add edi ecx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x20 ]
jb r-xdata
test edi edi
je r-xdata
ja r-xdata
add [ ebp - 0x18 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
mov ecx ebx
call sub_405b10
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
adc [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
mov [ eax + ecx ] 0x0
inc [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebp - 0x18 ] 0x1
mov ecx [ ebp - 0x14 ]
adc ecx 0x0
xor eax eax
dec edi
mov [ ebp - 0x14 ] ecx
cmp eax ecx
ja r-xdata
mov ecx ebx
call sub_4052e0
jb r-xdata
mov edx [ ebp - 0x18 ]
cmp [ ebp + 0xc ] edx
jae r-xdata
sub_4216e0
push ebp
mov ebp esp
push 0xffffffff
push sub_452440
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_421360
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_421790
push ebp
mov ebp esp
push 0xffffffff
push sub_45248f
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] r--data
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x30 ] eax
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x4 ] eax
call sub_404ee0
push 0x100
lea ecx [ esi + 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_431360
push 0x40
lea ecx [ esi + 0x108 ]
mov [ ebp - 0x4 ] 0x2
call sub_431360
push 0x40
lea ecx [ esi + 0x1a0 ]
mov [ ebp - 0x4 ] 0x3
call sub_431360
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_421830
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_4218e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4524f5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x1a0 ]
mov [ ebp - 0x4 ] 0x3
call sub_4313a0
lea ecx [ esi + 0x108 ]
mov [ ebp - 0x4 ] 0x2
call sub_4313a0
lea ecx [ esi + 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_4313a0
lea edi [ esi + 0x40 ]
mov [ ebp - 0x14 ] edi
mov ecx edi
mov [ ebp - 0x4 ] 0x4
call sub_404e40
mov edi [ edi + 0xc ]
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
add esi 0x10
mov [ ebp - 0x14 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x5
call sub_405040
mov esi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
call eax
sub_4219a0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4218e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4219d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_4218e0
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_421a20
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov al [ edx ]
push esi
mov esi [ ebp + 0xc ]
mov cl [ esi ]
inc edx
inc esi
cmp al cl
jb r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
ja r-xdata
mov eax 0x1
pop esi
pop ebp
retn
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn
mov al [ edx ]
mov cl [ esi ]
inc edx
inc esi
cmp al cl
jae r-xdata
sub_421a60
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ edx ]
push esi
mov esi [ ebp + 0xc ]
movzx ecx [ esi ]
add edx 0x2
add esi 0x2
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
ja r-xdata
mov eax 0x1
pop esi
pop ebp
retn
test ax ax
je r-xdata
xor eax eax
pop esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ esi ]
add edx 0x2
add esi 0x2
cmp ax cx
jae r-xdata
sub_421ab0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
sub ecx eax
push esi
mov [ ebp + 0x8 ] ecx
push edi
test si si
jne r-xdata
push esi
call [ CharUpperW@IAT ]
push edi
movzx ebx ax
call [ CharUpperW@IAT ]
movzx eax ax
cmp bx ax
jb r-xdata
movzx esi [ ecx + eax ]
movzx edi [ eax ]
add eax 0x2
mov [ ebp + 0xc ] eax
cmp si di
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn
ja r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub_421b20
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
movzx eax [ ecx ]
sub esp 0x8
push edi
cmp eax 0x13
jne r-xdata
test ax ax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax 0x80070057
pop edi
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
push esi
mov esi [ edi ]
lea eax [ ebp + 0xc ]
push eax
push esi
call sub_4316a0
mov ecx [ ebp + 0xc ]
sub ecx esi
add esp 0x8
sar ecx 0x1
mov [ ebp - 0x4 ] edx
pop esi
cmp ecx [ edi + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
sub_421b90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x1
mov al 0x1
pop esi
pop ebp
retn
mov eax [ esi ]
push r--data
push eax
call sub_421ab0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi ]
push r--data
push ecx
call sub_421a60
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
push r--data
push edx
call sub_421ab0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x0
mov al 0x1
pop esi
pop ebp
retn
mov eax [ esi ]
push r--data
push eax
call sub_421a60
add esp 0x8
test eax eax
je r-xdata
xor al al
pop esi
pop ebp
retn
sub_421c10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
lea ecx [ ebp + 0x8 ]
push ecx
push esi
call sub_4316a0
add esp 0x8
test edx edx
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
xor eax eax
pop esi
pop ebp
retn
cmp eax 0xffffffff
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
pop esi
pop ebp
retn
sub_421c50
push ebp
mov ebp esp
push 0xffffffff
push sub_452518
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_403f20
mov edi [ ebp - 0x1c ]
push edi
mov [ ebp - 0x4 ] 0x0
call [ CharUpperW@IAT ]
lea ecx [ ebp - 0x10 ]
push ecx
push edi
call sub_4316a0
mov esi [ ebp - 0x10 ]
sub esi edi
add esp 0x8
sar esi 0x1
je r-xdata
push edi
call sub_43c44d
mov eax 0x80070057
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
lea ebx [ esi + 0x1 ]
cmp ecx ebx
jg r-xdata
cmp ecx esi
jne r-xdata
movzx ecx [ edi + esi * 2 ]
sub ecx 0x42
je r-xdata
test edx edx
jne r-xdata
cmp edx 0x1
jb r-xdata
sub ecx 0x9
je r-xdata
cmp eax 0x20
jae r-xdata
mov ecx [ ebp + 0xc ]
push edi
mov [ ecx ] eax
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
ja r-xdata
test edx edx
jne r-xdata
sub ecx 0x2
jne r-xdata
mov ecx eax
mov eax [ ebp + 0xc ]
mov edx 0x1
shl edx cl
push edi
mov [ eax ] edx
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jae r-xdata
cmp eax __dos_header
jae r-xdata
test edx edx
jne r-xdata
mov edx [ ebp + 0xc ]
shl eax 0xa
push edi
mov [ edx ] eax
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x1000
jae r-xdata
shl eax 0x14
jmp r-xdata
sub_421da0
push ebp
mov ebp esp
push 0xffffffff
push sub_452548
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
push edx
push eax
call sub_421c50
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
cmp ecx 0x13
jne r-xdata
cmp ecx 0x8
jne r-xdata
mov eax [ eax + 0x8 ]
cmp eax 0x20
jb r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0x8 ]
push ecx
lea ecx [ ebp - 0x18 ]
call sub_405570
mov edx [ ebp + 0x10 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_421c50
mov ecx [ ebp - 0x18 ]
push ecx
mov esi eax
call sub_43c44d
add esp 0xc
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx eax
mov eax [ ebp + 0x10 ]
mov edx 0x1
shl edx cl
mov [ eax ] edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_421e80
push ebp
mov ebp esp
push 0xffffffff
push sub_452578
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
movzx eax [ ecx ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0x8
je r-xdata
mov edx [ ecx + 0x8 ]
push edx
lea ecx [ ebp - 0x18 ]
call sub_405570
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_421b90
mov edx [ ebp - 0x18 ]
movzx esi al
neg esi
sbb esi esi
push edx
and esi 0x7ff8ffa9
call sub_43c44d
add esp 0xc
lea eax [ esi - 0x7ff8ffa9 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0xb
je r-xdata
cmp [ ecx + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
setne al
mov [ ecx ] al
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_421f60
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x0
jne r-xdata
push esi
mov esi [ edi ]
lea ecx [ ebp + 0x8 ]
push ecx
push esi
call sub_4316a0
add esp 0x8
test edx edx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x13
je r-xdata
xor ecx ecx
xor eax eax
jmp r-xdata
cmp eax 0xffffffff
jbe r-xdata
mov edx [ eax + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
xor eax eax
pop edi
pop ebp
retn
push eax
lea eax [ ebp + 0xb ]
push eax
call sub_421e80
add esp 0x8
test eax eax
jne r-xdata
pop esi
cmp eax [ edi + 0x4 ]
je r-xdata
mov ecx eax
mov eax [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
pop edi
pop ebp
retn
cmp [ ebp + 0xb ] al
mov eax [ ebp + 0x10 ]
jne r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
xor eax eax
mov eax 0x80070057
pop edi
pop ebp
retn
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
xor eax eax
pop edi
pop ebp
retn
mov eax 0x1
sub_422010
push ebp
mov ebp esp
push edi
mov edi [ esi + 0x44 ]
add edi [ esi + 0x40 ]
add edi [ ebp + 0x8 ]
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov [ esi + 0x3c ] edi
mov eax 0x1
pop edi
pop ebp
retn
push eax
mov eax [ ebx + 0x4 ]
push ebx
call eax
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x3c ] edi
mov ecx [ ebx ]
push edi
push ebx
call ecx
add esp 0x10
mov [ esi + 0x30 ] eax
cmp [ esi + 0x3c ] edi
je r-xdata
xor eax eax
cmp [ esi + 0x30 ] eax
pop edi
setne al
pop ebp
retn
sub_4220c0
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ esi + 0x6c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ esi ]
sub eax [ esi + 0x4 ]
mov ecx [ esi + 0x30 ]
add eax [ esi + 0xc ]
sub ecx eax
add ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] ecx
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x50 ]
or eax 0xffffffff
sub eax ecx
cmp eax edx
jbe r-xdata
mov ecx [ esi + 0x34 ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov eax [ ecx ]
push ecx
call eax
add esp 0xc
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
sub [ esi + 0x50 ] eax
lea ecx [ ecx + eax ]
mov [ esi + 0xc ] ecx
jne r-xdata
mov eax edx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x38 ] 0x1
add [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
cmp eax [ esi + 0x44 ]
ja r-xdata
mov eax [ esi ]
sub eax [ esi + 0x4 ]
mov ecx [ esi + 0x30 ]
add eax [ esi + 0xc ]
sub ecx eax
add ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov esp ebp
pop ebp
retn
sub_422160
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x40 ]
sub ecx [ esi + 0x4 ]
mov edx [ esi ]
add ecx eax
push ecx
sub edx eax
mov eax [ esi + 0x30 ]
push edx
push eax
call sub_43d220
mov ecx [ esi + 0x30 ]
add esp 0xc
add ecx [ esi + 0x40 ]
mov [ esi ] ecx
pop esi
pop ebp
retn
sub_422190
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx [ eax + 0x30 ]
sub ecx [ eax ]
cmp [ eax + 0x44 ] ecx
sbb eax eax
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4221b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x38 ] 0x0
jne r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
cmp [ esi + 0x44 ] eax
jb r-xdata
call sub_4220c0
sub_4221d0
push esi
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
call sub_4220c0
pop esi
retn
mov eax [ esi ]
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x30 ]
sub ecx eax
add ecx edx
cmp [ esi + 0x44 ] ecx
sbb ecx ecx
inc ecx
je r-xdata
mov ecx [ esi + 0x40 ]
push edi
mov edi [ esi + 0xc ]
sub edi [ esi + 0x4 ]
sub eax ecx
add edi ecx
push edi
push eax
push edx
call sub_43d220
mov edx [ esi + 0x40 ]
add esp 0xc
add edx [ esi + 0x30 ]
pop edi
mov [ esi ] edx
sub_422240
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov [ eax + 0x30 ] edx
mov [ eax + 0x4c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x2c ] 0x20
mov [ eax + 0x54 ] 0x1
mov [ eax + 0x48 ] 0x4
mov [ eax + 0x58 ] edx
lea esi [ eax + 0x70 ]
lea ecx [ ecx ]
mov eax edx
and eax 0x1
dec eax
not eax
and eax 0xedb88320
mov ecx edx
shr ecx 0x1
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov [ esi ] ecx
inc edx
add esi 0x4
cmp edx 0x100
jb r-xdata
pop esi
pop ebp
retn
sub_422340
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x20 ]
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
push eax
push edi
call ecx
add esp 0x8
cmp [ esi + 0x4c ] 0x0
mov [ esi + 0x20 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ esi + 0x30 ]
mov eax [ edi + 0x4 ]
push edx
push edi
call eax
add esp 0x8
mov [ esi + 0x30 ] 0x0
sub_422380
push esi
lea eax [ ecx * 4 ]
mov esi eax
shr esi 0x2
cmp esi ecx
pop esi
je r-xdata
push eax
mov eax [ edx ]
push edx
call eax
add esp 0x8
retn
xor eax eax
retn
sub_4223a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xc0000000
jbe r-xdata
mov edx eax
shr edx 0x1
cmp eax 0x80000000
jbe r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x20 ]
mov edi [ ebp + 0x1c ]
mov ecx [ edi + 0x4 ]
push eax
push edi
call ecx
xor ebx ebx
add esp 0x8
mov [ esi + 0x20 ] ebx
cmp [ esi + 0x4c ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
lea eax [ eax + edi + 0x1 ]
add edi ebx
add edi [ ebp + 0x18 ]
add ecx ebx
mov ebx [ ebp + 0x1c ]
shr edi 0x1
add edi ecx
add edi eax
cmp [ esi + 0x4c ] 0x0
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] ecx
lea edi [ edi + edx + 0x80000 ]
je r-xdata
mov edx eax
shr edx 0x2
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov edx [ esi + 0x30 ]
mov eax [ edi + 0x4 ]
push edx
push edi
call eax
add esp 0x8
pop edi
mov [ esi + 0x30 ] ebx
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov [ esi + 0x3c ] edi
jmp r-xdata
mov edx [ ebx + 0x4 ]
push eax
push ebx
call edx
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x3c ] edi
mov eax [ ebx ]
push edi
push ebx
call eax
add esp 0x10
mov [ esi + 0x30 ] eax
cmp [ esi + 0x3c ] edi
je r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ esi + 0x1c ] edx
mov edx [ esi + 0x48 ]
lea edi [ ecx + 0x1 ]
mov [ esi + 0x60 ] 0x0
cmp edx 0x2
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ ebx + 0x4 ]
push eax
push ebx
call ecx
xor edi edi
add esp 0x8
mov [ esi + 0x20 ] edi
cmp [ esi + 0x4c ] edi
jne r-xdata
xor eax eax
cmp [ esi + 0x30 ] eax
setne al
test eax eax
je r-xdata
dec ecx
mov eax ecx
shr eax 0x1
or ecx eax
mov eax ecx
shr eax 0x2
or ecx eax
mov eax ecx
shr eax 0x4
or ecx eax
mov eax ecx
or eax 0x1fffe00
shr eax 0x8
or eax ecx
shr eax 0x1
cmp eax 0x1000000
jbe r-xdata
mov eax 0xffff
jmp r-xdata
mov edx [ esi + 0x30 ]
mov eax [ ebx + 0x4 ]
push edx
push ebx
call eax
mov [ esi + 0x30 ] edi
add esp 0x8
mov [ esi + 0x28 ] eax
inc eax
cmp edx 0x2
jbe r-xdata
cmp edx 0x3
jne r-xdata
cmp edx 0x3
jbe r-xdata
mov [ esi + 0x60 ] 0x400
shr eax 0x1
mov eax 0xffffff
jmp r-xdata
cmp edx 0x4
jbe r-xdata
add [ esi + 0x60 ] 0x10000
mov ecx [ esi + 0x68 ]
mov edx [ ebp + 0xc ]
add eax [ esi + 0x60 ]
add ecx [ esi + 0x64 ]
cmp [ esi + 0x54 ] 0x0
mov [ esi + 0x5c ] edx
mov [ esi + 0x64 ] eax
mov [ esi + 0x18 ] edi
lea edx [ edi + edi ]
jne r-xdata
add [ esi + 0x60 ] 0x100000
lea edi [ eax + edx ]
mov eax [ esi + 0x20 ]
mov [ esi + 0x68 ] edx
test eax eax
je r-xdata
mov edx edi
push eax
mov eax [ ebx + 0x4 ]
push ebx
call eax
lea eax [ edi * 4 ]
mov ecx eax
shr ecx 0x2
add esp 0x8
mov [ esi + 0x20 ] 0x0
cmp ecx edi
je r-xdata
cmp ecx edi
je r-xdata
mov edx [ ebx ]
push eax
push ebx
call edx
add esp 0x8
xor eax eax
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
mov ecx [ esi + 0x64 ]
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x20 ] eax
test eax eax
je r-xdata
sub_4225a0
mov edx [ eax + 0x18 ]
sub edx [ eax + 0x14 ]
push ebx
mov ebx [ eax + 0x4 ]
or ecx 0xffffffff
sub ecx ebx
push esi
cmp edx ecx
jae r-xdata
mov esi [ eax + 0xc ]
sub esi ebx
push edi
mov edi [ eax + 0x44 ]
mov edx esi
cmp edx edi
ja r-xdata
mov ecx edx
sub edx edi
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp esi edx
jbe r-xdata
mov ecx edx
pop edi
cmp edx ecx
jae r-xdata
mov edx 0x1
jmp r-xdata
add ebx ecx
mov [ eax + 0x10 ] esi
pop esi
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov esi edx
sub_4225f0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ecx ecx
xor eax eax
cmp [ esi + 0x64 ] ecx
jbe r-xdata
mov eax [ esi + 0x30 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
mov [ esi + 0x14 ] ecx
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x6c ] ecx
mov [ esi + 0x38 ] ecx
call sub_4220c0
mov eax [ esi + 0x18 ]
mov ebx [ esi + 0x4 ]
sub eax [ esi + 0x14 ]
or ecx 0xffffffff
sub ecx ebx
cmp eax ecx
jae r-xdata
mov edx [ esi + 0x20 ]
mov [ edx + eax * 4 ] ecx
inc eax
cmp eax [ esi + 0x64 ]
jb r-xdata
mov edx [ esi + 0xc ]
sub edx ebx
push edi
mov edi [ esi + 0x44 ]
mov eax edx
cmp eax edi
ja r-xdata
mov ecx eax
sub eax edi
test eax eax
je r-xdata
mov eax edx
mov edx [ esi + 0x1c ]
cmp eax edx
jbe r-xdata
mov ecx eax
pop edi
cmp eax ecx
jae r-xdata
mov eax 0x1
jmp r-xdata
add ebx ecx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] eax
pop esi
pop ebx
pop ebp
retn
mov eax edx
sub_422690
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
pop ebp
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub ecx esi
xor ecx ecx
jmp r-xdata
mov ecx [ edx + eax * 4 ]
cmp ecx esi
ja r-xdata
pop esi
mov [ edx + eax * 4 ] ecx
inc eax
cmp eax edi
jb r-xdata
sub_4226c0
mov eax [ esi + 0x4 ]
sub eax [ esi + 0x5c ]
push ebx
mov ebx [ esi + 0x20 ]
push edi
mov edi [ esi + 0x68 ]
dec eax
and eax 0xfffffc00
add edi [ esi + 0x64 ]
mov ecx 0x0
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0x4 ] eax
sub [ esi + 0xc ] eax
pop edi
pop ebx
retn
mov edi edi
sub edx eax
xor edx edx
jmp r-xdata
mov edx [ ebx + ecx * 4 ]
cmp edx eax
ja r-xdata
mov [ ebx + ecx * 4 ] edx
inc ecx
cmp ecx edi
jb r-xdata
sub_422710
push esi
mov esi eax
cmp [ esi + 0x4 ] 0xffffffff
push edi
jne r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
call sub_4226c0
mov ecx [ esi + 0x18 ]
cmp [ esi + 0x14 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
cmp [ esi + 0x44 ] eax
jne r-xdata
mov edi [ esi + 0x4 ]
sub ecx [ esi + 0x14 ]
or eax 0xffffffff
sub eax edi
cmp ecx eax
jae r-xdata
mov [ esi + 0x14 ] 0x0
mov eax esi
call sub_4221d0
mov edx [ esi + 0xc ]
sub edx edi
push ebx
mov ebx [ esi + 0x44 ]
mov ecx edx
cmp ecx ebx
ja r-xdata
mov eax ecx
sub ecx ebx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x1c ]
cmp edx ecx
jbe r-xdata
mov eax ecx
pop ebx
cmp ecx eax
jae r-xdata
mov ecx 0x1
jmp r-xdata
add edi eax
mov [ esi + 0x8 ] edi
pop edi
mov [ esi + 0x10 ] edx
pop esi
retn
mov edx ecx
sub_422790
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x18 ]
mov [ ecx + eax * 4 ] edx
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x1c ]
sub ecx edx
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0x24 ]
je r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
jmp r-xdata
dec [ ebp + 0x20 ]
cmp ecx esi
jae r-xdata
mov edx ebx
sub edx ecx
cmp eax ecx
sbb edi edi
and edi esi
mov esi [ ebp + 0x28 ]
sub edi ecx
add edi eax
mov eax [ ebp + 0x14 ]
mov eax [ eax + edi * 4 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x28 ]
mov al [ edx + eax ]
cmp al [ ebx + esi ]
jne r-xdata
mov edi [ ebp + 0x24 ]
mov al [ edx ]
cmp al [ ebx ]
jne r-xdata
mov esi [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov eax [ ebp + 0x8 ]
mov esi 0x1
cmp eax esi
je r-xdata
mov edi [ ebp + 0x24 ]
cmp [ ebp + 0x28 ] esi
jae r-xdata
sub edx ebx
lea edi [ ebx + 0x1 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp + 0xc ]
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
dec ecx
mov [ edi ] esi
mov [ edi + 0x4 ] ecx
add edi 0x8
mov [ ebp + 0x28 ] esi
mov [ ebp + 0x24 ] edi
cmp esi eax
je r-xdata
mov dl [ edx + edi ]
cmp dl [ edi ]
jne r-xdata
jmp r-xdata
inc esi
inc edi
cmp esi eax
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_422860
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
sub edx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
lea eax [ eax + esi * 8 ]
lea ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
xor ecx ecx
xor ebx ebx
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x24 ] ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x28 ]
pop edi
pop esi
mov [ ecx ] 0x0
mov [ edx ] 0x0
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x24 ]
cmp edx [ ebp + 0x20 ]
jae r-xdata
cmp esi edx
sbb edi edi
and edi [ ebp + 0x20 ]
sub edi edx
add edi esi
mov esi [ ebp + 0x18 ]
lea edi [ esi + edi * 8 ]
mov esi eax
sub esi edx
mov [ ebp - 0x14 ] edi
cmp ecx ebx
jb r-xdata
mov bl [ ecx + esi ]
cmp bl [ ecx + eax ]
jne r-xdata
mov ecx ebx
mov dl [ ecx + esi ]
cmp dl [ ecx + eax ]
mov edx [ ebp + 0xc ]
jae r-xdata
inc ecx
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x10 ]
mov [ esi ] edx
mov [ ebp - 0x8 ] edi
mov edi [ edi ]
mov [ ebp - 0xc ] ecx
mov esi [ ebp - 0x4 ]
mov [ esi ] edx
lea edx [ edi + 0x4 ]
mov edi [ edx ]
mov ebx ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ ebp + 0x2c ] ecx
jae r-xdata
mov bl [ ecx + esi ]
cmp bl [ ecx + eax ]
jne r-xdata
mov esi [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
sub edx edi
cmp [ ebp + 0x24 ] 0x0
mov [ ebp + 0xc ] edi
jne r-xdata
mov ebx [ ebp + 0x28 ]
dec edx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] edx
add ebx 0x8
mov [ ebp + 0x2c ] ecx
mov [ ebp + 0x28 ] ebx
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc ecx
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0x8 ]
pop edi
mov [ eax ] edx
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
lea edi [ ecx + eax ]
mov eax esi
sub eax [ ebp + 0x14 ]
mov eax [ ebp + 0x14 ]
mov edi [ ebp - 0x14 ]
inc ecx
inc edi
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov bl [ eax + edi ]
cmp bl [ edi ]
jne r-xdata
sub_4229a0
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
lea eax [ eax + ecx * 8 ]
lea edx [ eax + 0x4 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov edx eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
sub eax esi
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x24 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov [ edx ] 0x0
mov [ eax ] 0x0
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x20 ]
dec [ ebp + 0x24 ]
cmp eax edi
jae r-xdata
cmp ecx eax
sbb edx edx
and edx edi
sub edx eax
add edx ecx
mov ecx [ ebp + 0x18 ]
lea edi [ ecx + edx * 8 ]
mov edx [ ebp + 0x14 ]
mov ecx edx
sub ecx eax
mov eax [ ebp - 0xc ]
cmp eax ebx
jb r-xdata
mov bl [ eax + ecx ]
cmp bl [ eax + edx ]
jne r-xdata
mov eax ebx
mov cl [ eax + ecx ]
mov ebx [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
cmp cl [ eax + ebx ]
jae r-xdata
inc eax
cmp eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x10 ]
mov [ ecx ] esi
mov esi [ edi ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] eax
mov [ edx ] esi
mov esi [ edi + 0x4 ]
lea edx [ edi + 0x4 ]
mov ebx eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edx
mov ecx [ edi + 0x4 ]
mov edx [ ebp - 0x8 ]
pop edi
pop esi
mov [ edx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ eax + edx ]
mov edx ecx
sub edx [ ebp + 0x14 ]
lea ebx [ ebx ]
mov ecx [ ebp + 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
sub eax esi
cmp [ ebp + 0x24 ] 0x0
mov [ ebp + 0xc ] esi
je r-xdata
cmp eax [ ebp + 0x8 ]
je r-xdata
inc eax
inc esi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp + 0xc ]
mov bl [ edx + esi ]
cmp bl [ esi ]
jne r-xdata
sub_422ad0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x10 ]
cmp edx 0x2
jae r-xdata
mov ecx [ esi ]
movzx eax [ ecx + 0x1 ]
movzx ecx [ ecx ]
push ebx
mov ebx [ ebp + 0xc ]
shl eax 0x8
or eax ecx
mov ecx [ esi + 0x20 ]
push edi
mov edi [ esi + 0x4 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
push 0x1
mov [ eax ] edi
mov eax [ esi + 0x2c ]
push ebx
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_422860
mov edi eax
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
sub edi ebx
add esp 0x28
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn
mov eax esi
call sub_422710
xor eax eax
pop esi
pop ebp
retn
mov eax esi
call sub_422710
sub_422b70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x10 ]
cmp edx 0x3
jae r-xdata
mov ecx [ esi ]
movzx eax [ ecx ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
movzx edi [ ecx + 0x2 ]
movzx ecx [ ecx + 0x1 ]
shl eax 0x8
or eax edi
xor eax [ esi + ecx * 4 + 0x70 ]
mov ecx [ esi + 0x20 ]
mov edi [ esi + 0x4 ]
and eax 0xffff
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
push 0x2
mov [ eax ] edi
mov eax [ esi + 0x2c ]
push ebx
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_422860
mov edi eax
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
sub edi ebx
add esp 0x28
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn
mov eax esi
call sub_422710
xor eax eax
pop esi
pop ebp
retn
mov eax esi
call sub_422710
sub_422c20
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp eax 0x3
jae r-xdata
push ebx
mov ebx [ esi + 0x4 ]
push edi
mov edi [ esi ]
movzx eax [ edi ]
movzx ecx [ edi + 0x1 ]
xor ecx [ esi + eax * 4 + 0x70 ]
movzx eax [ edi + 0x2 ]
shl eax 0x8
xor eax ecx
and eax [ esi + 0x28 ]
mov edx ecx
mov ecx [ esi + 0x20 ]
and edx 0x3ff
sub ebx [ ecx + edx * 4 ]
mov [ ebp + 0x8 ] ebx
mov ebx [ ecx + eax * 4 + 0x1000 ]
mov [ ebp - 0x8 ] ebx
mov ebx [ esi + 0x4 ]
mov [ ecx + eax * 4 + 0x1000 ] ebx
mov ecx [ esi + 0x20 ]
mov eax [ ecx + eax * 4 + 0x1000 ]
mov ebx [ ebp + 0xc ]
mov [ ecx + edx * 4 ] eax
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax 0x2
cmp edx [ esi + 0x18 ]
jae r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx edi
sub edx [ ebp + 0x8 ]
mov [ ebp - 0xc ] edx
mov dl [ edx ]
cmp dl [ edi ]
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_422710
mov eax edi
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_422710
mov edx [ ebp - 0x4 ]
cmp edx eax
je r-xdata
mov ecx [ ebp + 0x8 ]
dec ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx ] eax
mov ecx 0x2
cmp eax edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov cl [ ecx + eax ]
cmp cl [ eax + edi ]
jne r-xdata
push eax
mov eax [ esi + 0x2c ]
lea ecx [ ebx + ecx * 4 ]
push ecx
mov ecx [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push ecx
mov ecx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push ecx
push eax
push edx
call sub_422860
mov edi eax
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
sub edi ebx
add esp 0x28
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push ecx
mov ecx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push ecx
push eax
push edx
call sub_4229a0
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
add esp 0x20
cmp eax [ esi + 0x8 ]
jne r-xdata
inc eax
cmp eax edx
jne r-xdata
pop edi
pop ebx
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_422710
sub_422da0
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp eax 0x4
jae r-xdata
mov eax [ esi ]
movzx ecx [ eax ]
movzx edx [ eax + 0x1 ]
xor edx [ esi + ecx * 4 + 0x70 ]
push ebx
movzx ebx [ eax + 0x2 ]
mov [ ebp + 0x8 ] eax
movzx eax [ eax + 0x3 ]
mov [ ebp - 0x10 ] eax
mov ecx ebx
lea eax [ ebx * 8 ]
mov ebx [ ebp - 0x10 ]
xor eax [ esi + ebx * 4 + 0x70 ]
mov ebx [ esi + 0x4 ]
shl eax 0x5
shl ecx 0x8
xor eax edx
and eax [ esi + 0x28 ]
xor ecx edx
push edi
mov edi edx
mov edx [ esi + 0x20 ]
and edi 0x3ff
sub ebx [ edx + edi * 4 ]
and ecx 0xffff
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + 0x4 ]
sub ebx [ edx + ecx * 4 + 0x1000 ]
mov [ ebp - 0xc ] ebx
mov ebx [ edx + eax * 4 + 0x41000 ]
mov [ ebp - 0x10 ] ebx
mov ebx [ esi + 0x4 ]
mov [ edx + eax * 4 + 0x41000 ] ebx
mov edx [ esi + 0x20 ]
mov eax [ edx + eax * 4 + 0x41000 ]
mov ebx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x1000 ] eax
mov eax [ esi + 0x20 ]
mov ecx [ eax + ecx * 4 + 0x1000 ]
mov [ eax + edi * 4 ] ecx
mov ecx [ ebp - 0x14 ]
xor edi edi
mov eax 0x1
cmp ecx [ esi + 0x18 ]
jae r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0xc ]
cmp ecx edx
je r-xdata
mov edx ebx
sub edx ecx
mov dl [ edx ]
cmp dl [ ebx ]
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_422710
mov ebx [ ebp - 0x4 ]
test edi edi
je r-xdata
cmp edx [ esi + 0x18 ]
jae r-xdata
mov edx [ ebp + 0xc ]
lea edi [ ecx - 0x1 ]
mov eax 0x2
mov [ edx + 0x4 ] edi
mov [ edx ] eax
mov edi eax
cmp eax 0x3
jae r-xdata
cmp eax ebx
je r-xdata
sub ebx edx
mov dl [ ebx ]
mov ebx [ ebp + 0x8 ]
cmp dl [ ebx ]
jne r-xdata
mov edx [ esi + 0x2c ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ eax + edi * 4 ]
mov eax [ esi + 0x18 ]
push ecx
mov ecx [ esi + 0x14 ]
push edx
mov edx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push edx
mov edx [ ebp - 0x10 ]
push eax
push ecx
push edx
push ebx
call sub_422860
mov edi eax
sub edi [ ebp + 0xc ]
add esp 0x28
sar edi 0x2
mov eax 0x3
mov ecx [ ebp + 0xc ]
mov [ ecx + edi * 4 - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov edx eax
sub edx ecx
mov ecx [ ebp + 0x8 ]
add edx ecx
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
lea edx [ ecx - 0x1 ]
mov [ ebx + edi * 4 + 0x4 ] edx
mov eax 0x3
add edi 0x2
mov eax edi
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_422710
mov edx [ esi + 0x2c ]
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x14 ]
push edx
mov edx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push edx
mov edx [ ebp - 0x10 ]
push eax
push ecx
push edx
push ebx
call sub_4229a0
add esp 0x20
jmp r-xdata
inc eax
inc edx
cmp eax ebx
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov bl [ edx ]
cmp bl [ eax + ecx ]
mov ebx [ ebp - 0x4 ]
jne r-xdata
sub_422f90
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp eax 0x4
jae r-xdata
mov eax [ esi ]
movzx ecx [ eax ]
movzx edx [ eax + 0x1 ]
xor edx [ esi + ecx * 4 + 0x70 ]
push ebx
movzx ebx [ eax + 0x2 ]
mov [ ebp + 0x8 ] eax
movzx eax [ eax + 0x3 ]
mov [ ebp - 0x10 ] eax
mov ecx ebx
lea eax [ ebx * 8 ]
mov ebx [ ebp - 0x10 ]
xor eax [ esi + ebx * 4 + 0x70 ]
mov ebx [ esi + 0x4 ]
shl eax 0x5
shl ecx 0x8
xor eax edx
and eax [ esi + 0x28 ]
xor ecx edx
push edi
mov edi edx
mov edx [ esi + 0x20 ]
and edi 0x3ff
sub ebx [ edx + edi * 4 ]
and ecx 0xffff
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + 0x4 ]
sub ebx [ edx + ecx * 4 + 0x1000 ]
mov [ ebp - 0xc ] ebx
mov ebx [ edx + eax * 4 + 0x41000 ]
mov [ ebp - 0x10 ] ebx
mov ebx [ esi + 0x4 ]
mov [ edx + eax * 4 + 0x41000 ] ebx
mov edx [ esi + 0x20 ]
mov eax [ edx + eax * 4 + 0x41000 ]
mov ebx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x1000 ] eax
mov eax [ esi + 0x20 ]
mov ecx [ eax + ecx * 4 + 0x1000 ]
mov [ eax + edi * 4 ] ecx
mov ecx [ ebp - 0x14 ]
xor edi edi
mov eax 0x1
cmp ecx [ esi + 0x18 ]
jae r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0xc ]
cmp ecx edx
je r-xdata
mov edx ebx
sub edx ecx
mov dl [ edx ]
cmp dl [ ebx ]
jne r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_422710
test edi edi
je r-xdata
cmp edx [ esi + 0x18 ]
jae r-xdata
mov edx [ ebp + 0xc ]
lea edi [ ecx - 0x1 ]
mov eax 0x2
mov [ edx + 0x4 ] edi
mov [ edx ] eax
mov edi eax
cmp eax 0x3
jae r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
sub ebx edx
mov dl [ ebx ]
mov ebx [ ebp + 0x8 ]
cmp dl [ ebx ]
jne r-xdata
mov edx [ esi + 0x2c ]
mov ebx [ esi ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ eax + edi * 4 ]
mov eax [ esi + 0x18 ]
push ecx
mov ecx [ esi + 0x14 ]
push edx
mov edx [ esi + 0x24 ]
push eax
mov eax [ esi + 0x4 ]
push ecx
mov ecx [ ebp - 0x10 ]
push edx
mov edx [ ebp - 0x4 ]
push eax
push ecx
push edx
call sub_422790
mov ebx eax
sub ebx [ ebp + 0xc ]
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
add esp 0x24
sar ebx 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax 0x3
mov edx [ ebp + 0xc ]
mov [ edx + edi * 4 - 0x8 ] eax
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx eax
sub edx ecx
add edx ebx
mov ecx [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
lea edx [ ecx - 0x1 ]
mov [ ebx + edi * 4 + 0x4 ] edx
mov ebx [ ebp + 0x8 ]
mov eax 0x3
add edi 0x2
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_422710
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x24 ]
mov edx [ ebp - 0x10 ]
mov [ ecx + eax * 4 ] edx
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
inc eax
inc edx
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax edi
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
call sub_422710
mov cl [ edx ]
cmp cl [ eax + ebx ]
jne r-xdata
sub_423180
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x10 ]
cmp edx 0x3
jae r-xdata
mov ecx [ esi ]
movzx eax [ ecx ]
push ebx
push edi
movzx edi [ ecx + 0x2 ]
movzx ecx [ ecx + 0x1 ]
shl eax 0x8
or eax edi
xor eax [ esi + ecx * 4 + 0x70 ]
mov ecx [ esi + 0x20 ]
mov edi [ esi + 0x4 ]
and eax 0xffff
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov [ eax ] edi
mov edi [ ebp + 0xc ]
mov eax [ esi + 0x2c ]
mov ebx [ esi ]
push 0x2
push edi
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_422790
mov ebx eax
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
sub ebx edi
add esp 0x24
sar ebx 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
add [ esi ] eax
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
pop edi
mov eax ebx
pop ebx
pop esi
pop ebp
retn
mov eax esi
call sub_422710
xor eax eax
pop esi
pop ebp
retn
mov eax esi
call sub_422710
sub_423230
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
mov edi edi
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
movzx eax [ ecx + 0x1 ]
movzx ecx [ ecx ]
mov ebx [ esi + 0x4 ]
shl eax 0x8
or eax ecx
mov ecx [ esi + 0x20 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov [ eax ] ebx
mov eax [ esi + 0x2c ]
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_4229a0
add esp 0x20
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_422710
mov edx [ esi + 0x10 ]
cmp edx 0x2
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4232b0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
mov edi edi
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
movzx eax [ ecx ]
movzx ebx [ ecx + 0x2 ]
movzx ecx [ ecx + 0x1 ]
shl eax 0x8
or eax ebx
xor eax [ esi + ecx * 4 + 0x70 ]
mov ecx [ esi + 0x20 ]
mov ebx [ esi + 0x4 ]
and eax 0xffff
lea eax [ ecx + eax * 4 ]
mov ecx [ eax ]
mov [ eax ] ebx
mov eax [ esi + 0x2c ]
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
push edx
call sub_4229a0
add esp 0x20
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_422710
mov edx [ esi + 0x10 ]
cmp edx 0x3
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_423340
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
mov edi edi
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
movzx edx [ ecx ]
movzx eax [ ecx + 0x1 ]
xor eax [ esi + edx * 4 + 0x70 ]
movzx ecx [ ecx + 0x2 ]
mov edx [ esi + 0x20 ]
mov ebx [ esi + 0x4 ]
shl ecx 0x8
xor ecx eax
and ecx [ esi + 0x28 ]
mov edi [ edx + ecx * 4 + 0x1000 ]
lea edx [ edx + ecx * 4 + 0x1000 ]
mov [ edx ] ebx
mov edx [ esi + 0x20 ]
mov ecx [ edx + ecx * 4 + 0x1000 ]
and eax 0x3ff
mov [ edx + eax * 4 ] ecx
mov edx [ esi + 0x2c ]
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x14 ]
push edx
mov edx [ esi + 0x24 ]
push eax
mov eax [ esi ]
push ecx
mov ecx [ esi + 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edi
push edx
call sub_4229a0
add esp 0x20
mov edi 0x1
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_422710
mov eax [ esi + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x3
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4233f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
nop
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
movzx edi [ eax + 0x2 ]
movzx edx [ eax ]
movzx ebx [ eax + 0x3 ]
movzx ecx [ eax + 0x1 ]
xor ecx [ esi + edx * 4 + 0x70 ]
lea eax [ edi * 8 ]
xor eax [ esi + ebx * 4 + 0x70 ]
mov edx edi
mov edi [ esi + 0x20 ]
shl eax 0x5
xor eax ecx
and eax [ esi + 0x28 ]
shl edx 0x8
mov ebx [ edi + eax * 4 + 0x41000 ]
xor edx ecx
and edx 0xffff
mov [ ebp + 0x8 ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + edx * 4 + 0x1000 ] ebx
mov edi [ esi + 0x20 ]
mov edx [ edi + edx * 4 + 0x1000 ]
and ecx 0x3ff
mov [ edi + ecx * 4 ] edx
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x4 ]
mov [ ecx + eax * 4 + 0x41000 ] edx
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x14 ]
push eax
mov eax [ esi + 0x24 ]
push ecx
mov ecx [ esi ]
push edx
mov edx [ esi + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
push edx
push eax
push ecx
call sub_4229a0
add esp 0x20
mov edi 0x1
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_422710
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp eax 0x4
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4234d0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
mov edi edi
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
movzx edi [ eax + 0x2 ]
movzx edx [ eax ]
movzx ebx [ eax + 0x3 ]
movzx ecx [ eax + 0x1 ]
xor ecx [ esi + edx * 4 + 0x70 ]
lea eax [ edi * 8 ]
xor eax [ esi + ebx * 4 + 0x70 ]
mov edx edi
mov edi [ esi + 0x20 ]
shl eax 0x5
xor eax ecx
and eax [ esi + 0x28 ]
mov ebx [ edi + eax * 4 + 0x41000 ]
lea edi [ edi + eax * 4 + 0x41000 ]
shl edx 0x8
mov [ ebp + 0x8 ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi ] ebx
mov edi [ esi + 0x20 ]
mov eax [ edi + eax * 4 + 0x41000 ]
xor edx ecx
and edx 0xffff
mov [ edi + edx * 4 + 0x1000 ] eax
mov eax [ esi + 0x20 ]
mov edx [ eax + edx * 4 + 0x1000 ]
and ecx 0x3ff
mov [ eax + ecx * 4 ] edx
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x24 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + eax * 4 ] edx
mov edi 0x1
sub [ ebp + 0xc ] edi
jne r-xdata
mov eax esi
call sub_422710
cmp [ esi + 0x10 ] 0x4
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4235a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
add [ esi + 0x4 ] edi
mov eax [ esi + 0x4 ]
add [ esi + 0x14 ] edi
add [ esi ] edi
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
movzx eax [ ecx ]
movzx edx [ ecx + 0x2 ]
movzx ecx [ ecx + 0x1 ]
shl eax 0x8
or eax edx
xor eax [ esi + ecx * 4 + 0x70 ]
mov edx [ esi + 0x20 ]
and eax 0xffff
mov ecx [ edx + eax * 4 ]
lea eax [ edx + eax * 4 ]
mov edx [ esi + 0x4 ]
mov [ eax ] edx
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x24 ]
mov [ edx + eax * 4 ] ecx
sub ebx edi
jne r-xdata
mov eax esi
call sub_422710
cmp [ esi + 0x10 ] 0x3
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_423610
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] sub_4225f0
mov [ eax + 0x4 ] sub_422080
mov [ eax + 0x8 ] sub_422090
mov [ eax + 0xc ] sub_422070
cmp [ ecx + 0x54 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x48 ]
cmp ecx 0x2
jne r-xdata
mov [ eax + 0x10 ] sub_422f90
mov [ eax + 0x14 ] sub_4234d0
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov [ eax + 0x10 ] sub_422ad0
mov [ eax + 0x14 ] sub_423230
pop ebp
retn
mov [ eax + 0x10 ] sub_422da0
mov [ eax + 0x14 ] sub_4233f0
pop ebp
retn
mov [ eax + 0x10 ] sub_422c20
mov [ eax + 0x14 ] sub_423340
pop ebp
retn
sub_423690
push ebp
mov ebp esp
sub esp 0x1a0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x198 ] ecx
mov [ ebp - 0x190 ] eax
xor eax eax
xor ebx ebx
mov ecx 0x40
lea edi [ ebp - 0x18c ]
[ edi ]
test edx edx
je r-xdata
mov eax 0x1
mov edi edi
mov ecx [ ebp - 0x190 ]
mov ecx [ ecx + eax * 4 ]
cmp ecx 0x3f
jb r-xdata
mov ecx [ ebp + eax * 4 - 0x18c ]
mov [ ebp + eax * 4 - 0x18c ] ebx
inc eax
add ebx ecx
cmp eax 0x40
jb r-xdata
xor edi edi
mov [ ebp - 0x1a0 ] ebx
test edx edx
je r-xdata
inc [ ebp + ecx * 4 - 0x18c ]
lea ecx [ ebp + ecx * 4 - 0x18c ]
inc eax
cmp eax edx
jb r-xdata
mov ecx 0x3f
mov eax [ ebp - 0x94 ]
mov edx [ ebp - 0x90 ]
sub edx eax
push edx
lea eax [ esi + eax * 4 ]
push eax
call sub_431750
add esp 0x8
cmp ebx 0x2
jae r-xdata
mov eax [ ebp - 0x190 ]
mov eax [ eax + edi * 4 ]
test eax eax
jne r-xdata
xor ecx ecx
xor eax eax
xor edx edx
mov [ ebp - 0x190 ] ecx
mov [ ebp - 0x194 ] edx
jmp r-xdata
mov eax 0x1
cmp ebx eax
jne r-xdata
mov ecx eax
cmp eax 0x3f
jb r-xdata
mov ecx [ ebp - 0x198 ]
mov [ ecx + edi ] al
jmp r-xdata
cmp edx ebx
je r-xdata
mov ecx [ ebp - 0x198 ]
mov [ esi ] 0x0
mov [ esi + eax * 4 ] 0x1
pop edi
pop esi
mov [ ecx + eax ] 0x1
mov [ ecx ] 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov eax [ esi ]
and eax 0x3ff
jne r-xdata
mov edx [ ebp + ecx * 4 - 0x18c ]
lea ecx [ ebp + ecx * 4 - 0x18c ]
shl eax 0xa
or eax edi
mov [ esi + edx * 4 ] eax
inc edx
mov [ ecx ] edx
mov edx [ ebp + 0x14 ]
mov ecx 0x3f
inc edi
cmp edi edx
jb r-xdata
mov ebx ecx
inc ecx
mov [ ebp - 0x190 ] ecx
cmp ecx eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0x190 ]
mov ebx ecx
inc ecx
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x190 ] ecx
mov ebx [ ebp - 0x190 ]
cmp ebx eax
je r-xdata
mov ebx edx
inc edx
mov [ ebp - 0x194 ] edx
jmp r-xdata
mov edi [ esi + ecx * 4 ]
mov ebx [ esi + edx * 4 ]
and edi 0xfffffc00
and ebx 0xfffffc00
cmp ebx edi
ja r-xdata
mov edx [ ebp - 0x194 ]
mov ecx [ ebp - 0x190 ]
and [ esi + eax * 4 - 0x4 ] 0x3ff
mov edi [ ebp + 0x18 ]
xor ecx ecx
dec eax
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x44 ] 0x2
test eax eax
je r-xdata
mov ebx ecx
mov [ ebp - 0x19c ] ecx
inc ecx
mov [ ebp - 0x194 ] ecx
jmp r-xdata
mov ebx [ esi + ebx * 4 ]
mov ecx [ esi + ecx * 4 ]
and ebx 0xfffffc00
and ecx 0xfffffc00
cmp ecx ebx
ja r-xdata
mov ecx [ esi + ebx * 4 ]
mov edx ecx
mov edi eax
and ecx 0x3ff
shl edi 0xa
or ecx edi
mov [ esi + ebx * 4 ] ecx
mov ecx [ ebp - 0x194 ]
and edx 0xfffffc00
cmp ecx [ ebp - 0x1a0 ]
je r-xdata
xor eax eax
mov ecx edi
test edi edi
mov edi [ ebp - 0x198 ]
je r-xdata
nop
mov ecx [ esi + ebx * 4 ]
mov ebx ecx
and ecx 0x3ff
or ecx edi
mov edi [ ebp - 0x19c ]
mov [ esi + edi * 4 ] ecx
mov ecx [ esi + eax * 4 ]
and ebx 0xfffffc00
add edx ebx
mov ebx [ ebp - 0x1a0 ]
and ecx 0x3ff
or ecx edx
mov [ esi + eax * 4 ] ecx
inc eax
mov edx ebx
sub edx eax
cmp edx 0x1
ja r-xdata
mov ecx [ ebp - 0x194 ]
xor ecx ecx
mov eax 0x4
lea ebx [ ebx ]
mov edx [ ebp + ecx * 4 - 0x48 ]
test edx edx
je r-xdata
dec [ ebp + ecx * 4 - 0x48 ]
add [ ebp + ecx * 4 - 0x44 ] 0x2
lea ecx [ ebp + ecx * 4 - 0x44 ]
test eax eax
jne r-xdata
lea ecx [ edi - 0x1 ]
cmp [ ebp + ecx * 4 - 0x48 ] 0x0
jne r-xdata
mov edx [ ebp + eax - 0x4c ]
add edx ecx
lea ecx [ edx + edx ]
mov [ ebp + eax - 0x8c ] ecx
add eax 0x4
cmp eax 0x40
jbe r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
test edx edx
je r-xdata
dec ecx
jne r-xdata
nop
mov edx [ esi + eax * 4 - 0x4 ]
dec eax
mov ecx edx
shr ecx 0xa
mov ecx [ esi + ecx * 4 ]
shr ecx 0xa
inc ecx
mov ebx ecx
and edx 0x3ff
shl ebx 0xa
or edx ebx
mov [ esi + eax * 4 ] edx
cmp ecx edi
jb r-xdata
nop
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
movzx ecx [ edi + eax ]
mov ecx [ ebp + ecx * 4 - 0x8c ]
mov [ esi + eax * 4 ] ecx
movzx ecx [ edi + eax ]
inc [ ebp + ecx * 4 - 0x8c ]
lea ecx [ ebp + ecx * 4 - 0x8c ]
inc eax
cmp eax edx
jb r-xdata
mov ebx [ esi + eax * 4 ]
and ebx 0x3ff
inc eax
dec edx
mov [ ebx + edi ] cl
jne r-xdata
dec ecx
cmp [ ebp + ecx * 4 - 0x48 ] 0x0
je r-xdata
sub_423a30
xor edx edx
mov eax edx
and eax 0x1
dec eax
not eax
and eax 0xedb88320
mov ecx edx
shr ecx 0x1
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov eax ecx
and eax 0x1
dec eax
shr ecx 0x1
not eax
and eax 0xedb88320
xor eax ecx
mov ecx eax
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr eax 0x1
xor ecx eax
mov [ edx * 4 + rwxdata ] ecx
inc edx
cmp edx 0x100
jb r-xdata
cmp edx 0x800
jae r-xdata
mov [ rwxdata ] sub_431830
call sub_431a70
test eax eax
jne r-xdata
lea esp [ esp ]
retn
mov [ rwxdata ] sub_4318e0
mov eax [ edx * 4 + rwxdata ]
mov ecx eax
and ecx 0xff
shr eax 0x8
xor eax [ ecx * 4 + rwxdata ]
inc edx
mov [ edx * 4 + rwxdata ] eax
cmp edx 0x800
jb r-xdata
sub_423b60
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x38 ]
mov eax [ edi + 0x10 ]
mov edx [ edi + 0x3c ]
mov [ ebp - 0x20 ] eax
mov eax [ edi + 0x40 ]
mov ebx [ edi + 0x34 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ edi + 0x44 ]
mov esi [ edi + 0x20 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x38 ] ecx
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x2c ] edx
mov edx 0x1
shl edx cl
mov ecx [ edi + 0x4 ]
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x14 ]
dec edx
mov [ ebp - 0x34 ] ecx
mov ecx [ edi + 0x24 ]
dec eax
mov [ ebp - 0x48 ] eax
mov eax [ edi ]
mov [ ebp - 0x40 ] eax
mov eax [ edi + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ edi + 0x2c ]
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi + 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x1c ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x28 ] 0x0
mov edx eax
shr edx 0xb
imul edx ecx
cmp esi edx
jae r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx ]
shl esi 0x8
shl eax 0x8
or esi edx
inc [ ebp - 0x4 ]
sub eax edx
sub esi edx
mov edx ecx
shr edx 0x5
sub ecx edx
mov edx [ ebp - 0x8 ]
mov [ edx ] cx
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + ebx * 2 + 0x180 ]
cmp eax 0x1000000
jae r-xdata
mov eax edx
mov edx 0x800
sub edx ecx
shr edx 0x5
add edx ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] dx
mov edx [ ebp - 0x20 ]
add edx 0xe6c
cmp [ ebp - 0x3c ] 0x0
mov [ ebp - 0x8 ] edx
jne r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
test ecx ecx
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
cmp [ ebp - 0x3c ] 0x0
mov [ ecx + ebx * 2 + 0x180 ] dx
jne r-xdata
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ecx + ebx * 2 + 0x180 ] di
add ebx 0xc
add ecx 0x664
jmp r-xdata
mov edx [ ebp - 0x34 ]
movzx ebx [ ecx + edx - 0x1 ]
mov edx [ ebp - 0x10 ]
and edx [ ebp - 0x48 ]
mov ecx 0x8
sub cl [ ebp - 0x40 ]
shr ebx cl
mov ecx [ ebp - 0x40 ]
shl edx cl
add ebx edx
mov edx [ ebp - 0x8 ]
imul ebx ebx 0x600
add edx ebx
mov ebx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x24 ]
cmp ebx 0x7
jae r-xdata
movzx edx [ ecx + ebx * 2 + 0x198 ]
cmp eax 0x1000000
jae r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx edx [ ecx ]
mov [ ebp - 0x14 ] ebx
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] 0x100
sbb edx edx
and edx [ ebp - 0x24 ]
sub edx [ ebp - 0x18 ]
add edx [ edi + 0x14 ]
cmp ebx 0xa
movzx edi [ edx + ecx ]
sbb edx edx
and edx 0xfffffffd
add edx 0x6
sub ebx edx
mov [ ebp - 0x14 ] ebx
mov ecx 0x1
jmp r-xdata
mov ecx ebx
cmp ebx 0x4
jb r-xdata
mov edi eax
shr edi 0xb
imul edi edx
mov [ ebp - 0x4c ] edi
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov ebx [ ebp - 0x8 ]
add edi edi
and edx edi
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x1c ]
add edi edx
add edi ecx
lea edi [ ebx + edi * 2 ]
mov [ ebp - 0x44 ] edi
movzx edi [ edi ]
cmp eax 0x1000000
jae r-xdata
sub ebx ecx
mov [ ebp - 0x14 ] ebx
mov ecx 0x1
jmp r-xdata
mov ecx 0x3
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + ebx * 2 + 0x198 ] dx
movzx edx [ ecx + ebx * 2 + 0x1b0 ]
cmp eax 0x1000000
jae r-xdata
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
lea edx [ ebx + 0xf ]
shl edx 0x4
add edx [ ebp - 0x1c ]
mov [ ecx + ebx * 2 + 0x198 ] di
lea edx [ ecx + edx * 2 ]
mov edi eax
mov [ ebp - 0x8 ] edx
movzx edx [ edx ]
cmp edi 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx ] dx
movzx edx [ ecx + 0x2 ]
cmp eax 0x1000000
jae r-xdata
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x1c ]
add edx edx
mov [ ecx ] di
lea edi [ ecx + edx * 8 + 0x4 ]
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] 0x8
jmp r-xdata
mov ebx eax
shr ebx 0xb
imul ebx edi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl esi 0x8
shl eax 0x8
or esi ebx
inc [ ebp - 0x4 ]
movzx edi [ edx + ecx * 2 ]
cmp eax 0x1000000
jae r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
shl edi 0x8
mov eax edi
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov [ ebp - 0x28 ] edi
mov edx 0x1
lea ecx [ ecx ]
sub eax ebx
sub esi ebx
mov ebx edi
shr ebx 0x5
sub edi ebx
mov ebx [ ebp - 0x44 ]
mov [ ebx ] di
lea ecx [ ecx + ecx + 0x1 ]
mov eax ebx
mov ebx 0x800
sub ebx edi
shr ebx 0x5
add ebx edi
mov edi [ ebp - 0x44 ]
mov [ edi ] bx
add ecx ecx
not edx
jmp r-xdata
mov ebx eax
shr ebx 0xb
imul ebx edi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx ]
shl esi 0x8
shl eax 0x8
or esi ebx
inc [ ebp - 0x4 ]
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + ebx * 2 + 0x1b0 ] dx
movzx edx [ ecx + ebx * 2 + 0x1c8 ]
cmp eax 0x1000000
jae r-xdata
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x2c ]
mov [ ecx + ebx * 2 + 0x1b0 ] di
jmp r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x8 ]
mov [ edi ] dx
jmp r-xdata
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0x8 ]
mov [ edx ] cx
mov ecx [ ebp - 0x18 ]
mov eax edi
mov edi [ ebp - 0xc ]
cmp edi ecx
sbb edx edx
and edx [ ebp - 0x24 ]
inc [ ebp - 0x10 ]
sub edx ecx
mov ecx [ ebp - 0x34 ]
add edx edi
mov dl [ edx + ecx ]
mov [ edi + ecx ] dl
inc edi
cmp ebx 0x7
sbb ecx ecx
and ecx 0xfffffffe
add ecx 0xb
mov [ ebp - 0x14 ] ecx
jmp r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + 0x2 ] dx
lea edi [ ecx + 0x204 ]
mov [ ebp - 0x8 ] 0x10
mov [ ebp - 0x1c ] 0x100
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x2 ] di
add edx edx
lea edi [ ecx + edx * 8 + 0x104 ]
mov ecx 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi ecx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edi [ ebp - 0x4c ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x34 ]
mov [ edx + edi ] cl
inc edx
inc [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
and [ ebp - 0x1c ] edx
cmp ecx 0x100
jb r-xdata
sub eax ebx
sub esi ebx
mov ebx edi
shr ebx 0x5
sub edi ebx
mov [ edx + ecx * 2 ] di
lea ecx [ ecx + ecx + 0x1 ]
mov eax ebx
mov ebx 0x800
sub ebx edi
shr ebx 0x5
add ebx edi
mov [ edx + ecx * 2 ] bx
add ecx ecx
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x18 ] edx
cmp ebx 0x7
sbb ebx ebx
and ebx 0xfffffffd
add ebx 0xb
add ecx 0xa68
mov [ ebp - 0xc ] edi
sub eax edi
sub esi edi
mov edi ecx
shr edi 0x5
sub ecx edi
mov edi [ ebp - 0x28 ]
mov [ edi + edx * 2 ] cx
lea edx [ edx + edx + 0x1 ]
mov eax edi
mov edi 0x800
sub edi ecx
shr edi 0x5
add edi ecx
mov ecx edi
mov edi [ ebp - 0x28 ]
mov [ edi + edx * 2 ] cx
add edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
jmp r-xdata
cmp ecx 0x100
jb r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x30 ]
mov [ ecx + ebx * 2 + 0x1c8 ] dx
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x38 ] edi
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x30 ]
mov [ ecx + ebx * 2 + 0x1c8 ] di
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp eax 0x1000000
jae r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
movzx ecx [ edi + edx * 2 ]
cmp eax 0x1000000
jae r-xdata
mov edi [ ebp - 0x8 ]
sub edi ecx
add edx edi
mov [ ebp - 0x28 ] edx
cmp ebx 0xc
jb r-xdata
mov ecx [ ebp - 0x1c ]
cmp edx ecx
jb r-xdata
mov edi [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edi
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + 0x18 ] edx
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ecx + 0x48 ] edx
mov edx [ ebp - 0x10 ]
mov [ ecx + 0x38 ] eax
mov eax [ ebp - 0x30 ]
mov [ ecx + 0x2c ] edx
mov edx [ ebp - 0x2c ]
mov [ ecx + 0x40 ] eax
mov eax [ ebp - 0x14 ]
pop edi
mov [ ecx + 0x20 ] esi
mov [ ecx + 0x3c ] edx
mov edx [ ebp - 0x38 ]
pop esi
mov [ ecx + 0x34 ] eax
mov [ ecx + 0x44 ] edx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx ecx [ edx ]
shl esi 0x8
shl eax 0x8
or esi ecx
inc edx
mov edx [ ebp - 0x50 ]
mov ebx [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp - 0xc ]
add edx 0x2
cmp ecx edi
je r-xdata
mov ecx edx
cmp edx 0x4
jb r-xdata
mov ecx [ ebp - 0x10 ]
and ecx edx
mov edx ebx
shl edx 0x4
add edx ecx
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] ecx
movzx ecx [ ecx ]
cmp eax 0x1000000
jae r-xdata
sub ecx edi
mov [ ebp - 0xc ] ecx
cmp ecx edx
jb r-xdata
mov edx [ ebp - 0x20 ]
shl ecx 0x7
lea ecx [ ecx + edx + 0x360 ]
movzx edx [ ecx + 0x2 ]
cmp eax 0x1000000
jae r-xdata
mov ecx 0x3
cmp edi [ ebp - 0x18 ]
mov ebx [ ebp - 0xc ]
sbb ecx ecx
and ecx [ ebp - 0x24 ]
add [ ebp - 0x10 ] ebx
sub ecx [ ebp - 0x18 ]
sub edx ebx
add ecx edi
mov [ ebp - 0x28 ] edx
lea edx [ ecx + ebx ]
cmp edx [ ebp - 0x24 ]
mov edx [ ebp - 0x34 ]
ja r-xdata
mov [ ebp - 0xc ] edx
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx ebx [ edi ]
shl esi 0x8
shl eax 0x8
or esi ebx
inc edi
mov [ ebp - 0x4 ] edi
mov bl [ ecx + edx ]
mov [ edi + edx ] bl
inc ecx
inc edi
cmp ecx [ ebp - 0x24 ]
jne r-xdata
add edx edi
add ebx edx
sub ecx edi
add edi [ ebp - 0xc ]
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0xc ] edi
nop
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + 0x2 ] dx
mov edx 0x3
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ecx + 0x2 ] di
mov edx 0x2
jmp r-xdata
dec [ ebp - 0xc ]
jne r-xdata
xor ecx ecx
mov bl [ ecx + edx ]
mov [ edx ] bl
inc edx
cmp edx [ ebp - 0x4c ]
jne r-xdata
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
lea ebx [ edx + edx ]
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add ebx ebx
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add ebx ebx
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add ebx ebx
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add ebx ebx
movzx edx [ ebx + ecx ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ebx + ecx ] dx
inc ebx
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ebx + ecx ] di
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x30 ] edx
lea edx [ ebx + 0x1 ]
mov [ ebp - 0x18 ] edx
test ecx ecx
jne r-xdata
mov ecx ebx
mov edx ebx
mov edi 0x1
shr ecx 0x1
and ebx edi
sub ecx edi
or ebx 0x2
mov [ ebp - 0x44 ] ecx
cmp edx 0xe
jae r-xdata
sub ebx 0x40
cmp ebx 0x4
jb r-xdata
cmp ebx ecx
cmp ebx [ ebp - 0x10 ]
jmp r-xdata
sub ecx 0x4
lea esp [ esp ]
shl ebx cl
mov [ ebp - 0x38 ] edi
mov ecx ebx
sub ecx edx
mov edx [ ebp - 0x20 ]
lea ecx [ edx + ecx * 2 + 0x55e ]
mov [ ebp - 0x8 ] ecx
lea esp [ esp ]
cmp [ ebp - 0x14 ] 0x13
mov edx [ ebp - 0x28 ]
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0xa
mov [ ebp - 0x14 ] ecx
jae r-xdata
shr eax 0x1
sub esi eax
mov edx esi
shr edx 0x1f
neg edx
lea ebx [ edx + ebx * 2 + 0x1 ]
and edx eax
add esi edx
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edi [ edx ]
shl esi 0x8
shl eax 0x8
or esi edi
inc edx
mov [ ebp - 0x4 ] edx
mov ecx eax
shr ecx 0xb
imul ecx edx
cmp esi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
shl esi 0x8
shl eax 0x8
or esi ecx
inc [ ebp - 0x4 ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp - 0x20 ]
movzx edx [ ecx + 0x646 ]
shl ebx 0x4
cmp eax 0x1000000
jae r-xdata
sub eax ecx
sub esi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0x8 ]
or ebx [ ebp - 0x38 ]
mov [ ecx + edi * 2 ] dx
lea edi [ edi + edi + 0x1 ]
mov eax ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + edi * 2 ] dx
add edi edi
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
movzx edx [ ecx + edi * 2 ]
cmp eax 0x1000000
jae r-xdata
jmp r-xdata
shl [ ebp - 0x38 ] 0x1
dec [ ebp - 0x44 ]
jne r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov [ ecx + 0x646 ] dx
mov edx 0x3
or ebx 0x1
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov [ ecx + 0x646 ] di
mov edx 0x2
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add edx edx
mov [ ebp - 0x1c ] edx
movzx edx [ edx + ecx + 0x644 ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x1c ]
mov [ edi + ecx + 0x644 ] dx
lea edx [ edi + 0x1 ]
or ebx 0x2
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x1c ]
mov [ edx + ecx + 0x644 ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
add edx edx
mov [ ebp - 0x1c ] edx
movzx edx [ edx + ecx + 0x644 ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x1c ]
mov [ edi + ecx + 0x644 ] dx
lea edx [ edi + 0x1 ]
or ebx 0x4
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x1c ]
mov [ edx + ecx + 0x644 ] di
jmp r-xdata
mov edi eax
shr edi 0xb
imul edi edx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
movzx edi [ edi ]
shl esi 0x8
shl eax 0x8
or esi edi
inc [ ebp - 0x4 ]
mov [ ebp - 0x1c ] edx
movzx edx [ ecx + edx * 2 + 0x644 ]
cmp eax 0x1000000
jae r-xdata
sub eax edi
sub esi edi
mov edi edx
shr edi 0x5
sub edx edi
mov edi [ ebp - 0x1c ]
mov [ ecx + edi * 2 + 0x644 ] dx
or ebx 0x8
mov eax edi
mov edi 0x800
sub edi edx
shr edi 0x5
add edi edx
mov edx [ ebp - 0x1c ]
mov [ ecx + edx * 2 + 0x644 ] di
jmp r-xdata
add [ ebp - 0x28 ] 0x112
sub [ ebp - 0x14 ] 0xc
cmp ebx 0xffffffff
je r-xdata
sub_424750
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ esi + 0x48 ]
test ebx ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx 0x112
jae r-xdata
mov edx [ esi + 0x38 ]
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x24 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov ecx ebx
sub edx eax
push edi
mov edi [ esi + 0x14 ]
cmp edx ecx
jae r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov ecx edx
add [ esi + 0x2c ] ecx
sub ebx ecx
mov [ esi + 0x48 ] ebx
test ecx ecx
je r-xdata
mov edx [ esi + 0xc ]
sub edx [ esi + 0x2c ]
cmp edx ecx
ja r-xdata
mov [ esi + 0x24 ] eax
pop edi
cmp eax [ ebp - 0x4 ]
sbb edx edx
and edx [ ebp - 0x8 ]
sub edx [ ebp - 0x4 ]
add edx eax
mov dl [ edx + edi ]
mov [ eax + edi ] dl
inc eax
dec ecx
jne r-xdata
mov edx [ esi + 0xc ]
mov [ esi + 0x30 ] edx
sub_4247d0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_423b60
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x24 ]
sub eax [ esi + 0x2c ]
mov ebx edi
sub ebx ecx
cmp ebx eax
jbe r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ esi + 0x2c ] eax
jb r-xdata
lea edx [ ecx + eax ]
push edi
call sub_424750
cmp [ esi + 0x24 ] edi
jae r-xdata
mov [ esi + 0x30 ] eax
mov eax 0x112
cmp [ esi + 0x18 ] ebx
jae r-xdata
xor eax eax
mov [ esi + 0x48 ] eax
mov eax 0x112
cmp [ esi + 0x48 ] eax
jb r-xdata
cmp [ esi + 0x30 ] 0x0
mov edx edi
jne r-xdata
jmp r-xdata
cmp [ esi + 0x48 ] eax
jbe r-xdata
sub_424840
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ edi + 0x1c ]
mov esi [ edi + 0x20 ]
add ecx eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ edi + 0x34 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi + 0x8 ]
mov ebx 0x1
shl ebx cl
mov ecx [ ebp - 0xc ]
shl ecx 0x4
mov [ ebp - 0x8 ] eax
dec ebx
and ebx [ edi + 0x2c ]
add ecx ebx
movzx eax [ eax + ecx * 2 ]
mov [ ebp - 0x10 ] eax
cmp edx 0x1000000
jae r-xdata
mov eax edx
shr eax 0xb
imul eax [ ebp - 0x10 ]
cmp esi eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
sub edx eax
sub esi eax
mov eax [ ebp - 0x8 ]
movzx ecx [ eax + ecx * 2 + 0x180 ]
cmp edx 0x1000000
jae r-xdata
mov edx eax
mov eax [ ebp - 0x8 ]
add eax 0xe6c
cmp [ edi + 0x30 ] 0x0
mov [ ebp - 0xc ] eax
jne r-xdata
xor eax eax
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
mov eax edx
shr eax 0xb
imul eax ecx
cmp esi eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov ecx [ edi + 0x24 ]
test ecx ecx
jne r-xdata
cmp [ edi + 0x2c ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
sub edx eax
sub esi eax
mov eax [ ebp - 0xc ]
movzx edi [ ecx + eax * 2 + 0x198 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] 0x3
cmp edx 0x1000000
jae r-xdata
mov edi [ ebp - 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0x0
add edi 0x664
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
movzx edi [ eax ]
shl esi 0x8
shl edx 0x8
or esi edi
inc eax
mov [ ebp + 0x8 ] eax
mov ebx [ edi + 0x14 ]
movzx ebx [ ebx + ecx - 0x1 ]
mov eax [ edi ]
mov ecx 0x8
sub cl al
shr ebx cl
mov ecx [ edi + 0x4 ]
mov eax 0x1
shl eax cl
mov ecx [ edi ]
dec eax
and eax [ edi + 0x2c ]
shl eax cl
add ebx eax
imul ebx ebx 0x600
add [ ebp - 0xc ] ebx
mov ecx [ edi + 0x28 ]
cmp [ edi + 0x34 ] 0x7
jae r-xdata
mov ecx edx
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
cmp edx 0x1000000
jae r-xdata
mov ecx [ edi + 0x24 ]
mov ebx [ edi + 0x38 ]
cmp ecx ebx
jae r-xdata
mov ecx 0x1
jmp r-xdata
mov edi [ ebp - 0xc ]
sub edx ecx
sub esi ecx
mov ecx [ ebp - 0x8 ]
movzx edi [ ecx + edi * 2 + 0x1b0 ]
cmp edx 0x1000000
jae r-xdata
mov eax [ ebp - 0xc ]
mov edi [ ebp - 0x8 ]
add eax 0xf
shl eax 0x4
add eax ebx
movzx edi [ edi + eax * 2 ]
mov eax [ ebp + 0x8 ]
mov edx ecx
cmp ecx 0x1000000
jae r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
movzx eax [ edi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
xor eax eax
mov eax [ edi + 0x28 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
movzx edi [ eax + ecx * 2 ]
cmp edx 0x1000000
jae r-xdata
mov ecx edx
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov ecx edx
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
sub edx ecx
sub esi ecx
cmp edx 0x1000000
jae r-xdata
add ebx ebx
mov edx ecx
lea ebx [ edi + ebx * 8 + 0x4 ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x8
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
mov ecx edx
shr ecx 0xb
imul ecx [ ebp - 0x10 ]
cmp esi ecx
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp - 0x4 ]
jae r-xdata
mov edi [ edi + 0x14 ]
sub edi ebx
add edi ecx
movzx ecx [ edi + eax ]
mov [ ebp - 0x8 ] 0x100
mov edi 0x1
mov edi edi
mov eax edx
shr eax 0xb
imul eax edi
cmp esi eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edi [ ebp - 0xc ]
sub edx ecx
sub esi ecx
mov ecx [ ebp - 0x8 ]
movzx edi [ ecx + edi * 2 + 0x1c8 ]
cmp edx 0x1000000
jae r-xdata
mov edx ecx
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
sub edx ecx
sub esi ecx
cmp ecx 0x1000000
jae r-xdata
shl ecx 0x8
mov edx ecx
movzx ecx [ eax ]
shl esi 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
movzx eax [ edi + 0x2 ]
mov ecx edx
shr ecx 0xb
imul ecx eax
cmp esi ecx
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edi 0x1
sub edx ecx
sub esi ecx
lea edi [ edi + edi + 0x1 ]
mov edx ecx
add edi edi
not eax
jmp r-xdata
movzx ebx [ ecx ]
shl esi 0x8
shl edx 0x8
or esi ebx
inc ecx
mov [ ebp + 0x8 ] ecx
sub edx eax
sub esi eax
lea ecx [ ecx + ecx + 0x1 ]
mov edx eax
add ecx ecx
jmp r-xdata
movzx ebx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ebx
inc eax
mov [ ebp + 0x8 ] eax
mov ecx edx
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov edi [ ebp - 0x8 ]
mov [ ebp - 0xc ] 0xc
add edi 0xa68
pop edi
pop esi
mov eax 0x3
pop ebx
mov esp ebp
pop ebp
retn
cmp eax [ ebp - 0x4 ]
jae r-xdata
sub edx ecx
sub esi ecx
lea ebx [ edi + 0x204 ]
mov [ ebp - 0x14 ] 0x10
mov [ ebp - 0x10 ] 0x100
mov eax 0x8
add ebx ebx
mov edx ecx
lea ebx [ edi + ebx * 8 + 0x104 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
movzx eax [ ebx + edi * 2 ]
mov ecx edx
shr ecx 0xb
imul ecx eax
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
and [ ebp - 0x8 ] eax
cmp edi 0x100
jae r-xdata
cmp ecx 0x100
jb r-xdata
mov edx ecx
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
sub edx ecx
sub esi ecx
lea edi [ edi + edi + 0x1 ]
mov edx ecx
add edi edi
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
mov [ ebp + 0x8 ] eax
cmp edx 0x1000000
jae r-xdata
mov ebx [ ebp - 0x8 ]
add ecx ecx
mov eax ebx
and eax ecx
mov [ ebp - 0x18 ] ecx
lea ecx [ eax + edi ]
add ecx ebx
mov ebx [ ebp - 0xc ]
movzx ecx [ ebx + ecx * 2 ]
mov [ ebp - 0x10 ] ecx
cmp edx 0x1000000
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp edx 0x1000000
jae r-xdata
mov eax [ ebp - 0x14 ]
sub eax ecx
add edi eax
cmp [ ebp - 0xc ] 0x4
jae r-xdata
mov ecx [ ebp - 0x10 ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp [ ebp + 0x8 ] edx
jb r-xdata
mov eax [ ebp - 0x18 ]
cmp edi 0x4
jb r-xdata
mov eax [ ebp - 0x8 ]
shl edi 0x7
lea ebx [ edi + eax + 0x360 ]
mov eax [ ebp + 0x8 ]
mov edi 0x1
mov edi 0x3
mov ecx edx
shr ecx 0xb
imul ecx [ ebp - 0x10 ]
cmp esi ecx
jae r-xdata
cmp eax [ ebp - 0x4 ]
jae r-xdata
sub edx ecx
sub esi ecx
lea edi [ edi + edi + 0x1 ]
mov edx ecx
add edi edi
jmp r-xdata
movzx ecx [ eax ]
shl esi 0x8
shl edx 0x8
or esi ecx
inc eax
movzx ecx [ ebx + edi * 2 ]
mov [ ebp - 0x10 ] ecx
cmp edx 0x1000000
jae r-xdata
sub edi 0x40
mov [ ebp + 0x8 ] eax
cmp edi 0x4
jb r-xdata
cmp edi 0x40
jb r-xdata
mov ebx edi
shr ebx 0x1
dec ebx
mov [ ebp - 0x14 ] ebx
cmp edi 0xe
jae r-xdata
mov ecx [ ebp - 0x4 ]
sub ebx 0x4
mov eax edi
and eax 0x1
or eax 0x2
mov ecx ebx
shl eax cl
mov ecx [ ebp - 0x8 ]
sub eax edi
lea eax [ ecx + eax * 2 + 0x55e ]
mov [ ebp - 0xc ] eax
jmp r-xdata
shr edx 0x1
mov edi esi
sub edi edx
shr edi 0x1f
dec edi
and edi edx
sub esi edi
dec ebx
jne r-xdata
cmp eax ecx
jae r-xdata
mov eax 0x1
mov edi edi
cmp edx 0x1000000
jae r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x644
mov ebx 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x14 ] ebx
movzx edi [ eax ]
shl esi 0x8
shl edx 0x8
or esi edi
inc eax
mov edi edx
shr edi 0xb
imul edi ecx
cmp esi edi
jae r-xdata
mov edi [ ebp - 0x4 ]
cmp [ ebp + 0x8 ] edi
jae r-xdata
sub edx edi
sub esi edi
lea eax [ eax + eax + 0x1 ]
mov edx edi
add eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
movzx ebx [ edi ]
shl esi 0x8
or esi ebx
mov ebx [ ebp - 0x14 ]
shl edx 0x8
inc edi
mov [ ebp + 0x8 ] edi
mov ecx [ ebp - 0xc ]
movzx ecx [ ecx + eax * 2 ]
cmp edx 0x1000000
jae r-xdata
dec ebx
mov [ ebp - 0x14 ] ebx
jne r-xdata
sub_424e20
movzx edx [ eax + 0x1 ]
push esi
movzx esi [ eax + 0x2 ]
shl edx 0x8
or edx esi
movzx esi [ eax + 0x3 ]
movzx eax [ eax + 0x4 ]
shl edx 0x8
or edx esi
shl edx 0x8
or edx eax
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x1c ] 0xffffffff
mov [ ecx + 0x4c ] 0x0
pop esi
retn
sub_424e60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x1
mov [ eax + 0x4c ] edx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x58 ] ecx
cmp [ ebp + 0xc ] ecx
je r-xdata
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x50 ] edx
pop ebp
retn
mov [ eax + 0x50 ] edx
sub_424e90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x1
mov [ eax + 0x24 ] ecx
mov [ eax + 0x4c ] edx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x50 ] edx
pop ebp
retn
sub_424ec0
mov ecx [ edx + 0x4 ]
add ecx [ edx ]
mov eax 0x300
shl eax cl
push edi
mov edi [ edx + 0x10 ]
add eax 0x736
je r-xdata
mov eax 0x1
mov [ edx + 0x44 ] eax
mov [ edx + 0x40 ] eax
mov [ edx + 0x3c ] eax
mov [ edx + 0x38 ] eax
xor eax eax
mov [ edx + 0x34 ] eax
mov [ edx + 0x50 ] eax
pop edi
retn
mov ecx eax
push esi
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
pop esi
sub_424f10
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebx ]
push eax
mov [ ebp - 0x4 ] edi
mov [ ebx ] 0x0
call sub_424750
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x0
cmp [ esi + 0x48 ] 0x112
jne r-xdata
xor ecx ecx
cmp [ esi + 0x4c ] ecx
je r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
cmp [ esi + 0x24 ] edx
jb r-xdata
cmp edi ecx
jbe r-xdata
xor eax eax
cmp [ esi + 0x20 ] eax
pop edi
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x1
cmp [ esi + 0x50 ] ecx
je r-xdata
mov eax [ esi + 0x48 ]
cmp eax ecx
jne r-xdata
cmp [ esi + 0x58 ] 0x5
jb r-xdata
mov ecx [ esi + 0x58 ]
cmp ecx 0x5
jae r-xdata
mov eax [ esi + 0x58 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov edx [ esi + 0x10 ]
mov eax 0x300
shl eax cl
add eax 0x736
je r-xdata
cmp [ ebp + 0x18 ] ecx
je r-xdata
cmp [ esi + 0x20 ] ecx
je r-xdata
mov edx [ ebp + 0x1c ]
pop edi
pop esi
mov [ edx ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x5c ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x10 ]
mov dl [ eax ]
mov [ ecx + esi + 0x5c ] dl
inc [ esi + 0x58 ]
inc [ ebx ]
inc eax
dec edi
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ebx eax
xor edi edi
mov [ ebp - 0x8 ] edi
cmp ebx 0x14
jae r-xdata
cmp edi 0x14
jb r-xdata
mov eax 0x1
mov [ esi + 0x44 ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x38 ] eax
xor eax eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x50 ] eax
mov ebx [ ebp + 0x14 ]
mov ecx eax
mov eax 0x400
mov edi edx
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0x1c ]
pop edi
pop esi
mov [ ecx ] 0x2
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax ecx
jne r-xdata
mov eax [ ebp + 0x1c ]
pop edi
pop esi
mov [ eax ] 0x4
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
movzx eax [ esi + 0x5d ]
movzx ecx [ esi + 0x5e ]
movzx edx [ esi + 0x5f ]
shl eax 0x8
or eax ecx
movzx ecx [ esi + 0x60 ]
shl eax 0x8
or eax edx
shl eax 0x8
or eax ecx
xor ecx ecx
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x4c ] ecx
mov [ esi + 0x58 ] ecx
mov [ esi + 0x58 ] ebx
cmp ebx 0x14
jb r-xdata
mov edi edi
mov eax [ ebp + 0x10 ]
push eax
mov eax edi
mov ecx esi
call sub_424840
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x2
mov [ ebp + 0x8 ] 0x1
lea eax [ esi + 0x5c ]
push eax
mov eax ebx
mov ecx esi
call sub_424840
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] edi
mov ecx [ ebp + 0x10 ]
mov dl [ edi + ecx ]
mov [ esi + ebx + 0x5c ] dl
inc ebx
inc edi
cmp ebx 0x14
jb r-xdata
mov ecx [ ebp + 0x10 ]
push edi
lea eax [ esi + 0x5c ]
push ecx
push eax
call sub_43bd20
add esp 0xc
mov [ esi + 0x58 ] edi
add [ ebx ] edi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ebx [ ebp + 0x10 ]
lea eax [ edi + ebx - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
add [ eax ] edi
mov ecx [ ebp + 0x1c ]
pop edi
pop esi
mov [ ecx ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
lea eax [ esi + 0x5c ]
mov [ esi + 0x18 ] eax
push eax
mov eax esi
call sub_4247d0
test eax eax
jne r-xdata
cmp edi [ ebp - 0x4 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov ebx eax
cmp eax 0x2
jne r-xdata
mov edi [ ebp + 0xc ]
push eax
mov eax esi
mov [ esi + 0x18 ] ebx
call sub_4247d0
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x8 ]
sub eax ebx
sub eax esi
lea eax [ ecx + eax - 0x5c ]
mov ecx [ ebp + 0x14 ]
add [ ecx ] eax
add [ ebp + 0x10 ] eax
mov [ esi + 0x58 ] 0x0
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x14 ]
sub eax ebx
add [ ecx ] eax
add ebx eax
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x1c ]
pop edi
pop esi
mov [ eax ] 0x2
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
mov edi [ ebp - 0x4 ]
jmp r-xdata
sub [ ebp - 0x4 ] eax
cmp [ esi + 0x48 ] 0x112
jne r-xdata
sub_425200
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] edx
xor edx edx
push edi
mov edi [ eax ]
mov [ eax ] edx
mov [ ebp - 0x14 ] edi
mov [ ecx ] edx
mov eax [ esi + 0x24 ]
mov ebx ecx
sub ebx eax
mov [ ebp - 0x24 ] eax
cmp edi ebx
jbe r-xdata
mov [ esi + 0x24 ] edx
add eax edi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x20 ] edx
jmp r-xdata
xor edx edx
cmp [ esi + 0x4c ] edx
je r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp + 0x14 ]
mov edi [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] edx
call sub_424750
mov ecx [ ebp + 0x20 ]
mov [ ecx ] 0x0
cmp [ esi + 0x48 ] 0x112
jne r-xdata
mov eax [ esi + 0x24 ]
mov [ ebp - 0xc ] edx
cmp eax [ ebp - 0x10 ]
jb r-xdata
cmp edi edx
jbe r-xdata
xor edx edx
cmp [ esi + 0x20 ] edx
setne dl
mov edi edx
mov [ ecx ] 0x1
cmp [ esi + 0x50 ] edx
je r-xdata
mov eax [ esi + 0x48 ]
cmp eax edx
jne r-xdata
cmp [ esi + 0x58 ] 0x5
jb r-xdata
mov eax [ esi + 0x58 ]
cmp eax 0x5
jae r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov eax [ esi + 0x58 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov edx [ esi + 0x10 ]
mov eax 0x300
shl eax cl
add eax 0x736
je r-xdata
cmp [ ebp - 0x20 ] edx
je r-xdata
cmp [ esi + 0x20 ] edx
je r-xdata
mov [ ecx ] 0x3
xor edi edi
jmp r-xdata
cmp [ esi + 0x5c ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] edi
mov dl [ ebx ]
mov [ eax + esi + 0x5c ] dl
mov eax 0x1
add [ esi + 0x58 ] eax
add [ ebp + 0x8 ] eax
add ebx eax
sub edi eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] edi
je r-xdata
mov ebx eax
xor edi edi
mov [ ebp - 0x18 ] edi
cmp ebx 0x14
jae r-xdata
cmp edi 0x14
jb r-xdata
mov eax 0x1
mov [ esi + 0x44 ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x38 ] eax
xor eax eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x50 ] eax
mov ebx [ ebp - 0x4 ]
mov ecx eax
mov eax 0x400
mov edi edx
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
mov edi [ ebp - 0x8 ]
mov [ ecx ] 0x2
xor edi edi
jmp r-xdata
cmp eax edx
jne r-xdata
mov [ ecx ] 0x4
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
add [ ecx ] eax
add [ ebp + 0x14 ] eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov ebx [ esi + 0x24 ]
mov ecx [ esi + 0x14 ]
mov edx [ ebp + 0xc ]
sub ebx eax
push ebx
add ecx eax
push ecx
push edx
call sub_43bd20
mov eax [ ebp + 0x10 ]
add [ ebp + 0xc ] ebx
sub [ ebp - 0x14 ] ebx
add [ eax ] ebx
add esp 0xc
test edi edi
jne r-xdata
mov edi 0x1
jmp r-xdata
movzx eax [ esi + 0x5d ]
movzx edx [ esi + 0x5e ]
shl eax 0x8
or eax edx
movzx edx [ esi + 0x5f ]
shl eax 0x8
or eax edx
movzx edx [ esi + 0x60 ]
shl eax 0x8
or eax edx
xor edx edx
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x4c ] edx
mov [ esi + 0x58 ] edx
mov edi [ ebp - 0x14 ]
xor edx edx
jmp r-xdata
mov [ esi + 0x58 ] ebx
cmp ebx 0x14
jb r-xdata
lea ebx [ ebx ]
push ebx
mov eax edi
mov ecx esi
call sub_424840
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] eax
jne r-xdata
mov [ ecx ] 0x2
mov [ ebp - 0xc ] 0x1
mov ecx [ esi + 0x28 ]
cmp [ esi + 0x24 ] ecx
jne r-xdata
lea eax [ esi + 0x5c ]
push eax
mov eax ebx
mov ecx esi
call sub_424840
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x18 ] edi
mov eax [ ebp - 0x4 ]
mov cl [ edi + eax ]
mov [ esi + ebx + 0x5c ] cl
inc ebx
inc edi
cmp ebx 0x14
jb r-xdata
push edi
lea eax [ esi + 0x5c ]
push ebx
push eax
call sub_43bd20
mov ecx [ ebp + 0x20 ]
add esp 0xc
add [ ebp + 0x8 ] edi
mov [ esi + 0x58 ] edi
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea edi [ edi + ebx - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0x20 ]
add [ ebp + 0x8 ] edi
mov [ eax ] 0x3
xor edi edi
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ esi + 0x5c ]
mov [ esi + 0x18 ] eax
push eax
mov eax esi
call sub_4247d0
test eax eax
jne r-xdata
cmp edi [ ebp - 0x8 ]
jae r-xdata
mov edi ebx
cmp eax 0x2
jne r-xdata
push edi
mov edi [ ebp - 0x10 ]
mov eax esi
mov [ esi + 0x18 ] ebx
call sub_4247d0
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov edi 0x1
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x18 ]
sub edx ebx
sub edx esi
lea eax [ eax + edx - 0x5c ]
add [ ebp - 0x4 ] eax
mov [ esi + 0x58 ] 0x0
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
sub eax ecx
add ecx eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov edx [ ebp + 0x20 ]
mov [ edx ] 0x2
mov ecx [ ebp + 0x20 ]
mov ebx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub [ ebp - 0x8 ] eax
cmp [ esi + 0x48 ] 0x112
mov ecx [ ebp + 0x20 ]
jne r-xdata
sub_425580
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push eax
call ecx
add esp 0x8
mov [ esi + 0x10 ] 0x0
pop esi
pop ebp
retn
sub_4255d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
push eax
push esi
call ecx
mov edx [ edi + 0x14 ]
push edx
mov [ edi + 0x10 ] 0x0
mov eax [ esi + 0x4 ]
push esi
call eax
add esp 0x10
mov [ edi + 0x14 ] 0x0
pop edi
pop esi
pop ebp
retn
sub_425610
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x5
jae r-xdata
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x4 ]
movzx ecx [ edx + 0x3 ]
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x2 ]
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x1 ]
shl eax 0x8
or eax ecx
cmp eax 0x1000
jae r-xdata
mov eax 0x4
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
mov al [ edx ]
cmp al 0xe1
jae r-xdata
mov eax 0x1000
movzx eax al
cdq
push esi
mov esi 0x9
idiv esi
mov esi 0x5
movzx eax al
mov [ ecx ] edx
cdq
idiv esi
pop esi
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x4 ] edx
xor eax eax
pop ebp
retn
sub_425680
mov ecx [ eax + 0x4 ]
add ecx [ eax ]
mov eax [ edi + 0x10 ]
push esi
mov esi 0x300
shl esi cl
add esi 0x736
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x4 ]
push ebx
call eax
lea ecx [ esi + esi ]
push ecx
mov [ edi + 0x10 ] 0x0
mov edx [ ebx ]
push ebx
call edx
add esp 0x10
mov [ edi + 0x10 ] eax
mov [ edi + 0x54 ] esi
test eax eax
jne r-xdata
cmp esi [ edi + 0x54 ]
je r-xdata
xor eax eax
pop esi
retn
mov eax 0x2
pop esi
retn
sub_4256d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
sub esp 0x10
push eax
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_425610
add esp 0xc
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0xc ]
push esi
mov esi 0x300
shl esi cl
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
add esi 0x736
test eax eax
je r-xdata
push ebx
mov ebx [ ebp + 0x14 ]
mov edx [ ebx + 0x4 ]
push eax
push ebx
call edx
lea eax [ esi + esi ]
push eax
mov [ edi + 0x10 ] 0x0
mov ecx [ ebx ]
push ebx
call ecx
add esp 0x10
mov [ edi + 0x10 ] eax
mov [ edi + 0x54 ] esi
pop ebx
test eax eax
jne r-xdata
cmp esi [ edi + 0x54 ]
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ edi ] edx
mov edx [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
pop edi
xor eax eax
pop esi
pop edi
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
sub_425770
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
sub esp 0x10
push eax
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_425610
add esp 0xc
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0xc ]
push ebx
mov ebx 0x300
shl ebx cl
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
add ebx 0x736
push edi
mov edi [ ebp + 0x14 ]
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
push eax
push edi
call edx
lea eax [ ebx + ebx ]
push eax
mov [ esi + 0x10 ] 0x0
mov ecx [ edi ]
push edi
call ecx
add esp 0x10
mov [ esi + 0x10 ] eax
mov [ esi + 0x54 ] ebx
test eax eax
je r-xdata
cmp ebx [ esi + 0x54 ]
je r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov ebx [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
push eax
push edi
call edx
mov [ esi + 0x14 ] 0x0
mov eax [ edi ]
push ebx
push edi
call eax
add esp 0x10
mov [ esi + 0x14 ] eax
test eax eax
jne r-xdata
cmp ebx [ esi + 0x28 ]
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edx
pop edi
mov [ esi + 0x28 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor eax eax
pop ebx
mov ecx [ esi + 0x10 ]
mov edx [ edi + 0x4 ]
push ecx
push edi
call edx
add esp 0x8
mov [ esi + 0x10 ] 0x0
sub_425850
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ eax ]
push edi
mov edi [ esi ]
mov [ ebp - 0x88 ] edx
xor edx edx
mov [ ebp - 0x78 ] ecx
mov ecx [ ebp + 0x28 ]
mov [ eax ] edx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x80 ] ecx
mov [ esi ] edx
cmp edi 0x5
jae r-xdata
mov eax [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x18 ]
push eax
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x64 ] edx
push ecx
lea edx [ ebp - 0x74 ]
push edx
call sub_4256d0
xor ecx ecx
add esp 0x10
cmp eax ecx
jne r-xdata
pop edi
pop esi
lea eax [ edx + 0x6 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x84 ]
mov edx [ ebp - 0x78 ]
mov [ esi ] edi
mov edi [ ebp - 0x88 ]
push edi
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov ecx [ ebp + 0x20 ]
push ecx
mov [ ebp - 0x60 ] eax
push esi
mov eax 0x1
push edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x74 ]
push ebx
push eax
mov [ ebp - 0x4c ] ebx
call sub_424f10
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x7c ]
push eax
mov eax [ ebp - 0x80 ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
push eax
call ecx
add esp 0x8
mov eax esi
cmp [ edi ] 0x3
jne r-xdata
lea esi [ eax + 0x6 ]
sub_425980
push ebp
mov ebp esp
sub esp 0x170
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
lea ebx [ ebp - 0x144 ]
sub ebx edx
mov [ ebp - 0x170 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x160 ] ebx
push esi
mov esi [ ecx + 0x8 ]
mov [ ebp - 0x14c ] eax
mov eax [ ecx + 0xc ]
lea ebx [ ebp - 0x140 ]
sub ebx edx
push edi
mov edi [ ecx ]
mov [ ebp - 0x16c ] ecx
mov ecx [ ecx + 0x10 ]
mov [ ebp - 0x15c ] ebx
mov [ ebp - 0x154 ] ecx
xor ecx ecx
lea ebx [ ebp - 0x13c ]
sub ebx edx
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x168 ] edx
mov [ ebp - 0x158 ] ecx
lea eax [ edx + 0x8 ]
mov [ ebp - 0x150 ] ebx
jmp r-xdata
mov edx [ eax - 0x8 ]
mov [ ebp + ecx * 4 - 0x144 ] edx
mov ecx [ ebp - 0x148 ]
xor ecx esi
and ecx [ ebp - 0x14c ]
mov ebx [ ebp - 0x158 ]
xor ecx [ ebp - 0x148 ]
mov edx edi
rol edx 0x5
add edx [ eax - 0x8 ]
add eax 0x14
add ecx edx
mov edx [ ebp - 0x154 ]
lea ecx [ edx + ecx + 0x5a827999 ]
mov edx [ eax - 0x18 ]
mov [ ebp - 0x154 ] ecx
mov ecx [ ebp - 0x14c ]
rol ecx 0x1e
mov [ ebp + ebx * 4 - 0x140 ] edx
mov edx [ ebp - 0x154 ]
rol edx 0x5
add edx [ eax - 0x18 ]
mov [ ebp - 0x14c ] ecx
mov ebx esi
xor ebx ecx
mov ecx [ ebp - 0x148 ]
and ebx edi
xor ebx esi
add ebx edx
mov edx [ eax - 0x14 ]
lea ecx [ ecx + ebx + 0x5a827999 ]
mov ebx [ ebp - 0x160 ]
mov [ ebx + eax - 0x14 ] edx
mov edx [ ebp - 0x14c ]
mov ebx [ ebp - 0x15c ]
mov [ ebp - 0x148 ] ecx
rol edi 0x1e
rol ecx 0x5
add ecx [ eax - 0x14 ]
xor edx edi
and edx [ ebp - 0x154 ]
xor edx [ ebp - 0x14c ]
add edx ecx
mov ecx [ ebp - 0x154 ]
rol ecx 0x1e
mov [ ebp - 0x154 ] ecx
xor ecx edi
and ecx [ ebp - 0x148 ]
lea esi [ esi + edx + 0x5a827999 ]
mov edx [ eax - 0x10 ]
mov [ ebx + eax - 0x14 ] edx
mov ebx [ ebp - 0x150 ]
xor ecx edi
mov edx esi
rol edx 0x5
add edx [ eax - 0x10 ]
add ecx edx
mov edx [ ebp - 0x14c ]
lea edx [ edx + ecx + 0x5a827999 ]
mov ecx [ ebp - 0x148 ]
rol ecx 0x1e
mov [ ebp - 0x148 ] ecx
mov ecx [ eax - 0xc ]
mov [ ebx + eax - 0x14 ] ecx
mov ecx [ ebp - 0x154 ]
xor ecx [ ebp - 0x148 ]
mov [ ebp - 0x14c ] edx
and ecx esi
xor ecx [ ebp - 0x154 ]
rol edx 0x5
add edx [ eax - 0xc ]
add ecx edx
lea edi [ edi + ecx + 0x5a827999 ]
mov ecx [ ebp - 0x158 ]
add ecx 0x5
rol esi 0x1e
mov [ ebp - 0x158 ] ecx
cmp ecx 0xf
jl r-xdata
mov ecx [ ebp - 0x148 ]
mov edx [ ebp - 0x168 ]
mov eax [ edx + 0x3c ]
mov ebx ecx
xor ebx esi
mov [ ebp - 0x108 ] eax
mov eax [ ebp - 0x14c ]
and ebx eax
xor ebx ecx
mov ecx [ ebp - 0x154 ]
mov edx edi
rol edx 0x5
add edx [ ebp - 0x108 ]
add ebx edx
rol eax 0x1e
lea ecx [ ecx + ebx + 0x5a827999 ]
mov [ ebp - 0x14c ] eax
mov eax [ ebp - 0x144 ]
xor eax [ ebp - 0x13c ]
mov ebx [ ebp - 0x14c ]
xor eax [ ebp - 0x124 ]
mov [ ebp - 0x154 ] ecx
xor eax [ ebp - 0x110 ]
mov edx esi
xor edx [ ebp - 0x14c ]
rol eax 0x1
rol ecx 0x5
add ecx eax
and edx edi
xor edx esi
add edx ecx
mov ecx [ ebp - 0x148 ]
lea edx [ ecx + edx + 0x5a827999 ]
mov ecx [ ebp - 0x140 ]
xor ecx [ ebp - 0x138 ]
rol edi 0x1e
xor ecx [ ebp - 0x120 ]
xor ebx edi
xor ecx [ ebp - 0x10c ]
and ebx [ ebp - 0x154 ]
rol ecx 0x1
xor ebx [ ebp - 0x14c ]
mov [ ebp - 0x148 ] edx
rol edx 0x5
add edx ecx
add ebx edx
mov edx [ ebp - 0x154 ]
lea esi [ esi + ebx + 0x5a827999 ]
mov ebx [ ebp - 0x134 ]
xor ebx [ ebp - 0x11c ]
rol edx 0x1e
xor ebx [ ebp - 0x13c ]
mov [ ebp - 0x100 ] ecx
xor ebx [ ebp - 0x108 ]
mov [ ebp - 0x158 ] esi
rol ebx 0x1
rol esi 0x5
add esi ebx
mov ecx edx
xor ecx edi
and ecx [ ebp - 0x148 ]
mov [ ebp - 0xfc ] ebx
xor ecx edi
add ecx esi
mov esi [ ebp - 0x14c ]
lea ebx [ esi + ecx + 0x5a827999 ]
mov esi [ ebp - 0x130 ]
xor esi [ ebp - 0x118 ]
mov ecx [ ebp - 0x148 ]
xor esi [ ebp - 0x138 ]
rol ecx 0x1e
xor esi eax
mov [ ebp - 0x104 ] eax
rol esi 0x1
mov [ ebp - 0x14c ] ebx
mov eax edx
rol ebx 0x5
mov [ ebp - 0x150 ] edi
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0xf8 ] esi
xor eax ecx
mov ecx [ ebp - 0x158 ]
and eax ecx
xor eax edx
add ebx esi
add eax ebx
lea edi [ edi + eax + 0x5a827999 ]
mov [ ebp - 0x150 ] edi
rol ecx 0x1e
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x160 ] 0x4
jmp r-xdata
mov esi [ eax - 0x20 ]
xor esi [ eax - 0x18 ]
xor esi [ eax + 0x14 ]
xor esi [ eax ]
rol esi 0x1
rol edi 0x5
mov [ ebp - 0x15c ] esi
add edi [ ebp - 0x15c ]
mov [ eax + 0x20 ] esi
mov esi [ ebp - 0x148 ]
xor esi ecx
xor esi [ ebp - 0x14c ]
add esi edi
mov edi [ ebp - 0x14c ]
lea edx [ edx + esi + 0x6ed9eba1 ]
mov esi [ eax - 0x1c ]
xor esi [ eax + 0x18 ]
rol edi 0x1e
xor esi [ eax + 0x4 ]
mov [ ebp - 0x14c ] edi
xor esi [ eax - 0x14 ]
mov ebx edx
mov [ ebp - 0x154 ] edx
rol esi 0x1
mov edx ecx
xor edx edi
mov edi edx
mov edx [ ebp - 0x150 ]
xor edi edx
rol ebx 0x5
add ebx esi
add edi ebx
mov ebx [ ebp - 0x148 ]
rol edx 0x1e
mov [ ebp - 0x150 ] edx
mov edx [ eax + 0x1c ]
xor edx [ eax + 0x8 ]
lea edi [ ebx + edi + 0x6ed9eba1 ]
xor edx [ eax - 0x10 ]
mov [ ebp - 0x148 ] edi
xor edx [ eax - 0x18 ]
mov [ eax + 0x24 ] esi
rol edx 0x1
rol edi 0x5
mov [ ebp - 0x158 ] edx
add edi [ ebp - 0x158 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp - 0x154 ]
xor edx [ ebp - 0x14c ]
xor edx [ ebp - 0x150 ]
add edx edi
mov edi [ eax - 0xc ]
xor edi [ eax + 0xc ]
lea ecx [ ecx + edx + 0x6ed9eba1 ]
xor edi [ ebp - 0x15c ]
mov edx [ ebp - 0x154 ]
xor edi [ eax - 0x14 ]
rol edx 0x1e
rol edi 0x1
mov [ ebp - 0x15c ] edi
mov [ eax + 0x2c ] edi
mov [ ebp - 0x158 ] ecx
rol ecx 0x5
add ecx [ ebp - 0x15c ]
mov edi edx
xor edi [ ebp - 0x148 ]
xor edi [ ebp - 0x150 ]
add edi ecx
mov ecx [ ebp - 0x14c ]
lea ebx [ ecx + edi + 0x6ed9eba1 ]
mov edi [ eax + 0x10 ]
xor edi [ eax - 0x8 ]
mov ecx [ ebp - 0x148 ]
xor edi esi
xor edi [ eax - 0x10 ]
rol ecx 0x1e
rol edi 0x1
mov [ ebp - 0x14c ] ebx
mov [ ebp - 0x148 ] ecx
mov [ eax + 0x30 ] edi
mov esi edx
xor esi ecx
mov ecx [ ebp - 0x158 ]
rol ebx 0x5
add ebx edi
mov edi [ ebp - 0x150 ]
xor esi ecx
add esi ebx
rol ecx 0x1e
lea edi [ edi + esi + 0x6ed9eba1 ]
add eax 0x14
dec [ ebp - 0x160 ]
mov [ ebp - 0x150 ] edi
mov [ ebp - 0x158 ] ecx
jne r-xdata
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0x15c ] 0x4
lea esp [ esp ]
mov esi [ eax - 0x20 ]
xor esi [ eax - 0x18 ]
mov ebx ecx
xor esi [ eax ]
or ebx [ ebp - 0x14c ]
xor esi [ eax + 0x14 ]
and ebx [ ebp - 0x148 ]
rol esi 0x1
rol edi 0x5
mov [ ebp - 0x160 ] esi
mov [ eax + 0x20 ] esi
mov esi [ ebp - 0x14c ]
and ecx esi
or ebx ecx
add ebx [ ebp - 0x160 ]
mov ecx [ eax - 0x1c ]
xor ecx [ eax + 0x18 ]
add ebx edx
xor ecx [ eax + 0x4 ]
lea edx [ ebx + edi - 0x70e44324 ]
xor ecx [ eax - 0x14 ]
rol esi 0x1e
rol ecx 0x1
mov edi esi
or edi [ ebp - 0x150 ]
mov ebx esi
and edi [ ebp - 0x158 ]
and ebx [ ebp - 0x150 ]
mov [ ebp - 0x164 ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0x148 ]
mov [ eax + 0x24 ] ecx
mov ecx [ eax + 0x1c ]
xor ecx [ eax + 0x8 ]
mov [ ebp - 0x154 ] edx
xor ecx [ eax - 0x10 ]
rol edx 0x5
xor ecx [ eax - 0x18 ]
lea ebx [ edi + edx - 0x70e44324 ]
mov edx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
rol edx 0x1e
or edi edx
and edi esi
mov [ ebp - 0x14c ] esi
mov [ ebp - 0x150 ] edx
mov edx [ ebp - 0x154 ]
rol ecx 0x1
mov esi edx
and esi [ ebp - 0x150 ]
mov [ eax + 0x28 ] ecx
or edi esi
add edi ecx
add edi [ ebp - 0x158 ]
mov ecx [ eax - 0xc ]
xor ecx [ eax + 0xc ]
mov [ ebp - 0x148 ] ebx
xor ecx [ ebp - 0x160 ]
rol ebx 0x5
xor ecx [ eax - 0x14 ]
lea esi [ edi + ebx - 0x70e44324 ]
rol edx 0x1e
rol ecx 0x1
mov [ ebp - 0x160 ] ecx
mov [ eax + 0x2c ] ecx
mov ecx [ ebp - 0x148 ]
mov edi edx
or edi ecx
and edi [ ebp - 0x150 ]
mov ebx edx
and ebx ecx
or edi ebx
add edi [ ebp - 0x160 ]
mov [ ebp - 0x158 ] esi
add edi [ ebp - 0x14c ]
rol esi 0x5
lea edi [ edi + esi - 0x70e44324 ]
rol ecx 0x1e
mov [ ebp - 0x14c ] edi
mov esi ecx
mov ecx [ eax + 0x10 ]
xor ecx [ eax - 0x8 ]
mov ebx esi
xor ecx [ eax - 0x10 ]
mov [ ebp - 0x148 ] esi
xor ecx [ ebp - 0x164 ]
add eax 0x14
rol ecx 0x1
mov [ ebp - 0x164 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp - 0x158 ]
or ebx ecx
and ebx edx
and esi ecx
or ebx esi
add ebx [ ebp - 0x164 ]
rol edi 0x5
add ebx [ ebp - 0x150 ]
rol ecx 0x1e
dec [ ebp - 0x15c ]
lea edi [ ebx + edi - 0x70e44324 ]
mov [ ebp - 0x150 ] edi
mov [ ebp - 0x158 ] ecx
jne r-xdata
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x15c ] 0x4
lea ecx [ ecx ]
mov esi [ eax - 0x20 ]
xor esi [ eax ]
mov ebx ecx
xor esi [ eax + 0x14 ]
xor esi [ eax - 0x18 ]
rol esi 0x1
mov [ ebp - 0x160 ] esi
mov [ eax + 0x20 ] esi
mov esi [ ebp - 0x148 ]
xor esi ecx
xor esi [ ebp - 0x14c ]
rol edi 0x5
add esi [ ebp - 0x160 ]
add esi edx
mov edx [ ebp - 0x14c ]
lea edi [ esi + edi - 0x359d3e2a ]
mov esi [ eax - 0x1c ]
xor esi [ eax + 0x18 ]
rol edx 0x1e
xor esi [ eax + 0x4 ]
xor ebx edx
xor esi [ eax - 0x14 ]
mov [ ebp - 0x14c ] edx
mov edx [ ebp - 0x150 ]
xor ebx edx
rol esi 0x1
add ebx esi
add ebx [ ebp - 0x148 ]
mov [ ebp - 0x154 ] edi
rol edi 0x5
rol edx 0x1e
mov [ ebp - 0x150 ] edx
mov edx [ eax + 0x1c ]
xor edx [ eax + 0x8 ]
lea edi [ ebx + edi - 0x359d3e2a ]
xor edx [ eax - 0x10 ]
mov [ ebp - 0x148 ] edi
xor edx [ eax - 0x18 ]
mov [ eax + 0x24 ] esi
rol edx 0x1
mov [ ebp - 0x164 ] edx
mov [ eax + 0x28 ] edx
mov edx [ ebp - 0x154 ]
xor edx [ ebp - 0x14c ]
rol edi 0x5
xor edx [ ebp - 0x150 ]
add edx [ ebp - 0x164 ]
add edx ecx
mov ecx [ eax - 0xc ]
xor ecx [ eax + 0xc ]
lea edi [ edx + edi - 0x359d3e2a ]
xor ecx [ ebp - 0x160 ]
mov edx [ ebp - 0x154 ]
xor ecx [ eax - 0x14 ]
rol edx 0x1e
rol ecx 0x1
mov [ ebp - 0x164 ] ecx
mov [ eax + 0x2c ] ecx
mov ecx edx
xor ecx [ ebp - 0x148 ]
mov [ ebp - 0x158 ] edi
xor ecx [ ebp - 0x150 ]
rol edi 0x5
add ecx [ ebp - 0x164 ]
add ecx [ ebp - 0x14c ]
lea ebx [ ecx + edi - 0x359d3e2a ]
mov edi [ eax + 0x10 ]
xor edi [ eax - 0x8 ]
mov ecx [ ebp - 0x148 ]
xor edi esi
xor edi [ eax - 0x10 ]
rol ecx 0x1e
mov esi edx
rol edi 0x1
xor esi ecx
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x158 ]
mov [ ebp - 0x14c ] ebx
rol ebx 0x5
mov [ eax + 0x30 ] edi
xor esi ecx
add esi edi
add esi [ ebp - 0x150 ]
rol ecx 0x1e
lea edi [ esi + ebx - 0x359d3e2a ]
add eax 0x14
dec [ ebp - 0x15c ]
mov [ ebp - 0x150 ] edi
jne r-xdata
mov eax [ ebp - 0x16c ]
add edi [ eax ]
mov esi [ ebp - 0x170 ]
mov [ esi ] edi
mov edi [ eax + 0x4 ]
add edi [ ebp - 0x14c ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x8 ]
add edi ecx
mov [ esi + 0x8 ] edi
mov ecx [ eax + 0xc ]
add ecx [ ebp - 0x148 ]
pop edi
mov [ esi + 0xc ] ecx
mov eax [ eax + 0x10 ]
add eax edx
cmp [ ebp + 0x10 ] 0x0
mov [ esi + 0x10 ] eax
pop esi
pop ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x168 ]
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x3c ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x38 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x30 ]
mov [ eax + 0x10 ] ecx
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x28 ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x1c ] edx
mov edx [ ebp - 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x24 ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x2c ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x30 ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x34 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] edx
sub_426270
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
and edx 0xf
mov [ ebx + edx * 4 ] 0x80000000
inc edx
push esi
mov [ ebp - 0x4 ] ecx
cmp edx 0xe
je r-xdata
mov eax [ ecx + 0x18 ]
mov ecx [ ecx + 0x1c ]
shld ecx eax 0x4
xor esi esi
shl eax 0x4
add eax [ ebp + 0xc ]
adc ecx esi
shld ecx eax 0x5
shl eax 0x5
mov [ ebx + edx * 4 ] ecx
pop esi
mov [ ebx + edx * 4 + 0x4 ] eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi 0xe
push edi
sub esi edx
lea edi [ ebx + edx * 4 ]
xor eax eax
mov ecx esi
[ edi ]
mov ecx [ ebp - 0x4 ]
add edx esi
pop edi
sub_4262d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push esi
push ecx
mov ecx esi
call sub_425980
add [ esi + 0x18 ] 0x1
adc [ esi + 0x1c ] 0x0
pop esi
pop ebp
retn 0x8
sub_426320
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
push edi
mov edi [ esi + 0x20 ]
je r-xdata
mov [ esi + 0x20 ] edi
pop edi
pop esi
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx edi
shr ecx 0x2
lea eax [ esi + ecx * 4 + 0x24 ]
mov ecx 0x3
sub ecx edx
movzx edx [ ebx ]
add ecx ecx
add ecx ecx
add ecx ecx
shl edx cl
inc edi
inc ebx
or [ eax ] edx
cmp edi 0x40
jne r-xdata
mov eax edi
shr eax 0x2
mov [ esi + eax * 4 + 0x24 ] edx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor edi edi
push edi
push esi
lea eax [ esi + 0x24 ]
push eax
mov ecx esi
call sub_425980
add [ esi + 0x18 ] 0x1
adc [ esi + 0x1c ] edi
dec [ ebp + 0xc ]
mov edx edi
and edx 0x3
jne r-xdata
pop ebx
sub_4263a0
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0x0
push ebx
push edi
mov edi ecx
mov ebx [ edi + 0x20 ]
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov [ edi + 0x20 ] ebx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
lea esp [ esp ]
mov ecx ebx
shr ecx 0x2
lea eax [ edi + ecx * 4 + 0x24 ]
mov ecx 0x3
sub ecx edx
mov edx [ ebp + 0x8 ]
movzx esi [ edx ]
add ecx ecx
add ecx ecx
add ecx ecx
shl esi cl
inc edx
inc ebx
mov [ ebp + 0x8 ] edx
or [ eax ] esi
cmp ebx 0x40
jne r-xdata
mov eax ebx
shr eax 0x2
mov [ edi + eax * 4 + 0x24 ] edx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
push edi
lea eax [ edi + 0x24 ]
push eax
mov ecx edi
xor ebx ebx
call sub_425980
add [ edi + 0x18 ] 0x1
adc [ edi + 0x1c ] ebx
cmp [ ebp - 0x4 ] bl
je r-xdata
dec [ ebp + 0xc ]
mov edx ebx
and edx 0x3
jne r-xdata
pop esi
mov al [ ebp + 0x10 ]
mov [ ebp - 0x4 ] al
mov eax [ ebp + 0x8 ]
lea esi [ edi + 0x28 ]
add eax 0xffffffc1
mov [ ebp - 0x8 ] 0x4
mov ecx [ esi - 0x4 ]
mov edx ecx
shr edx 0x8
mov [ eax ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x1 ] dl
mov [ eax - 0x1 ] cl
shr ecx 0x18
mov [ eax + 0x2 ] cl
mov ecx [ esi ]
mov edx ecx
shr edx 0x8
mov [ eax + 0x4 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x5 ] dl
mov [ eax + 0x3 ] cl
shr ecx 0x18
mov [ eax + 0x6 ] cl
mov ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x8
mov [ eax + 0x8 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x7 ] cl
mov [ eax + 0x9 ] dl
shr ecx 0x18
mov [ eax + 0xa ] cl
mov ecx [ esi + 0x8 ]
mov edx ecx
shr edx 0x8
mov [ eax + 0xc ] dl
mov edx ecx
mov [ eax + 0xb ] cl
shr edx 0x10
shr ecx 0x18
mov [ eax + 0xd ] dl
mov [ eax + 0xe ] cl
add esi 0x10
add eax 0x10
dec [ ebp - 0x8 ]
jne r-xdata
sub_4264d0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov edx [ esi + 0x1c ]
shld edx eax 0x6
shl eax 0x6
mov ebx eax
push edi
mov edi [ esi + 0x20 ]
xor eax eax
add ebx edi
adc edx eax
shld edx ebx 0x3
add ebx ebx
add ebx ebx
mov eax edi
add ebx ebx
shr edi 0x2
and eax 0x3
mov [ ebp - 0x4 ] edx
jne r-xdata
mov ecx 0x3
sub ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax 0x80
shl eax cl
inc edi
or [ esi + edi * 4 + 0x20 ] eax
cmp edi 0xe
je r-xdata
mov [ esi + edi * 4 + 0x24 ] eax
push 0x0
mov [ esi + edi * 4 + 0x24 ] edx
push esi
lea edx [ esi + 0x24 ]
push edx
mov ecx esi
mov [ esi + edi * 4 + 0x28 ] ebx
call sub_425980
add [ esi + 0x18 ] 0x1
mov eax [ ebp + 0x8 ]
mov edi 0x0
adc [ esi + 0x1c ] edi
mov ecx [ esi ]
mov edx ecx
shr edx 0x18
mov [ eax ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x1 ] dl
mov edx ecx
shr edx 0x8
mov [ eax + 0x2 ] dl
mov [ eax + 0x3 ] cl
mov ecx [ esi + 0x4 ]
mov edx ecx
shr edx 0x18
mov [ eax + 0x4 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x5 ] dl
mov edx ecx
shr edx 0x8
mov [ eax + 0x6 ] dl
mov [ eax + 0x7 ] cl
mov ecx [ esi + 0x8 ]
mov edx ecx
shr edx 0x18
mov [ eax + 0x8 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x9 ] dl
mov edx ecx
shr edx 0x8
mov [ eax + 0xa ] dl
mov [ eax + 0xb ] cl
mov ecx [ esi + 0xc ]
mov edx ecx
shr edx 0x18
mov [ eax + 0xc ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0xd ] dl
mov edx ecx
shr edx 0x8
mov [ eax + 0xe ] dl
mov [ eax + 0xf ] cl
mov ecx [ esi + 0x10 ]
mov edx ecx
shr edx 0x18
mov [ eax + 0x10 ] dl
mov edx ecx
shr edx 0x10
mov [ eax + 0x11 ] dl
mov edx ecx
shr edx 0x8
mov [ eax + 0x12 ] dl
mov [ eax + 0x13 ] cl
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
pop edi
mov [ esi ] 0x67452301
mov [ esi + 0x4 ] 0xefcdab89
mov [ esi + 0x8 ] 0x98badcfe
mov [ esi + 0xc ] 0x10325476
mov [ esi + 0x10 ] 0xc3d2e1f0
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea esp [ esp ]
mov [ esi + edi * 4 + 0x24 ] 0x0
inc edi
cmp edi 0xe
jne r-xdata
push edi
push esi
lea ecx [ esi + 0x24 ]
push ecx
mov ecx esi
call sub_425980
add [ esi + 0x18 ] 0x1
adc [ esi + 0x1c ] edi
and edi 0xf
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_426650
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push 0x0
push esi
lea edx [ esi + 0x24 ]
push edx
mov ecx esi
mov [ esi + 0x20 ] 0x0
call sub_425980
add [ esi + 0x18 ] 0x1
adc [ esi + 0x1c ] 0x0
mov ecx [ edi ]
mov eax [ esi + 0x20 ]
mov [ esi + eax * 4 + 0x24 ] ecx
inc [ esi + 0x20 ]
dec ebx
add edi 0x4
cmp [ esi + 0x20 ] 0x10
jne r-xdata
pop edi
sub_4266a0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x1c ]
shld ecx eax 0x4
shl eax 0x4
mov ebx eax
push edi
mov edi [ esi + 0x20 ]
xor edx edx
add ebx edi
mov eax ecx
adc eax edx
shld eax ebx 0x5
mov [ esi + edi * 4 + 0x24 ] 0x80000000
inc edi
shl ebx 0x5
mov [ ebp - 0x4 ] eax
cmp edi 0xe
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi + edi * 4 + 0x24 ] eax
mov [ esi + edi * 4 + 0x28 ] ebx
xor edi edi
push edi
push ecx
lea edx [ esi + 0x24 ]
push edx
mov ecx esi
call sub_425980
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
pop edi
mov [ esi ] 0x67452301
mov [ esi + 0x4 ] 0xefcdab89
mov [ esi + 0x8 ] 0x98badcfe
mov [ esi + 0xc ] 0x10325476
mov [ esi + 0x10 ] 0xc3d2e1f0
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ecx ]
mov [ esi + edi * 4 + 0x24 ] 0x0
inc edi
cmp edi 0xe
jne r-xdata
push edi
push esi
lea eax [ esi + 0x24 ]
push eax
mov ecx esi
call sub_425980
add [ esi + 0x18 ] 0x1
adc [ esi + 0x1c ] edi
and edi 0xf
jne r-xdata
mov eax [ ebp - 0x4 ]
sub_4267b0
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x6c ]
call sub_425950
xor ebx ebx
mov [ ebp - 0x4c ] ebx
call [ GetCurrentProcessId@IAT ]
mov [ ebp - 0x70 ] eax
push 0x4
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_426320
call [ GetCurrentThreadId@IAT ]
push 0x4
lea ecx [ ebp - 0x70 ]
push ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x70 ] eax
call sub_426320
mov [ ebp - 0x74 ] 0x3e8
lea ebx [ ebx ]
call [ GetTickCount@IAT ]
push 0x4
lea ecx [ ebp - 0x78 ]
push ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x78 ] eax
call sub_426320
mov edi 0x64
jmp r-xdata
push 0x8
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_426320
push esi
lea ecx [ ebp - 0x6c ]
call sub_4264d0
lea ecx [ ebp - 0x6c ]
call sub_425950
push 0x14
push esi
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4c ] ebx
call sub_426320
dec edi
jne r-xdata
dec [ ebp - 0x74 ]
jne r-xdata
lea edx [ ebp - 0x80 ]
push edx
call [ QueryPerformanceCounter@IAT ]
test eax eax
je r-xdata
push esi
lea ecx [ ebp - 0x6c ]
call sub_4264d0
mov ecx [ ebp - 0x4 ]
pop edi
mov [ esi + 0x14 ] bl
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_4268a0
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push rwxdata
mov edi ecx
call [ EnterCriticalSection@IAT ]
cmp [ edi + 0x14 ] 0x0
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx edi
call sub_4267b0
push rwxdata
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
mov edi edi
test ebx ebx
je r-xdata
mov dl [ ecx + esi ]
mov [ esi ] dl
inc eax
inc esi
dec ebx
cmp eax 0x14
jb r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x80 ]
call sub_425950
push 0x14
push edi
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x60 ] 0x0
call sub_426320
push edi
lea ecx [ ebp - 0x80 ]
call sub_4264d0
lea ecx [ ebp - 0x80 ]
call sub_425950
push 0x4
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x84 ] 0xf672abd1
call sub_426320
push 0x14
push edi
lea ecx [ ebp - 0x80 ]
call sub_426320
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x80 ]
call sub_4264d0
lea ecx [ ebp - 0x18 ]
xor eax eax
sub ecx esi
jmp r-xdata
sub_426990
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x40
lea eax [ ebp - 0x44 ]
push 0x0
push eax
mov esi ecx
call sub_43d590
mov edi [ ebp + 0xc ]
add esp 0xc
cmp edi 0x40
jbe r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_425950
push edi
push ebx
mov ecx esi
mov [ esi + 0x20 ] 0x0
call sub_426320
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx esi
call sub_4264d0
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
lea edx [ ebp - 0x44 ]
push ebx
push edx
call sub_43bd20
add esp 0xc
xor [ ebp + eax - 0x44 ] 0x36
inc eax
cmp eax 0x40
jb r-xdata
mov ecx esi
call sub_425950
push 0x40
lea eax [ ebp - 0x44 ]
xor edi edi
push eax
mov ecx esi
mov [ esi + 0x20 ] edi
call sub_426320
xor eax eax
xor [ ebp + eax - 0x44 ] 0x6a
inc eax
cmp eax 0x40
jb r-xdata
lea ecx [ esi + 0x68 ]
call sub_425950
push 0x40
lea ecx [ ebp - 0x44 ]
push ecx
lea ecx [ esi + 0x68 ]
mov [ esi + 0x88 ] edi
call sub_426320
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
sub_426a60
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
mov esi ecx
call sub_4264d0
push 0x14
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ esi + 0x68 ]
call sub_426320
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ esi + 0x68 ]
call sub_4264d0
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
push eax
lea eax [ ebp - 0x18 ]
push eax
push edi
call sub_43bd20
add esp 0xc
sub_426ad0
push ebp
mov ebp esp
sub esp 0xc4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
cmp esi 0x40
jbe r-xdata
xor eax eax
test esi esi
je r-xdata
lea ecx [ ebp - 0xc0 ]
call sub_425950
push esi
push edi
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xa0 ] 0x0
call sub_426320
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_4264d0
movzx ecx [ ebp - 0x18 ]
movzx edx [ ebp - 0x17 ]
movzx eax [ ebp - 0x16 ]
shl ecx 0x8
or ecx edx
movzx edx [ ebp - 0x15 ]
shl ecx 0x8
or ecx eax
movzx eax [ ebp - 0x14 ]
shl ecx 0x8
or ecx edx
movzx edx [ ebp - 0x12 ]
mov [ ebp - 0x58 ] ecx
movzx ecx [ ebp - 0x13 ]
shl eax 0x8
or eax ecx
movzx ecx [ ebp - 0x11 ]
shl eax 0x8
or eax edx
movzx edx [ ebp - 0x10 ]
shl eax 0x8
or eax ecx
movzx ecx [ ebp - 0xe ]
mov [ ebp - 0x54 ] eax
movzx eax [ ebp - 0xf ]
shl edx 0x8
or edx eax
movzx eax [ ebp - 0xd ]
shl edx 0x8
or edx ecx
movzx ecx [ ebp - 0xc ]
shl edx 0x8
or edx eax
movzx eax [ ebp - 0xa ]
shl ecx 0x8
mov [ ebp - 0x50 ] edx
movzx edx [ ebp - 0xb ]
or ecx edx
movzx edx [ ebp - 0x9 ]
shl ecx 0x8
or ecx eax
movzx eax [ ebp - 0x8 ]
shl ecx 0x8
or ecx edx
movzx edx [ ebp - 0x6 ]
mov [ ebp - 0x4c ] ecx
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
movzx ecx [ ebp - 0x5 ]
shl eax 0x8
or eax edx
shl eax 0x8
or eax ecx
mov [ ebp - 0x48 ] eax
jmp r-xdata
xor eax eax
mov ebx eax
and ebx 0x3
mov ecx 0x3
sub ecx ebx
movzx ebx [ edi + eax ]
add ecx ecx
add ecx ecx
add ecx ecx
mov edx eax
shl ebx cl
shr edx 0x2
lea edx [ ebp + edx * 4 - 0x58 ]
inc eax
or [ edx ] ebx
cmp eax esi
jb r-xdata
xor [ ebp + eax * 4 - 0x58 ] 0x36363636
inc eax
cmp eax 0x10
jb r-xdata
mov ecx ebx
call sub_425950
push 0x10
lea eax [ ebp - 0x58 ]
xor edi edi
push eax
mov ecx ebx
mov [ ebx + 0x20 ] edi
call sub_426650
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0xc4 ]
xor [ ebp + eax * 4 - 0x58 ] 0x6a6a6a6a
inc eax
cmp eax 0x10
jb r-xdata
lea ecx [ ebx + 0x68 ]
call sub_425950
push 0x10
lea ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebx + 0x68 ]
mov [ ebx + 0x88 ] edi
call sub_426650
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
sub_426cb0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
mov esi ecx
call sub_4266a0
push 0x5
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ esi + 0x68 ]
call sub_426650
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ esi + 0x68 ]
call sub_4266a0
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
lea esi [ ebp - 0x18 ]
[ edi ] [ esi ]
sub_426d10
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x5
lea eax [ ebp - 0x44 ]
push eax
mov edi ecx
call sub_426270
push 0x5
lea ecx [ ebp - 0x84 ]
push ecx
lea ecx [ edi + 0x68 ]
call sub_426270
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x40 ] eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x44 ] edx
mov edx [ esi + 0xc ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x88 ] eax
push 0x0
lea ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
mov ecx edi
call sub_425980
push 0x0
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x84 ]
push ecx
lea ecx [ edi + 0x68 ]
call sub_425980
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
xor [ esi ] edx
xor [ esi + 0x4 ] eax
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x34 ]
xor [ esi + 0x8 ] ecx
xor [ esi + 0xc ] edx
xor [ esi + 0x10 ] eax
dec [ ebp - 0x88 ]
jne r-xdata
sub_426de0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push ebx
push esi
lea ebx [ eax + 0x1c ]
shr eax 0x2
mov esi eax
shr esi 0x1
add esi 0x3
mov [ ecx ] esi
xor esi esi
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
cmp esi ebx
jae r-xdata
mov edi [ edx ]
mov [ ecx + esi * 4 + 0x10 ] edi
inc esi
add edx 0x4
cmp esi eax
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx esi
sub edx eax
lea eax [ ecx + edx * 4 + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x6
jbe r-xdata
movzx eax [ eax + rwxdata ]
mov edx edi
and edx 0xff
movzx edx [ edx + rwxdata ]
mov ebx edi
shr ebx 0x18
movzx ebx [ ebx + rwxdata ]
shl edx 0x8
or edx ebx
mov ebx edi
shr ebx 0x10
shr edi 0x8
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
and edi 0xff
movzx edi [ edi + rwxdata ]
shl edx 0x8
or edx ebx
mov ebx [ ebp - 0x8 ]
shl edx 0x8
xor edi eax
or edi edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
xor edx edi
mov [ ecx + esi * 4 + 0x10 ] edx
inc esi
add eax 0x4
mov [ ebp - 0x4 ] eax
cmp esi ebx
jb r-xdata
cmp edx 0x4
jne r-xdata
xor edx edx
mov eax esi
div [ ebp + 0x8 ]
mov edi [ ecx + esi * 4 + 0xc ]
test edx edx
jne r-xdata
mov edx edi
shr edx 0x10
and edx 0xff
movzx eax [ edx + rwxdata ]
mov edx edi
shr edx 0x18
movzx edx [ edx + rwxdata ]
shl edx 0x8
or eax edx
mov edx edi
shr edx 0x8
and edx 0xff
movzx edx [ edx + rwxdata ]
shl eax 0x8
and edi 0xff
movzx edi [ edi + rwxdata ]
or eax edx
shl eax 0x8
or edi eax
sub_426f10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_426de0
xor edx edx
add esi 0x14
je r-xdata
pop esi
pop ebp
retn 0x4
push ebx
push edi
mov eax [ ecx + edx * 4 + 0x20 ]
mov edi eax
shr edi 0x10
and edi 0xff
movzx edi [ edi + rwxdata ]
mov edi [ edi * 4 + rwxdata ]
mov ebx eax
shr ebx 0x8
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
xor edi [ ebx * 4 + rwxdata ]
mov ebx eax
shr ebx 0x18
movzx ebx [ ebx + rwxdata ]
xor edi [ ebx * 4 + rwxdata ]
and eax 0xff
movzx eax [ eax + rwxdata ]
xor edi [ eax * 4 + rwxdata ]
inc edx
mov [ ecx + edx * 4 + 0x1c ] edi
cmp edx esi
jb r-xdata
pop edi
pop ebx
sub_426fa0
push ebp
mov ebp esp
sub esp 0x28
mov edx [ eax + 0x1c ]
push ebx
mov ebx ecx
xor edx [ ebx + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ eax + 0x10 ]
xor esi [ ebx ]
push edi
mov edi [ eax + 0x14 ]
xor edi [ ebx + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ eax + 0x18 ]
xor ecx [ ebx + 0x8 ]
mov [ ebp - 0x28 ] esi
mov ebx edx
shr ebx 0x8
and ebx 0xff
shr esi 0x10
and esi 0xff
mov [ ebp - 0x8 ] esi
mov esi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x8 ]
xor esi [ ebx * 4 + rwxdata ]
mov ebx edi
shr ebx 0x18
xor esi [ ebx * 4 + rwxdata ]
mov [ ebp - 0x24 ] edi
shr edi 0x8
mov ebx ecx
and ebx 0xff
xor esi [ ebx * 4 + rwxdata ]
and edi 0xff
mov [ ebp - 0x8 ] edi
mov ebx ecx
shr ebx 0x10
and ebx 0xff
mov edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x8 ]
xor edi [ ebx * 4 + rwxdata ]
mov ebx edx
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x28 ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x28 ]
xor edi [ eax + 0x20 ]
add eax 0x20
mov [ ebp - 0x18 ] edi
mov edi [ ebp - 0x24 ]
shr edi 0x10
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
shr ebx 0x8
xor esi [ eax + 0x8 ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx ecx
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx edx
shr edx 0x10
and edx 0xff
mov edx [ edx * 4 + rwxdata ]
shr ecx 0x8
and ecx 0xff
xor edx [ ecx * 4 + rwxdata ]
mov ecx [ ebp - 0x28 ]
shr ecx 0x18
xor edx [ ecx * 4 + rwxdata ]
mov ecx [ ebp - 0x24 ]
and ecx 0xff
xor edx [ ecx * 4 + rwxdata ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
xor edx [ eax + 0x4 ]
xor edi [ eax + 0xc ]
dec [ ebp - 0x4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] edx
je r-xdata
mov ecx esi
shr ecx 0x10
and ecx 0xff
movzx ecx [ ecx + rwxdata ]
mov ebx edi
shr ebx 0x18
movzx ebx [ ebx + rwxdata ]
shl ebx 0x8
or ecx ebx
shl ecx 0x8
mov ebx edx
shr ebx 0x8
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
mov ebx [ ebp - 0x18 ]
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
shl ecx 0x8
or ecx ebx
xor ecx [ eax + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx ] ecx
mov ebx [ ebp - 0x18 ]
shr ebx 0x18
movzx ebx [ ebx + rwxdata ]
shl ebx 0x8
mov ecx edi
shr ecx 0x10
and ecx 0xff
movzx ecx [ ecx + rwxdata ]
or ecx ebx
shl ecx 0x8
mov ebx esi
shr ebx 0x8
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
shl ecx 0x8
mov ebx edx
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
xor ecx [ eax + 0x14 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
movzx ecx [ ecx + rwxdata ]
mov ebx edx
shr ebx 0x18
movzx ebx [ ebx + rwxdata ]
shl ebx 0x8
or ecx ebx
shl ecx 0x8
mov ebx edi
shr ebx 0x8
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
shl ecx 0x8
mov ebx esi
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
xor ecx [ eax + 0x18 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
shr edx 0x10
and edx 0xff
movzx edx [ edx + rwxdata ]
shr esi 0x18
movzx ecx [ esi + rwxdata ]
shl ecx 0x8
or edx ecx
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
shl edx 0x8
and ecx 0xff
movzx ecx [ ecx + rwxdata ]
or edx ecx
and edi 0xff
movzx ecx [ edi + rwxdata ]
shl edx 0x8
or edx ecx
xor edx [ eax + 0x1c ]
pop edi
pop esi
mov [ ebx + 0xc ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x18 ]
shr ebx 0x10
and ebx 0xff
mov ecx edi
shr ecx 0x8
and ecx 0xff
mov ecx [ ecx * 4 + rwxdata ]
xor ecx [ ebx * 4 + rwxdata ]
mov ebx edx
shr ebx 0x18
xor ecx [ ebx * 4 + rwxdata ]
mov ebx esi
and ebx 0xff
xor ecx [ ebx * 4 + rwxdata ]
mov ebx edx
shr ebx 0x8
and ebx 0xff
shr esi 0x10
and esi 0xff
mov [ ebp - 0x8 ] esi
mov esi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x8 ]
xor esi [ ebx * 4 + rwxdata ]
mov ebx edi
shr ebx 0x18
xor esi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x18 ]
and ebx 0xff
xor esi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x18 ]
shr ebx 0x8
and ebx 0xff
shr edx 0x10
and edx 0xff
mov edx [ edx * 4 + rwxdata ]
xor edx [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x18
xor edx [ ebx * 4 + rwxdata ]
mov ebx edi
and ebx 0xff
xor edx [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x10 ]
shr edi 0x10
xor edx [ eax + 0x1c ]
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
xor esi [ eax + 0x10 ]
shr ebx 0x8
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x18 ]
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x14 ]
xor ecx [ eax + 0x18 ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx esi
xor edi [ eax + 0x14 ]
shr ebx 0x10
mov [ ebp - 0x24 ] edi
mov edi edx
shr edi 0x8
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x24 ]
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx ecx
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x24 ]
xor edi [ eax + 0x28 ]
add eax 0x20
mov [ ebp - 0x10 ] edi
mov edi ecx
shr edi 0x10
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
shr ebx 0x8
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx edx
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx esi
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx esi
xor edi [ eax ]
shr ebx 0x8
mov [ ebp - 0x18 ] edi
mov edi [ ebp - 0x24 ]
shr edi 0x10
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx ecx
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx edx
shr edx 0x10
and edx 0xff
mov edx [ edx * 4 + rwxdata ]
shr ecx 0x8
and ecx 0xff
xor edx [ ecx * 4 + rwxdata ]
mov ecx [ ebp - 0x24 ]
shr esi 0x18
xor edx [ esi * 4 + rwxdata ]
mov esi [ ebp - 0x10 ]
and ecx 0xff
xor edx [ ecx * 4 + rwxdata ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
xor edx [ eax + 0x4 ]
xor edi [ eax + 0xc ]
dec [ ebp - 0x4 ]
mov [ ebp - 0x14 ] edx
jne r-xdata
sub_427480
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx ecx
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
shl ecx 0x5
mov edx [ eax + ecx + 0x1c ]
xor edx [ ebx + 0xc ]
lea eax [ eax + ecx + 0x10 ]
mov ecx [ eax ]
xor ecx [ ebx ]
push esi
mov esi [ eax + 0x8 ]
xor esi [ ebx + 0x8 ]
push edi
mov edi [ eax + 0x4 ]
xor edi [ ebx + 0x4 ]
mov [ ebp - 0x20 ] esi
mov ebx edx
shr ebx 0x8
and ebx 0xff
shr esi 0x10
and esi 0xff
mov [ ebp - 0x8 ] esi
mov esi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x8 ]
xor esi [ ebx * 4 + rwxdata ]
mov ebx edi
shr ebx 0x18
xor esi [ ebx * 4 + rwxdata ]
mov [ ebp - 0x24 ] edi
shr edi 0x8
mov ebx ecx
and ebx 0xff
xor esi [ ebx * 4 + rwxdata ]
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
mov ebx ecx
shr ebx 0x10
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx edx
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x20 ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x24 ]
xor edi [ eax - 0x8 ]
sub eax 0x20
mov [ ebp - 0x10 ] edi
mov edi [ ebp - 0x20 ]
shr edi 0x8
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
shr ebx 0x10
xor esi [ eax + 0x10 ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx ecx
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx edx
shr edx 0x10
and edx 0xff
mov edx [ edx * 4 + rwxdata ]
shr ecx 0x8
and ecx 0xff
xor edx [ ecx * 4 + rwxdata ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
xor edx [ ecx * 4 + rwxdata ]
mov ecx [ ebp - 0x24 ]
and ecx 0xff
xor edx [ ecx * 4 + rwxdata ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
xor edx [ eax + 0x14 ]
xor edi [ eax + 0x1c ]
dec [ ebp - 0x4 ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] edx
je r-xdata
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xff
movzx ecx [ ecx + rwxdata ]
mov ebx edx
shr ebx 0x18
movzx ebx [ ebx + rwxdata ]
shl ebx 0x8
or ecx ebx
shl ecx 0x8
mov ebx edi
shr ebx 0x8
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
shl ecx 0x8
mov ebx esi
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
xor ecx [ eax ]
mov ebx [ ebp + 0x8 ]
mov [ ebx ] ecx
mov ebx [ ebp - 0x10 ]
shr ebx 0x18
movzx ebx [ ebx + rwxdata ]
shl ebx 0x8
mov ecx edi
shr ecx 0x10
and ecx 0xff
movzx ecx [ ecx + rwxdata ]
or ecx ebx
shl ecx 0x8
mov ebx esi
shr ebx 0x8
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
shl ecx 0x8
mov ebx edx
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
xor ecx [ eax + 0x4 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx esi
shr ecx 0x10
and ecx 0xff
movzx ecx [ ecx + rwxdata ]
mov ebx edi
shr ebx 0x18
movzx ebx [ ebx + rwxdata ]
shl ebx 0x8
or ecx ebx
mov ebx edx
shr ebx 0x8
shl ecx 0x8
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
mov ebx [ ebp - 0x10 ]
shl ecx 0x8
and ebx 0xff
movzx ebx [ ebx + rwxdata ]
or ecx ebx
xor ecx [ eax + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
shr edx 0x10
and edx 0xff
movzx edx [ edx + rwxdata ]
shr esi 0x18
movzx ecx [ esi + rwxdata ]
shl ecx 0x8
or edx ecx
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
shl edx 0x8
and ecx 0xff
movzx ecx [ ecx + rwxdata ]
or edx ecx
and edi 0xff
movzx ecx [ edi + rwxdata ]
shl edx 0x8
or edx ecx
xor edx [ eax + 0xc ]
pop edi
pop esi
mov [ ebx + 0xc ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x10 ]
shr ebx 0x10
and ebx 0xff
mov ecx edi
shr ecx 0x8
and ecx 0xff
mov ecx [ ecx * 4 + rwxdata ]
xor ecx [ ebx * 4 + rwxdata ]
mov ebx edx
shr ebx 0x18
xor ecx [ ebx * 4 + rwxdata ]
mov ebx esi
and ebx 0xff
xor ecx [ ebx * 4 + rwxdata ]
mov ebx edx
shr ebx 0x8
and ebx 0xff
shr esi 0x10
and esi 0xff
mov [ ebp - 0x8 ] esi
mov esi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x8 ]
xor esi [ ebx * 4 + rwxdata ]
mov ebx edi
shr ebx 0x18
xor esi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x10 ]
and ebx 0xff
xor esi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x8
and ebx 0xff
shr edx 0x10
and edx 0xff
mov edx [ edx * 4 + rwxdata ]
xor edx [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x18 ]
shr ebx 0x18
xor edx [ ebx * 4 + rwxdata ]
mov ebx edi
and ebx 0xff
xor edx [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x18 ]
shr edi 0x10
xor edx [ eax + 0xc ]
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
xor esi [ eax + 0x8 ]
shr ebx 0x8
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x10 ]
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x14 ]
xor ecx [ eax ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx esi
xor edi [ eax + 0x4 ]
shr ebx 0x10
mov [ ebp - 0x24 ] edi
mov edi edx
shr edi 0x8
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x24 ]
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx ecx
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
sub eax 0x20
xor edi [ eax + 0x10 ]
mov ebx ecx
mov [ ebp - 0x18 ] edi
mov edi [ ebp - 0x24 ]
shr edi 0x8
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
shr ebx 0x10
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx edx
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx esi
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx [ ebp - 0x24 ]
xor edi [ eax + 0x18 ]
shr ebx 0x10
mov [ ebp - 0x10 ] edi
mov edi esi
shr edi 0x8
and edi 0xff
mov edi [ edi * 4 + rwxdata ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
mov ebx ecx
shr ebx 0x18
xor edi [ ebx * 4 + rwxdata ]
mov ebx edx
shr edx 0x10
and edx 0xff
mov edx [ edx * 4 + rwxdata ]
shr ecx 0x8
and ecx 0xff
xor edx [ ecx * 4 + rwxdata ]
mov ecx [ ebp - 0x24 ]
shr esi 0x18
xor edx [ esi * 4 + rwxdata ]
mov esi [ ebp - 0x18 ]
and ecx 0xff
xor edx [ ecx * 4 + rwxdata ]
and ebx 0xff
xor edi [ ebx * 4 + rwxdata ]
xor edx [ eax + 0x14 ]
xor edi [ eax + 0x1c ]
dec [ ebp - 0x4 ]
mov [ ebp - 0x14 ] edx
jne r-xdata
sub_427960
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
pop ebp
retn
sub_427990
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
push edi
lea edi [ edx + 0x8 ]
mov eax [ edi - 0x8 ]
xor [ esi ] eax
mov ecx [ edi - 0x4 ]
xor [ esi + 0x4 ] ecx
mov edx [ edi ]
xor [ esi + 0x8 ] edx
mov eax [ edi + 0x4 ]
xor [ esi + 0xc ] eax
push esi
mov ecx esi
lea eax [ esi + 0x10 ]
call sub_426fa0
mov ecx [ esi ]
mov [ edi - 0x8 ] ecx
mov edx [ esi + 0x4 ]
mov [ edi - 0x4 ] edx
mov eax [ esi + 0x8 ]
mov [ edi ] eax
mov ecx [ esi + 0xc ]
mov [ edi + 0x4 ] ecx
add esp 0x4
add edi 0x10
dec ebx
jne r-xdata
pop edi
sub_4279f0
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi ecx
test ebx ebx
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
lea esi [ edx + 0x8 ]
mov eax [ esi - 0x8 ]
mov ecx [ esi - 0x4 ]
mov edx [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
push ecx
lea ecx [ ebp - 0x10 ]
lea eax [ edi + 0x10 ]
mov [ ebp - 0x8 ] edx
call sub_427480
mov edx [ edi ]
xor edx [ ebp - 0x20 ]
add esp 0x4
mov [ esi - 0x8 ] edx
mov eax [ edi + 0x4 ]
xor eax [ ebp - 0x1c ]
add esi 0x10
mov [ esi - 0x14 ] eax
mov ecx [ edi + 0x8 ]
xor ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
mov [ esi - 0x10 ] ecx
mov edx [ edi + 0xc ]
xor edx [ ebp - 0x14 ]
dec ebx
mov ecx [ ebp - 0xc ]
mov [ esi - 0xc ] edx
mov edx [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ edi + 0x8 ] edx
mov [ edi + 0xc ] eax
jne r-xdata
pop esi
sub_427a80
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi ecx
mov esi edx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
push ebx
lea ecx [ ecx ]
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
lea eax [ edi + 0x10 ]
call sub_426fa0
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x18 ]
add esp 0x4
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] ecx
xor eax eax
inc [ edi + 0x4 ]
movzx edx [ ebp + eax - 0x14 ]
movzx ecx [ ebp + eax - 0x13 ]
xor [ esi ] dl
xor [ esi + 0x1 ] cl
movzx edx [ ebp + eax - 0x12 ]
movzx ecx [ ebp + eax - 0x11 ]
xor [ esi + 0x2 ] dl
xor [ esi + 0x3 ] cl
add eax 0x4
add esi 0x4
cmp eax 0x10
jl r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
inc [ edi ]
jne r-xdata
pop ebx
sub_427b20
push ebp
mov ebp esp
push ecx
xor eax eax
jmp r-xdata
movzx ecx [ eax + rwxdata ]
mov [ ecx + rwxdata ] al
inc eax
cmp eax 0x100
jb r-xdata
push ebx
push esi
push edi
xor esi esi
lea ebx [ ebx ]
movzx ecx [ esi + rwxdata ]
mov edx ecx
and dl 0x80
movzx eax dl
neg eax
sbb eax eax
and eax 0x1b
lea edx [ ecx + ecx ]
xor eax edx
and eax 0xff
mov edi eax
xor edi ecx
mov edx edi
shl edx 0x8
or edx ecx
shl edx 0x8
or edx ecx
shl edx 0x8
or edx eax
mov [ esi * 4 + rwxdata ] edx
mov edx ecx
shl edx 0x8
mov ebx edx
or edx eax
or ebx ecx
shl ebx 0x8
or ebx eax
shl eax 0x8
or eax edi
shl eax 0x8
or eax ecx
shl edx 0x8
or edx edi
shl eax 0x8
or eax ecx
shl ebx 0x8
or ebx edi
shl edx 0x8
or edx ecx
mov [ esi * 4 + rwxdata ] eax
mov [ esi * 4 + rwxdata ] ebx
movzx ebx [ esi + rwxdata ]
mov eax ebx
and al 0x80
movzx eax al
neg eax
sbb eax eax
mov [ esi * 4 + rwxdata ] edx
and eax 0x1b
lea ecx [ ebx + ebx ]
xor eax ecx
and eax 0xff
mov edx eax
and dl 0x80
movzx ecx dl
neg ecx
sbb ecx ecx
and ecx 0x1b
lea edx [ eax + eax ]
xor ecx edx
and ecx 0xff
mov edx ecx
and dl 0x80
movzx edx dl
neg edx
sbb edx edx
mov [ ebp - 0x4 ] edi
and edx 0x1b
lea edi [ ecx + ecx ]
xor edx edi
and edx 0xff
mov edi edx
xor edi ebx
mov [ ebp - 0x4 ] edi
mov edi edx
xor edx ecx
xor edi eax
mov ecx edx
xor edi ebx
xor ecx ebx
xor eax edx
mov edx [ ebp - 0x4 ]
mov ebx edi
shl ebx 0x8
or ebx ecx
shl ebx 0x8
or ebx edx
shl ebx 0x8
or ebx eax
mov [ esi * 4 + rwxdata ] ebx
mov ebx ecx
shl ebx 0x8
or ebx edx
shl ebx 0x8
or ebx eax
shl ebx 0x8
or ebx edi
mov [ esi * 4 + rwxdata ] ebx
mov ebx edx
shl ebx 0x8
or ebx eax
shl eax 0x8
or eax edi
shl ebx 0x8
shl eax 0x8
or ebx edi
or eax ecx
shl ebx 0x8
shl eax 0x8
or ebx ecx
or eax edx
mov [ esi * 4 + rwxdata ] ebx
mov [ esi * 4 + rwxdata ] eax
inc esi
cmp esi 0x100
jb r-xdata
mov [ rwxdata ] sub_427990
mov [ rwxdata ] sub_4279f0
mov [ rwxdata ] sub_427a80
call sub_431b60
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov [ rwxdata ] sub_431fb0
mov [ rwxdata ] sub_431fc0
mov [ rwxdata ] sub_431fd0
sub_427d10
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x1c8 ] ecx
mov ecx [ ebp + 0xc ]
push ebx
push ecx
push eax
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x1bc ] edx
call sub_426990
cmp [ ebp + 0x20 ] 0x0
mov ebx 0x1
mov [ ebp - 0x1c0 ] ebx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
push esi
push edi
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x1c8 ]
mov ecx 0x34
lea esi [ ebp - 0x1b8 ]
lea edi [ ebp - 0xe8 ]
push edx
[ edi ] [ esi ]
push eax
lea ecx [ ebp - 0xe8 ]
call sub_426320
mov eax ebx
shr eax 0x8
mov ecx ebx
mov edx ebx
mov [ ebp - 0x15 ] bl
mov ebx [ ebp + 0x20 ]
shr ecx 0x18
shr edx 0x10
mov [ ebp - 0x16 ] al
xor eax eax
mov [ ebp - 0x18 ] cl
mov [ ebp - 0x17 ] dl
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
cmp ebx 0x14
jb r-xdata
push 0x4
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0xe8 ]
call sub_426320
push 0x14
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0xe8 ]
call sub_426a60
test ebx ebx
je r-xdata
lea ebx [ eax + 0x14 ]
mov eax [ ebp + 0x18 ]
cmp eax 0x1
jbe r-xdata
mov eax [ ebp - 0x1bc ]
lea esi [ ebp - 0x18 ]
sub esi eax
mov edi ebx
mov eax [ ebp + 0x20 ]
add [ ebp - 0x1bc ] ebx
inc [ ebp - 0x1c0 ]
sub eax ebx
mov [ ebp + 0x20 ] eax
test eax eax
jne r-xdata
dec eax
mov [ ebp - 0x1c4 ] eax
mov edi edi
mov cl [ esi + eax ]
mov [ eax ] cl
inc eax
dec edi
jne r-xdata
mov ebx [ ebp - 0x1c0 ]
pop edi
pop esi
dec [ ebp - 0x1c4 ]
jne r-xdata
mov eax [ ebp - 0x1bc ]
lea ecx [ ebp - 0x18 ]
sub ecx eax
mov esi ebx
mov ecx 0x34
lea esi [ ebp - 0x1b8 ]
lea edi [ ebp - 0xe8 ]
push 0x14
lea edx [ ebp - 0x18 ]
[ edi ] [ esi ]
push edx
lea ecx [ ebp - 0xe8 ]
call sub_426320
push 0x14
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0xe8 ]
call sub_426a60
test ebx ebx
je r-xdata
mov dl [ ecx + eax ]
xor [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_427eb0
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x1c8 ] ecx
mov ecx [ ebp + 0xc ]
push ebx
push ecx
push eax
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x1bc ] edx
call sub_426ad0
mov ebx [ ebp + 0x20 ]
mov [ ebp - 0x1c0 ] 0x1
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x18 ]
push esi
dec edx
push edi
mov [ ebp - 0x1c4 ] edx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx 0x34
lea esi [ ebp - 0x1b8 ]
lea edi [ ebp - 0xe8 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x1c8 ]
push eax
push ecx
lea ecx [ ebp - 0xe8 ]
call sub_426650
mov edx [ ebp - 0x1c0 ]
xor eax eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
cmp ebx 0x5
jb r-xdata
push 0x1
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0xe8 ]
call sub_426650
push 0x5
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0xe8 ]
call sub_426cb0
mov edx [ ebp - 0x1c4 ]
mov ecx 0x34
lea esi [ ebp - 0x1b8 ]
lea edi [ ebp - 0xe8 ]
push edx
lea eax [ ebp - 0x18 ]
[ edi ] [ esi ]
push eax
lea ecx [ ebp - 0xe8 ]
call sub_426d10
mov esi [ ebp - 0x1bc ]
test ebx ebx
je r-xdata
lea ebx [ eax + 0x5 ]
mov eax [ ebp + 0x20 ]
inc [ ebp - 0x1c0 ]
sub eax ebx
lea ecx [ esi + ebx * 4 ]
mov [ ebp - 0x1bc ] ecx
mov [ ebp + 0x20 ] eax
test eax eax
jne r-xdata
lea ecx [ ebp - 0x18 ]
mov eax esi
sub ecx esi
mov edx ebx
lea esp [ esp ]
mov ebx [ ebp + 0x20 ]
pop edi
pop esi
mov edi [ ecx + eax ]
mov [ eax ] edi
add eax 0x4
dec edx
jne r-xdata
sub_428180
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
lea eax [ esi + 0x18 ]
jne r-xdata
cmp [ esi + 0x1c ] 0x0
lea eax [ esi + 0x1c ]
je r-xdata
push eax
call sub_431e20
add esp 0x4
test eax eax
jne r-xdata
push eax
call sub_431e20
add esp 0x4
xor eax eax
pop esi
retn
pop esi
retn
sub_428260
movzx eax [ ecx + 0x94 ]
add eax [ ecx + 0x90 ]
push esi
movzx esi [ ecx + 0x2 ]
shr si 0x3
push edi
xor edx edx
xor edi edi
and esi 0x1
shl esi 0x4
add eax esi
adc edx edi
add eax [ ecx + 0x10 ]
pop edi
adc edx [ ecx + 0x14 ]
pop esi
retn
sub_428290
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
pop ebp
retn 0x10
sub_4282b0
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
lea eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x10 ] 0x0
lea eax [ esi + 0x10 ]
je r-xdata
push eax
call sub_431e20
add esp 0x4
test eax eax
jne r-xdata
push eax
call sub_431e20
add esp 0x4
xor eax eax
pop esi
retn
pop esi
retn
sub_4282f0
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov [ esi + 0x14 ] 0x1
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
lea eax [ esi + 0xc ]
je r-xdata
mov [ eax + 0x20 ] 0x80004004
add eax 0x18
push eax
call sub_431d10
add esp 0x4
mov eax [ esi + 0x8 ]
add esi 0x8
push eax
call sub_431c70
push esi
call sub_431c30
add esp 0x8
pop esi
retn
push eax
call sub_431d10
add esp 0x4
sub_428340
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x3c ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0x8 ]
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebp
retn 0x8
sub_4283b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_428440
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
xor eax eax
cmp [ esi + 0xc ] eax
pop esi
setne al
retn
push __dos_header
call sub_410610
add esp 0x4
mov [ esi + 0xc ] eax
sub_428470
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub eax 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
add eax 0x10
dec eax
je r-xdata
xor eax eax
pop ebp
retn 0x14
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
add eax 0x10
add [ eax ] edx
adc [ eax + 0x4 ] ecx
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
add edx [ ebp + 0xc ]
lea eax [ ecx + 0x10 ]
mov ecx [ ecx + 0x1c ]
adc ecx [ ebp + 0x10 ]
jmp r-xdata
mov eax 0x80030001
pop ebp
retn 0x14
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
sub_428550
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_428590
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_4285e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_428640
push ebp
mov ebp esp
push 0xffffffff
push sub_4525a8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4286c0
push ebp
mov ebp esp
push 0xffffffff
push sub_4525d8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_428740
push ebp
mov ebp esp
push 0xffffffff
push sub_452608
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_4287c0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404690
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ecx + eax * 4 ] edx
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
pop esi
pop ebp
retn 0x4
sub_428810
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_428840
push ebp
mov ebp esp
push 0xffffffff
push sub_452638
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4288b0
push ebp
mov ebp esp
push 0xffffffff
push sub_452668
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_428920
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_428950
push ebp
mov ebp esp
push 0xffffffff
push sub_452698
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4289c0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4289f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_428a10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_428a30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_428a50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_428a80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_428aa0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
add ecx ebx
push edi
push ecx
mov ecx esi
call sub_404510
xor edi edi
test ebx ebx
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov ecx [ eax + edi * 4 ]
mov [ ebp - 0x4 ] ecx
mov ecx esi
call sub_404690
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 ] ecx
inc [ esi + 0x8 ]
inc edi
cmp edi ebx
jl r-xdata
sub_428b30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
push ecx
mov [ esi ] 0x0
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
call sub_431f20
add esp 0x4
mov [ esi + 0x24 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_428b70
push ebp
mov ebp esp
push 0xffffffff
push sub_4526de
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x2
call sub_4320a0
lea eax [ esi + 0x24 ]
push eax
call sub_431c30
add esp 0x4
lea ecx [ esi + 0xc ]
push ecx
call [ DeleteCriticalSection@IAT ]
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_432050
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_428c40
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x54 ] edi
test edi edi
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov [ esi + 0x50 ] edi
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_428c90
push esi
mov esi ecx
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x54 ] 0x0
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x50 ] 0x0
sub_428cf0
push ebp
mov ebp esp
push 0xffffffff
push sub_452708
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_432cd0
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_415340
mov esi eax
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_428d70
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push eax
call sub_431c70
add esp 0x4
cmp [ esi + 0x14 ] 0x0
jne r-xdata
pop esi
retn
push ebx
push edi
lea ebx [ esi + 0xa8 ]
lea ecx [ ecx ]
lea eax [ esi + 0x10 ]
push eax
call sub_431d10
mov eax [ esi + 0xc ]
push eax
call sub_431c70
add esp 0x8
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x24 ]
mov edx [ esi + 0x28 ]
mov edi [ esi ]
push ebx
push eax
push ecx
mov ecx [ esi + 0x4 ]
push edx
push ecx
push edi
lea ecx [ esi + 0x2c ]
call sub_434230
mov [ esi + 0xa4 ] eax
test eax eax
jne r-xdata
pop edi
pop ebx
mov edx [ eax ]
mov edx [ edx + 0xc ]
lea ecx [ esi + 0xb0 ]
push ecx
push ebx
push eax
call edx
mov [ esi + 0xa4 ] eax
sub_428e50
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] 0x4
mov [ eax + 0x4 ] r--data
pop ebp
retn 0x4
sub_428e80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor edi edi
mov esi ecx
cmp ebx edi
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax edi
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
lea edx [ esi + 0x34 ]
push edx
mov eax ebx
mov [ esi + 0x30 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov cl [ ebp + 0xc ]
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
pop edi
mov [ esi + 0x38 ] cl
pop esi
pop ebx
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_428ef0
push ebp
mov ebp esp
push 0xffffffff
push sub_452738
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ esi + 0x3c ]
push edi
mov [ ebp - 0x10 ] edi
call [ EnterCriticalSection@IAT ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
test ebx ebx
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov [ esi + ebx * 8 + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ esi + ebx * 8 + 0x14 ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov ecx [ eax ]
mov [ esi + ebx * 8 + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + ebx * 8 + 0x24 ] edx
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
push ecx
call [ LeaveCriticalSection@IAT ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x28 ]
add eax [ esi + 0x20 ]
mov ecx [ esi + 0x2c ]
adc ecx [ esi + 0x24 ]
mov eax [ esi + 0x18 ]
add eax [ esi + 0x10 ]
mov ecx [ esi + 0x1c ]
adc ecx [ esi + 0x14 ]
jmp r-xdata
mov edx [ esi + 0x8 ]
add edx eax
mov eax [ esi + 0xc ]
mov esi [ esi + 0x30 ]
adc eax ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
mov ecx [ esi ]
mov eax [ ecx + 0x10 ]
lea edx [ ebp - 0x18 ]
push edx
push esi
call eax
push edi
mov esi eax
call [ LeaveCriticalSection@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_429000
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x3c ]
push edi
mov [ ebp + 0x8 ] edi
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x34 ]
mov ebx [ ebp + 0xc ]
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
push ebx
push eax
mov eax [ ecx + 0xc ]
call eax
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ ebx ]
mov [ esi + 0x10 ] edx
mov eax [ ebx + 0x4 ]
mov [ esi + 0x14 ] eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov ecx [ eax ]
mov [ esi + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x24 ] edx
mov eax [ esi + 0x28 ]
add eax [ esi + 0x20 ]
mov ecx [ esi + 0x2c ]
adc ecx [ esi + 0x24 ]
mov eax [ esi + 0x18 ]
add eax [ esi + 0x10 ]
mov ecx [ esi + 0x1c ]
adc ecx [ esi + 0x14 ]
jmp r-xdata
mov edx [ esi + 0x8 ]
add edx eax
mov eax [ esi + 0xc ]
mov esi [ esi + 0x30 ]
adc eax ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ esi ]
mov eax [ ecx + 0x10 ]
lea edx [ ebp - 0x8 ]
push edx
push esi
call eax
push edi
mov esi eax
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4290d0
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
lea eax [ esi + 0x3c ]
push eax
call sub_431f20
add esp 0x4
mov eax esi
pop esi
retn
sub_429100
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_429160
push ebp
mov ebp esp
push 0xffffffff
push sub_45276b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea eax [ esi + 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x0
call [ DeleteCriticalSection@IAT ]
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov esi [ esi + 0x30 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_429210
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_429280
xor eax eax
push esi
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov edx 0x8
mov [ esi + 0x14 ] edx
mov ecx r--data
mov [ esi + 0x4 ] ecx
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
lea eax [ esi + 0x40 ]
push eax
mov [ esi + 0x28 ] edx
mov [ esi + 0x18 ] ecx
call sub_431f20
add esp 0x4
mov eax esi
pop esi
retn
sub_4292c0
push ebp
mov ebp esp
push 0xffffffff
push sub_4527a3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea eax [ esi + 0x40 ]
push eax
mov [ ebp - 0x4 ] 0x1
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x18 ]
call sub_404780
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call sub_404780
mov esi [ esi ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
call edx
sub_429360
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
cmp ebx eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
push edi
push 0x1
mov eax ebx
push 0x0
mov [ esi + 0x8 ] ebx
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push 0x0
push eax
call edx
test eax eax
jne r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
lea ebx [ esi + 0x18 ]
push ebx
push 0x2
push 0x0
push 0x0
push eax
call edx
test eax eax
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push edi
push 0x0
push edx
mov edx [ edi ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov [ esi + 0x24 ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x20 ] edx
mov edx [ ebx ]
mov [ esi + 0x2c ] eax
mov [ esi + 0x28 ] edx
mov [ esi + 0x30 ] ecx
mov [ esi + 0x34 ] ecx
mov [ esi + 0x38 ] ecx
xor eax eax
sub_429410
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov esi ecx
je r-xdata
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x34 ]
cmp [ esi + 0x20 ] ecx
lea edi [ esi + 0x20 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ eax ]
push edi
push 0x0
push edx
push ecx
mov ecx [ ebx + 0x10 ]
push eax
call ecx
test eax eax
jne r-xdata
cmp [ edi + 0x4 ] edx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x30 ]
mov ebx [ esi + 0x38 ]
and eax 0x3fffff
mov ecx __dos_header
sub ecx eax
cmp ecx ebx
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp ebx ecx
jb r-xdata
mov ebx ecx
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
push ebx
add edx eax
push edx
push ecx
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
mov ebx ecx
add [ edi ] ebx
mov ecx [ edi ]
adc [ edi + 0x4 ] eax
mov edi [ edi + 0x4 ]
cmp [ esi + 0x2c ] edi
ja r-xdata
add [ esi + 0x30 ] ebx
adc [ esi + 0x34 ] eax
sub [ esi + 0x38 ] ebx
sub [ ebp + 0x8 ] ebx
jne r-xdata
jb r-xdata
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] edi
cmp [ esi + 0x28 ] ecx
jae r-xdata
sub_4294e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4527cb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_429410
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x1c ]
cmp ecx [ esi + 0x28 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov edi [ eax ]
push edx
push ecx
mov ecx [ edi + 0x14 ]
push eax
call ecx
cmp edx [ esi + 0x2c ]
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ eax ]
push 0x0
push 0x0
push edx
mov edx [ edi + 0x10 ]
push ecx
push eax
call edx
cmp edx [ esi + 0x24 ]
je r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
cmp ecx [ esi + 0x20 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
call edx
mov eax [ esi + 0xc ]
push eax
call sub_410630
mov esi [ esi + 0x8 ]
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
sub_4295a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_429600
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] ebx
cmp ebx [ esi + 0x2c ]
ja r-xdata
cmp ebx [ esi + 0x34 ]
ja r-xdata
jb r-xdata
mov ecx [ esi + 0x38 ]
xor eax eax
add ecx [ esi + 0x30 ]
adc eax [ esi + 0x34 ]
cmp ebx eax
ja r-xdata
jb r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push ebx
push edi
push eax
call edx
test eax eax
jne r-xdata
cmp edi [ esi + 0x28 ]
jae r-xdata
xor eax eax
jb r-xdata
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] ebx
cmp edi [ esi + 0x30 ]
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ebx
sub edi [ esi + 0x30 ]
mov [ esi + 0x38 ] edi
cmp edi ecx
jae r-xdata
sub_429680
push ebp
mov ebp esp
push 0xffffffff
push sub_4527f8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4296d0
push ebp
mov ebp esp
push 0xffffffff
push sub_452833
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
lea esi [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] esi
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_405040
mov esi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov edi [ edi ]
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push edi
call eax
sub_429760
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ esi ] ecx
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x8 ]
mov [ esi ] 0x0
mov [ esi ] eax
pop esi
pop ebp
retn 0x4
sub_4297d0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
push esi
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edi edi
add edi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx esi
call sub_404780
push esi
call sub_43c44d
add esp 0x4
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
sub_429860
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
add ecx ebx
push edi
push ecx
mov ecx esi
call sub_404510
xor edi edi
test ebx ebx
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
movzx ecx [ edi + eax ]
mov [ ebp - 0x4 ] cl
mov ecx esi
call sub_404690
movzx ecx [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ edx + eax ] cl
inc [ esi + 0x8 ]
inc edi
cmp edi ebx
jl r-xdata
sub_4298e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x7
push edi
mov edi ecx
je r-xdata
mov eax [ esi + 0xc ]
mov edx 0x9901
mov [ esi ] dx
movzx ecx [ edi ]
mov [ eax ] cl
movzx edx [ edi + 0x1 ]
mov [ eax + 0x1 ] dl
mov [ eax + 0x2 ] 0x4541
movzx ecx [ edi + 0x2 ]
mov [ eax + 0x4 ] cl
movzx edx [ edi + 0x4 ]
mov [ eax + 0x5 ] dl
movzx ecx [ edi + 0x5 ]
pop edi
mov [ eax + 0x6 ] cl
pop esi
pop ebp
retn 0x4
push ebx
push 0x7
call sub_43c55a
mov ebx eax
mov eax [ esi + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
push ecx
call sub_43c44d
add esp 0x4
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] 0x7
pop ebx
cmp eax 0x7
jb r-xdata
push eax
mov eax [ esi + 0xc ]
push eax
push ebx
call sub_43d220
add esp 0xc
mov eax 0x7
sub_429990
push esi
push edi
mov edi ecx
mov esi [ edi + 0x8 ]
dec esi
js r-xdata
pop edi
pop esi
retn
lea ebx [ ebx ]
dec esi
jns r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
push 0x1
push esi
mov ecx edi
call edx
mov eax [ edi + 0xc ]
mov ecx [ eax + esi * 4 ]
mov edx 0x9901
cmp [ ecx ] dx
je r-xdata
sub_4299d0
push ebp
mov ebp esp
push 0xffffffff
push sub_452860
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ ebp + 0xc ]
mov ecx [ edi ]
mov ecx [ ecx + 0x10 ]
lea edx [ ebp - 0x20 ]
push edx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
xor ebx ebx
push ebx
push edx
push eax
push edi
call ecx
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x28
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov [ eax + 0x8 ] ebx
mov esi eax
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
mov [ ebp - 0x4 ] ebx
call edx
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov [ ebp - 0x18 ] esi
cmp esi ebx
je r-xdata
mov [ esi + 0x8 ] edi
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add edi 0x8
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov [ ebp - 0x10 ] ebx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_432cd0
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x10 ]
push ecx
push edx
push esi
call sub_415340
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x10 ]
mov edx [ eax ]
push edi
push edi
push eax
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
push esi
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax edi
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429b20
push ebp
mov ebp esp
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x1c ]
xor edx edx
mov [ esi + 0x1c ] ecx
mov [ esi + 0x2 ] dx
push ebx
cmp [ edi + 0x1 ] dl
je r-xdata
mov ecx esi
call sub_41ced0
mov bl al
mov bl [ edi + 0x2 ]
lea eax [ edi + 0x20 ]
push eax
lea ecx [ esi + 0x20 ]
call sub_4083b0
movzx ecx [ edi + 0x4 ]
push ecx
mov ecx esi
call sub_41d050
mov edx [ edi + 0x10 ]
mov [ esi + 0x44 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x2c ]
mov [ esi + 0x50 ] ecx
mov edx [ edi + 0x30 ]
mov [ esi + 0x54 ] edx
mov eax [ edi + 0x34 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x60 ] edx
mov eax [ edi + 0x40 ]
mov [ esi + 0x64 ] eax
mov cl [ edi + 0x3 ]
mov [ esi + 0x8a ] cl
jmp r-xdata
xor al al
mov edx [ ebp + 0xc ]
cmp [ edx + 0x44 ] bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x30 ]
mov [ esi + 0x48 ] edx
mov eax [ eax + 0x34 ]
mov [ esi + 0x4c ] eax
mov [ esi + 0x1 ] 0x0
mov [ esi + 0x40 ] 0x3f
test bl bl
jne r-xdata
pop ebp
retn
xor eax eax
mov [ esi ] 0x14
mov [ esi + 0x4 ] ax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0xc ] eax
mov al 0x1
jmp r-xdata
push eax
mov ecx esi
call sub_41d030
test bl bl
pop ebx
je r-xdata
sub_429c10
push ebp
mov ebp esp
push 0xffffffff
push sub_4528b1
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x6c ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov eax [ esi + 0x60 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_43c44d
mov eax [ esi + 0x14 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_43c44d
add esp 0x8
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_429cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_4528d8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x10 ] ebx
xor edi edi
cmp [ ebx + 0x8 ] edi
jle r-xdata
mov [ ebx ] r--data
mov ecx ebx
mov [ ebp - 0x4 ] 0x0
call sub_404680
mov ecx ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0xc ]
mov esi [ eax + edi * 4 ]
mov eax [ esi + 0x20 ]
mov [ esi + 0x14 ] 0x1
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
lea eax [ esi + 0xc ]
je r-xdata
mov [ eax + 0x20 ] 0x80004004
add eax 0x18
push eax
call sub_431d10
add esp 0x4
mov ecx [ esi + 0x8 ]
add esi 0x8
push ecx
call sub_431c70
push esi
call sub_431c30
inc edi
add esp 0x8
cmp edi [ ebx + 0x8 ]
jl r-xdata
push eax
call sub_431d10
add esp 0x4
sub_429d80
push ebp
mov ebp esp
push 0xffffffff
push sub_452913
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp [ esi + 0xc ] edi
jle r-xdata
add esi 0x4
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_404680
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x10 ]
mov edx [ esi ]
mov ecx [ eax + edi * 4 ]
push edx
call sub_432390
inc edi
cmp edi [ esi + 0xc ]
jl r-xdata
sub_429e10
push ebp
mov ebp esp
push 0xffffffff
push sub_45293b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea eax [ esi + 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x0
call [ DeleteCriticalSection@IAT ]
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov eax [ esi + 0x30 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_429ea0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_429ed0
push ebp
mov ebp esp
push esi
push edi
push 0x58
mov edi ecx
call sub_43c55a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor esi esi
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
lea eax [ esi + 0x3c ]
mov [ esi + 0x30 ] 0x0
push eax
mov [ esi + 0x34 ] 0x0
call sub_431f20
add esp 0x4
jmp r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov [ edi + 0x8 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
mov [ edi + 0xc ] esi
push ecx
mov ecx [ edi + 0x8 ]
call sub_428e80
pop edi
pop esi
pop ebp
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_429f50
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi eax
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov ecx [ esi + 0x4c ]
movzx edx [ esi + 0x94 ]
mov eax [ esi + 0x48 ]
add edx [ esi + 0x90 ]
mov [ ebp - 0x14 ] ecx
movzx ecx [ esi + 0x2 ]
shr cx 0x3
mov [ ebp - 0x18 ] eax
xor eax eax
xor edi edi
and ecx 0x1
shl ecx 0x4
add edx ecx
mov ecx [ ebp + 0x10 ]
adc eax edi
add edx [ esi + 0x10 ]
push ecx
adc eax [ esi + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov edx [ ebx + 0x30 ]
mov [ esi + 0x48 ] edx
lea edx [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x34 ]
push edx
push ebx
mov [ esi + 0x4c ] eax
call sub_4299d0
add esp 0xc
test eax eax
jne r-xdata
mov al [ esi + 0x2 ]
shr al 0x3
test al 0x1
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0xc ]
add [ eax ] ecx
push edx
push ecx
adc [ eax + 0x4 ] edx
mov ecx ebx
call sub_4328e0
xor eax eax
movzx eax [ esi + 0x94 ]
cdq
xor ebx ebx
add eax [ esi + 0x90 ]
lea ecx [ edi + 0x20 ]
adc edx ebx
add eax [ esi + 0x48 ]
push ecx
adc edx [ esi + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x14 ]
mov [ ebp - 0x14 ] edx
mov edx [ esi + 0x10 ]
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
call sub_4083b0
movzx edx [ edi + 0x4 ]
push edx
mov ecx esi
call sub_41d050
mov eax [ edi + 0x14 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x2c ]
mov [ esi + 0x50 ] ecx
mov edx [ edi + 0x30 ]
mov [ esi + 0x54 ] edx
mov eax [ edi + 0x34 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x60 ] edx
mov eax [ edi + 0x40 ]
mov [ esi + 0x64 ] eax
mov cl [ edi + 0x3 ]
mov [ esi + 0x8a ] cl
lea ecx [ esi + 0x68 ]
call sub_429990
lea ecx [ esi + 0x2c ]
call sub_429990
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ esi + 0x2c ]
call sub_40d3a0
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
mov edi [ ebp + 0x8 ]
movzx eax al
push eax
mov eax [ esi + 0x1c ]
push ecx
mov ecx [ esi + 0x18 ]
push edx
movzx edx [ esi + 0x24 ]
push eax
push ecx
push edx
mov ecx edi
call sub_432990
mov eax [ edi + 0x30 ]
mov [ esi + 0x48 ] eax
mov ecx [ edi + 0x34 ]
mov [ esi + 0x4c ] ecx
mov ecx edi
call sub_432c90
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x18 ]
push eax
push edi
call sub_4299d0
add esp 0xc
test eax eax
jne r-xdata
pop edi
mov eax 0x80004001
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
add [ eax ] ecx
mov edx [ ebp - 0xc ]
push esi
adc [ eax + 0x4 ] edx
mov ecx edi
call sub_432df0
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_42a100
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edi ecx
push ebx
call sub_429b20
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x54 ]
mov eax [ edi + 0x1c ]
mov ecx [ edi + 0x18 ]
add esp 0x8
push edx
movzx edx [ esi + 0x24 ]
push eax
push ecx
push edx
mov ecx ebx
call sub_432940
push esi
mov ecx ebx
call sub_432df0
pop edi
pop esi
pop ebp
retn
sub_42a140
push ebp
mov ebp esp
push 0xffffffff
push sub_4529aa
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x6
call sub_429c10
mov eax [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea eax [ esi + 0x10 ]
push eax
call sub_431c30
lea ecx [ esi + 0xc ]
push ecx
call sub_431c30
lea edx [ esi + 0x8 ]
push edx
call sub_431c30
mov esi [ esi ]
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_42a240
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4294e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_42a270
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x8
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ eax ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
push edi
mov edi [ esi + 0x38 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] edx
test edi edi
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x10
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
cmp edx [ esi + 0x34 ]
ja r-xdata
cmp ebx [ esi + 0x10 ]
jne r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x28 ]
cmp eax [ esi + 0x14 ]
ja r-xdata
xor eax eax
mov ecx edi
add ecx [ esi + 0x30 ]
adc eax [ esi + 0x34 ]
cmp eax edx
ja r-xdata
jb r-xdata
mov eax [ esi + 0x38 ]
mov edx [ esi + 0x10 ]
xor ecx ecx
add eax [ esi + 0x30 ]
mov edi __dos_header
adc ecx [ esi + 0x34 ]
mov ebx eax
and ebx 0x3fffff
sub edi ebx
sub edx eax
mov [ ebp - 0x8 ] edx
mov edx [ esi + 0x14 ]
sbb edx ecx
xor ecx ecx
cmp ecx edx
jb r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x14 ]
je r-xdata
jb r-xdata
mov ebx [ ebp - 0x8 ]
jb r-xdata
push edi
mov ecx esi
call sub_429410
test eax eax
je r-xdata
cmp ebx eax
jae r-xdata
test edi edi
je r-xdata
ja r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
jne r-xdata
lea esp [ esp ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] eax
cmp ecx [ esi + 0x10 ]
jae r-xdata
cmp eax [ esi + 0x2c ]
ja r-xdata
cmp ecx ebx
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx __dos_header
sub ecx [ esi + 0x38 ]
cmp edi ecx
jbe r-xdata
mov edi [ esi + 0x10 ]
sub edi eax
cmp edi [ ebp - 0x8 ]
jbe r-xdata
mov edx [ esi + 0x10 ]
mov edi edx
and edi 0x3fffff
mov eax __dos_header
sub eax edi
cmp [ ebp + 0x10 ] eax
jb r-xdata
mov eax [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] edx
mov ebx ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
jb r-xdata
mov edx [ esi + 0xc ]
push edi
add edx ebx
push 0x0
push edx
call sub_43d590
add esp 0xc
add [ esi + 0x38 ] edi
jmp r-xdata
lea esp [ esp ]
mov eax ecx
xor ecx ecx
add eax [ esi + 0x30 ]
adc ecx [ esi + 0x34 ]
cmp edx eax
jne r-xdata
mov [ ebp + 0x10 ] eax
push edi
mov ecx esi
call sub_429410
test eax eax
jne r-xdata
cmp ecx [ esi + 0x28 ]
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx __dos_header
sub ecx [ esi + 0x38 ]
cmp edi ecx
ja r-xdata
sub eax edx
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ esi + 0x14 ] ecx
je r-xdata
mov edx [ esi + 0x30 ]
and edx 0xfffff
mov eax 0x100000
sub eax edx
push eax
mov ecx esi
call sub_429410
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0xc ]
push eax
push ecx
add edx edi
push edx
call sub_43bd20
mov eax [ ebp + 0x14 ]
add esp 0xc
test eax eax
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ esi + 0x38 ] __dos_header
jne r-xdata
mov edx [ ebp + 0x10 ]
add [ esi + 0x10 ] edx
mov ecx [ esi + 0x10 ]
adc [ esi + 0x14 ] 0x0
mov eax [ esi + 0x14 ]
cmp [ esi + 0x1c ] eax
ja r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
mov eax [ esi + 0x30 ]
and eax 0x3fffff
cmp eax edi
jbe r-xdata
mov eax [ esi + 0x30 ]
and eax 0xfffff
mov ecx 0x100000
sub ecx eax
push ecx
mov ecx esi
call sub_429410
test eax eax
jne r-xdata
xor eax eax
jb r-xdata
mov edx [ ebp + 0x10 ]
add [ esi + 0x38 ] edx
sub eax edi
cmp [ ebp + 0x10 ] eax
jb r-xdata
mov [ esi + 0x18 ] ecx
mov [ esi + 0x1c ] eax
cmp [ esi + 0x18 ] ecx
jae r-xdata
mov [ ebp + 0x10 ] eax
sub_42a4e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42a140
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_42a510
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f940
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_42a540
push ebp
mov ebp esp
push 0xffffffff
push sub_4529d8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x4
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
call sub_404680
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_428aa0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42a5b0
push ebp
mov ebp esp
push 0xffffffff
push sub_452a08
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
call sub_404680
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_429860
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42a620
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x38 ] 0x4
mov [ eax + 0x28 ] r--data
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x48 ] 0x1
mov [ eax + 0x50 ] ecx
mov [ eax + 0x54 ] ecx
pop ebp
retn 0x4
sub_42a670
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_42a6d0
push ebp
mov ebp esp
push 0xffffffff
push sub_452a67
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x4
call sub_434fc0
mov eax [ esi + 0x54 ]
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
lea eax [ esi + 0x1c ]
push eax
call sub_431c30
add esi 0x18
push esi
call sub_431c30
add esp 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_42a770
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_42a6d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_42a7a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_42a6d0
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_42a7d0
push ebp
mov ebp esp
push 0xffffffff
push sub_452ada
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi ] eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] al
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x6
call sub_434f40
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42a840
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
lea eax [ esi + 0x3c ]
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_42a890
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_42a8c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
call sub_404680
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_429860
lea eax [ edi + 0x14 ]
lea ebx [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ edi + 0x20 ]
mov [ esi + 0x20 ] edx
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x28 ]
mov [ esi + 0x28 ] ecx
movzx edx [ edi + 0x2c ]
mov [ esi + 0x2c ] dl
mov eax [ edi + 0x30 ]
mov [ esi + 0x30 ] eax
mov ecx [ edi + 0x34 ]
mov [ esi + 0x34 ] ecx
mov edx [ edi + 0x38 ]
mov [ esi + 0x38 ] edx
mov eax [ edi + 0x3c ]
mov [ esi + 0x3c ] eax
mov ecx [ edi + 0x40 ]
mov [ esi + 0x40 ] ecx
movzx edx [ edi + 0x44 ]
lea eax [ edi + 0x48 ]
lea ebx [ esi + 0x48 ]
mov [ esi + 0x44 ] dl
cmp eax ebx
je r-xdata
mov ecx [ ebx ]
mov [ ebx + 0x4 ] 0x0
xor edx edx
mov [ ecx ] dx
mov eax [ eax + 0x4 ]
push eax
mov ecx ebx
call sub_403e50
mov edx [ edi + 0x14 ]
mov ecx [ ebx ]
mov cl [ edi + 0x54 ]
mov [ esi + 0x54 ] cl
mov dl [ edi + 0x55 ]
pop edi
mov [ esi + 0x55 ] dl
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebx ]
mov [ ebx + 0x4 ] 0x0
mov [ ecx ] 0x0
mov edx [ eax + 0x4 ]
push edx
mov ecx ebx
call sub_4026e0
mov edx [ edi + 0x48 ]
mov ecx [ ebx ]
jmp r-xdata
movzx eax [ edx ]
mov [ ecx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
mov ecx [ edi + 0x18 ]
mov [ ebx + 0x4 ] ecx
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov eax [ edi + 0x4c ]
mov [ ebx + 0x4 ] eax
sub_42a9b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov ecx esi
call sub_4294e0
push esi
call sub_43c44d
add esp 0x4
xor eax eax
sub_42a9e0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
push esi
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edi edi
add edi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx esi
call sub_42a140
push esi
call sub_43c44d
add esp 0x4
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
sub_42aa50
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0x8 ]
push esi
lea esi [ edx + ecx ]
cmp esi eax
jle r-xdata
test ecx ecx
jle r-xdata
sub eax edx
mov [ ebp + 0xc ] eax
mov ecx eax
push ecx
push edx
mov ecx ebx
call sub_404620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ edx * 4 ]
mov [ ebp - 0x4 ] ecx
mov edi edi
add edi 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx esi
call sub_40f940
push esi
call sub_43c44d
add esp 0x4
mov eax [ ebx + 0xc ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
pop edi
sub_42aac0
push ebp
mov ebp esp
push 0xffffffff
push sub_452b1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov ebx 0x1
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
call sub_404680
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_429860
lea eax [ edi + 0x14 ]
push eax
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x4 ] ebx
call sub_403f20
mov ecx [ edi + 0x20 ]
mov [ esi + 0x20 ] ecx
mov edx [ edi + 0x24 ]
mov [ esi + 0x24 ] edx
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
movzx ecx [ edi + 0x2c ]
mov [ esi + 0x2c ] cl
mov edx [ edi + 0x30 ]
mov [ esi + 0x30 ] edx
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x38 ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x40 ]
mov [ esi + 0x40 ] eax
movzx ecx [ edi + 0x44 ]
mov [ esi + 0x44 ] cl
xor eax eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov edx [ edi + 0x4c ]
push edx
lea ecx [ esi + 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_4026e0
mov edx [ edi + 0x48 ]
mov ecx [ esi + 0x48 ]
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov eax [ edi + 0x4c ]
mov [ esi + 0x4c ] eax
mov cl [ edi + 0x54 ]
mov [ esi + 0x54 ] cl
mov dl [ edi + 0x55 ]
mov [ esi + 0x55 ] dl
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42abc0
push ebp
mov ebp esp
push 0xffffffff
push sub_452b48
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x4
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
call sub_404680
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_428aa0
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42ac40
push ebp
mov ebp esp
push 0xffffffff
push sub_452b78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov al [ edi + 0x16 ]
mov [ esi ] al
mov cx [ edi + 0x14 ]
mov [ esi + 0x4 ] cx
mov edx [ edi + 0x10 ]
mov [ esi + 0xc ] edx
mov eax [ edi ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0xc ]
lea ecx [ esi + 0x2c ]
mov [ esi + 0x14 ] eax
call sub_404680
lea ecx [ esi + 0x68 ]
mov [ ebp - 0x10 ] ecx
call sub_404680
xor eax eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ ebp + 0xc ]
mov ecx 0x2
mov [ ebp - 0x18 ] cx
mov cx [ edi + 0x14 ]
mov [ ebp - 0x16 ] dl
mov edx 0x63
mov [ ebp - 0x14 ] cx
mov [ esi + 0x4 ] dx
mov [ esi + 0xc ] eax
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_4298e0
lea ecx [ ebp - 0x28 ]
push ecx
lea ecx [ esi + 0x2c ]
call sub_40fa00
mov ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x28 ]
push edx
call sub_40fa00
mov eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_43c44d
add esp 0x4
sub_42ad30
push ebp
mov ebp esp
push 0xffffffff
push sub_452bbe
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_42aac0
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov eax [ edi + 0x5c ]
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov al [ edi + 0x64 ]
mov [ esi + 0x64 ] al
mov ecx [ edi + 0x68 ]
mov [ esi + 0x68 ] ecx
mov eax [ edi + 0x6c ]
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x6c ] eax
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov ecx [ edi + 0x70 ]
mov [ esi + 0x70 ] ecx
mov edx [ edi + 0x74 ]
mov [ esi + 0x74 ] edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_42ade0
push ebp
mov ebp esp
push 0xffffffff
push sub_452be8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x4
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
call sub_404680
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_428aa0
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov dl [ edi + 0x20 ]
mov [ esi + 0x20 ] dl
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42ae60
push ebp
mov ebp esp
push 0xffffffff
push sub_452c5a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0xc ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov cl [ edi + 0x14 ]
mov [ esi + 0x14 ] cl
mov edx [ edi + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x1c ]
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ edi + 0x24 ]
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x24 ] eax
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ edi + 0x28 ]
mov [ ebp - 0x4 ] 0x5
mov [ esi + 0x28 ] eax
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x6
call sub_42ad30
mov ecx [ edi + 0xa4 ]
mov [ esi + 0xa4 ] ecx
mov edx [ edi + 0xa8 ]
mov [ esi + 0xa8 ] edx
mov eax [ edi + 0xac ]
mov [ esi + 0xac ] eax
mov ecx [ edi + 0xb0 ]
mov [ esi + 0xb0 ] ecx
mov edx [ edi + 0xb4 ]
mov [ esi + 0xb4 ] edx
mov eax [ edi + 0xb8 ]
mov [ esi + 0xb8 ] eax
mov ecx [ edi + 0xbc ]
mov [ esi + 0xbc ] ecx
mov dl [ edi + 0xc0 ]
mov [ esi + 0xc0 ] dl
mov eax [ edi + 0xc4 ]
mov [ esi + 0xc4 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_42afb0
push ebp
mov ebp esp
push 0xffffffff
push sub_452c88
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x4
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
call sub_404680
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_428aa0
mov eax [ edi + 0x18 ]
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov dl [ edi + 0x20 ]
mov [ esi + 0x20 ] dl
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov ecx [ edi + 0x2c ]
mov [ esi + 0x2c ] ecx
mov edx [ edi + 0x30 ]
mov [ esi + 0x30 ] edx
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x38 ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x3c ] edx
mov al [ edi + 0x40 ]
mov [ esi + 0x40 ] al
mov cl [ edi + 0x41 ]
mov [ esi + 0x41 ] cl
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_42b060
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov ax [ edi ]
mov [ esi ] ax
mov cx [ edi + 0x2 ]
mov [ esi + 0x2 ] cx
mov dx [ edi + 0x4 ]
mov [ esi + 0x4 ] dx
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0xc ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov ecx [ edi + 0x18 ]
mov [ esi + 0x18 ] ecx
mov edx [ edi + 0x1c ]
lea eax [ edi + 0x20 ]
lea ebx [ esi + 0x20 ]
mov [ esi + 0x1c ] edx
cmp eax ebx
je r-xdata
lea ecx [ esi + 0x2c ]
call sub_404680
add edi 0x2c
push edi
lea ecx [ esi + 0x2c ]
call sub_40fb80
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebx ]
mov [ ebx + 0x4 ] 0x0
mov [ ecx ] 0x0
mov edx [ eax + 0x4 ]
push edx
mov ecx ebx
call sub_4026e0
mov edx [ edi + 0x20 ]
mov ecx [ ebx ]
jmp r-xdata
mov al [ edx ]
mov [ ecx ] al
inc ecx
inc edx
test al al
jne r-xdata
mov eax [ edi + 0x24 ]
mov [ ebx + 0x4 ] eax
sub_42b100
push ebp
mov ebp esp
push 0xffffffff
push sub_452cbb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0xc8
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ eax + edx * 4 ] edi
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_42ae60
mov edi eax
sub_42b180
push ebp
mov ebp esp
push 0xffffffff
push sub_452ceb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x48
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ eax + edx * 4 ] edi
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_42afb0
mov edi eax
sub_42b200
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_42b060
mov ax [ edi + 0x40 ]
mov [ esi + 0x40 ] ax
mov cx [ edi + 0x42 ]
mov [ esi + 0x42 ] cx
mov edx [ edi + 0x44 ]
mov [ esi + 0x44 ] edx
mov eax [ edi + 0x48 ]
mov [ esi + 0x48 ] eax
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x54 ]
mov [ esi + 0x54 ] eax
mov ecx [ edi + 0x58 ]
mov [ esi + 0x58 ] ecx
mov edx [ edi + 0x5c ]
mov [ esi + 0x5c ] edx
mov eax [ edi + 0x60 ]
mov [ esi + 0x60 ] eax
mov ecx [ edi + 0x64 ]
mov [ esi + 0x64 ] ecx
lea ecx [ esi + 0x68 ]
call sub_404680
lea edx [ edi + 0x68 ]
push edx
lea ecx [ esi + 0x68 ]
call sub_40fb80
lea eax [ edi + 0x7c ]
push eax
lea ecx [ esi + 0x7c ]
call sub_40d300
mov cl [ edi + 0x88 ]
mov [ esi + 0x88 ] cl
mov dl [ edi + 0x89 ]
mov [ esi + 0x89 ] dl
mov al [ edi + 0x8a ]
mov [ esi + 0x8a ] al
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
sub_42b2b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_42b200
mov eax [ edi + 0x90 ]
mov [ esi + 0x90 ] eax
mov cx [ edi + 0x94 ]
pop edi
mov [ esi + 0x94 ] cx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42b2f0
push ebp
mov ebp esp
push 0xffffffff
push sub_452d1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x90
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_404690
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov [ eax + edx * 4 ] edi
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_40ff50
mov edi eax
sub_42b370
push ebp
mov ebp esp
push 0xffffffff
push sub_452df6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x194
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x84 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x30 ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x7c ] ecx
mov ecx [ ebp + 0x20 ]
mov [ ebp - 0x8c ] edx
mov edx [ ebp + 0x24 ]
push 0x38
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x88 ] ecx
mov [ ebp - 0x50 ] edx
call sub_43c55a
add esp 0x4
mov [ ebp - 0x60 ] eax
xor esi esi
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
xor ebx ebx
mov ecx eax
call sub_415060
mov ebx eax
jmp r-xdata
mov edx [ ebp - 0x50 ]
push 0x1
push edx
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_414f50
push edi
lea ecx [ ebp - 0x1a0 ]
call sub_434f40
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] 0x4
mov [ ebp - 0x44 ] r--data
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x64 ] esi
cmp [ eax + 0x8 ] esi
jle r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x128 ] ebx
cmp ebx esi
je r-xdata
mov ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x30 ]
lea edx [ ebp - 0x44 ]
push edx
call sub_4333d0
mov [ ebp - 0x44 ] r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0xd
call sub_404680
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_404780
mov eax [ ebp - 0x134 ]
mov [ ebp - 0x4 ] 0x10
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0x5c ]
mov [ ebx + 0x20 ] ecx
mov ecx [ ebp - 0x58 ]
mov [ ebx + 0x2c ] ecx
mov ecx ebx
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x28 ] eax
call sub_414e60
mov edi eax
cmp edi esi
jne r-xdata
mov eax [ ebp - 0x140 ]
mov [ ebp - 0x4 ] 0xf
cmp eax esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x44 ] r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x4
call sub_404680
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_404780
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x64 ]
mov edi [ eax + ecx * 4 ]
push 0x4
mov [ ebp - 0x104 ] esi
mov [ ebp - 0x100 ] esi
mov [ ebp - 0xfc ] esi
call sub_43c55a
add esp 0x4
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0xfc ] esi
jle r-xdata
mov eax [ ebp - 0x144 ]
mov [ ebp - 0x4 ] 0xe
cmp eax esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x100 ]
mov [ ebp - 0x104 ] eax
mov [ ecx + eax ] 0x0
mov eax 0x4
mov ecx r--data
mov [ ebp - 0xfc ] eax
mov [ ebp - 0xf4 ] esi
mov [ ebp - 0xf0 ] esi
mov [ ebp - 0xec ] esi
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0xf8 ] ecx
mov [ ebp - 0xb8 ] esi
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xac ] eax
mov [ ebp - 0xbc ] ecx
mov [ ebp - 0xa8 ] r--data
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa0 ] esi
mov [ ebp - 0x9c ] 0x0
mov [ ebp - 0x9a ] 0x0
cmp [ edi + 0x1 ] 0x0
mov [ ebp - 0x4 ] 0x5
je r-xdata
xor ecx ecx
cmp [ ebp - 0x100 ] esi
jle r-xdata
mov eax [ ebp - 0x158 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_43c44d
mov ecx [ ebp - 0x18c ]
push ecx
mov [ ebp - 0x4 ] 0x11
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
mov [ ebp - 0x4 ] 0xffffffff
cmp ebx esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x8c ]
mov ecx [ eax + 0xc ]
mov edx [ edi + 0x8 ]
mov eax [ ecx + edx * 4 ]
push eax
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x2c ] eax
call sub_42b200
mov eax [ ebp - 0x2c ]
mov edx [ eax + 0x90 ]
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x94 ] edx
mov ax [ eax + 0x94 ]
push ecx
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x90 ] ax
call sub_418da0
test eax eax
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp - 0x104 ]
push eax
call sub_43c44d
mov eax [ ebp - 0x2c ]
add esp 0x4
jmp r-xdata
xor eax eax
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push ebx
call eax
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x3
call sub_40f940
mov [ ebp - 0x44 ] r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x6
call sub_404680
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_404780
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x1
call sub_429c10
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call eax
mov eax 0x80004001
jmp r-xdata
cmp [ edi ] al
je r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov edx [ ebp - 0x104 ]
mov dl [ edx + ecx ]
mov [ ecx + eax ] dl
inc ecx
cmp ecx [ ebp - 0x100 ]
jl r-xdata
mov ecx [ ebp - 0x7c ]
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x74 ]
push eax
push ebx
push ecx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x70 ] esi
push edx
lea esi [ ebp - 0x124 ]
mov eax edi
mov [ ebx + 0x30 ] 0x0
call sub_429f50
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
lea ecx [ ebp - 0x124 ]
call sub_41ced0
mov al [ edi + 0x2 ]
jmp r-xdata
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x3
call sub_40f940
mov [ ebp - 0x44 ] r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0xb
call sub_404680
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_404780
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x1
call sub_429c10
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call eax
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x74 ]
add [ ebx + 0x18 ] eax
mov ecx [ ebp - 0x70 ]
mov [ ebx + 0x30 ] 0x1
adc [ ebx + 0x1c ] ecx
mov [ ebp - 0x2c ] esi
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
mov edx [ edi + 0xc ]
push edx
push eax
mov eax [ ecx + 0x1c ]
mov [ ebp - 0x4 ] 0x7
call eax
mov [ ebp - 0x60 ] eax
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x30 ]
push edx
push eax
lea esi [ ebp - 0x124 ]
call sub_429b20
mov ecx [ ebp - 0x4c ]
movzx edx [ ecx + 0x54 ]
mov eax [ edi + 0x1c ]
mov ecx [ edi + 0x18 ]
mov esi [ ebp - 0x30 ]
add esp 0x8
push edx
mov edx [ ebp - 0x100 ]
push eax
push ecx
push edx
mov ecx esi
call sub_432940
lea eax [ ebp - 0x124 ]
push eax
mov ecx esi
call sub_432df0
jmp r-xdata
test al al
je r-xdata
xor esi esi
lea edx [ ebp - 0x124 ]
push edx
mov ecx eax
call sub_40ff50
mov esi eax
jmp r-xdata
cmp eax esi
jne r-xdata
mov ecx [ edi + 0x18 ]
add [ ebx + 0x18 ] ecx
mov edx [ edi + 0x1c ]
mov eax [ ebp - 0x50 ]
adc [ ebx + 0x1c ] edx
mov ecx [ eax ]
mov edx [ ecx + 0x20 ]
push esi
push eax
call edx
mov edi eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
cmp edi esi
jne r-xdata
push 0x90
call sub_43c55a
add esp 0x4
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0xc
test eax eax
je r-xdata
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x5
call sub_404690
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + eax * 4 ] esi
inc [ ebp - 0x3c ]
add [ ebx + 0x18 ] 0x1a
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x3
adc [ ebx + 0x1c ] 0x0
call sub_40f940
xor esi esi
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
cmp eax esi
je r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x30 ]
push eax
push ecx
lea esi [ ebp - 0x124 ]
call sub_429b20
mov esi [ ebp - 0x4c ]
movzx edx [ esi + 0x54 ]
mov eax [ edi + 0x1c ]
mov ecx [ edi + 0x18 ]
mov edi [ ebp - 0x30 ]
add esp 0x8
push edx
mov edx [ ebp - 0x100 ]
push eax
push ecx
push edx
mov ecx edi
call sub_432940
mov [ ebp - 0x48 ] 0x0
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0xa
call sub_4338f0
mov edx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x84 ]
push ebx
push edx
mov edx [ ebp - 0x78 ]
push eax
push ecx
push edx
lea ecx [ ebp - 0x1a0 ]
call sub_434230
mov edi eax
test edi edi
jne r-xdata
cmp eax esi
je r-xdata
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x3
call sub_40f940
mov [ ebp - 0x44 ] r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x9
call sub_404680
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_404780
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x1
call sub_429c10
mov ecx [ ebx ]
mov edx [ ecx + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax [ ebp - 0x60 ]
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
test eax eax
je r-xdata
movzx eax [ esi + 0x55 ]
movzx ecx [ esi + 0x54 ]
push eax
push ecx
lea esi [ ebp - 0x124 ]
lea edi [ ebp - 0x28 ]
call sub_42ac40
mov ecx [ ebp - 0x30 ]
add esp 0x8
mov edx esi
push edx
call sub_432df0
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov edx [ ecx + 0x20 ]
push 0x0
push eax
call edx
mov esi eax
mov [ ebp - 0x4 ] 0x7
test esi esi
jne r-xdata
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x3
call sub_40f940
mov [ ebp - 0x44 ] r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x8
call sub_404680
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_404780
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x1
call sub_429c10
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call ecx
mov eax edi
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x3
call sub_40f940
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x48 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10c ]
add [ ebp - 0x6c ] eax
mov ecx [ ebp - 0x108 ]
mov edx [ ebp - 0x114 ]
adc [ ebp - 0x68 ] ecx
add [ ebp - 0x5c ] edx
mov eax [ ebp - 0x110 ]
adc [ ebp - 0x58 ] eax
mov eax [ ebp - 0x48 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x64 ] eax
cmp eax [ edx + 0x8 ]
jl r-xdata
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x3
call sub_40f940
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_428740
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x1
call sub_429c10
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call ecx
mov eax edi
jmp r-xdata
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x3
call sub_40f940
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_428740
lea ecx [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x1
call sub_429c10
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call ecx
mov eax esi
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
sub_42bbb0
push ebp
mov ebp esp
push 0xffffffff
push sub_4537a3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x150 ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x188 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1f8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x1fc ] edx
mov edx [ ebp + 0x20 ]
xor ebx ebx
mov [ ebp - 0x128 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x158 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20c ] edx
xor edi edi
xor edx edx
xor esi esi
mov [ ebp - 0x15c ] ecx
mov [ ebp - 0x190 ] eax
mov [ ebp - 0x178 ] edi
mov [ ebp - 0x204 ] ebx
mov [ ebp - 0x200 ] ebx
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x18c ] edx
cmp [ ecx + 0x8 ] ebx
jle r-xdata
mov eax [ ebp - 0x20c ]
cmp eax ebx
je r-xdata
mov ecx [ ecx + 0xc ]
mov eax [ ecx + edx * 4 ]
cmp [ eax ] bl
je r-xdata
mov eax [ ebp - 0x190 ]
mov edx [ eax ]
add esi 0x1
adc edi ebx
push edi
push esi
push eax
mov eax [ edx + 0xc ]
call eax
mov esi [ ebp - 0x158 ]
push esi
lea ecx [ ebp - 0x3cc ]
call sub_434f40
mov eax [ esi + 0x40 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x17c ] ebx
mov [ ebp - 0x178 ] ebx
mov [ ebp - 0x12c ] eax
cmp eax 0x400
jbe r-xdata
add esi [ eax + 0x4 ]
adc edi ebx
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xc ]
mov edi [ ecx + edx * 4 ]
push edi
lea ecx [ ebp - 0x354 ]
call sub_40ff50
mov edx [ edi + 0x90 ]
mov [ ebp - 0x2c4 ] edx
mov ax [ edi + 0x94 ]
mov [ ebp - 0x2c0 ] ax
lea ecx [ ebp - 0x354 ]
push ecx
mov ecx [ ebp - 0x1f8 ]
mov [ ebp - 0x4 ] ebx
call sub_418da0
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
jne r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
add esi ecx
adc edi eax
add [ ebp - 0x134 ] ecx
adc [ ebp - 0x130 ] eax
add [ ebp - 0x204 ] 0x1
adc [ ebp - 0x200 ] ebx
jmp r-xdata
mov edi eax
mov [ ebp - 0x12c ] 0x400
mov edi [ ebp - 0x12c ]
jmp r-xdata
lea ecx [ ebp - 0x354 ]
call sub_40f940
mov eax 0x80004001
jmp r-xdata
mov edx [ ebp - 0x352 ]
movzx ecx [ ebp - 0x2c0 ]
add ecx [ ebp - 0x2c4 ]
shr edx 0x3
and edx 0x1
xor edi edi
shl edx 0x4
add edx ecx
adc eax edi
add edx [ ebp - 0x344 ]
mov edi [ ebp - 0x178 ]
adc eax [ ebp - 0x340 ]
add esi edx
lea ecx [ ebp - 0x354 ]
adc edi eax
call sub_40f940
mov edx [ ebp - 0x18c ]
mov ecx [ ebp - 0x15c ]
add esi 0x44
adc edi ebx
inc edx
mov [ ebp - 0x178 ] edi
mov [ ebp - 0x18c ] edx
cmp edx [ ecx + 0x8 ]
jl r-xdata
mov ecx [ ebp - 0x218 ]
mov [ ebp - 0x21c ] esi
mov [ ecx + esi ] bl
mov [ ebp - 0x214 ] 0x4
mov [ ebp - 0x210 ] 0x300
mov esi [ ebp - 0x158 ]
push esi
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x4
call sub_42a8c0
mov ecx [ ebp - 0x200 ]
cmp edi 0x1
seta al
cmp ecx ebx
ja r-xdata
xor eax eax
cmp [ ebp - 0x218 ] ebx
jle r-xdata
mov [ ebp - 0x260 ] ebx
mov [ ebp - 0x25c ] ebx
mov [ ebp - 0x258 ] ebx
mov [ ebp - 0x254 ] 0x1
mov [ ebp - 0x264 ] r--data
push 0x3
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x250 ] ebx
mov [ ebp - 0x24c ] ebx
mov [ ebp - 0x248 ] ebx
call sub_403e50
push 0x4
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x238 ] bl
mov [ ebp - 0x220 ] bl
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x214 ] ebx
call sub_43c55a
add esp 0x4
mov esi eax
cmp [ ebp - 0x214 ] ebx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
cmp al bl
je r-xdata
cmp [ ebp - 0x204 ] 0x1
jbe r-xdata
mov eax [ ebp - 0x21c ]
push eax
call sub_43c44d
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov edx [ ebp - 0x20c ]
mov eax [ ebp - 0x15c ]
push ecx
mov ecx [ ebp - 0x1fc ]
push edx
mov edx [ ebp - 0x128 ]
push esi
push eax
mov eax [ ebp - 0x1f8 ]
push ecx
mov ecx [ ebp - 0x184 ]
push edx
mov edx [ ebp - 0x150 ]
push eax
push ecx
mov ecx [ ebp - 0x188 ]
call sub_42b370
mov esi eax
mov edx [ ebp - 0x21c ]
push edx
mov [ ebp - 0x4 ] 0x6
call sub_43c44d
mov eax [ ebp - 0x250 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_43c44d
add esp 0x28
mov edx [ esi + 0xc ]
mov al [ edx ]
cmp al bl
jne r-xdata
mov ecx [ ebp - 0x21c ]
mov dl [ ecx + eax ]
mov [ eax + esi ] dl
inc eax
cmp eax [ ebp - 0x218 ]
jl r-xdata
cmp al 0xc
jne r-xdata
cmp [ esi + 0x44 ] bl
je r-xdata
cmp al 0xe
jne r-xdata
mov eax [ ebp - 0x204 ]
mov edx [ ebp - 0x134 ]
push ecx
mov ecx [ ebp - 0x130 ]
push eax
push ecx
push edx
call sub_43d7c0
mov ecx [ esi + 0x34 ]
cmp ecx ebx
jne r-xdata
mov [ ebp - 0x16c ] ebx
mov [ ebp - 0x168 ] ebx
mov [ ebp - 0x164 ] ebx
mov [ ebp - 0x160 ] 0x4
mov [ ebp - 0x170 ] r--data
push 0x10
mov [ ebp - 0x4 ] 0x7
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
cmp eax [ esi + 0x20 ]
sbb ecx ecx
neg ecx
inc ecx
push ebx
push ecx
push edx
push eax
call sub_43d7c0
mov ecx 0x20
cmp edx ebx
ja r-xdata
mov ecx 0x1
xor edi edi
mov [ ebp - 0x124 ] edi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov [ eax + 0xc ] ebx
mov edi eax
mov [ ebp - 0x124 ] eax
jmp r-xdata
xor edx edx
mov eax edi
div ecx
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x12c ] eax
cmp eax 0x1
ja r-xdata
jb r-xdata
push 0x58
mov [ ebp - 0x4 ] 0x8
call sub_43c55a
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov [ ebp - 0x200 ] edi
cmp edi ebx
je r-xdata
mov ecx eax
cmp eax 0x1
jae r-xdata
cmp eax ecx
jae r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
lea eax [ esi + 0x3c ]
mov [ esi + 0x30 ] ebx
push eax
mov [ esi + 0x34 ] ebx
call sub_431f20
add esp 0x4
jmp r-xdata
mov ecx 0x1
jmp r-xdata
mov edi [ edi + 0xc ]
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x8 ] esi
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x124 ]
mov edi [ ebp - 0x190 ]
mov [ eax + 0xc ] esi
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov esi [ eax + 0x8 ]
push edi
call edx
mov eax [ esi + 0x30 ]
cmp eax ebx
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push edi
call eax
lea edx [ esi + 0x34 ]
push edx
mov eax edi
mov [ esi + 0x30 ] edi
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov ecx 0x8
mov [ ebp - 0x2a8 ] ecx
mov [ ebp - 0x294 ] ecx
mov eax r--data
lea ecx [ ebp - 0x27c ]
push ecx
mov [ ebp - 0x2bc ] ebx
mov [ ebp - 0x2b4 ] ebx
mov [ ebp - 0x2b0 ] ebx
mov [ ebp - 0x2ac ] ebx
mov [ ebp - 0x2b8 ] eax
mov [ ebp - 0x2a0 ] ebx
mov [ ebp - 0x29c ] ebx
mov [ ebp - 0x298 ] ebx
mov [ ebp - 0x2a4 ] eax
call sub_431f20
add esp 0x4
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0xc ]
mov esi [ ebp - 0x12c ]
push eax
push esi
lea ecx [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x9
call sub_432660
lea eax [ ebp - 0x1ac ]
push eax
mov [ ebp - 0x1b8 ] ebx
mov [ ebp - 0x1b4 ] 0x10000
mov [ ebp - 0x1b0 ] ebx
call sub_431f20
add esp 0x4
mov [ ebp - 0x194 ] ebx
lea ecx [ ebp - 0x1b8 ]
mov eax 0x4
mov [ ebp - 0x14c ] ecx
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x13c ] ebx
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x148 ] r--data
mov [ ebp - 0x1c8 ] ebx
mov [ ebp - 0x1c4 ] ebx
mov [ ebp - 0x1c0 ] ebx
mov [ ebp - 0x1bc ] eax
mov [ ebp - 0x1cc ] r--data
mov [ ebp - 0x1f0 ] ebx
mov [ ebp - 0x1ec ] ebx
mov [ ebp - 0x1e8 ] ebx
mov [ ebp - 0x1e4 ] eax
mov [ ebp - 0x1f4 ] r--data
mov [ ebp - 0x1dc ] ebx
mov [ ebp - 0x1d8 ] ebx
mov [ ebp - 0x1d4 ] ebx
mov [ ebp - 0x1d0 ] eax
mov [ ebp - 0x1e0 ] r--data
push ebx
shl esi 0x9
push esi
mov [ ebp - 0x4 ] 0xe
call sub_4322a0
mov esi eax
cmp esi ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ ebp - 0x15c ]
xor esi esi
cmp [ edx + 0x8 ] ebx
jle r-xdata
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
lea ecx [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0xa
call sub_429d80
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x11
call sub_4320a0
lea edx [ ebp - 0x194 ]
push edx
call sub_431c30
mov edi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea eax [ ebp - 0x1ac ]
push eax
call edi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea ecx [ ebp - 0x27c ]
push ecx
mov [ ebp - 0x4 ] 0x13
call edi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x12
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12c ] ebx
jbe r-xdata
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x120 ] r--data
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x104 ] ebx
mov [ ebp - 0x100 ] 0x1
mov [ ebp - 0xe0 ] bx
push 0x48
mov [ ebp - 0x4 ] 0x17
call sub_43c55a
add esp 0x4
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x4 ] 0x18
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x14
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0x16
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0x15
call sub_43c44d
add esp 0x8
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
xor eax eax
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x12c ] ebx
jbe r-xdata
mov edi [ ebp - 0x12c ]
lea edx [ ebp - 0xac ]
mov [ ebp - 0x130 ] edx
xor edi edi
lea ecx [ ebp - 0x120 ]
push ecx
mov ecx eax
call sub_42afb0
mov edi eax
jmp r-xdata
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
lea ecx [ ebp - 0x3cc ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_429c10
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x15c ]
mov eax [ eax + 0x8 ]
xor ecx ecx
xor edx edx
mov [ ebp - 0x184 ] ecx
mov [ ebp - 0x180 ] edx
mov [ ebp - 0x208 ] 0xffffffff
cmp eax ebx
jg r-xdata
lea esp [ esp ]
xor esi esi
lea ecx [ ebp - 0xd8 ]
push ecx
mov ecx eax
call sub_42ae60
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x17
call sub_404690
mov edx [ ebp - 0x140 ]
mov eax [ ebp - 0x13c ]
mov [ eax + edx * 4 ] edi
inc [ ebp - 0x140 ]
lea ecx [ ebp - 0x120 ]
mov [ ebp - 0x4 ] 0xe
call sub_404780
mov ecx [ ebp - 0x15c ]
inc esi
cmp esi [ ecx + 0x8 ]
jl r-xdata
mov esi [ ebp - 0x12c ]
cmp [ ebp - 0x1d8 ] esi
jae r-xdata
mov edx [ ebp - 0x20c ]
mov ecx [ ebp - 0x150 ]
push edx
lea eax [ ebp - 0x170 ]
push eax
call sub_4333d0
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
lea ecx [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0xa
call sub_429d80
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0xd6
call sub_4320a0
lea ecx [ ebp - 0x194 ]
push ecx
call sub_431c30
mov esi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea edx [ ebp - 0x1ac ]
push edx
call esi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea eax [ ebp - 0x27c ]
push eax
mov [ ebp - 0x4 ] 0xd8
call esi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0xd7
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push edi
call eax
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2a
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0x20
call sub_404690
mov edx [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1c0 ]
mov [ eax + edx * 4 ] esi
inc [ ebp - 0x1c4 ]
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2b
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x13c ]
mov eax [ eax + edx * 4 ]
cmp [ eax + 0x41 ] bl
je r-xdata
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xd9
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0xdb
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0xda
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
lea ecx [ ebp - 0x3cc ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_429c10
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x188 ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0xc ]
mov [ esi ] edi
cmp [ eax ] ebx
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x29
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x15c ]
mov edx [ ecx + 0xc ]
mov eax [ ebp - 0x180 ]
mov edi [ edx + eax * 4 ]
push 0x4
mov [ ebp - 0x154 ] edi
mov [ ebp - 0x88 ] ebx
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x80 ] ebx
call sub_43c55a
add esp 0x4
mov esi eax
cmp [ ebp - 0x80 ] ebx
jle r-xdata
inc edx
mov [ ebp - 0x180 ] edx
jmp r-xdata
mov edx [ ebp - 0x15c ]
mov eax [ edx + 0xc ]
mov esi [ eax + ecx * 4 ]
inc ecx
mov [ ebp - 0x184 ] ecx
cmp [ esi ] bl
je r-xdata
cmp [ esi + 0x10 ] ebx
lea eax [ esi + 0x10 ]
je r-xdata
push eax
call sub_431e20
add esp 0x4
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] 0x2d
call sub_43c44d
mov ecx [ ebp - 0x98 ]
push ecx
mov [ ebp - 0x4 ] 0x2c
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x28
call sub_404780
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] 0x27
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0x88 ] esi
mov [ ecx + esi ] bl
mov eax 0x4
mov ecx r--data
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] bx
mov [ ebp - 0x1e ] bl
mov [ ebp - 0x4 ] 0xa9
cmp [ edi + 0x1 ] bl
je r-xdata
xor eax eax
cmp [ ebp - 0x84 ] ebx
jle r-xdata
mov edx [ ebp - 0x15c ]
mov eax [ edx + 0x8 ]
mov edx [ ebp - 0x180 ]
cmp edx eax
jl r-xdata
push 0x4
mov [ ebp - 0x334 ] ebx
mov [ ebp - 0x330 ] ebx
mov [ ebp - 0x32c ] ebx
call sub_43c55a
add esp 0x4
mov edi eax
cmp [ ebp - 0x32c ] ebx
jle r-xdata
push eax
call sub_431e20
add esp 0x4
xor eax eax
jmp r-xdata
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x26
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xc ]
mov edx [ edi + 0x8 ]
mov esi [ ecx + edx * 4 ]
push esi
lea ecx [ ebp - 0xa8 ]
call sub_42b200
mov edx [ esi + 0x90 ]
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x18 ] edx
mov ax [ esi + 0x94 ]
push ecx
mov ecx [ ebp - 0x1f8 ]
mov [ ebp - 0x14 ] ax
call sub_418da0
test eax eax
jne r-xdata
cmp [ edi ] bl
jne r-xdata
mov eax [ ebp - 0x88 ]
push eax
call sub_43c44d
add esp 0x4
mov ecx [ ebp - 0x88 ]
mov dl [ ecx + eax ]
mov [ eax + esi ] dl
inc eax
cmp eax [ ebp - 0x84 ]
jl r-xdata
mov ecx [ ebp - 0x184 ]
jmp r-xdata
mov ecx [ ebp - 0x330 ]
mov [ ebp - 0x334 ] edi
mov [ ecx + edi ] bl
mov eax 0x4
mov ecx r--data
mov [ ebp - 0x32c ] eax
mov [ ebp - 0x324 ] ebx
mov [ ebp - 0x320 ] ebx
mov [ ebp - 0x31c ] ebx
mov [ ebp - 0x318 ] eax
mov [ ebp - 0x328 ] ecx
mov [ ebp - 0x2e8 ] ebx
mov [ ebp - 0x2e4 ] ebx
mov [ ebp - 0x2e0 ] ebx
mov [ ebp - 0x2dc ] eax
mov [ ebp - 0x2ec ] ecx
mov [ ebp - 0x2d8 ] r--data
mov [ ebp - 0x2d4 ] ebx
mov [ ebp - 0x2d0 ] ebx
mov [ ebp - 0x2cc ] bx
mov [ ebp - 0x2ca ] bl
mov [ ebp - 0x4 ] 0x5b
cmp [ esi + 0x1 ] bl
je r-xdata
xor eax eax
cmp [ ebp - 0x330 ] ebx
jle r-xdata
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
xor esi esi
mov [ ebp - 0x4 ] 0x2e
cmp [ ebp - 0x140 ] ebx
jle r-xdata
push 0x58
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x25
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x4 ] 0xab
mov [ ebp - 0x2c ] r--data
call sub_43c44d
lea eax [ ebp - 0x40 ]
mov esi r--data
add esp 0x4
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x40 ] esi
mov ecx eax
mov [ ebp - 0x4 ] 0xac
call sub_404680
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0xaa
call sub_404780
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x4 ] 0xae
call sub_404680
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xad
call sub_404780
mov edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x4 ] 0xe
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
xor esi esi
mov [ ebp - 0x4 ] 0xaf
cmp [ ebp - 0x140 ] ebx
jle r-xdata
cmp [ edi ] bl
je r-xdata
cmp [ edi + 0x1 ] bl
je r-xdata
mov eax [ ebp - 0x1fc ]
mov ecx [ eax + 0xc ]
mov edx [ esi + 0x8 ]
mov edi [ ecx + edx * 4 ]
push edi
lea ecx [ ebp - 0x354 ]
call sub_42b200
mov edx [ edi + 0x90 ]
lea ecx [ ebp - 0x354 ]
mov [ ebp - 0x2c4 ] edx
mov ax [ edi + 0x94 ]
push ecx
mov ecx [ ebp - 0x1f8 ]
mov [ ebp - 0x2c0 ] ax
call sub_418da0
test eax eax
jne r-xdata
cmp [ esi + 0x2 ] bl
je r-xdata
mov eax [ ebp - 0x334 ]
push eax
call sub_43c44d
add esp 0x4
lea ecx [ ecx ]
lea eax [ ebp - 0x148 ]
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x148 ] r--data
mov ecx eax
mov [ ebp - 0x4 ] 0x2f
call sub_404680
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_404780
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x32
call sub_4320a0
lea ecx [ ebp - 0x194 ]
push ecx
call sub_431c30
mov esi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea edx [ ebp - 0x1ac ]
push edx
call esi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea eax [ ebp - 0x27c ]
push eax
mov [ ebp - 0x4 ] 0x34
call esi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x33
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x13c ]
mov edx [ ebp - 0x14c ]
mov ecx [ eax + esi * 4 ]
push edx
call sub_432390
inc esi
cmp esi [ ebp - 0x140 ]
jl r-xdata
xor edi edi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
lea ecx [ ebp - 0x1b8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
mov [ eax + 0x34 ] ebx
mov [ eax + 0x38 ] 0x4
mov [ eax + 0x28 ] r--data
mov [ eax + 0x40 ] ebx
mov [ eax + 0x44 ] ebx
mov [ eax + 0x48 ] 0x1
mov [ eax + 0x50 ] ebx
mov [ eax + 0x54 ] ebx
mov edi eax
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
call sub_431c30
lea ecx [ ebp - 0xcc ]
push ecx
call sub_431c30
lea edx [ ebp - 0xd0 ]
push edx
call sub_431c30
mov eax [ ebp - 0xd8 ]
add esp 0xc
mov [ ebp - 0x4 ] 0xe
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea eax [ ebp - 0x148 ]
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x148 ] r--data
mov ecx eax
mov [ ebp - 0x4 ] 0xb0
call sub_404680
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_404780
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0xb3
call sub_4320a0
lea ecx [ ebp - 0x194 ]
push ecx
call sub_431c30
mov esi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea edx [ ebp - 0x1ac ]
push edx
call esi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea eax [ ebp - 0x27c ]
push eax
mov [ ebp - 0x4 ] 0xb5
call esi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0xb4
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x124 ]
mov eax [ ebp - 0x128 ]
lea ecx [ ebp - 0x17c ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push eax
push ecx
lea esi [ ebp - 0xa8 ]
mov eax edi
call sub_429f50
mov esi eax
add esp 0x10
cmp esi ebx
jne r-xdata
lea ecx [ ebp - 0xa8 ]
call sub_41ced0
mov al [ edi + 0x2 ]
jmp r-xdata
mov eax [ ebp - 0x2d0 ]
push eax
mov [ ebp - 0x4 ] 0x62
mov [ ebp - 0x2d8 ] r--data
call sub_43c44d
lea ecx [ ebp - 0x2ec ]
mov esi r--data
add esp 0x4
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x2ec ] esi
mov [ ebp - 0x4 ] 0x63
call sub_404680
lea ecx [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x61
call sub_404780
lea edx [ ebp - 0x328 ]
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x328 ] esi
mov ecx edx
mov [ ebp - 0x4 ] 0x65
call sub_404680
lea ecx [ ebp - 0x328 ]
mov [ ebp - 0x4 ] 0x64
call sub_404780
mov eax [ ebp - 0x334 ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_43c44d
add esp 0x4
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
xor esi esi
mov [ ebp - 0x4 ] 0x66
cmp [ ebp - 0x140 ] ebx
jle r-xdata
lea ecx [ ebp - 0x354 ]
call sub_41ced0
test al al
je r-xdata
mov [ ebp - 0x174 ] ebx
mov edx [ ebp - 0x124 ]
mov edi [ edx + 0x8 ]
add edi 0x3c
push edi
mov [ ebp - 0x188 ] edi
call [ EnterCriticalSection@IAT ]
mov eax [ ebp - 0x190 ]
mov ecx [ eax ]
lea edx [ ebp - 0x174 ]
push edx
mov edx [ esi + 0xc ]
push edx
push eax
mov eax [ ecx + 0x1c ]
mov [ ebp - 0x4 ] 0x76
call eax
mov [ ebp - 0x130 ] eax
cmp eax 0x1
jne r-xdata
push ebx
mov [ ebp - 0x4 ] 0x5d
mov [ ebp - 0x2d8 ] r--data
call sub_43c44d
lea edx [ ebp - 0x2ec ]
mov esi r--data
add esp 0x4
mov [ ebp - 0x130 ] edx
mov [ ebp - 0x2ec ] esi
mov ecx edx
mov [ ebp - 0x4 ] 0x5e
call sub_404680
lea ecx [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x5c
call sub_404780
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x328 ] esi
mov ecx eax
mov [ ebp - 0x4 ] 0x60
call sub_404680
mov [ ebp - 0x4 ] 0x5f
jmp r-xdata
mov ecx [ ebp - 0x334 ]
mov dl [ ecx + eax ]
mov [ eax + edi ] dl
inc eax
cmp eax [ ebp - 0x330 ]
jl r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x35
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0x37
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0x36
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
mov eax [ ebp - 0x360 ]
mov [ ebp - 0x4 ] 0x3a
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ edi + 0x1c ] ebx
lea eax [ edi + 0x1c ]
je r-xdata
push eax
call sub_431e20
add esp 0x4
cmp eax ebx
jne r-xdata
lea eax [ edi + 0x18 ]
mov [ esi + 0x20 ] edi
cmp [ eax ] ebx
jne r-xdata
dec edi
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xb6
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0xb8
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0xb7
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
lea ecx [ ebp - 0x3cc ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_429c10
mov eax 0x80004001
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x13c ]
mov edx [ ebp - 0x14c ]
mov ecx [ eax + esi * 4 ]
push edx
call sub_432390
inc esi
cmp esi [ ebp - 0x140 ]
jl r-xdata
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0xe
call sub_40f940
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
lea ecx [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0xa
call sub_429d80
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0xcd
call sub_4320a0
lea edx [ ebp - 0x194 ]
push edx
call sub_431c30
mov edi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea eax [ ebp - 0x1ac ]
push eax
call edi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea ecx [ ebp - 0x27c ]
push ecx
mov [ ebp - 0x4 ] 0xcf
call edi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0xce
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
push 0x90
call sub_43c55a
add esp 0x4
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x4 ] 0xd3
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x208 ]
cmp edx [ ebp - 0x180 ]
jge r-xdata
mov edx [ ebp - 0x158 ]
mov eax [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
push edx
push eax
lea esi [ ebp - 0xa8 ]
call sub_429b20
mov ecx [ ebp - 0x158 ]
movzx edx [ ecx + 0x54 ]
mov esi [ ebp - 0x150 ]
add esp 0x8
push edx
mov eax edi
mov ecx [ eax + 0x1c ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x84 ]
push ecx
push edx
push eax
mov ecx esi
call sub_432940
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx esi
call sub_432df0
jmp r-xdata
cmp al bl
je r-xdata
lea eax [ ebp - 0x148 ]
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x148 ] r--data
mov ecx eax
mov [ ebp - 0x4 ] 0x67
call sub_404680
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_404780
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x6a
call sub_4320a0
lea ecx [ ebp - 0x194 ]
push ecx
call sub_431c30
mov esi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea edx [ ebp - 0x1ac ]
push edx
call esi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea eax [ ebp - 0x27c ]
push eax
mov [ ebp - 0x4 ] 0x6c
call esi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x6b
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
lea ecx [ ecx ]
lea ecx [ ebp - 0x354 ]
jmp r-xdata
mov esi [ ebp - 0x130 ]
cmp esi ebx
jne r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x1c ]
mov eax [ ebp - 0x124 ]
mov esi [ eax + 0x8 ]
add ecx 0x1a
adc edx ebx
add [ ebp - 0x17c ] ecx
lea eax [ esi + 0x3c ]
push eax
adc [ ebp - 0x178 ] edx
mov [ ebp - 0x130 ] eax
call [ EnterCriticalSection@IAT ]
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x17c ]
mov edx [ ebp - 0x178 ]
push eax
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp - 0x190 ]
mov ecx [ eax ]
mov edx [ ecx + 0x20 ]
push ebx
push eax
call edx
mov esi eax
push edi
cmp esi ebx
jne r-xdata
lea ecx [ ebp - 0x328 ]
call sub_404780
mov ecx [ ebp - 0x334 ]
push ecx
mov [ ebp - 0x4 ] 0xe
call sub_43c44d
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x36c ]
mov [ ebp - 0x4 ] 0x39
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
push eax
call sub_431e20
add esp 0x4
xor eax eax
jmp r-xdata
mov edi eax
cmp edi ebx
jne r-xdata
mov [ ebp - 0xd8 ] ebx
mov [ ebp - 0xd0 ] ebx
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xc4 ] bl
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb0 ] ebx
lea eax [ ebp - 0x264 ]
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x1f
call sub_434f40
push 0xc8
mov [ ebp - 0x4 ] 0x20
call sub_43c55a
add esp 0x4
mov [ ebp - 0x208 ] eax
mov [ ebp - 0x4 ] 0x21
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xd0
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0xd2
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0xd1
call sub_43c44d
add esp 0x8
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
xor esi esi
lea edx [ ebp - 0xa8 ]
push edx
mov ecx eax
call sub_40ff50
mov esi eax
jmp r-xdata
mov edx [ ebp - 0x13c ]
mov eax [ ebp - 0x180 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x130 ] eax
cmp [ eax + 0x40 ] bl
je r-xdata
mov ecx [ ebp - 0x158 ]
mov edx [ ebp - 0x150 ]
mov eax [ ebp - 0x180 ]
mov edi [ ebp - 0x154 ]
push ecx
push edx
lea esi [ ebp - 0xa8 ]
mov [ ebp - 0x208 ] eax
call sub_429b20
mov eax [ ebp - 0x158 ]
movzx ecx [ eax + 0x54 ]
add esp 0x8
push ecx
mov ecx [ ebp - 0x84 ]
mov eax edi
mov edx [ eax + 0x1c ]
mov eax [ eax + 0x18 ]
push edx
push eax
push ecx
mov ecx [ ebp - 0x150 ]
call sub_432940
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x6d
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0x6f
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0x6e
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
mov eax [ ebp - 0x360 ]
mov [ ebp - 0x4 ] 0x72
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x13c ]
mov edx [ ebp - 0x14c ]
mov ecx [ ecx + esi * 4 ]
push edx
call sub_432390
inc esi
cmp esi [ ebp - 0x140 ]
jl r-xdata
mov [ ebp - 0x4 ] 0xe
call sub_40f940
push edi
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x5b
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ eax ]
mov edx [ ecx + 0x20 ]
push ebx
push eax
call edx
mov esi eax
push edi
cmp esi ebx
jne r-xdata
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x5b
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x184 ]
mov eax [ eax + ecx * 4 - 0x4 ]
mov [ eax + 0x41 ] 0x1
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x5b
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x370 ]
mov [ ebp - 0x4 ] 0x38
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
xor esi esi
mov [ ebp - 0x4 ] 0x3d
cmp [ ebp - 0x140 ] ebx
jle r-xdata
mov edi [ esi + 0x20 ]
cmp edi ebx
je r-xdata
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xa9
call sub_404690
mov eax [ ebp - 0x168 ]
mov ecx [ ebp - 0x164 ]
mov edx [ ebp - 0x124 ]
mov [ ecx + eax * 4 ] esi
inc [ ebp - 0x168 ]
mov esi [ edx + 0x8 ]
add [ ebp - 0x17c ] 0x1a
lea edi [ esi + 0x3c ]
push edi
adc [ ebp - 0x178 ] ebx
call [ EnterCriticalSection@IAT ]
mov eax [ ebp - 0x17c ]
mov ecx [ ebp - 0x178 ]
push edi
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
call [ LeaveCriticalSection@IAT ]
inc [ ebp - 0x180 ]
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax ]
mov edx [ ebp - 0x1c0 ]
mov esi [ edx + ecx * 4 ]
mov eax [ esi + 0x20 ]
mov [ ebp - 0x130 ] esi
cmp [ eax + 0x15 ] bl
jne r-xdata
mov [ ebp - 0x188 ] ebx
lea ecx [ ebp - 0x188 ]
push ecx
mov ecx [ ebp - 0x150 ]
mov [ ebp - 0x4 ] 0xb9
call sub_4338f0
mov edx [ ebp - 0x188 ]
mov eax [ ebp - 0x1b4 ]
mov esi [ ebp - 0x130 ]
push edx
push eax
mov ecx esi
call sub_4323b0
mov eax [ ebp - 0x158 ]
movzx ecx [ eax + 0x55 ]
movzx edx [ eax + 0x54 ]
push ecx
lea edi [ esi + 0x28 ]
push edx
lea esi [ ebp - 0xa8 ]
call sub_42ac40
mov eax [ ebp - 0x158 ]
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
push eax
push ecx
call sub_429b20
mov ecx [ ebp - 0x150 ]
add esp 0x10
mov edx esi
push edx
call sub_432df0
mov ecx [ ebp - 0x130 ]
lea eax [ ebp - 0x1b8 ]
push eax
call sub_432390
mov eax [ ebp - 0x188 ]
mov [ ebp - 0x4 ] 0xa9
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x36c ]
mov [ ebp - 0x4 ] 0x71
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea ecx [ ebp - 0x354 ]
mov [ ebp - 0x4 ] 0xe
call sub_40f940
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
xor edi edi
mov [ ebp - 0x4 ] 0x86
cmp [ ebp - 0x140 ] ebx
jle r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x5b
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x75
call [ LeaveCriticalSection@IAT ]
xor edi edi
cmp [ ebp - 0x12c ] ebx
jbe r-xdata
lea ecx [ ebp - 0x354 ]
mov [ ebp - 0x4 ] 0xe
call sub_40f940
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
xor edi edi
mov [ ebp - 0x4 ] 0x77
cmp [ ebp - 0x140 ] ebx
jle r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea ecx [ ebp - 0x354 ]
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x384 ]
push eax
mov [ ebp - 0x4 ] 0x3c
call sub_43c44d
mov [ ebp - 0x4 ] 0x3b
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x148 ] r--data
mov [ ebp - 0x4 ] 0x3e
call sub_404680
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_404780
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x41
call sub_4320a0
lea edx [ ebp - 0x194 ]
push edx
call sub_431c30
mov esi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea eax [ ebp - 0x1ac ]
push eax
call esi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea ecx [ ebp - 0x27c ]
push ecx
mov [ ebp - 0x4 ] 0x43
call esi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x42
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
jmp r-xdata
mov eax [ esi + 0x24 ]
cmp eax ebx
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push edi
call eax
mov ecx [ ebp - 0x1e8 ]
mov edx [ ebp - 0x1ec ]
push 0xffffffff
push ebx
push ecx
push edx
call [ WaitForMultipleObjects@IAT ]
mov edx [ ebp - 0x1c0 ]
mov edi eax
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + edi * 4 ]
mov esi [ edx + ecx * 4 ]
mov eax [ esi + 0x28 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x18c ] ebx
lea ecx [ ebp - 0x18c ]
push ecx
mov ecx [ ebp - 0x150 ]
mov [ ebp - 0x4 ] 0xba
call sub_4338f0
mov edi [ ebp - 0x18c ]
mov esi [ esi + 0x20 ]
cmp edi ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov eax [ ebp - 0x370 ]
mov [ ebp - 0x4 ] 0x70
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea eax [ ebp - 0x148 ]
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x148 ] r--data
mov ecx eax
mov [ ebp - 0x4 ] 0x87
call sub_404680
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_404780
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x8a
call sub_4320a0
lea ecx [ ebp - 0x194 ]
push ecx
call sub_431c30
mov edi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea edx [ ebp - 0x1ac ]
push edx
call edi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea eax [ ebp - 0x27c ]
push eax
mov [ ebp - 0x4 ] 0x8c
call edi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x8b
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov edi edi
lea ecx [ ebp - 0x354 ]
mov [ ebp - 0x4 ] 0xe
call sub_40f940
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
xor edi edi
mov [ ebp - 0x4 ] 0x95
cmp [ ebp - 0x140 ] ebx
jle r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x5b
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x1c0 ]
mov ecx [ ebp - 0x12c ]
lea eax [ ebp - 0x148 ]
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x148 ] r--data
mov ecx eax
mov [ ebp - 0x4 ] 0x78
call sub_404680
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_404780
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x7b
call sub_4320a0
lea ecx [ ebp - 0x194 ]
push ecx
call sub_431c30
mov edi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea edx [ ebp - 0x1ac ]
push edx
call edi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea eax [ ebp - 0x27c ]
push eax
mov [ ebp - 0x4 ] 0x7d
call edi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x7c
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x13c ]
mov edx [ ebp - 0x14c ]
mov ecx [ ecx + edi * 4 ]
push edx
call sub_432390
inc edi
cmp edi [ ebp - 0x140 ]
jl r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x44
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0x46
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0x45
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
mov eax [ ebp - 0x360 ]
mov [ ebp - 0x4 ] 0x49
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov edx [ ebp - 0x13c ]
mov eax [ ebp - 0x14c ]
mov ecx [ edx + esi * 4 ]
push eax
call sub_432390
inc esi
cmp esi [ ebp - 0x140 ]
jl r-xdata
mov [ esi + 0x24 ] edi
push 0x10
mov [ esi + 0xc0 ] 0x1
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0xa4 ]
mov [ esi + 0xc0 ] 0x1
mov [ ebp - 0x130 ] eax
cmp eax ebx
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x28 ] ebx
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push edi
call eax
mov eax [ ebp - 0x384 ]
push eax
mov [ ebp - 0x4 ] 0x74
call sub_43c44d
mov ecx [ ebp - 0x3b8 ]
push ecx
mov [ ebp - 0x4 ] 0x73
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x3cc ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov eax 0x80004001
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x8d
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0x8f
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0x8e
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
mov eax [ ebp - 0x360 ]
mov [ ebp - 0x4 ] 0x92
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x13c ]
mov edx [ ebp - 0x14c ]
mov ecx [ ecx + edi * 4 ]
push edx
call sub_432390
inc edi
cmp edi [ ebp - 0x140 ]
jl r-xdata
lea eax [ ebp - 0x148 ]
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x148 ] r--data
mov ecx eax
mov [ ebp - 0x4 ] 0x96
call sub_404680
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_404780
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x99
call sub_4320a0
lea ecx [ ebp - 0x194 ]
push ecx
call sub_431c30
mov edi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea edx [ ebp - 0x1ac ]
push edx
call edi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea eax [ ebp - 0x27c ]
push eax
mov [ ebp - 0x4 ] 0x9b
call edi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x9a
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
mov ecx [ ebp - 0x2d0 ]
push ecx
mov [ ebp - 0x4 ] 0xa5
mov [ ebp - 0x2d8 ] r--data
call sub_43c44d
lea edx [ ebp - 0x2ec ]
mov esi r--data
add esp 0x4
mov [ ebp - 0x130 ] edx
mov [ ebp - 0x2ec ] esi
mov ecx edx
mov [ ebp - 0x4 ] 0xa6
call sub_404680
lea ecx [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0xa4
call sub_404780
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x328 ] esi
mov ecx eax
mov [ ebp - 0x4 ] 0xa8
call sub_404680
mov [ ebp - 0x4 ] 0xa7
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ esi + 0xc0 ] bl
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x130 ] eax
cmp eax ebx
je r-xdata
inc edi
cmp edi ecx
jb r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x7e
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0x80
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0x7f
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
mov eax [ ebp - 0x360 ]
mov [ ebp - 0x4 ] 0x83
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x36c ]
mov [ ebp - 0x4 ] 0x48
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
xor edi edi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov edi eax
jmp r-xdata
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0xe
call sub_40f940
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
lea ecx [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0xa
call sub_429d80
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0xbd
call sub_4320a0
lea edx [ ebp - 0x194 ]
push edx
call sub_431c30
mov esi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea eax [ ebp - 0x1ac ]
push eax
call esi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea ecx [ ebp - 0x27c ]
push ecx
mov [ ebp - 0x4 ] 0xbf
call esi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0xbe
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
push 0x1
push edi
lea ecx [ ebp - 0x1e0 ]
call sub_404620
push 0x1
push edi
lea ecx [ ebp - 0x1f4 ]
call sub_404620
cmp edi ebx
jne r-xdata
mov [ esi + 0x54 ] edi
cmp edi ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x36c ]
mov [ ebp - 0x4 ] 0x91
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x9c
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0x9e
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0x9d
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
mov eax [ ebp - 0x360 ]
mov [ ebp - 0x4 ] 0xa1
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x13c ]
mov edx [ ebp - 0x14c ]
mov ecx [ ecx + edi * 4 ]
push edx
call sub_432390
inc edi
cmp edi [ ebp - 0x140 ]
jl r-xdata
mov eax [ esi + 0x28 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov esi [ eax + edi * 4 ]
cmp [ esi + 0xc0 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x36c ]
mov [ ebp - 0x4 ] 0x82
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x370 ]
mov [ ebp - 0x4 ] 0x47
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x18 ] edi
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xc0
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0xc2
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0xc1
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
lea ecx [ ebp - 0x3cc ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_429c10
mov eax [ ebp - 0x130 ]
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x13c ]
mov eax [ esi + 0xc4 ]
mov edi [ ecx + eax * 4 ]
mov ecx [ esi + 0x20 ]
push edi
call sub_435010
mov edx [ esi + 0xa8 ]
mov [ edi + 0x28 ] edx
mov ecx [ esi + 0xac ]
mov [ edi + 0x2c ] ecx
mov edx [ esi + 0xb0 ]
mov [ edi + 0x30 ] edx
mov ecx [ esi + 0xb4 ]
mov [ edi + 0x34 ] ecx
mov edx [ esi + 0xb8 ]
mov [ edi + 0x38 ] edx
mov eax [ esi + 0xbc ]
mov [ edi + 0x3c ] eax
mov [ edi + 0x40 ] 0x1
jmp r-xdata
mov ecx [ esi + 0x20 ]
call sub_435040
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ esi + 0x50 ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov eax [ ebp - 0x370 ]
mov [ ebp - 0x4 ] 0x90
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x36c ]
mov [ ebp - 0x4 ] 0xa0
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x130 ]
mov [ esi + 0x28 ] eax
mov eax [ ebp - 0x174 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x370 ]
mov [ ebp - 0x4 ] 0x81
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x384 ]
push eax
mov [ ebp - 0x4 ] 0x4b
call sub_43c44d
mov [ ebp - 0x4 ] 0x4a
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ ebp - 0x154 ]
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x18 ]
push esi
lea ecx [ ebp - 0x2bc ]
push sub_428e00
add esi 0x8
push esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
call sub_431c90
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea ecx [ ebp - 0xa8 ]
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0xe
call sub_40f940
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
lea ecx [ ebp - 0x14c ]
mov [ ebp - 0x4 ] 0xa
call sub_429d80
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0xc5
call sub_4320a0
lea edx [ ebp - 0x194 ]
push edx
call sub_431c30
mov esi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea eax [ ebp - 0x1ac ]
push eax
call esi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea ecx [ ebp - 0x27c ]
push ecx
mov [ ebp - 0x4 ] 0xc7
call esi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0xc6
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov edi [ esi + 0x20 ]
mov eax [ edi + 0x54 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x130 ]
mov [ esi + 0x50 ] edi
mov eax [ ecx + 0x20 ]
mov [ eax + 0x15 ] 0x1
add eax 0x1c
push eax
call sub_431d10
mov eax [ ebp - 0x18c ]
add esp 0x4
mov [ ebp - 0x4 ] 0xa9
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x384 ]
push eax
mov [ ebp - 0x4 ] 0x94
call sub_43c44d
mov [ ebp - 0x4 ] 0x93
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x370 ]
mov [ ebp - 0x4 ] 0x9f
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ esi + 0x20 ]
call sub_434fe0
mov eax [ esi + 0x18 ]
mov ecx [ eax + 0xc ]
push ecx
mov ecx [ eax + 0x8 ]
call sub_432750
lea edx [ esi + 0xc ]
push edx
call sub_431d10
mov eax [ ebp - 0x184 ]
dec eax
mov [ esi + 0xc4 ] eax
mov esi [ esi + 0x10 ]
add esp 0x4
lea ecx [ ebp - 0x1f4 ]
call sub_404690
mov ecx [ ebp - 0x1ec ]
mov edx [ ebp - 0x1e8 ]
mov [ edx + ecx * 4 ] esi
mov esi 0x1
add [ ebp - 0x1ec ] esi
lea ecx [ ebp - 0x1e0 ]
call sub_404690
mov eax [ ebp - 0x1d8 ]
mov ecx [ ebp - 0x1d4 ]
mov [ ecx + eax * 4 ] edi
add [ ebp - 0x1d8 ] esi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x174 ] ebx
mov eax [ ebp - 0x384 ]
push eax
mov [ ebp - 0x4 ] 0x85
call sub_43c44d
mov [ ebp - 0x4 ] 0x84
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x3b8 ]
push ecx
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x3cc ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov eax edi
jmp r-xdata
lea ecx [ ebp - 0x1e0 ]
mov [ ebp - 0x4 ] 0xd
call sub_404780
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xc
call sub_404780
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0xb
call sub_429cc0
xor esi esi
mov [ ebp - 0x4 ] 0x4c
cmp [ ebp - 0x140 ] ebx
jle r-xdata
mov eax [ ebp - 0x154 ]
inc eax
mov [ ebp - 0x154 ] eax
cmp eax [ ebp - 0x12c ]
jb r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xc8
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0xca
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0xc9
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
lea ecx [ ebp - 0x3cc ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_429c10
mov eax edi
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ edi + 0x50 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ edi + 0x54 ] ebx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x3b8 ]
push ecx
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x3cc ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_404780
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x384 ]
push eax
mov [ ebp - 0x4 ] 0xa3
call sub_43c44d
mov [ ebp - 0x4 ] 0xa2
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x148 ] r--data
mov [ ebp - 0x4 ] 0x4d
call sub_404680
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_404780
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x50
call sub_4320a0
lea edx [ ebp - 0x194 ]
push edx
call sub_431c30
mov esi [ DeleteCriticalSection@IAT ]
add esp 0x4
lea eax [ ebp - 0x1ac ]
push eax
call esi
lea ecx [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0x9
call sub_432050
lea ecx [ ebp - 0x27c ]
push ecx
mov [ ebp - 0x4 ] 0x52
call esi
lea ecx [ ebp - 0x2a4 ]
call sub_404780
lea ecx [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x51
call sub_404780
mov eax [ ebp - 0x2bc ]
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
lea ecx [ ecx ]
mov edi [ ebp - 0x184 ]
mov ecx [ ebp - 0x1c0 ]
mov esi [ ecx + eax * 4 ]
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x158 ]
movzx ecx [ eax + 0x55 ]
movzx edx [ eax + 0x54 ]
push ecx
lea edi [ esi + 0xa8 ]
push edx
lea esi [ ebp - 0xa8 ]
call sub_42ac40
mov eax [ ebp - 0x158 ]
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
push eax
push ecx
call sub_429b20
mov ecx [ ebp - 0x150 ]
add esp 0x10
mov edx esi
push edx
call sub_432df0
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ edi + 0x50 ] ebx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call edx
mov [ ebp - 0x170 ] r--data
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x53
call sub_404680
lea ecx [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x4
call sub_404780
mov eax [ ebp - 0x21c ]
push eax
mov [ ebp - 0x4 ] 0x55
call sub_43c44d
mov ecx [ ebp - 0x250 ]
push ecx
mov [ ebp - 0x4 ] 0x54
call sub_43c44d
add esp 0x8
lea ecx [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x1
call sub_404780
mov eax [ ebp - 0x360 ]
mov [ ebp - 0x4 ] 0x58
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov edx [ ebp - 0x13c ]
mov eax [ ebp - 0x14c ]
mov ecx [ edx + esi * 4 ]
push eax
call sub_432390
inc esi
cmp esi [ ebp - 0x140 ]
jl r-xdata
mov eax [ ebp - 0x36c ]
mov [ ebp - 0x4 ] 0x57
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x370 ]
mov [ ebp - 0x4 ] 0x56
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x384 ]
push eax
mov [ ebp - 0x4 ] 0x5a
call sub_43c44d
mov [ ebp - 0x4 ] 0x59
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_42e810
push ebp
mov ebp esp
push 0xffffffff
push sub_4537f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x1
call eax
cmp [ ebp - 0x10 ] ebx
je r-xdata
mov eax 0x80004001
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x40
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
xor edi edi
jmp r-xdata
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
mov edi eax
call edx
mov [ ebp - 0x14 ] edi
cmp [ edi + 0xc ] ebx
jne r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov ecx edi
call sub_429360
mov esi eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] bl
cmp esi ebx
je r-xdata
push __dos_header
call sub_410610
add esp 0x4
mov [ edi + 0xc ] eax
cmp eax ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
mov esi [ ebp + 0x1c ]
cmp esi ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0xffffffff
call ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0xffffffff
call ecx
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x34 ] ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x3
call sub_432be0
mov [ ebp + 0x18 ] ebx
mov [ ebp - 0x4 ] 0x4
cmp esi ebx
je r-xdata
mov ecx [ esi + 0x40 ]
or ecx [ esi + 0x44 ]
jne r-xdata
xor eax eax
mov ecx esi
call sub_417b30
push eax
lea ecx [ ebp + 0x18 ]
call sub_429760
lea eax [ esi + 0x58 ]
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0xffffffff
call ecx
mov edx [ esi + 0x48 ]
or edx [ esi + 0x4c ]
jne r-xdata
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] bl
call sub_4296d0
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push edi
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push esi
push ecx
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x5c ]
call sub_42bbb0
mov esi eax
mov eax [ ebp + 0x18 ]
add esp 0x20
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
cmp [ esi + 0x69 ] bl
jne r-xdata
sub_42ea20
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
and eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
lea edx [ ebp + 0x14 ]
xor edx edx
jmp r-xdata
lea ecx [ ebp + 0xc ]
xor ecx ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
and ecx [ ebp + 0x10 ]
cmp ecx 0xffffffff
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
push edx
mov edx [ edi + 0xc ]
push ecx
push eax
call edx
pop edi
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn
sub_42ea80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x80070057
jg r-xdata
sub eax 0x0
je r-xdata
je r-xdata
xor eax eax
pop ebp
retn
dec eax
je r-xdata
mov eax 0x5
pop ebp
retn
cmp eax 0x80004004
je r-xdata
mov eax 0x1
pop ebp
retn
mov eax [ ebp + 0xc ]
pop ebp
retn
mov eax 0xa
pop ebp
retn
cmp eax 0x8007000e
jne r-xdata
mov eax 0x2
pop ebp
retn
sub_42ead0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ecx [ edi ]
cmp ecx 0x80000000
jb r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
lea ebx [ ebp + 0x10 ]
push ebx
push ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ edi ] eax
mov eax [ esi + 0x8 ]
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx 0x80000000
xor eax eax
pop ebp
retn
cmp eax 0x80070057
jg r-xdata
sub eax 0x0
je r-xdata
je r-xdata
dec eax
je r-xdata
mov eax 0x5
pop ebp
retn
cmp eax 0x80004004
je r-xdata
mov eax 0x1
pop ebp
retn
mov eax 0x8
pop ebp
retn
mov eax 0xa
pop ebp
retn
cmp eax 0x8007000e
jne r-xdata
mov eax 0x2
pop ebp
retn
sub_42eb60
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] 0x0
mov ecx [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_411fb0
add esp 0xc
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
add [ esi + 0x10 ] edi
mov eax edi
pop edi
adc [ esi + 0x14 ] 0x0
pop esi
pop ebp
retn
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_42ebf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xa
ja r-xdata
mov eax 0x80004005
pop ebp
retn
movzx eax [ eax + lookup_table_42ec48 ]
jmp [ eax * 4 + jump_table_42ec30 ]
xor eax eax
pop ebp
retn
mov eax 0x8007000e
pop ebp
retn
mov eax 0x80070057
pop ebp
retn
mov eax 0x80004004
pop ebp
retn
mov eax 0x1
pop ebp
retn
sub_42ec60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov ecx [ edi ]
cmp ecx 0x80000000
jb r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
lea ebx [ ebp + 0x10 ]
push ebx
push ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
mov [ esi + 0xc ] eax
mov eax [ ebp + 0x10 ]
mov [ edi ] eax
mov eax [ esi + 0xc ]
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x8
pop ebx
pop ebp
retn
mov ecx 0x80000000
sub_42ecb0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
sub eax 0x0
je r-xdata
xor ecx ecx
dec eax
je r-xdata
mov ecx 0x1
jmp r-xdata
dec eax
je r-xdata
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
lea esi [ ebp - 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push ecx
mov ecx [ esi + 0x4 ]
push ecx
mov ecx [ esi ]
push ecx
push eax
call edx
mov ecx [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
mov eax [ edi + 0xc ]
neg eax
sbb eax eax
pop edi
and eax 0x8
pop esi
mov esp ebp
pop ebp
retn
mov ecx 0x2
jmp r-xdata
mov eax 0x5
mov esp ebp
pop ebp
retn
sub_42ed70
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_410630
push edi
mov [ esi + 0xc ] 0x0
call sub_410610
add esp 0x8
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] edi
cmp edi [ esi + 0x10 ]
je r-xdata
xor eax eax
cmp [ esi + 0xc ] eax
pop edi
setne al
pop esi
pop ebp
retn 0x4
sub_42edc0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov [ esi + 0x20 ] 0x1
xor al al
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x4 ]
push edi
sub eax ecx
cdq
add [ esi + 0x18 ] eax
mov eax [ esi + 0x14 ]
lea edi [ ebp - 0x4 ]
adc [ esi + 0x1c ] edx
mov edx [ eax ]
push edi
mov edi [ esi + 0x10 ]
push edi
push ecx
push eax
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi + 0xc ]
mov [ esi + 0x24 ] eax
mov eax [ ebp - 0x4 ]
lea edx [ ecx + eax ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edx
pop edi
test eax eax
je r-xdata
mov al [ ecx ]
inc ecx
mov [ esi + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
sub_42ee20
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
pop ebp
jmp sub_42edc0
mov al [ edx ]
inc edx
mov [ ecx + 0x4 ] edx
pop ebp
retn
sub_42ee70
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_410630
push edi
mov [ esi + 0xc ] 0x0
call sub_410610
add esp 0x8
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] edi
cmp edi [ esi + 0x10 ]
je r-xdata
xor eax eax
cmp [ esi + 0xc ] eax
pop edi
setne al
pop esi
pop ebp
retn 0x4
sub_42eeb0
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
pop esi
retn
mov eax [ esi + 0xc ]
push edi
mov edi [ esi + 0x4 ]
sub edi eax
push edi
push eax
mov eax [ esi + 0x14 ]
push eax
call sub_411fb0
add esp 0xc
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
add [ esi + 0x18 ] edi
adc [ esi + 0x1c ] eax
sub_42eef0
push ebp
mov ebp esp
mov cl [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ eax ] cl
inc eax
mov [ esi + 0x4 ] eax
cmp eax [ esi + 0x8 ]
jne r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x14 ]
push edi
sub eax ecx
mov edi eax
push edi
push ecx
push edx
call sub_411fb0
add esp 0xc
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] eax
pop edi
add [ esi + 0x18 ] edi
adc [ esi + 0x1c ] eax
sub_42ef50
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x2c ] 0x0
xor edx edx
mov ecx eax
shr ecx 0x2
inc ecx
mov ecx 0x4
jmp r-xdata
mov [ esi + edx + 0x7e ] al
inc edx
dec ecx
jne r-xdata
mov [ esi + eax + 0x58 ] dl
inc eax
cmp eax 0x26
jb r-xdata
cmp eax 0xc
jb r-xdata
mov eax 0x4040404
mov [ esi + 0x230 ] 0x200
mov [ esi + 0x232 ] eax
mov [ esi + 0x236 ] eax
push 0xf5
mov [ esi + 0x23a ] al
lea eax [ esi + 0x23b ]
push 0x6
push eax
call sub_43d590
add esp 0xc
xor eax eax
mov edi edi
mov [ esi + eax + 0x330 ] al
inc eax
cmp eax 0x5
jb r-xdata
mov ecx eax
mov edx 0x1
cmp eax 0x104
jae r-xdata
pop esi
pop ebp
retn
jmp r-xdata
dec edx
mov [ esi + eax + 0x330 ] cl
jne r-xdata
inc eax
cmp eax 0x104
jb r-xdata
inc ecx
lea edx [ ecx - 0x4 ]
sub_42f000
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x2c ]
push eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push eax
call ecx
add esp 0x8
xor eax eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x2c ] eax
pop esi
pop ebp
retn
sub_42f030
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
mov eax [ edi + 0x4 ]
push edi
call eax
xor eax eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x2c ] eax
mov eax ebx
neg eax
and eax 0x3
mov [ esi + 0x40 ] eax
mov ecx [ edi ]
add eax ebx
push eax
push edi
call ecx
add esp 0x10
mov [ esi + 0x2c ] eax
pop edi
test eax eax
jne r-xdata
cmp [ esi + 0x24 ] ebx
je r-xdata
mov [ esi + 0x24 ] ebx
pop esi
pop ebx
pop ebp
retn
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
sub_42f0e0
push ebp
mov ebp esp
movzx edx [ eax + ecx + 0x58 ]
mov ecx [ ebp + 0xc ]
movzx ecx [ eax + ecx + 0x58 ]
push esi
mov esi [ ebp + 0x8 ]
sub ecx edx
lea edx [ edx + edx * 2 ]
push edi
lea edi [ esi + edx * 4 ]
movzx edx [ ecx + eax + 0x7d ]
movzx esi [ edx + eax + 0x58 ]
cmp esi ecx
je r-xdata
mov [ edi ] 0xffffffff
mov ecx [ eax + edx * 4 + 0x100 ]
mov [ edi + 0x4 ] ecx
movzx ecx [ edx + eax + 0x58 ]
mov [ edi + 0x8 ] ecx
inc [ eax + edx * 4 + 0x198 ]
mov [ eax + edx * 4 + 0x100 ] edi
pop edi
pop esi
pop ebp
retn
movzx esi [ edx + eax + 0x57 ]
dec edx
sub ecx esi
lea esi [ esi + esi * 2 ]
lea esi [ edi + esi * 4 ]
mov [ esi ] 0xffffffff
push ebx
mov ebx [ eax + ecx * 4 + 0xfc ]
mov [ esi + 0x4 ] ebx
movzx ebx [ ecx + eax + 0x57 ]
mov [ esi + 0x8 ] ebx
inc [ eax + ecx * 4 + 0x194 ]
mov [ eax + ecx * 4 + 0xfc ] esi
pop ebx
sub_42f170
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
xor ebx ebx
push 0x98
lea eax [ esi + 0x198 ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
lea edi [ ebp - 0x4 ]
mov [ esi + 0x28 ] 0x2000
call sub_43d590
mov eax [ esi + 0x30 ]
add esp 0xc
cmp eax [ esi + 0x34 ]
je r-xdata
lea ecx [ esi + 0x100 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x26
mov [ eax ] ebx
add ecx 0x4
dec [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi edi
mov eax [ ecx ]
mov [ ecx ] ebx
cmp eax ebx
je r-xdata
mov [ edi ] ebx
mov edi [ ebp - 0x4 ]
cmp edi ebx
je r-xdata
mov eax [ eax + 0x4 ]
cmp eax ebx
jne r-xdata
mov [ edi ] eax
mov ecx [ eax + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
cmp [ eax + ecx * 4 ] 0xffffffff
lea ecx [ eax + ecx * 4 ]
lea edi [ eax + 0x4 ]
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
cmp [ eax + 0x8 ] ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
lea esp [ esp ]
cmp edi ebx
jne r-xdata
cmp ecx 0x80
jbe r-xdata
mov edx [ ecx + 0x8 ]
add [ eax + 0x8 ] edx
mov [ ecx + 0x8 ] ebx
mov ecx [ eax + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
cmp [ eax + ecx * 4 ] 0xffffffff
lea ecx [ eax + ecx * 4 ]
je r-xdata
mov eax edi
mov ecx [ eax + 0x8 ]
mov edi [ edi + 0x4 ]
mov [ ebp - 0x4 ] edi
cmp ecx ebx
je r-xdata
movzx edx [ ecx + esi + 0x7d ]
movzx ebx [ esi + edx + 0x58 ]
cmp ebx ecx
je r-xdata
lea edx [ ecx - 0x81 ]
shr edx 0x7
inc edx
jmp r-xdata
mov [ eax ] 0xffffffff
mov ecx [ esi + edx * 4 + 0x100 ]
mov [ eax + 0x4 ] ecx
movzx ecx [ esi + edx + 0x58 ]
mov [ eax + 0x8 ] ecx
xor ebx ebx
inc [ esi + edx * 4 + 0x198 ]
mov [ esi + edx * 4 + 0x100 ] eax
movzx edi [ esi + edx + 0x57 ]
dec edx
sub ecx edi
lea edi [ edi + edi * 2 ]
lea edi [ eax + edi * 4 ]
mov [ edi ] 0xffffffff
mov ebx [ esi + ecx * 4 + 0xfc ]
mov [ edi + 0x4 ] ebx
movzx ebx [ esi + ecx + 0x57 ]
mov [ edi + 0x8 ] ebx
inc [ esi + ecx * 4 + 0x194 ]
mov [ esi + ecx * 4 + 0xfc ] edi
mov edi [ ebp - 0x4 ]
mov [ eax ] 0xffffffff
mov ebx [ esi + 0x194 ]
mov [ eax + 0x4 ] ebx
movzx ebx [ esi + 0x7d ]
mov [ eax + 0x8 ] ebx
inc [ esi + 0x22c ]
mov [ esi + 0x194 ] eax
add ecx 0xffffff80
add eax 0x600
dec edx
jne r-xdata
sub_42f300
push esi
mov esi eax
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax edi
lea ecx [ esi + edi * 4 + 0x100 ]
call sub_42f170
mov eax [ esi + edi * 4 + 0x100 ]
test eax eax
je r-xdata
movzx eax [ esi + edi + 0x58 ]
mov ecx [ esi + 0x3c ]
dec [ esi + 0x28 ]
lea eax [ eax + eax * 2 ]
add eax eax
mov edx ecx
sub edx [ esi + 0x38 ]
add eax eax
cmp edx eax
jbe r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov ecx [ eax + 0x4 ]
dec [ esi + edi * 4 + 0x198 ]
mov [ esi + edi * 4 + 0x100 ] ecx
pop esi
retn
xor eax eax
pop esi
retn
sub ecx eax
mov [ esi + 0x3c ] ecx
mov eax ecx
pop esi
retn
inc eax
add ecx 0x4
cmp eax 0x26
je r-xdata
push ebx
mov ebx [ esi + eax * 4 + 0x100 ]
mov ecx [ ebx + 0x4 ]
dec [ esi + eax * 4 + 0x198 ]
mov [ esi + eax * 4 + 0x100 ] ecx
push eax
push ebx
mov ecx edi
mov eax esi
call sub_42f0e0
add esp 0x8
mov eax ebx
pop ebx
pop esi
retn
sub_42f3a0
push edi
mov edi eax
mov eax [ ecx + edi * 4 + 0x100 ]
test eax eax
je r-xdata
movzx eax [ ecx + edi + 0x58 ]
push esi
mov esi [ ecx + 0x34 ]
lea edx [ eax + eax * 2 ]
mov eax [ ecx + 0x30 ]
add edx edx
sub esi eax
add edx edx
cmp edx esi
pop esi
ja r-xdata
mov edx [ eax + 0x4 ]
dec [ ecx + edi * 4 + 0x198 ]
mov [ ecx + edi * 4 + 0x100 ] edx
pop edi
retn
mov eax ecx
call sub_42f300
pop edi
retn
add edx eax
mov [ ecx + 0x30 ] edx
pop edi
retn
sub_42f3f0
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + ecx + 0x7d ]
push edi
mov edi edx
movzx ecx [ eax + edi + 0x7d ]
mov [ ebp - 0x8 ] ebx
cmp ebx ecx
je r-xdata
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ eax + ecx * 4 + 0x100 ]
mov [ ebp - 0xc ] edx
test edx edx
je r-xdata
push ebx
push esi
call sub_42f0e0
add esp 0x8
mov ebx [ edx + 0x4 ]
dec [ eax + ecx * 4 + 0x198 ]
mov [ ebp - 0x4 ] edi
mov edi edx
mov [ eax + ecx * 4 + 0x100 ] ebx
lea ecx [ esi + 0x8 ]
sub edi esi
mov ebx [ ecx - 0x8 ]
mov [ edx ] ebx
mov ebx [ ecx - 0x4 ]
mov [ edx + 0x4 ] ebx
mov ebx [ ecx ]
mov [ edi + ecx ] ebx
add edx 0xc
add ecx 0xc
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ esi ] 0xffffffff
mov edx [ eax + ecx * 4 + 0x100 ]
mov [ esi + 0x4 ] edx
movzx edx [ ecx + eax + 0x58 ]
mov [ esi + 0x8 ] edx
inc [ eax + ecx * 4 + 0x198 ]
pop edi
mov [ eax + ecx * 4 + 0x100 ] esi
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_42f4d0
mov edx [ eax + 0x3c ]
cmp ecx edx
je r-xdata
add edx 0xc
mov [ eax + 0x3c ] edx
retn
mov [ ecx ] 0xffffffff
mov edx [ eax + 0x100 ]
mov [ ecx + 0x4 ] edx
movzx edx [ eax + 0x58 ]
mov [ ecx + 0x8 ] edx
inc [ eax + 0x198 ]
mov [ eax + 0x100 ] ecx
retn
sub_42f510
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x8
push esi
movzx esi [ ecx + edx + 0x7d ]
push edi
mov edi [ ecx + 0x3c ]
add edi 0x4000
cmp eax edi
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ecx + esi * 4 + 0x100 ]
mov [ ebp - 0x8 ] edi
cmp eax edi
ja r-xdata
push ebx
mov ebx [ edi + 0x4 ]
dec [ ecx + esi * 4 + 0x198 ]
mov [ ecx + esi * 4 + 0x100 ] ebx
mov ebx edi
mov [ ebp - 0x4 ] edx
lea edx [ eax + 0x8 ]
sub ebx eax
nop
mov eax [ edx - 0x8 ]
mov [ edi ] eax
mov eax [ edx - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ edx ]
mov [ ebx + edx ] eax
add edi 0xc
add edx 0xc
dec [ ebp - 0x4 ]
jne r-xdata
mov edx [ ecx + 0x3c ]
mov eax [ ebp + 0x8 ]
pop ebx
cmp eax edx
je r-xdata
movzx eax [ esi + ecx + 0x58 ]
lea eax [ eax + eax * 2 ]
lea edx [ edx + eax * 4 ]
mov eax [ ebp - 0x8 ]
mov [ ecx + 0x3c ] edx
mov [ eax ] 0xffffffff
mov edx [ ecx + esi * 4 + 0x100 ]
mov [ eax + 0x4 ] edx
movzx edx [ esi + ecx + 0x58 ]
mov [ eax + 0x8 ] edx
inc [ ecx + esi * 4 + 0x198 ]
mov [ ecx + esi * 4 + 0x100 ] eax
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_42f5d0
push ebp
mov ebp esp
sub esp 0x9c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
push 0x98
lea eax [ ebp - 0x9c ]
push 0x0
push eax
mov esi ecx
call sub_43d590
mov eax [ esi + 0x30 ]
add esp 0xc
cmp eax [ esi + 0x34 ]
je r-xdata
mov eax [ esi + 0x3c ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov [ eax ] 0x0
mov [ esi + 0x3c ] eax
lea ecx [ ebp - 0x9c ]
lea edx [ esi + 0x198 ]
mov edi 0x26
lea esp [ esp ]
jmp r-xdata
add ecx 0x4
add edx 0x4
dec edi
jne r-xdata
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov [ eax ] 0x0
movzx edx [ ecx + esi + 0x7d ]
inc [ ebp + edx * 4 - 0x9c ]
lea ecx [ ecx + ecx * 2 ]
cmp [ eax + ecx * 4 ] 0xffffffff
lea edx [ ebp + edx * 4 - 0x9c ]
lea eax [ eax + ecx * 4 ]
je r-xdata
cmp [ ecx ] 0x0
lea esi [ edx - 0x98 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ecx ] 0x0
lea esi [ eax + 0x4 ]
jne r-xdata
mov eax [ eax + 0x4 ]
mov [ esi ] eax
dec [ edx ]
dec [ ecx ]
je r-xdata
cmp [ eax ] 0x0
je r-xdata
sub_42f6c0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi eax
push 0x98
xor ebx ebx
lea eax [ esi + 0x100 ]
push ebx
push eax
call sub_43d590
push 0x98
lea ecx [ esi + 0x198 ]
push ebx
push ecx
call sub_43d590
mov eax [ esi + 0x2c ]
add eax [ esi + 0x40 ]
mov ecx [ esi + 0x24 ]
lea edi [ ecx + eax ]
mov [ esi + 0x38 ] eax
shr ecx 0x3
mov eax 0xaaaaaaab
mul ecx
shr edx 0x3
imul edx edx 0x54
mov eax edi
sub eax edx
mov [ esi + 0x3c ] eax
mov [ esi + 0x30 ] eax
mov eax [ esi + 0x18 ]
add esp 0x18
mov [ esi + 0x34 ] edi
mov [ esi + 0x28 ] ebx
mov [ esi + 0xc ] eax
mov ecx eax
cmp eax 0xc
jb r-xdata
or eax 0xffffffff
sub eax ecx
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] eax
lea eax [ edi - 0xc ]
mov [ esi ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] ebx
mov [ eax + 0x8 ] ebx
mov ecx [ esi ]
mov [ ecx ] 0xff
mov edx [ esi ]
mov [ edx + 0x1 ] bl
mov eax [ esi ]
mov ecx 0x101
mov [ eax + 0x2 ] cx
mov eax [ esi + 0x30 ]
mov edx [ esi ]
mov [ esi + 0x8 ] eax
add eax 0x600
mov [ esi + 0x30 ] eax
mov eax [ esi + 0x8 ]
mov [ edx + 0x4 ] eax
xor edx edx
xor ecx ecx
mov ecx 0xc
mov eax [ esi + 0x8 ]
add eax ecx
xor edi edi
mov [ eax ] dl
add ecx 0x6
inc edx
mov [ eax + 0x1 ] 0x1
mov [ eax + 0x2 ] di
mov [ eax + 0x4 ] di
cmp ecx 0x600
jb r-xdata
lea eax [ esi + 0x330 ]
xor edx edx
mov [ ebp - 0x10 ] eax
xor ecx ecx
lea eax [ esi + 0x1038 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
movzx eax [ eax ]
cmp eax edx
jne r-xdata
mov edi [ ebp - 0xc ]
xor ebx ebx
jmp r-xdata
inc ecx
lea eax [ esi + ecx + 0x330 ]
mov [ ebp - 0x10 ] eax
movzx eax [ eax ]
cmp eax edx
je r-xdata
movzx eax [ ebx + r--data ]
inc ecx
xor edx edx
div ecx
mov ecx 0x4000
sub ecx eax
movzx ecx cx
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] ecx
mov [ edi + eax * 2 ] cx
add eax 0x8
cmp eax 0x40
jb r-xdata
add ebx 0x2
add edi 0x2
cmp ebx 0x10
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub [ ebp - 0xc ] 0xffffff80
inc eax
mov [ ebp - 0x8 ] eax
cmp eax 0x19
jb r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea ecx [ esi + 0x333 ]
mov edx 0x3
xor edi edi
mov [ ebp - 0x8 ] ecx
mov ebx ecx
mov [ ebp - 0xc ] edx
lea eax [ esi + 0x43b ]
mov [ ebp - 0x10 ] 0x18
jmp r-xdata
movzx esi [ ebx ]
cmp esi edx
jne r-xdata
mov edx edi
shl edx 0x4
add edx 0x28
mov ecx 0x20
lea esp [ esp ]
lea ecx [ ecx ]
mov [ eax - 0x3 ] dx
mov [ eax - 0x1 ] 0x703
add eax 0x4
dec ecx
jne r-xdata
mov ecx 0x1
add [ ebp - 0xc ] ecx
sub [ ebp - 0x10 ] ecx
jne r-xdata
inc edi
movzx esi [ ecx + edi ]
lea ebx [ ecx + edi ]
cmp esi edx
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f8c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax esi
mov [ esi + 0x44 ] ecx
call sub_42f6c0
mov [ esi + 0x434 ] 0x40070000
pop esi
pop ebp
retn
sub_42f8f0
push ebp
mov ebp esp
sub esp 0xc
movzx eax [ ebx ]
lea edx [ eax + 0x2 ]
push esi
mov esi [ ebx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
shr edx 0x1
call sub_42f3f0
movzx edx [ ebx + 0x1 ]
movzx esi [ ebx + 0x2 ]
mov [ ebx + 0x4 ] eax
lea ecx [ edi * 4 + 0x10 ]
and ecx edx
cmp [ eax ] 0x40
sbb edx edx
lea ecx [ ecx + edx * 8 + 0x8 ]
inc eax
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax ]
sub esi ecx
lea edx [ ecx + edi ]
mov ecx edi
shr edx cl
mov [ eax ] dl
movzx edx dl
mov [ ebp - 0x4 ] edx
movzx edx [ eax + 0x6 ]
add eax 0x6
sub esi edx
add edx edi
mov ecx edi
shr edx cl
movzx ecx dl
add [ ebp - 0x4 ] ecx
cmp [ eax - 0x1 ] 0x40
mov [ eax ] dl
sbb edx edx
inc edx
add edx edx
add edx edx
add edx edx
or [ ebp - 0x8 ] edx
dec [ ebp - 0xc ]
jne r-xdata
mov al [ ebp - 0x8 ]
add esi edi
mov ecx edi
shr esi cl
mov [ ebx + 0x1 ] al
add esi [ ebp - 0x4 ]
mov [ ebx + 0x2 ] si
pop esi
mov esp ebp
pop ebp
retn
sub_42f990
mov edx [ ecx ]
push esi
mov si [ ecx + 0x4 ]
push edi
mov edi [ eax ]
mov [ ecx ] edi
mov di [ eax + 0x4 ]
mov [ ecx + 0x4 ] di
mov [ eax ] edx
pop edi
mov [ eax + 0x4 ] si
pop esi
retn
sub_42f9b0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
mov al [ ebx ]
push esi
push edi
test al al
jne r-xdata
mov edi [ ebp + 0x8 ]
movzx edx al
mov eax [ ebx + 0x4 ]
add edx 0x2
shr edx 0x1
push eax
mov ecx edi
mov [ ebp + 0xc ] edx
call sub_42f510
movzx ecx [ ebx ]
lea edx [ ecx + ecx * 2 ]
add edx edx
lea esi [ edx + eax ]
add esp 0x4
mov [ ebx + 0x4 ] eax
mov [ ebp - 0x8 ] ecx
cmp esi eax
jb r-xdata
movzx eax [ ebx + 0x6 ]
movzx ecx [ ebx + 0x4 ]
mov esi [ ebp + 0x8 ]
shl eax 0x10
or eax ecx
cmp eax [ esi + 0x3c ]
jb r-xdata
movzx eax [ ebx ]
cmp ecx eax
je r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ esi + 0x3c ]
cmp ebx eax
je r-xdata
mov edi [ ebp + 0x10 ]
cmp edi [ esi + 0x18 ]
jae r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
movzx eax [ esi + 0x4 ]
movzx edx [ esi + 0x2 ]
shl eax 0x10
or eax edx
cmp eax [ edi + 0x3c ]
jae r-xdata
add eax 0xc
pop edi
mov [ esi + 0x3c ] eax
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0xffffffff
mov ecx [ esi + 0x100 ]
mov [ ebx + 0x4 ] ecx
movzx edx [ esi + 0x58 ]
mov [ ebx + 0x8 ] edx
inc [ esi + 0x198 ]
pop edi
mov [ esi + 0x100 ] ebx
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebx + 0x4 ] eax
lea edx [ edi + 0x1 ]
push edx
push eax
push esi
call sub_42f9b0
add esp 0xc
mov [ ebx + 0x4 ] ax
shr eax 0x10
mov [ ebx + 0x6 ] ax
jmp r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebx ] cl
test ecx ecx
jns r-xdata
mov edx [ ebp + 0x10 ]
cmp edx [ edi + 0x18 ]
jae r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add eax edx
sub edx 0x6
mov [ ebp - 0x4 ] edx
dec ecx
xor edx edx
mov [ esi + 0x2 ] dx
mov [ esi + 0x4 ] dx
mov edx [ esi ]
mov [ ebp - 0x10 ] edx
movzx edx [ esi + 0x4 ]
mov [ ebp - 0xc ] dx
mov edx [ eax ]
mov [ esi ] edx
movzx edx [ eax + 0x4 ]
mov [ esi + 0x4 ] dx
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
movzx edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov [ eax + 0x4 ] dx
jmp r-xdata
cmp edi 0x9
jbe r-xdata
movzx edx [ ebx + 0x6 ]
movzx eax [ ebx + 0x4 ]
shl edx 0x10
or edx eax
jne r-xdata
jne r-xdata
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + edi + 0x7d ]
mov [ esi ] 0xffffffff
mov edx [ edi + eax * 4 + 0x100 ]
mov [ esi + 0x4 ] edx
movzx ecx [ eax + edi + 0x58 ]
mov [ esi + 0x8 ] ecx
mov ecx 0x1
add [ edi + eax * 4 + 0x198 ] ecx
mov [ edi + eax * 4 + 0x100 ] esi
mov eax [ edi + 0x3c ]
cmp ebx eax
je r-xdata
xor eax eax
mov [ esi + 0x2 ] eax
inc edx
push edx
push eax
push edi
call sub_42f9b0
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov [ esi + 0x2 ] ax
shr eax 0x10
mov [ esi + 0x4 ] ax
jmp r-xdata
sub esi 0x6
cmp esi [ ebx + 0x4 ]
jae r-xdata
movzx edx [ ebx + 0x2 ]
shl ecx 0x4
xor eax eax
cmp edx ecx
mov ecx [ ebp + 0xc ]
setg al
push edi
mov edi eax
call sub_42f8f0
add esp 0x4
cmp [ esi ] 0x40
mov dl [ ebx + 0x1 ]
setae cl
add cl cl
add cl cl
add cl cl
and dl 0x10
add cl dl
mov edx [ ebp + 0xc ]
mov [ ebx + 0x1 ] cl
mov eax [ esi ]
mov [ ebx + 0x2 ] eax
mov cx [ esi + 0x4 ]
mov [ ebx + 0x6 ] cx
movzx eax [ edx + edi + 0x7d ]
mov [ esi ] 0xffffffff
mov ecx [ edi + eax * 4 + 0x100 ]
mov [ esi + 0x4 ] ecx
movzx edx [ eax + edi + 0x58 ]
mov [ esi + 0x8 ] edx
inc [ edi + eax * 4 + 0x198 ]
mov [ edi + eax * 4 + 0x100 ] esi
mov al [ ebx + 0x3 ]
add al 0xb
shr al 0x3
pop edi
mov [ ebx + 0x3 ] al
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
add eax 0xc
mov [ edi + 0x3c ] eax
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0xffffffff
mov edx [ edi + 0x100 ]
mov [ ebx + 0x4 ] edx
movzx eax [ edi + 0x58 ]
mov [ ebx + 0x8 ] eax
add [ edi + 0x198 ] ecx
mov [ edi + 0x100 ] ebx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_42fc50
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
xor eax eax
push edi
xor esi esi
lea edx [ ecx + 0x59 ]
add ecx 0x19c
lea edi [ eax + 0x13 ]
lea esp [ esp ]
movzx ebx [ edx - 0x1 ]
imul ebx [ ecx - 0x4 ]
add eax ebx
movzx ebx [ edx ]
imul ebx [ ecx ]
add esi ebx
add ecx 0x8
add edx 0x2
dec edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
add eax esi
imul eax eax 0xfffffff4
sub eax [ ecx + 0x3c ]
pop edi
sub eax [ ecx + 0x34 ]
pop esi
add eax [ ecx + 0x38 ]
pop ebx
add eax [ ecx + 0x30 ]
add eax [ ecx + 0x24 ]
pop ebp
retn
sub_42fcb0
push ebp
mov ebp esp
mov eax [ esi + 0x40 ]
add eax [ esi + 0x2c ]
push ebx
mov ebx [ esi + 0x4 ]
push edi
mov [ esi + 0x38 ] eax
cmp ebx [ ebp + 0x8 ]
je r-xdata
cmp ebx [ esi ]
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x44 ] 0x0
je r-xdata
lea ecx [ ecx ]
movzx ecx al
add ecx 0x3
sar ecx 0x1
push esi
xor edi edi
call sub_42f8f0
add esp 0x4
mov edi [ ebx + 0x4 ]
cmp [ edi ] 0x40
mov dl [ ebx + 0x1 ]
setae cl
add cl cl
add cl cl
add cl cl
and dl 0x10
add cl dl
mov [ ebx + 0x1 ] cl
mov eax [ edi ]
mov [ ebx + 0x2 ] eax
mov cx [ edi + 0x4 ]
mov [ ebx + 0x6 ] cx
mov eax [ esi + 0x3c ]
cmp edi eax
je r-xdata
pop edi
mov eax esi
pop ebx
pop ebp
jmp sub_42f6c0
xor eax eax
xor edi edi
lea edx [ esi + 0x59 ]
lea ecx [ esi + 0x19c ]
mov [ ebp + 0x8 ] 0x13
jmp r-xdata
movzx eax [ ebx + 0x2 ]
add eax 0x4
movzx ecx cl
mov [ ebx + 0x2 ] ax
movzx eax ax
lea edx [ ecx * 4 + 0x80 ]
cmp eax edx
jle r-xdata
mov al [ ebx + 0x3 ]
mov dl al
shr dl 0x1
sub al dl
mov [ ebx + 0x3 ] al
jmp r-xdata
dec [ ebx ]
mov al [ ebx ]
jne r-xdata
add eax 0xc
mov [ esi + 0x3c ] eax
movzx ecx [ ebx + 0x3 ]
add ecx 0xb
sar ecx 0x3
mov [ ebx + 0x3 ] cl
jmp r-xdata
mov [ edi ] 0xffffffff
mov edx [ esi + 0x100 ]
mov [ edi + 0x4 ] edx
movzx eax [ esi + 0x58 ]
mov [ edi + 0x8 ] eax
inc [ esi + 0x198 ]
mov [ esi + 0x100 ] edi
movzx ecx [ ebx + 0x3 ]
add ecx 0xb
sar ecx 0x3
mov [ ebx + 0x3 ] cl
jmp r-xdata
movzx ebx [ edx - 0x1 ]
imul ebx [ ecx - 0x4 ]
add eax ebx
movzx ebx [ edx ]
imul ebx [ ecx ]
add edi ebx
add ecx 0x8
add edx 0x2
dec [ ebp + 0x8 ]
jne r-xdata
mov ebx [ ebx + 0x8 ]
cmp ebx [ esi ]
jne r-xdata
add ecx 0x2
sar ecx 0x1
push esi
mov edi 0x1
call sub_42f8f0
add esp 0x4
mov ebx [ ebx + 0x8 ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ esi + 0x24 ]
add eax edi
imul eax eax 0xfffffff4
sub eax [ esi + 0x3c ]
sub eax [ esi + 0x34 ]
add eax [ esi + 0x30 ]
add eax [ esi + 0x38 ]
add eax ecx
shr ecx 0x1
cmp eax ecx
jb r-xdata
mov cl [ ebx ]
test cl cl
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ esi + 0x4 ]
push 0x0
push edx
push esi
call sub_42f9b0
mov ecx esi
call sub_42f5d0
push esi
call sub_42fc50
mov ecx [ esi + 0x24 ]
shr ecx 0x2
lea ecx [ ecx + ecx * 2 ]
add esp 0x10
cmp eax ecx
ja r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ esi + 0x18 ]
pop edi
mov [ esi + 0x28 ] 0x0
mov [ esi + 0xc ] edx
pop ebx
pop ebp
retn
mov edi edi
sub_42fe80
push ebp
mov ebp esp
sub esp 0x50
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
movzx ebx [ eax + 0x4 ]
push edi
movzx edi [ eax + 0x2 ]
shl ebx 0x10
or ebx edi
xor edi edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0xc ] edi
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x50 ] eax
mov cl [ ebx ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xa ] ax
shr eax 0x10
mov [ ebp - 0x8 ] ax
mov eax [ edx + 0x8 ]
cmp [ eax ] 0x40
mov [ ebp - 0xc ] cl
setae bl
add bl bl
cmp cl 0x40
setae al
add bl al
add bl bl
add bl bl
add bl bl
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax ] cl
je r-xdata
mov cl [ esi + 0x3 ]
mov [ ebp - 0xb ] cl
jmp r-xdata
mov esi eax
test ecx ecx
je r-xdata
movzx edx [ esi ]
movzx eax [ eax + 0x1 ]
movzx ecx [ esi + 0x2 ]
dec eax
sub ecx edx
sub ecx eax
lea edx [ eax + eax ]
cmp edx ecx
ja r-xdata
lea esp [ esp ]
mov eax [ edx + 0x34 ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov [ ebp + 0x10 ] 0x0
jmp r-xdata
lea eax [ eax + ecx * 2 - 0x3 ]
xor edx edx
div ecx
lea eax [ eax + eax * 4 ]
cmp ecx eax
sbb eax eax
neg eax
jmp r-xdata
add eax 0x6
cmp [ eax ] cl
jne r-xdata
cmp [ edx + 0x100 ] 0x0
je r-xdata
add eax 0xfffffff4
mov [ edx + 0x34 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
cmp [ edx ] 0x0
mov al [ esi + 0x3 ]
lea ecx [ esi + 0x2 ]
sete dl
cmp al 0x18
setb bl
and dl bl
add dl al
mov [ ecx + 0x1 ] dl
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
mov bl [ ecx ]
cmp bl [ eax ]
je r-xdata
movzx eax [ ecx + 0x4 ]
movzx ebx [ ecx + 0x2 ]
shl eax 0x10
or eax ebx
mov ebx [ ebp - 0xc ]
cmp eax ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x4 ]
inc al
mov [ ebp - 0xb ] al
lea esp [ esp ]
xor edi edi
mov eax edx
call sub_42f300
test eax eax
je r-xdata
mov eax [ edx + 0x100 ]
mov ecx [ eax + 0x4 ]
dec [ edx + 0x198 ]
mov [ edx + 0x100 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov cx [ ebp - 0x8 ]
mov [ eax + 0x8 ] esi
dec edi
mov [ eax + 0x6 ] cx
mov ecx [ ebp + edi * 4 - 0x50 ]
mov esi eax
shr esi 0x10
mov [ eax ] 0x0
mov [ eax + 0x1 ] bl
mov [ ecx + 0x4 ] si
mov [ ebp - 0x4 ] edi
mov [ ecx + 0x2 ] ax
mov esi eax
test edi edi
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi eax
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp + edi * 4 - 0x50 ] ecx
inc edi
test eax eax
jne r-xdata
mov al [ ecx + 0x1 ]
cmp al 0x73
jae r-xdata
mov al [ eax ]
lea ecx [ ecx ]
xor eax eax
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edi
jmp r-xdata
inc al
mov [ ecx + 0x1 ] al
inc [ esi + 0x2 ]
jmp r-xdata
add ecx 0x6
cmp [ ecx ] al
jne r-xdata
sub_430070
push ebp
mov ebp esp
sub esp 0x8
mov edx [ edi + 0x38 ]
mov ecx [ edi + 0x8 ]
push ebx
mov ebx edx
shr ebx 0x10
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ecx + 0x2 ] dx
mov [ ebp - 0x4 ] ebx
mov [ ecx + 0x4 ] bx
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ esi + 0x4 ]
movzx ebx [ esi + 0x2 ]
shl ecx 0x10
or ecx ebx
jne r-xdata
mov cl [ eax + 0x3 ]
lea esi [ eax + 0x2 ]
cmp cl 0x20
setb bl
add bl cl
mov [ esi + 0x1 ] bl
mov ecx [ edi + 0x8 ]
mov esi [ eax + 0x4 ]
mov cl [ ecx ]
cmp [ esi ] cl
je r-xdata
movzx ecx [ esi + 0x4 ]
movzx ebx [ esi + 0x2 ]
shl ecx 0x10
or ecx ebx
cmp ecx edx
ja r-xdata
mov cx [ ebp - 0x4 ]
mov [ esi + 0x2 ] dx
mov [ esi + 0x4 ] cx
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x73
jae r-xdata
add esi 0x6
cmp [ esi ] cl
jne r-xdata
cmp [ edi + 0xc ] 0x1
jne r-xdata
mov ebx [ edi + 0x8 ]
push 0x0
push 0x0
push edi
mov [ edi + 0x8 ] esi
call sub_42fe80
add esp 0xc
test eax eax
jne r-xdata
inc [ edi + 0xc ]
test esi esi
je r-xdata
add cl 0x2
mov [ esi + 0x1 ] cl
add [ eax + 0x2 ] 0x2
jmp r-xdata
movzx eax [ esi + 0x4 ]
movzx ecx [ esi + 0x2 ]
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x8 ]
cmp ecx [ edi + 0x4 ]
jne r-xdata
mov [ esi + 0x2 ] ax
shr eax 0x10
mov [ esi + 0x4 ] ax
xor edx edx
mov [ esi + 0x2 ] edx
jmp r-xdata
movzx eax [ esi + 0x4 ]
movzx edx [ esi + 0x2 ]
mov ecx [ edi + 0x8 ]
shl eax 0x10
or eax edx
mov [ ecx + 0x2 ] ax
shr eax 0x10
mov [ ecx + 0x4 ] ax
dec [ edi + 0x38 ]
mov [ edi + 0x8 ] ebx
sub_430190
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi eax
mov ecx [ esi + 0x8 ]
movzx eax [ ecx + 0x2 ]
mov dl [ ecx + 0x1 ]
push edi
movzx edi [ ecx + 0x4 ]
shl edi 0x10
or edi eax
movzx eax dl
mov [ ebp - 0x1c ] eax
mov al [ ecx ]
mov [ ebp - 0x1 ] al
xor eax eax
mov [ ebp - 0x8 ] edi
cmp dl 0x1f
jae r-xdata
cmp [ esi + 0xc ] 0x0
mov ebx [ esi + 0x4 ]
jne r-xdata
mov edx [ esi ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x38 ]
mov cl [ ecx ]
mov [ edx ] cl
inc [ esi + 0x38 ]
mov edx [ esi + 0x38 ]
mov ecx [ esi + 0x3c ]
mov [ ebp - 0x20 ] edx
cmp edx ecx
jae r-xdata
test edi edi
je r-xdata
cmp [ edx ] al
jne r-xdata
push ebx
call sub_42fcb0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
push eax
mov eax [ esi ]
push 0x1
push esi
call sub_42fe80
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edx + 0x4 ]
mov cl [ ecx ]
cmp [ eax ] cl
je r-xdata
mov cl [ edx + 0x3 ]
lea eax [ edx + 0x2 ]
cmp cl 0x20
jae r-xdata
cmp edi ecx
jae r-xdata
push eax
mov eax [ esi ]
mov edi esi
call sub_430070
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edx eax
shr edx 0x10
pop edi
mov [ ecx + 0x2 ] ax
mov [ ecx + 0x4 ] dx
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
xor edx edx
mov [ eax + 0x2 ] edx
mov cl [ eax + 0x1 ]
cmp cl 0x73
jae r-xdata
jmp r-xdata
inc cl
mov [ eax + 0x1 ] cl
jmp r-xdata
dec [ esi + 0xc ]
jne r-xdata
push eax
mov eax [ esi ]
push 0x0
push esi
call sub_42fe80
add esp 0xc
test eax eax
je r-xdata
add cl 0x2
mov [ eax + 0x1 ] cl
add [ edx + 0x2 ] 0x2
add eax 0x6
cmp [ eax ] cl
jne r-xdata
mov eax [ esi ]
movzx edx [ eax ]
movzx ecx [ eax + 0x2 ]
sub ecx edx
sub ecx [ ebp - 0x1c ]
cmp [ ebp - 0x1 ] 0x40
mov [ ebp - 0x30 ] ecx
setae cl
add cl cl
add cl cl
add cl cl
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x2 ] cl
cmp ebx eax
je r-xdata
mov edx [ esi + 0x4 ]
xor eax eax
cmp edx [ esi ]
mov [ ebp - 0x20 ] edi
setne al
sub [ esi + 0x38 ] eax
mov [ ebp - 0x8 ] eax
mov edi eax
mov cl [ eax + 0x1 ]
cmp cl [ eax - 0x5 ]
jb r-xdata
mov [ esi ] edi
mov [ esi + 0x4 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ ebx ]
mov [ ebp - 0xc ] edx
test edx edx
je r-xdata
movzx ebx [ eax + 0x4 ]
mov ecx [ eax ]
mov [ ebp - 0x2c ] bx
mov ebx [ eax - 0x6 ]
mov [ eax ] ebx
movzx ebx [ eax - 0x2 ]
mov [ eax + 0x4 ] bx
mov [ eax - 0x6 ] ecx
mov cx [ ebp - 0x2c ]
mov [ eax - 0x2 ] cx
add eax 0xfffffffa
mov eax [ esi + 0x100 ]
test eax eax
je r-xdata
test dl 0x1
je r-xdata
movzx eax [ esi + 0x58 ]
mov edi [ esi + 0x34 ]
lea ecx [ eax + eax * 2 ]
mov eax [ esi + 0x30 ]
add ecx ecx
add ecx ecx
sub edi eax
cmp ecx edi
ja r-xdata
mov ecx [ eax + 0x4 ]
dec [ esi + 0x198 ]
mov [ esi + 0x100 ] ecx
jmp r-xdata
lea ecx [ edx + edx * 2 + 0x1 ]
cmp ecx [ ebp - 0x18 ]
sbb eax eax
neg eax
add [ ebx + 0x2 ] ax
jmp r-xdata
lea edi [ edx + 0x1 ]
shr edi 0x1
movzx eax [ edi + esi + 0x7d ]
movzx ecx [ edi + esi + 0x7e ]
mov [ ebp - 0x24 ] eax
cmp eax ecx
je r-xdata
xor edi edi
mov eax esi
call sub_42f300
mov edx [ ebp - 0xc ]
add ecx eax
mov [ esi + 0x30 ] ecx
jmp r-xdata
test eax eax
je r-xdata
movzx ecx [ ebx + 0x2 ]
lea eax [ ecx + 0x6 ]
imul eax [ ebp - 0x1c ]
add ecx [ ebp - 0x30 ]
add eax eax
lea edi [ ecx + ecx * 2 ]
add edi edi
cmp eax edi
jae r-xdata
inc eax
mov ecx esi
call sub_42f3a0
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov ecx [ ebx + 0x2 ]
mov [ eax ] ecx
mov cx [ ebx + 0x6 ]
mov [ eax + 0x4 ] cx
mov [ ebx + 0x4 ] eax
mov cl [ eax + 0x1 ]
cmp cl 0x1e
jae r-xdata
mov edx ecx
shl edx 0x4
sub edx ecx
cmp edx eax
sbb edx edx
lea edi [ ecx + ecx * 2 ]
add edi edi
add edi edi
neg edx
cmp edi eax
sbb edi edi
neg edi
add edx edi
lea ecx [ ecx + ecx * 8 ]
cmp ecx eax
sbb eax eax
neg eax
lea ecx [ edx + eax + 0x4 ]
movzx eax [ ebx + 0x2 ]
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] ecx
add eax ecx
lea edi [ ecx * 4 ]
cmp eax edi
sbb edi edi
cmp ecx eax
sbb ecx ecx
neg ecx
lea eax [ edi + ecx + 0x2 ]
mov [ ebp - 0x14 ] eax
movzx eax [ ebx + 0x2 ]
add eax 0x4
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov edx eax
add ecx 0x8
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] edi
mov [ eax + 0x1 ] 0x78
add cl cl
mov [ eax + 0x1 ] cl
jmp r-xdata
mov [ ebx + 0x2 ] ax
mov eax [ ebx + 0x4 ]
mov edi [ ebp - 0x8 ]
lea ecx [ edx + edx * 2 + 0x3 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x2 ] cx
shr ecx 0x10
mov [ eax + 0x4 ] cx
movzx ecx [ ebp - 0x1 ]
mov [ eax ] cl
movzx ecx [ ebp - 0x14 ]
mov [ eax + 0x1 ] cl
mov al [ ebp - 0x2 ]
or [ ebx + 0x1 ] al
inc dl
mov [ ebx ] dl
mov ebx [ ebx + 0x8 ]
cmp ebx [ esi ]
jne r-xdata
mov edi [ ecx - 0x8 ]
mov [ edx ] edi
mov edi [ ecx - 0x4 ]
mov [ edx + 0x4 ] edi
mov edi [ ecx ]
mov [ eax + ecx ] edi
add edx 0xc
add ecx 0xc
dec [ ebp - 0x10 ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] 0xffffffff
mov edx [ esi + eax * 4 + 0x100 ]
mov [ ecx + 0x4 ] edx
movzx edx [ eax + esi + 0x58 ]
mov [ ecx + 0x8 ] edx
inc [ esi + eax * 4 + 0x198 ]
mov edx [ ebp - 0xc ]
mov [ esi + eax * 4 + 0x100 ] ecx
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x4 ] eax
movzx eax [ eax + 0x1 ]
mov ecx 0x2
cmp ecx [ ebp - 0x18 ]
sbb ecx ecx
neg ecx
add cx [ esi + 0x10 ]
add cx ax
mov [ ebx + 0x2 ] cx
sub_430510
push ebp
mov ebp esp
sub esp 0x18
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov eax [ edi + 0x8 ]
mov cx [ eax + 0x4 ]
push ebx
push esi
mov esi [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x14 ] cx
cmp eax edx
je r-xdata
mov dx [ ebp - 0x14 ]
mov [ eax ] esi
mov [ eax + 0x4 ] dx
mov cl [ eax + 0x1 ]
mov edx [ edi ]
movzx ebx [ edx + 0x2 ]
movzx edx cl
add cl 0x4
mov [ eax + 0x1 ] cl
sub ebx edx
xor edx edx
cmp [ edi + 0xc ] edx
movzx ecx cl
setne dl
add ecx edx
shr ecx 0x1
mov [ eax + 0x1 ] cl
movzx ecx cl
mov [ ebp - 0x4 ] ecx
mov ecx [ edi ]
movzx ecx [ ecx ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
jmp r-xdata
lea ecx [ eax - 0x6 ]
movzx ecx [ eax + 0x7 ]
mov esi [ ebp - 0x8 ]
add eax 0x6
sub ebx ecx
add ecx edx
shr ecx 0x1
movzx edx cl
add [ ebp - 0x4 ] edx
mov [ eax + 0x1 ] cl
cmp cl [ eax - 0x5 ]
jbe r-xdata
mov ebx [ ecx ]
mov [ eax ] ebx
mov bx [ ecx + 0x4 ]
mov [ eax + 0x4 ] bx
sub eax 0x6
sub ecx 0x6
cmp eax edx
jne r-xdata
mov ecx [ ebp - 0xc ]
dec ecx
mov [ ebp - 0xc ] ecx
jne r-xdata
mov edx [ eax ]
mov [ ebp - 0x18 ] edx
mov dx [ eax + 0x4 ]
mov ecx eax
mov [ ebp - 0x14 ] dx
mov edx [ ebp - 0x10 ]
inc eax
cmp [ eax ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
mov edx [ ebp - 0x18 ]
mov [ ecx ] edx
mov dx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] dx
mov edx [ ebp - 0x18 ]
shr edx 0x8
cmp dl [ ecx - 0x5 ]
ja r-xdata
mov ecx [ edi ]
mov eax ebx
shr eax 0x1
sub ebx eax
add ebx [ ebp - 0x4 ]
pop esi
mov [ ecx + 0x2 ] bx
mov eax [ edi ]
or [ eax + 0x1 ] 0x4
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov [ edi + 0x8 ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi ]
movzx eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
lea ecx [ ecx ]
mov edx [ ecx - 0x6 ]
mov [ ecx ] edx
mov dx [ ecx - 0x2 ]
mov [ ecx + 0x4 ] dx
sub ecx 0x6
cmp ecx esi
je r-xdata
sub eax 0x6
inc ecx
cmp [ eax ] 0x0
je r-xdata
sub [ edx ] cl
add ebx ecx
mov ecx [ edi ]
mov al [ ecx ]
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
movzx edx al
add ecx 0x2
add edx 0x2
shr ecx 0x1
sar edx 0x1
cmp ecx edx
je r-xdata
mov eax [ esi ]
mov [ ebp - 0x18 ] eax
shr eax 0x8
movzx edx al
lea eax [ ebx + edx * 2 - 0x1 ]
xor edx edx
div ebx
mov cx [ esi + 0x4 ]
mov [ ebp - 0x17 ] al
cmp al 0x29
jbe r-xdata
mov eax [ edi ]
and [ eax + 0x1 ] 0xf7
mov eax [ edi ]
mov esi [ eax + 0x4 ]
cmp [ esi ] 0x40
setae dl
add dl dl
add dl dl
add dl dl
or [ eax + 0x1 ] dl
mov eax [ edi ]
movzx ecx [ eax ]
mov edi edi
mov eax edi
call sub_42f3f0
mov ecx [ edi ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0xc ]
add eax 0x2
shr eax 0x1
movzx eax [ eax + edi + 0x7d ]
mov [ esi ] 0xffffffff
mov edx [ edi + eax * 4 + 0x100 ]
mov [ esi + 0x4 ] edx
movzx edx [ eax + edi + 0x58 ]
mov [ esi + 0x8 ] edx
inc [ edi + eax * 4 + 0x198 ]
cmp [ ebp - 0x18 ] 0x40
mov [ edi + eax * 4 + 0x100 ] esi
mov eax [ edi ]
mov bl [ eax + 0x1 ]
setae dl
add dl dl
add dl dl
add dl dl
and bl 0x10
add dl bl
mov [ eax + 0x1 ] dl
mov eax [ edi ]
mov edx [ ebp - 0x18 ]
add eax 0x2
mov [ edi + 0x8 ] eax
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] cx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x17 ] 0x29
mov eax [ edi ]
add esi 0x6
cmp [ esi ] 0x40
setae dl
add dl dl
add dl dl
add dl dl
or [ eax + 0x1 ] dl
dec ecx
jne r-xdata
sub_430730
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov dl [ eax ]
cmp dl 0xff
je r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ esi + 0x434 ]
mov [ ecx ] 0x1
pop esi
pop ebp
retn
movzx ecx dl
push edi
mov edi [ eax + 0x8 ]
movzx edi [ edi ]
add edi [ ebp + 0xc ]
movzx edx dl
add edx edx
cmp edx edi
movzx edi [ ecx + esi + 0x332 ]
sbb edx edx
inc ecx
imul ecx ecx 0xb
neg edx
shl edi 0x4
add edx edi
movzx edi [ eax + 0x2 ]
movzx eax [ eax + 0x1 ]
cmp ecx edi
sbb ecx ecx
neg ecx
lea edx [ ecx + edx * 2 + 0xae ]
add edx eax
mov cl [ esi + edx * 4 + 0x2 ]
lea eax [ esi + edx * 4 ]
movzx esi [ eax ]
mov edx esi
shr edx cl
xor ecx ecx
pop edi
sub esi edx
test edx edx
sete cl
mov [ eax ] si
pop esi
add ecx edx
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
pop ebp
retn
sub_4307c0
mov ecx [ esi + 0x8 ]
movzx eax [ ecx + 0x4 ]
movzx ecx [ ecx + 0x2 ]
shl eax 0x10
or eax ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax esi
call sub_430190
mov edx [ esi + 0x4 ]
mov [ esi ] edx
retn
cmp eax [ esi + 0x3c ]
jb r-xdata
mov [ esi + 0x4 ] eax
mov [ esi ] eax
retn
sub_4307f0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov edx 0x4
add [ eax + 0x1 ] dl
mov ecx [ edi ]
add [ ecx + 0x2 ] dx
mov cl [ eax + 0x1 ]
cmp cl [ eax - 0x5 ]
jbe r-xdata
mov ecx [ edi + 0x8 ]
movzx eax [ ecx + 0x4 ]
movzx edx [ ecx + 0x2 ]
shl eax 0x10
or eax edx
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov edx [ eax ]
lea ecx [ eax - 0x6 ]
push ebx
mov ebx [ ecx ]
push esi
mov si [ eax + 0x4 ]
mov [ eax ] ebx
mov bx [ ecx + 0x4 ]
mov [ eax + 0x4 ] bx
mov [ ecx ] edx
mov [ ecx + 0x4 ] si
mov [ edi + 0x8 ] ecx
cmp [ ecx + 0x1 ] 0x7c
pop esi
pop ebx
jbe r-xdata
mov eax edi
call sub_430190
mov eax [ edi + 0x4 ]
mov [ edi ] eax
pop edi
pop ebp
retn
cmp eax [ edi + 0x3c ]
jb r-xdata
call sub_430510
mov [ edi + 0x4 ] eax
mov [ edi ] eax
pop edi
pop ebp
retn
sub_430870
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
movzx edx [ ecx + 0x1 ]
mov eax [ edi ]
movzx ecx [ eax + 0x2 ]
xor ebx ebx
add edx edx
cmp edx ecx
setge bl
mov ecx ebx
add [ edi + 0x1c ] ecx
mov [ edi + 0x14 ] ecx
add [ eax + 0x2 ] 0x4
mov eax [ edi + 0x8 ]
movzx ecx [ eax + 0x1 ]
add ecx 0x4
mov [ eax + 0x1 ] cl
cmp cl 0x7c
jbe r-xdata
mov ecx [ edi + 0x8 ]
movzx eax [ ecx + 0x4 ]
movzx edx [ ecx + 0x2 ]
shl eax 0x10
or eax edx
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_430510
mov eax edi
call sub_430190
mov eax [ edi + 0x4 ]
mov [ edi ] eax
pop edi
pop ebx
pop ebp
retn
cmp eax [ edi + 0x3c ]
jb r-xdata
mov [ edi + 0x4 ] eax
mov [ edi ] eax
pop edi
pop ebx
pop ebp
retn
sub_4308f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov cl [ eax + 0x1 ]
cmp cl 0xc4
setb dl
add dl cl
mov [ eax + 0x1 ] dl
mov ecx [ esi + 0x8 ]
mov eax 0x1
add [ esi + 0x1c ] eax
mov [ esi + 0x14 ] eax
movzx eax [ ecx + 0x4 ]
movzx ecx [ ecx + 0x2 ]
shl eax 0x10
or eax ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax esi
call sub_430190
mov edx [ esi + 0x4 ]
mov [ esi ] edx
pop esi
pop ebp
retn
cmp eax [ esi + 0x3c ]
jb r-xdata
mov [ esi + 0x4 ] eax
mov [ esi ] eax
pop esi
pop ebp
retn
sub_430950
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
add [ eax + 0x2 ] 0x4
mov eax [ edi + 0x8 ]
movzx ecx [ eax + 0x1 ]
add ecx 0x4
mov [ eax + 0x1 ] cl
cmp cl 0x7c
jbe r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x1c ] eax
mov eax edi
call sub_430190
mov ecx [ edi + 0x4 ]
mov [ edi ] ecx
pop edi
pop ebp
retn
call sub_430510
sub_430990
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] 0xffffffff
mov [ esi + 0x4c ] eax
lea edi [ eax + 0x4 ]
lea ebx [ ebx ]
mov eax [ esi + 0x54 ]
push eax
mov eax [ eax ]
call eax
mov ecx [ esi + 0x4c ]
movzx eax al
shl ecx 0x8
or eax ecx
add esp 0x4
dec edi
mov [ esi + 0x4c ] eax
jne r-xdata
cmp eax 0xffffffff
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn
sub_4309e0
push ebp
mov ebp esp
mov eax [ ecx + 0x48 ]
xor edx edx
div [ ebp + 0x8 ]
push esi
xor edx edx
mov esi eax
mov eax [ ecx + 0x4c ]
mov [ ecx + 0x48 ] esi
div esi
pop esi
pop ebp
retn
sub_430a00
push ebp
mov ebp esp
mov eax [ esi + 0x48 ]
mov ecx eax
imul ecx [ ebp + 0x8 ]
add [ esi + 0x50 ] ecx
sub [ esi + 0x4c ] ecx
imul eax [ ebp + 0xc ]
mov [ esi + 0x48 ] eax
lea esp [ esp ]
mov eax [ esi + 0x54 ]
push eax
mov eax [ eax ]
call eax
mov edx [ esi + 0x4c ]
shl [ esi + 0x48 ] 0x8
movzx ecx al
shl edx 0x8
or ecx edx
add esp 0x4
shl [ esi + 0x50 ] 0x8
mov [ esi + 0x4c ] ecx
jmp r-xdata
cmp ecx 0x8000
jae r-xdata
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x48 ]
lea edx [ eax + ecx ]
xor edx eax
cmp edx 0x1000000
jb r-xdata
pop ebp
retn
neg eax
and eax 0x7fff
mov [ esi + 0x48 ] eax
sub_430a70
push ebp
mov ebp esp
sub esp 0x510
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0x0
push edi
je r-xdata
movzx edx [ eax + 0x3 ]
movzx ecx [ edx + esi + 0x32f ]
mov edx [ eax + 0x8 ]
movzx edx [ edx ]
movzx edx [ edx + esi + 0x230 ]
movzx eax [ eax + 0x1 ]
shr [ esi + 0x48 ] 0xe
shl ecx 0x6
add ecx edx
mov edx [ esi + 0x1c ]
sar edx 0x1a
and edx 0x20
add ecx edx
add ecx eax
mov eax [ esi + 0x4c ]
xor edx edx
div [ esi + 0x48 ]
add ecx [ esi + 0x14 ]
lea edi [ esi + ecx * 2 + 0x1038 ]
movzx ecx [ edi ]
cmp eax ecx
jae r-xdata
movzx ecx [ eax + 0x2 ]
mov edi [ eax + 0x4 ]
mov eax [ esi + 0x48 ]
xor edx edx
div ecx
xor edx edx
mov ecx eax
mov eax [ esi + 0x4c ]
div ecx
mov [ esi + 0x48 ] ecx
movzx ecx [ edi + 0x1 ]
cmp eax ecx
jae r-xdata
mov edx 0x4000
sub edx ecx
push edx
push ecx
call sub_430a00
movzx eax [ edi ]
lea ecx [ eax + 0x20 ]
sar ecx 0x7
sub eax ecx
movzx edx ax
mov [ edi ] ax
shr edx 0xa
movzx eax [ edx + r--data ]
add esp 0x8
mov [ esi + 0x10 ] eax
xor eax eax
lea esp [ esp ]
push ecx
push 0x0
call sub_430a00
movzx eax [ edi ]
lea ecx [ eax + 0x20 ]
sar ecx 0x7
sub eax ecx
sub eax 0xffffff80
mov [ edi ] ax
mov eax [ esi ]
add eax 0x2
mov [ esi + 0x8 ] eax
mov bl [ eax ]
push esi
call sub_4308f0
add esp 0xc
pop edi
pop esi
movzx eax bl
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov [ esi + 0x14 ] 0x0
movzx ebx [ edx ]
mov [ ebp - 0x108 ] ebx
push ecx
push 0x0
call sub_430a00
mov [ esi + 0x8 ] edi
mov bl [ edi ]
push esi
call sub_430870
add esp 0xc
pop edi
pop esi
movzx eax bl
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
or ecx 0xffffffff
mov [ ebp + eax * 4 - 0x104 ] ecx
mov [ ebp + eax * 4 - 0x100 ] ecx
mov [ ebp + eax * 4 - 0xfc ] ecx
mov [ ebp + eax * 4 - 0xf8 ] ecx
mov [ ebp + eax * 4 - 0xf4 ] ecx
mov [ ebp + eax * 4 - 0xf0 ] ecx
mov [ ebp + eax * 4 - 0xec ] ecx
mov [ ebp + eax * 4 - 0xe8 ] ecx
add eax 0x8
cmp eax 0x40
jb r-xdata
mov ecx [ esi ]
movzx edx [ ecx + 0x2 ]
mov [ ebp + edx - 0x104 ] 0x0
mov [ esi + 0x14 ] 0x0
jmp r-xdata
movzx eax [ edi + 0x1 ]
push eax
sub ecx eax
push ecx
call sub_430a00
mov [ esi + 0x8 ] edi
mov bl [ edi ]
push esi
call sub_4307f0
add esp 0xc
pop edi
pop esi
movzx eax bl
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
dec [ ebp - 0x108 ]
jne r-xdata
mov eax [ esi ]
movzx edx [ eax ]
mov [ ebp - 0x110 ] edx
mov eax 0x1
movzx ebx [ edi + 0x7 ]
add edi 0x6
add ecx ebx
cmp ecx eax
ja r-xdata
movzx edx [ edx + 0x2 ]
cmp eax edx
jae r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov [ esi ] ecx
movzx edi [ ecx ]
cmp edi edx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0xfffffffe
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub edx ecx
push edx
push ecx
call sub_430a00
add esp 0x8
xor eax eax
add [ esi + 0xc ] eax
mov ecx [ esi ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0x4 ]
movzx ecx [ ecx ]
xor ebx ebx
xor edi edi
sub ecx edx
mov [ ebp - 0x10c ] ecx
jmp r-xdata
or ecx 0xffffffff
mov [ ebp + eax * 4 - 0x104 ] ecx
mov [ ebp + eax * 4 - 0x100 ] ecx
mov [ ebp + eax * 4 - 0xfc ] ecx
mov [ ebp + eax * 4 - 0xf8 ] ecx
mov [ ebp + eax * 4 - 0xf4 ] ecx
mov [ ebp + eax * 4 - 0xf0 ] ecx
mov [ ebp + eax * 4 - 0xec ] ecx
mov [ ebp + eax * 4 - 0xe8 ] ecx
add eax 0x8
cmp eax 0x40
jb r-xdata
movzx edx [ edi ]
mov eax [ esi ]
movzx eax [ eax ]
mov [ ebp + edx - 0x104 ] 0x0
movzx edx [ eax ]
movsx ecx [ ebp + edx - 0x104 ]
movzx edx [ eax + 0x1 ]
and edx ecx
mov [ ebp + edi * 4 - 0x510 ] eax
sub edi ecx
add ebx edx
add eax 0x6
cmp edi [ ebp - 0x10c ]
jne r-xdata
movzx ecx [ edi - 0x6 ]
sub edi 0x6
dec eax
mov [ ebp + ecx - 0x104 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x110 ]
lea eax [ ebp - 0x108 ]
push eax
push ecx
push esi
call sub_430730
mov ecx [ ebp - 0x108 ]
mov [ ebp - 0x10c ] eax
mov eax [ esi + 0x48 ]
add ecx ebx
xor edx edx
div ecx
mov [ ebp - 0x108 ] ecx
xor edx edx
add esp 0xc
mov ecx eax
mov eax [ esi + 0x4c ]
div ecx
mov [ esi + 0x48 ] ecx
cmp eax ebx
jb r-xdata
mov ecx [ ebp - 0x510 ]
movzx ecx [ ecx + 0x1 ]
lea edx [ ebp - 0x510 ]
cmp ecx eax
ja r-xdata
mov ecx [ ebp - 0x108 ]
cmp eax ecx
jae r-xdata
mov edi [ edx ]
movzx eax [ edi + 0x1 ]
push eax
sub ecx eax
push ecx
call sub_430a00
mov eax [ ebp - 0x10c ]
mov cl [ eax + 0x2 ]
add esp 0x8
cmp cl 0x7
jae r-xdata
mov edi [ edx + 0x4 ]
movzx edi [ edi + 0x1 ]
add edx 0x4
add ecx edi
cmp ecx eax
jbe r-xdata
sub ecx ebx
push ecx
push ebx
call sub_430a00
mov dx [ ebp - 0x108 ]
mov eax [ ebp - 0x10c ]
add esp 0x8
add [ eax ] dx
mov [ esi + 0x8 ] edi
mov bl [ edi ]
push esi
call sub_430950
add esp 0x4
pop edi
pop esi
movzx eax bl
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
dec [ eax + 0x3 ]
jne r-xdata
mov eax [ ebp + edi * 4 - 0x514 ]
movzx ecx [ eax ]
dec edi
mov [ ebp + ecx - 0x104 ] 0x0
jne r-xdata
jmp r-xdata
shl [ eax ] 0x1
mov dl 0x3
shl dl cl
inc cl
mov [ eax + 0x2 ] cl
mov [ eax + 0x3 ] dl
sub_430e80
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x4
lea ecx [ ecx ]
movzx ecx [ esi + 0x53 ]
mov eax [ esi + 0x54 ]
mov edx [ eax ]
push ecx
push eax
call edx
shl [ esi + 0x50 ] 0x8
add esp 0x8
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_430eb0
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x48 ]
lea edx [ ecx + eax ]
xor edx eax
cmp edx 0x1000000
jb r-xdata
mov ecx [ esi + 0x54 ]
mov edx [ ecx ]
shr eax 0x18
push eax
push ecx
call edx
shl [ esi + 0x48 ] 0x8
add esp 0x8
shl [ esi + 0x50 ] 0x8
jmp sub_430eb0
cmp ecx 0x8000
jae r-xdata
retn
mov ecx eax
neg ecx
and ecx 0x7fff
mov [ esi + 0x48 ] ecx
sub_430f00
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ esi + 0x48 ]
xor edx edx
div [ ebp + 0x10 ]
mov ecx eax
imul eax [ ebp + 0xc ]
imul ecx [ ebp + 0x8 ]
add [ esi + 0x50 ] ecx
mov [ esi + 0x48 ] eax
call sub_430eb0
pop esi
pop ebp
retn
sub_430f50
push esi
mov esi eax
mov eax [ esi + 0x48 ]
shr eax 0xe
mov edx eax
imul edx ecx
add [ esi + 0x50 ] edx
mov edx 0x4000
sub edx ecx
imul edx eax
mov [ esi + 0x48 ] edx
call sub_430eb0
pop esi
retn
sub_430f80
push ebp
mov ebp esp
sub esp 0x114
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0x0
push edi
je r-xdata
movzx ecx [ eax + 0x3 ]
movzx edx [ ecx + esi + 0x32f ]
mov ecx [ eax + 0x8 ]
movzx ecx [ ecx ]
movzx ecx [ ecx + esi + 0x230 ]
shl edx 0x6
add edx ecx
mov ecx [ esi + 0x1c ]
sar ecx 0x1a
and ecx 0x20
add edx ecx
movzx ecx [ eax + 0x1 ]
add edx ecx
add edx [ esi + 0x14 ]
lea ebx [ eax + 0x2 ]
lea edi [ esi + edx * 2 + 0x1038 ]
movzx edx [ ebx ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov edi [ eax + 0x4 ]
movzx ecx [ edi ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
movzx ecx [ edi ]
mov eax [ esi + 0x48 ]
shr eax 0xe
mov edx eax
imul edx ecx
add [ esi + 0x50 ] edx
mov edx 0x4000
sub edx ecx
imul edx eax
mov [ esi + 0x48 ] edx
call sub_430eb0
movzx eax [ edi ]
lea ecx [ eax + 0x20 ]
sar ecx 0x7
sub eax ecx
movzx edx ax
mov [ edi ] ax
shr edx 0xa
movzx eax [ edx + r--data ]
mov [ esi + 0x10 ] eax
xor eax eax
or ecx 0xffffffff
jmp r-xdata
movzx eax [ edi ]
mov ecx [ esi + 0x48 ]
shr ecx 0xe
imul ecx eax
mov [ esi + 0x48 ] ecx
call sub_430eb0
movzx eax [ edi ]
lea edx [ eax + 0x20 ]
sar edx 0x7
sub eax edx
sub eax 0xffffff80
mov [ edi ] ax
push esi
mov [ esi + 0x8 ] ebx
call sub_4308f0
add esp 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov [ esi + 0x14 ] 0x0
movzx ebx [ edi + 0x1 ]
mov edx eax
movzx eax [ edx ]
movzx ebx [ eax + 0x2 ]
mov eax [ esi + 0x48 ]
xor edx edx
div ebx
movzx ecx [ edi + 0x1 ]
imul eax ecx
mov [ esi + 0x48 ] eax
call sub_430eb0
push esi
mov [ esi + 0x8 ] edi
call sub_430870
add esp 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov [ ebp + eax * 4 - 0x104 ] ecx
mov [ ebp + eax * 4 - 0x100 ] ecx
mov [ ebp + eax * 4 - 0xfc ] ecx
mov [ ebp + eax * 4 - 0xf8 ] ecx
mov [ ebp + eax * 4 - 0xf4 ] ecx
mov [ ebp + eax * 4 - 0xf0 ] ecx
mov [ ebp + eax * 4 - 0xec ] ecx
mov [ ebp + eax * 4 - 0xe8 ] ecx
add eax 0x8
cmp eax 0x40
jb r-xdata
movzx eax [ edi + 0x1 ]
movzx ecx [ edx + 0x2 ]
mov [ ebp - 0x108 ] eax
mov eax [ esi + 0x48 ]
xor edx edx
div ecx
mov [ esi + 0x48 ] eax
imul eax ebx
mov edx [ esi + 0x48 ]
imul edx [ ebp - 0x108 ]
add [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edx
call sub_430eb0
push esi
mov [ esi + 0x8 ] edi
call sub_4307f0
add esp 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
movzx ecx [ edi + 0x1 ]
add ebx ecx
dec eax
jne r-xdata
movzx ecx [ ebx ]
mov [ ebp + ecx - 0x104 ] 0x0
mov [ esi + 0x14 ] 0x0
movzx ecx [ edi + 0x6 ]
add edi 0x6
cmp ecx [ ebp + 0xc ]
je r-xdata
or ecx 0xffffffff
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov [ esi ] eax
movzx edx [ eax ]
cmp edx ecx
je r-xdata
mov [ ebp + eax * 4 - 0x104 ] ecx
mov [ ebp + eax * 4 - 0x100 ] ecx
mov [ ebp + eax * 4 - 0xfc ] ecx
mov [ ebp + eax * 4 - 0xf8 ] ecx
mov [ ebp + eax * 4 - 0xf4 ] ecx
mov [ ebp + eax * 4 - 0xf0 ] ecx
mov [ ebp + eax * 4 - 0xec ] ecx
mov [ ebp + eax * 4 - 0xe8 ] ecx
add eax 0x8
cmp eax 0x40
jb r-xdata
movzx eax [ edi ]
mov [ ebp + eax - 0x104 ] 0x0
movzx eax [ edx ]
inc [ esi + 0xc ]
mov eax [ esi ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x110 ]
push eax
push ecx
push esi
call sub_430730
mov ecx [ esi ]
mov [ ebp - 0x108 ] eax
mov eax [ ecx + 0x4 ]
movzx ecx [ ecx ]
add esp 0xc
xor edi edi
inc ecx
mov [ ebp - 0x10c ] ecx
movzx ecx [ edi - 0x6 ]
sub edi 0x6
dec eax
mov [ ebp + ecx - 0x104 ] 0x0
jne r-xdata
movzx edi [ edx + 0x2 ]
mov eax [ esi + 0x48 ]
xor edx edx
div edi
mov ecx edi
sub ecx ebx
mov [ esi + 0x48 ] eax
imul eax ebx
mov edx [ esi + 0x48 ]
add [ esi + 0x50 ] eax
imul edx ecx
mov [ esi + 0x48 ] edx
call sub_430eb0
jmp r-xdata
mov [ ebp - 0x114 ] edi
mov [ ebp - 0x10c ] eax
movsx ebx [ ebp + edx - 0x104 ]
lea ecx [ ebp + edx - 0x104 ]
movzx edx [ eax + 0x1 ]
and edx ebx
mov [ ecx ] 0x0
mov ecx [ ebp - 0x10c ]
add edi edx
add eax 0x6
dec ecx
mov [ ebp - 0x10c ] ecx
jne r-xdata
mov edx [ esi ]
movzx ecx [ edx ]
movzx edx [ eax ]
movzx ebx [ eax + 0x1 ]
movsx edx [ ebp + edx - 0x104 ]
and edx ebx
add edi edx
add eax 0x6
dec ecx
jne r-xdata
add edi [ ebp - 0x110 ]
mov eax [ esi + 0x48 ]
xor edx edx
div edi
mov ebx [ ebp - 0x10c ]
movzx ecx [ ebx + 0x1 ]
mov edx eax
imul eax ecx
imul edx [ ebp - 0x114 ]
add [ esi + 0x50 ] edx
mov [ esi + 0x48 ] eax
call sub_430eb0
mov eax [ ebp - 0x108 ]
mov cl [ eax + 0x2 ]
cmp cl 0x7
jae r-xdata
movzx edx [ eax ]
cmp edx [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp - 0x110 ]
mov eax [ esi + 0x48 ]
xor edx edx
lea ebx [ edi + ecx ]
div ebx
mov edx eax
imul eax ecx
imul edx edi
add [ esi + 0x50 ] edx
mov [ esi + 0x48 ] eax
call sub_430eb0
mov ecx [ ebp - 0x110 ]
mov eax [ ebp - 0x108 ]
add ecx edi
add [ eax ] cx
jmp r-xdata
push esi
mov [ esi + 0x8 ] ebx
call sub_430950
add esp 0x4
dec [ eax + 0x3 ]
jne r-xdata
shl [ eax ] 0x1
mov dl 0x3
shl dl cl
inc cl
mov [ eax + 0x2 ] cl
mov [ eax + 0x3 ] dl
sub_431360
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x90 ] eax
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_43c55a
mov [ esi + 0x94 ] eax
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4313b0
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push ebx
mov edx ecx
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x98 ] edx
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
cmp [ edx + 0x90 ] eax
jbe r-xdata
mov [ edx + 0x44 ] eax
mov [ edx + 0x8c ] eax
xor ecx ecx
add edx 0x88
mov [ ebp - 0x8 ] eax
xor edi edi
mov edi [ edx + 0x90 ]
lea esp [ esp ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebp + edi - 0x8 ]
add esi [ edx + 0x4 ]
mov [ edx - 0x48 ] eax
mov [ edx ] esi
add esi [ ebp + edi - 0xc ]
inc ecx
mov [ ebp + edi - 0x50 ] esi
sub edx 0x4
sub edi 0x4
cmp ecx 0x10
jl r-xdata
movzx ebx [ ecx + esi ]
inc [ ebp + ebx * 4 - 0x4c ]
lea ebx [ ebp + ebx * 4 - 0x4c ]
inc esi
cmp esi edi
jb r-xdata
mov esi [ ebp + edi - 0xc ]
shl esi cl
add eax esi
cmp eax 0x10000
ja r-xdata
cmp eax 0x10000
jne r-xdata
mov edx [ ebp - 0x98 ]
xor ecx ecx
cmp [ edx + 0x90 ] ecx
jbe r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebp - 0x94 ]
inc ecx
cmp ecx [ edx + 0x90 ]
jb r-xdata
movzx eax [ esi + ecx ]
dec [ ebp + eax * 4 - 0x90 ]
mov edi [ edx + 0x94 ]
lea eax [ ebp + eax * 4 - 0x90 ]
mov eax [ eax ]
mov [ edi + eax * 4 ] ecx
cmp [ esi + ecx ] 0x0
je r-xdata
sub_4314f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov ecx edi
xor esi esi
call sub_406370
mov edx [ edi ]
mov eax [ edi + 0x4 ]
mov ecx 0x8
sub ecx edx
shr eax cl
mov ecx 0x10
shr eax 0x8
and eax 0xffff
nop
mov esi ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx esi
shr [ edi + 0x30 ] cl
add edx esi
mov [ edi ] edx
sub eax [ ebx + esi * 4 + 0x4 ]
mov ecx 0x10
sub ecx esi
shr eax cl
add eax [ ebx + esi * 4 + 0x48 ]
cmp eax [ ebx + 0x90 ]
jae r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
cmp eax [ ebx + ecx * 4 ]
jb r-xdata
jmp r-xdata
mov ecx [ ebx + 0x94 ]
mov eax [ ecx + eax * 4 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
test ecx ecx
jne r-xdata
sub_431570
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov al [ edx ]
push esi
xor esi esi
xor ecx ecx
cmp al 0x30
jl r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push ebx
push edi
mov eax esi
mov edx ecx
pop esi
pop ebp
retn
mov [ eax ] edx
pop edi
pop ebx
movsx eax al
sub eax 0x30
cdq
mov edi eax
mov eax esi
mov ebx ecx
shld ecx eax 0x2
add eax eax
add eax eax
add esi eax
adc ecx ebx
shld ecx esi 0x1
add esi esi
add esi edi
adc ecx edx
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x1 ]
inc edx
mov [ ebp + 0x8 ] edx
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
sub_4315d0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov al [ edi ]
xor ecx ecx
xor esi esi
cmp al 0x30
jl r-xdata
mov eax [ ebp + 0xc ]
mov edx esi
test eax eax
je r-xdata
cmp al 0x37
jg r-xdata
pop edi
mov eax ecx
pop esi
pop ebp
retn
mov [ eax ] edi
shld esi ecx 0x3
movsx eax al
add ecx ecx
sub eax 0x30
add ecx ecx
cdq
add ecx ecx
add eax ecx
adc esi edx
inc edi
mov ecx eax
mov al [ edi ]
cmp al 0x30
jge r-xdata
sub_431620
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor eax eax
xor edi edi
lea esp [ esp ]
lea edx [ ecx - 0x41 ]
cmp dl 0x5
ja r-xdata
shld edi eax 0x4
movsx ecx cl
sub ecx 0x30
shl eax 0x4
xor edx edx
or eax ecx
or edi edx
inc esi
jmp r-xdata
lea edx [ ecx - 0x61 ]
cmp dl 0x5
ja r-xdata
shld edi eax 0x4
movsx ecx cl
sub ecx 0x37
shl eax 0x4
xor edx edx
or eax ecx
or edi edx
inc esi
jmp r-xdata
mov cl [ esi ]
lea edx [ ecx - 0x30 ]
cmp dl 0x9
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edx edi
test ecx ecx
je r-xdata
shld edi eax 0x4
movsx ecx cl
sub ecx 0x57
shl eax 0x4
xor edx edx
or eax ecx
or edi edx
inc esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov [ ecx ] esi
sub_4316a0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ edx ]
push esi
xor esi esi
xor ecx ecx
cmp eax 0x30
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push ebx
push edi
mov eax esi
mov edx ecx
pop esi
pop ebp
retn
mov [ eax ] edx
pop edi
pop ebx
movzx eax ax
sub eax 0x30
cdq
mov edi eax
mov eax esi
mov ebx ecx
shld ecx eax 0x2
add eax eax
add eax eax
add esi eax
adc ecx ebx
shld ecx esi 0x1
add esi esi
add esi edi
adc ecx edx
mov edx [ ebp + 0x8 ]
movzx eax [ edx + 0x2 ]
add edx 0x2
mov [ ebp + 0x8 ] edx
cmp eax 0x30
jae r-xdata
cmp ax 0x39
ja r-xdata
sub_431710
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x2d
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
push eax
call sub_431570
add esp 0x8
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
inc eax
push eax
call sub_431570
add esp 0x8
neg eax
adc edx 0x0
neg edx
pop ebp
retn
sub_431750
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
cmp edx 0x1
jbe r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx edx
push edi
shr ebx 0x1
lea esp [ esp ]
dec ebx
mov ecx [ ebp + 0xc ]
mov [ eax + edi * 4 - 0x4 ] ecx
jne r-xdata
jae r-xdata
mov ecx [ eax + ebx * 4 - 0x4 ]
mov [ ebp + 0xc ] ecx
lea ecx [ ebx + ebx ]
mov edi ebx
cmp ecx edx
ja r-xdata
cmp edx 0x3
jbe r-xdata
mov esi [ eax + ecx * 4 - 0x4 ]
cmp [ ebp + 0xc ] esi
jae r-xdata
mov esi [ eax + ecx * 4 ]
cmp esi [ eax + ecx * 4 - 0x4 ]
jbe r-xdata
mov esi [ eax ]
mov ecx [ eax + edx * 4 - 0x4 ]
pop edi
mov [ eax + edx * 4 - 0x4 ] esi
pop esi
pop ebx
cmp edx 0x2
jbe r-xdata
mov ecx [ eax + 0x8 ]
cmp [ eax + 0x4 ] ecx
mov ecx [ eax ]
mov ebx [ eax + edx * 4 - 0x4 ]
sbb esi esi
neg esi
add esi 0x2
mov [ eax + edx * 4 - 0x4 ] ecx
mov ecx [ eax + esi * 4 - 0x4 ]
mov [ eax ] ecx
dec edx
lea ecx [ esi + esi ]
cmp ecx edx
ja r-xdata
mov [ eax + edi * 4 - 0x4 ] esi
mov edi ecx
add ecx ecx
cmp ecx edx
jbe r-xdata
inc ecx
mov [ eax ] ecx
mov edx [ eax + 0x4 ]
cmp edx ecx
jae r-xdata
mov [ eax + esi * 4 - 0x4 ] ebx
cmp edx 0x3
ja r-xdata
jae r-xdata
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn
mov edi [ eax + ecx * 4 - 0x4 ]
cmp ebx edi
jae r-xdata
mov edi [ eax + ecx * 4 ]
cmp edi [ eax + ecx * 4 - 0x4 ]
jbe r-xdata
mov [ eax + esi * 4 - 0x4 ] edi
mov esi ecx
add ecx ecx
cmp ecx edx
jbe r-xdata
inc ecx
sub_431830
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
mov ecx edx
mov edx [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
cmp esi 0x4
jb r-xdata
test cl 0x3
je r-xdata
test esi esi
je r-xdata
mov edi esi
shr edi 0x2
mov [ ebp + 0x8 ] edi
push ebx
jmp r-xdata
movzx edi [ ecx ]
xor edi eax
and edi 0xff
shr eax 0x8
xor eax [ edx + edi * 4 ]
inc ecx
dec esi
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x8
lea ecx [ ecx ]
xor eax [ ecx ]
sub esi 0x4
mov edi eax
shr edi 0x8
and edi 0xff
mov edi [ edx + edi * 4 + 0x800 ]
mov ebx eax
shr ebx 0x10
and ebx 0xff
xor edi [ edx + ebx * 4 + 0x400 ]
mov ebx eax
and ebx 0xff
xor edi [ edx + ebx * 4 + 0xc00 ]
shr eax 0x18
xor edi [ edx + eax * 4 ]
add ecx 0x4
dec [ ebp + 0x8 ]
mov eax edi
jne r-xdata
movzx edi [ ecx ]
xor edi eax
and edi 0xff
shr eax 0x8
xor eax [ edx + edi * 4 ]
inc ecx
dec esi
jne r-xdata
pop ebx
sub_4318f0
push ebp
mov ebp esp
pushfd
pop eax
mov edx eax
xor eax [ ebp + 0x8 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_431910
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax [ ebp + 0x8 ]
cpuid
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] edx
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x10 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
pop ebx
mov esp ebp
pop ebp
retn
sub_431960
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov [ ebp - 0x4 ] 0x40000
pushfd
pop eax
mov edx eax
xor eax [ ebp - 0x4 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x200000
pushfd
pop eax
mov edx eax
xor eax [ ebp - 0x4 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax 0x0
cpuid
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] edx
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax 0x1
cpuid
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ esi + 0x10 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ecx
mov eax 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431a30
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x4 ]
xor eax eax
mov ecx rwxdata
xor edx edx
add edx 0xc
inc eax
add ecx 0xc
cmp edx 0x24
jb r-xdata
mov ebx [ ecx - 0x4 ]
cmp ebx [ esi + 0x8 ]
jne r-xdata
cmp [ ecx - 0x8 ] edi
jne r-xdata
or eax 0xffffffff
mov ebx [ ecx ]
cmp ebx [ esi + 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_431a70
push ebp
mov ebp esp
lea eax [ ebp - 0x20 ]
sub esp 0x20
push eax
call sub_431960
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
push esi
mov esi eax
shr eax 0x4
push edi
lea ecx [ ebp - 0x20 ]
and eax 0xf00f
shr esi 0x8
push ecx
and esi 0xff00f
mov edi eax
call sub_431a30
add esp 0x4
sub eax 0x0
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
cmp esi 0x6
jb r-xdata
dec eax
je r-xdata
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
jne r-xdata
cmp esi 0x5
jb r-xdata
dec eax
jne r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
cmp edi 0x100c
jne r-xdata
cmp esi 0x6
jb r-xdata
cmp edi 0x6
jb r-xdata
jne r-xdata
cmp edi 0xa
jmp r-xdata
cmp edi 0xf
jae r-xdata
je r-xdata
sub_431b00
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x118 ]
push eax
mov [ ebp - 0x118 ] 0x114
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x114 ] 0x5
mov ecx [ ebp - 0x4 ]
sbb eax eax
xor ecx ebp
inc eax
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_431b60
push ebp
mov ebp esp
sub esp 0x138
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x118 ]
push eax
mov [ ebp - 0x118 ] 0x114
call [ GetVersionExW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x114 ] 0x5
sbb eax eax
inc eax
jne r-xdata
lea ecx [ ebp - 0x138 ]
push ecx
call sub_431960
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp - 0x120 ]
mov ecx [ ebp - 0x4 ]
shr eax 0x19
xor ecx ebp
and eax 0x1
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_431bf0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431c10
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431c30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
xor eax eax
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov eax 0x1
pop esi
pop ebp
retn
sub_431c90
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push ecx
push edx
push 0x0
push 0x0
call sub_43da70
mov ecx [ ebp + 0x8 ]
add esp 0x18
mov [ ecx ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov esp ebp
pop ebp
retn
mov eax 0x1
sub_431cd0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
xor eax eax
cmp [ ebp + 0x10 ] eax
push 0x0
setne al
push eax
push ecx
push 0x0
call [ CreateEventW@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431d10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ SetEvent@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431d40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call [ ResetEvent@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431d70
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
push 0x0
setne al
push eax
push 0x1
push 0x0
call [ CreateEventW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431db0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
push 0x0
setne al
push eax
push 0x0
push 0x0
call [ CreateEventW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431df0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431e20
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
call [ CreateEventW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431e50
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push 0x0
push eax
push ecx
push 0x0
call [ CreateSemaphoreW@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431e90
push eax
mov eax [ edx ]
push ecx
push eax
call [ ReleaseSemaphore@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
retn
retn
mov eax 0x1
sub_431ec0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push 0x0
push eax
push edx
call [ ReleaseSemaphore@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431ef0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x0
push 0x1
push ecx
call [ ReleaseSemaphore@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov eax 0x1
sub_431f20
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_43db40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4320a0
push esi
mov esi ecx
lea eax [ esi + 0x24 ]
push eax
call sub_431c30
mov ecx [ esi ]
push ecx
call sub_410630
add esp 0x8
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
sub_4320d0
push esi
push edi
mov esi ecx
lea edi [ esi + 0xc ]
push edi
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
push edi
mov esi eax
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
retn
push edi
xor esi esi
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
retn
sub_432110
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ esi + 0xc ]
push edi
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x8 ]
mov [ ebx ] eax
push edi
mov [ esi + 0x8 ] ebx
call [ LeaveCriticalSection@IAT ]
cmp [ ebp + 0xc ] 0x0
pop edi
je r-xdata
add esi 0x24
push esi
call sub_431ef0
add esp 0x4
sub_432160
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x0
je r-xdata
xor eax eax
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
mov [ esi + 0x20 ] 0x0
push eax
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
call sub_431ec0
add esp 0x8
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
sub_4321b0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi ]
push edi
push eax
call sub_410630
mov ebx [ esi + 0x4 ]
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x0
cmp ebx 0x4
jb r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
cmp edi 0x1
jb r-xdata
mov ecx ebx
imul ecx edi
xor edx edx
mov eax ecx
div ebx
cmp eax edi
jne r-xdata
push ecx
call sub_410610
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
cmp edi 0x1
jbe r-xdata
mov [ eax ] 0x0
mov ecx [ esi ]
pop edi
mov [ esi + 0x8 ] ecx
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
mov edx 0x1
jmp r-xdata
add ecx eax
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
inc edx
add eax ecx
cmp edx edi
jb r-xdata
sub_432240
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp ebx esi
jbe r-xdata
push esi
call sub_4321b0
test al al
jne r-xdata
pop edi
pop esi
mov eax 0x80070057
pop ebx
pop ebp
retn 0x8
add edi 0x24
push edi
sub esi ebx
call sub_431c30
push esi
push esi
push edi
call sub_431e50
add esp 0x10
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
pop esi
mov eax 0x8007000e
pop ebx
pop ebp
retn 0x8
sub_4322a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp edi ebx
jbe r-xdata
push esi
pop edi
mov eax 0x80070057
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub ebx edi
shr ebx 0x1
add ebx edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ebx
call sub_4321b0
test al al
je r-xdata
cmp ebx edi
jb r-xdata
cmp ebx edi
je r-xdata
mov esi ebx
sub esi edi
mov edi [ ebp - 0x4 ]
add edi 0x24
push edi
call sub_431c30
push esi
push esi
push edi
call sub_431e50
add esp 0x10
test eax eax
je r-xdata
pop esi
pop edi
mov eax 0x8007000e
pop ebx
mov esp ebp
pop ebp
retn 0x8
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp + 0xc ]
sub_432320
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
xor eax eax
mov [ ebp - 0x4 ] ebx
cmp [ ebx + 0x8 ] eax
jle r-xdata
mov [ ebx + 0x1c ] eax
mov [ ebx + 0x18 ] eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx ebx
call sub_4044e0
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
mov edx [ esi + 0x8 ]
mov [ edi ] edx
push ebx
mov [ esi + 0x8 ] edi
call [ LeaveCriticalSection@IAT ]
lea eax [ esi + 0x24 ]
push eax
call sub_431ef0
mov ebx [ ebp - 0x4 ]
add esp 0x4
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov edi [ ecx + eax * 4 - 0x4 ]
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
sub_4323b0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x18 ]
push ebx
push esi
push edi
mov edi [ ecx + 0x1c ]
xor ebx ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] eax
test edi edi
jne r-xdata
mov esi [ ebp + 0x8 ]
xor eax eax
cmp edi eax
ja r-xdata
test eax eax
jne r-xdata
cmp ebx [ ecx + 0x8 ]
jge r-xdata
jb r-xdata
xor eax eax
pop edi
pop esi
mov eax 0x80004005
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ecx + 0xc ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ebp + 0xc ]
lea eax [ eax + ebx * 4 ]
push esi
push ecx
push edx
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0xc ]
cmp [ ebp - 0xc ] esi
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub [ ebp - 0xc ] esi
sbb edi eax
inc ebx
test edi edi
ja r-xdata
mov ecx [ ebp - 0x4 ]
jb r-xdata
cmp [ ebp - 0xc ] eax
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_432440
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov al [ esi + 0x20 ]
mov ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] al
mov eax [ ebp + 0x8 ]
push edi
mov edi [ ecx + eax * 4 ]
test edi edi
je r-xdata
pop edi
mov [ ecx + eax * 4 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0xc ]
lea eax [ ebx + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov edx [ ebx + 0x8 ]
lea eax [ ebx + 0xc ]
mov [ edi ] edx
push eax
mov [ ebx + 0x8 ] edi
call [ LeaveCriticalSection@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
pop ebx
pop edi
mov [ edx + eax * 4 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x8
add ebx 0x24
push ebx
call sub_431ef0
mov eax [ esi + 0xc ]
mov ecx [ ebp + 0x8 ]
add esp 0x4
pop ebx
pop edi
mov [ eax + ecx * 4 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4324d0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
push edi
mov ecx [ esi + 0xc ]
mov [ ecx + ebx * 4 - 0x4 ] 0x0
mov ecx esi
call sub_4044e0
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xc
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov [ edi ] edx
mov [ eax + 0x8 ] edi
add eax 0xc
push eax
call [ LeaveCriticalSection@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ebx [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
mov edi [ ecx + ebx * 4 - 0x4 ]
mov al [ esi + 0x20 ]
mov [ ebp - 0x4 ] al
test edi edi
je r-xdata
pop edi
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
call sub_431ef0
add esp 0x4
sub_432560
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
push edi
mov ecx ebx
call sub_4324d0
mov al [ esi + 0x20 ]
mov [ ebx + 0x20 ] al
mov ecx [ edi + 0x4 ]
xor eax eax
xor edi edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
cmp [ esi + 0x8 ] eax
jle r-xdata
mov eax [ esi + 0x18 ]
mov edx [ ebp + 0xc ]
mov [ ebx + 0x18 ] eax
mov ecx [ esi + 0x1c ]
mov [ ebx + 0x1c ] ecx
push edx
mov ecx esi
call sub_4324d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
cmp edx [ esi + 0x1c ]
ja r-xdata
mov eax [ ebp + 0xc ]
push eax
push edi
mov ecx esi
call sub_432440
jb r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx + edi * 4 ]
mov ecx ebx
mov [ ebp + 0x8 ] edx
call sub_404690
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ecx + eax * 4 ] edx
inc [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ esi + 0x18 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
add [ ebp - 0xc ] edx
mov ecx [ esi + 0xc ]
mov eax 0x0
adc [ ebp - 0x8 ] eax
mov [ ecx + edi * 4 ] 0x0
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
sub_432620
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404690
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ eax + ecx * 8 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + ecx * 8 + 0x4 ] edx
mov eax [ esi + 0x8 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x8 ] ecx
pop esi
pop ebp
retn 0x8
sub_432660
push ebp
mov ebp esp
push 0xffffffff
push sub_453828
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
lea eax [ ebx + 0x40 ]
push eax
mov [ ebp - 0x10 ] eax
call [ EnterCriticalSection@IAT ]
lea ecx [ ebx + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call sub_404680
lea ecx [ ebx + 0x18 ]
call sub_404680
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp eax ecx
jle r-xdata
mov esi [ ebp + 0xc ]
mov [ ebx + 0x30 ] ecx
mov [ ebx + 0x34 ] ecx
mov [ ebx + 0x38 ] ecx
mov [ ebx + 0x3c ] ecx
cmp esi ecx
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
cmp eax ecx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
xor ecx ecx
lea ecx [ ebx + 0x4 ]
call sub_404690
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x10 ]
mov [ eax + ecx * 8 ] 0x0
mov [ eax + ecx * 8 + 0x4 ] 0x0
inc [ ebx + 0xc ]
lea ecx [ ebx + 0x18 ]
call sub_404690
mov eax [ ebx + 0x24 ]
mov ecx [ ebx + 0x20 ]
mov [ eax + ecx * 8 ] 0x0
mov [ eax + ecx * 8 + 0x4 ] 0x0
mov eax 0x1
add [ ebx + 0x20 ] eax
sub [ ebp + 0x8 ] eax
jne r-xdata
xor ecx ecx
mov ecx [ ebp - 0x10 ]
push ecx
mov [ ebx ] esi
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_432750
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x40 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ ecx + eax * 8 ] edx
mov [ ecx + eax * 8 + 0x4 ] edx
mov esi [ esi + 0x24 ]
mov [ esi + eax * 8 ] edx
push edi
mov [ esi + eax * 8 + 0x4 ] edx
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebp
retn 0x4
sub_432790
push ebp
mov ebp esp
push 0xffffffff
push sub_453858
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ esi + 0x40 ]
push edi
mov [ ebp - 0x10 ] edi
call [ EnterCriticalSection@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov edi [ ecx ]
mov ebx [ ecx + 0x4 ]
mov eax [ esi + 0x10 ]
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 8 ]
mov ecx edi
sub ecx [ eax ]
mov edx ebx
sbb edx [ eax + 0x4 ]
mov [ eax ] edi
mov edi [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
add [ esi + 0x30 ] ecx
adc [ esi + 0x34 ] edx
mov eax [ esi ]
test eax eax
je r-xdata
mov edi [ ecx ]
mov ebx [ ecx + 0x4 ]
mov eax [ esi + 0x24 ]
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 8 ]
mov ecx edi
sub ecx [ eax ]
mov edx ebx
sbb edx [ eax + 0x4 ]
mov [ eax ] edi
mov edi [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
add [ esi + 0x38 ] ecx
adc [ esi + 0x3c ] edx
push edi
call [ LeaveCriticalSection@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
lea edx [ esi + 0x38 ]
push edx
add esi 0x30
push esi
push eax
mov eax [ ecx + 0xc ]
call eax
push edi
mov esi eax
call [ LeaveCriticalSection@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_432880
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
push ecx
mov ecx [ eax + 0x8 ]
push edx
call sub_432790
pop ebp
retn 0xc
sub_4328a0
push ebp
mov ebp esp
push esi
push edi
xor edi edi
mov esi ecx
cmp [ ebp + 0xc ] edi
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
mov ecx esi
call sub_4052e0
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov dl [ edi + ebx ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
pop ebx
sub_432900
push ebp
mov ebp esp
mov al [ ebp + 0xc ]
mov [ ecx + 0x40 ] al
movzx eax al
neg eax
sbb eax eax
and eax 0x14
cmp [ ebp + 0x10 ] 0x0
mov [ ecx + 0x3c ] eax
je r-xdata
movzx eax [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
lea eax [ eax + edx + 0x1e ]
mov [ ecx + 0x38 ] eax
pop ebp
retn 0xc
add eax 0xb
mov [ ecx + 0x3c ] eax
sub_432940
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
mov al 0x1
jmp r-xdata
cmp [ ebp + 0xc ] 0xf8000000
jb r-xdata
mov [ ecx + 0x40 ] al
movzx eax al
neg eax
sbb eax eax
and eax 0x14
cmp [ ebp + 0x14 ] 0x0
mov [ ecx + 0x3c ] eax
je r-xdata
xor al al
movzx eax [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
lea eax [ eax + edx + 0x1e ]
mov [ ecx + 0x38 ] eax
pop ebp
retn 0x10
add eax 0xb
mov [ ecx + 0x3c ] eax
sub_432990
push ebp
mov ebp esp
or edx 0xffffffff
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
mov al 0x1
jmp r-xdata
cmp [ ebp + 0xc ] edx
jb r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
xor al al
mov al 0x1
jb r-xdata
movzx eax [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
lea eax [ eax + edx + 0x1e ]
mov [ ecx + 0x38 ] eax
pop ebp
retn 0x18
add eax 0xb
mov [ ecx + 0x3c ] eax
test al al
je r-xdata
cmp [ ebp + 0x14 ] edx
jae r-xdata
mov [ ecx + 0x40 ] al
movzx eax al
neg eax
sbb eax eax
and eax 0x14
cmp [ ebp + 0x1c ] 0x0
mov [ ecx + 0x3c ] eax
je r-xdata
sub_4329f0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx ecx
cmp [ ebp + 0xc ] edi
jbe r-xdata
mov eax [ ebp + 0xc ]
add [ ebx + 0x30 ] eax
pop edi
pop esi
adc [ ebx + 0x34 ] 0x0
pop ebx
pop ebp
retn 0x8
nop
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
lea ecx [ ebx + 0x8 ]
call sub_4052e0
mov edx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov dl [ edi + edx ]
mov [ eax + ecx ] dl
inc [ ebx + 0xc ]
mov eax [ ebx + 0xc ]
cmp eax [ ebx + 0x10 ]
jne r-xdata
sub_432a40
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov edx [ esi + 0xc ]
lea ecx [ esi + 0x8 ]
mov [ eax + edx ] bl
inc [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
add [ esi + 0x30 ] 0x1
adc [ esi + 0x34 ] 0x0
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4052e0
sub_432a80
push ebp
mov ebp esp
push ecx
push ebx
mov bx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x30 ] ecx
adc [ edi + 0x34 ] 0x0
shr bx 0x8
sub [ ebp - 0x4 ] ecx
jne r-xdata
lea ecx [ edi + 0x8 ]
call sub_4052e0
mov ecx 0x1
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
mov [ eax + ecx ] bl
mov ecx 0x1
add [ edi + 0xc ] ecx
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x10 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_432ae0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] 0x4
add [ edi + 0x30 ] ecx
adc [ edi + 0x34 ] 0x0
shr ebx 0x8
sub [ ebp - 0x4 ] ecx
jne r-xdata
lea ecx [ edi + 0x8 ]
call sub_4052e0
mov ecx 0x1
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
mov [ eax + ecx ] bl
mov ecx 0x1
add [ edi + 0xc ] ecx
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x10 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_432b40
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] 0x8
add [ esi + 0x30 ] ecx
mov edx [ ebp + 0xc ]
adc [ esi + 0x34 ] 0x0
shrd ebx edx 0x8
shr edx 0x8
sub [ ebp - 0x4 ] ecx
mov [ ebp + 0xc ] edx
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov ecx 0x1
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov [ eax + ecx ] bl
mov ecx 0x1
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_432ba0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_432be0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
push 0x10000
lea ecx [ esi + 0x8 ]
call sub_405100
test al al
jne r-xdata
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x8007000e
call sub_43d1c8
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
push edi
lea ecx [ esi + 0x8 ]
mov [ esi ] edi
call sub_405150
lea ecx [ esi + 0x8 ]
call sub_405060
xor eax eax
pop edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_432c50
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
mov ecx [ eax ]
push 0x0
push 0x0
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
je r-xdata
pop ebp
retn 0x8
push r--data
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp + 0xc ] eax
call sub_43d1c8
sub_432c90
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x38 ]
push esi
xor edx edx
add eax [ ecx + 0x30 ]
push 0x0
adc edx [ ecx + 0x34 ]
mov ecx [ ecx ]
mov esi [ ecx ]
push 0x0
push edx
push eax
mov eax [ esi + 0x10 ]
push ecx
call eax
pop esi
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x4 ] eax
call sub_43d1c8
sub_432cd0
push ebp
mov ebp esp
push esi
mov esi [ ecx ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov edx [ ebp + 0x8 ]
mov [ edx ] esi
pop esi
pop ebp
retn 0x4
sub_432d10
mov edx [ ecx + 0x8 ]
xor eax eax
test edx edx
jle r-xdata
retn
mov ecx [ ecx + 0xc ]
push esi
lea ecx [ ecx ]
mov esi [ ecx ]
mov esi [ esi + 0x8 ]
add ecx 0x4
dec edx
lea eax [ eax + esi + 0x4 ]
jne r-xdata
pop esi
sub_432d40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sub esp 0xc
push ebx
mov ebx ecx
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] 0x0
jle r-xdata
push esi
push edi
add [ ebx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
adc [ ebx + 0x34 ] 0x0
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ edx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ ebp - 0xc ]
mov cl [ edi + ecx ]
mov edx [ ebx + 0x8 ]
mov [ edx + eax ] cl
inc [ ebx + 0xc ]
mov eax [ ebx + 0xc ]
cmp eax [ ebx + 0x10 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ edx + eax * 4 ]
movzx ecx [ edi ]
push ecx
mov ecx ebx
call sub_432a80
movzx edx [ edi + 0x8 ]
push edx
mov ecx ebx
call sub_432a80
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
xor edi edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test eax eax
je r-xdata
pop edi
pop esi
inc edi
cmp edi [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebx + 0x8 ]
call sub_4052e0
mov eax [ ebp - 0x8 ]
sub_432df0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x0
mov esi ecx
mov edx [ esi + 0x34 ]
mov eax [ esi ]
mov ecx [ esi + 0x30 ]
mov edi [ eax ]
push 0x0
push edx
push ecx
push eax
mov eax [ edi + 0x10 ]
call eax
test eax eax
je r-xdata
cmp [ esi + 0x40 ] 0x0
mov ebx [ ebp + 0x8 ]
jne r-xdata
push r--data
lea ecx [ ebp + 0x8 ]
push ecx
mov [ ebp + 0x8 ] eax
call sub_43d1c8
mov [ ebp + 0xb ] 0x1
cmp [ ebx + 0x14 ] 0x0
ja r-xdata
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov [ ecx + edx ] al
inc [ esi + 0xc ]
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jne r-xdata
cmp al 0x2d
jae r-xdata
jb r-xdata
add [ esi + 0x30 ] 0x1
adc [ esi + 0x34 ] 0x0
mov al [ ebx + 0x1 ]
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov [ ecx + edx ] al
inc [ esi + 0xc ]
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov al 0x2d
cmp [ ebx + 0x1c ] 0x0
ja r-xdata
cmp [ ebx + 0x10 ] 0xffffffff
jae r-xdata
add [ esi + 0x30 ] 0x1
mov ecx esi
adc [ esi + 0x34 ] 0x0
movzx eax [ ebx + 0x2 ]
push eax
call sub_432a80
movzx ecx [ ebx + 0x4 ]
push ecx
mov ecx esi
call sub_432a80
mov edx [ ebx + 0x8 ]
push edx
mov ecx esi
call sub_432ae0
mov eax [ ebx + 0xc ]
push eax
mov ecx esi
call sub_432ae0
cmp [ ebp + 0xb ] 0x0
je r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
jb r-xdata
mov eax [ ebx + 0x10 ]
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0xb ] 0x0
jmp r-xdata
cmp [ ebx + 0x18 ] 0xffffffff
jae r-xdata
mov eax [ ebx + 0x18 ]
or eax 0xffffffff
jmp r-xdata
push eax
mov ecx esi
call sub_432ae0
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov edx [ rwxdata ]
push edx
mov ecx esi
call sub_432ae0
cmp [ ebp + 0xb ] 0x0
mov al [ ebx ]
je r-xdata
movzx ecx [ ebp + 0xb ]
neg ecx
sbb ecx ecx
and ecx 0x14
add cx ax
movzx edx cx
cmp edx [ esi + 0x3c ]
jbe r-xdata
mov ecx [ ebx + 0x38 ]
mov [ ebp - 0x4 ] edx
nop
push eax
mov ecx esi
call sub_432ae0
movzx ecx [ ebx + 0x24 ]
push ecx
mov ecx esi
call sub_432a80
mov edx [ ebx + 0x34 ]
xor eax eax
test edx edx
jle r-xdata
movzx ecx [ esi + 0x3c ]
push ecx
mov ecx esi
call sub_432a80
mov edx [ ebx + 0x24 ]
mov eax [ ebx + 0x20 ]
push edx
push eax
mov ecx esi
call sub_4329f0
cmp [ ebp + 0xb ] 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
push r--data
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x8 ] 0x80004005
call sub_43d1c8
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
add ecx 0x4
dec [ ebp - 0x4 ]
lea eax [ eax + edx + 0x4 ]
jne r-xdata
lea eax [ ebx + 0x2c ]
push eax
mov ecx esi
call sub_432d40
mov edx [ ebx + 0x34 ]
xor eax eax
test edx edx
jle r-xdata
push 0x1
mov ecx esi
mov [ ebp - 0x4 ] 0x14
call sub_432a80
push 0x10
mov ecx esi
call sub_432a80
mov ecx [ ebx + 0x1c ]
mov edx [ ebx + 0x18 ]
push ecx
push edx
mov ecx esi
call sub_432b40
mov eax [ ebx + 0x14 ]
mov ecx [ ebx + 0x10 ]
push eax
push ecx
mov ecx esi
call sub_432b40
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
cmp ecx [ esi + 0x3c ]
jae r-xdata
mov ecx [ ebx + 0x38 ]
mov [ ebp + 0x8 ] edx
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov edx [ ebx + 0x10 ]
add [ esi + 0x30 ] edx
mov eax [ ebx + 0x14 ]
push 0x0
adc [ esi + 0x34 ] eax
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x34 ]
mov esi [ esi ]
mov edx [ esi ]
push 0x0
push ecx
push eax
mov eax [ edx + 0x10 ]
push esi
call eax
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
mov [ eax + ecx ] 0x0
inc [ esi + 0xc ]
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
add ecx 0x4
dec [ ebp + 0x8 ]
lea eax [ eax + edx + 0x4 ]
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ ebp + 0x8 ]
push ecx
mov [ ebp + 0x8 ] eax
call sub_43d1c8
add [ esi + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
adc [ esi + 0x34 ] 0x0
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ esi + 0x3c ]
jb r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
sub_433080
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
or eax 0xffffffff
cmp [ ebx + 0x1c ] 0x0
push esi
mov esi ecx
ja r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
cmp [ ebx + 0x18 ] eax
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
ja r-xdata
mov [ ebp + 0xb ] 0x0
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
cmp [ ebx + 0x10 ] eax
jb r-xdata
cmp [ ebx + 0x4c ] 0x0
ja r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp [ ebx + 0x48 ] eax
jb r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ ebp - 0x2 ] 0x0
mov [ ebp - 0x3 ] 0x1
cmp [ ebp + 0xb ] 0x0
jne r-xdata
add [ esi + 0x30 ] 0x1
adc [ esi + 0x34 ] 0x0
mov al [ ebx + 0x41 ]
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov [ ecx + edx ] al
inc [ esi + 0xc ]
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
cmp [ ebp - 0x2 ] 0x0
mov [ ebp - 0x3 ] 0x0
je r-xdata
add [ esi + 0x30 ] 0x1
adc [ esi + 0x34 ] 0x0
cmp [ ebp - 0x3 ] 0x0
mov al [ ebx ]
je r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax [ rwxdata ]
push edi
push eax
call sub_432ae0
mov al [ ebx + 0x40 ]
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov [ ecx + edx ] al
inc [ esi + 0xc ]
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov [ ecx + edx ] al
inc [ esi + 0xc ]
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jne r-xdata
cmp al 0x2d
jae r-xdata
add [ esi + 0x30 ] 0x1
adc [ esi + 0x34 ] 0x0
mov al [ ebx + 0x1 ]
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov [ ecx + edx ] al
inc [ esi + 0xc ]
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov al 0x2d
add [ esi + 0x30 ] 0x1
mov ecx esi
adc [ esi + 0x34 ] 0x0
movzx eax [ ebx + 0x2 ]
push eax
call sub_432a80
movzx ecx [ ebx + 0x4 ]
push ecx
mov ecx esi
call sub_432a80
mov edx [ ebx + 0x8 ]
push edx
mov ecx esi
call sub_432ae0
mov eax [ ebx + 0xc ]
push eax
mov ecx esi
call sub_432ae0
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax [ ebx + 0x10 ]
or eax 0xffffffff
jmp r-xdata
mov eax [ ebx + 0x18 ]
or eax 0xffffffff
jmp r-xdata
push eax
mov ecx esi
call sub_432ae0
cmp [ ebp + 0xb ] 0x0
je r-xdata
xor eax eax
movzx eax di
add eax 0x4
jmp r-xdata
push eax
mov ecx esi
call sub_432ae0
movzx ecx [ ebx + 0x24 ]
push ecx
mov ecx esi
call sub_432a80
movzx edx [ ebp - 0x2 ]
movzx eax [ ebp - 0x1 ]
movzx ecx [ ebp + 0xb ]
neg edx
sbb edx edx
and edx 0x8
neg eax
sbb eax eax
and eax 0x8
add dx ax
neg ecx
sbb ecx ecx
and ecx 0x8
add dx cx
cmp [ ebp - 0x3 ] 0x0
movzx edi dx
mov [ ebp - 0x8 ] edi
je r-xdata
add eax [ ebp - 0xc ]
mov ecx esi
push eax
call sub_432a80
movzx edx [ ebx + 0x80 ]
push edx
mov ecx esi
call sub_432a80
push 0x0
mov ecx esi
call sub_432a80
movzx eax [ ebx + 0x42 ]
push eax
mov ecx esi
call sub_432a80
mov ecx [ ebx + 0x44 ]
push ecx
mov ecx esi
call sub_432ae0
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov ecx [ ebx + 0x74 ]
movzx edx [ ebx + 0x8a ]
neg edx
sbb edx edx
and edx 0x24
add dx ax
movzx eax dx
mov edx [ ebx + 0x70 ]
mov [ ebp - 0xc ] eax
xor eax eax
test edx edx
jle r-xdata
mov eax [ ebx + 0x48 ]
or eax 0xffffffff
jmp r-xdata
mov edi [ ecx ]
mov edi [ edi + 0x8 ]
add ecx 0x4
dec edx
lea eax [ eax + edi + 0x4 ]
jne r-xdata
mov edi [ ebp - 0x8 ]
cmp [ ebx + 0x8a ] 0x0
pop edi
je r-xdata
push 0x1
mov ecx esi
call sub_432a80
push edi
mov ecx esi
call sub_432a80
cmp [ ebp + 0xb ] 0x0
je r-xdata
push eax
mov ecx esi
call sub_432ae0
mov edx [ ebx + 0x24 ]
mov eax [ ebx + 0x20 ]
push edx
push eax
mov ecx esi
call sub_4329f0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
lea eax [ ebx + 0x68 ]
push eax
mov ecx esi
call sub_432d40
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
push 0xa
mov ecx esi
call sub_432a80
push 0x20
mov ecx esi
call sub_432a80
push 0x0
mov ecx esi
call sub_432ae0
push 0x1
mov ecx esi
call sub_432a80
push 0x18
mov ecx esi
call sub_432a80
mov ecx [ ebx + 0x50 ]
push ecx
mov ecx esi
call sub_432ae0
mov edx [ ebx + 0x54 ]
push edx
mov ecx esi
call sub_432ae0
mov eax [ ebx + 0x58 ]
push eax
mov ecx esi
call sub_432ae0
mov ecx [ ebx + 0x5c ]
push ecx
mov ecx esi
call sub_432ae0
mov edx [ ebx + 0x60 ]
push edx
mov ecx esi
call sub_432ae0
mov eax [ ebx + 0x64 ]
push eax
mov ecx esi
call sub_432ae0
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ecx [ ebx + 0x1c ]
mov edx [ ebx + 0x18 ]
push ecx
push edx
mov ecx esi
call sub_432b40
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx + 0x84 ]
push eax
push ecx
mov ecx esi
call sub_4329f0
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ ebx + 0x10 ]
push eax
push ecx
mov ecx esi
call sub_432b40
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
push edx
push eax
mov ecx esi
call sub_432b40
sub_4333d0
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
push 0x0
mov esi ecx
mov edx [ esi + 0x34 ]
mov eax [ esi ]
mov ecx [ esi + 0x30 ]
mov edi [ eax ]
push 0x0
push edx
push ecx
push eax
mov eax [ edi + 0x10 ]
call eax
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
mov eax [ esi + 0x34 ]
xor edi edi
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
cmp [ ebx + 0x8 ] edi
jle r-xdata
push r--data
lea ecx [ ebp + 0x8 ]
push ecx
mov [ ebp + 0x8 ] eax
call sub_43d1c8
mov ecx [ esi + 0x30 ]
mov edi [ esi + 0x34 ]
mov [ ebp - 0x10 ] ecx
sub ecx edx
mov [ ebp - 0xc ] edi
sbb edi eax
mov [ ebp - 0x20 ] ecx
test eax eax
jne r-xdata
lea esp [ esp ]
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp edx 0xffffffff
jb r-xdata
mov edx [ ebx + 0xc ]
mov eax [ edx + edi * 4 ]
push eax
mov ecx esi
call sub_433080
inc edi
cmp edi [ ebx + 0x8 ]
jl r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
test edi edi
jne r-xdata
mov [ ebp - 0x2 ] 0x0
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
cmp ecx 0xffffffff
jb r-xdata
cmp [ ebx + 0x8 ] 0xffff
setge al
cmp [ ebp - 0x2 ] 0x0
mov [ ebp - 0x3 ] al
jne r-xdata
mov [ ebp - 0x1 ] 0x0
mov ecx [ rwxdata ]
push ecx
mov ecx esi
call sub_432ae0
push 0x0
push 0x2c
mov ecx esi
call sub_432b40
push 0x2d
mov ecx esi
call sub_432a80
push 0x2d
mov ecx esi
call sub_432a80
push 0x0
mov ecx esi
call sub_432ae0
push 0x0
mov ecx esi
call sub_432ae0
mov eax [ ebx + 0x8 ]
cdq
push edx
push eax
mov ecx esi
call sub_432b40
mov eax [ ebx + 0x8 ]
cdq
push edx
push eax
mov ecx esi
call sub_432b40
mov edx [ ebp - 0x20 ]
push edi
push edx
mov ecx esi
call sub_432b40
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
push eax
push ecx
mov ecx esi
call sub_432b40
mov edx [ rwxdata ]
push edx
mov ecx esi
call sub_432ae0
push 0x0
mov ecx esi
call sub_432ae0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
push eax
push ecx
mov ecx esi
call sub_432b40
push 0x1
mov ecx esi
call sub_432ae0
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
add [ esi + 0x30 ] eax
adc [ esi + 0x34 ] 0x0
shr ebx 0x8
sub [ ebp - 0x8 ] eax
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax 0x1
test al al
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
mov [ edx + eax ] bl
mov eax 0x1
add [ esi + 0xc ] eax
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x2
mov ebx [ rwxdata ]
mov [ ebp - 0x8 ] 0x4
add [ esi + 0x30 ] eax
mov ecx 0x0
adc [ esi + 0x34 ] ecx
shr [ ebp - 0x8 ] 0x8
sub [ ebp - 0xc ] eax
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax 0x1
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov bl [ ebp - 0x8 ]
mov [ ecx + edx ] bl
add [ esi + 0xc ] eax
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x2
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov bl [ ebp - 0x8 ]
mov [ ecx + edx ] bl
add [ esi + 0xc ] eax
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
add [ esi + 0x30 ] eax
adc [ esi + 0x34 ] 0x0
shr [ ebp - 0x8 ] 0x8
sub [ ebp - 0xc ] eax
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax 0x1
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0xffff
jmp r-xdata
add [ esi + 0x30 ] eax
adc [ esi + 0x34 ] 0x0
shr [ ebp - 0x8 ] 0x8
sub [ ebp - 0xc ] eax
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax 0x1
mov [ ebp - 0xc ] 0x2
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov bl [ ebp - 0x8 ]
mov [ ecx + edx ] bl
add [ esi + 0xc ] eax
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x8 ]
mov [ ebp + 0x8 ] edx
mov [ ebp + 0x8 ] 0xffff
jmp r-xdata
add [ esi + 0x30 ] eax
adc [ esi + 0x34 ] 0x0
shr [ ebp + 0x8 ] 0x8
sub [ ebp - 0xc ] eax
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax 0x1
mov [ ebp - 0xc ] 0x2
lea ebx [ ebx ]
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov bl [ ebp + 0x8 ]
mov [ ecx + edx ] bl
add [ esi + 0xc ] eax
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ebx [ ebp - 0x20 ]
or ebx 0xffffffff
jmp r-xdata
add [ esi + 0x30 ] eax
adc [ esi + 0x34 ] 0x0
shr ebx 0x8
sub [ ebp + 0x8 ] eax
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax 0x1
mov [ ebp + 0x8 ] 0x4
lea ebx [ ebx ]
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov [ ecx + edx ] bl
add [ esi + 0xc ] eax
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov ebx [ ebp - 0x18 ]
or ebx 0xffffffff
jmp r-xdata
add [ esi + 0x30 ] eax
mov ecx 0x0
adc [ esi + 0x34 ] ecx
shr ebx 0x8
sub [ ebp + 0x8 ] eax
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax 0x1
mov [ ebp + 0x8 ] 0x4
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov [ ecx + edx ] bl
add [ esi + 0xc ] eax
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx ecx
je r-xdata
movzx edx cx
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] 0x2
mov ecx [ edx + 0x4 ]
add [ esi + 0x30 ] eax
mov ebx 0x0
adc [ esi + 0x34 ] ebx
shr [ ebp - 0x8 ] 0x8
sub [ ebp - 0xc ] eax
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov eax 0x1
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov bl [ ebp - 0x8 ]
mov [ ecx + edx ] bl
add [ esi + 0xc ] eax
mov ecx [ esi + 0xc ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
mov [ ebp + 0xc ] ecx
lea ebx [ ebx ]
inc ebx
cmp ebx [ ebp + 0x8 ]
jb r-xdata
lea ecx [ esi + 0x8 ]
call sub_4052e0
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
mov cl [ ebx + ecx ]
mov [ edx + eax ] cl
inc [ esi + 0xc ]
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
add [ esi + 0x30 ] edx
adc [ esi + 0x34 ] 0x0
sub_433820
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_433890
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4338c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4338f0
push ebp
mov ebp esp
push 0xffffffff
push sub_453888
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x18
call sub_43c55a
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x10 ] 0x0
mov esi eax
jmp r-xdata
mov edx [ edi + 0x38 ]
mov eax [ edi ]
xor ecx ecx
add edx [ edi + 0x30 ]
mov [ ebp - 0x4 ] 0x0
adc ecx [ edi + 0x34 ]
push ecx
push edx
push eax
mov ecx esi
call sub_435300
mov edx [ ebp + 0x8 ]
mov [ edx ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
sub_433a30
push ebp
mov ebp esp
mov eax 0x4008
call sub_43d980
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
push edi
lea ecx [ ebp - 0x4008 ]
push ecx
push 0x4000
lea edx [ ebp - 0x4004 ]
push edx
push esi
or edi 0xffffffff
call eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_43bd0f
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
not edi
mov [ ebx ] edi
xor eax eax
push eax
lea edx [ ebp - 0x4004 ]
mov ecx edi
call sub_423a00
mov ecx [ esi ]
mov ecx [ ecx + 0xc ]
lea edx [ ebp - 0x4008 ]
push edx
mov edi eax
push 0x4000
lea eax [ ebp - 0x4004 ]
push eax
push esi
call ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4008 ]
test eax eax
je r-xdata
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_433ad0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
push edi
mov edi ecx
test esi esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov [ edi ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_433b30
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx ]
call eax
pop ebp
retn 0x8
sub_433b50
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_433b90
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_433c10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
push 0x9
lea eax [ esi + 0x10 ]
push eax
push edi
call sub_411fb0
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x18
mov edx [ ebp + 0x1c ]
mov eax [ esi + 0xc ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0xc ]
push edi
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
sub_433c70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
sub_433d10
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop ebp
retn 0xc
sub_433d80
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_433db0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_433de0
push ebp
mov ebp esp
push 0xffffffff
push sub_4538c3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0xc ] ebx
jne r-xdata
push 0x14
call sub_43c55a
add esp 0x4
cmp eax ebx
je r-xdata
push 0x14
call sub_43c55a
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
xor esi esi
mov ecx eax
call sub_4360b0
mov esi eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
lea eax [ edi + 0x14 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] ebx
mov [ esi + 0xc ] 0x5
mov eax [ edi + 0x8 ]
mov ecx [ eax + 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
add eax 0x4
push edx
push eax
mov eax [ ecx + 0xc ]
mov [ ebp - 0x4 ] 0x1
call eax
mov ebx eax
push esi
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
mov eax [ edi + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp - 0x4 ] 0xffffffff
mov [ edi + 0x8 ] esi
cmp esi ebx
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
add eax 0x8
push eax
call edx
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
push esi
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ edi + 0xc ] esi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
cmp [ esi + 0x10 ] 0x5
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
call ecx
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ edi + 0x10 ] 0x51409
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi ]
mov eax [ edx + 0x8 ]
call eax
mov eax 0x80004005
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_433f70
push ebp
mov ebp esp
push 0xffffffff
push sub_4538eb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] r--data
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0xc ] 0x3
lea ecx [ esi + 0x104 ]
mov [ ebp - 0x4 ] eax
call sub_41b420
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_434000
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_4340d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_4341b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_434200
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push esi
call sub_43c44d
add esp 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_434230
push ebp
mov ebp esp
push 0xffffffff
push sub_453a05
mov eax [ fs : 0x0 ]
push eax
sub esp 0x13c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov edi ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x148 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x144 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x13c ] eax
xor eax eax
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x11c ] edx
mov [ ebp - 0x120 ] ecx
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x128 ] eax
mov edx [ ebx ]
mov ecx [ edx ]
lea eax [ ebp - 0x128 ]
push eax
push r--data
push ebx
mov [ ebp - 0x4 ] 0x1
call ecx
mov esi eax
test esi esi
je r-xdata
xor esi esi
push 0x20
cmp [ ebp - 0x128 ] esi
je r-xdata
mov eax [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_43c55a
add esp 0x4
cmp eax esi
je r-xdata
call sub_43c55a
add esp 0x4
cmp eax esi
je r-xdata
mov eax esi
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
xor esi esi
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov esi eax
jmp r-xdata
xor ebx ebx
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
mov [ eax + 0x8 ] esi
mov ebx eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push ebx
mov [ ebp - 0x10c ] esi
call eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp - 0x138 ] esi
test esi esi
je r-xdata
mov eax [ ebp - 0x128 ]
mov [ ebp - 0x10c ] ebx
mov esi eax
test eax eax
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push ebx
call edx
mov [ ebp - 0x124 ] ebx
cmp ebx esi
je r-xdata
mov [ esi + 0x8 ] ebx
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x1c ] al
mov [ esi + 0x18 ] 0xffffffff
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ edi + 0x8 ]
mov [ ebp - 0x130 ] eax
cmp eax 0x1
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebx + 0x8 ] esi
xor eax eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x18 ] 0xffffffff
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0x124 ] 0x0
jne r-xdata
cmp [ edi + 0x44 ] 0x0
je r-xdata
mov eax [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ecx ecx
mov [ ebp - 0x115 ] 0x0
mov [ ebp - 0x114 ] ecx
mov edx [ ebp - 0x120 ]
mov [ ebp - 0x4 ] 0x2
mov [ edx + 0x16 ] 0xa
mov [ ebp - 0x134 ] ecx
cmp eax ecx
jle r-xdata
cmp [ edi + 0x44 ] 0x0
jne r-xdata
cmp [ edi + 0x54 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax 0x80004001
jmp r-xdata
mov [ ebp - 0x130 ] 0x1
mov eax [ ebp - 0x130 ]
movzx eax [ ebp - 0x115 ]
mov ecx [ ebp - 0x120 ]
mov [ ecx + 0x14 ] ax
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ ebp - 0x11c ]
mov ecx [ edi + 0x74 ]
push esi
call sub_41b220
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x124 ]
mov esi [ ebp - 0x120 ]
mov [ esi + 0x16 ] 0xa
test eax eax
je r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call edx
xor eax eax
mov edx [ eax + 0xc ]
add eax 0xc
push eax
mov eax [ edx + 0x10 ]
call eax
mov ecx [ ebp - 0x120 ]
mov eax [ esi ]
mov edx [ eax + 0x10 ]
add ecx 0x8
push ecx
push 0x1
push 0x0
push 0x0
push esi
call edx
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebp - 0x11c ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0x0
push 0x0
push eax
call edx
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call edx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax edi
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x10 ]
add eax 0xc
push eax
call edx
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebp - 0x11c ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push eax
call edx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x10c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax esi
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x10 ]
add eax 0xc
push eax
call edx
mov eax [ ebp - 0x10c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax ebx
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x10 ]
add eax 0xc
push eax
call edx
cmp [ edi + 0x44 ] al
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x134 ]
mov al [ edx + ecx ]
mov [ ebp - 0x115 ] al
test al al
je r-xdata
mov [ esi + 0x16 ] 0x14
cmp [ edi + 0x6c ] eax
jne r-xdata
cmp [ edi + 0x58 ] 0x0
jne r-xdata
cmp [ edi + 0x60 ] 0x0
lea ebx [ edi + 0x60 ]
jne r-xdata
cmp [ edi + 0x54 ] 0x0
je r-xdata
push 0x78
call sub_43c55a
add esp 0x4
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov [ ebp - 0x110 ] 0x0
cmp [ edi + 0x44 ] 0x0
mov [ ebp - 0x4 ] 0x5
lea ecx [ ebp - 0x110 ]
je r-xdata
push 0x18
call sub_43c55a
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x110 ] 0x0
cmp [ edi + 0x44 ] 0x0
mov [ ebp - 0x4 ] 0x11
je r-xdata
cmp al 0xe
jne r-xdata
mov edx [ edi + 0x68 ]
cmp [ edx + 0x74 ] 0x0
jne r-xdata
mov [ esi + 0x16 ] 0x33
mov ecx [ edi + 0x68 ]
cmp [ ecx + 0x74 ] 0x0
jne r-xdata
xor eax eax
mov ecx eax
call sub_420590
jmp r-xdata
mov edx [ ebp - 0x11c ]
push edx
call sub_4050d0
lea eax [ edi + 0x6c ]
push eax
call sub_433ad0
jmp r-xdata
xor eax eax
mov ecx eax
call sub_409f80
jmp r-xdata
mov ecx [ ebp - 0x11c ]
push ecx
lea ecx [ ebp - 0x110 ]
call sub_4050d0
lea eax [ edi + 0x6c ]
push eax
lea ecx [ ebp - 0x110 ]
call sub_433ad0
jmp r-xdata
cmp al 0x62
jne r-xdata
push 0x1c
mov [ edi + 0x64 ] 0x3f
call sub_43c55a
add esp 0x4
test eax eax
je r-xdata
mov esi [ ebp - 0x140 ]
lea ebx [ ebp - 0x110 ]
mov [ ebp - 0x110 ] 0x0
call sub_433a30
mov esi eax
test esi esi
jne r-xdata
push 0x24
call sub_43c55a
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x11c ]
push ecx
mov ecx [ edi + 0x74 ]
call sub_41b1c0
jmp r-xdata
push 0x238
call sub_43c55a
add esp 0x4
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
xor ebx ebx
lea ebx [ eax + 0x10 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
mov [ edi + 0x68 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp - 0x13c ]
mov eax [ edi + 0x5c ]
mov ebx [ ebp - 0x110 ]
mov ecx [ eax ]
push edx
mov edx [ ebp - 0x10c ]
push 0x0
push 0x0
push ebx
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov esi eax
mov [ ebp - 0x4 ] 0x2
test esi esi
jne r-xdata
push eax
lea ecx [ edi + 0x5c ]
mov [ edi + 0x58 ] eax
call sub_402680
mov ecx [ ebp - 0x13c ]
mov eax [ ebx ]
mov ebx [ ebp - 0x110 ]
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
mov ecx [ ebp - 0x10c ]
push 0x0
push 0x0
push ebx
push ecx
push eax
call edx
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
jne r-xdata
mov [ esi + 0x16 ] al
mov al [ edi + 0x64 ]
mov esi [ ebp - 0x120 ]
cmp al [ esi + 0x16 ]
jbe r-xdata
cmp al 0xc
je r-xdata
push 0x1cf8
mov [ edi + 0x64 ] 0x3f
call sub_43c55a
add esp 0x4
mov [ ebp - 0x110 ] eax
mov [ ebp - 0x4 ] 0xb
test eax eax
je r-xdata
xor esi esi
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push esi
push esi
push esi
push esi
push eax
call edx
mov esi eax
test esi esi
jne r-xdata
xor eax eax
mov ecx eax
call sub_4340b0
jmp r-xdata
mov esi eax
test esi esi
jne r-xdata
xor eax eax
mov ecx eax
call sub_433f70
jmp r-xdata
mov eax [ edi + 0x6c ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
call ecx
mov esi [ ebp - 0x120 ]
mov ecx [ ebx ]
mov edx [ ecx + 0x8 ]
push ebx
call edx
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax 0x40202
xor edx edx
mov [ edi + 0x64 ] 0x2e
cmp al 0x9
movzx eax al
sete cl
cdq
add cl 0x14
add eax 0x40100
mov [ edi + 0x64 ] cl
adc edx 0x0
jmp r-xdata
xor esi esi
mov ecx eax
call sub_420f90
mov esi eax
jmp r-xdata
push eax
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call sub_433de0
push j_sub_4110c0
mov esi eax
push 0x6
mov [ ebp - 0x4 ] 0x2
push 0x10
test esi esi
jne r-xdata
mov eax 0x5
push esi
mov ecx ebx
call sub_402680
mov eax [ edi + 0x40 ]
mov [ ebp - 0x108 ] 0x13
mov [ ebp - 0x100 ] eax
mov eax [ edi + 0x20 ]
mov [ ebp - 0xf8 ] 0x13
mov [ ebp - 0xf0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xe8 ] 0x13
mov [ ebp - 0xe0 ] eax
mov eax [ edi + 0x28 ]
mov [ ebp - 0xd8 ] 0x13
mov [ ebp - 0xd0 ] eax
mov eax [ edi + 0x14 ]
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x9
call sub_411ec0
mov eax [ edi + 0x30 ]
mov [ ebp - 0xb8 ] 0x13
mov [ ebp - 0xb0 ] eax
cmp [ edi + 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xa
mov [ ebp - 0x28 ] 0xd
mov [ ebp - 0x24 ] 0xc
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] 0x8
mov [ ebp - 0x18 ] 0x9
mov [ ebp - 0x14 ] 0xa
mov eax 0x6
jne r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ ebp - 0x11c ]
push eax
push ecx
mov ecx [ edi + 0x70 ]
call sub_41bf40
mov ecx [ edi + 0x68 ]
push eax
add ecx 0x74
mov [ edi + 0x70 ] eax
call sub_40c3a0
mov ecx [ edi + 0x4c ]
mov eax [ edi + 0x70 ]
mov edx [ edi + 0x48 ]
mov esi [ eax + 0x4 ]
add eax 0x4
push ecx
push edx
push eax
mov eax [ esi + 0xc ]
call eax
mov eax [ edi + 0x68 ]
mov ecx [ ebp - 0x11c ]
mov edx [ eax + 0xc ]
mov edx [ edx + 0xc ]
add eax 0xc
push ecx
push eax
call edx
mov esi eax
test esi esi
jne r-xdata
mov ecx [ edi + 0x4c ]
mov eax [ edi + 0x74 ]
mov edx [ edi + 0x48 ]
mov esi [ eax + 0x4 ]
add eax 0x4
push ecx
push edx
push eax
mov eax [ esi + 0xc ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov [ ecx + 0xc ] eax
mov ecx [ edi + 0x68 ]
push eax
add ecx 0x74
mov [ ebp - 0x4 ] 0x2
mov [ edi + 0x74 ] eax
call sub_40c3a0
movzx eax [ edi + 0x55 ]
mov ecx [ edi + 0x74 ]
lea edx [ eax - 0x1 ]
cmp edx 0x2
ja r-xdata
mov [ edi + 0x6c ] ebx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov edx [ eax + 0xc ]
add eax 0xc
push eax
mov eax [ edx + 0x10 ]
call eax
jmp r-xdata
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebp - 0x124 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
call ecx
mov eax [ ebp - 0x11c ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
lea ebx [ esi + 0x8 ]
push ebx
push 0x1
push 0x0
push 0x0
push eax
call edx
mov [ ebp - 0x110 ] eax
test eax eax
jne r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
call ecx
jmp r-xdata
cmp [ ebx ] eax
je r-xdata
push 0x1
push ebx
push edx
mov edx [ ebp - 0x144 ]
push eax
mov eax [ ebp - 0x148 ]
push edx
push eax
call sub_41c9b0
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_43d898
jmp r-xdata
lea edx [ ebp - 0x40 ]
push edx
jmp r-xdata
push esi
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_402680
mov eax [ edi + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ edi + 0x3c ]
mov [ ebp - 0x40 ] 0x13
mov [ ebp - 0x30 ] 0x13
mov [ ebp - 0x20 ] 0x13
mov [ ebp - 0x18 ] eax
mov eax 0xc
mov [ ebp - 0x4 ] al
mov [ ebp - 0x5c ] eax
push 0x3
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov ecx esi
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x54 ] 0x3
call sub_420c60
push j_sub_4110c0
mov esi eax
push 0x3
mov [ ebp - 0x4 ] 0x2
push 0x10
test esi esi
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_43d898
jmp r-xdata
lea edx [ ebp - 0x108 ]
push edx
jmp r-xdata
mov eax [ edi + 0x68 ]
mov [ ebp - 0x114 ] eax
mov eax [ ebp - 0x10c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call edx
mov eax [ ebp - 0x110 ]
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x10 ]
add eax 0xc
push eax
call edx
jmp r-xdata
mov ecx [ eax + 0x18 ]
not ecx
mov [ esi + 0x10 ] ecx
mov edx [ eax + 0x10 ]
mov [ esi ] edx
mov eax [ eax + 0x14 ]
mov [ esi + 0x4 ] eax
cmp [ edi + 0x44 ] 0x0
je r-xdata
mov eax [ ebp - 0x138 ]
mov edx [ eax + 0xc ]
add eax 0xc
push eax
mov eax [ edx + 0x10 ]
call eax
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov al [ ebp - 0x115 ]
cmp al 0x8
je r-xdata
call sub_43d898
mov ecx [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jb r-xdata
cmp [ edi + 0x54 ] 0x0
je r-xdata
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x10 ]
add eax 0xc
push eax
call edx
mov eax [ edi + 0x20 ]
mov [ ebp - 0x48 ] eax
mov eax [ edi + 0x24 ]
mov [ ebp - 0x38 ] eax
mov eax [ edi + 0x28 ]
mov [ ebp - 0x28 ] eax
mov eax [ edi + 0x30 ]
mov [ ebp - 0x50 ] 0x13
mov [ ebp - 0x40 ] 0x13
mov [ ebp - 0x30 ] 0x13
mov [ ebp - 0x20 ] 0x13
mov [ ebp - 0x18 ] eax
cmp [ edi + 0x2c ] 0x0
mov [ ebp - 0x78 ] 0xc
mov [ ebp - 0x74 ] 0xb
mov [ ebp - 0x70 ] 0x8
mov [ ebp - 0x6c ] 0xa
mov esi 0x4
jne r-xdata
cmp al 0x9
je r-xdata
ja r-xdata
mov ecx 0xc
mov ecx [ edi + 0x74 ]
mov ecx [ ecx + 0xc ]
and ecx 0x3
lea ecx [ ecx * 4 + 0x6 ]
jmp r-xdata
mov [ ebp - 0x110 ] 0x0
mov eax [ ebx ]
mov ecx [ eax ]
lea edx [ ebp - 0x110 ]
push edx
push r--data
push eax
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0xe
call eax
mov eax [ ebp - 0x110 ]
test eax eax
je r-xdata
mov esi 0x3
cmp al 0xc
jne r-xdata
mov eax [ ebp - 0x134 ]
inc eax
mov [ ebp - 0x134 ] eax
cmp eax [ ebp - 0x130 ]
jl r-xdata
mov edx [ ebx ]
cmp edx [ esi ]
ja r-xdata
xor eax eax
add ecx [ esi ]
adc eax [ esi + 0x4 ]
cmp [ ebx + 0x4 ] eax
jb r-xdata
mov [ ebp - 0x4 ] 0xd
test eax eax
je r-xdata
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x50 ]
push edx
lea edx [ ebp - 0x78 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov esi eax
mov eax [ ebp - 0x110 ]
test esi esi
jne r-xdata
mov eax [ edi + 0x34 ]
mov [ ebp - 0xa0 ] eax
mov eax [ edi + 0x24 ]
mov [ ebp - 0x90 ] eax
mov eax [ edi + 0x40 ]
mov [ ebp - 0xa8 ] 0x13
mov [ ebp - 0x98 ] 0x13
mov [ ebp - 0x88 ] 0x13
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x68 ] 0x1
mov [ ebp - 0x64 ] 0xb
mov [ ebp - 0x60 ] 0xd
mov [ ebp - 0x12c ] esi
mov eax [ ebx ]
mov ecx [ eax ]
lea edx [ ebp - 0x12c ]
push edx
push r--data
push eax
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x10
call eax
mov eax [ ebp - 0x12c ]
test eax eax
je r-xdata
cmp [ ebx ] ecx
jmp r-xdata
push j_sub_4110c0
push 0x4
lea eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xd
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xf
test eax eax
je r-xdata
mov ecx [ eax ]
push 0x3
lea edx [ ebp - 0xa8 ]
push edx
lea edx [ ebp - 0x68 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov esi eax
mov eax [ ebp - 0x12c ]
test esi esi
jne r-xdata
jb r-xdata
push j_sub_4110c0
push 0x4
push 0x10
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_43d898
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push j_sub_4110c0
push 0x3
lea eax [ ebp - 0xa8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0xf
test eax eax
je r-xdata
push 0x10
push eax
mov [ ebp - 0x4 ] 0x2
push j_sub_4110c0
push 0x3
push 0x10
lea eax [ ebp - 0xa8 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_43d898
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_434ee0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
push eax
mov [ esi + 0x24 ] r--data
call sub_43c44d
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_434f10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
dec [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x2c ]
push eax
mov [ esi + 0x24 ] r--data
call sub_43c44d
push esi
call sub_43c44d
add esp 0x8
xor eax eax
sub_434f40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_42aac0
xor eax eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x6c ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_434fe0
push ebx
push esi
mov esi ecx
lea eax [ esi + 0x1c ]
push eax
call sub_431d40
mov ecx [ esi + 0x8 ]
add esp 0x4
push ecx
xor ebx ebx
lea ecx [ esi + 0x28 ]
mov [ esi + 0x14 ] bx
call sub_4324d0
mov [ esi + 0x10 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x48 ] 0x1
pop esi
pop ebx
retn
sub_435010
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
push edi
push eax
push ecx
lea ecx [ esi + 0x28 ]
call sub_432560
mov edx [ esi + 0x8 ]
push edx
lea ecx [ esi + 0x28 ]
call sub_4324d0
pop edi
mov [ esi + 0x48 ] 0x1
pop esi
pop ebp
retn 0x4
sub_435040
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x8 ]
mov ecx [ ecx + 0x4 ]
push edi
push eax
push ecx
lea ecx [ esi + 0x28 ]
call sub_4323b0
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov edx [ esi + 0x8 ]
push edx
lea ecx [ esi + 0x28 ]
call sub_4324d0
xor eax eax
sub_435070
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov esi [ esi + 0x50 ]
mov eax [ esi ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ eax + 0xc ]
push ecx
push esi
call edx
pop esi
mov esp ebp
pop ebp
retn 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push edi
test ebx ebx
je r-xdata
mov [ eax ] 0x0
xor eax eax
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x30 ]
jge r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] edx
mov edx [ ecx + 0x24 ]
xor ecx ecx
cmp [ esi + 0x48 ] cl
push 0xffffffff
setne cl
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x4 ] edx
add ecx 0x2
push ecx
call [ WaitForMultipleObjects@IAT ]
sub eax 0x0
je r-xdata
mov edx [ esi + 0x34 ]
mov eax [ edx + eax * 4 ]
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
mov edi [ edx + 0x4 ]
sub edi ecx
add eax ecx
cmp ebx edi
jae r-xdata
mov eax [ esi + 0x20 ]
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x10
dec eax
je r-xdata
mov ecx [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_43d220
mov eax [ ebp + 0x14 ]
add esp 0xc
test eax eax
je r-xdata
mov edi ebx
mov ecx esi
mov [ esi + 0x14 ] 0x1
call sub_435040
test eax eax
jne r-xdata
dec eax
jne r-xdata
add [ esi + 0x10 ] edi
add [ ebp + 0xc ] edi
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
sub ebx edi
mov edi [ esi + 0x8 ]
mul [ edi + 0x4 ]
mov [ ebp + 0x10 ] ebx
xor ebx ebx
add eax ecx
adc edx ebx
cmp edx [ esi + 0x44 ]
jb r-xdata
add [ eax ] edi
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov esi [ esi + 0x50 ]
mov eax [ ebp + 0xc ]
mov ecx [ esi ]
mov ecx [ ecx + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
push ebx
push eax
push esi
call ecx
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
pop edi
pop ebx
mov eax 0x80004005
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x8 ]
call sub_4320d0
lea ecx [ esi + 0x28 ]
mov [ ebp + 0x10 ] eax
call sub_404690
mov edx [ esi + 0x30 ]
mov eax [ esi + 0x34 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + edx * 4 ] ecx
inc [ esi + 0x30 ]
mov edx [ esi + 0x30 ]
mov eax [ esi + 0x34 ]
cmp [ eax + edx * 4 - 0x4 ] 0x0
jne r-xdata
cmp ecx [ edi + 0x4 ]
jne r-xdata
ja r-xdata
mov edx [ ebp + 0x10 ]
add [ ecx ] edx
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x10
test ebx ebx
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov eax [ esi + 0xc ]
inc eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] edx
cmp eax [ esi + 0x40 ]
jbe r-xdata
sub_435220
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] dl
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x1
jne r-xdata
mov ecx [ ecx + 0x54 ]
cmp ecx edx
jne r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push ecx
call eax
pop ebp
retn 0x14
mov eax 0x80004005
pop ebp
retn 0x14
mov eax 0x80004001
pop ebp
retn 0x14
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
jne r-xdata
push esi
mov esi [ ebp + 0x18 ]
cmp esi edx
je r-xdata
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] edx
xor eax eax
pop esi
pop ebp
retn 0x14
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x4 ]
mul [ ecx + 0xc ]
mov ecx [ ecx + 0x10 ]
push edi
xor edi edi
add eax ecx
adc edx edi
mov [ esi ] eax
mov [ esi + 0x4 ] edx
pop edi
sub_4352b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] edx
xor eax eax
pop ebp
retn 0xc
mov eax [ eax + 0x54 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
pop ebp
retn 0xc
mov eax 0x80004005
pop ebp
retn 0xc
sub_435300
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] eax
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edi
call edx
mov ecx [ ebp + 0x10 ]
push 0x0
push 0x0
mov [ esi + 0x10 ] edi
push ecx
mov esi edi
mov eax [ esi ]
mov edx [ eax + 0x10 ]
push ebx
push esi
call edx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_435350
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
pop ebp
retn 0x10
sub_435380
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
jne r-xdata
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
lea edi [ ebp + 0xc ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push eax
call edx
mov ecx [ ebp + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x8 ]
add [ ebp + 0xc ] eax
mov edx [ esi + 0xc ]
adc [ ebp + 0x10 ] edx
pop edi
pop esi
pop ebp
retn 0x14
mov edx [ ebp + 0xc ]
sub edx [ esi + 0x8 ]
mov edi [ ebp + 0x10 ]
sbb edi [ esi + 0xc ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] edi
sub_4353e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ecx ]
push esi
mov esi [ eax + 0x8 ]
add esi [ ebp + 0xc ]
mov eax [ eax + 0xc ]
adc eax [ ebp + 0x10 ]
push eax
push esi
push ecx
mov ecx [ edx + 0x14 ]
call ecx
pop esi
pop ebp
retn 0xc
sub_435440
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
pop ebx
pop ebp
retn 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x18 ]
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax [ esi + 0x10 ]
sub edi eax
cmp edi ecx
jbe r-xdata
ja r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
add ecx eax
push ecx
push edx
call sub_43bd20
add esp 0xc
add [ esi + 0x10 ] edi
adc [ esi + 0x14 ] 0x0
test ebx ebx
je r-xdata
mov edi ecx
pop edi
pop esi
mov eax 0x80004005
pop ebx
pop ebp
retn 0x10
cmp [ esi + 0x10 ] edi
jbe r-xdata
pop edi
xor eax eax
pop esi
mov [ ebx ] edi
sub_4354b0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub eax 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
add eax 0x10
dec eax
je r-xdata
xor eax eax
pop ebp
retn 0x14
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
add eax 0x10
add [ eax ] ecx
adc [ eax + 0x4 ] edx
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + 0x10 ]
mov ecx [ ecx + 0x18 ]
xor edx edx
add ecx [ ebp + 0xc ]
adc edx [ ebp + 0x10 ]
jmp r-xdata
mov eax 0x80030001
pop ebp
retn 0x14
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
sub_435540
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
sub esi eax
cmp esi ebx
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ edi + 0x8 ]
push esi
push ecx
add edx eax
push edx
call sub_43bd20
mov eax [ ebp + 0x14 ]
add [ edi + 0x10 ] esi
add esp 0xc
test eax eax
je r-xdata
mov esi ebx
test esi esi
jne r-xdata
mov [ eax ] esi
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x10
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x80004005
pop ebx
pop ebp
retn 0x10
sub_4355a0
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
call sub_410600
mov ecx [ esi + 0xc ]
push ecx
mov [ esi + 0x8 ] 0x0
call sub_410630
add esp 0x8
mov [ esi + 0xc ] 0x0
pop esi
retn
sub_4355d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
lea ecx [ eax + ebx ]
cmp ecx 0x20
jb r-xdata
mov eax [ esi + 0xc ]
push edi
mov edi 0x1
shl edi cl
test eax eax
je r-xdata
pop esi
xor al al
pop ebx
pop ebp
retn 0x8
push eax
call sub_410630
push edi
call sub_410610
add esp 0x8
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_410600
mov ecx ebx
mov edx 0x8
shl edx cl
push edx
call sub_4105e0
add esp 0x8
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
cmp ebx [ esi + 0x18 ]
je r-xdata
mov [ esi + 0x18 ] ebx
mov eax [ ebp + 0x8 ]
pop edi
mov [ esi + 0x14 ] eax
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x8
sub_435660
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx ecx
mov ecx [ ebp + 0xc ]
push esi
mov [ edx + 0x24 ] ecx
mov ecx [ edx + 0x18 ]
mov esi 0x1
shl esi cl
mov [ edx + 0x20 ] eax
xor eax eax
mov [ edx + 0x28 ] eax
mov [ edx + 0x2c ] eax
cmp esi eax
jbe r-xdata
pop esi
pop ebp
retn 0x8
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov [ ecx + eax * 8 ] 0xffffffff
mov [ ecx + eax * 8 + 0x4 ] 0xffffffff
inc eax
cmp eax esi
jb r-xdata
sub_4356b0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub eax 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
add eax 0x28
dec eax
je r-xdata
xor eax eax
pop ebp
retn 0x14
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
add eax 0x28
add [ eax ] edx
adc [ eax + 0x4 ] ecx
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx [ ebp + 0xc ]
lea eax [ ecx + 0x28 ]
mov ecx [ ecx + 0x24 ]
adc ecx [ ebp + 0x10 ]
jmp r-xdata
mov eax 0x80030001
pop ebp
retn 0x14
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
sub_435720
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ edi ]
cmp esi ecx
jbe r-xdata
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
cmp ecx 0x40
jbe r-xdata
mov eax 0x8
cmp eax ecx
sbb eax eax
and eax 0xc
add eax 0x4
mov eax ecx
shr eax 0x2
jmp r-xdata
mov ecx [ edi + 0x4 ]
push esi
push ecx
call sub_43dccf
add esp 0x8
test eax eax
jne r-xdata
mov esi eax
add eax ecx
cmp eax esi
jbe r-xdata
mov [ edi + 0x4 ] eax
mov [ edi ] esi
pop edi
xor al al
pop esi
pop ebp
retn 0x4
sub_435780
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
cmp ecx eax
jae r-xdata
push ecx
lea ecx [ esi + 0x8 ]
call sub_435720
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
add eax [ esi + 0x10 ]
pop esi
pop ebp
retn 0x4
sub_4357c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
push edi
test ebx ebx
je r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
mov [ ebx ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x10 ]
lea ecx [ eax + edi ]
cmp ecx eax
jb r-xdata
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x10
pop esi
pop edi
mov eax 0x8007000e
pop ebx
pop ebp
retn 0x10
push ecx
lea ecx [ esi + 0x8 ]
call sub_435720
test al al
je r-xdata
mov eax [ esi + 0xc ]
add eax [ esi + 0x10 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_43bd20
add [ esi + 0x10 ] edi
add esp 0xc
test ebx ebx
je r-xdata
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn 0x10
mov [ ebx ] edi
sub_435830
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov ecx [ ebp + 0x8 ]
add [ esi + 0x10 ] ecx
mov edx [ ebp + 0x14 ]
adc [ esi + 0x14 ] 0x0
pop esi
test edx edx
je r-xdata
pop ebp
retn 0x10
mov [ edx ] ecx
sub_435870
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
test eax eax
je r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov [ eax ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x2c ]
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x20 ]
push edi
mov edi [ esi + 0x28 ]
cmp edx eax
jb r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub ecx edi
sbb eax edx
xor edx edx
cmp edx eax
jb r-xdata
ja r-xdata
test ebx ebx
je r-xdata
ja r-xdata
pop edi
pop esi
mov eax 0x80004005
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp edi ecx
jbe r-xdata
xor eax eax
lea ebx [ ebx ]
mov [ ebp + 0x10 ] ecx
mov ebx ecx
cmp ebx ecx
jbe r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx edi
call sub_43d940
mov ecx [ esi + 0x20 ]
sub ecx eax
mov eax [ esi + 0x24 ]
sbb eax edx
mov [ ebp - 0x14 ] ecx
mov ecx edi
mov edx 0x1
shl edx cl
xor ecx ecx
cmp ecx eax
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + ecx + 0x4 ]
cmp ecx [ ebp - 0x8 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
mov eax [ esi ]
push edx
mov edx [ eax + 0x14 ]
push ecx
push edi
push ebx
mov ecx esi
call edx
test eax eax
jne r-xdata
ja r-xdata
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0x10 ]
mov eax 0x1
shl eax cl
lea ecx [ eax - 0x1 ]
and ecx [ esi + 0x28 ]
sub eax ecx
mov edi eax
cmp eax ebx
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax ] ebx
mov [ ecx + eax + 0x4 ] edi
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x14 ]
jbe r-xdata
mov eax [ ebp + 0xc ]
push edi
add ecx edx
push ecx
push eax
call sub_43bd20
mov eax [ ebp + 0x14 ]
add esp 0xc
test eax eax
je r-xdata
mov edi ebx
add [ ebp + 0xc ] edi
add [ esi + 0x28 ] edi
adc [ esi + 0x2c ] 0x0
sub ebx edi
mov [ ebp + 0x10 ] ebx
jne r-xdata
add [ eax ] edi
mov edi [ esi + 0x14 ]
mov eax [ esi + 0x28 ]
mov edx [ esi + 0x2c ]
mov ecx edi
call sub_43d960
mov ecx [ esi + 0x18 ]
mov ebx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x8 ] edx
mov ecx edi
dec eax
and eax ebx
mov edx eax
add eax eax
shl edx cl
mov ecx [ esi + 0x8 ]
add eax eax
add eax eax
add edx [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
mov eax [ eax + ecx ]
mov [ ebp - 0x4 ] edx
cmp eax ebx
jne r-xdata
sub_4359e0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
mov [ ebp - 0x4 ] ecx
cmp edi [ esi + 0x4 ]
je r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0xc ]
mov ecx [ esi + 0x8 ]
push edx
push eax
push ecx
call sub_43bd20
add esp 0xc
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
test edi edi
je r-xdata
xor ebx ebx
push edi
call sub_43c55a
mov ebx eax
mov eax [ esi + 0x4 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call sub_43c44d
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] edi
pop ebx
cmp eax edi
jb r-xdata
push eax
mov eax [ esi + 0x8 ]
push eax
push ebx
call sub_43d220
add esp 0xc
jmp r-xdata
mov eax edi
sub_435b10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push esi
call sub_403290
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
xor ecx ecx
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ eax + 0x8 ]
mov [ edx ] ecx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
sub_435bd0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0xc ]
mov eax [ ecx + 0xc ]
jne r-xdata
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push 0x1
call edx
xor eax eax
sub_435c10
movzx ecx [ eax ]
push edi
lea edi [ ecx - 0x61 ]
cmp di 0x19
ja r-xdata
cmp cx 0x48
jne r-xdata
add ecx 0xffe0
cmp cx 0x42
jne r-xdata
movzx ecx [ eax + 0x2 ]
lea edi [ ecx - 0x61 ]
cmp di 0x19
ja r-xdata
xor eax eax
pop edi
retn
movzx ecx [ eax + 0x2 ]
lea edi [ ecx - 0x61 ]
cmp di 0x19
ja r-xdata
cmp cx 0x43
jne r-xdata
add ecx 0xffe0
cmp cx 0x54
jne r-xdata
add ecx 0xffe0
movzx ecx [ eax + 0x4 ]
sub ecx 0x30
lea edi [ ecx - 0x4 ]
test edi edi
jne r-xdata
movzx ecx [ eax + 0x4 ]
sub ecx 0x30
lea edi [ ecx - 0x2 ]
cmp edi 0x2
ja r-xdata
cmp [ eax + 0x6 ] di
jne r-xdata
movzx eax [ eax + 0x6 ]
lea edi [ eax - 0x61 ]
cmp di 0x19
ja r-xdata
mov [ esi ] edi
lea eax [ edi + 0x1 ]
mov [ edx ] ecx
pop edi
retn
test ax ax
jne r-xdata
add eax 0xffe0
mov [ esi ] 0x1
mov eax 0x1
mov [ edx ] ecx
pop edi
retn
sub_435cc0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x9
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x13
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ecx ] 0x8
jne r-xdata
mov eax 0x80070057
pop ebp
retn
mov eax [ eax + 0x8 ]
dec ecx
cmp ecx 0xb
ja r-xdata
mov eax [ ebp + 0x10 ]
push esi
lea edx [ eax + 0x20 ]
lea esi [ eax + 0x1c ]
mov eax [ ecx + 0x8 ]
call sub_435c10
neg eax
sbb eax eax
and eax 0x7ff8ffa9
add eax 0x80070057
pop esi
pop ebp
retn
jmp [ ecx * 4 + jump_table_435d64 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x18 ] eax
xor eax eax
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov [ edx + 0x24 ] eax
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x14 ] eax
xor eax eax
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x10 ] eax
xor eax eax
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov [ edx + 0xc ] eax
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
xor eax eax
pop ebp
retn
sub_435da0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
mov [ ebp - 0x38 ] eax
call sub_436120
xor ebx ebx
add esp 0x4
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0xc ]
lea edx [ ebp - 0x34 ]
push edx
push ecx
call sub_4367d0
push eax
call sub_42ebf0
add esp 0xc
mov edx [ ebp + 0xc ]
mov eax [ edx + ebx * 4 ]
mov ecx eax
sub ecx 0xd
je r-xdata
cmp [ edi ] 0x13
jne r-xdata
dec ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x80070057
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x10
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x8 ] ecx
cmp [ edi ] 0xb
jne r-xdata
cmp eax 0x9
jne r-xdata
xor eax eax
cmp [ edi + 0x8 ] 0xffff
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ edi ] 0x13
jne r-xdata
cmp [ edi ] 0x8
jne r-xdata
inc ebx
add edi 0x10
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov ecx [ edi + 0x8 ]
dec eax
cmp eax 0xb
ja r-xdata
mov eax [ edi + 0x8 ]
lea edx [ ebp - 0x14 ]
lea esi [ ebp - 0x18 ]
call sub_435c10
neg eax
sbb eax eax
and eax 0x7ff8ffa9
add eax 0x80070057
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_435ed0 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov [ ebp - 0x2c ] ecx
jmp r-xdata
sub_435f00
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
push eax
mov [ ebp - 0x10 ] 0x5
call sub_43a4f0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
push esi
call sub_411fb0
add esp 0xc
sub_435f60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x30
push esi
push eax
lea ecx [ ebp - 0xc ]
call sub_42ebb0
mov ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_42ebd0
mov esi [ ebp + 0x1c ]
push esi
lea ecx [ ebp - 0x18 ]
call sub_42ea60
push rwxdata
neg esi
push rwxdata
sbb esi esi
lea edx [ ebp - 0x18 ]
and esi edx
mov edx [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ edx + 0x10 ]
lea ecx [ ebp - 0x30 ]
push ecx
push eax
call sub_43a4a0
add esp 0x18
mov ecx eax
pop esi
cmp ecx 0x8
jne r-xdata
cmp ecx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp ecx 0xa
jne r-xdata
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
push ecx
call sub_42ebf0
add esp 0x4
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp - 0x10 ]
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn 0x18
mov esp ebp
pop ebp
retn 0x18
sub_436060
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
push rwxdata
push rwxdata
push eax
call sub_4393a0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
add esp 0x4
sub_4360b0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] 0x0
push rwxdata
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x10 ] 0x0
call sub_4392b0
add esp 0x4
mov [ esi + 0x10 ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_43d1c8
sub_436120
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
or ecx 0xffffffff
mov [ eax ] 0x5
mov [ eax + 0x24 ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x28 ] edx
pop ebp
retn
sub_436160
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
test esi esi
jns r-xdata
cmp [ eax + 0x4 ] 0x0
mov [ eax ] esi
jne r-xdata
mov esi 0x5
cmp [ eax + 0x8 ] 0x0
jge r-xdata
cmp esi 0x5
jg r-xdata
cmp [ eax + 0xc ] 0x0
jge r-xdata
mov [ eax + 0x8 ] 0x3
lea edx [ esi - 0x6 ]
neg edx
sbb edx edx
and edx 0x2000000
add edx 0x2000000
lea ecx [ esi + esi + 0xe ]
mov edx 0x1
shl edx cl
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jge r-xdata
mov [ eax + 0xc ] 0x0
mov [ eax + 0x4 ] edx
cmp [ eax + 0x14 ] 0x0
jge r-xdata
mov [ eax + 0x10 ] 0x2
cmp [ eax + 0x18 ] 0x0
jge r-xdata
xor ecx ecx
cmp esi 0x5
setge cl
mov [ eax + 0x14 ] ecx
cmp [ eax + 0x1c ] 0x0
pop esi
jge r-xdata
xor edx edx
cmp esi 0x7
setge dl
dec edx
and edx 0xffffffe0
add edx 0x40
mov [ eax + 0x18 ] edx
cmp [ eax + 0x20 ] 0x0
jge r-xdata
xor ecx ecx
cmp [ eax + 0x14 ] ecx
setne cl
mov [ eax + 0x1c ] ecx
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov [ eax + 0x20 ] 0x4
cmp [ eax + 0x2c ] 0x0
jge r-xdata
mov edx [ eax + 0x18 ]
xor ecx ecx
cmp [ eax + 0x1c ] ecx
sete cl
sar edx 0x1
add edx 0x10
sar edx cl
mov [ eax + 0x24 ] edx
pop ebp
retn
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov ecx 0x1
cmp [ eax + 0x14 ] 0x0
mov ecx 0x2
jne r-xdata
mov [ eax + 0x2c ] ecx
sub_436250
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x30 ]
mov ecx 0xc
lea edi [ ebp - 0x30 ]
push eax
[ edi ] [ esi ]
call sub_436160
mov eax [ ebp - 0x2c ]
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_436280
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx 0x2
push edi
mov [ eax ] 0x100
mov edi ebx
inc edi
cmp edi 0x16
jl r-xdata
push esi
add eax ebx
push edi
push eax
call sub_43d590
mov eax [ ebp + 0x8 ]
add esp 0xc
add ebx esi
mov ecx edi
sar ecx 0x1
dec ecx
mov esi 0x1
shl esi cl
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4362d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x4848
lea eax [ ebx + 0x32c14 ]
push eax
lea ecx [ ebx + 0x3c37c ]
push ecx
call sub_43bd20
push 0x4848
lea edx [ ebx + 0x3745c ]
push edx
lea eax [ ebx + 0x40bc4 ]
push eax
call sub_43bd20
mov ecx [ ebx + 0x3194c ]
add esp 0x18
mov [ ebx + 0x4541c ] ecx
lea edx [ ebx + 0x3bef8 ]
lea eax [ ebx + 0x32790 ]
mov [ ebp + 0x8 ] 0xc
jmp r-xdata
lea esi [ eax - 0x1e0 ]
lea edi [ edx - 0x1e0 ]
mov ecx 0x8
[ edi ] [ esi ]
mov esi eax
mov edi edx
mov ecx 0x8
add eax 0x20
add edx 0x20
dec [ ebp + 0x8 ]
[ edi ] [ esi ]
jne r-xdata
lea esi [ ebx + 0x32910 ]
lea edi [ ebx + 0x3c078 ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x32990 ]
lea edi [ ebx + 0x3c0f8 ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x32a10 ]
lea edi [ ebx + 0x3c178 ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x32a90 ]
lea edi [ ebx + 0x3c1f8 ]
mov ecx 0x20
[ edi ] [ esi ]
mov edx [ ebx + 0x32730 ]
mov [ ebx + 0x3be98 ] edx
mov eax [ ebx + 0x32734 ]
mov [ ebx + 0x3be9c ] eax
mov ecx [ ebx + 0x32738 ]
mov [ ebx + 0x3bea0 ] ecx
mov edx [ ebx + 0x3273c ]
mov [ ebx + 0x3bea4 ] edx
mov eax [ ebx + 0x32740 ]
mov [ ebx + 0x3bea8 ] eax
mov ecx [ ebx + 0x32744 ]
mov [ ebx + 0x3beac ] ecx
mov edx [ ebx + 0x32748 ]
mov [ ebx + 0x3beb0 ] edx
mov eax [ ebx + 0x3274c ]
mov [ ebx + 0x3beb4 ] eax
mov ecx [ ebx + 0x32750 ]
mov [ ebx + 0x3beb8 ] ecx
mov edx [ ebx + 0x32754 ]
mov [ ebx + 0x3bebc ] edx
mov eax [ ebx + 0x32758 ]
mov [ ebx + 0x3bec0 ] eax
mov ecx [ ebx + 0x3275c ]
mov [ ebx + 0x3bec4 ] ecx
mov edx [ ebx + 0x32760 ]
mov [ ebx + 0x3bec8 ] edx
mov eax [ ebx + 0x32764 ]
mov [ ebx + 0x3becc ] eax
mov ecx [ ebx + 0x32768 ]
mov [ ebx + 0x3bed0 ] ecx
mov edx [ ebx + 0x3276c ]
mov [ ebx + 0x3bed4 ] edx
mov eax [ ebx + 0x32770 ]
mov [ ebx + 0x3bed8 ] eax
mov ecx [ ebx + 0x32774 ]
mov [ ebx + 0x3bedc ] ecx
mov edx [ ebx + 0x32778 ]
mov [ ebx + 0x3bee0 ] edx
mov eax [ ebx + 0x3277c ]
mov [ ebx + 0x3bee4 ] eax
mov ecx [ ebx + 0x32780 ]
mov [ ebx + 0x3bee8 ] ecx
mov edx [ ebx + 0x32784 ]
mov [ ebx + 0x3beec ] edx
mov eax [ ebx + 0x32788 ]
mov [ ebx + 0x3bef0 ] eax
mov ecx [ ebx + 0x3278c ]
mov [ ebx + 0x3bef4 ] ecx
lea esi [ ebx + 0x32b10 ]
lea edi [ ebx + 0x3c278 ]
mov ecx 0x39
[ edi ] [ esi ]
lea esi [ ebx + 0x32bf4 ]
lea edi [ ebx + 0x3c35c ]
mov ecx 0x8
[ edi ] [ esi ]
mov edx [ ebx + 0x3193c ]
mov [ ebx + 0x4540c ] edx
mov eax [ ebx + 0x31940 ]
mov [ ebx + 0x45410 ] eax
mov ecx [ ebx + 0x31944 ]
mov [ ebx + 0x45414 ] ecx
mov edx [ ebx + 0x31948 ]
mov [ ebx + 0x45418 ] edx
mov eax 0x300
mov ecx [ ebx + 0x3bca4 ]
mov edx [ ebx + 0x3bd14 ]
shl eax cl
mov ecx [ ebx + 0x325ac ]
add eax eax
push eax
push ecx
push edx
call sub_43bd20
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_436550
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x4848
lea eax [ ebx + 0x3c37c ]
push eax
lea ecx [ ebx + 0x32c14 ]
push ecx
call sub_43bd20
push 0x4848
lea edx [ ebx + 0x40bc4 ]
push edx
lea eax [ ebx + 0x3745c ]
push eax
call sub_43bd20
mov ecx [ ebx + 0x4541c ]
add esp 0x18
mov [ ebx + 0x3194c ] ecx
lea edx [ ebx + 0x32790 ]
lea eax [ ebx + 0x3bef8 ]
mov [ ebp + 0x8 ] 0xc
jmp r-xdata
lea esi [ eax - 0x1e0 ]
lea edi [ edx - 0x1e0 ]
mov ecx 0x8
[ edi ] [ esi ]
mov esi eax
mov edi edx
mov ecx 0x8
add eax 0x20
add edx 0x20
dec [ ebp + 0x8 ]
[ edi ] [ esi ]
jne r-xdata
lea esi [ ebx + 0x3c078 ]
lea edi [ ebx + 0x32910 ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x3c0f8 ]
lea edi [ ebx + 0x32990 ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x3c178 ]
lea edi [ ebx + 0x32a10 ]
mov ecx 0x20
[ edi ] [ esi ]
lea esi [ ebx + 0x3c1f8 ]
lea edi [ ebx + 0x32a90 ]
mov ecx 0x20
[ edi ] [ esi ]
mov edx [ ebx + 0x3be98 ]
mov [ ebx + 0x32730 ] edx
mov eax [ ebx + 0x3be9c ]
mov [ ebx + 0x32734 ] eax
mov ecx [ ebx + 0x3bea0 ]
mov [ ebx + 0x32738 ] ecx
mov edx [ ebx + 0x3bea4 ]
mov [ ebx + 0x3273c ] edx
mov eax [ ebx + 0x3bea8 ]
mov [ ebx + 0x32740 ] eax
mov ecx [ ebx + 0x3beac ]
mov [ ebx + 0x32744 ] ecx
mov edx [ ebx + 0x3beb0 ]
mov [ ebx + 0x32748 ] edx
mov eax [ ebx + 0x3beb4 ]
mov [ ebx + 0x3274c ] eax
mov ecx [ ebx + 0x3beb8 ]
mov [ ebx + 0x32750 ] ecx
mov edx [ ebx + 0x3bebc ]
mov [ ebx + 0x32754 ] edx
mov eax [ ebx + 0x3bec0 ]
mov [ ebx + 0x32758 ] eax
mov ecx [ ebx + 0x3bec4 ]
mov [ ebx + 0x3275c ] ecx
mov edx [ ebx + 0x3bec8 ]
mov [ ebx + 0x32760 ] edx
mov eax [ ebx + 0x3becc ]
mov [ ebx + 0x32764 ] eax
mov ecx [ ebx + 0x3bed0 ]
mov [ ebx + 0x32768 ] ecx
mov edx [ ebx + 0x3bed4 ]
mov [ ebx + 0x3276c ] edx
mov eax [ ebx + 0x3bed8 ]
mov [ ebx + 0x32770 ] eax
mov ecx [ ebx + 0x3bedc ]
mov [ ebx + 0x32774 ] ecx
mov edx [ ebx + 0x3bee0 ]
mov [ ebx + 0x32778 ] edx
mov eax [ ebx + 0x3bee4 ]
mov [ ebx + 0x3277c ] eax
mov ecx [ ebx + 0x3bee8 ]
mov [ ebx + 0x32780 ] ecx
mov edx [ ebx + 0x3beec ]
mov [ ebx + 0x32784 ] edx
mov eax [ ebx + 0x3bef0 ]
mov [ ebx + 0x32788 ] eax
mov ecx [ ebx + 0x3bef4 ]
mov [ ebx + 0x3278c ] ecx
lea esi [ ebx + 0x3c278 ]
lea edi [ ebx + 0x32b10 ]
mov ecx 0x39
[ edi ] [ esi ]
lea esi [ ebx + 0x3c35c ]
lea edi [ ebx + 0x32bf4 ]
mov ecx 0x8
[ edi ] [ esi ]
mov edx [ ebx + 0x4540c ]
mov [ ebx + 0x3193c ] edx
mov eax [ ebx + 0x45410 ]
mov [ ebx + 0x31940 ] eax
mov ecx [ ebx + 0x45414 ]
mov [ ebx + 0x31944 ] ecx
mov edx [ ebx + 0x45418 ]
mov [ ebx + 0x31948 ] edx
mov eax 0x300
mov ecx [ ebx + 0x3bca4 ]
mov edx [ ebx + 0x325ac ]
shl eax cl
mov ecx [ ebx + 0x3bd14 ]
add eax eax
push eax
push ecx
push edx
call sub_43bd20
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4367d0
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x30 ]
mov ecx 0xc
lea edi [ ebp - 0x30 ]
push eax
[ edi ] [ esi ]
call sub_436160
mov edi [ ebp - 0x28 ]
add esp 0x4
cmp edi 0x8
jg r-xdata
pop edi
mov eax 0x5
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x24 ]
cmp esi 0x4
jg r-xdata
mov edx [ ebp - 0x20 ]
cmp edx 0x4
jg r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx 0x8000000
ja r-xdata
cmp ecx 0x40000000
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x3bd08 ] ecx
mov ecx [ ebp - 0x18 ]
push ebx
mov ebx [ ebp - 0xc ]
mov [ eax + 0x3bd0c ] ebx
cmp ecx 0x5
jae r-xdata
cmp ecx 0x111
jbe r-xdata
mov ecx 0x5
jmp r-xdata
mov [ eax + 0x31934 ] ecx
xor ecx ecx
cmp [ ebp - 0x1c ] ecx
mov [ eax + 0x325a0 ] edx
sete cl
mov [ eax + 0x32598 ] edi
mov [ eax + 0x3259c ] esi
mov edx 0x4
mov [ eax + 0x3bca8 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x1f0 ] ecx
test ecx ecx
je r-xdata
mov ecx 0x111
xor ecx ecx
cmp [ ebp - 0x4 ] 0x1
mov [ eax + 0x1c8 ] ebx
setg cl
mov [ eax + 0x1e4 ] edx
mov edx [ ebp - 0x8 ]
pop ebx
pop edi
mov [ eax + 0x3bce8 ] edx
pop esi
mov [ eax + 0x3bd00 ] ecx
xor eax eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
cmp ecx 0x2
jge r-xdata
cmp ecx edx
jge r-xdata
mov edx 0x2
jmp r-xdata
mov edx ecx
sub_436900
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax 0x1
retn
push 0x10000
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
add eax 0x10000
mov [ esi + 0x1c ] eax
retn
sub_436950
mov edx [ eax + 0x20 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax ] 0xffffffff
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x14 ] ecx
mov [ eax + 0x4 ] cl
mov [ eax + 0x18 ] edx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
retn
sub_436980
cmp [ esi + 0x30 ] 0x0
jne r-xdata
retn
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
push edi
mov edi [ esi + 0x18 ]
sub edi eax
push edi
push eax
mov eax [ ecx ]
push ecx
call eax
add esp 0xc
cmp edi eax
je r-xdata
add [ esi + 0x28 ] edi
mov ecx [ esi + 0x20 ]
mov [ esi + 0x18 ] ecx
adc [ esi + 0x2c ] 0x0
pop edi
mov [ esi + 0x30 ] 0x9
sub_4369c0
push edi
mov edi [ esi + 0x8 ]
cmp edi 0xff000000
jb r-xdata
push ebx
mov bl [ esi + 0x4 ]
mov edx [ esi + 0xc ]
mov eax edi
mov cl 0x20
call sub_43d960
test eax eax
je r-xdata
or eax 0xffffffff
or bl 0xff
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] eax
mov eax [ esi + 0x10 ]
or eax [ esi + 0x14 ]
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
add [ esi + 0x10 ] 0x1
mov eax 0x0
mov [ esi + 0xc ] eax
adc [ esi + 0x14 ] eax
shl edi 0x8
mov [ esi + 0x8 ] edi
pop edi
retn
mov eax [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov edi [ esi + 0x18 ]
mov cl 0x20
call sub_43d960
add al bl
mov [ edi ] al
inc edi
mov [ esi + 0x18 ] edi
cmp edi [ esi + 0x1c ]
jne r-xdata
mov edi [ esi + 0x8 ]
mov edx edi
shr edx 0x18
mov [ esi + 0x4 ] dl
pop ebx
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
sub edi eax
push edi
push eax
mov eax [ ecx ]
push ecx
call eax
add esp 0xc
cmp edi eax
je r-xdata
add [ esi + 0x28 ] edi
mov ecx [ esi + 0x20 ]
mov [ esi + 0x18 ] ecx
adc [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x9
sub_436a70
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] 0x5
push edi
lea ecx [ ecx ]
mov bl [ esi + 0x4 ]
mov edi edi
mov edx [ esi + 0xc ]
mov eax edi
mov cl 0x20
call sub_43d960
test eax eax
je r-xdata
or eax 0xffffffff
or bl 0xff
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] eax
mov eax [ esi + 0x10 ]
or eax [ esi + 0x14 ]
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov ecx 0x1
add [ esi + 0x10 ] ecx
mov eax 0x0
mov [ esi + 0xc ] eax
adc [ esi + 0x14 ] eax
shl edi 0x8
sub [ ebp - 0x4 ] ecx
mov [ esi + 0x8 ] edi
jne r-xdata
mov eax [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov edi [ esi + 0x18 ]
mov cl 0x20
call sub_43d960
add al bl
mov [ edi ] al
inc edi
mov [ esi + 0x18 ] edi
cmp edi [ esi + 0x1c ]
jne r-xdata
mov edi [ esi + 0x8 ]
mov edx edi
shr edx 0x18
mov [ esi + 0x4 ] dl
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
sub edi eax
push edi
push eax
mov eax [ ecx ]
push ecx
call eax
add esp 0xc
cmp edi eax
je r-xdata
mov edi [ esi + 0x8 ]
cmp edi 0xff000000
jb r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
add [ esi + 0x28 ] edi
mov ecx [ esi + 0x20 ]
mov [ esi + 0x18 ] ecx
adc [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x9
sub_436b40
push ebp
mov ebp esp
push ebx
push edi
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov edi [ esi + 0x8 ]
shl eax 0x8
mov [ esi ] eax
cmp edi 0xff000000
jb r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
shr [ esi ] 0x1
mov eax [ esi ]
dec ecx
shr edx cl
mov ebx 0x0
mov [ ebp + 0xc ] ecx
and edx 0x1
neg edx
and edx eax
add [ esi + 0x8 ] edx
adc [ esi + 0xc ] ebx
cmp eax 0x1000000
jae r-xdata
pop edi
pop ebx
pop ebp
retn
mov bl [ esi + 0x4 ]
mov edx [ esi + 0xc ]
mov eax edi
mov cl 0x20
call sub_43d960
test eax eax
je r-xdata
or eax 0xffffffff
or bl 0xff
add [ esi + 0x10 ] eax
adc [ esi + 0x14 ] eax
mov eax [ esi + 0x10 ]
or eax [ esi + 0x14 ]
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
add [ esi + 0x10 ] 0x1
mov [ esi + 0xc ] ebx
adc [ esi + 0x14 ] ebx
shl edi 0x8
mov [ esi + 0x8 ] edi
mov eax [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov edi [ esi + 0x18 ]
mov cl 0x20
call sub_43d960
add al bl
mov [ edi ] al
inc edi
mov [ esi + 0x18 ] edi
cmp edi [ esi + 0x1c ]
jne r-xdata
mov edi [ esi + 0x8 ]
mov edx edi
shr edx 0x18
mov [ esi + 0x4 ] dl
xor ebx ebx
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
sub edi eax
push edi
push eax
mov eax [ ecx ]
push ecx
call eax
add esp 0xc
cmp edi eax
je r-xdata
add [ esi + 0x28 ] edi
mov ecx [ esi + 0x20 ]
mov [ esi + 0x18 ] ecx
adc [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x9
sub_436c20
push ebp
mov ebp esp
movzx ecx [ edi ]
push esi
mov esi eax
mov edx [ esi ]
mov eax edx
shr eax 0xb
imul eax ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edx eax
mov [ esi ] edx
mov edx ecx
shr edx 0x5
sub ecx edx
mov [ esi ] eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add ecx eax
jmp r-xdata
pop esi
pop ebp
retn
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov [ edi ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
sub_436c80
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
push edi
mov esi ecx
or ebx 0x100
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edi eax
mov eax ecx
shr eax 0x5
mov [ esi ] edi
sub ecx eax
mov [ esi ] eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add ecx eax
jmp r-xdata
add ebx ebx
cmp ebx 0x10000
jb r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov [ edx ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ esi ]
mov eax ebx
shr eax 0x8
lea edx [ ecx + eax * 2 ]
movzx ecx [ edx ]
mov eax edi
shr eax 0xb
imul eax ecx
test bl bl
js r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_436d00
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push esi
mov eax 0x100
push edi
mov esi ecx
mov [ ebp - 0x4 ] eax
or ebx eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ esi ]
add ecx ecx
mov edx eax
and edx ecx
mov [ ebp + 0xc ] ecx
add edx eax
mov ecx ebx
shr ecx 0x8
add ecx edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + ecx * 2 ]
movzx ecx [ edx ]
mov eax edi
shr eax 0xb
imul eax ecx
test bl bl
js r-xdata
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edi eax
mov eax ecx
shr eax 0x5
mov [ esi ] edi
sub ecx eax
mov [ esi ] eax
mov eax 0x800
sub eax ecx
shr eax 0x5
add ecx eax
jmp r-xdata
add ebx ebx
mov ecx ebx
xor ecx [ ebp + 0xc ]
not ecx
and [ ebp - 0x4 ] ecx
cmp ebx 0x10000
jb r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov [ edx ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436da0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edx 0x8
lea ecx [ ecx ]
imul eax eax
add ecx ecx
cmp eax 0x10000
jb r-xdata
dec esi
jne r-xdata
lea esp [ esp ]
mov eax 0xa1
sub eax ecx
mov ecx edx
shr ecx 0x4
add edx 0x10
mov [ edi + ecx * 4 ] eax
cmp edx 0x800
jb r-xdata
shr eax 0x1
inc ecx
cmp eax 0x10000
jae r-xdata
xor ecx ecx
mov eax edx
lea esi [ ecx + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_436e00
push ebx
xor eax eax
or ecx 0x100
push edi
lea ebx [ ebx ]
mov ebx ecx
shr ebx 0x7
mov edi ecx
shr edi 0x8
movzx edi [ esi + edi * 2 ]
and ebx 0x1
neg ebx
sar ebx 0x4
shr edi 0x4
and ebx 0x7f
xor edi ebx
add eax [ edx + edi * 4 ]
add ecx ecx
cmp ecx 0x10000
jb r-xdata
pop edi
pop ebx
retn
sub_436e40
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx 0x100
xor eax eax
push edi
or ecx edx
add esi esi
mov edi edx
and edi esi
add edi edx
mov ebx ecx
shr ebx 0x8
add ebx edi
mov edi [ ebp + 0x8 ]
movzx edi [ edi + ebx * 2 ]
mov ebx ecx
shr ebx 0x7
and ebx 0x1
neg ebx
shr edi 0x4
sar ebx 0x4
and ebx 0x7f
xor edi ebx
mov ebx [ ebp + 0xc ]
add eax [ ebx + edi * 4 ]
add ecx ecx
mov edi ecx
xor edi esi
not edi
and edx edi
cmp ecx 0x10000
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_436ea0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx 0x1
test ecx ecx
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
jmp r-xdata
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ esi ]
dec ecx
shr edi cl
mov [ ebp - 0x4 ] ecx
movzx ecx [ eax + ebx * 2 ]
mov eax edx
shr eax 0xb
imul eax ecx
and edi 0x1
jne r-xdata
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edx eax
mov eax ecx
shr eax 0x5
mov [ esi ] edx
sub ecx eax
mov edx 0x800
sub edx ecx
shr edx 0x5
mov [ esi ] eax
add ecx edx
jmp r-xdata
add ebx ebx
or ebx edi
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov edx [ ebp + 0x8 ]
mov [ edx + ebx * 2 ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
sub_436f30
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx 0x1
test eax eax
jle r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
push edi
add [ esi + 0x8 ] eax
adc [ esi + 0xc ] 0x0
sub edx eax
mov eax ecx
shr eax 0x5
mov [ esi ] edx
sub ecx eax
mov edx 0x800
sub edx ecx
shr edx 0x5
mov [ esi ] eax
add ecx edx
jmp r-xdata
shr [ ebp + 0xc ] 0x1
add ebx ebx
or ebx edi
dec [ ebp - 0x4 ]
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov edx [ ebp + 0x8 ]
mov [ edx + ebx * 2 ] cx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + ebx * 2 ]
mov edx [ esi ]
mov edi [ ebp + 0xc ]
mov eax edx
shr eax 0xb
imul eax ecx
and edi 0x1
jne r-xdata
pop edi
sub_436fb0
push ebx
mov ebx 0x1
shl ebx cl
xor eax eax
or edx ebx
cmp edx 0x1
je r-xdata
pop ebx
retn
mov ecx edx
and edx 0x1
shr ecx 0x1
movzx ebx [ edi + ecx * 2 ]
neg edx
sar edx 0x4
and edx 0x7f
shr ebx 0x4
xor ebx edx
add eax [ esi + ebx * 4 ]
mov edx ecx
cmp edx 0x1
jne r-xdata
sub_436ff0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
xor eax eax
lea edx [ eax + 0x1 ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
push edi
mov edi [ ebp + 0x8 ]
movzx edi [ edi + edx * 2 ]
mov ecx esi
and ecx 0x1
mov ebx ecx
neg ebx
sar ebx 0x4
and ebx 0x7f
shr edi 0x4
xor edi ebx
mov ebx [ ebp + 0xc ]
add eax [ ebx + edi * 4 ]
add edx edx
shr esi 0x1
or edx ecx
dec [ ebp - 0x4 ]
jne r-xdata
pop edi
pop ebx
sub_437040
push esi
mov eax 0x400
movzx esi ax
push edi
mov eax esi
shl esi 0x10
or eax esi
mov [ edx ] 0x4000400
lea edi [ edx + 0x4 ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x104 ]
mov ecx 0x40
[ edi ]
lea edi [ edx + 0x204 ]
mov eax 0x400
movzx edx ax
mov eax edx
shl edx 0x10
mov ecx 0x80
or eax edx
[ edi ]
pop edi
pop esi
retn
sub_4370a0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
movzx eax [ edi ]
mov esi ecx
jae r-xdata
mov edx [ esi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov [ esi ] edx
mov edx eax
shr edx 0x5
sub eax edx
mov [ edi ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ esi ]
shr ecx 0xb
imul ecx eax
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ esi ] ecx
mov [ edi ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
cmp [ ebp + 0x8 ] 0x10
movzx eax [ edi + 0x2 ]
jae r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov eax [ ebp + 0x8 ]
push eax
add ebx ebx
lea ecx [ edi + ebx * 8 + 0x4 ]
push ecx
mov ecx 0x3
mov eax esi
call sub_436ea0
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov edx [ esi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov [ esi ] edx
mov edx eax
shr edx 0x5
sub eax edx
mov [ edi + 0x2 ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ esi ]
shr ecx 0xb
imul ecx eax
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ esi ] ecx
mov [ edi + 0x2 ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
add edi 0x204
push edi
mov ecx 0x8
mov eax esi
call sub_436ea0
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
push eax
add ebx ebx
lea ecx [ edi + ebx * 8 + 0x104 ]
push ecx
mov ecx 0x3
mov eax esi
call sub_436ea0
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
sub_4371f0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov ecx eax
shr ecx 0x4
mov edx [ esi + ecx * 4 ]
movzx ecx [ ebx + 0x2 ]
mov [ ebp - 0xc ] edx
mov edx ecx
xor eax 0x7f0
xor ecx 0x7f0
shr edx 0x4
mov edx [ esi + edx * 4 ]
shr eax 0x4
mov eax [ esi + eax * 4 ]
shr ecx 0x4
mov ecx [ esi + ecx * 4 ]
add edx eax
add ecx eax
mov [ ebp - 0x10 ] edx
push edi
mov [ ebp - 0x14 ] ecx
xor edx edx
jmp r-xdata
cmp edx [ ebp + 0x10 ]
jae r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
xor edi edi
or eax 0x8
mov [ ebp - 0x4 ] edi
cmp eax 0x1
je r-xdata
add edi [ ebp - 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + edx * 4 ] edi
inc edx
cmp edx 0x8
jb r-xdata
mov edi [ ebp + 0xc ]
mov ecx eax
and eax 0x1
shr ecx 0x1
lea edi [ ecx + edi * 8 ]
movzx edi [ ebx + edi * 2 + 0x4 ]
neg eax
sar eax 0x4
shr edi 0x4
and eax 0x7f
xor edi eax
mov eax edi
mov edi [ ebp - 0x4 ]
add edi [ esi + eax * 4 ]
mov eax ecx
mov [ ebp - 0x4 ] edi
cmp eax 0x1
jne r-xdata
cmp edx 0x10
jae r-xdata
cmp edx [ ebp + 0x10 ]
jae r-xdata
lea eax [ edx - 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ edx - 0x10 ]
mov [ ebp - 0x8 ] eax
xor edi edi
or eax 0x8
mov [ ebp - 0x4 ] edi
cmp eax 0x1
je r-xdata
add edi [ ebp - 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] edi
inc edx
inc eax
mov [ ebp - 0x8 ] eax
cmp edx [ ebp + 0x10 ]
jb r-xdata
mov ecx eax
and eax 0x1
shr ecx 0x1
movzx ebx [ ebx + ecx * 2 + 0x204 ]
neg eax
sar eax 0x4
shr ebx 0x4
and eax 0x7f
xor ebx eax
add edi [ esi + ebx * 4 ]
mov ebx [ ebp + 0x8 ]
mov eax ecx
cmp eax 0x1
jne r-xdata
add edi [ ebp - 0x10 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] edi
inc edx
inc eax
mov [ ebp - 0x8 ] eax
cmp edx 0x10
jb r-xdata
lea esp [ esp ]
or eax 0x100
xor edi edi
cmp eax 0x1
je r-xdata
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov edi [ ebp + 0xc ]
mov ecx eax
and eax 0x1
shr ecx 0x1
lea edi [ ecx + edi * 8 ]
movzx edi [ ebx + edi * 2 + 0x104 ]
neg eax
sar eax 0x4
shr edi 0x4
and eax 0x7f
xor edi eax
mov eax edi
mov edi [ ebp - 0x4 ]
add edi [ esi + eax * 4 ]
mov eax ecx
mov [ ebp - 0x4 ] edi
cmp eax 0x1
jne r-xdata
sub_437370
mov edx [ edi + 0x4804 ]
mov eax ebx
imul eax eax 0x440
lea ecx [ eax + edi + 0x404 ]
push ecx
push edx
push ebx
push edi
call sub_4371f0
mov eax [ edi + 0x4804 ]
add esp 0x10
mov [ edi + ebx * 4 + 0x4808 ] eax
retn
sub_4373a0
push ebp
mov ebp esp
sub esp 0x8
push ebx
xor ebx ebx
push esi
mov esi eax
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x4808 ]
lea ecx [ edi + 0x404 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edi + 0x4804 ]
push edx
push eax
push ebx
push edi
call sub_4371f0
mov eax [ ebp - 0x8 ]
mov ecx [ edi + 0x4804 ]
add [ ebp - 0x4 ] 0x440
mov [ eax ] ecx
inc ebx
add eax 0x4
add esp 0x10
mov [ ebp - 0x8 ] eax
cmp ebx [ ebp + 0x8 ]
jb r-xdata
sub_437400
push ebp
mov ebp esp
push eax
mov eax ebx
mov edx edi
call sub_4370a0
add esp 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
dec [ edi + ebx * 4 + 0x4808 ]
jne r-xdata
mov eax [ edi + 0x4804 ]
mov ecx ebx
imul ecx ecx 0x440
push esi
mov esi [ ebp + 0xc ]
lea edx [ ecx + edi + 0x404 ]
push edx
push eax
push ebx
push edi
call sub_4371f0
mov ecx [ edi + 0x4804 ]
add esp 0x10
mov [ edi + ebx * 4 + 0x4808 ] ecx
pop esi
sub_437480
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x8 ]
push ebx
push edi
push eax
xor edi edi
call ecx
mov ecx [ esi + 0x10 ]
lea edx [ esi + 0x310a0 ]
mov [ esi + 0x69c ] eax
mov eax [ esi + 0x18 ]
push edx
push eax
call ecx
mov ebx eax
add esp 0xc
mov [ ebp - 0x4 ] ebx
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ esi + 0x31938 ]
mov eax edi
pop edi
mov [ ecx ] ebx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ esi + ebx * 4 + 0x31098 ]
cmp edi [ esi + 0x31934 ]
jne r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esi + 0xc ]
push edx
call eax
mov ecx [ esi + ebx * 4 + 0x3109c ]
mov edx [ esi + 0x69c ]
add esp 0x4
dec eax
inc ecx
cmp edx 0x111
jbe r-xdata
mov ebx eax
sub ebx ecx
cmp edi edx
jae r-xdata
mov edx 0x111
mov ebx [ ebp - 0x4 ]
lea ecx [ eax + edi ]
sub ebx eax
inc edi
inc ecx
cmp edi edx
jb r-xdata
mov al [ ecx ]
cmp al [ ebx + ecx ]
jne r-xdata
sub_437520
push ebp
mov ebp esp
mov edx eax
shl edx 0x4
add edx [ ebp + 0x8 ]
push esi
movzx edx [ ecx + edx * 2 + 0x32790 ]
movzx esi [ ecx + eax * 2 + 0x32748 ]
shr edx 0x4
mov eax [ ecx + edx * 4 + 0x30ea0 ]
shr esi 0x4
add eax [ ecx + esi * 4 + 0x30ea0 ]
pop esi
pop ebp
retn
sub_437560
push ebp
mov ebp esp
push esi
mov esi eax
test esi esi
jne r-xdata
movzx eax [ ecx + edx * 2 + 0x32748 ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ecx + eax * 4 + 0x30ea0 ]
cmp esi 0x1
jne r-xdata
mov eax edx
movzx edx [ ecx + edx * 2 + 0x32748 ]
shl eax 0x4
add eax [ ebp + 0x8 ]
shr edx 0x4
movzx eax [ ecx + eax * 2 + 0x32790 ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ecx + eax * 4 + 0x30ea0 ]
add eax [ ecx + edx * 4 + 0x30ea0 ]
pop esi
pop ebp
retn
push ebx
push edi
movzx edi [ ecx + edx * 2 + 0x32778 ]
movzx edx [ ecx + edx * 2 + 0x32760 ]
mov ebx 0x2
sub ebx esi
sar ebx 0x4
shr edi 0x4
and ebx 0x7f
xor edi ebx
mov esi [ ecx + edi * 4 + 0x30ea0 ]
xor edx 0x7f0
shr edx 0x4
add esi [ ecx + edx * 4 + 0x30ea0 ]
pop edi
pop ebx
add eax esi
pop esi
pop ebp
retn
movzx edx [ ecx + edx * 2 + 0x32760 ]
shr edx 0x4
add eax [ ecx + edx * 4 + 0x30ea0 ]
pop esi
pop ebp
retn
sub_437620
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_437560
imul esi esi 0x110
add esi [ ebp + 0x8 ]
add esp 0x4
add eax [ ecx + esi * 4 + 0x37858 ]
pop esi
pop ebp
retn
sub_437650
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
lea eax [ esi + esi * 2 ]
add eax eax
mov edx [ ecx + eax * 8 + 0x6b8 ]
mov eax [ ecx + eax * 8 + 0x6bc ]
push edi
mov [ ebp - 0x4 ] eax
mov [ ecx + 0x68c ] esi
mov ebx [ ebp - 0x4 ]
lea eax [ edx + edx * 2 ]
add eax eax
mov edi edx
mov edx [ ecx + eax * 8 + 0x6bc ]
mov [ ebp - 0x4 ] edx
mov edx [ ecx + eax * 8 + 0x6b8 ]
mov [ ecx + eax * 8 + 0x6b8 ] esi
mov [ ecx + eax * 8 + 0x6bc ] ebx
mov esi edi
test edi edi
jne r-xdata
lea eax [ edx + edx * 2 ]
shl eax 0x4
add eax ecx
lea ebx [ edx - 0x1 ]
mov [ eax + 0x6bc ] 0xffffffff
mov [ eax + 0x6a8 ] 0x0
mov [ eax + 0x6b8 ] ebx
cmp [ edi + 0x6ac ] 0x0
je r-xdata
lea edi [ esi + esi * 2 ]
shl edi 0x4
add edi ecx
cmp [ edi + 0x6a8 ] 0x0
je r-xdata
mov eax [ ecx + 0x6bc ]
mov edx [ ebp + 0x8 ]
pop edi
mov [ edx ] eax
mov eax [ ecx + 0x6b8 ]
pop esi
mov [ ecx + 0x690 ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax + 0x678 ] 0x0
mov ebx [ edi + 0x6b0 ]
mov [ eax + 0x688 ] ebx
mov edi [ edi + 0x6b4 ]
mov [ eax + 0x68c ] edi
sub_437730
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ ebx + 0x690 ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x7c ] edi
cmp [ ebx + 0x68c ] ecx
je r-xdata
xor eax eax
push esi
mov [ ebx + 0x68c ] eax
mov [ ebx + 0x690 ] eax
cmp [ ebx + 0x31938 ] eax
jne r-xdata
lea edx [ ecx + ecx * 2 ]
add edx edx
mov eax [ ebx + edx * 8 + 0x6b8 ]
lea edx [ ebx + edx * 8 + 0x6a0 ]
sub eax ecx
mov ecx [ edx + 0x1c ]
mov [ edi ] ecx
mov edx [ edx + 0x18 ]
mov [ ebx + 0x690 ] edx
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x694 ]
mov edx [ ebx + 0x698 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x38 ] edx
lea eax [ ebp - 0x38 ]
push eax
mov esi ebx
call sub_437480
add esp 0x4
mov [ ebp - 0x2c ] eax
jmp r-xdata
cmp eax 0x111
jbe r-xdata
pop esi
mov [ edi ] 0xffffffff
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x69c ]
mov [ ebp - 0x60 ] eax
cmp eax 0x2
jae r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0xc ]
push eax
call ecx
lea esi [ eax - 0x1 ]
mov al [ esi ]
xor edi edi
add esp 0x4
xor edx edx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x25 ] al
mov [ ebp - 0x5c ] edi
jmp r-xdata
mov [ ebp - 0x60 ] 0x111
lea edi [ edx * 4 ]
mov eax [ edi + ebx + 0x3193c ]
mov ecx esi
sub ecx eax
mov [ ebp + edi - 0x14 ] eax
mov al [ ebp - 0x25 ]
dec ecx
cmp al [ ecx ]
jne r-xdata
mov [ ebp + edi - 0x24 ] 0x0
mov al [ esi + 0x1 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov eax [ ebp - 0x54 ]
mov edi [ ebp + eax * 4 - 0x24 ]
mov ecx [ ebx + 0x31934 ]
mov [ ebp - 0x5c ] edi
cmp edi ecx
jb r-xdata
mov eax 0x2
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x60 ] eax
jbe r-xdata
mov eax [ ebp - 0x2c ]
cmp eax ecx
jb r-xdata
mov edx [ ebp - 0x7c ]
mov [ edx ] eax
lea eax [ edi - 0x1 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x5c ]
mov [ ebp + edi - 0x24 ] eax
cmp eax [ ebp + ecx - 0x24 ]
jbe r-xdata
lea edx [ esi + 0x2 ]
sub ecx esi
mov edx esi
sub edx [ ebp - 0x14 ]
mov cl [ edx - 0x1 ]
mov [ ebp - 0x31 ] cl
cmp eax 0x2
jae r-xdata
mov edx [ ebp - 0x38 ]
mov ecx [ ebx + edx * 4 + 0x3109c ]
mov edx [ ebp - 0x7c ]
add ecx 0x4
mov [ edx ] ecx
lea ecx [ eax - 0x1 ]
test ecx ecx
je r-xdata
pop esi
mov eax edi
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
add [ ebx + 0x31938 ] eax
mov ecx [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call ecx
add esp 0x8
inc edx
mov [ ebp - 0x48 ] edx
cmp edx 0x4
jb r-xdata
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x5c ] edi
jmp r-xdata
mov edx [ ebp - 0x48 ]
inc eax
inc edx
mov [ ebp - 0x50 ] eax
cmp eax [ ebp - 0x60 ]
jb r-xdata
mov edx [ ebp - 0x74 ]
mov edi [ ebx + 0x3194c ]
mov eax edx
and eax [ ebx + 0x325a8 ]
mov [ ebx + 0x6a4 ] edi
movzx esi [ esi - 0x1 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebx + 0x32598 ]
mov ecx 0x8
sub cl al
shr esi cl
mov ecx [ ebx + 0x325a4 ]
and ecx edx
mov [ ebp - 0x3c ] ecx
mov ecx eax
mov eax [ ebp - 0x3c ]
shl eax cl
movzx ecx [ ebp - 0x25 ]
add esi eax
imul esi esi 0x600
add esi [ ebx + 0x325ac ]
cmp edi 0x7
jb r-xdata
cmp [ ebp - 0x25 ] cl
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop edi
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x18 ]
add [ ebx + 0x31938 ] ecx
push ecx
mov ecx [ ebx + 0x14 ]
push eax
call ecx
mov eax [ ebp - 0x2c ]
add esp 0x8
pop esi
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov al [ edx ]
cmp al [ ecx + edx ]
mov eax [ ebp - 0x50 ]
jne r-xdata
lea edx [ ebx + 0x30ea0 ]
call sub_436e00
lea eax [ ebx + 0x30ea0 ]
push eax
movzx eax [ ebp - 0x31 ]
push esi
call sub_436e40
add esp 0x8
jmp r-xdata
cmp edi 0x2
jae r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x5c ]
cmp ecx eax
jb r-xdata
mov eax edi
shl eax 0x4
add eax esi
movzx eax [ ebx + eax * 2 + 0x32790 ]
movzx esi [ ebx + edi * 2 + 0x32748 ]
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30ea0 ]
shr esi 0x4
add eax [ ebx + esi * 4 + 0x30ea0 ]
add eax ecx
cmp eax [ ebx + 0x6d0 ]
jae r-xdata
mov esi [ ebp - 0x30 ]
mov ecx edi
shl ecx 0x4
add ecx esi
movzx edx [ ebx + ecx * 2 + 0x325b0 ]
lea ecx [ ebx + ecx * 2 + 0x325b0 ]
shr edx 0x4
mov edx [ ebx + edx * 4 + 0x30ea0 ]
add edx eax
mov [ ebx + 0x6d0 ] edx
mov [ ebx + 0x6ec ] 0xffffffff
xor edx edx
mov [ ebx + 0x6d8 ] edx
movzx eax [ ecx ]
movzx ecx [ ebx + edi * 2 + 0x32730 ]
xor eax 0x7f0
xor ecx 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30ea0 ]
shr ecx 0x4
mov ecx [ ebx + ecx * 4 + 0x30ea0 ]
add ecx eax
mov [ ebp - 0x54 ] eax
mov al [ ebp - 0x25 ]
mov [ ebp - 0x3c ] ecx
cmp [ ebp - 0x31 ] al
jne r-xdata
mov eax [ ebp - 0x7c ]
pop esi
mov [ eax ] 0xffffffff
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4c ] eax
mov eax ecx
mov [ ebp - 0x4c ] ecx
jmp r-xdata
mov [ ebx + 0x6d0 ] eax
mov [ ebx + 0x6ec ] edx
mov [ ebx + 0x6d8 ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x6e8 ] edx
mov [ ebx + 0x6c0 ] ecx
mov ecx [ ebp - 0x10 ]
mov [ ebx + 0x6c4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebx + 0x6c8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x6cc ] ecx
lea ecx [ eax + eax * 2 ]
add ecx ecx
lea ecx [ ebx + ecx * 8 + 0x6a0 ]
mov ecx [ ebx + 0x6ec ]
mov edx [ ebp - 0x7c ]
pop esi
mov [ edx ] ecx
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
mov esp ebp
pop ebp
retn
cmp eax 0x2
jae r-xdata
mov [ ecx ] 0x40000000
dec eax
sub ecx 0x30
cmp eax 0x2
jae r-xdata
xor edi edi
inc edi
cmp edi 0x4
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov edx [ ebx + 0x3194c ]
mov eax edi
mov ecx ebx
call sub_437560
add eax [ ebp - 0x3c ]
lea ecx [ esi + esi * 2 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x30 ]
imul eax eax 0x110
add eax esi
add esp 0x4
add ecx ecx
lea eax [ ebx + eax * 4 + 0x37858 ]
lea ecx [ ebx + ecx * 8 + 0x6bc ]
mov esi [ ebp + edi * 4 - 0x24 ]
cmp esi 0x2
jb r-xdata
mov edx [ ebx + 0x3194c ]
movzx eax [ ebx + edx * 2 + 0x32730 ]
mov ecx [ ebp - 0x24 ]
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30ea0 ]
add eax [ ebp - 0x54 ]
mov [ ebp - 0x3c ] eax
cmp ecx 0x2
jb r-xdata
dec esi
sub eax 0x4
sub ecx 0x30
cmp esi 0x2
jae r-xdata
mov [ ecx - 0x1c ] edx
xor edx edx
mov [ ecx - 0x4 ] edx
mov [ ecx ] edi
mov [ ecx - 0x14 ] edx
mov ecx 0x2
inc ecx
jmp r-xdata
mov edx [ eax ]
add edx [ ebp - 0x5c ]
cmp edx [ ecx - 0x1c ]
jae r-xdata
mov edi 0x1
mov [ ebp - 0x6c ] edi
cmp [ ebp - 0x4c ] edi
je r-xdata
xor edx edx
mov [ ebp - 0x2c ] edx
cmp ecx [ ebx + 0x310a0 ]
jbe r-xdata
mov [ ebp - 0x50 ] ecx
cmp ecx [ ebp - 0x2c ]
ja r-xdata
mov edx [ ebp - 0x7c ]
push edx
mov eax edi
mov ecx ebx
call sub_437650
add esp 0x4
lea esp [ esp ]
mov esi [ ebp - 0x30 ]
imul esi esi 0x110
add esi ecx
lea esi [ ebx + esi * 4 + 0x33010 ]
mov [ ebp - 0x48 ] esi
lea esi [ ecx + ecx * 2 ]
add esi esi
lea edi [ ebx + esi * 8 + 0x6bc ]
add edx 0x2
cmp ecx [ ebx + edx * 4 + 0x310a0 ]
ja r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x50 ]
mov [ ebx + 0x698 ] eax
mov [ ebx + 0x694 ] ecx
inc [ ebp - 0x74 ]
lea esi [ edi + edi * 2 ]
shl esi 0x4
mov ecx [ esi + ebx + 0x6a8 ]
mov eax [ esi + ebx + 0x6b8 ]
add esi ebx
mov [ ebp - 0x54 ] esi
test ecx ecx
je r-xdata
cmp esi 0x80
jae r-xdata
mov eax 0x3
mov [ ebp - 0x2c ] edx
lea ecx [ eax + eax * 2 ]
add ecx ecx
mov edx [ ebx + ecx * 8 + 0x6a4 ]
dec eax
cmp [ esi + 0x6ac ] 0x0
je r-xdata
mov ecx 0x1ffff
sub ecx esi
shr ecx 0x1f
neg ecx
and ecx 0xa
add ecx 0x6
mov edi esi
shr edi cl
shl eax 0x5
add eax ecx
mov ecx esi
movzx edi [ edi + ebx + 0x306a0 ]
lea eax [ edi + eax * 2 + 0xc654 ]
mov eax [ ebx + eax * 4 ]
mov edi [ ebp - 0x5c ]
and ecx 0xf
add eax [ ebx + ecx * 4 + 0x32550 ]
mov ecx [ ebp - 0x50 ]
add edx eax
shl eax 0x7
add eax esi
add edx [ ebx + eax * 4 + 0x31d50 ]
jmp r-xdata
cmp [ esi + 0x6a8 ] 0x0
je r-xdata
cmp [ esi + 0x6bc ] 0x0
jne r-xdata
lea edx [ eax + eax * 2 ]
add edx edx
mov ecx [ ebx + edx * 8 + 0x6a4 ]
mov edx [ ecx * 4 + r--data ]
jmp r-xdata
mov ecx [ esi + 0x6b0 ]
lea ecx [ ecx + ecx * 2 ]
add ecx ecx
cmp [ esi + 0x6b4 ] 0x4
mov ecx [ ebx + ecx * 8 + 0x6a4 ]
jae r-xdata
mov eax [ ebp - 0x2c ]
cmp ecx [ ebx + eax * 4 + 0x310a0 ]
jne r-xdata
xor eax eax
add esi 0x4
mov [ edi - 0x1c ] edx
mov [ edi - 0x4 ] eax
mov [ edi ] esi
mov [ edi - 0x14 ] eax
cmp edx [ edi - 0x1c ]
jae r-xdata
mov ecx [ esi + 0x6bc ]
mov [ ebp - 0x2c ] ecx
cmp ecx 0x4
jae r-xdata
cmp [ esi + 0x6ac ] 0x0
je r-xdata
mov eax [ edx * 4 + r--data ]
mov [ ebp - 0x58 ] eax
jmp r-xdata
mov edx [ edx * 4 + r--data ]
mov [ ebp - 0x58 ] edx
jmp r-xdata
lea ecx [ edi - 0x1 ]
cmp eax ecx
jne r-xdata
mov ecx [ ecx * 4 + r--data ]
mov edx [ ecx * 4 + r--data ]
jmp r-xdata
mov ecx [ ecx * 4 + r--data ]
mov edx [ ecx * 4 + r--data ]
jmp r-xdata
add [ ebp - 0x48 ] 0x4
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x2c ]
inc ecx
mov [ ebp - 0x50 ] ecx
add edi 0x30
jmp r-xdata
add eax 0x2
mov [ ebp - 0x2c ] eax
cmp eax [ ebp - 0x38 ]
je r-xdata
mov edx [ edx * 4 + r--data ]
mov ecx [ ebp - 0x2c ]
mov ecx [ edx * 4 + r--data ]
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp - 0x2c ]
jmp r-xdata
mov ecx [ esi + 0x6b4 ]
mov eax [ esi + 0x6b0 ]
mov edx [ edx * 4 + r--data ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ esi + 0x6a4 ] edx
mov edx [ ebp - 0xc ]
mov [ esi + 0x6c0 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0x6c4 ] ecx
mov ecx [ esi + 0x6a0 ]
mov [ esi + 0x6c8 ] edx
mov [ esi + 0x6cc ] eax
mov edx [ ebx + 0x18 ]
mov eax [ ebx + 0xc ]
push edx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x38 ] 0x0
call eax
movzx ecx [ eax - 0x1 ]
lea edx [ eax - 0x1 ]
mov eax edx
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x25 ] cl
movzx ecx [ eax - 0x1 ]
dec eax
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x74 ]
and eax [ ebx + 0x325a8 ]
mov [ ebp - 0x31 ] cl
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
shl ecx 0x4
add eax ecx
mov [ ebp - 0x30 ] eax
movzx eax [ ebx + eax * 2 + 0x325b0 ]
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30ea0 ]
add eax [ ebp - 0x48 ]
mov [ ebp - 0x68 ] edx
movzx edx [ edx - 0x1 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebx + 0x32598 ]
mov ecx 0x8
sub cl al
shr edx cl
mov ecx [ ebx + 0x325a4 ]
and ecx [ ebp - 0x74 ]
add esp 0x4
mov [ ebp - 0x3c ] ecx
mov ecx eax
mov eax [ ebp - 0x3c ]
shl eax cl
add edx eax
imul edx edx 0x600
add edx [ ebx + 0x325ac ]
cmp [ ebp - 0x58 ] 0x7
jb r-xdata
mov esi [ ebx + edx * 4 + 0x310a4 ]
mov edx [ ebp - 0x48 ]
mov edx [ edx ]
add edx eax
mov [ ebp - 0x5c ] edi
lea eax [ ecx - 0x2 ]
cmp ecx 0x5
jb r-xdata
mov eax [ edx + 0x24 ]
add ecx 0xfffffffc
mov [ ebp - 0x14 ] ecx
mov ecx [ edx + 0x20 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ edx + 0x28 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ edx + ecx * 4 + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax 0x1
cmp ecx eax
jb r-xdata
lea eax [ eax + eax * 2 ]
add eax eax
lea edx [ ebx + eax * 8 + 0x6a0 ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x58 ] edx
movzx eax [ ebp - 0x25 ]
or eax 0x100
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x40 ] eax
jmp r-xdata
movzx ecx [ ebp - 0x25 ]
lea eax [ ebx + 0x30ea0 ]
push eax
movzx eax [ ebp - 0x31 ]
push edx
call sub_436e40
add esp 0x8
jmp r-xdata
mov ecx 0x4
lea edi [ ebp + eax * 4 - 0x14 ]
lea esi [ edx + eax * 4 + 0x20 ]
sub ecx eax
[ edi ] [ esi ]
mov eax [ ebp - 0x2c ]
inc eax
lea esi [ edx + 0x20 ]
lea edi [ ebp - 0x10 ]
[ edi ] [ esi ]
cmp eax 0x4
jae r-xdata
mov ecx eax
shr eax 0x7
and eax 0x1
shr ecx 0x8
movzx ecx [ edx + ecx * 2 ]
neg eax
sar eax 0x4
and eax 0x7f
shr ecx 0x4
xor ecx eax
mov eax ecx
mov ecx [ ebp - 0x44 ]
add ecx [ ebx + eax * 4 + 0x30ea0 ]
mov eax [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] eax
cmp eax 0x10000
jb r-xdata
mov edx [ ebp - 0x2c ]
add edx eax
mov [ ebp - 0x2c ] edx
cmp edx [ esi + 0x6d0 ]
jae r-xdata
mov esi [ ebp - 0x54 ]
mov edi [ ebp - 0x6c ]
mov eax ecx
mov edx [ ebp - 0x30 ]
movzx eax [ ebx + edx * 2 + 0x325b0 ]
mov ecx [ ebp - 0x58 ]
movzx edx [ ebx + ecx * 2 + 0x32730 ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30ea0 ]
add eax [ ebp - 0x48 ]
xor edx 0x7f0
shr edx 0x4
mov ecx [ ebx + edx * 4 + 0x30ea0 ]
add ecx eax
mov [ ebp - 0x80 ] eax
mov al [ ebp - 0x31 ]
mov [ ebp - 0x84 ] ecx
cmp al [ ebp - 0x25 ]
jne r-xdata
mov [ esi + 0x6d0 ] edx
mov [ esi + 0x6e8 ] edi
mov [ esi + 0x6ec ] 0xffffffff
mov [ esi + 0x6d8 ] 0x0
mov [ ebp - 0x38 ] 0x1
mov ecx [ ebx + 0x69c ]
mov eax 0xfff
sub eax edi
mov [ ebp - 0x48 ] ecx
cmp eax ecx
jae r-xdata
cmp [ esi + 0x6e8 ] edi
jae r-xdata
cmp ecx 0x2
jb r-xdata
mov ecx eax
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x58 ]
movzx eax [ ebx + edx * 2 + 0x32748 ]
mov edx [ ebp - 0x30 ]
movzx edx [ ebx + edx * 2 + 0x32790 ]
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30ea0 ]
shr edx 0x4
add eax [ ebx + edx * 4 + 0x30ea0 ]
add eax ecx
cmp eax [ esi + 0x6d0 ]
ja r-xdata
cmp [ esi + 0x6ec ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x6c ] edi
cmp edi [ ebp - 0x4c ]
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov esi [ ebx + 0x31934 ]
mov [ ebp - 0x60 ] ecx
cmp ecx esi
jbe r-xdata
mov [ esi + 0x6d0 ] eax
xor eax eax
mov [ esi + 0x6e8 ] edi
mov [ esi + 0x6ec ] eax
mov [ esi + 0x6d8 ] eax
mov [ ebp - 0x38 ] 0x1
lea ecx [ ebp - 0x5c ]
push ecx
mov esi ebx
call sub_437480
add esp 0x4
mov [ ebp - 0x50 ] eax
cmp eax [ ebx + 0x31934 ]
jae r-xdata
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x44 ] 0x2
mov [ ebp - 0x2c ] 0x0
lea ebx [ ebx ]
mov al [ ebp - 0x25 ]
cmp [ ebp - 0x31 ] al
je r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
cmp eax 0x4
jb r-xdata
mov edx [ ebp - 0x38 ]
mov eax esi
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x44 ] eax
cmp eax ecx
jbe r-xdata
mov esi [ ebp - 0x68 ]
mov ecx [ ebp - 0x2c ]
mov dl [ esi ]
mov eax esi
sub eax [ ebp + ecx * 4 - 0x14 ]
dec eax
mov [ ebp - 0x38 ] eax
cmp dl [ eax ]
jne r-xdata
mov edx [ ebp - 0x50 ]
mov ecx [ ebp - 0x60 ]
cmp edx ecx
jbe r-xdata
mov esi 0x2
mov [ ebp - 0x30 ] esi
cmp [ ebp - 0x60 ] esi
jbe r-xdata
mov esi 0x1
cmp eax esi
jbe r-xdata
mov eax ecx
mov [ ebp - 0x44 ] ecx
cmp edx [ ebp - 0x44 ]
jb r-xdata
mov edx ecx
xor eax eax
mov [ ebp - 0x50 ] edx
cmp ecx [ ebx + 0x310a0 ]
jbe r-xdata
mov edx [ ebp - 0x4c ]
lea eax [ esi + edi ]
cmp edx eax
jae r-xdata
mov ecx [ ebp - 0x38 ]
mov edx eax
lea eax [ edx + 0x2 ]
sub ecx edx
dec esi
mov [ ebp - 0x38 ] esi
cmp esi 0x2
jb r-xdata
mov edx [ ebp - 0x68 ]
mov ecx [ ebp - 0x64 ]
lea eax [ edx + 0x1 ]
sub ecx edx
mov ecx [ ebp - 0x58 ]
movzx edx [ ebx + ecx * 2 + 0x32730 ]
mov ecx [ ebp - 0x4c ]
shr edx 0x4
mov eax [ ebx + edx * 4 + 0x30ea0 ]
add eax [ ebp - 0x80 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x50 ]
add eax edi
cmp ecx eax
jae r-xdata
mov [ ebx + eax * 4 + 0x310a0 ] ecx
add eax 0x2
mov [ ebp - 0x5c ] eax
lea ebx [ ebx ]
mov edx [ ebp - 0x54 ]
mov esi [ ebp - 0x30 ]
mov eax [ ebp - 0x2c ]
push edx
mov edx [ ebp - 0x58 ]
mov ecx ebx
mov [ ebp - 0x3c ] esi
call sub_437560
mov ecx [ ebp - 0x54 ]
add eax [ ebp - 0x84 ]
imul ecx ecx 0x110
mov [ ebp - 0x78 ] ecx
mov edx esi
add ecx edx
lea ecx [ ebx + ecx * 4 + 0x37858 ]
mov [ ebp - 0x40 ] ecx
lea ecx [ edx + edi ]
lea edx [ ecx + ecx * 2 ]
add esp 0x4
add edx edx
mov [ ebp - 0x70 ] eax
lea ecx [ ebx + edx * 8 + 0x6bc ]
lea ecx [ edx + edx * 2 ]
add ecx ecx
sub eax edx
add edx eax
lea ecx [ ebx + ecx * 8 + 0x6a0 ]
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x30 ] esi
inc esi
inc eax
cmp esi [ ebp - 0x60 ]
jb r-xdata
mov eax [ ebp - 0x58 ]
mov eax [ eax * 4 + r--data ]
mov ecx [ ebp - 0x74 ]
mov edx eax
shl edx 0x4
inc ecx
and ecx [ ebx + 0x325a8 ]
mov [ ebp - 0x40 ] eax
movzx eax [ ebx + eax * 2 + 0x32730 ]
add edx ecx
mov [ ebp - 0x3c ] edx
movzx edx [ ebx + edx * 2 + 0x325b0 ]
xor edx 0x7f0
xor eax 0x7f0
shr edx 0x4
shr eax 0x4
mov [ ebp - 0x64 ] edx
mov edx [ ebx + eax * 4 + 0x30ea0 ]
mov eax [ ebp - 0x64 ]
add edx [ ebx + eax * 4 + 0x30ea0 ]
mov eax [ ebp - 0x4c ]
add edx [ ebp - 0x2c ]
lea esi [ esi + edi + 0x1 ]
mov [ ebp - 0x44 ] esi
cmp eax esi
jae r-xdata
inc esi
inc eax
cmp esi [ ebp - 0x44 ]
jb r-xdata
mov edx [ ebp - 0x44 ]
xor eax eax
mov [ ebp - 0x30 ] eax
cmp edx [ ebx + 0x310a0 ]
jbe r-xdata
lea edx [ ecx + ecx * 2 ]
add edx edx
sub eax ecx
add ecx eax
lea edx [ ebx + edx * 8 + 0x6a0 ]
mov [ ebp - 0x4c ] ecx
lea esp [ esp ]
add eax 0x2
cmp ecx [ ebx + eax * 4 + 0x310a0 ]
ja r-xdata
dec [ ebp - 0x30 ]
sub [ ebp - 0x40 ] 0x4
sub ecx 0x30
cmp [ ebp - 0x30 ] 0x2
jae r-xdata
mov [ ecx - 0x1c ] edx
mov edx [ ebp - 0x2c ]
mov [ ecx - 0x4 ] edi
mov [ ecx ] edx
mov [ ecx - 0x14 ] 0x0
add ecx 0x30
dec eax
mov [ ecx ] 0x40000000
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx + eax ]
jne r-xdata
mov eax [ ebp - 0x3c ]
imul ecx ecx 0x110
movzx eax [ ebx + eax * 2 + 0x32790 ]
mov esi [ ebp - 0x40 ]
movzx esi [ ebx + esi * 2 + 0x32748 ]
add ecx [ ebp - 0x38 ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30ea0 ]
shr esi 0x4
add eax [ ebx + esi * 4 + 0x30ea0 ]
add eax [ ebx + ecx * 4 + 0x37858 ]
mov ecx [ ebp - 0x44 ]
lea ecx [ ecx + ecx * 2 ]
add ecx ecx
add eax edx
cmp eax [ ebx + ecx * 8 + 0x6a0 ]
lea ecx [ ebx + ecx * 8 + 0x6a0 ]
jae r-xdata
lea esi [ eax + eax * 2 ]
add esi esi
lea esi [ ebx + esi * 8 + 0x6a0 ]
mov [ ebp - 0x64 ] esi
mov esi [ ebp - 0x44 ]
sub esi eax
add eax esi
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x64 ]
mov dl [ eax ]
cmp dl [ ecx + eax ]
jne r-xdata
mov eax [ ebx + eax * 4 + 0x310a4 ]
mov ecx 0x1ffff
sub ecx eax
shr ecx 0x1f
neg ecx
and ecx 0xa
add ecx 0x6
mov esi eax
shr esi cl
mov [ ebp - 0x50 ] eax
movzx esi [ esi + ebx + 0x306a0 ]
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x54 ]
imul ecx ecx 0x110
add ecx edx
lea ecx [ ebx + ecx * 4 + 0x33010 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ edx + edi ]
lea esi [ edx + 0x1 ]
lea edx [ ecx + ecx * 2 ]
add edx edx
lea ecx [ ebx + edx * 8 + 0x6bc ]
mov [ ebp - 0x44 ] ecx
lea esp [ esp ]
add edx 0x30
dec eax
mov [ edx ] 0x40000000
jne r-xdata
mov edx [ ebp - 0x40 ]
mov edx [ edx ]
add edx eax
cmp edx [ ecx - 0x1c ]
jae r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov [ ecx ] eax
xor eax eax
lea edx [ edi + 0x1 ]
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x8 ] 0x1
mov [ ecx + 0xc ] eax
add eax 0x30
dec esi
mov [ eax ] 0x40000000
jne r-xdata
cmp eax 0x80
jae r-xdata
mov ecx 0x3
add eax 0x2
cmp edx [ ebx + eax * 4 + 0x310a0 ]
ja r-xdata
mov [ ebp - 0x30 ] eax
mov ecx [ ebx + 0x31934 ]
mov edx [ ebp - 0x48 ]
lea eax [ esi + 0x1 ]
add ecx eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x40 ] ecx
cmp ecx edx
jbe r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x44 ] eax
shl ecx 0x6
add ecx [ ebp - 0x60 ]
mov edx eax
mov ecx [ ebx + ecx * 4 + 0x31950 ]
and edx 0xf
add ecx [ ebx + edx * 4 + 0x32550 ]
mov edx [ ebp - 0x38 ]
add edx ecx
shl ecx 0x7
add ecx eax
add edx [ ebx + ecx * 4 + 0x31d50 ]
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx edx
mov [ ebp - 0x40 ] edx
mov edx [ ebp - 0x30 ]
lea ecx [ esi - 0x1 ]
cmp ecx [ ebx + edx * 4 + 0x310a0 ]
jne r-xdata
mov [ ecx - 0x1c ] edx
lea edx [ eax + 0x4 ]
mov [ ecx - 0x4 ] edi
mov [ ecx ] edx
mov [ ecx - 0x14 ] 0x0
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x38 ] edx
cmp edx [ ecx - 0x1c ]
jae r-xdata
or ecx 0xffffffff
sub ecx esi
add eax ecx
mov [ ebp - 0x30 ] eax
cmp eax 0x2
jb r-xdata
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x38 ]
add ecx eax
sub edx [ ebp - 0x68 ]
mov edi edi
add [ ebp - 0x54 ] 0x4
add [ ebp - 0x44 ] 0x30
inc esi
jmp r-xdata
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x48 ]
sub ecx eax
mov eax [ ebx + 0x31934 ]
add eax esi
dec ecx
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x40 ] eax
cmp eax edx
jbe r-xdata
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebx + 0x32598 ]
add eax esi
mov [ ebp - 0x40 ] eax
lea eax [ ebx + 0x30ea0 ]
push eax
movzx eax [ esi + ecx ]
mov ecx [ ebp - 0x68 ]
movzx edi [ esi + ecx ]
movzx esi [ esi + ecx - 0x1 ]
mov ecx 0x8
sub cl dl
shr esi cl
mov ecx [ ebp - 0x40 ]
and ecx [ ebx + 0x325a4 ]
mov [ ebp - 0x64 ] ecx
mov ecx edx
mov edx [ ebp - 0x64 ]
shl edx cl
mov ecx edi
add esi edx
imul esi esi 0x600
add esi [ ebx + 0x325ac ]
push esi
call sub_436e40
mov edx [ ebp - 0x58 ]
mov edx [ edx * 4 + r--data ]
mov edi [ ebx + 0x325a8 ]
mov ecx [ ebp - 0x40 ]
and ecx edi
mov esi edx
mov edx [ edx * 4 + r--data ]
shl esi 0x4
add ecx esi
movzx ecx [ ebx + ecx * 2 + 0x325b0 ]
mov esi [ ebp - 0x3c ]
shr ecx 0x4
add eax [ ebx + ecx * 4 + 0x30ea0 ]
mov ecx [ ebp - 0x78 ]
add ecx esi
add eax [ ebx + ecx * 4 + 0x37858 ]
mov ecx [ ebp - 0x74 ]
add eax [ ebp - 0x70 ]
lea ecx [ ecx + esi + 0x1 ]
and ecx edi
mov edi edx
shl edi 0x4
add edi ecx
mov [ ebp - 0x64 ] edx
movzx edx [ ebx + edx * 2 + 0x32730 ]
mov [ ebp - 0x78 ] edi
movzx edi [ ebx + edi * 2 + 0x325b0 ]
xor edx 0x7f0
shr edx 0x4
mov edx [ ebx + edx * 4 + 0x30ea0 ]
xor edi 0x7f0
shr edi 0x4
add edx [ ebx + edi * 4 + 0x30ea0 ]
mov edi [ ebp - 0x6c ]
add edx eax
mov eax [ ebp - 0x30 ]
add eax esi
lea eax [ eax + edi + 0x1 ]
mov edi [ ebp - 0x4c ]
add esp 0x8
mov [ ebp - 0x3c ] eax
cmp edi eax
jae r-xdata
inc eax
inc ecx
mov [ ebp - 0x30 ] eax
cmp eax [ ebp - 0x40 ]
jb r-xdata
mov edx [ ebp - 0x54 ]
mov edx [ edx ]
add edx [ ebp - 0x80 ]
lea ecx [ esi - 0x1 ]
cmp ecx 0x5
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] edx
lea ecx [ esi - 0x3 ]
jb r-xdata
cmp esi eax
jae r-xdata
mov eax edx
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x78 ]
imul ecx ecx 0x110
movzx eax [ ebx + eax * 2 + 0x32790 ]
mov edi [ ebp - 0x64 ]
movzx edi [ ebx + edi * 2 + 0x32748 ]
add ecx [ ebp - 0x30 ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30ea0 ]
shr edi 0x4
add eax [ ebx + edi * 4 + 0x30ea0 ]
mov edi [ ebp - 0x6c ]
add eax [ ebx + ecx * 4 + 0x37858 ]
mov ecx [ ebp - 0x3c ]
lea ecx [ ecx + ecx * 2 ]
add ecx ecx
add eax edx
cmp eax [ ebx + ecx * 8 + 0x6a0 ]
lea ecx [ ebx + ecx * 8 + 0x6a0 ]
jae r-xdata
lea edi [ edi + edi * 2 ]
add edi edi
lea edi [ ebx + edi * 8 + 0x6a0 ]
mov [ ebp - 0x70 ] edi
mov edi [ ebp - 0x4c ]
sub eax edi
add edi eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x70 ]
mov al [ ecx ]
cmp al [ ecx + edx ]
mov eax [ ebp - 0x30 ]
jne r-xdata
or edx 0xffffffff
lea eax [ esi - 0x1 ]
sub edx eax
mov eax [ ebp - 0x2c ]
add eax edx
mov [ ebp - 0x2c ] eax
cmp eax 0x2
jb r-xdata
mov edx [ ebp - 0x68 ]
sub edx ecx
lea eax [ ecx + esi ]
mov [ ebp - 0x70 ] edx
jmp r-xdata
mov [ ecx ] eax
mov eax 0x1
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x2c ]
lea edx [ esi + edi + 0x1 ]
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] 0x0
mov [ ecx + 0x10 ] edi
mov [ ecx + 0x14 ] eax
add edi 0x30
dec eax
mov [ edi ] 0x40000000
jne r-xdata
mov eax [ ebp - 0x30 ]
add eax 0x2
mov [ ebp - 0x30 ] eax
cmp eax [ ebp - 0x5c ]
je r-xdata
mov edx [ ebp - 0x74 ]
mov eax [ ebx + 0x325a8 ]
lea edx [ edx + esi - 0x1 ]
and eax edx
mov [ ebp - 0x78 ] eax
lea eax [ ebx + 0x30ea0 ]
push eax
movzx eax [ ecx + esi - 0x1 ]
mov ecx [ ebp - 0x68 ]
movzx edi [ esi + ecx - 0x1 ]
movzx esi [ ecx + esi - 0x2 ]
mov [ ebp - 0x70 ] edx
mov edx [ ebx + 0x32598 ]
mov ecx 0x8
sub cl dl
mov edx [ ebx + 0x325a4 ]
and edx [ ebp - 0x70 ]
shr esi cl
mov ecx [ ebx + 0x32598 ]
shl edx cl
mov ecx edi
add esi edx
imul esi esi 0x600
add esi [ ebx + 0x325ac ]
push esi
call sub_436e40
mov ecx [ ebp - 0x58 ]
mov edx [ ecx * 4 + r--data ]
mov ecx [ ebp - 0x78 ]
mov esi edx
mov edx [ edx * 4 + r--data ]
movzx edi [ ebx + edx * 2 + 0x32730 ]
shl esi 0x4
add esi ecx
movzx esi [ ebx + esi * 2 + 0x325b0 ]
shr esi 0x4
add eax [ ebx + esi * 4 + 0x30ea0 ]
mov esi edx
add eax [ ebp - 0x38 ]
shl esi 0x4
inc ecx
and ecx [ ebx + 0x325a8 ]
xor edi 0x7f0
add esi ecx
mov [ ebp - 0x78 ] esi
movzx esi [ ebx + esi * 2 + 0x325b0 ]
xor esi 0x7f0
shr esi 0x4
mov [ ebp - 0x84 ] edx
mov edx [ ebx + esi * 4 + 0x30ea0 ]
mov esi [ ebp - 0x3c ]
shr edi 0x4
add edx [ ebx + edi * 4 + 0x30ea0 ]
mov edi [ ebp - 0x6c ]
add edx eax
mov eax [ ebp - 0x2c ]
lea eax [ eax + esi - 0x1 ]
lea eax [ eax + edi + 0x1 ]
mov edi [ ebp - 0x4c ]
add esp 0x8
mov [ ebp - 0x64 ] eax
cmp edi eax
jae r-xdata
mov dl [ edx + eax ]
cmp dl [ eax ]
jne r-xdata
mov eax [ ebx + eax * 4 + 0x310a4 ]
mov [ ebp - 0x50 ] eax
cmp eax 0x80
jb r-xdata
mov eax [ ebp - 0x78 ]
imul ecx ecx 0x110
movzx eax [ ebx + eax * 2 + 0x32790 ]
mov edi [ ebp - 0x84 ]
movzx edi [ ebx + edi * 2 + 0x32748 ]
add ecx [ ebp - 0x2c ]
xor eax 0x7f0
shr eax 0x4
mov eax [ ebx + eax * 4 + 0x30ea0 ]
shr edi 0x4
add eax [ ebx + edi * 4 + 0x30ea0 ]
mov edi [ ebp - 0x6c ]
add eax [ ebx + ecx * 4 + 0x37858 ]
mov ecx [ ebp - 0x64 ]
lea ecx [ ecx + ecx * 2 ]
add ecx ecx
add eax edx
cmp eax [ ebx + ecx * 8 + 0x6a0 ]
lea ecx [ ebx + ecx * 8 + 0x6a0 ]
jae r-xdata
lea edi [ edi + edi * 2 ]
add edi edi
lea edi [ ebx + edi * 8 + 0x6a0 ]
mov [ ebp - 0x70 ] edi
mov edi [ ebp - 0x4c ]
sub eax edi
add edi eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x70 ]
lea ecx [ ecx ]
mov edx [ ebp - 0x2c ]
inc edx
inc eax
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x78 ] eax
cmp edx [ ebp - 0x40 ]
jb r-xdata
mov edi [ ebp - 0x6c ]
mov ecx 0x1ffff
sub ecx eax
shr ecx 0x1f
neg ecx
and ecx 0xa
add ecx 0x6
mov edx eax
shr edx cl
movzx edx [ edx + ebx + 0x306a0 ]
lea ecx [ edx + ecx * 2 ]
mov [ ebp - 0x60 ] ecx
mov [ ecx ] eax
mov eax 0x1
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov eax [ ebp - 0x50 ]
lea edx [ esi + edi ]
add eax 0x4
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] 0x0
mov [ ecx + 0x10 ] edi
mov [ ecx + 0x14 ] eax
add edi 0x30
dec eax
mov [ edi ] 0x40000000
jne r-xdata
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0x70 ]
sub_438970
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x31938 ] edi
jne r-xdata
mov ecx [ esi + 0x694 ]
mov edx [ esi + 0x698 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
lea eax [ ebp - 0x8 ]
push eax
call sub_437480
add esp 0x4
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp eax 0x111
jbe r-xdata
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x69c ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ecx ] 0xffffffff
cmp eax 0x2
jae r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esi + 0xc ]
push edx
call eax
add esp 0x4
dec eax
xor edx edx
lea ecx [ esi + 0x3193c ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x18 ] ecx
push ebx
lea ebx [ ebx ]
mov [ ebp - 0x14 ] 0x111
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov bl [ eax + 0x1 ]
cmp bl [ ecx + 0x1 ]
jne r-xdata
mov edi [ ebp - 0x18 ]
mov bl [ eax ]
mov ecx eax
sub ecx [ edi ]
dec ecx
cmp bl [ ecx ]
jne r-xdata
cmp ebx [ esi + 0x31934 ]
jb r-xdata
mov edi 0x2
cmp [ ebp - 0x14 ] edi
jbe r-xdata
mov [ ebp - 0x8 ] 0x0
cmp ebx 0x2
jb r-xdata
mov ecx [ esi + ecx * 4 + 0x3109c ]
mov edx [ ebp + 0xc ]
add ecx 0x4
lea eax [ ebx - 0x1 ]
mov [ edx ] ecx
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
cmp edi [ esi + 0x31934 ]
jae r-xdata
lea edx [ eax + 0x2 ]
sub ecx eax
mov eax [ ebp - 0x10 ]
cmp eax 0x2
jb r-xdata
mov edx [ esi + ecx * 4 + 0x3109c ]
mov [ ebp - 0x8 ] edx
cmp ecx 0x2
jbe r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
add [ esi + 0x31938 ] eax
mov ecx [ esi + 0x14 ]
push eax
mov eax [ esi + 0x18 ]
push eax
call ecx
add esp 0x8
mov eax ebx
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
lea eax [ edi - 0x1 ]
mov [ ecx ] edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp edi [ ebp - 0x10 ]
jbe r-xdata
mov edx [ ebp - 0xc ]
inc edi
inc edx
cmp edi [ ebp - 0x14 ]
jb r-xdata
cmp ebx 0x2
jb r-xdata
lea ecx [ eax + 0x1 ]
cmp ecx ebx
jae r-xdata
cmp ebx 0x2
jne r-xdata
lea eax [ esi + ecx * 4 + 0x31094 ]
lea esp [ esp ]
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x18 ]
add [ esi + 0x31938 ] eax
push eax
mov eax [ esi + 0x14 ]
push edx
call eax
add esp 0x8
add [ ebp - 0x18 ] 0x4
inc edx
mov [ ebp - 0xc ] edx
cmp edx 0x4
jb r-xdata
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x10 ] edi
jmp r-xdata
mov bl [ edx ]
cmp bl [ ecx + edx ]
jne r-xdata
mov eax 0x1
cmp [ ebp - 0x14 ] 0x2
jbe r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
lea ecx [ eax - 0x1 ]
test ecx ecx
je r-xdata
lea edx [ eax + 0x2 ]
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x80
jb r-xdata
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x8 ]
shr edx 0x7
cmp edx [ eax ]
jbe r-xdata
lea edi [ esi + 0x698 ]
push edi
call sub_437480
add esp 0x4
mov [ esi + 0x694 ] eax
cmp eax 0x2
jb r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x14 ]
add [ esi + 0x31938 ] ecx
push ecx
push edx
call eax
mov eax [ ebp - 0x10 ]
add esp 0x8
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ eax + 0x3 ]
cmp ecx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x200
jae r-xdata
mov ebx 0x1
mov [ ebp - 0x4 ] ebx
mov edx [ eax ]
mov ebx [ eax - 0x4 ]
sub eax 0x8
sub ecx 0x2
mov [ ebp - 0x8 ] edx
cmp ecx 0x2
ja r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0xc ]
push ecx
call edx
lea ecx [ esi + 0x3193c ]
add esp 0x4
dec eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] ecx
mov ecx [ edi ]
mov edx [ esi + ecx * 4 + 0x3109c ]
cmp eax ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x8000
jb r-xdata
mov edx [ eax - 0x4 ]
inc edx
cmp ebx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
add [ ebp - 0x18 ] 0x4
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx 0x4
jb r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
lea ecx [ ebx + 0x1 ]
cmp eax ecx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jb r-xdata
mov edx [ ebp - 0x18 ]
mov ecx eax
sub ecx [ edx ]
mov dl [ eax ]
dec ecx
cmp dl [ ecx ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add eax 0x4
mov [ ecx ] eax
lea eax [ ebx - 0x2 ]
test eax eax
je r-xdata
lea esi [ ebx - 0x1 ]
mov edi 0x2
cmp esi edi
jbe r-xdata
ja r-xdata
mov edi edx
shr edi 0x7
cmp edi [ ebp - 0x8 ]
jbe r-xdata
mov edx [ esi + 0x18 ]
add [ esi + 0x31938 ] eax
push eax
mov eax [ esi + 0x14 ]
push edx
call eax
add esp 0x8
lea edx [ eax + 0x2 ]
sub ecx eax
lea ecx [ ecx ]
inc eax
cmp eax ebx
jb r-xdata
cmp eax ecx
cmp edi esi
jae r-xdata
inc edi
inc edx
cmp edi esi
jb r-xdata
cmp ebx 0x3
jb r-xdata
mov ebx [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov bl [ edx ]
cmp bl [ ecx + edx ]
jne r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x7
cmp eax edx
ja r-xdata
sub_438cb0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebx + 0x3194c ]
mov edx [ ebx + 0x3bcb0 ]
shl eax 0x4
add eax [ ebp + 0x8 ]
push esi
lea esi [ ebx + eax * 2 + 0x325b0 ]
movzx eax [ esi ]
push edi
lea edi [ ebx + 0x3bcb0 ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ edi + 0x8 ] ecx
adc [ edi + 0xc ] 0x0
sub edx ecx
mov ecx eax
shr ecx 0x5
sub eax ecx
mov [ edi ] edx
mov [ esi ] ax
mov eax [ edi ]
cmp eax 0x1000000
jae r-xdata
mov edx [ ebx + 0x3194c ]
movzx eax [ ebx + edx * 2 + 0x32730 ]
lea ecx [ ebx + edx * 2 + 0x32730 ]
mov edx [ edi ]
shr edx 0xb
imul edx eax
mov [ edi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ edi ]
cmp eax 0x1000000
jae r-xdata
shl eax 0x8
mov esi edi
mov [ edi ] eax
call sub_4369c0
mov eax [ ebx + 0x3194c ]
mov ecx [ eax * 4 + r--data ]
mov eax [ ebp + 0x8 ]
xor edx edx
cmp [ ebx + 0x3bca8 ] edx
mov [ ebx + 0x3194c ] ecx
sete dl
push 0x0
mov ecx edi
mov [ ebp - 0x4 ] edx
lea edx [ ebx + 0x32c14 ]
call sub_4370a0
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
shl eax 0x8
mov esi edi
mov [ edi ] eax
call sub_4369c0
lea eax [ ebx + 0x32910 ]
push 0x3f
push eax
mov ecx 0x6
mov eax edi
call sub_436ea0
push 0x1a
push 0x3ffffff
mov esi edi
call sub_436b40
push 0xf
add ebx 0x32bf4
push ebx
mov eax 0x4
mov ecx edi
call sub_436f30
add esp 0x18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
dec [ ebx + eax * 4 + 0x3741c ]
jne r-xdata
mov ecx eax
mov edx ecx
imul edx edx 0x440
lea eax [ ebx + 0x32c14 ]
lea edx [ edx + eax + 0x404 ]
push edx
mov edx [ eax + 0x4804 ]
push edx
push ecx
lea esi [ ebx + 0x30ea0 ]
push eax
call sub_4371f0
mov ecx [ ebx + 0x37418 ]
mov edx [ ebp + 0x8 ]
add esp 0x10
mov [ ebx + edx * 4 + 0x3741c ] ecx
sub_438e20
mov eax [ ecx + 0x3bd04 ]
test eax eax
jne r-xdata
retn
cmp [ ecx + 0x3bce0 ] eax
je r-xdata
cmp [ ecx + 0x208 ] 0x0
je r-xdata
mov [ ecx + 0x3bd04 ] 0x9
mov eax [ ecx + 0x3bd04 ]
test eax eax
je r-xdata
mov [ ecx + 0x3bd04 ] 0x8
mov [ ecx + 0x3bcfc ] 0x1
sub_438e70
push ebp
mov ebp esp
cmp [ edi + 0x3bce8 ] 0x0
mov [ edi + 0x3bcfc ] 0x1
je r-xdata
push esi
lea esi [ edi + 0x3bcb0 ]
call sub_436a70
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ edi + 0x325a8 ]
and eax [ ebp + 0x8 ]
push eax
mov eax edi
call sub_438cb0
add esp 0x4
mov eax [ edi + 0x3bd04 ]
pop esi
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
push ebx
mov ebx [ esi + 0x18 ]
sub ebx eax
push ebx
push eax
push ecx
mov ecx [ ecx ]
call ecx
add esp 0xc
cmp ebx eax
je r-xdata
pop ebp
retn
cmp [ edi + 0x3bce0 ] eax
je r-xdata
add [ esi + 0x28 ] ebx
mov edx [ esi + 0x20 ]
mov [ esi + 0x18 ] edx
adc [ esi + 0x2c ] 0x0
pop ebx
mov [ esi + 0x30 ] 0x9
cmp [ edi + 0x208 ] 0x0
je r-xdata
mov [ edi + 0x3bd04 ] 0x9
mov eax [ edi + 0x3bd04 ]
test eax eax
je r-xdata
mov [ edi + 0x3bd04 ] 0x8
mov [ edi + 0x3bcfc ] 0x1
sub_438f30
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
lea eax [ edi + 0x32550 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
lea ebx [ ebx ]
movzx ebx [ edi + ecx * 2 + 0x32bf4 ]
mov eax esi
and eax 0x1
mov edi eax
neg edi
sar edi 0x4
and edi 0x7f
shr ebx 0x4
xor ebx edi
mov edi [ ebp + 0x8 ]
add edx [ edi + ebx * 4 + 0x30ea0 ]
add ecx ecx
shr esi 0x1
or ecx eax
dec [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
inc esi
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
cmp esi 0x10
jb r-xdata
xor edx edx
lea ecx [ edx + 0x1 ]
mov [ ebp - 0x4 ] 0x4
lea esp [ esp ]
mov [ edi + 0x32590 ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438fc0
push ebp
mov ebp esp
sub esp 0x218
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi 0x4
mov [ ebp - 0x208 ] edi
mov edi [ ebp - 0x208 ]
mov eax [ ebp - 0x20c ]
mov [ ebp + edi * 4 - 0x204 ] eax
inc edi
mov [ ebp - 0x208 ] edi
cmp edi 0x80
jb r-xdata
jmp r-xdata
movzx ebx [ edx + edi + 0x306a0 ]
mov ecx ebx
mov esi ebx
and esi 0x1
shr ecx 0x1
dec ecx
or esi 0x2
shl esi cl
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x20c ] 0x0
mov [ ebp - 0x210 ] 0x1
sub edi esi
mov [ ebp - 0x214 ] ecx
test ecx ecx
je r-xdata
lea esi [ ebp - 0x204 ]
sub esi edx
lea ecx [ edx + 0x32910 ]
lea ebx [ edx + 0x31d58 ]
sub esi 0x31d50
lea edi [ edx + 0x31950 ]
mov [ ebp - 0x208 ] ecx
mov [ ebp - 0x20c ] ebx
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x218 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x210 ]
sub ecx ebx
add ecx esi
movzx ecx [ edx + ecx * 2 + 0x32b0e ]
mov eax edi
and eax 0x1
mov ebx eax
neg ebx
shr ecx 0x4
sar ebx 0x4
and ebx 0x7f
xor ecx ebx
mov ecx [ edx + ecx * 4 + 0x30ea0 ]
add [ ebp - 0x20c ] ecx
mov ecx [ ebp - 0x210 ]
add ecx ecx
or ecx eax
shr edi 0x1
dec [ ebp - 0x214 ]
mov [ ebp - 0x210 ] ecx
jne r-xdata
xor ecx ecx
mov [ ebp - 0x214 ] ecx
cmp [ edx + 0x32594 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x218 ]
mov eax 0xe
cmp [ edx + 0x32594 ] eax
jbe r-xdata
mov eax ecx
or eax 0x40
xor esi esi
cmp eax 0x1
je r-xdata
mov eax [ edi ]
mov [ ebx - 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov [ ebx - 0x4 ] ecx
mov eax [ edi + 0x8 ]
mov [ ebx ] eax
mov ecx [ edi + 0xc ]
mov [ ebx + 0x4 ] ecx
mov eax 0x4
lea ecx [ ebx + 0x8 ]
jmp r-xdata
lea ecx [ ecx ]
mov [ edi + ecx * 4 ] esi
inc ecx
mov [ ebp - 0x214 ] ecx
cmp ecx [ edx + 0x32594 ]
jb r-xdata
lea esp [ esp ]
movzx ebx [ edx + eax + 0x306a0 ]
mov ebx [ edi + ebx * 4 ]
add ebx [ esi + ecx ]
inc eax
mov [ ecx ] ebx
add ecx 0x4
cmp eax 0x80
jb r-xdata
mov ecx eax
shr ecx 0x1
sub ecx 0x5
shl ecx 0x4
add [ edi + eax * 4 ] ecx
inc eax
cmp eax [ edx + 0x32594 ]
jb r-xdata
mov esi [ ebp - 0x210 ]
mov ebx [ ebp - 0x208 ]
mov ecx eax
and eax 0x1
shr ecx 0x1
movzx ebx [ ebx + ecx * 2 ]
neg eax
sar eax 0x4
and eax 0x7f
shr ebx 0x4
xor ebx eax
add esi [ edx + ebx * 4 + 0x30ea0 ]
mov eax ecx
cmp eax 0x1
jne r-xdata
mov ebx [ ebp - 0x20c ]
mov ecx [ ebp - 0x214 ]
mov ebx [ ebp - 0x20c ]
sub [ ebp - 0x208 ] 0xffffff80
add ebx 0x200
sub esi 0x200
add edi 0x100
dec [ ebp - 0x218 ]
mov [ ebp - 0x20c ] ebx
mov [ ebp - 0x210 ] esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov [ edx + 0x3bcf8 ] 0x0
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn
sub_439210
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea ebx [ esi + 0x19c ]
push ebx
mov [ esi + 0x3bcd4 ] edi
mov [ esi + 0x3bcd0 ] edi
call sub_422240
lea eax [ esi + 0x20 ]
push eax
call sub_43b090
or eax 0xffffffff
lea ecx [ ebp - 0x30 ]
push ecx
push esi
mov [ esi + 0x198 ] ebx
mov [ ebp - 0x30 ] 0x5
mov [ ebp - 0xc ] edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x8 ] edi
call sub_4367d0
lea edx [ esi + 0x306a0 ]
push edx
call sub_436280
lea eax [ esi + 0x30ea0 ]
push eax
call sub_436da0
add esp 0x18
mov [ esi + 0x325ac ] edi
mov [ esi + 0x3bd14 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4392b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0x45420
push eax
mov eax [ eax ]
call eax
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
pop ebp
retn
push esi
call sub_439210
add esp 0x4
mov eax esi
sub_4392e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x325ac ]
push eax
push esi
call ecx
mov edx [ edi + 0x3bd14 ]
mov eax [ esi + 0x4 ]
push edx
push esi
call eax
add esp 0x10
xor eax eax
mov [ edi + 0x325ac ] eax
mov [ edi + 0x3bd14 ] eax
pop edi
pop esi
pop ebp
retn
sub_439320
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
lea eax [ esi + 0x20 ]
push edi
push eax
call sub_43b130
lea ecx [ esi + 0x19c ]
push edi
push ecx
call sub_422340
mov edx [ esi + 0x325ac ]
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x4 ]
push edx
push edi
call eax
mov ecx [ esi + 0x3bd14 ]
mov edx [ edi + 0x4 ]
push ecx
push edi
call edx
mov [ esi + 0x325ac ] 0x0
mov [ esi + 0x3bd14 ] 0x0
mov eax [ esi + 0x3bcd0 ]
mov ecx [ edi + 0x4 ]
push eax
push edi
call ecx
add esp 0x28
pop edi
mov [ esi + 0x3bcd0 ] 0x0
pop esi
pop ebp
retn
sub_4393a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push esi
push edi
call sub_439320
mov ecx [ esi + 0x4 ]
push edi
push esi
call ecx
add esp 0x14
pop edi
pop esi
pop ebp
retn
sub_4393d0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x3bd10 ] 0x0
je r-xdata
cmp [ ebx + 0x3bcfc ] 0x0
mov eax [ ebx + 0x3bd04 ]
jne r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ ebx ]
push eax
call ecx
add esp 0x4
mov [ ebx + 0x3bd10 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
cmp [ ebx + 0x3bce0 ] eax
je r-xdata
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov [ ebx + 0x3bd04 ] 0x9
mov eax [ ebx + 0x3bd04 ]
test eax eax
je r-xdata
mov [ ebx + 0x3bd04 ] 0x8
push esi
mov esi [ ebx + 0x3bcf0 ]
mov edx esi
or edx [ ebx + 0x3bcf4 ]
push edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x18 ] esi
jne r-xdata
mov [ ebx + 0x3bcfc ] 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x8 ]
push eax
call ecx
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x8 ]
push eax
call ecx
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx eax
sub ecx [ ebp - 0x18 ]
push eax
add [ ebx + 0x3bcf0 ] ecx
mov edi ebx
adc [ ebx + 0x3bcf4 ] 0x0
call sub_438e70
add esp 0x4
pop edi
pop esi
lea esp [ esp ]
lea edx [ ebp - 0x1c ]
push edx
mov esi ebx
call sub_437480
mov eax [ ebx + 0x3194c ]
mov edx [ ebx + 0x3bcb0 ]
shl eax 0x5
lea ecx [ eax + ebx + 0x325b0 ]
movzx eax [ ecx ]
lea esi [ ebx + 0x3bcb0 ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
add esp 0x4
cmp eax 0x1000000
jae r-xdata
push esi
mov edi ebx
call sub_438e70
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_437730
mov ebx [ ebp + 0x8 ]
add esp 0x4
lea edx [ ebp - 0x8 ]
push edx
push ebx
call sub_438970
add esp 0x8
jmp r-xdata
mov eax [ ebx + 0x3194c ]
mov edx [ ebx + 0x31938 ]
mov ecx [ eax * 4 + r--data ]
mov eax [ ebx + 0x18 ]
neg edx
push edx
mov [ ebx + 0x3194c ] ecx
mov ecx [ ebx + 0x4 ]
push eax
call ecx
mov edx [ ebx + 0x325ac ]
movzx eax al
push edx
mov ecx esi
call sub_436c80
dec [ ebx + 0x31938 ]
add esp 0xc
inc [ ebp - 0xc ]
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov ecx [ ebx + 0x3194c ]
mov edx [ ebx + 0x3bcb0 ]
shl ecx 0x4
add ecx eax
movzx eax [ ebx + ecx * 2 + 0x325b0 ]
lea esi [ ebx + 0x3bcb0 ]
lea edi [ ebx + ecx * 2 + 0x325b0 ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov [ esi ] edx
mov edx eax
shr edx 0x5
sub eax edx
mov [ edi ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x325a8 ]
and eax [ ebp - 0xc ]
cmp [ ebp - 0x10 ] 0x1
mov [ ebp - 0x14 ] eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x4
mov eax [ ebx + 0x3194c ]
mov edx [ esi ]
jae r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov ecx [ ebx + 0x3194c ]
mov edx [ ebx + 0x3bcb0 ]
shl ecx 0x4
add ecx eax
movzx eax [ ebx + ecx * 2 + 0x325b0 ]
lea ecx [ ebx + ecx * 2 + 0x325b0 ]
shr edx 0xb
imul edx eax
mov [ ebx + 0x3bcb0 ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ ebx + 0x3bcb0 ]
cmp eax 0x1000000
jae r-xdata
lea ecx [ ebx + eax * 2 + 0x32730 ]
movzx eax [ ecx ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
lea edi [ ebx + eax * 2 + 0x32730 ]
movzx eax [ edi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov ecx eax
shr ecx 0x5
sub eax ecx
mov [ esi ] edx
mov [ edi ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0xc ]
push eax
call ecx
mov esi eax
sub esi [ ebx + 0x31938 ]
mov eax [ ebx + 0x32598 ]
mov dl [ esi ]
mov [ ebp - 0x1 ] dl
movzx edx [ esi - 0x1 ]
mov ecx 0x8
sub cl al
mov eax [ ebx + 0x325a4 ]
and eax [ ebp - 0xc ]
shr edx cl
mov ecx [ ebx + 0x32598 ]
shl eax cl
add esp 0x4
add edx eax
movzx eax [ ebp - 0x1 ]
imul edx edx 0x600
add edx [ ebx + 0x325ac ]
cmp [ ebx + 0x3194c ] 0x7
jae r-xdata
shl eax 0x8
lea esi [ ebx + 0x3bcb0 ]
mov [ ebx + 0x3bcb0 ] eax
call sub_4369c0
mov eax [ ebx + 0x3194c ]
mov ecx [ eax * 4 + r--data ]
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x3194c ] ecx
xor ecx ecx
add eax 0xfffffffe
cmp [ ebx + 0x3bca8 ] ecx
lea edx [ ebx + 0x30ea0 ]
sete cl
push edx
lea edi [ ebx + 0x32c14 ]
mov ebx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
push ecx
mov ecx esi
call sub_437400
mov ebx [ ebp - 0x8 ]
sub ebx 0x4
add esp 0x8
mov [ ebp - 0x8 ] ebx
cmp ebx 0x80
jae r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov eax [ ebp - 0x8 ]
test eax eax
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
sub esi [ ebx + 0x3193c ]
movzx ecx [ esi - 0x1 ]
push ecx
push edx
lea ecx [ ebx + 0x3bcb0 ]
call sub_436d00
add esp 0x8
push edx
lea ecx [ ebx + 0x3bcb0 ]
call sub_436c80
add esp 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0x1ffff
sub ecx ebx
shr ecx 0x1f
neg ecx
and ecx 0xa
add ecx 0x6
mov eax ebx
shr eax cl
mov edi edx
movzx eax [ eax + edx + 0x306a0 ]
lea ecx [ eax + ecx * 2 ]
mov [ ebp - 0x14 ] ecx
mov edi [ ebp + 0x8 ]
movzx edx [ ebx + edi + 0x306a0 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebx + eax * 4 + 0x3193c ]
mov eax [ ebx + 0x3194c ]
lea edi [ ebx + eax * 2 + 0x32748 ]
movzx eax [ edi ]
mov [ ebp - 0x1c ] edx
mov edx [ esi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov ecx eax
shr ecx 0x5
sub eax ecx
mov [ esi ] edx
mov [ edi ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov edx [ ebx + 0x3194c ]
movzx eax [ ebx + edx * 2 + 0x32748 ]
lea ecx [ ebx + edx * 2 + 0x32748 ]
mov edx [ esi ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
sub [ ebx + 0x31938 ] ecx
mov eax [ ebx + 0x31938 ]
add [ ebp - 0xc ] ecx
test eax eax
jne r-xdata
mov edx [ ebx + 0x3194c ]
mov eax [ edx * 4 + r--data ]
mov [ ebx + 0x3194c ] eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
shl eax 0x7
lea eax [ eax + edi + 0x32910 ]
push edx
push eax
mov ecx 0x6
mov eax esi
call sub_436ea0
mov edx [ ebp - 0x14 ]
add esp 0x8
cmp edx 0x4
jb r-xdata
mov eax 0x3
cmp [ ebp - 0x10 ] 0x5
mov eax [ ebp - 0x1c ]
jb r-xdata
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov ecx [ ebx + 0x3194c ]
xor eax eax
cmp [ ebp - 0x10 ] 0x1
setne al
shl ecx 0x4
add ecx [ ebp - 0x14 ]
lea edi [ ebx + ecx * 2 + 0x32790 ]
push eax
mov eax esi
call sub_436c20
add esp 0x4
jmp r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
cmp [ ebx + 0x3bca8 ] 0x0
je r-xdata
cmp [ ebx + 0x3bca8 ] eax
jne r-xdata
mov ecx [ edi + 0x31944 ]
mov edx [ edi + 0x31940 ]
mov eax [ edi + 0x3193c ]
inc [ edi + 0x3bcf8 ]
mov [ edi + 0x3193c ] ebx
mov ebx [ ebp + 0x8 ]
mov [ edi + 0x31948 ] ecx
mov [ edi + 0x31944 ] edx
mov [ edi + 0x31940 ] eax
mov eax edx
shr eax 0x1
and edx 0x1
dec eax
or edx 0x2
mov ecx eax
shl edx cl
mov ecx [ ebp - 0x14 ]
sub ebx edx
cmp ecx 0xe
jae r-xdata
mov eax [ ebx + 0x3194c ]
mov edx [ esi ]
lea edi [ ebx + eax * 2 + 0x32760 ]
movzx eax [ edi ]
mov ecx edx
shr ecx 0xb
imul ecx eax
add [ esi + 0x8 ] ecx
adc [ esi + 0xc ] 0x0
sub edx ecx
mov ecx eax
shr ecx 0x5
sub eax ecx
mov [ esi ] edx
mov [ edi ] ax
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov edx [ ebx + 0x3194c ]
movzx eax [ ebx + edx * 2 + 0x32760 ]
lea ecx [ ebx + edx * 2 + 0x32760 ]
mov edx [ esi ]
shr edx 0xb
imul edx eax
mov [ esi ] edx
mov edx 0x800
sub edx eax
shr edx 0x5
add edx eax
mov [ ecx ] dx
mov eax [ esi ]
cmp eax 0x1000000
jae r-xdata
mov eax [ ebp - 0x10 ]
cmp eax 0x1
jne r-xdata
mov ecx [ ebx + 0x18 ]
mov edx [ ebx + 0x8 ]
push ecx
call edx
add esp 0x4
test eax eax
je r-xdata
cmp [ ebx + 0x3bcf8 ] 0x80
jb r-xdata
add eax 0xfffffffc
mov edx ebx
push eax
shr edx 0x4
push edx
call sub_436b40
and ebx 0xf
lea eax [ edi + 0x32bf4 ]
push ebx
push eax
mov eax 0x4
mov ecx esi
call sub_436f30
add esp 0x10
inc [ edi + 0x32590 ]
sub edx ecx
lea ecx [ edi + edx * 2 + 0x32b0e ]
push ebx
push ecx
mov ecx esi
call sub_436f30
add esp 0x8
jmp r-xdata
mov eax [ ebx + 0x3194c ]
mov edx [ ebp - 0x8 ]
add edx 0xfffffffe
lea edi [ ebx + eax * 2 + 0x32778 ]
push edx
mov eax esi
call sub_436c20
add esp 0x4
cmp [ ebp - 0x8 ] 0x3
jne r-xdata
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
mov eax [ ebx + 0x3193c ]
mov ecx [ ebp - 0x1c ]
mov [ ebx + 0x31940 ] eax
mov [ ebx + 0x3193c ] ecx
shl eax 0x8
mov [ esi ] eax
call sub_4369c0
jmp r-xdata
xor edx edx
cmp [ ebx + 0x3bca8 ] edx
lea ecx [ ebx + 0x30ea0 ]
sete dl
push ecx
lea edi [ ebx + 0x3745c ]
mov ebx [ ebp - 0x14 ]
add eax 0xfffffffe
mov ecx esi
push edx
call sub_437400
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3194c ]
mov edx [ ecx * 4 + r--data ]
add esp 0x8
mov [ eax + 0x3194c ] edx
mov ebx eax
jmp r-xdata
mov edx [ ebx + 0x3194c ]
mov eax [ edx * 4 + r--data ]
mov [ ebx + 0x3194c ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x18 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x32590 ] 0x10
jb r-xdata
mov edx ebx
call sub_438fc0
mov ebx [ ebp - 0x8 ]
mov edx [ ebx + 0x31940 ]
mov [ ebx + 0x31944 ] edx
mov ecx [ ebx + 0x31944 ]
mov [ ebx + 0x31948 ] ecx
cmp eax 0x8000
jb r-xdata
add eax 0x112c
cmp eax [ ebp + 0x14 ]
jae r-xdata
push ebx
call sub_438f30
add esp 0x4
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x18 ]
mov ecx ebx
add [ ebx + 0x3bcf0 ] eax
adc [ ebx + 0x3bcf4 ] 0x0
call sub_438e20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x3bcc8 ]
sub eax [ ebx + 0x3bcd0 ]
cdq
add eax [ ebx + 0x3bcd8 ]
adc edx [ ebx + 0x3bcdc ]
add eax [ ebx + 0x3bcc0 ]
adc edx [ ebx + 0x3bcc4 ]
add eax 0x2000
adc edx 0x0
xor ecx ecx
cmp edx ecx
ja r-xdata
jb r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
sub_439bc0
push ebp
mov ebp esp
sub esp 0x8
push ebx
xor ebx ebx
push edi
mov edi eax
mov [ ebp - 0x4 ] 0x1000
cmp [ esi + 0x3bcd0 ] ebx
jne r-xdata
cmp [ esi + 0x3bd00 ] ebx
je r-xdata
mov eax [ edi ]
push 0x10000
push edi
call eax
add esp 0x8
mov [ esi + 0x3bcd0 ] eax
cmp eax ebx
je r-xdata
xor eax eax
cmp [ esi + 0x3bca8 ] ebx
jne r-xdata
mov eax 0x2
add eax 0x10000
mov [ esi + 0x3bccc ] eax
push ecx
mov ecx [ edi + 0x4 ]
push edi
call ecx
mov edx [ esi + 0x3bd14 ]
mov eax [ edi + 0x4 ]
push edx
push edi
call eax
mov ecx [ ebp - 0x8 ]
mov [ esi + 0x325ac ] ebx
mov [ esi + 0x3bd14 ] ebx
mov ebx 0x300
shl ebx cl
mov ecx [ edi ]
add ebx ebx
push ebx
push edi
call ecx
mov [ esi + 0x325ac ] eax
mov edx [ edi ]
push ebx
push edi
call edx
mov ecx [ esi + 0x325ac ]
xor ebx ebx
add esp 0x20
mov [ esi + 0x3bd14 ] eax
cmp ecx ebx
je r-xdata
cmp [ esi + 0x3bd14 ] ebx
je r-xdata
cmp [ esi + 0x1f0 ] ebx
je r-xdata
mov eax [ edi + 0x4 ]
push ecx
push edi
call eax
mov ecx [ esi + 0x3bd14 ]
mov edx [ edi + 0x4 ]
push ecx
push edi
call edx
add esp 0x10
mov [ esi + 0x325ac ] ebx
mov [ esi + 0x3bd14 ] ebx
cmp eax ebx
je r-xdata
cmp [ esi + 0x3bca4 ] eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi + 0x3bca4 ] eax
mov eax [ esi + 0x3bd08 ]
mov ecx 0x1000000
cmp ecx eax
mov ecx [ ebp + 0x8 ]
sbb edx edx
neg edx
mov [ esi + 0x1f4 ] edx
lea edx [ eax + 0x1000 ]
cmp edx ecx
jae r-xdata
mov ecx [ esi + 0x325ac ]
mov [ esi + 0x1c ] eax
mov eax [ esi + 0x3259c ]
add eax [ esi + 0x32598 ]
mov [ ebp - 0x8 ] eax
cmp ecx ebx
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
sub ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x31934 ]
push edx
mov edx [ ebp - 0x4 ]
push 0x111
push ecx
push edx
push eax
lea edi [ esi + 0x19c ]
push edi
call sub_4223a0
add esp 0x18
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x31934 ]
push ecx
mov ecx [ ebp - 0x4 ]
push 0x111
push edx
push ecx
push eax
lea edi [ esi + 0x20 ]
push edi
call sub_43b240
add esp 0x18
test eax eax
jne r-xdata
push esi
push edi
mov [ esi + 0x18 ] edi
call sub_423610
add esp 0x8
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
mov [ esi + 0x18 ] edi
call sub_43b920
add esp 0x8
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_439d90
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ edx + 0x3194c ] ebx
mov [ edx + 0x3193c ] ebx
mov [ edx + 0x31940 ] ebx
mov [ edx + 0x31944 ] ebx
mov [ edx + 0x31948 ] ebx
mov eax [ edx + 0x3bcd0 ]
push esi
mov [ edx + 0x3bcc8 ] eax
push edi
mov [ edx + 0x3bcb8 ] ebx
mov [ edx + 0x3bcbc ] ebx
mov [ edx + 0x3bcb0 ] 0xffffffff
mov [ edx + 0x3bcc0 ] 0x1
mov [ edx + 0x3bcc4 ] ebx
mov [ edx + 0x3bcb4 ] bl
mov [ edx + 0x3bcd8 ] ebx
mov [ edx + 0x3bcdc ] ebx
mov [ edx + 0x3bce0 ] ebx
lea ecx [ edx + 0x32748 ]
lea eax [ edx + 0x32790 ]
mov [ ebp + 0x8 ] 0xc
mov edi 0x400
mov [ eax - 0x1e0 ] di
mov [ eax ] di
add eax 0x2
dec esi
jne r-xdata
mov esi edi
mov [ ecx - 0x18 ] si
mov [ ecx ] si
mov [ ecx + 0x18 ] si
mov [ ecx + 0x30 ] si
add ecx 0x2
dec [ ebp + 0x8 ]
jne r-xdata
mov esi 0x10
jmp r-xdata
mov ecx [ edx + 0x32598 ]
add ecx [ edx + 0x3259c ]
mov esi 0x300
shl esi cl
xor eax eax
cmp esi ebx
jbe r-xdata
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x32910 ]
mov ecx 0x80
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x32b10 ]
mov ecx 0x39
[ edi ]
mov [ edx + 0x32c14 ] 0x4000400
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x32c18 ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x32d18 ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x32e18 ]
mov ecx 0x80
[ edi ]
mov [ edx + 0x3745c ] 0x4000400
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x37460 ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x37560 ]
mov ecx 0x40
[ edi ]
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
lea edi [ edx + 0x37660 ]
mov ecx 0x80
[ edi ]
mov eax 0x400
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
mov [ edx + 0x32bf4 ] eax
mov [ edx + 0x32bf8 ] eax
mov [ edx + 0x32bfc ] eax
mov [ edx + 0x32c00 ] eax
mov [ edx + 0x32c04 ] eax
mov [ edx + 0x32c08 ] eax
mov [ edx + 0x32c0c ] eax
mov [ edx + 0x32c10 ] eax
mov [ edx + 0x68c ] ebx
mov [ edx + 0x690 ] ebx
mov ecx [ edx + 0x325a0 ]
mov eax 0x1
shl eax cl
mov ecx [ edx + 0x3259c ]
pop edi
pop esi
dec eax
mov [ edx + 0x325a8 ] eax
mov eax 0x1
shl eax cl
mov [ edx + 0x31938 ] ebx
pop ebx
dec eax
mov [ edx + 0x325a4 ] eax
pop ebp
retn
jmp r-xdata
mov ecx [ edx + 0x325ac ]
mov edi 0x400
mov [ ecx + eax * 2 ] di
inc eax
cmp eax esi
jb r-xdata
sub_43a000
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x3bca8 ] 0x0
push edi
jne r-xdata
mov eax [ esi + 0x31934 ]
mov ecx [ esi + 0x325a0 ]
dec eax
mov [ esi + 0x3bc60 ] eax
mov [ esi + 0x37418 ] eax
mov eax 0x1
shl eax cl
lea edi [ esi + 0x32c14 ]
push eax
lea eax [ esi + 0x30ea0 ]
call sub_4373a0
mov ecx [ esi + 0x325a0 ]
mov edx 0x1
shl edx cl
lea edi [ esi + 0x3745c ]
lea eax [ esi + 0x30ea0 ]
push edx
call sub_4373a0
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx esi
call sub_438fc0
push esi
call sub_438f30
add esp 0x4
sub_43a080
push ebp
mov ebp esp
push esi
mov esi eax
mov edx [ esi + 0x3bd08 ]
push edi
xor edi edi
xor ecx ecx
mov eax 0x1
mov edx [ ebp + 0x8 ]
lea eax [ ecx + ecx ]
mov ecx [ ebp + 0x10 ]
push ecx
mov [ esi + 0x32594 ] eax
mov eax [ ebp + 0xc ]
push edx
mov [ esi + 0x3bcfc ] edi
mov [ esi + 0x3bd04 ] edi
call sub_439bc0
add esp 0x8
cmp eax edi
jne r-xdata
rol eax 0x1
cmp edx eax
jbe r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_439d90
add esp 0x4
cmp [ esi + 0x3bca8 ] edi
jne r-xdata
inc ecx
jmp r-xdata
rol eax 0x1
cmp edx eax
jbe r-xdata
mov eax [ esi + 0x31934 ]
mov ecx [ esi + 0x325a0 ]
dec eax
mov [ esi + 0x3bc60 ] eax
mov [ esi + 0x37418 ] eax
mov eax 0x1
shl eax cl
push ebx
lea edi [ esi + 0x32c14 ]
push eax
lea eax [ esi + 0x30ea0 ]
call sub_4373a0
mov ecx [ esi + 0x325a0 ]
mov edx 0x1
shl edx cl
lea edi [ esi + 0x3745c ]
lea eax [ esi + 0x30ea0 ]
push edx
call sub_4373a0
add esp 0x8
xor eax eax
mov [ esi + 0x3bcf0 ] eax
mov [ esi + 0x3bcf4 ] eax
pop ebx
mov edx esi
call sub_438fc0
push esi
call sub_438f30
add esp 0x4
add ecx 0x2
add ecx 0x3
rol eax 0x1
cmp ecx 0x1b
jb r-xdata
cmp edx eax
jbe r-xdata
jmp r-xdata
sub_43a180
push ebp
mov ebp esp
mov [ eax + 0x1d0 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x3bcd4 ] edx
mov edx [ ebp + 0x8 ]
push ecx
push edx
push 0x0
mov [ eax + 0x3bd10 ] 0x1
call sub_43a080
add esp 0xc
pop ebp
retn
sub_43a1b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x1d0 ] ecx
mov ecx [ ebp + 0x14 ]
push ecx
push edx
mov [ eax + 0x3bd10 ] 0x1
call sub_43a080
add esp 0xc
pop ebp
retn
sub_43a200
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx 0x1
mov [ eax + 0x1cc ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x1e8 ] ecx
mov [ eax + 0x3bd10 ] ecx
mov ecx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x1ec ] edx
mov edx [ ebp + 0x18 ]
push edx
push ecx
call sub_43a080
add esp 0xc
pop ebp
retn
sub_43a260
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
cmp eax edi
jae r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push edi
push eax
push ecx
call sub_43bd20
sub [ esi + 0x8 ] edi
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
pop ebp
retn
mov edi eax
mov [ esi + 0xc ] 0x1
sub_43a2c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
push eax
call ecx
add esp 0x4
sub eax [ esi + 0x31938 ]
pop esi
pop ebp
retn
sub_43a2e0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
mov ecx [ edi ]
mov [ ebp - 0x18 ] sub_43a260
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ebx
mov [ esi + 0x3bce8 ] ebx
mov [ esi + 0x3bcfc ] ebx
mov [ esi + 0x3bd04 ] ebx
cmp [ ebp + 0xc ] ebx
je r-xdata
push esi
call sub_43a000
mov edx [ esi + 0x3bcf0 ]
mov eax [ esi + 0x3bcf4 ]
mov ecx [ esi + 0x3bcd0 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x3bcb8 ] ebx
mov [ esi + 0x3bcbc ] ebx
mov [ esi + 0x3bcb0 ] 0xffffffff
mov [ esi + 0x3bcc0 ] 0x1
mov [ esi + 0x3bcc4 ] ebx
mov [ esi + 0x3bcb4 ] bl
mov [ esi + 0x3bcc8 ] ecx
mov [ esi + 0x3bcd8 ] ebx
mov [ esi + 0x3bcdc ] ebx
mov [ esi + 0x3bce0 ] ebx
lea edx [ ebp - 0x18 ]
mov [ esi + 0x3bcd4 ] edx
mov ecx [ eax ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
push 0x1
push esi
call sub_4393d0
mov ecx [ esi + 0x3bcf0 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x1c ]
add esp 0x14
mov [ edx ] ecx
mov ecx [ ebp - 0x10 ]
sub [ edi ] ecx
cmp [ ebp - 0xc ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push esi
call sub_439d90
add esp 0x4
mov esp ebp
pop ebp
retn
mov eax 0x7
sub_43a3d0
push ebp
mov ebp esp
sub esp 0x304
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
xor eax eax
lea esp [ esp ]
inc eax
cmp eax 0x10
jl r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_4393d0
mov edi eax
add esp 0x10
test edi edi
jne r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
mov esp ebp
pop ebp
retn
add esi 0x20
push esi
call sub_43b3c0
add esp 0x4
cmp [ esi + 0x3bcfc ] 0x0
jne r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_4393d0
mov edi eax
add esp 0x10
test edi edi
je r-xdata
mov eax [ esi + 0x3bcc8 ]
sub eax [ esi + 0x3bcd0 ]
mov ecx [ esi + 0x3bcf0 ]
cdq
add eax [ esi + 0x3bcd8 ]
adc edx [ esi + 0x3bcdc ]
add eax [ esi + 0x3bcc0 ]
adc edx [ esi + 0x3bcc4 ]
push edx
mov edx [ ebx ]
push eax
mov eax [ esi + 0x3bcf4 ]
push eax
push ecx
push ebx
call edx
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
mov edi 0xa
sub_43a4a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x1d0 ] eax
mov eax [ ebp + 0x18 ]
push edx
push eax
push 0x0
mov eax esi
mov [ esi + 0x3bd10 ] 0x1
mov [ esi + 0x3bcd4 ] ecx
call sub_43a080
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0x14 ]
mov ecx esi
call sub_43a3d0
pop ebx
sub_43a4f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x5
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x3bd08 ]
jae r-xdata
mov [ eax ] 0x5
mov al [ esi + 0x325a0 ]
mov cl al
add cl cl
add cl cl
add al cl
add al [ esi + 0x3259c ]
mov cl al
add cl cl
add cl cl
add cl cl
add cl al
add cl [ esi + 0x32598 ]
mov eax [ ebp + 0xc ]
mov [ eax ] cl
mov ecx 0xb
mov eax 0x5
pop esi
pop ebp
retn
mov edx 0x2
jmp r-xdata
mov esi 0x3
shl esi cl
cmp edx esi
jbe r-xdata
shl edx cl
mov edx 0x3
inc ecx
cmp ecx 0x1e
jle r-xdata
mov esi 0x2
shl esi cl
cmp edx esi
jbe r-xdata
jmp r-xdata
mov ecx edx
shr ecx 0x8
mov [ eax + 0x2 ] cl
mov ecx edx
mov [ eax + 0x1 ] dl
shr ecx 0x10
shr edx 0x18
mov [ eax + 0x3 ] cl
mov [ eax + 0x4 ] dl
xor eax eax
pop esi
pop ebp
retn
sub_43a590
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov edx 0x1
mov [ esi + 0x1cc ] eax
mov [ esi + 0x1ec ] ecx
mov [ ebp - 0xc ] edi
mov edi [ ebp + 0x10 ]
mov [ esi + 0x1e8 ] edx
mov ebx [ edi ]
mov [ esi + 0x1cc ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x1c ]
push eax
mov [ esi + 0x1ec ] ecx
mov ecx [ ebp + 0x24 ]
mov [ esi + 0x3bce8 ] ebx
push ecx
lea ebx [ ebp - 0x10 ]
push 0x0
mov eax esi
mov [ ebp - 0x10 ] sub_43a260
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x3bcd4 ] ebx
mov [ esi + 0x1e8 ] edx
mov [ esi + 0x3bd10 ] edx
call sub_43a080
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
sub [ edi ] edx
cmp [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov ebx [ ebp + 0x20 ]
mov ecx esi
call sub_43a3d0
mov esp ebp
pop ebp
retn
mov eax 0x7
sub_43a640
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x2c ]
mov eax [ ebx ]
push esi
push 0x45420
push ebx
call eax
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
push esi
call sub_439210
mov ecx [ ebp + 0x18 ]
add esp 0x4
push edi
push ecx
push esi
call sub_4367d0
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov edx [ ebp + 0x30 ]
push edx
push ebx
push esi
call sub_439320
mov eax [ ebx + 0x4 ]
push esi
push ebx
call eax
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x1c ]
push edx
push eax
push esi
call sub_43a4f0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov ecx [ ebp + 0x30 ]
mov edx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ebx
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
push esi
call sub_43a590
add esp 0x24
mov edi eax
sub_43a6e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
pop ebp
retn
sub_43a710
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x4 ] edi
je r-xdata
lea eax [ esi + 0x30 ]
push eax
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x48 ]
lea ecx [ esi + 0x20 ]
push ecx
mov [ esi + 0x2c ] edi
call sub_431ef0
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] edi
lea edi [ esi + 0x18 ]
push edi
mov [ esi + 0x48 ] 0x1
call sub_431d40
lea eax [ esi + 0x1c ]
push eax
call sub_431d40
lea ecx [ esi + 0x14 ]
push ecx
call sub_431d10
mov edx [ edi ]
push edx
call sub_431c70
add esp 0x10
jmp r-xdata
mov edx [ esi + 0x24 ]
push edx
call sub_431c70
add esp 0x4
lea eax [ esi + 0x30 ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
mov [ esi + 0x2c ] 0x1
pop esi
pop ebp
retn
sub_43a7a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x10 ] 0x0
push edi
mov edi [ esi + 0x48 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x2c ] 0x0
mov [ esi + 0xc ] 0x1
je r-xdata
push ebx
lea ebx [ esi + 0x20 ]
push ebx
call sub_431ef0
mov ecx [ esi + 0x1c ]
push ecx
call sub_431c70
add esp 0x8
cmp edi [ esi + 0x48 ]
je r-xdata
lea eax [ esi + 0x30 ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x4 ] 0x1
pop ebx
mov edx [ esi + 0x24 ]
push edx
inc edi
call sub_431c70
push ebx
call sub_431ef0
add esp 0x8
cmp edi [ esi + 0x48 ]
jne r-xdata
sub_43a820
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x10 ] 0x0
push edi
lea edi [ esi + 0x10 ]
je r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
push esi
call sub_43a7a0
add esp 0x4
cmp [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
je r-xdata
lea eax [ esi + 0x14 ]
push eax
call sub_431c30
lea ecx [ esi + 0x18 ]
push ecx
call sub_431c30
lea edx [ esi + 0x1c ]
push edx
call sub_431c30
lea eax [ esi + 0x20 ]
push eax
call sub_431c30
lea ecx [ esi + 0x24 ]
push ecx
call sub_431c30
add esp 0x14
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
retn
lea edx [ esi + 0x30 ]
push edx
call [ DeleteCriticalSection@IAT ]
mov [ esi + 0x28 ] 0x0
mov ecx [ edi ]
push ecx
call sub_431c70
push edi
call sub_431c30
add esp 0x8
lea eax [ esi + 0x14 ]
push eax
call sub_431d10
add esp 0x4
sub_43a8c0
push ebp
mov ebp esp
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn
lea eax [ esi + 0x30 ]
push eax
call sub_431f20
add esp 0x4
test eax eax
je r-xdata
lea ecx [ esi + 0x14 ]
push ecx
mov [ esi + 0x28 ] 0x1
call sub_431e20
add esp 0x4
test eax eax
jne r-xdata
mov eax 0xc
pop ebp
retn
lea edx [ esi + 0x18 ]
push edx
call sub_431e20
add esp 0x4
test eax eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call sub_431e20
add esp 0x4
test eax eax
jne r-xdata
push edi
lea ecx [ esi + 0x20 ]
push edi
push ecx
call sub_431e50
add esp 0xc
test eax eax
jne r-xdata
push edi
push eax
lea edx [ esi + 0x24 ]
push edx
call sub_431e50
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea edx [ esi + 0x10 ]
push edx
mov [ esi + 0x4 ] 0x1
call sub_431c90
add esp 0xc
test eax eax
jne r-xdata
mov [ esi ] 0x1
sub_43a970
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
mov esi edx
push ecx
call sub_43a8c0
mov edi eax
add esp 0x8
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_43a820
add esp 0x4
mov eax edi
sub_43a9b0
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
sub edx ecx
lea ebx [ ebx ]
movzx eax [ edx + ecx + 0x1 ]
movzx ebx [ edx + ecx ]
shl eax 0x8
or eax ebx
mov ebx ecx
sub ebx [ edi + eax * 4 ]
add esi 0x4
mov [ esi - 0x4 ] ebx
mov [ edi + eax * 4 ] ecx
inc ecx
dec [ ebp + 0x1c ]
jne r-xdata
pop edi
pop esi
pop ebx
sub_43aa00
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
inc ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx edi [ ecx - 0x1 ]
mov ebx [ ebp + 0x20 ]
shl eax 0x8
xor eax [ ebx + edi * 4 ]
movzx edi [ ecx ]
xor eax edi
and eax [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx edx
sub ebx [ edi + eax * 4 ]
inc ecx
mov [ esi ] ebx
mov [ edi + eax * 4 ] edx
add esi 0x4
inc edx
dec [ ebp + 0x1c ]
jne r-xdata
pop edi
pop esi
pop ebx
sub_43aa60
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
add ecx 0x2
jmp r-xdata
movzx eax [ ecx ]
movzx ebx [ ecx + 0x1 ]
mov edi [ ebp + 0x20 ]
add eax eax
add eax eax
add eax eax
xor eax [ edi + ebx * 4 ]
movzx ebx [ ecx - 0x2 ]
shl eax 0x5
xor eax [ edi + ebx * 4 ]
movzx edi [ ecx - 0x1 ]
xor eax edi
and eax [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx edx
sub ebx [ edi + eax * 4 ]
inc ecx
mov [ esi ] ebx
mov [ edi + eax * 4 ] edx
add esi 0x4
inc edx
dec [ ebp + 0x1c ]
jne r-xdata
pop edi
pop esi
pop ebx
sub_43aad0
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
add ecx 0x2
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx edi [ ecx ]
mov ebx [ ebp + 0x20 ]
shl eax 0x8
xor eax edi
movzx edi [ ecx - 0x2 ]
shl eax 0x8
xor eax [ ebx + edi * 4 ]
movzx edi [ ecx - 0x1 ]
xor eax edi
and eax [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx edx
sub ebx [ edi + eax * 4 ]
inc ecx
mov [ esi ] ebx
mov [ edi + eax * 4 ] edx
add esi 0x4
inc edx
dec [ ebp + 0x1c ]
jne r-xdata
pop edi
pop esi
pop ebx
sub_43ab30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea ebx [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x134 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0x144 ]
push ecx
mov [ edi + 0x170 ] eax
call sub_431d10
add esp 0x4
jmp r-xdata
mov esi [ edi + 0x178 ]
push esi
call sub_422190
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi + 0x13c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_431c70
lea eax [ edi + 0x140 ]
push eax
call sub_431d10
add esp 0x8
mov eax [ edi + 0x148 ]
push eax
call sub_431c70
push esi
call sub_4221b0
mov eax [ esi + 0x4 ]
add esp 0x8
cmp eax 0xffffdfff
jbe r-xdata
lea ebx [ edi + 0x5c ]
push ebx
call [ EnterCriticalSection@IAT ]
lea eax [ edi + 0x158 ]
push eax
call [ EnterCriticalSection@IAT ]
push esi
call sub_422070
push esi
mov [ ebp + 0x8 ] eax
call sub_422160
push esi
call sub_422070
mov ecx [ ebp + 0x8 ]
mov esi [ LeaveCriticalSection@IAT ]
mov edx eax
add esp 0xc
sub edx ecx
add [ edi ] edx
sub eax ecx
add [ edi + 0x118 ] eax
push ebx
call esi
lea eax [ edi + 0x158 ]
push eax
call esi
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
inc [ ebp - 0x4 ]
and ebx 0x7
shl ebx 0xf
add ebx [ edi + 0xf8 ]
mov [ ebx ] 0x2
mov [ ebx + 0x4 ] eax
mov ecx [ esi + 0x48 ]
cmp eax ecx
jb r-xdata
sub eax [ esi + 0x5c ]
lea ebx [ eax - 0x1 ]
push ebx
push esi
call sub_4220a0
mov ecx [ esi + 0x28 ]
mov edx [ esi + 0x60 ]
mov eax [ esi + 0x20 ]
inc ecx
push ecx
lea ecx [ eax + edx * 4 ]
push ecx
push ebx
call sub_422690
add esp 0x14
cmp [ edi + 0x130 ] 0x0
jne r-xdata
add [ esi + 0x4 ] eax
add [ esi ] eax
lea edx [ edi + 0x14c ]
push edx
call sub_431ef0
add esp 0x4
jmp r-xdata
mov edx 0x1
sub edx ecx
add eax edx
mov [ ebp + 0x8 ] eax
cmp eax 0x1ffe
jbe r-xdata
lea ecx [ esi + 0x70 ]
push ecx
mov ecx [ esi + 0x60 ]
push eax
mov eax [ esi + 0x28 ]
lea edx [ ebx + 0x8 ]
push edx
mov edx [ esi + 0x20 ]
push eax
lea eax [ edx + ecx * 4 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push eax
mov eax [ edi + 0x174 ]
push ecx
push edx
call eax
mov ecx [ ebp + 0x8 ]
add esp 0x1c
add [ ebx ] ecx
mov eax ecx
mov [ ebp + 0x8 ] 0x1ffe
mov eax [ ebp + 0x8 ]
sub_43ace0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x128 ]
push eax
call sub_43a710
mov eax [ esi + 0x170 ]
mov ecx [ esi + 0xf8 ]
dec eax
and eax 0x7
shl eax 0xd
mov [ esi + 0xfc ] eax
mov [ esi + 0x100 ] eax
mov edx [ ecx + eax * 4 ]
add edx eax
inc eax
mov [ esi + 0xfc ] eax
mov [ esi + 0x100 ] edx
mov ecx [ ecx + eax * 4 ]
add esp 0x4
inc eax
mov [ esi + 0x104 ] ecx
mov [ esi + 0xfc ] eax
pop esi
pop ebp
retn
sub_43ad40
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x104 ]
mov ebx 0x2000
sub ebx [ esi + 0x10c ]
push edi
mov edi 0x2
add ebx ebx
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] ebx
mov [ eax + 0x4 ] ecx
cmp ebx edi
jbe r-xdata
mov [ eax ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
nop
mov edx [ esi + 0x10c ]
mov ebx [ esi + 0x114 ]
sub eax ecx
mov ecx eax
mov eax [ esi + 0x11c ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x104 ]
mov [ ebp - 0xc ] edx
cmp edx eax
jb r-xdata
lea edx [ esi + 0x128 ]
push edx
call sub_43a710
mov eax [ esi + 0x170 ]
mov ecx [ esi + 0xf8 ]
dec eax
and eax 0x7
shl eax 0xd
mov [ esi + 0xfc ] eax
mov [ esi + 0x100 ] eax
mov edx [ ecx + eax * 4 ]
add edx eax
inc eax
mov [ esi + 0xfc ] eax
mov [ esi + 0x100 ] edx
mov ecx [ ecx + eax * 4 ]
inc eax
mov [ esi + 0x104 ] ecx
add ecx [ ebp - 0x10 ]
mov [ esi + 0xfc ] eax
mov eax [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x104 ]
add esp 0x4
cmp ecx [ esi + 0x110 ]
jae r-xdata
sub eax edx
inc eax
cmp eax ecx
jae r-xdata
mov [ ebp - 0xc ] eax
mov edx eax
cmp edi ebx
jb r-xdata
test ecx ecx
je r-xdata
mov eax [ esi + 0x120 ]
sub eax [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
mov [ ebp - 0x4 ] eax
mov ecx eax
mov eax [ esi + 0x100 ]
mov ecx [ esi + 0xfc ]
cmp ecx eax
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or ecx 0xffffffff
jmp r-xdata
cmp edi [ ebp - 0x14 ]
jae r-xdata
mov ecx eax
mov [ eax + edi * 4 ] 0x0
add [ esi + 0x104 ] ecx
inc edi
cmp [ esi + 0x104 ] 0x0
jne r-xdata
mov eax [ esi + 0x114 ]
mov edx ebx
sub edx eax
add [ ebp - 0x10 ] edx
sub eax ebx
add [ esi + 0x104 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x114 ] ebx
cmp eax [ esi + 0x120 ]
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
mov [ esi + 0x11c ] ecx
mov [ ebp + 0x8 ] 0x0
mov edx ecx
dec ecx
mov [ ebp - 0x4 ] ecx
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0xfc ]
mov edx [ esi + 0xf8 ]
lea edi [ eax + edi * 4 ]
inc ecx
mov eax ebx
sub eax [ edx + ecx * 4 - 0x4 ]
mov [ esi + 0xfc ] ecx
mov ecx [ esi + 0x110 ]
dec ecx
push ecx
mov ecx [ esi + 0x124 ]
lea edx [ edi + 0x4 ]
push edx
mov edx [ esi + 0x120 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
mov edx [ esi + 0x108 ]
push ecx
mov ecx [ esi + 0x118 ]
push edx
mov edx [ ebp - 0xc ]
push ecx
push ebx
push eax
push edx
call sub_422860
sub eax edi
sar eax 0x2
lea ecx [ eax - 0x1 ]
mov [ edi ] ecx
mov ecx [ ebp - 0x8 ]
add ecx eax
mov eax 0x1
add [ ebp + 0x8 ] eax
add [ esi + 0x118 ] eax
add esp 0x28
add ebx eax
mov [ ebp - 0x8 ] ecx
mov edi ecx
cmp ecx [ ebp - 0x14 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub_43af70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x12c ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
and ecx 0x3f
shl ecx 0x10
add ecx [ esi + 0x4 ]
push ecx
push esi
call sub_43ad40
mov eax [ esi + 0x114 ]
add esp 0x8
cmp eax 0xffffbfff
jbe r-xdata
lea eax [ esi + 0x158 ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ esi + 0x154 ] 0x1
cmp [ esi + 0x12c ] 0x0
jne r-xdata
mov ecx [ esi + 0x120 ]
push edi
sub eax ecx
mov edi eax
mov eax [ esi + 0x108 ]
lea edx [ ecx + ecx ]
push edx
push eax
push edi
call sub_422690
add esp 0xc
sub [ esi + 0x114 ] edi
pop edi
pop esi
pop ebp
retn
lea ecx [ esi + 0x158 ]
push ecx
call [ LeaveCriticalSection@IAT ]
mov [ esi + 0x154 ] 0x0
sub_43b010
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea ebx [ esi + 0x44 ]
lea esp [ esp ]
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ esi + 0x38 ] 0x0
jne r-xdata
lea eax [ esi + 0x128 ]
push eax
mov [ esi + 0x74 ] edi
call sub_43a7a0
lea ecx [ esi + 0x48 ]
push ecx
call sub_431d10
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x4c ]
push ecx
call sub_431c70
push edi
push esi
call sub_43af70
lea edx [ esi + 0x50 ]
push edx
inc edi
call sub_431ef0
add esp 0x10
jmp r-xdata
mov eax [ esi + 0x40 ]
push eax
xor edi edi
call sub_431c70
push ebx
call sub_431d10
add esp 0x8
cmp [ esi + 0x34 ] 0x0
jne r-xdata
sub_43b090
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0xf8 ] ecx
mov [ eax + 0x128 ] ecx
mov [ eax + 0x150 ] ecx
mov [ eax + 0x154 ] ecx
mov [ eax + 0x138 ] ecx
mov [ eax + 0x13c ] ecx
mov [ eax + 0x140 ] ecx
mov [ eax + 0x144 ] ecx
mov [ eax + 0x148 ] ecx
mov [ eax + 0x14c ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x54 ] ecx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x50 ] ecx
pop ebp
retn
sub_43b100
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xf8 ]
push eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push eax
call ecx
add esp 0x8
mov [ esi + 0xf8 ] 0x0
pop esi
pop ebp
retn
sub_43b130
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x128 ]
push eax
call sub_43a820
lea ecx [ esi + 0x2c ]
push ecx
call sub_43a820
mov edx [ esi + 0xf8 ]
mov eax [ ebp + 0xc ]
push edx
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x10
mov [ esi + 0xf8 ] 0x0
pop esi
pop ebp
retn
sub_43b190
push ebp
mov ebp esp
sub esp 0x184
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor eax eax
jmp r-xdata
inc eax
cmp eax 0x10
jl r-xdata
lea ebx [ esi + 0x44 ]
lea esp [ esp ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_43bd0f
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
lea eax [ esi + 0x128 ]
push eax
mov [ esi + 0x74 ] edi
call sub_43a7a0
lea ecx [ esi + 0x48 ]
push ecx
call sub_431d10
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x4c ]
push ecx
call sub_431c70
push edi
push esi
call sub_43af70
lea edx [ esi + 0x50 ]
push edx
inc edi
call sub_431ef0
add esp 0x10
jmp r-xdata
mov eax [ esi + 0x40 ]
push eax
xor edi edi
call sub_431c70
push ebx
call sub_431d10
add esp 0x8
cmp [ esi + 0x34 ] 0x0
jne r-xdata
sub_43b240
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
lea edx [ ecx * 4 ]
push edi
mov edi [ ebx + 0x178 ]
mov [ ebx + 0x20 ] eax
cmp edx 0x4000
jb r-xdata
cmp [ ebx + 0xf8 ] 0x0
push esi
mov esi [ ebp + 0x1c ]
jne r-xdata
pop edi
mov eax 0x5
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push esi
add ecx 0x2000
push ecx
mov ecx [ ebp + 0xc ]
push edx
add eax 0x110000
push eax
push ecx
push edi
call sub_4223a0
add esp 0x18
test eax eax
jne r-xdata
mov eax [ esi ]
push r-xdata
push esi
call eax
add esp 0x8
mov [ ebx + 0xf8 ] eax
test eax eax
je r-xdata
push ebx
lea esi [ ebx + 0x128 ]
push sub_43b170
mov edi 0x8
call sub_43a8c0
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
pop esi
pop edi
mov eax 0x2
pop ebx
pop ebp
retn
add eax 0x40000
mov [ ebx + 0x4 ] eax
push esi
call sub_43a820
add esp 0x4
pop esi
mov eax edi
pop edi
pop ebx
pop ebp
retn
push ebx
lea esi [ ebx + 0x2c ]
push sub_43b190
lea edi [ eax + 0x40 ]
call sub_43a8c0
mov edi eax
add esp 0x8
test edi edi
je r-xdata
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
sub_43b320
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x178 ]
xor ebx ebx
push edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x100 ] ebx
mov [ esi + 0xfc ] ebx
call sub_4225f0
push edi
call sub_422070
mov [ esi ] eax
mov eax [ esi + 0x20 ]
mov [ esi + 0x14 ] ebx
add esp 0x8
inc eax
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x20 ]
mov [ esi + 0x18 ] ecx
mov edx [ edi + 0x60 ]
mov [ esi + 0x1c ] edx
lea eax [ edi + 0x70 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x24 ]
mov [ esi + 0x108 ] ecx
mov edx [ edi + 0x1c ]
mov [ esi + 0x10c ] edx
mov eax [ edi + 0x48 ]
mov [ esi + 0x110 ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x114 ] ecx
mov edx [ edi ]
mov [ esi + 0x118 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x11c ] eax
mov ecx [ edi + 0x18 ]
mov [ esi + 0x120 ] ecx
mov edx [ edi + 0x2c ]
pop edi
mov [ esi + 0x124 ] edx
pop esi
pop ebx
pop ebp
retn
sub_43b3e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x1c ]
sub edx [ esi + 0x20 ]
mov ecx [ esi + 0x18 ]
push eax
push ecx
dec edx
push edx
call sub_422690
mov eax [ esi + 0x20 ]
add esp 0xc
inc eax
mov [ esi + 0x10 ] eax
pop esi
pop ebp
retn
sub_43b410
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x2c ]
push eax
call sub_43a710
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x4 ]
dec eax
and eax 0x3f
shl eax 0xe
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov edx [ ecx + eax * 4 ]
add edx eax
inc eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov ecx [ ecx + eax * 4 ]
inc eax
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x10 ]
add esp 0x4
mov [ esi + 0x14 ] ecx
cmp eax 0xffffbfff
jb r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x1c ]
sub eax [ esi + 0x20 ]
mov ecx [ esi + 0x18 ]
push edx
push ecx
dec eax
push eax
call sub_422690
mov edx [ esi + 0x20 ]
add esp 0xc
inc edx
mov [ esi + 0x10 ] edx
sub_43b490
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov eax [ esi + 0x14 ]
pop esi
pop ebp
retn
push esi
call sub_43b410
add esp 0x4
sub_43b4c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ eax + 0x10 ]
push ebx
mov ebx [ eax + 0x24 ]
push esi
movzx esi [ edx ]
push edi
mov edi [ eax + 0x18 ]
movzx eax [ edx + 0x1 ]
xor eax [ ebx + esi * 4 ]
and eax 0x3ff
mov esi [ edi + eax * 4 ]
mov [ edi + eax * 4 ] ecx
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ ebp + 0x10 ]
mov eax esi
sub eax ecx
mov al [ eax + edx ]
cmp al [ edx ]
mov eax [ ebp + 0x10 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub ecx esi
pop edi
dec ecx
mov [ eax ] 0x2
pop esi
mov [ eax + 0x4 ] ecx
add eax 0x8
pop ebx
pop ebp
retn
sub_43b520
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ eax + 0x10 ]
push ebx
movzx ebx [ edx ]
push esi
mov esi [ eax + 0x18 ]
mov eax [ eax + 0x24 ]
push edi
movzx edi [ edx + 0x1 ]
xor edi [ eax + ebx * 4 ]
movzx eax [ edx + 0x2 ]
mov ebx edi
shl eax 0x8
and ebx 0x3ff
xor eax edi
mov edi [ esi + ebx * 4 ]
and eax 0xffff
mov [ ebp + 0x8 ] edi
mov edi [ esi + eax * 4 + 0x1000 ]
mov [ esi + eax * 4 + 0x1000 ] ecx
mov [ esi + ebx * 4 ] ecx
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
jb r-xdata
mov esi [ ebp + 0x10 ]
mov eax esi
sub eax ecx
mov bl [ eax + edx ]
cmp bl [ edx ]
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov eax edi
sub eax ecx
mov al [ eax + edx ]
cmp al [ edx ]
jne r-xdata
mov ebx ecx
sub ebx esi
mov esi [ ebp + 0x10 ]
dec ebx
mov [ esi + 0x4 ] ebx
mov al [ eax + edx + 0x2 ]
cmp al [ edx + 0x2 ]
jne r-xdata
sub ecx edi
dec ecx
mov [ esi ] 0x3
mov [ esi + 0x4 ] ecx
add esi 0x8
mov [ esi ] 0x2
add esi 0x8
jmp r-xdata
pop edi
mov [ esi ] 0x3
lea eax [ esi + 0x8 ]
pop esi
pop ebx
pop ebp
retn
cmp edi [ ebp + 0xc ]
jb r-xdata
sub_43b5e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
lea ecx [ eax + edx * 4 ]
mov eax [ ecx ]
dec [ esi + 0x14 ]
add ecx 0x4
lea edx [ edx + eax + 0x1 ]
mov [ esi + 0x8 ] edx
test eax eax
je r-xdata
inc [ esi + 0x10 ]
inc [ esi ]
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
push ebx
push edi
lea edi [ eax - 0x1 ]
shr edi 0x1
inc edi
mov edi edi
mov ebx [ ecx ]
mov [ edx ] ebx
mov ebx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ebx
add edx 0x8
add ecx 0x8
dec edi
jne r-xdata
pop edi
pop ebx
sub_43b630
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov ebx [ ecx + eax * 4 ]
lea esi [ ecx + eax * 4 ]
add esi 0x4
lea edx [ eax + ebx + 0x1 ]
mov [ edi + 0x8 ] edx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x10 ]
dec [ edi + 0x14 ]
mov ecx [ ebp + 0xc ]
sub edx [ esi + 0x4 ]
mov eax [ edi + 0x28 ]
push ecx
push edx
push edi
call eax
add esp 0xc
nop
mov eax [ edi + 0x14 ]
lea ecx [ eax - 0x1 ]
mov [ edi + 0x14 ] ecx
cmp eax 0x4
jb r-xdata
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
add eax 0x8
add esi 0x8
sub ebx 0x2
jne r-xdata
sub eax [ ebp + 0xc ]
sar eax 0x2
mov ebx eax
inc [ edi + 0x10 ]
inc [ edi ]
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ edi + 0x10 ]
mov esi [ ebp + 0xc ]
sub edx [ edi + 0x20 ]
mov eax [ edi + 0x28 ]
push esi
push edx
push edi
call eax
inc [ edi + 0x10 ]
mov ebx eax
sub ebx esi
add esp 0xc
sar ebx 0x2
inc [ edi ]
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_43b6d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov eax [ esi + 0x8 ]
dec [ esi + 0x14 ]
inc [ esi + 0x10 ]
inc [ esi ]
dec ebx
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
lea eax [ edx + eax + 0x1 ]
mov [ esi + 0x8 ] eax
jne r-xdata
lea ecx [ esi + 0x2c ]
push ecx
call sub_43a710
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x4 ]
dec eax
and eax 0x3f
shl eax 0xe
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov edx [ ecx + eax * 4 ]
add edx eax
inc eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov ecx [ ecx + eax * 4 ]
inc eax
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x10 ]
add esp 0x4
mov [ esi + 0x14 ] ecx
cmp eax 0xffffbfff
jb r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx [ esi + 0x1c ]
sub eax [ esi + 0x20 ]
mov ecx [ esi + 0x18 ]
push edx
push ecx
dec eax
push eax
call sub_422690
mov edx [ esi + 0x20 ]
add esp 0xc
inc edx
mov [ esi + 0x10 ] edx
sub_43b770
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov eax [ esi + 0x14 ]
lea ecx [ eax - 0x1 ]
mov [ esi + 0x14 ] ecx
cmp eax 0x2
jb r-xdata
lea ecx [ esi + 0x2c ]
push ecx
call sub_43a710
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x4 ]
dec eax
and eax 0x3f
shl eax 0xe
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov edx [ ecx + eax * 4 ]
add edx eax
inc eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov ecx [ ecx + eax * 4 ]
inc eax
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x10 ]
add esp 0x4
mov [ esi + 0x14 ] ecx
cmp eax 0xffffbfff
jb r-xdata
mov eax [ esi + 0x8 ]
inc [ esi + 0x10 ]
inc [ esi ]
dec ebx
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
lea eax [ edx + eax + 0x1 ]
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax [ esi ]
movzx edx [ eax ]
movzx eax [ eax + 0x1 ]
mov ecx [ esi + 0x24 ]
xor eax [ ecx + edx * 4 ]
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x10 ]
and eax 0x3ff
mov [ ecx + eax * 4 ] edx
mov edx [ esi + 0x1c ]
sub eax [ esi + 0x20 ]
mov ecx [ esi + 0x18 ]
push edx
push ecx
dec eax
push eax
call sub_422690
mov edx [ esi + 0x20 ]
add esp 0xc
inc edx
mov [ esi + 0x10 ] edx
pop esi
pop ebx
pop ebp
retn
sub_43b830
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi 0x1
mov edi edi
mov eax [ esi + 0x14 ]
lea ecx [ eax - 0x1 ]
mov [ esi + 0x14 ] ecx
cmp eax 0x3
jb r-xdata
lea ecx [ esi + 0x2c ]
push ecx
call sub_43a710
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x4 ]
sub eax edi
and eax 0x3f
shl eax 0xe
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov edx [ ecx + eax * 4 ]
add edx eax
inc eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov ecx [ ecx + eax * 4 ]
inc eax
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x10 ]
add esp 0x4
mov [ esi + 0x14 ] ecx
cmp eax 0xffffbfff
jb r-xdata
mov eax [ esi + 0x8 ]
add [ esi + 0x10 ] edi
add [ esi ] edi
sub [ ebp + 0xc ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ecx + eax * 4 ]
lea eax [ edx + eax + 0x1 ]
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax [ esi ]
movzx edx [ eax ]
movzx ecx [ eax + 0x1 ]
movzx eax [ eax + 0x2 ]
mov ebx [ esi + 0x24 ]
xor ecx [ ebx + edx * 4 ]
mov edi [ esi + 0x18 ]
shl eax 0x8
mov edx ecx
xor eax ecx
mov ecx [ esi + 0x10 ]
and edx 0x3ff
and eax 0xffff
mov [ edi + edx * 4 ] ecx
mov [ edi + eax * 4 + 0x1000 ] ecx
mov edi 0x1
mov edx [ esi + 0x1c ]
sub eax [ esi + 0x20 ]
mov ecx [ esi + 0x18 ]
push edx
push ecx
sub eax edi
push eax
call sub_422690
mov edx [ esi + 0x20 ]
add esp 0xc
add edx edi
mov [ esi + 0x10 ] edx
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_43b920
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] sub_43b320
mov [ eax + 0x4 ] sub_43b4b0
mov [ eax + 0x8 ] sub_43b490
mov [ eax + 0xc ] sub_43b480
mov [ eax + 0x10 ] sub_43b630
push esi
mov esi [ ecx + 0x178 ]
mov edx [ esi + 0x48 ]
sub edx 0x2
je r-xdata
mov [ ecx + 0x174 ] sub_43a9b0
mov [ ecx + 0x28 ] 0x0
mov [ eax + 0x14 ] sub_43b6d0
mov [ eax + 0x10 ] sub_43b5e0
pop esi
pop ebp
retn
dec edx
je r-xdata
mov [ ecx + 0x174 ] sub_43aa00
mov [ ecx + 0x28 ] sub_43b4c0
mov [ eax + 0x14 ] sub_43b770
pop esi
pop ebp
retn
cmp [ esi + 0x58 ] 0x0
mov edx sub_43aad0
jne r-xdata
mov [ ecx + 0x174 ] edx
mov [ ecx + 0x28 ] sub_43b520
mov [ eax + 0x14 ] sub_43b830
pop esi
pop ebp
retn
mov edx sub_43aa60
sub_43b9c1
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43c11a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43b9e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43c11a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43ba0d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43c11a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43ba36
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43c11a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43ba5f
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43c11a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43ba82
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43c11a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43baab
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_43c11a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_43d1c8
int3
sub_43baf8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_43c11a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_43d1c8
int3
sub_43bb45
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_43c11a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_43d1c8
int3
sub_43bb92
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_43c11a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_43d1c8
int3
sub_43bbdf
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_43c11a
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_43d1c8
int3
sub_43bc0f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43c176
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43bc30
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43c176
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43bc51
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43c176
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43bc72
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43c176
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43bc93
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43c176
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43bcb4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43c176
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43bd20
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_43bda4 ]
jmp [ ecx * 4 + jump_table_43be24 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43be90 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_43c02c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_43bf30 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43c02c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_43be90 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_43c02c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43be90 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43be90 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43be90 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43c02c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43c02c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43c02c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_43c0bc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_43e000
lea esi [ eax + 0x1 ]
push esi
call sub_43d649
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_43df95
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_43c11a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_43c0bc
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43c141
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_43c0fc
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_43c0bc
jmp r-xdata
sub_43c181
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43c11a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43c1aa
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43c11a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43c1fb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_43c0fc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43c222
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_43c141
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43c247
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_43c0fc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43c28b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_43c0fc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43c2cf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_43c0fc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43c313
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rwxdata ]
call esi
push [ rwxdata ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_43e1f7
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_43e157
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_43e157
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
sub_43c3c9
mov edi edi
push esi
push 0x4
push 0x20
call sub_43e10b
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_43c3fa
push 0xc
push r--data
call sub_43e5a0
call sub_43e26d
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_43c313
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43c430
mov eax [ ebp - 0x1c ]
call sub_43e5e5
retn
sub_43c47c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43c46c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43c4bb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_43e980
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_43c4db
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_43e980
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn 0x4
sub_43c4fc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_43e980
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
pop ebp
retn 0x4
sub_43c534
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
mov [ ebp - 0x4 ] r--data
call sub_43c092
mov [ esi ] r--data
mov eax esi
pop esi
leave
retn
sub_43c55a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_43d649
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_43ea64
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rwxdata ] 0x1
mov edi rwxdata
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_43c222
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_43d1c8
int3
or [ rwxdata ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_43c092
push sub_453b4c
mov [ rwxdata ] esi
call sub_43c436
pop ecx
sub_43c64a
push 0x58
push r--data
call sub_43e5a0
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_43fabf
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_43f944
test eax eax
jne r-xdata
push 0x1c
call sub_43c5da
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_43f548
mov [ ebp - 0x4 ] esi
call sub_43f2b0
test eax eax
jns r-xdata
push 0x10
call sub_43c5da
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_43f219
mov [ rwxdata ] eax
call sub_43f15e
test eax eax
jns r-xdata
push 0x1b
call sub_43e574
call sub_43eed9
test eax eax
jns r-xdata
push 0x8
call sub_43e574
push 0x1
call sub_43e353
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_43e574
call sub_43ee7a
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_43e574
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_43e556
jmp r-xdata
push eax
call sub_43e52a
push ecx
push eax
push esi
push __dos_header
call sub_40110c
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_43e5e5
retn
sub_43c7c1
push 0x14
push r--data
call sub_43e5a0
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ eax ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_43c1aa
push r--data
push r--data
lea ecx [ ebp - 0x24 ]
call sub_43c1d3
push r--data
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
lea eax [ ebp - 0x24 ]
push eax
call sub_43d1c8
sub_43c854
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ eax + 0x10 ]
push ebx
mov ebx [ eax + 0x8 ]
push esi
xor esi esi
push edi
mov edi [ eax + 0xc ]
test ebx ebx
je r-xdata
xor eax eax
mov eax [ edi + esi * 4 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ eax ]
cmp eax ecx
je r-xdata
inc esi
cmp esi ebx
jb r-xdata
add ecx 0x8
push ecx
add eax 0x8
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + esi * 4 ]
test [ eax + 0x14 ] 0x4
jne r-xdata
jmp r-xdata
inc esi
cmp esi ebx
jb r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
add ecx 0x8
push ecx
add eax 0x8
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_43c8cb
mov edi edi
push ebp
mov ebp esp
mov edx [ eax + 0x4 ]
xor ecx ecx
test edx edx
js r-xdata
mov eax [ eax ]
add eax ecx
pop ebp
retn
mov ecx edx
mov edx [ ebp + 0x8 ]
mov edx [ ecx + edx ]
push esi
mov esi [ eax + 0x8 ]
add ecx [ edx + esi ]
pop esi
sub_43c8ef
push 0x14
push r--data
call sub_43e5a0
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
and [ ebp - 0x4 ] 0x0
call sub_43c83e
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
xor eax eax
call sub_43e5e5
retn
sub_43c94f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ eax + 0x10 ]
or [ ebp - 0x8 ] 0xffffffff
push ebx
mov ebx [ eax + 0x8 ]
xor ecx ecx
push esi
push edi
mov edi [ eax + 0xc ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] ecx
cmp ebx ecx
jbe r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov esi [ edi + eax * 4 ]
sub eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jbe r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
je r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x14 ]
cmp eax ecx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ esi + 0x8 ]
call sub_43c8cb
pop ecx
cmp eax [ ebp + 0x10 ]
jne r-xdata
add ecx 0x8
push ecx
add eax 0x8
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
add ecx 0x8
push ecx
add eax 0x8
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp - 0x10 ]
test ecx ecx
jne r-xdata
test [ esi + 0x14 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
ja r-xdata
mov [ ebp - 0x14 ] esi
test [ eax + 0x14 ] 0x1
jne r-xdata
test [ ecx + 0x14 ] 0x3
je r-xdata
test [ ecx + 0x14 ] 0x40
jne r-xdata
mov eax esi
jmp r-xdata
test [ esi + 0x14 ] 0x1
jne r-xdata
mov edx [ ecx + 0x18 ]
mov edx [ edx + 0xc ]
mov eax [ edx + eax * 4 ]
mov al [ eax + 0x14 ]
and al 0x1
movzx eax al
neg eax
sbb eax eax
not eax
and eax ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ecx
jmp r-xdata
sub_43ca57
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ eax + 0x10 ]
mov ecx [ eax + 0xc ]
or [ ebp - 0xc ] 0xffffffff
or [ ebp - 0x18 ] 0xffffffff
push ebx
mov ebx [ eax + 0x8 ]
push esi
push edi
xor edi edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp ebx edi
jbe r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x24 ]
mov esi [ ecx + eax * 4 ]
sub eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jbe r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
je r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x14 ]
cmp eax ecx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ esi + 0x8 ]
call sub_43c8cb
pop ecx
cmp eax [ ebp + 0x10 ]
jne r-xdata
add ecx 0x8
push ecx
add eax 0x8
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x14 ] 0x3
jne r-xdata
add ecx 0x8
push ecx
add eax 0x8
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] ebx
jb r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
mov edi esi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x20 ] esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test [ esi + 0x14 ] 0x5
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] esi
test [ edi + 0x14 ] 0x40
jne r-xdata
mov eax [ ebp - 0x20 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ edi + 0x18 ]
mov ecx [ ecx + 0xc ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax + 0x14 ]
test al 0x1
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
shr eax 0x2
not al
and al 0x1
mov [ ebp - 0x1 ] 0x0
mov al 0x1
jmp r-xdata
test [ esi + 0x14 ] 0x1
je r-xdata
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
push [ ebp + 0x8 ]
lea eax [ edi + 0x8 ]
call sub_43c8cb
cmp [ ebp - 0x14 ] 0x0
pop ecx
je r-xdata
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp [ ebp - 0x18 ] eax
jne r-xdata
sub_43cbad
push 0x24
push r--data
call sub_43e5a0
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_43c83e
mov edx eax
mov [ ebp - 0x1c ] edx
mov eax [ esi ]
mov eax [ eax - 0x4 ]
sub esi [ ebp + 0xc ]
sub esi edx
mov ecx [ eax + 0x10 ]
mov ecx [ ecx + 0x4 ]
test cl 0x1
jne r-xdata
xor eax eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x10 ]
push edx
test cl 0x2
jne r-xdata
mov eax [ eax + 0x10 ]
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov [ ebp + 0x8 ] eax
xor esi esi
call sub_43ca57
call sub_43c94f
jmp r-xdata
xor eax eax
jmp r-xdata
mov ebx [ edi + esi * 4 ]
mov eax [ ebx ]
mov ecx [ ebp + 0x14 ]
cmp eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x20 ] eax
cmp [ ebp + 0x18 ] eax
je r-xdata
add eax 0x8
push [ ebp - 0x1c ]
call sub_43c8cb
pop ecx
add eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
add esp 0x10
test eax eax
je r-xdata
inc esi
mov [ ebp - 0x28 ] esi
cmp esi [ ebp + 0x8 ]
jae r-xdata
add ecx 0x8
push ecx
add eax 0x8
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call sub_43c181
push r--data
lea eax [ ebp - 0x34 ]
push eax
call sub_43d1c8
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
call sub_43e5e5
retn
mov eax [ edi + esi * 4 ]
test [ eax + 0x14 ] 0x4
jne r-xdata
inc esi
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x10 ]
cmp eax ecx
je r-xdata
mov [ ebp - 0x24 ] esi
cmp esi [ ebp + 0x8 ]
jae r-xdata
mov eax ebx
jmp r-xdata
add ecx 0x8
push ecx
add eax 0x8
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_43cd17
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_43cd4b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_43cd92
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_43cde6
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_440ee8
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_43ce1c
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_440ee8
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_43ce52
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_440ee8
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_43cea7
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_43bd0f
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_440ee8
add esp 0x20
pop esi
pop ebp
retn
sub_43ceda
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_43cfb1
mov eax [ rwxdata ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_43f781
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_43cfb1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_43bd0f
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_440ee8
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_43ceda
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_43cd92
pop ebx
leave
retn
sub_43d050
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_44101a
call sub_44101a
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_43d0c3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_43f781
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_43f781
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_43d0ef
mov edi edi
push ebp
mov ebp esp
call sub_43f781
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_43d116
mov edi edi
push ebp
mov ebp esp
push esi
call sub_43f781
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_43f781
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_43f781
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_44101a
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_43d168
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_43cea7
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_441070
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_43d1c8
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_43d220
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_43d2a4 ]
jmp [ ecx * 4 + jump_table_43d324 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43d390 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_43d52c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_43d430 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43d52c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_43d390 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_43d52c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43d390 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43d390 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_43d390 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43d52c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43d52c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_43d52c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_43d590
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_4410bc
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_43d60a
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call sub_43ecb1
push 0x1e
call sub_43eb02
push 0xff
call sub_43e255
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
sub_43d649
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_43ea64
pop ecx
call sub_4411b8
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_43ecb1
push 0x1e
call sub_43eb02
push 0xff
call sub_43e255
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rwxdata ] eax
je r-xdata
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_4411b8
mov [ eax ] esi
push ebx
call sub_43ea64
pop ecx
test eax eax
jne r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
jmp r-xdata
call sub_4411b8
mov [ eax ] esi
sub_43d6dd
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_4411b8
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_441176
pop ecx
mov [ esi ] eax
pop esi
sub_43d720
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_43d7c0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_43d83a
push 0x14
push r--data
call sub_43e5a0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_43d898
push 0xc
push r--data
call sub_43e5a0
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43d8e3
call sub_43e5e5
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_43d900
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_43d940
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_43d960
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_43d980
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_43da0b
mov edi edi
push ebp
mov ebp esp
push esi
call sub_43f5c6
call sub_43f5c0
push eax
call sub_43f5a6
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_43f79b
mov esi [ ebp + 0x8 ]
push esi
call sub_43f5c0
push eax
call sub_43f5fa
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_43d9ca
sub_43da70
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
call sub_43f5c6
push 0x214
push 0x1
call sub_43e10b
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
xor eax eax
jmp r-xdata
push esi
call sub_43d6dd
pop ecx
test ebx ebx
je r-xdata
call sub_43f781
push [ eax + 0x6c ]
push esi
call sub_43f654
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push ebx
call sub_4411de
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_43da0b
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov ebx eax
sub_43db40
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rwxdata ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_43bd0f
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_43bd0f
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rwxdata
push edi
mov ecx ebx
call sub_4415eb
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_4415a2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_43bd0f
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_43bd0f
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_4415d2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rwxdata
push edi
mov edx ebx
mov ecx eax
call sub_4415eb
mov eax [ ebp + 0xc ]
push r--data
call sub_4416a0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_43bd0f
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_4415b9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_43bd0f
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_43dccf
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_43d649
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_43d6dd
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_43ea64
pop ecx
call sub_4411b8
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rwxdata ] eax
je r-xdata
pop edi
call sub_4411b8
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_441176
pop ecx
mov [ esi ] eax
push esi
call sub_43ea64
pop ecx
test eax eax
je r-xdata
call sub_4411b8
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_441176
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_43dd7c
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] edx
mov [ rwxdata ] ebx
mov [ rwxdata ] esi
mov [ rwxdata ] edi
mov [ rwxdata ] ss
mov [ rwxdata ] cs
mov [ rwxdata ] ds
mov [ rwxdata ] es
mov [ rwxdata ] fs
mov [ rwxdata ] gs
pushfd
pop [ rwxdata ]
mov eax [ ebp ]
mov [ rwxdata ] eax
mov eax [ ebp + 0x4 ]
mov [ rwxdata ] eax
lea eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x320 ]
mov [ rwxdata ] 0x10001
mov eax [ rwxdata ]
mov [ rwxdata ] eax
mov [ rwxdata ] 0xc0000409
mov [ rwxdata ] 0x1
mov eax [ rwxdata ]
mov [ ebp - 0x328 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rwxdata ] eax
push 0x1
call sub_44175c
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rwxdata ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_44175c
pop ecx
sub_43df95
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_4411b8
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_4411b8
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_441465
mov eax esi
jmp r-xdata
sub_43e000
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_43e08b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rwxdata ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_43e0c6
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_43d649
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_43e10b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441764
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_43e157
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dccf
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_43e1a5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4417e6
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_43e1f7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
or eax 0xffffffff
pop ebp
retn
sub_43e22a
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_43e27f
mov edi edi
push esi
call sub_43f594
mov esi eax
push esi
call sub_43ea08
push esi
call sub_44128d
push esi
call sub_43fd92
push esi
call sub_441f0c
push esi
call sub_441a19
push esi
call sub_441052
add esp 0x18
pop esi
retn
sub_43e2b2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_43e2cf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_43e2f3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_43e323
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_43e353
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
je r-xdata
call sub_44200b
push r--data
push r--data
call sub_43e2cf
pop ecx
pop ecx
test eax eax
jne r-xdata
push rwxdata
call sub_4416a0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_43f56e
call sub_43c436
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rwxdata ]
pop ecx
cmp [ rwxdata ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rwxdata
call sub_4416a0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rwxdata ]
sub_43e3ea
push 0x20
push r--data
call sub_43e5a0
push 0x8
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rwxdata ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e515
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rwxdata ] eax
mov al [ ebp + 0x10 ]
mov [ rwxdata ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_43e5e5
retn
mov [ rwxdata ] 0x1
push 0x8
call sub_4418f5
pop ecx
push [ ebp + 0x8 ]
call sub_43e255
mov [ ebp - 0x20 ] r--data
push [ rwxdata ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rwxdata ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_43f594
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_43f594
mov [ edi ] eax
call ebx
push [ rwxdata ]
call esi
mov ebx eax
push [ rwxdata ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_43e5a0
push sub_43db40
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_43e5f9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4413f9
sub_43e61a
push 0xc
push r--data
call sub_43e5a0
push 0xe
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e681
call sub_43e5e5
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_43d6dd
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_43d6dd
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_43e68a
push 0xc
push r--data
call sub_43e5a0
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x2800
push sub_43d6dd
push sub_43d649
push ebx
lea eax [ edi + 0x9 ]
push eax
push ebx
call sub_447209
add esp 0x18
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_43e000
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi ebx
ja r-xdata
call sub_43e5e5
retn
dec esi
mov eax [ ebp - 0x1c ]
cmp [ eax + esi ] 0x20
jne r-xdata
dec esi
push 0xe
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov [ eax + esi ] bl
push [ ebp - 0x1c ]
call sub_43d6dd
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e773
push 0x8
call sub_43d649
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
add esi 0x2
push esi
call sub_43d649
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_43d6dd
pop ecx
push [ ebp - 0x1c ]
push esi
push eax
call sub_43df95
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4413f9
mov eax [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub_43e77c
push 0xc
push r--data
call sub_43e5a0
push 0xe
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e7e3
call sub_43e5e5
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_43d6dd
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_43d6dd
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_43e7ec
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push sub_43d6dd
push sub_43d649
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447209
add esp 0x18
pop ebp
retn
mov [ ebp + 0x14 ] 0x2800
sub_43e81f
push 0x10
push r--data
call sub_43e5a0
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xe
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e922
push 0x2800
push ebx
add esi 0x9
push esi
push ebx
call sub_43e7ec
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
push edi
call sub_43e000
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_4414b0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x8
call sub_43d649
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + edi ]
cmp [ eax ] 0x20
jne r-xdata
call sub_43e5e5
retn
push [ ebp - 0x1c ]
call sub_43d6dd
pop ecx
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x2 ]
push ebx
call sub_43d649
pop ecx
mov esi eax
test esi esi
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_43d6dd
pop ecx
push [ ebp - 0x1c ]
push ebx
push esi
call sub_43df95
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax esi
dec esi
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4413f9
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ edi ] esi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ eax + 0x4 ] edi
jmp r-xdata
sub_43e92b
push 0x8
push r--data
call sub_43e5a0
push 0xe
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e975
call sub_43e5e5
retn
mov edi [ esi + 0x4 ]
push [ esi ]
call sub_43d6dd
push esi
call sub_43d6dd
pop ecx
pop ecx
mov esi edi
jmp r-xdata
test esi esi
je r-xdata
sub_43e980
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_43ea17
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_4419e6
pop ecx
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rwxdata ] eax
call sub_4418f5
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_43ea64
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_43ea8c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_440fce
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_43eadc
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_43eb02
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_43eadc
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
push 0x3
call sub_447d25
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_447d25
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rwxdata ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rwxdata
push edi
call sub_447cc2
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_43e000
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_4413f9
push esi
call sub_447ca7
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_447cc2
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_447b65
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_447ca7
lea eax [ eax * 2 + rwxdata ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_447bda
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_447b65
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_4479f9
add esp 0xc
jmp r-xdata
sub_43ecb1
push 0x3
call sub_447d25
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_43eb02
push 0xff
call sub_43eb02
pop ecx
pop ecx
push 0x3
call sub_447d25
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rwxdata ] 0x1
jne r-xdata
sub_43ecea
mov eax ecx
push esi
add ecx 0x90
pop esi
cmp eax ecx
jae r-xdata
add eax 0xc
lea esi [ ecx + 0x90 ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
retn
sub_43ed10
mov edi edi
push ebp
mov ebp esp
push esi
call sub_43f708
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_43ee5a
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_43ed10
pop ecx
pop ecx
pop ebp
retn
sub_43ee7a
mov edi edi
push esi
push edi
xor edi edi
cmp [ rwxdata ] edi
jne r-xdata
mov esi [ rwxdata ]
test esi esi
jne r-xdata
call sub_4487cc
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_448017
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_43eed9
cmp [ rwxdata ] 0x0
jne r-xdata
push esi
mov esi [ rwxdata ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_4487cc
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_43e10b
mov edi eax
pop ecx
pop ecx
mov [ rwxdata ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_43e000
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rwxdata ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_43e000
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rwxdata ]
call sub_43d6dd
and [ rwxdata ] 0x0
and [ edi ] 0x0
mov [ rwxdata ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_43e10b
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rwxdata ]
call sub_43d6dd
and [ rwxdata ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_43df95
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4413f9
int3
add edi 0x4
sub_43efc4
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_448017
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_448017
pop ecx
test eax eax
je r-xdata
call sub_448017
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_43f15e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rwxdata ] ebx
jne r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
cmp eax ebx
je r-xdata
call sub_4487cc
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_43efc4
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_43e0c6
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_43efc4
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rwxdata ] eax
mov [ rwxdata ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_43f219
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_43e0c6
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_43d6dd
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_43f2b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_43e10b
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rwxdata ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rwxdata ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rwxdata
mov esi ebx
shl esi 0x6
add esi [ rwxdata ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rwxdata ]
add [ rwxdata ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rwxdata ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_43e10b
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_43f4f5
mov edi edi
push esi
push edi
mov edi rwxdata
add edi 0x4
cmp edi rwxdata
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_43d6dd
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_43f548
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_43f56e
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_43f5c6
mov edi edi
push esi
push [ rwxdata ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rwxdata ]
call [ TlsSetValue@IAT ]
sub_43f617
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
or [ rwxdata ] 0xffffffff
jmp sub_44189e
push eax
call [ TlsFree@IAT ]
or [ rwxdata ] 0xffffffff
sub_43f654
push 0x8
push r--data
call sub_43e5a0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rwxdata
push 0xd
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f6f6
push 0xc
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_4487ea
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f6ff
call sub_43e5e5
retn
mov eax [ rwxdata ]
mov [ esi + 0x6c ] eax
sub_43f708
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rwxdata ]
mov edi eax
call sub_43f5c6
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_43e10b
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_43d6dd
pop ecx
xor esi esi
push 0x0
push esi
call sub_43f654
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_43f79b
push 0x8
push r--data
call sub_43e5a0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_43e5e5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_43d6dd
pop ecx
push 0xd
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f8b5
push 0xc
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43f8c1
push esi
call sub_43d6dd
pop ecx
push edi
call sub_448879
pop ecx
cmp edi [ rwxdata ]
je r-xdata
cmp edi rwxdata
je r-xdata
cmp edi rwxdata
je r-xdata
push edi
call sub_43d6dd
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_448912
pop ecx
sub_43f8ca
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_43f79b
push esi
push [ rwxdata ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rwxdata ]
push [ rwxdata ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_43f944
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
cmp [ rwxdata ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rwxdata ] eax
je r-xdata
call sub_43f617
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rwxdata ] eax
mov eax [ TlsFree@IAT ]
mov [ rwxdata ] sub_43f59d
mov [ rwxdata ] esi
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
je r-xdata
xor eax eax
push [ rwxdata ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
call sub_43e27f
push [ rwxdata ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
mov [ rwxdata ] eax
call sub_441854
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_43f617
mov edi [ DecodePointer@IAT ]
push sub_43f79b
push [ rwxdata ]
call edi
call eax
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_43e10b
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_43f654
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_43faf7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rwxdata ] eax
jmp r-xdata
mov [ rwxdata ] esi
not esi
mov [ rwxdata ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_43fb92
call sub_441b0a
test eax eax
je r-xdata
test [ rwxdata ] 0x2
je r-xdata
push 0x16
call sub_441d69
pop ecx
push 0x3
call sub_43e540
int3
push 0x1
push 0x40000015
push 0x3
call sub_44129c
add esp 0xc
sub_43fbc5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rwxdata ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rwxdata ] ecx
pop ebp
retn
sub_43fbe6
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_448ce8
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_43e10b
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_43d6dd
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_43e10b
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_448b23
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_448ce8
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4413f9
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_43d6dd
pop ecx
inc esi
push esi
push eax
call sub_43e10b
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_43d6dd
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_448ce8
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
sub_43fda1
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43c11a
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43fdca
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_43c176
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43c44d
pop ecx
sub_43fdf1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_43fe50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_43f781
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_43f781
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_43f781
and [ eax + 0x90 ] 0x0
jmp sub_440fce
sub_43fe9f
push 0x10
push r--data
call sub_43e5a0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43ff61
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_43f781
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_43e5e5
retn
call sub_44101a
call sub_44101a
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_441070
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_43ff7b
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_43f781
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_43ffc0
push 0x8
push r--data
call sub_43e5a0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_43e5e5
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_43cd7d
mov [ ebp - 0x4 ] 0xfffffffe
sub_440015
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_44004f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
or [ edi + 0x8 ] 0xffffffff
or [ edi + 0xc ] 0xffffffff
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
inc eax
pop ebp
retn
call sub_43f781
and [ eax + 0x90 ] 0x0
cmp [ esi ] 0xe06d7363
jne r-xdata
push [ esi + 0x18 ]
push edi
call sub_43d0c3
pop ecx
pop ecx
call sub_43f781
mov eax [ eax + 0x88 ]
mov [ edi + 0x8 ] eax
call sub_43f781
mov eax [ eax + 0x8c ]
mov [ edi + 0xc ] eax
call sub_43f781
mov [ eax + 0x88 ] esi
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_43f781
dec [ eax + 0x90 ]
call sub_43f781
cmp [ eax + 0x90 ] 0x0
pop edi
pop esi
jge r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_43f781
mov esi [ eax + 0x88 ]
cmp eax 0x19930522
jne r-xdata
sub_440105
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_43f781
inc [ eax + 0x90 ]
xor eax eax
inc eax
pop ebp
retn
cmp ecx 0x19930522
jne r-xdata
sub_440156
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
push esi
call sub_43d116
cmp [ ebp + 0xc ] 0x0
pop ecx
mov edi 0xe06d7363
mov ebx 0x19930520
jne r-xdata
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_43f781
mov ecx [ esi + 0x8 ]
mov [ eax + 0x88 ] ecx
call sub_43f781
mov ecx [ esi + 0xc ]
pop edi
mov [ eax + 0x8c ] ecx
pop ebx
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_43f781
mov eax [ eax + 0x88 ]
push [ eax + 0x18 ]
call sub_43d0ef
pop ecx
test eax eax
je r-xdata
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_43f781
dec [ eax + 0x90 ]
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
push 0x1
call sub_43f781
push [ eax + 0x88 ]
call sub_43ffc0
pop ecx
pop ecx
call sub_43f781
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_44032f
push 0x8
push r--data
call sub_43e5a0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
sub_44036a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_44101a
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_43fdf1
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_440430
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ esi ] ebx
jle r-xdata
xor al al
mov eax [ esi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rwxdata
call sub_43c4bb
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
inc edi
add ebx 0x10
cmp edi [ esi ]
jl r-xdata
pop edi
pop ebx
retn
sub_440460
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
call sub_44101a
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_44101a
call sub_44101a
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov edi [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp eax 0x19930521
je r-xdata
test edi edi
jg r-xdata
cmp eax 0x19930522
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_43c520
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
dec edi
add esi 0x4
pop edi
pop esi
pop ebp
retn
sub_4404e6
push 0x2c
push r--data
call sub_43e5a0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_43d0c3
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_43f781
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_43f781
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_43f781
mov [ eax + 0x88 ] esi
call sub_43f781
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_43d168
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_44060c
mov eax [ ebp - 0x1c ]
call sub_43e5e5
retn
sub_44057f
mov esp [ ebp - 0x18 ]
call sub_43f781
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_43fe9f
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_44060c
mov eax [ ebp - 0x1c ]
call sub_43e5e5
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_44060c
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_43d116
pop ecx
call sub_43f781
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_43f781
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_43d0ef
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_43ffc0
pop ecx
pop ecx
sub_440682
push 0xc
push r--data
call sub_43e5a0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_448e2c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_448e2c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_44101a
push ebx
push esi
call sub_448e3e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_448e2c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_448e2c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_448e3e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_448e3e
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_448e3e
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_43d220
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_448e50
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_440015
pop ecx
pop ecx
push eax
push esi
call sub_43d220
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_43e5e5
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_440015
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_440801
push 0x8
push r--data
call sub_43e5a0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_440015
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_43cd84
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_440682
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_440015
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_43cd8b
jmp r-xdata
sub_440893
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
leave
retn
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
cmp eax 0xe06d7363
jne r-xdata
cmp eax 0xe0434352
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_43f781
inc [ eax + 0x90 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_43f781
cmp [ eax + 0x88 ] 0x0
jne r-xdata
cmp eax 0x19930522
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
or ebx 0x80000000
mov [ ebp - 0xc ] edi
mov edi [ eax ]
mov [ ebp - 0x10 ] ebx
lea ebx [ eax + 0x4 ]
jmp r-xdata
call sub_43f781
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
test edi edi
jg r-xdata
call sub_43f781
mov esi [ eax + 0x88 ]
mov eax [ ebx ]
push [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43fdf1
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_43f781
inc [ eax + 0x90 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec edi
add ebx 0x4
xor eax eax
inc eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_440801
add esp 0x10
jmp r-xdata
sub_4409e1
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_440801
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_43cd4b
call sub_43cd92
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_43fe9f
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4404e6
add esp 0x28
test eax eax
je r-xdata
sub_440a4f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_43f781
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_43f781
lea edi [ eax + 0x80 ]
call sub_43f594
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_43d050
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_44101a
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43ceda
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4409e1
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_440b56
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_44101a
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_43f781
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_44101a
call sub_440fce
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_440a4f
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_43f781
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_43f781
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_43f781
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_448e2c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_43d050
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_44101a
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_43ffc0
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_43f781
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_43f781
mov edi [ eax + 0x94 ]
call sub_43f781
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_44036a
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_44036a
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rwxdata
call sub_43c4bb
test al al
jne r-xdata
call sub_44101a
cmp eax 0x19930522
jne r-xdata
call sub_43f781
call sub_43f781
call sub_43f781
mov [ eax + 0x88 ] esi
call sub_43f781
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_43fdf1
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_43ffc0
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_43c11a
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_43d1c8
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_4409e1
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_43cd92
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_43fe9f
add esp 0x10
push [ esi + 0x1c ]
call sub_4403e5
sub_440ee8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_43f781
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_440b56
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_43fe9f
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_441070
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_448f7c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_448f7c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4410bc
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_441176
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rwxdata ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rwxdata ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4411de
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4411cb
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_441176
pop ecx
mov esi eax
call sub_4411b8
mov [ eax ] esi
pop esi
pop ebp
retn
sub_441201
mov edi edi
push ebp
mov ebp esp
call sub_43f708
test eax eax
jne r-xdata
call sub_4411b8
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_441222
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_4411b8
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_441465
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_441247
mov edi edi
push ebp
mov ebp esp
call sub_43f708
test eax eax
jne r-xdata
call sub_4411cb
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_441268
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_4411cb
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_441465
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_44129c
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_43d590
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_44175c
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_44175c
pop ecx
sub_4413c5
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_4413f9
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_44129c
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_441438
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4413f9
int3
pop ebp
jmp eax
sub_441475
xor eax eax
push esi
push eax
push eax
push eax
push eax
push eax
call sub_441438
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_44129c
add esp 0x20
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
int3
sub_4414b0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_441540
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_448f85
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_448fa4
jmp r-xdata
sub_441540
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_43bd0f
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4414b0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4415a2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_4415d2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_441610
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_441650
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4416a0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_43db40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_441610
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_441650
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441764
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_4411b8
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rwxdata ] 0x0
je r-xdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_43ea64
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_4417e6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_43dccf
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_43e1f7
pop ecx
mov ebx eax
call sub_4411b8
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_43d590
add esp 0xc
sub_441854
mov edi edi
push esi
push edi
xor esi esi
mov edi rwxdata
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rwxdata ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rwxdata ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rwxdata ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_44189e
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rwxdata
push edi
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rwxdata
pop edi
push edi
call ebx
push edi
call sub_43d6dd
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_441924
push 0xc
push r--data
call sub_43e5a0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rwxdata ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rwxdata ]
cmp [ esi ] ebx
je r-xdata
call sub_43ecb1
push 0x1e
call sub_43eb02
push 0xff
call sub_43e255
push 0x18
call sub_43e0c6
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_4411b8
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_43e5e5
retn
push edi
call sub_43d6dd
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_43d6dd
pop ecx
call sub_4411b8
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4419dd
mov eax [ ebp - 0x1c ]
sub_4419e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rwxdata ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_441924
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_43e574
sub_441a37
push 0x10
push r--data
call sub_43e5a0
xor edi edi
push edi
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_441ab3
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_43f594
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_43e5e5
retn 0x4
sub_441ad3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_441b29
push 0x10
push r--data
call sub_43e5a0
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_441a37
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_4411cb
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rwxdata ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_441d2e
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_43f708
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_43e5e5
retn
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_441ad3
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_43e0c6
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ r--data ]
push edi
push eax
call sub_43bd20
add esp 0xc
add eax 0x4
jmp r-xdata
cmp [ eax ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
add eax 0xc
mov edx [ r--data ]
imul edx edx 0xc
add edx [ esi + 0x5c ]
lea edi [ eax - 0x4 ]
cmp edi edx
jae r-xdata
jmp r-xdata
sub_441d69
push 0x20
push r--data
call sub_43e5a0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
sub eax 0x6
je r-xdata
call sub_43f708
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_43e5e5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_441ad3
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_43e540
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4419e6
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_43f594
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_441ed0
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_441f1b
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_4411b8
push 0x16
pop esi
mov [ eax ] esi
call sub_441465
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_4411b8
mov [ eax ] 0xc
call sub_4411b8
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_4411b8
push 0x16
pop esi
mov [ eax ] esi
call sub_441465
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_43f594
push edi
push rwxdata
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_4411b8
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_441176
pop ecx
mov [ edi ] eax
call sub_441465
call esi
push eax
call sub_441176
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_44200b
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rwxdata ]
call [ EncodePointer@IAT ]
mov [ edi + rwxdata ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_442034
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_442053
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ esi + 0x4 ]
pop ecx
sub_44207b
mov ecx [ rwxdata ]
mov dl [ ecx ]
test dl dl
jne r-xdata
cmp dl 0x30
jl r-xdata
xor eax eax
retn
xor eax eax
jmp r-xdata
cmp dl 0x39
jg r-xdata
cmp dl 0x40
jne r-xdata
movsx eax dl
sub eax 0x2f
inc ecx
mov [ rwxdata ] ecx
retn
test dl dl
je r-xdata
mov dl [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp dl 0x40
je r-xdata
cmp dl 0x41
jl r-xdata
retn
or eax 0xffffffff
cmp dl 0x50
jg r-xdata
movsx edx dl
add eax eax
inc ecx
lea eax [ edx + eax * 8 - 0x41 ]
mov [ rwxdata ] ecx
mov dl [ ecx ]
sub_4420dd
mov ecx [ rwxdata ]
push ebx
push esi
mov edx 0x4000
push edi
mov al [ ecx ]
cmp al 0x41
jl r-xdata
inc ecx
mov esi edx
mov [ rwxdata ] ecx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
xor bl bl
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x42
jg r-xdata
movsx eax [ ecx ]
sub eax 0x41
mov edx 0x8000
inc ecx
or esi edx
mov [ rwxdata ] ecx
test al 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
lea esi [ ecx + 0xfffe ]
inc ecx
mov [ rwxdata ] ecx
mov esi 0xfffd
jmp r-xdata
movsx eax al
inc ecx
add eax 0xffffffd0
and esi 0xffff7fff
mov [ rwxdata ] ecx
cmp eax 0x8
ja r-xdata
or esi 0x7c00
dec eax
je r-xdata
or esi 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax esi
mov ebx 0xffff9fff
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_44259d ]
and esi 0xfffff5ff
or esi 0x9100
jmp r-xdata
dec eax
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
mov esi 0xfffe
dec ecx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and esi ebx
and esi 0xffffefff
or esi edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
and esi 0xffffdfff
or esi edx
jmp r-xdata
and esi 0xffffe3ff
or esi 0x6000
jmp r-xdata
and esi 0xffffbfff
or esi 0x2000
jmp r-xdata
and esi 0xffffebff
or esi 0x6800
jmp r-xdata
and esi 0xfffff3ff
or esi 0x7000
jmp r-xdata
and esi 0xfffffbff
or esi 0x7800
jmp r-xdata
and esi 0xfffff6ff
or esi 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ ecx + 0x1 ] 0x50
jne r-xdata
test edx esi
je r-xdata
cmp ecx 0x8
je r-xdata
mov ecx eax
and ecx 0x18
je r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
mov bl 0x1
cmp al 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x4a
jg r-xdata
inc ecx
and esi 0xffffefff
or esi edi
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
cmp ecx 0x10
je r-xdata
and esi 0xffffefff
or esi 0x800
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
test edx esi
je r-xdata
xor ecx ecx
test al al
sete cl
lea eax [ ecx + 0xfffe ]
jmp r-xdata
cmp al 0x35
jg r-xdata
movsx eax [ ecx ]
mov edx 0x8000
or esi edx
sub eax 0x30
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffff9fff
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xfffff4ff
or esi 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
and esi 0xfffffdff
or esi 0x500
and esi 0xfffffeff
or esi 0x600
jmp r-xdata
test bl bl
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov esi 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and esi ebx
jmp r-xdata
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xfffff9ff
or esi 0x100
jmp r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
test al 0x1
je r-xdata
xor esi esi
cmp [ ecx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
lea eax [ ecx + eax - 0x2f ]
mov [ rwxdata ] eax
call sub_4420dd
or eax 0x10000
jmp r-xdata
dec eax
dec eax
jmp r-xdata
and esi 0xfffffcff
or esi 0x400
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
jne r-xdata
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
sub_4426b4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x7
and edi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
mov esi ecx
je r-xdata
test edi edi
jne r-xdata
push edi
call [ esi ]
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
cmp eax edi
jae r-xdata
push 0x8
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub eax edi
mov [ esi + 0x10 ] eax
mov ebx 0x1000
cmp edi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rwxdata
call sub_4426b4
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx + 0x4 ]
sub ebx edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_44284c
mov edi edi
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x4 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x4 ]
cmp dl 0x1
jle r-xdata
mov [ eax + 0x4 ] dl
sub_4428d1
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
test ecx ecx
je r-xdata
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
mov dl [ ecx + 0x4 ]
cmp dl 0x2
je r-xdata
xor ecx ecx
cmp dl 0x3
jne r-xdata
sub_442928
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_442949
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov [ eax + 0x4 ] edx
dec edx
neg edx
sbb edx edx
and edx 0xfffffffc
add edx 0x4
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_44297e
mov edi edi
push ebp
mov ebp esp
xor ecx ecx
inc ecx
test [ rwxdata ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
or [ rwxdata ] ecx
mov eax r--data
xor edx edx
mov [ rwxdata ] eax
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x4
mov [ rwxdata ] eax
mov [ rwxdata ] 0x2
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] 0x3
mov [ rwxdata ] edx
mov eax rwxdata
pop ebp
retn
imul eax eax 0xc
add eax rwxdata
pop ebp
retn
sub_442a25
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jge r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push ebx
push edi
mov edi [ esi + 0x4 ]
call [ eax ]
mov ebx eax
mov eax [ edi ]
mov ecx edi
call [ eax ]
add ebx eax
pop edi
mov [ esi + 0xc ] ebx
pop ebx
sub_442a50
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x4 ]
sub_442a6c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
sub_442aa6
mov edi edi
push esi
mov esi edx
test esi esi
je r-xdata
pop esi
retn
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_442abc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ ecx ]
test al al
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
cmp al [ edx ]
jne r-xdata
inc ecx
inc edx
sub_442ae6
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
or [ eax ] 0xffffffff
lea ecx [ eax + 0x2c ]
or [ ecx ] 0xffffffff
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
push esi
mov esi [ ebp + 0x10 ]
mov [ rwxdata ] esi
mov [ rwxdata ] edx
pop esi
jmp r-xdata
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x14 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
pop ebp
retn 0x14
sub_442b55
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_4469d4
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_442b8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x10 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4469d4
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_442bdf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
je r-xdata
mov esi eax
lea eax [ edi + esi ]
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx edi
sub eax edi
mov edx esi
push ebx
mov bl [ eax + ecx ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
pop ebx
sub_442c16
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x8
mov ecx rwxdata
call sub_4426b4
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_4428d1
jmp r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
mov [ esi ] eax
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
sub_442c69
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
and [ esi + 0x4 ] 0xffff00ff
cmp ecx 0x2
je r-xdata
mov eax ecx
cmp ecx 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_44297e
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] al
cmp ecx 0x1
jne r-xdata
sub_442cae
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
lea edi [ eax + 0x1 ]
push esi
push edi
mov ecx rwxdata
call sub_4426b4
mov esi eax
test esi esi
je r-xdata
mov eax [ ecx ]
lea edx [ esi + edi - 0x1 ]
push edx
push esi
call [ eax + 0x8 ]
mov eax esi
jmp r-xdata
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebx ]
test ecx ecx
jne r-xdata
sub_442d0d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rwxdata
call sub_4426b4
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_442d55
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x8
mov ecx rwxdata
call sub_4426b4
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_4428d1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_442da2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_44297e
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_442dd9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rwxdata
call sub_4426b4
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ esi + ecx * 4 + 0x4 ] eax
test eax eax
je r-xdata
sub_442e23
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x9
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_442c69
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp eax edx
jg r-xdata
pop ebp
retn 0x8
mov ecx [ ecx + eax * 4 + 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_442e72
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov ecx rwxdata
call sub_4426b4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
jmp r-xdata
sub_442efc
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_442bdf
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_442f25
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x40
push [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_4478b1
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
call sub_442c16
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_442f69
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_442da2
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_44297e
pop ecx
push eax
mov ecx esi
call sub_442d0d
jmp r-xdata
sub_442fab
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x2
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub eax ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
dec eax
push ebx
mov ecx rwxdata
je r-xdata
pop edi
push 0x8
call sub_4426b4
cmp eax ebx
je r-xdata
push 0xc
call sub_4426b4
cmp eax ebx
je r-xdata
xor eax eax
mov cl [ edi ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push edi
call sub_442e72
jmp r-xdata
mov [ esi ] eax
cmp eax ebx
jne r-xdata
sub_44302e
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_442fab
sub_44305b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
cmp eax edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor ecx ecx
cmp [ eax ] dl
je r-xdata
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
cmp ecx edx
jbe r-xdata
push ecx
push eax
mov ecx esi
call sub_442fab
sub_443098
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov edi ecx
mov [ edi + 0x4 ] dl
and [ edi + 0x4 ] 0xffff00ff
mov [ edi ] edx
mov eax [ esi ]
cmp eax edx
je r-xdata
mov [ edi + 0x4 ] 0x2
cmp [ eax ] dl
je r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push edx
push [ ebp + 0x8 ]
mov ecx edi
call sub_442fab
mov eax [ esi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ esi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
inc edx
inc ecx
mov eax ecx
mov [ esi ] ecx
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x3
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rwxdata ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_443157
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor eax eax
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
lea edi [ ebp - 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x8 ] al
push 0x0
push 0xa
push [ ebp + 0xc ]
dec edi
push [ ebp + 0x8 ]
call sub_43d720
add cl 0x30
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x20 ] ebx
mov [ edi ] cl
mov [ ebp + 0xc ] edx
jne r-xdata
lea eax [ ebp - 0x8 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_442fab
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn 0x8
sub_4431c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x4 ] cl
and [ esi + 0x4 ] 0xffff00ff
push edi
lea edi [ ebp - 0x7 ]
mov [ esi ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp eax ecx
jg r-xdata
push ebx
jmp r-xdata
jl r-xdata
push ecx
push 0xa
push eax
push [ ebp + 0x8 ]
dec edi
call sub_43d720
add cl 0x30
mov [ ebp + 0x8 ] eax
mov [ edi ] cl
mov ecx [ ebp + 0x8 ]
mov eax edx
or ecx eax
mov [ ebp - 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
adc eax ecx
mov [ ebp - 0x1d ] 0x1
neg eax
mov [ ebp + 0x8 ] edx
cmp [ ebp + 0x8 ] ecx
jae r-xdata
xor ecx ecx
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
lea eax [ ebp - 0x7 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_442fab
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_43bd0f
leave
retn 0x8
dec edi
mov [ edi ] 0x2d
sub_443260
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_442f69
mov eax esi
pop esi
pop ebp
retn 0x8
sub_443284
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_442f69
jmp r-xdata
push ecx
mov ecx esi
call sub_442d0d
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_4432c7
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ edi ] 0x0
jne r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
push esi
call sub_442d55
jmp r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_4426b4
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_4428d1
jmp r-xdata
movsx eax al
push eax
call sub_442f69
jmp r-xdata
push eax
mov ecx edi
call sub_442d0d
sub_44332e
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_442fab
sub_44335b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_442fab
mov eax esi
pop esi
pop ebp
retn 0x4
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_443390
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
sub eax 0x41
inc [ rwxdata ]
cmp eax 0xe
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov edx [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and edx 0xffff0002
push 0x2
pop ecx
or edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ rwxdata ]
shr edx 0x1
not edx
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
and eax 0xfffffffe
sub eax 0x0
je r-xdata
push 0x1
sub eax ecx
je r-xdata
push ecx
jmp r-xdata
sub eax ecx
je r-xdata
call sub_442695
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_44335b
push 0x4
jmp r-xdata
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
push 0x5
jmp r-xdata
sub eax 0x4
je r-xdata
push 0x6
jmp r-xdata
sub eax ecx
jne r-xdata
push 0x7
jmp r-xdata
sub_443458
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
cmp al 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_44305b
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
pop ebp
retn
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4434a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_443284
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4434c7
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_4432c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4434eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_4426b4
test eax eax
je r-xdata
push ebx
call sub_44332e
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_442d0d
sub_44353d
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
pop ebx
cmp [ esi ] bl
je r-xdata
cmp [ edi ] ebx
jne r-xdata
push ebx
push 0xc
mov ecx rwxdata
call sub_4426b4
cmp eax ebx
je r-xdata
push esi
call sub_44335b
jmp r-xdata
xor eax eax
xor edx edx
cmp [ esi ] bl
je r-xdata
push edx
push esi
mov ecx eax
call sub_442e72
jmp r-xdata
inc edx
cmp [ edx + esi ] bl
jne r-xdata
push eax
mov ecx edi
call sub_442d0d
sub_4435a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
push edi
pop edi
cmp al 0x5a
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_4434eb
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_442f69
movsx eax al
sub eax 0x30
cmp eax 0x9
ja r-xdata
mov edi [ rwxdata ]
mov al [ edi ]
cmp al bl
je r-xdata
and [ ebp - 0x8 ] 0xffff0000
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] ebx
call sub_447700
mov eax [ rwxdata ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ rwxdata ]
push eax
lea eax [ ebp - 0x1c ]
inc edi
push eax
mov [ rwxdata ] edi
call sub_442e23
push eax
mov ecx esi
call sub_443284
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_443284
cmp [ rwxdata ] edi
jne r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_442dd9
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
je r-xdata
jmp r-xdata
sub_4436a7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
push r--data
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_44353d
lea eax [ ebp - 0x8 ]
push eax
call sub_44633e
pop ecx
push eax
mov ecx esi
call sub_443284
push 0x7d
mov ecx esi
call sub_4434eb
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax esi
pop esi
leave
retn
inc [ rwxdata ]
sub_4436fb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp + 0x8 ]
leave
retn
sub_44371f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_442c69
mov ecx eax
call sub_4434a3
mov eax [ ebp + 0x8 ]
leave
retn
sub_443743
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp + 0x8 ]
leave
retn
sub_443767
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_4434eb
mov eax esi
pop esi
pop ebp
retn 0x8
sub_44378b
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_44353d
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4437af
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ecx ] 0x51
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov ebx r--data
mov [ rwxdata ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop ebx
leave
retn
cmp al 0x40
jne r-xdata
movsx eax [ ecx ]
sub eax 0x2f
cdq
inc ecx
push edx
mov [ rwxdata ] ecx
push eax
test ebx ebx
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_443157
lea ecx [ ebp - 0x8 ]
call sub_443157
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_443743
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push edi
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
jmp r-xdata
pop edi
pop esi
cmp al 0x50
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movsx eax al
shld edi esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
adc edi edx
inc ecx
mov esi eax
mov [ rwxdata ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_443157
lea ecx [ ebp - 0x18 ]
call sub_443157
lea ecx [ ebp - 0x8 ]
call sub_4431c5
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_4431c5
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_443743
add esp 0xc
jmp r-xdata
sub_4438f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
mov al [ eax ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
jmp [ eax * 4 + jump_table_4439c1 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_44335b
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
dec eax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub_4439e1
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
movsx eax [ eax ]
sub esp 0x10
sub eax 0x58
je r-xdata
inc [ rwxdata ]
push r--data
dec eax
dec eax
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_4435a1
pop ecx
mov ecx [ ebp - 0x4 ]
test cl cl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_44305b
mov eax [ ebp + 0x8 ]
leave
retn
cmp al 0x40
je r-xdata
inc [ rwxdata ]
cmp al 0x5a
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_44378b
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
leave
retn
mov eax r--data
sub_443ac1
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x18
test al al
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_44305b
mov ecx eax
call sub_443260
mov ecx eax
cmp al 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_4439e1
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_44305b
mov ecx eax
call sub_4434a3
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
inc [ rwxdata ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and edx 0xffff0000
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
call sub_443767
mov eax [ ebp + 0x8 ]
leave
retn
sub_443b4b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0xffff0000
push ebx
xor ebx ebx
xor ecx ecx
inc [ rwxdata ]
mov eax [ rwxdata ]
mov dl [ eax ]
movsx eax dl
push esi
mov esi eax
sub esi 0x41
push edi
mov edi 0xffff00ff
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ rwxdata ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
mov eax r--data
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov [ ecx ] eax
mov eax r--data
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] edi
mov [ eax ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x3e
mov [ ebp - 0xc ] ebx
call sub_442fab
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
cmp dl bl
je r-xdata
mov [ eax ] ebx
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ rwxdata ]
mov dl [ edx + 0x1 ]
cmp dl bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
je r-xdata
add [ rwxdata ] 0x2
add eax 0xffffffd0
movsx edx dl
add eax eax
lea esi [ edx + eax * 8 - 0x30 ]
cmp esi 0x1
jbe r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] 0xffff00ff
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x2c
mov [ ebp - 0xc ] ebx
call sub_442fab
push ebx
push esi
lea ecx [ ebp - 0x1c ]
call sub_443157
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4434a3
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x10 ] ecx
push 0x5e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_4434eb
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
jmp r-xdata
mov [ ebp - 0x14 ] ecx
push 0x3e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_4434eb
mov edx [ rwxdata ]
cmp [ edx ] 0x24
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_442f69
inc [ rwxdata ]
jmp r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_443d13
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x38
push ebx
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
call sub_44207b
mov [ ebp - 0x4 ] eax
cmp eax ebx
jge r-xdata
lea eax [ ebp - 0x38 ]
push 0x5d
push eax
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_44353d
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
call sub_442f69
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4434eb
lea eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_44733d
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
and [ ebp - 0xc ] 0xffff0000
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x800
mov [ ebp - 0x10 ] ebx
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push 0x5d
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_44353d
jmp r-xdata
push 0x1
push eax
push 0x5b
call sub_44302e
mov ecx eax
call sub_443260
mov ecx eax
call sub_443767
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ edi ] ebx
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_447700
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
or ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
jmp r-xdata
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_4437af
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x5b
lea ecx [ ebp - 0x38 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x5d
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_4434eb
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_443284
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4434eb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call sub_4434a3
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_443f09
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4437af
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_44302e
mov ecx eax
call sub_4434a3
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_443767
mov eax [ ebp + 0x8 ]
leave
retn
sub_443f88
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
inc ebx
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ rwxdata ]
cmp [ ecx ] 0x0
je r-xdata
cmp al bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_442b55
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4434eb
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_4434a3
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_442c69
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
je r-xdata
inc [ rwxdata ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_44353d
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp al 0x40
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_44633e
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4434eb
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_443284
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_4434eb
push ebx
mov ecx esi
call sub_442f69
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jle r-xdata
push r--data
sub_4440e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_44305b
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x5f
jne r-xdata
inc [ rwxdata ]
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4437af
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_4437af
mov eax [ rwxdata ]
mov cl [ eax ]
add esp 0x10
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
push 0x1
mov [ rwxdata ] eax
call sub_442c69
mov eax [ ebp + 0x8 ]
leave
retn
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov [ rwxdata ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_44419a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
push 0x0
cmp al 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4437af
pop ecx
pop ecx
inc [ rwxdata ]
lea eax [ ebp - 0x8 ]
push eax
call sub_4437af
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_4436fb
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
sub_4441ec
mov edi edi
push ebp
mov ebp esp
sub esp 0xc8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push ebx
mov bl [ eax ]
inc [ rwxdata ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movsx edi bl
cmp edi 0x44
jg r-xdata
cmp edi 0x45
je r-xdata
je r-xdata
push esi
call sub_4460d0
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_44419a
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
sub edi 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp edi 0x4a
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x88 ]
lea ecx [ ebp - 0xc ]
push eax
cmp bl 0x44
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_442cae
lea eax [ ebp - 0x14 ]
push eax
call sub_448fb0
push eax
call [ rwxdata ]
pop ecx
pop ecx
test eax eax
je r-xdata
dec [ rwxdata ]
sub edi 0x30
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_44302e
cmp bl 0x48
jl r-xdata
cmp edi 0x51
je r-xdata
push r--data
jmp r-xdata
push r--data
push eax
jmp r-xdata
push esi
call sub_44419a
jmp r-xdata
dec edi
je r-xdata
sub edi 0x46
je r-xdata
cmp bl 0x4a
jg r-xdata
cmp edi 0x52
jne r-xdata
call sub_44305b
mov ecx eax
call sub_4434a3
push r--data
push esi
lea ecx [ ebp - 0x88 ]
call sub_44378b
jmp r-xdata
mov ecx esi
call sub_44305b
jmp r-xdata
pop ecx
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
dec edi
jne r-xdata
lea eax [ ebp - 0xa8 ]
push eax
call sub_44419a
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_443284
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_4434eb
dec edi
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_4460d0
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_443284
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_4434eb
push 0x0
lea eax [ ebp - 0x88 ]
push 0x0
push eax
call sub_444f16
lea eax [ ebp - 0x80 ]
push eax
call sub_44419a
mov eax [ ebp - 0x88 ]
mov [ esi ] eax
mov eax [ ebp - 0x84 ]
add esp 0x10
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
call sub_4460d0
pop ecx
push eax
push esi
push r--data
lea ecx [ ebp - 0x90 ]
call sub_44305b
jmp r-xdata
inc [ rwxdata ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_44419a
lea eax [ ebp - 0x88 ]
push eax
call sub_44419a
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
lea eax [ ebp - 0x98 ]
push eax
call sub_44419a
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_443284
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_4434eb
dec edi
je r-xdata
mov ecx eax
call sub_4434a3
jmp r-xdata
push 0x1
mov ecx esi
call sub_442c69
jmp r-xdata
cmp [ ebp - 0x84 ] 0x1
jg r-xdata
lea eax [ ebp - 0xb8 ]
push eax
call sub_44419a
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_443284
dec edi
je r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_442cae
test eax eax
jne r-xdata
dec edi
jne r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
push 0x7d
push esi
lea ecx [ ebp - 0x80 ]
call sub_443767
jmp r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
push 0x65
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_44305b
mov ecx eax
call sub_443767
sub_4444dc
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
xor ecx ecx
sub esp 0x18
cmp [ eax ] cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_44371f
cmp [ ebp + 0x10 ] ecx
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp [ eax ] 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_44733d
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
pop esi
test eax 0x4000
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_443d13
pop ecx
pop ecx
jmp r-xdata
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
jne r-xdata
test eax 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
leave
retn
push eax
push r--data
push [ ebp + 0x8 ]
call sub_443743
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_44305b
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub_4445da
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ rwxdata ] 0x1
mov [ ebp - 0x20 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
mov [ rwxdata ] bl
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
push edi
mov edi 0xffff0000
pop edi
cmp cl 0x40
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_4434eb
mov eax [ rwxdata ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
and [ ebp - 0x18 ] edi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x1c ] ebx
cmp dl 0x58
jne r-xdata
inc eax
mov [ rwxdata ] eax
push ecx
mov ecx [ rwxdata ]
lea eax [ ebp - 0x74 ]
push eax
call sub_442e23
jmp r-xdata
mov dl [ eax ]
movsx ecx dl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
cmp dl 0x24
jne r-xdata
inc eax
mov [ rwxdata ] eax
push r--data
push eax
mov ecx esi
call sub_443284
cmp [ esi + 0x4 ] bl
je r-xdata
cmp dl 0x3f
jne r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
mov eax [ rwxdata ]
sub eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl bl
je r-xdata
and [ ebp - 0x3c ] edi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x40 ] ebx
call sub_447700
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_44419a
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov [ rwxdata ] eax
lea eax [ ebp - 0x7c ]
push eax
call sub_4441ec
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
call sub_44353d
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_442cae
lea eax [ ebp - 0x14 ]
push eax
call sub_448fb0
push eax
call [ rwxdata ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x1c ]
push eax
call sub_442dd9
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x5c ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
call sub_44353d
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_44335b
jmp r-xdata
sub_4447e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
movsx edx [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
and [ ebp - 0xc ] ecx
push esi
xor esi esi
inc eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ rwxdata ] eax
cmp edx 0x41
jg r-xdata
cmp edx 0x42
je r-xdata
je r-xdata
xor esi esi
inc esi
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_44335b
cmp esi ebx
je r-xdata
cmp edx ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
cmp edx 0x5a
jle r-xdata
dec eax
mov [ rwxdata ] eax
cmp edx 0x2f
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0x200
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp edx 0x5f
jne r-xdata
cmp edx 0x31
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x4f
jg r-xdata
and [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edx 0x39
jg r-xdata
cmp ecx 0x54
jg r-xdata
cmp ecx 0x44
jge r-xdata
push ebx
mov esi eax
lea eax [ ebp - 0x90 ]
push ebx
push eax
call sub_444f16
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov [ rwxdata ] esi
cmp ecx ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_4445da
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x20 ]
call sub_44302e
mov ecx eax
call sub_4434a3
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_443284
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
cmp ecx 0x55
jl r-xdata
cmp ecx 0x53
jge r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x39
jg r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_4434eb
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
cmp ecx 0x56
jle r-xdata
sub ecx 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_44305b
jmp r-xdata
cmp ecx 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_443284
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] bl
jne r-xdata
mov [ eax ] 0x1
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_4434eb
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x57
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_44335b
push ebx
lea eax [ ebp - 0x70 ]
push ebx
push eax
call sub_4447e9
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp ecx ebx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx ebx
je r-xdata
cmp ecx 0x40
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x20 ]
call sub_44305b
mov ecx [ ebp - 0x1c ]
or ecx 0x8000
cmp ecx ebx
je r-xdata
inc eax
mov [ rwxdata ] eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_44335b
cmp ecx 0x59
jle r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
dec ecx
jne r-xdata
cmp ecx 0x30
jne r-xdata
cmp ecx 0x42
jle r-xdata
mov [ eax + 0x4 ] ecx
cmp ecx 0x2f
jle r-xdata
cmp ecx 0x5f
jne r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_44335b
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
jne r-xdata
push ebx
push r--data
jmp r-xdata
cmp ecx 0x43
jne r-xdata
cmp ecx 0x36
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x41
jl r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_443260
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_4440e7
mov ecx [ ebp - 0x1c ]
add esp 0xc
or ecx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x38
jg r-xdata
cmp ecx 0x44
jle r-xdata
cmp eax 0x5
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x46
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_44335b
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
cmp eax 0x30
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x18 ]
call sub_44305b
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
cmp ecx 0x4a
jg r-xdata
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_4478b1
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push 0x20
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_4434eb
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_445330
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
lea eax [ ebp - 0x80 ]
push eax
call sub_4460d0
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4434a3
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
push 0x2c
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_44419a
pop ecx
mov ecx eax
call sub_443767
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
push 0x2c
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_44419a
pop ecx
mov ecx eax
call sub_443767
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
push 0x2c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_44419a
pop ecx
mov ecx eax
call sub_443767
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
push 0x29
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_4437af
pop ecx
pop ecx
mov ecx eax
call sub_443767
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_443767
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_44353d
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
dec [ rwxdata ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
sub_444dbf
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0xa8
cmp [ eax ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
cmp [ eax + 0x1 ] 0x24
jne r-xdata
or [ ebp - 0x50 ] 0xffffffff
or [ ebp - 0x7c ] 0xffffffff
or [ ebp - 0xa8 ] 0xffffffff
push ebx
mov ebx [ rwxdata ]
push esi
mov esi [ rwxdata ]
lea ecx [ ebp - 0x50 ]
mov [ rwxdata ] ecx
lea ecx [ ebp - 0x7c ]
push edi
mov edi [ rwxdata ]
mov [ rwxdata ] ecx
add eax 0x2
lea ecx [ ebp - 0xa8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_444f16
inc eax
mov [ rwxdata ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4447e9
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ rwxdata ] 0x1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ rwxdata ] edi
pop edi
mov [ rwxdata ] esi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ rwxdata ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call sub_4445da
pop ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x3c
lea ecx [ ebp - 0x24 ]
call sub_44302e
mov ecx eax
call sub_4434a3
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_443284
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_4434eb
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_4434eb
inc [ rwxdata ]
sub_444f16
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rwxdata ]
mov cl [ ebx ]
movsx eax cl
push esi
mov esi [ ebp + 0x8 ]
sub eax 0x30
mov [ ebp - 0x38 ] esi
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
push edi
mov edi 0xffff0000
and [ ebp - 0x18 ] edi
cmp cl 0x3f
jne r-xdata
mov ecx [ rwxdata ]
push eax
inc ebx
push esi
mov [ rwxdata ] ebx
call sub_442e23
mov eax esi
jmp r-xdata
mov eax r--data
mov esi eax
mov ecx ebx
mov [ ebp - 0x20 ] 0x12
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_444dbf
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
inc eax
mov [ rwxdata ] eax
cmp cl 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
pop edi
je r-xdata
dec eax
xor ecx ecx
mov [ rwxdata ] eax
cmp [ eax ] cl
setne cl
inc ecx
push ecx
lea ecx [ ebp - 0x1c ]
call sub_442da2
jmp r-xdata
mov eax r--data
push 0xc
mov ecx ebx
mov esi eax
pop ebx
add ebx 0x13
mov [ rwxdata ] ebx
jmp r-xdata
inc ecx
inc esi
dec [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
call sub_44419a
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_442dd9
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add [ rwxdata ] 0xd
inc ecx
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_442cae
lea eax [ ebp - 0x14 ]
push eax
call sub_448fb0
push eax
call [ rwxdata ]
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x40
push rwxdata
lea ecx [ ebp - 0x34 ]
call sub_443098
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
push r--data
call sub_44335b
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push esi
lea ecx [ ebp - 0x34 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_44353d
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_443284
jmp r-xdata
push eax
call sub_44335b
jmp r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
and ecx edi
inc [ rwxdata ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub_44512c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
mov [ esi + 0x4 ] bl
mov edi 0xffff00ff
and [ esi + 0x4 ] edi
push eax
mov [ esi ] ebx
call sub_444f16
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ esi + 0x4 ] eax
cmp al bl
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al bl
je r-xdata
inc [ rwxdata ]
jmp r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_44633e
pop ecx
mov ecx eax
call sub_44378b
mov ecx eax
call sub_4434a3
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_442c69
mov ecx eax
call sub_44378b
mov ecx eax
call sub_4434a3
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_442da2
jmp r-xdata
sub_445220
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x20
push esi
push edi
mov ecx eax
shr ecx 0xf
xor edi edi
not ecx
inc edi
and ecx edi
je r-xdata
xor edi edi
test eax 0x1000
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ rwxdata ]
push r--data
call sub_44305b
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov eax [ rwxdata ]
movsx eax [ eax ]
and [ ebp - 0x8 ] 0x0
mov esi 0xffff0000
and [ ebp - 0x4 ] esi
inc [ rwxdata ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_44512c
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_443284
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
leave
retn
lea ecx [ ebp - 0x8 ]
call sub_44335b
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov edi ecx
call sub_4438f5
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec eax
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] esi
test edi edi
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push r--data
jmp r-xdata
sub_445330
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_444f16
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_4447e9
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_444dbf
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_44537a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_442695
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_44305b
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_442f69
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
mov eax ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_44353d
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_44353d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_44512c
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_443284
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
sub_445416
mov edi edi
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
xor edi edi
mov esi 0xffff0000
and [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
call sub_4420dd
mov ecx [ ebp + 0xc ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x14 ] edi
test [ ecx + 0x4 ] 0x200
mov [ ebp - 0x14 ] 0x1
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] edi
jmp r-xdata
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push ecx
push 0x1
push [ ebp + 0x8 ]
call sub_44371f
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x4 ] 0x8000
mov edi 0x1800
mov ecx 0x1000
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x20 ]
call sub_443284
mov eax [ ebp - 0x4 ]
mov ecx 0x7c00
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] ebx
and [ ebp - 0xc ] edi
cmp [ ebp - 0xc ] 0x800
sete al
mov [ ebp - 0x8 ] eax
test eax eax
mov eax ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6800
jne r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov esi 0x1000
mov eax ebx
je r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_443f88
cmp [ ebp - 0x8 ] 0x0
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x7000
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx esi
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
test edx edx
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_44353d
jmp r-xdata
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4437af
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x1c ]
push 0x7b
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_4434eb
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_443284
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_44378b
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_44537a
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_44284c
shr eax 0x3
not eax
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1100
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
and edx ecx
cmp edx ecx
jne r-xdata
and [ ebp - 0x3c ] esi
and [ ebp - 0x44 ] esi
and [ ebp - 0xc ] esi
and [ ebp - 0x24 ] esi
and [ ebp - 0x2c ] esi
xor edi edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x30 ] edi
mov eax ebx
cmp edx edi
je r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_44537a
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_4436a7
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_4437af
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x7b
lea eax [ ebp - 0x38 ]
push eax
call sub_443767
mov ecx eax
call sub_4434a3
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
lea eax [ ebp - 0x48 ]
push eax
call sub_443458
mov esi 0x1000
pop ecx
test [ rwxdata ] esi
jne r-xdata
mov ecx 0x1000
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x6000
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp edx edi
je r-xdata
cmp eax edi
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_44353d
lea eax [ ebp - 0x48 ]
push eax
call sub_443390
mov eax [ rwxdata ]
pop ecx
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x2c
lea ecx [ ebp - 0x38 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_44353d
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1200
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_447980
pop ecx
pop ecx
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
and eax 0x1b00
xor edx edx
cmp eax 0x1100
sete dl
neg ecx
sbb ecx ecx
test edx ecx
jne r-xdata
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_4437af
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
xor edi edi
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov ecx eax
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x7800
je r-xdata
push r--data
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x1200
sete dl
neg ecx
sbb ecx ecx
test edx ecx
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_443390
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_44284c
shr eax 0x4
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
cmp edx edi
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_4437af
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_4437af
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_4437af
add esp 0x18
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
test esi eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor edx edx
mov esi 0x800
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x34 ] esi
xor edi edi
mov [ ebp - 0x38 ] edi
cmp [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_443390
pop ecx
mov ecx eax
call sub_4434a3
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_442b8e
pop ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_44284c
call sub_442b8e
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ rwxdata ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x20
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_4434eb
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_443284
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
xor edi edi
push edi
push 0x8
mov ecx rwxdata
call sub_4426b4
cmp eax edi
je r-xdata
lea eax [ ebp - 0x50 ]
push edi
push eax
call sub_442f25
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_44305b
mov ecx eax
call sub_4434a3
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
test [ rwxdata ] 0x1000
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test [ rwxdata ] 0x1000
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_4437af
pop ecx
pop ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
lea eax [ ebp - 0x58 ]
push edi
push eax
call sub_442f25
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov edi eax
mov esi [ ebp - 0x8 ]
mov eax ebx
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x20
lea ecx [ ebp - 0x50 ]
call sub_44302e
mov ecx eax
call sub_4434a3
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rwxdata ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_4439e1
pop ecx
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x28
lea ecx [ ebp - 0x50 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x29
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_4434eb
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_44353d
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax esi
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x40
sete dl
mov eax edx
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp eax edx
je r-xdata
call sub_443ac1
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_44284c
call sub_443ac1
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
test esi esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
call sub_4434eb
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_4434eb
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_443284
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax edi
sub eax esi
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rwxdata ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_4434eb
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax 0x1000
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x80
sete dl
mov eax edx
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ edi ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_44353d
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_443284
cmp [ ebp - 0x4 ] 0x0
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov edi 0x1800
mov eax ebx
and eax edi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_4460d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test [ rwxdata ] esi
je r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and [ rwxdata ] 0xffffdfff
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_4478b1
or [ rwxdata ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
lea eax [ ebp - 0xc ]
push eax
call sub_445330
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
xor eax eax
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4460d0
mov eax [ rwxdata ]
pop ecx
jmp r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl al
jle r-xdata
inc eax
mov [ rwxdata ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_44633e
mov eax [ ebp - 0x14 ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx 0x1000
test ecx ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_44353d
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_443284
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ rwxdata ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
call sub_443284
mov eax [ rwxdata ]
cmp [ eax ] 0x40
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_44633e
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ esp ] r--data
call sub_44353d
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_443284
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test [ rwxdata ] ecx
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_445416
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ rwxdata ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0xffff0000
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_445416
pop ecx
pop ecx
jmp r-xdata
sub_44633e
mov edi edi
push ebp
mov ebp esp
sub esp 0xb8
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xffff00ff
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] edi
mov [ esi ] ebx
mov [ ebp + 0xb ] bl
jmp r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp al 0x40
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
push esi
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea eax [ ebp - 0x48 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_442c69
mov ecx eax
call sub_44378b
mov ecx eax
call sub_4434a3
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_442da2
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x90 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x20 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
cmp [ ebp + 0xb ] bl
je r-xdata
lea eax [ ebp - 0x48 ]
push esi
push eax
lea eax [ ebp - 0x40 ]
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x5b
lea ecx [ ebp - 0x98 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] eax
mov [ ebp + 0xb ] bl
lea eax [ ebp - 0x88 ]
push esi
dec ecx
push eax
mov [ rwxdata ] ecx
lea eax [ ebp - 0x38 ]
jmp r-xdata
dec eax
je r-xdata
push ebx
push 0x1
push eax
call sub_444f16
add esp 0xc
push 0x40
push rwxdata
lea ecx [ ebp - 0x30 ]
call sub_443098
push esi
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x78 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_442dd9
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x5f
jne r-xdata
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_4460d0
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x60
lea ecx [ ebp - 0x58 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4434eb
push esi
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
push esi
je r-xdata
call sub_4434a3
mov [ rwxdata ] eax
push esi
lea eax [ ebp - 0xb0 ]
push eax
push ebx
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_4447e9
add esp 0xc
mov ecx eax
call sub_4434a3
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x5d
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea eax [ ebp - 0x70 ]
inc ecx
push 0x1
push eax
mov [ rwxdata ] ecx
call sub_444f16
add esp 0xc
mov ecx eax
call sub_443767
mov ecx eax
call sub_4434a3
mov [ ebp + 0xb ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_443f09
pop ecx
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx eax
sub_4465f5
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov cl [ eax ]
sub esp 0x38
test cl cl
jne r-xdata
cmp cl 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_44371f
mov eax [ ebp + 0x8 ]
add esp 0xc
leave
retn
cmp cl 0x5f
je r-xdata
cmp cl 0x39
jle r-xdata
push ebx
movsx ebx cl
sub ebx 0x36
inc eax
mov [ rwxdata ] eax
cmp ebx 0x29
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
test ebx ebx
js r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_44371f
mov eax [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
movsx ebx cl
sub ebx 0x3d
inc eax
mov [ rwxdata ] eax
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edi ebx
and edi 0x2
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
pop ebx
leave
retn
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
jle r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_442c69
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_44633e
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_443390
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_44284c
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_443390
pop ecx
mov ecx eax
call sub_4434a3
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_44537a
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_44284c
call sub_44537a
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_443284
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_442c69
mov ecx eax
call sub_4434a3
jmp r-xdata
cmp al 0x40
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
push ebx
push 0x8
mov ecx rwxdata
call sub_4426b4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_4434eb
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov esi eax
jmp r-xdata
pop edi
pop esi
call sub_442b8e
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_44284c
jmp r-xdata
call sub_442b8e
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_442f25
lea eax [ ebp - 0x38 ]
push eax
call sub_4439e1
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_4434eb
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_443284
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
je r-xdata
call sub_443ac1
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_44284c
call sub_443ac1
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_443284
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_443284
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_442c69
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_4469d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
push esi
mov esi 0xffff0000
and [ ebp - 0x38 ] esi
push edi
xor edi edi
mov [ ebp - 0x1 ] 0x0
test al al
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp al 0x24
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_442c69
mov esi [ ebp + 0xc ]
cmp [ esi ] edi
je r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
and [ ebp - 0x10 ] esi
movsx ebx al
mov [ ebp - 0x1c ] edi
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
xor edx edx
and [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] edx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_443b4b
mov ecx [ ebp - 0x2c ]
add esp 0x10
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
inc [ rwxdata ]
mov eax [ rwxdata ]
cmp [ eax ] 0x24
jne r-xdata
shr eax 0x11
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push [ ebp + 0x8 ]
call sub_44371f
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_442c69
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_4434eb
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_4434a3
jmp r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
movsx ebx al
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
mov edx [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_443b4b
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_4434eb
push 0x8
call sub_442695
add esp 0x4
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0xc ]
push 0xa
call sub_442695
add esp 0x4
push eax
lea ecx [ ebp - 0x1c ]
call sub_44335b
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
call sub_4434eb
push 0xa
call sub_442695
add esp 0x4
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_44378b
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp ebx 0x1f
ja r-xdata
inc ecx
mov [ rwxdata ] ecx
test edx edx
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov esi [ ebp + 0x10 ]
push esi
lea ecx [ ebp - 0xc ]
call sub_44305b
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_443284
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
je r-xdata
push 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
call sub_4434eb
push 0x9
call sub_442695
add esp 0x4
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x20 ] ecx
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
call sub_4434eb
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_443284
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_442695
add esp 0x4
push eax
lea ecx [ ebp - 0x14 ]
call sub_44335b
push eax
call sub_44378b
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
call sub_4434eb
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_443284
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_44537a
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_44284c
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_44537a
pop ecx
mov ecx eax
call sub_4434a3
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_442f69
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_44633e
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_44284c
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_442c69
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_44633e
pop ecx
mov ecx eax
call sub_4434a3
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
xor edx edx
mov ebx 0x100
cmp [ ebp + 0x18 ] edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ecx ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi ] edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
or ecx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
mov ecx [ esi + 0x4 ]
test ebx ecx
jne r-xdata
push eax
test ecx 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_44302e
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_4434eb
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_4434a3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_44302e
mov ecx eax
call sub_4434a3
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_443284
sub_446f73
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp - 0xc ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
xor ecx ecx
and [ ebp - 0x8 ] ecx
and eax edx
mov edx [ rwxdata ]
test edx edx
je r-xdata
cmp al 0x3
jne r-xdata
cmp [ edx ] 0x3f
jne r-xdata
cmp al 0x2
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x20 ]
push eax
call sub_4460d0
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov al [ edx + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
call sub_44335b
test [ rwxdata ] 0x1000
jne r-xdata
cmp al 0x24
jne r-xdata
add [ rwxdata ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_4460d0
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_442cae
mov eax [ rwxdata ]
mov edx eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ rwxdata ]
cmp [ edx ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_444dbf
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp al 0x2
jne r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
add eax 0x7
and eax 0xfffffff8
push eax
call [ rwxdata ]
pop ecx
mov [ rwxdata ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax ]
mov eax [ rwxdata ]
test eax eax
jne r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
cmp cl 0x20
jne r-xdata
mov al cl
mov [ edx ] al
mov eax [ rwxdata ]
leave
retn
mov [ edx ] cl
inc edx
inc eax
inc eax
mov [ edx ] cl
inc edx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_4470b2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
xor ebx ebx
push esi
cmp al bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_442c69
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_44353d
mov esi [ ebp + 0xc ]
cmp [ esi ] ebx
je r-xdata
cmp al 0x36
jl r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] ebx
je r-xdata
push esi
lea ecx [ ebp - 0x8 ]
call sub_443284
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
pop edi
cmp [ esi ] ebx
je r-xdata
mov esi [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_4469d4
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4444dc
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_44305b
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_443284
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_4434eb
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_4465f5
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x8 ]
call sub_443284
push eax
lea ecx [ ebp - 0x8 ]
call sub_443284
test [ esi + 0x4 ] 0x100
jne r-xdata
sub_447209
push 0x64
push r--data
call sub_43e5a0
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_441924
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_442ae6
lea ecx [ ebp - 0x74 ]
call sub_446f73
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_442053
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44729a
mov eax [ ebp - 0x1c ]
call sub_43e5e5
retn
sub_4472a3
push 0x64
push r--data
call sub_43e5a0
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_441924
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_442ae6
lea ecx [ ebp - 0x74 ]
call sub_446f73
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_442053
mov [ ebp - 0x4 ] 0xfffffffe
call sub_447334
mov eax [ ebp - 0x1c ]
call sub_43e5e5
retn
sub_44733d
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x24
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_44371f
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0xc ] 0x0
movzx edi al
mov esi 0xffff0000
and [ ebp - 0x8 ] esi
mov eax edi
or ebx 0xffffffff
mov [ ebp - 0x1 ] 0x0
cmp eax 0x4e
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_44335b
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_44353d
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp ebx 0xfffffffe
jne r-xdata
mov eax edi
sub eax 0x43
je r-xdata
lea eax [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_4476f5 ]
jmp [ eax * 4 + jump_table_4476dd ]
cmp [ eax ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
mov esi 0x800
or [ ebp - 0x10 ] esi
push eax
call sub_4470b2
add esp 0x10
test [ ebp - 0x18 ] esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec [ rwxdata ]
push eax
call sub_445220
mov edx [ eax + 0x4 ]
pop ecx
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
mov ebx edi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4470b2
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_44353d
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x24 ]
call sub_44302e
mov ecx eax
call sub_4434a3
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_443284
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_44335b
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_44335b
test bl 0x2
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x24 ]
call sub_44305b
mov ecx eax
call sub_4434a3
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub eax ecx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
mov [ ebp - 0x1 ] al
movzx eax al
cmp eax 0x4d
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_44335b
push r--data
lea ecx [ ebp - 0xc ]
call sub_44353d
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x4e
je r-xdata
cmp eax 0x4c
jge r-xdata
sub eax 0x14
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x4f
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
sub eax 0x45
je r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
cmp eax 0x48
jl r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x49
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jg r-xdata
dec [ rwxdata ]
push 0x1
lea ecx [ ebp - 0xc ]
call sub_442da2
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_44733d
push eax
push r--data
push [ ebp + 0x8 ]
call sub_443743
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
push r--data
jmp r-xdata
sub_447700
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
movsx eax [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
sub eax ebx
push esi
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov eax [ rwxdata ]
mov al [ eax + 0x1 ]
cmp al 0x24
je r-xdata
sub eax 0x1d
mov esi [ ebp + 0xc ]
je r-xdata
add [ rwxdata ] 0x2
mov eax [ rwxdata ]
movsx eax [ eax ]
mov esi [ ebp + 0xc ]
cmp eax 0x51
jg r-xdata
cmp al bl
je r-xdata
push r--data
dec eax
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x8 ]
call sub_44335b
cmp [ esi ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_44733d
push r--data
lea ecx [ ebp - 0x8 ]
call sub_44335b
cmp [ esi ] ebx
je r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
sub eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_4434eb
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_4434eb
inc [ rwxdata ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
inc [ rwxdata ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
or esi 0x100
mov [ ebp - 0xc ] esi
call sub_4470b2
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_44305b
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_44371f
inc [ rwxdata ]
push esi
push [ ebp + 0x8 ]
call sub_4465f5
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
jmp r-xdata
inc [ rwxdata ]
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_4444dc
jmp r-xdata
dec eax
jne r-xdata
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0x4 ] ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x18 ]
push esi
push eax
mov [ ebp - 0x8 ] ebx
call sub_4469d4
push eax
push [ ebp + 0x8 ]
call sub_44733d
add esp 0x1c
jmp r-xdata
sub_4478b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_442c16
mov eax [ rwxdata ]
mov al [ eax ]
xor ecx ecx
cmp al cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push 0x1
call sub_442c69
cmp al 0x3f
je r-xdata
inc [ rwxdata ]
and [ ebp - 0xc ] 0xffff0000
push ecx
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_4469d4
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_447700
add esp 0x1c
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
inc [ rwxdata ]
cmp [ ebp - 0x8 ] ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_447700
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_44305b
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_44305b
jmp r-xdata
mov ecx eax
call sub_4434a3
sub_447980
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x0
push 0x8
mov ecx rwxdata
call sub_4426b4
test eax eax
je r-xdata
xor esi esi
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov esi eax
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4478b1
lea eax [ ebp - 0x10 ]
push eax
call sub_442b55
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4434eb
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_4434a3
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_4479f9
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_43f594
and [ ebp - 0x14 ] 0x0
cmp [ rwxdata ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rwxdata ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rwxdata ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rwxdata ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
mov [ rwxdata ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rwxdata ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_447b65
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_4411b8
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_4411b8
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_441465
mov eax esi
sub_447bda
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_4411b8
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_4411b8
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_441465
mov eax esi
jmp r-xdata
sub_447ca7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_447cc2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_4411b8
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_4411b8
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_441465
mov eax esi
sub_447d25
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rwxdata ]
pop ebp
retn
sub_447d73
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_43f781
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_448aaa
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_4482eb
mov [ esi + 0x4 ] eax
sub_447e0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_447d73
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_448060
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_447d73
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_4480c8
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4480f7
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_43d590
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rwxdata
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_44815b
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_449356
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_449229
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_449229
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_43d590
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_4482eb
push 0xc
push r--data
call sub_43e5a0
call sub_43f781
mov edi eax
mov eax [ rwxdata ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rwxdata ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_448386
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rwxdata ]
mov [ edi + 0x68 ] eax
mov esi [ rwxdata ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_43e5e5
retn
push 0x20
call sub_43e574
cmp esi rwxdata
je r-xdata
push esi
call sub_43d6dd
pop ecx
sub_44838f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_447d73
mov [ rwxdata ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rwxdata ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_44840b
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_44838f
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_4480f7
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_43d590
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rwxdata ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rwxdata ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_4480c8
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rwxdata ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_44815b
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rwxdata ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rwxdata ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_43d590
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4480c8
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_4485f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_447d73
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_448632
push 0x14
push r--data
call sub_43e5a0
or [ ebp - 0x20 ] 0xffffffff
call sub_43f781
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_4482eb
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_44838f
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_43e0c6
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_43e5e5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_44840b
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rwxdata
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rwxdata
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_43d6dd
pop ecx
test [ rwxdata ] 0x1
jne r-xdata
push eax
call sub_43d6dd
pop ecx
push 0xd
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0xc ]
mov [ rwxdata ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rwxdata ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rwxdata ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rwxdata ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_448793
jmp r-xdata
mov eax [ rwxdata ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_43d6dd
pop ecx
sub_4487ea
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_448879
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_448912
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rwxdata
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rwxdata
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_43d6dd
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_43d6dd
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_43d6dd
push [ esi + 0xc0 ]
call sub_43d6dd
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_449b95
push [ esi + 0xd4 ]
call sub_43d6dd
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rwxdata
je r-xdata
push esi
call sub_43d6dd
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_43d6dd
pop ecx
push [ esi + 0xb0 ]
call sub_43d6dd
push [ esi + 0xbc ]
call sub_43d6dd
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_43d6dd
push [ esi + 0xbc ]
call sub_44a242
pop ecx
pop ecx
push eax
call sub_43d6dd
pop ecx
push eax
call sub_43d6dd
push [ esi + 0xbc ]
call sub_449fb9
pop ecx
pop ecx
sub_448a5d
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_4487ea
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_448879
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rwxdata
je r-xdata
push esi
call sub_448912
pop ecx
sub_448aaa
push 0xc
push r--data
call sub_43e5a0
call sub_43f781
mov esi eax
mov eax [ rwxdata ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rwxdata ]
add esi 0x6c
push esi
call sub_448a5d
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_448b17
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_43f781
mov esi [ eax + 0x6c ]
mov eax esi
call sub_43e5e5
retn
push 0x20
call sub_43e574
sub_448b23
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_4411b8
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_4411b8
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_441465
mov eax esi
jmp r-xdata
sub_448bee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_43d6dd
pop ecx
sub_448c0e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_448bee
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_43d649
pop ecx
cmp eax esi
je r-xdata
call sub_44a700
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_448ce8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_447d73
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_448c0e
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_448d22
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_448d55
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_448d8b
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_448dc1
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_448e70
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448e90
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_43bd0f
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_448ed5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_448ed5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_448e90
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_448f85
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_448fa4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_448f7c
push ebx
push ecx
mov ebx rwxdata
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_448f85
push ebx
push ecx
mov ebx rwxdata
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_449024
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_449042
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_448bee
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_43d649
pop ecx
cmp eax ebx
je r-xdata
call sub_44a700
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_448bee
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_43d649
pop ecx
cmp eax ebx
je r-xdata
call sub_44a700
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_449229
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_447d73
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_449042
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44926f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43bd0f
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_43d590
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_448bee
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_43d649
pop ecx
cmp eax ebx
je r-xdata
call sub_44a700
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_449356
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_447d73
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_44926f
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_449396
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_43fbe6
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_43fbe6
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_43fbe6
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_43fbe6
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_449b95
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_43d6dd
push [ esi + 0x8 ]
call sub_43d6dd
push [ esi + 0xc ]
call sub_43d6dd
push [ esi + 0x10 ]
call sub_43d6dd
push [ esi + 0x14 ]
call sub_43d6dd
push [ esi + 0x18 ]
call sub_43d6dd
push [ esi ]
call sub_43d6dd
push [ esi + 0x20 ]
call sub_43d6dd
push [ esi + 0x24 ]
call sub_43d6dd
push [ esi + 0x28 ]
call sub_43d6dd
push [ esi + 0x2c ]
call sub_43d6dd
push [ esi + 0x30 ]
call sub_43d6dd
push [ esi + 0x34 ]
call sub_43d6dd
push [ esi + 0x1c ]
call sub_43d6dd
push [ esi + 0x38 ]
call sub_43d6dd
push [ esi + 0x3c ]
call sub_43d6dd
add esp 0x40
push [ esi + 0x40 ]
call sub_43d6dd
push [ esi + 0x44 ]
call sub_43d6dd
push [ esi + 0x48 ]
call sub_43d6dd
push [ esi + 0x4c ]
call sub_43d6dd
push [ esi + 0x50 ]
call sub_43d6dd
push [ esi + 0x54 ]
call sub_43d6dd
push [ esi + 0x58 ]
call sub_43d6dd
push [ esi + 0x5c ]
call sub_43d6dd
push [ esi + 0x60 ]
call sub_43d6dd
push [ esi + 0x64 ]
call sub_43d6dd
push [ esi + 0x68 ]
call sub_43d6dd
push [ esi + 0x6c ]
call sub_43d6dd
push [ esi + 0x70 ]
call sub_43d6dd
push [ esi + 0x74 ]
call sub_43d6dd
push [ esi + 0x78 ]
call sub_43d6dd
push [ esi + 0x7c ]
call sub_43d6dd
add esp 0x40
push [ esi + 0x80 ]
call sub_43d6dd
push [ esi + 0x84 ]
call sub_43d6dd
push [ esi + 0x88 ]
call sub_43d6dd
push [ esi + 0x8c ]
call sub_43d6dd
push [ esi + 0x90 ]
call sub_43d6dd
push [ esi + 0x94 ]
call sub_43d6dd
push [ esi + 0x98 ]
call sub_43d6dd
push [ esi + 0x9c ]
call sub_43d6dd
push [ esi + 0xa0 ]
call sub_43d6dd
push [ esi + 0xa4 ]
call sub_43d6dd
push [ esi + 0xa8 ]
call sub_43d6dd
push [ esi + 0xbc ]
call sub_43d6dd
push [ esi + 0xc0 ]
call sub_43d6dd
push [ esi + 0xc4 ]
call sub_43d6dd
push [ esi + 0xc8 ]
call sub_43d6dd
push [ esi + 0xcc ]
call sub_43d6dd
add esp 0x40
push [ esi + 0xd0 ]
call sub_43d6dd
push [ esi + 0xb8 ]
call sub_43d6dd
push [ esi + 0xd8 ]
call sub_43d6dd
push [ esi + 0xdc ]
call sub_43d6dd
push [ esi + 0xe0 ]
call sub_43d6dd
push [ esi + 0xe4 ]
call sub_43d6dd
push [ esi + 0xe8 ]
call sub_43d6dd
push [ esi + 0xec ]
call sub_43d6dd
push [ esi + 0xd4 ]
call sub_43d6dd
push [ esi + 0xf0 ]
call sub_43d6dd
push [ esi + 0xf4 ]
call sub_43d6dd
push [ esi + 0xf8 ]
call sub_43d6dd
push [ esi + 0xfc ]
call sub_43d6dd
push [ esi + 0x100 ]
call sub_43d6dd
push [ esi + 0x104 ]
call sub_43d6dd
push [ esi + 0x108 ]
call sub_43d6dd
add esp 0x40
push [ esi + 0x10c ]
call sub_43d6dd
push [ esi + 0x110 ]
call sub_43d6dd
push [ esi + 0x114 ]
call sub_43d6dd
push [ esi + 0x118 ]
call sub_43d6dd
push [ esi + 0x11c ]
call sub_43d6dd
push [ esi + 0x120 ]
call sub_43d6dd
push [ esi + 0x124 ]
call sub_43d6dd
push [ esi + 0x128 ]
call sub_43d6dd
push [ esi + 0x12c ]
call sub_43d6dd
push [ esi + 0x130 ]
call sub_43d6dd
push [ esi + 0x134 ]
call sub_43d6dd
push [ esi + 0x138 ]
call sub_43d6dd
push [ esi + 0x13c ]
call sub_43d6dd
push [ esi + 0x140 ]
call sub_43d6dd
push [ esi + 0x144 ]
call sub_43d6dd
push [ esi + 0x148 ]
call sub_43d6dd
add esp 0x40
push [ esi + 0x14c ]
call sub_43d6dd
push [ esi + 0x150 ]
call sub_43d6dd
push [ esi + 0x154 ]
call sub_43d6dd
push [ esi + 0x158 ]
call sub_43d6dd
push [ esi + 0x15c ]
call sub_43d6dd
push [ esi + 0x160 ]
call sub_43d6dd
add esp 0x18
sub_449f0c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rwxdata
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_43e10b
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_449396
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_449b95
push edi
call sub_43d6dd
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_449f89
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_449fb9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
push esi
call sub_43d6dd
pop ecx
sub_44a022
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_43e10b
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_43e0c6
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_43d6dd
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov [ ebx ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x4 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x8 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x30 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_43e0c6
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_43fbe6
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_449fb9
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_43d6dd
push [ esi + 0xbc ]
call sub_43d6dd
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_43d6dd
push [ ebp - 0x8 ]
call sub_43d6dd
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_44a212
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_44a242
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_43d6dd
pop ecx
push esi
call sub_43d6dd
pop ecx
sub_44a340
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_43e10b
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_43e0c6
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_43d6dd
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rwxdata
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_43e0c6
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_43fbe6
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_43fbe6
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_43fbe6
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_43d6dd
push [ ebp - 0x8 ]
call sub_43d6dd
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_44a242
push ebx
call sub_43d6dd
push [ ebp - 0x8 ]
call sub_43d6dd
push [ ebp - 0x4 ]
call sub_43d6dd
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_43d6dd
push [ esi + 0xb0 ]
call sub_43d6dd
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_44a72c
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_447d73
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_44ad16
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_4411b8
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_44a957
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_44a72c
add esp 0x14
pop ebp
retn
sub_44a99f
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_44a72c
add esp 0x14
pop ebp
retn
sub_44a9e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_447d73
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_44ad16
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_43d720
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_4411b8
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_43d900
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_44ac85
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_44a9e8
add esp 0x14
pop ebp
retn
sub_44accd
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_44a9e8
add esp 0x14
pop ebp
retn
sub_44ad16
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_447d73
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_44bd58
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_449356
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_44adce
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44ad16
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_44ae0c
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_4487ea
pop ecx
pop edi
sub_44ae32
mov edi edi
push ebp
mov ebp esp
push esi
call sub_43f781
mov ecx [ eax + 0x70 ]
push 0x0
pop edx
test cl 0x2
sete dl
lea esi [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rwxdata ] 0xffffffff
test edx edx
je r-xdata
mov eax esi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_44aeb9
push 0x8
push r--data
call sub_43e5a0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_43e5e5
retn
push 0xd
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44af66
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_43d6dd
pop ecx
push 0xc
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_448879
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44af72
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_43d6dd
pop ecx
cmp eax rwxdata
je r-xdata
push eax
call sub_448912
pop ecx
sub_44af86
push 0xc
push r--data
call sub_43e5a0
call sub_43f781
mov edi eax
push 0x1
push 0x8
call sub_43e10b
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_448aaa
call sub_4482eb
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_4419e6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_4487ea
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44b020
push 0xd
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44b02c
mov eax esi
call sub_4411b8
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_43e5e5
retn
sub_44b03d
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4413f9
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44c470
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_44b07e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_43d590
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_44c4e0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_448b23
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_448b23
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_4413f9
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_44c4e0
test eax eax
sub_44b19d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43df95
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4413f9
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44b03d
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44b03d
add esp 0x14
sub_44b208
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_43e0c6
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_44b03d
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4413f9
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_44b03d
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_43d6dd
pop ecx
push r--data
push ebx
push edi
call sub_44c470
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_43d6dd
pop ecx
push [ ebp - 0x10 ]
call sub_43d6dd
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_43d6dd
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_43d6dd
pop ecx
sub_44b36d
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_43f781
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_43e000
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_44b07e
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_43df95
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_44caf3
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_44b19d
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_43bd20
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_43df95
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_43bd20
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_448b23
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
call sub_4413f9
sub_44b58e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_43f781
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_44b36d
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_43e000
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_43e0c6
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_43bd20
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_43df95
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4413f9
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_43bd20
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rwxdata
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_43d6dd
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_449356
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_43d6dd
push [ ebx + 0x54 ]
call sub_43d6dd
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rwxdata ]
lea eax [ ebp - 0x188 ]
push eax
call sub_44e1fe
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_44b8c8
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_44b208
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_44b58e
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_44b36d
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_44b58e
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_44f752
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_43e000
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_44c4e0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_448b23
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_4413f9
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_44b58e
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_44f820
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_44bae4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_43e10b
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_43e10b
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_4411b8
mov [ eax ] 0xc
push edi
push 0x220
call sub_43e10b
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_43d6dd
mov eax [ esi ]
mov ecx rwxdata
call sub_44ae0c
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_44b8c8
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_43d6dd
push esi
call sub_43d6dd
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_44840b
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_448879
push [ esi ]
call sub_448912
push esi
call sub_43d6dd
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_43d6dd
push [ esi ]
call sub_448879
push [ esi ]
call sub_448912
push esi
call sub_43d6dd
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_44bbe4
push 0x14
push r--data
call sub_43e5a0
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_43f781
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_448aaa
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_43e10b
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44bd53
mov eax [ ebp - 0x20 ]
push 0xc
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_44ae0c
and [ ebp - 0x4 ] 0x0
call sub_44bd16
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_44b8c8
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_43e5e5
retn
push ebx
call sub_448879
push ebx
call sub_448912
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_4419e6
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_448a5d
push ebx
call sub_448879
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rwxdata
push [ ebp + 0xc ]
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_44bd22
jmp r-xdata
test [ rwxdata ] 0x1
jne r-xdata
mov [ rwxdata ] edi
push [ edi ]
push rwxdata
call sub_448a5d
pop ecx
pop ecx
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
sub_44bd58
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_447d73
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44bf77
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_44bf9d
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_44bfc3
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_44bfe9
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_44c00f
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_43e0c6
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_43e10b
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_43e10b
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_43e10b
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_43e10b
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_43fbe6
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_43d6dd
push [ ebp - 0x1c ]
call sub_43d6dd
push [ ebp - 0x20 ]
call sub_43d6dd
push [ ebp - 0x28 ]
call sub_43d6dd
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_43d6dd
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_449356
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_449229
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_449229
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_43bd20
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_43bd20
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_43bd20
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_43d6dd
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_43d6dd
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_43d6dd
push [ esi + 0xc0 ]
call sub_43d6dd
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_44c470
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_4411b8
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_4411b8
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_441465
mov eax esi
jmp r-xdata
sub_44c4e0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_44c526
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_44f9cd
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_44c59c
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_43e980
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_43e980
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_448fb0
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_44c620
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_44c645
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_44c676
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_44c691
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_43f781
mov edx edi
mov esi eax
call sub_44c645
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_44f9cd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_44c620
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_44c738
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_44c676
push esi
mov edi eax
call sub_43e000
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_44c793
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_43f781
mov edx edi
lea esi [ eax + 0x9c ]
call sub_44c645
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_44f9cd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43bd0f
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44f9cd
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44f9cd
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44faf6
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44f9cd
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_43e000
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_44c620
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_43e000
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_44c738
pop ecx
pop ecx
test eax eax
je r-xdata
sub_44c964
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_43f781
mov edx edi
lea esi [ eax + 0x9c ]
call sub_44c645
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44f9cd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43bd0f
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_44f9cd
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_44c738
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_44ca24
push [ esi + 0x4 ]
call sub_43e000
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_44c691
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_44ca50
push [ esi ]
call sub_43e000
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_43e000
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_44c676
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_44c793
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_44cab7
push [ esi ]
call sub_43e000
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_44c676
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_44c964
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_44caf3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_43f781
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_44c526
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_44c59c
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_43e000
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_44c691
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_44cab7
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_44c526
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_44ca50
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_44cab7
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_44ca50
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_43df95
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4413f9
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_44fc03
add esp 0x10
sub_44cd0a
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_44cd46
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_44cdb6
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_44e17e ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
sub_44e1fe
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_44f6d2 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_44f752
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_44f820
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_44f860
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_44f8d4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_44f90d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_447d73
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_44f8d4
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_44fdbb
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_44fdbb
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_44f9cd
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f90d
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_44f8d4
sub_44fa14
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_447d73
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_44ff00
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_44fdbb
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_44fdbb
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_44faf6
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44fa14
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_4411b8
mov [ eax ] 0x16
call sub_441465
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_44ff00
sub_44fb49
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_4411b8
push 0x16
pop esi
mov [ eax ] esi
call sub_441465
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_4411b8
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_4411b8
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_441465
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_44fc03
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_44fb49
pop ebp
retn
sub_44fc2d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_44fb49
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_44fc6e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_4411b8
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_4411b8
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_43d720
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_4411b8
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_441465
mov eax esi
jmp r-xdata
sub_44fd5a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44fc6e
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_44fd8f
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44fc6e
pop edi
pop ebp
retn
sub_44fdbb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_447d73
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_4411b8
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_44bd58
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_44ad16
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_449229
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44fed0
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_44fdbb
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_44ff00
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_401000
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_43c11a
mov [ esi ] r--data
mov eax esi
leave
retn
sub_40101d
mov [ ecx ] r--data
jmp sub_43c176
sub_40104d
retn
sub_40104e
retn
sub_40104f
retn
j_sub_40137a#2
jmp sub_40137a
sub_4013ad
mov ecx [ rwxdata ]
mov [ eax ] ecx
retn
sub_4013e9
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_4013f3
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x4 ] esp
mov [ ebp - 0x4 ] esp
call sub_4014f1
mov eax rwxdata
leave
retn
sub_40140a
call sub_4014cc
mov [ esi ] eax
mov eax esi
retn
sub_40142d
push [ rwxdata ]
call sub_43c44d
pop ecx
retn
sub_40143a
add eax 0xc
retn
sub_40143e
retn
sub_40143f
mov eax [ eax ]
cmp eax [ ecx ]
sbb eax eax
neg eax
retn
sub_401448
mov [ eax ] ecx
retn
sub_40144b
mov eax [ eax ]
add eax 0xc
retn
sub_401451
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_40145b
mov eax [ eax ]
retn
sub_40145e
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_401471
mov ecx [ rwxdata ]
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_40152e
add eax 0xc
retn
sub_401532
retn
sub_401533
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43c44d
pop ecx
pop ebp
retn 0x4
sub_401543
mov [ eax ] ecx
retn
sub_401546
mov eax [ eax ]
add eax 0xc
retn
sub_40154c
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_40179d
mov eax [ rwxdata ]
push [ eax + 0x4 ]
mov ecx rwxdata
call sub_40180a
mov eax [ rwxdata ]
mov [ eax + 0x4 ] eax
mov eax [ rwxdata ]
mov [ eax ] eax
mov eax [ rwxdata ]
mov [ eax + 0x8 ] eax
and [ rwxdata ] 0x0
retn
sub_4017ce
mov eax [ rwxdata ]
retn
sub_4017d4
mov eax [ rwxdata ]
add eax 0x4
retn
sub_4017dd
add eax 0x14
retn
sub_4017e1
add eax 0x15
retn
sub_4017e5
retn
sub_4017e6
add eax 0x4
retn
sub_4017ea
add eax 0x8
retn
sub_4017ee
mov eax rwxdata
retn 0x4
j_sub_401960
jmp sub_401960
sub_4017fb
mov ecx [ eax ]
mov [ esi ] ecx
call sub_4018f9
mov eax esi
retn
sub_401807
mov [ eax ] ecx
retn
sub_40187c
mov eax [ rwxdata ]
add eax 0x8
retn
sub_4018c4
jmp r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax ecx
retn
sub_4018d2
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax ecx
retn
sub_4018df
mov eax rwxdata
retn 0x4
sub_4018e7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_4018f9
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_401950
retn
sub_401951
retn
sub_401952
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_40195d
retn
sub_40195e
retn
sub_40195f
retn
sub_401989
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401a8a
retn
sub_401a8b
mov eax [ rwxdata ]
retn
sub_401c52
and [ eax ] 0x0
retn
sub_401c56
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_401c84
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_401c68
mov eax 0x1fffffff
retn
sub_401c6e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_401c84
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_401c80
and [ eax ] 0x0
retn
sub_401cc5
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_401cd8
mov eax 0x1fffffff
retn
sub_401cde
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_401cf1
retn
sub_401cf2
push ebp
mov ebp esp
push esi
call sub_401d26
mov ecx [ ebp + 0x8 ]
mov esi eax
lea eax [ esi + 0xc ]
call sub_401d4c
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401d0f
retn
sub_401d10
retn
sub_401d11
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_401d24
retn
sub_401d25
retn
sub_401d26
call sub_401960
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov ecx [ rwxdata ]
mov [ eax + 0x4 ] ecx
mov ecx [ rwxdata ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0x14 ] 0x0
retn
sub_401d4c
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_401d5b
retn
sub_401d5c
retn
sub_401d5d
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_401d70
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_401d7f
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
sub_401d8a
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_401d9d
retn
sub_401d9e
retn
sub_401d9f
retn
sub_401da0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push rwxdata
push rwxdata
push 0x0
push eax
call sub_43cbad
add esp 0x14
pop ebp
retn
sub_401dc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x34 ] eax
pop ebp
retn 0x4
sub_401dd0
mov eax [ ecx + 0x34 ]
retn
sub_401de0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_401df0
mov [ ecx ] r--data
retn
sub_4022c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
call sub_4043e0
sub_402340
mov eax ecx
mov [ eax ] 0x0
retn
sub_402350
push ebp
mov ebp esp
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x4
sub_4023a0
mov eax [ ecx + 0x18 ]
mov edx [ ecx + 0x1c ]
retn
sub_4023b0
or eax 0xffffffff
mov [ ecx + 0x10 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx ] eax
mov [ ecx + 0x14 ] 0x0
retn
sub_4023d0
mov eax ecx
or ecx 0xffffffff
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x14 ] 0x0
retn
sub_4023f0
mov eax ecx
retn
sub_402400
mov eax ecx
mov [ eax ] r--data
retn
sub_4025e0
mov eax [ ecx ]
push eax
call sub_43c44d
pop ecx
retn
sub_4025f0
mov eax [ ecx ]
retn
sub_402600
mov eax [ ecx + 0x4 ]
retn
sub_402610
mov eax [ ecx ]
push eax
call sub_43c44d
pop ecx
retn
sub_402620
mov eax ecx
mov [ eax ] 0x0
retn
sub_402630
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_402640
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_402650
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_402660
mov eax ecx
mov [ eax ] 0x0
retn
sub_402670
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
j_sub_404780#2
jmp sub_404780
sub_4026c0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_4029c0
mov eax ecx
mov [ eax ] r--data
retn
sub_4029d0
mov eax ecx
mov [ eax ] r--data
retn
sub_4029e0
mov eax ecx
mov [ eax ] r--data
retn
sub_4029f0
mov eax ecx
mov [ eax ] r--data
retn
sub_402d80
push esi
mov esi ecx
xor eax eax
push 0x3
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_4026e0
mov eax esi
pop esi
retn
sub_402da0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_403300
push ebp
mov ebp esp
pop ebp
jmp sub_403290
sub_403410
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x14 ]
inc eax
mov [ ecx + 0x14 ] eax
pop ebp
retn 0x4
sub_403450
sub [ esp + 0x4 ] 0xc
jmp sub_403430
sub_403460
sub [ esp + 0x4 ] 0x4
jmp sub_403410
sub_403470
sub [ esp + 0x4 ] 0x10
jmp sub_403430
sub_403480
sub [ esp + 0x4 ] 0x8
jmp sub_403410
sub_403490
sub [ esp + 0x4 ] 0xc
jmp sub_403410
sub_4034a0
sub [ esp + 0x4 ] 0x4
jmp sub_403310
sub_4034b0
sub [ esp + 0x4 ] 0x10
jmp sub_403410
sub_4034c0
sub [ esp + 0x4 ] 0x8
jmp sub_403310
sub_4034d0
sub [ esp + 0x4 ] 0xc
jmp sub_403310
sub_4034e0
sub [ esp + 0x4 ] 0x10
jmp sub_403310
sub_4034f0
sub [ esp + 0x4 ] 0x4
jmp sub_403430
sub_403500
sub [ esp + 0x4 ] 0x8
jmp sub_403430
j_sub_4031d0
jmp sub_4031d0
sub_4037d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
inc eax
mov [ ecx + 0x10 ] eax
pop ebp
retn 0x4
sub_4037f0
sub [ esp + 0x4 ] 0x4
jmp sub_4036d0
sub_403800
sub [ esp + 0x4 ] 0xc
jmp sub_4037d0
sub_403810
sub [ esp + 0x4 ] 0x8
jmp sub_4036d0
sub_403820
sub [ esp + 0x4 ] 0xc
jmp sub_4036d0
sub_403830
sub [ esp + 0x4 ] 0x4
jmp sub_4037d0
sub_403840
sub [ esp + 0x4 ] 0x8
jmp sub_4037d0
sub_403980
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x10 ]
mov eax [ ecx + 0x10 ]
jne r-xdata
pop ebp
retn 0x4
push 0x1
call sub_4038e0
xor eax eax
sub_403a10
sub [ esp + 0x4 ] 0x4
jmp sub_403980
sub_403a20
sub [ esp + 0x4 ] 0x8
jmp sub_403980
sub_403a30
sub [ esp + 0x4 ] 0xc
jmp sub_403980
sub_403b70
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_403e10
xor al al
retn
sub_403ef0
mov eax [ ecx + 0x20 ]
push eax
call sub_43c44d
pop ecx
retn
sub_403f00
push esi
mov esi ecx
xor eax eax
push 0x3
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_403e50
mov eax esi
pop esi
retn
sub_403f70
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_4044e0
mov edx [ ecx + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x1
dec edx
push edx
call eax
retn
sub_4045d0
mov eax [ ecx + 0x8 ]
push eax
call sub_404510
retn
sub_4047c0
cmp [ ecx + 0x20 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
mov eax [ ecx + 0x8 ]
push eax
call [ CloseHandle@IAT ]
sub_4048c0
xor eax eax
retn 0xc
sub_4048d0
xor eax eax
retn 0x4
sub_4048e0
xor eax eax
retn 0x4
sub_4048f0
mov eax ecx
mov [ eax ] r--data
retn
sub_404900
mov eax ecx
mov [ eax ] r--data
retn
sub_404950
mov eax [ ecx + 0x30 ]
retn
sub_404960
cmp [ ecx + 0x28 ] 0x0
mov [ ecx ] r--data
mov [ ecx + 0x4 ] r--data
mov [ ecx + 0x8 ] r--data
je r-xdata
retn
mov eax [ ecx + 0x10 ]
push eax
call [ CloseHandle@IAT ]
sub_404990
xor eax eax
retn 0xc
sub_4049a0
xor eax eax
retn 0x8
sub_4049b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn 0xc
sub_4049d0
xor eax eax
retn 0x4
sub_4049e0
xor eax eax
retn 0x4
sub_404a40
xor eax eax
retn 0x8
sub_404b30
xor eax eax
retn 0xc
sub_404b40
xor eax eax
retn 0xc
sub_404bd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] edx
xor eax eax
pop ebp
retn 0xc
sub_404c10
sub [ esp + 0x4 ] 0x8
jmp sub_4049b0
sub_404c20
sub [ esp + 0x4 ] 0x4
jmp sub_4049e0
sub_404c30
sub [ esp + 0x4 ] 0x8
jmp sub_4049e0
sub_404c40
sub [ esp + 0x4 ] 0x4
jmp sub_4049d0
sub_404c50
sub [ esp + 0x4 ] 0x8
jmp sub_4049d0
sub_404c60
sub [ esp + 0x4 ] 0x4
jmp sub_4049b0
sub_404c70
mov eax ecx
mov [ eax ] r--data
retn
sub_404c80
mov eax ecx
mov [ eax ] r--data
retn
sub_404c90
mov eax ecx
mov [ eax ] r--data
retn
sub_404d40
mov eax ecx
mov [ eax ] r--data
retn
sub_404d50
mov eax ecx
mov [ eax ] r--data
retn
sub_404e20
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_404e30
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_404e60
mov eax [ ecx + 0x8 ]
xor edx edx
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x1c ] dl
retn
sub_404ea0
mov eax [ ecx ]
retn
sub_404ee0
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_405030
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_405060
mov edx [ ecx + 0x10 ]
xor eax eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x24 ] al
retn
sub_4050b0
mov eax [ ecx ]
retn
sub_4050c0
mov eax [ ecx ]
retn
sub_405310
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
pop ebp
retn
sub_405320
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] ax
setne al
pop ebp
retn
sub_405500
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
lea esp [ esp ]
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_4059e0
mov eax [ ecx ]
sub eax [ ecx + 0x8 ]
cdq
add eax [ ecx + 0x10 ]
adc edx [ ecx + 0x14 ]
retn
sub_405b00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_405c10
add ecx 0x18
jmp sub_405220
sub_405c20
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebp
retn 0x4
sub_405c40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xd46 ]
push ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0xd48 ] 0xfffffffe
mov [ eax + 0xd47 ] 0x1
call sub_410be0
xor eax eax
pop ebp
retn 0x8
sub_405c70
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi ] 0x0
sub_405cb0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi ] 0x0
sub_405cd0
push ebp
mov ebp esp
add ecx 0x8
pop ebp
jmp sub_404f00
sub_405ce0
push ebp
mov ebp esp
add ecx 0x8
pop ebp
jmp sub_404f60
sub_4063e0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
add [ eax ] ecx
shr [ eax + 0x30 ] cl
pop ebp
retn 0x4
sub_406400
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_404e60
xor eax eax
mov [ esi ] 0x20
mov [ esi + 0x4 ] eax
mov [ esi + 0x28 ] eax
pop esi
retn
sub_406450
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0xc ] 0x0
sub_406470
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x20 ] ecx
retn
sub_406480
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x14 ] 0x0
sub_4064a0
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x2c ] 0x0
sub_4064e0
mov eax ecx
mov [ eax ] r--data
retn
sub_4064f0
mov eax ecx
mov [ eax ] r--data
retn
sub_406500
mov eax ecx
mov [ eax ] r--data
retn
sub_406510
mov eax ecx
mov [ eax ] r--data
retn
sub_406520
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x20 ] ecx
retn
sub_406530
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_404ee0
mov eax esi
pop esi
retn
sub_406590
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
add ecx 0x40
call sub_404f60
xor eax eax
pop ebp
retn 0x8
sub_4065b0
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_404e60
xor eax eax
mov [ esi ] 0x20
mov [ esi + 0x4 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x30 ] eax
pop esi
retn
sub_406600
mov eax ecx
mov edx [ eax ]
mov ecx edx
neg ecx
and ecx 0x7
shr [ eax + 0x30 ] cl
add edx ecx
mov [ eax ] edx
retn
sub_406670
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x14 ] 0x0
sub_4068c0
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_404ee0
mov eax esi
pop esi
retn
sub_407302
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax sub_407310
retn
sub_407310
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_407327
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
mov [ ebp + 0x10 ] eax
mov eax sub_407310
retn
sub_407335
mov eax r-xdata
retn
sub_407456
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp + 0x14 ] eax
mov eax sub_407464
retn
sub_407464
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40747b
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov [ ebp + 0x14 ] edx
mov eax sub_407464
retn
sub_407489
mov eax sub_40748f
retn
sub_40748f
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_407680
push ebp
mov ebp esp
pop ebp
jmp sub_410d70
sub_407690
xor eax eax
retn
sub_4076a0
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
pop ebp
retn
sub_4076b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add eax 0xfffffffe
pop ebp
retn
sub_4076c0
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
retn
sub_4076e0
mov eax ecx
mov [ eax ] r--data
retn
sub_4076f0
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x1c ] al
mov [ ecx + 0x18 ] 0xffffffff
retn
sub_407710
mov eax [ ecx + 0x18 ]
not eax
retn
sub_407720
mov eax [ ecx + 0x10 ]
mov edx [ ecx + 0x14 ]
retn
sub_407730
push ebp
mov ebp esp
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov al [ ebp + 0x8 ]
mov [ ecx + 0x1c ] al
mov [ ecx + 0x18 ] 0xffffffff
pop ebp
retn 0x4
sub_407750
mov [ ecx + 0x18 ] 0xffffffff
retn
sub_407760
mov eax [ ecx + 0x10 ]
mov edx [ ecx + 0x14 ]
retn
sub_407770
mov eax [ ecx + 0x18 ]
not eax
retn
sub_407780
xor eax eax
cmp eax [ ecx + 0xc ]
sbb eax eax
neg eax
retn
sub_407790
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test [ ecx + 0x1 ] al
mov eax 0x0
setne al
pop ebp
retn 0x4
sub_4077b0
movzx eax [ ecx + 0x1 ]
shr eax 0x1
and eax 0x1
retn
sub_4077c0
movzx eax [ ecx + 0x1 ]
shr eax 0x2
and eax 0x1
retn
sub_4077d0
movzx eax [ ecx + 0x1 ]
shr eax 0x3
and eax 0x1
retn
sub_4077e0
movzx eax [ ecx + 0x1 ]
shr eax 0x4
and eax 0x1
retn
sub_407880
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x6
xor eax eax
pop ebp
retn 0x8
sub_4078f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
xor eax eax
pop ebp
retn 0x8
sub_407910
mov eax 0x80004001
retn 0x14
sub_407970
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
xor eax eax
pop ebp
retn 0x8
sub_407990
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
xor eax eax
pop ebp
retn 0x8
sub_4079d0
push esi
push rwxdata
mov esi ecx
call sub_410c70
add esp 0x4
mov eax esi
pop esi
retn
sub_4079f0
mov eax [ ecx ]
retn
sub_407a00
mov eax [ ecx ]
mov [ ecx + 0x4 ] 0x0
mov [ eax ] 0x0
retn
sub_407a10
mov eax [ ecx + 0x4 ]
retn
sub_407a20
xor eax eax
cmp [ ecx + 0x4 ] eax
sete al
retn
sub_407a50
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_407a60
mov eax [ ecx ]
retn
sub_407a70
mov eax ecx
mov [ eax ] 0x0
retn
sub_407a80
mov eax [ ecx ]
retn
sub_407a90
mov eax ecx
retn
sub_407aa0
mov eax ecx
mov [ eax ] 0x0
retn
sub_407ab0
mov eax ecx
retn
sub_407ac0
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_407ad0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi ] 0x0
sub_407af0
mov eax [ ecx ]
retn
sub_407b00
mov eax [ ecx ]
retn
sub_407b40
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_407b70
mov eax [ ecx ]
retn
sub_407b80
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add eax 0xfffffffe
pop ebp
retn
sub_407b90
mov eax [ ecx ]
mov [ ecx + 0x4 ] 0x0
xor ecx ecx
mov [ eax ] cx
retn
sub_407cd0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
inc eax
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_407cf0
add ecx 0x10
jmp sub_4144b0
sub_407d00
sub [ esp + 0x4 ] 0x4
jmp sub_407c60
sub_407d10
sub [ esp + 0x4 ] 0x4
jmp sub_407cd0
sub_407db0
mov edx [ ecx + 0x10 ]
xor eax eax
mov [ ecx + 0x14 ] eax
mov [ edx ] al
mov [ ecx + 0x20 ] eax
mov ecx [ ecx + 0x1c ]
mov [ ecx ] al
retn
sub_407fca
mov eax sub_407fd0
retn
sub_407fd0
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_408121
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov eax sub_408135
retn
sub_408147
mov eax sub_40814d
retn
sub_4081b0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
retn
sub_408210
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_408230
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_408240
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
retn
sub_4082a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_4082c0
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_408470
mov eax ecx
mov edx [ eax + 0x40 ]
mov ecx edx
neg ecx
and ecx 0x7
shr [ eax + 0x70 ] cl
add edx ecx
mov [ eax + 0x40 ] edx
retn
sub_408490
push esi
lea esi [ ecx + 0x40 ]
mov ecx esi
call sub_406370
mov ecx [ esi + 0x30 ]
add [ esi ] 0x8
movzx eax cl
shr ecx 0x8
mov [ esi + 0x30 ] ecx
pop esi
retn
sub_40895c
mov [ ebp + 0xc ] 0x1
mov [ ebp - 0x4 ] 0x0
mov eax sub_408970
retn
sub_408996
mov eax sub_40899c
retn
sub_40899c
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_408eb1
mov eax sub_408eb7
retn
sub_408eb7
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4090c0
sub [ esp + 0x4 ] 0x4
jmp sub_4084b0
sub_409920
mov eax [ ecx + 0x8 ]
retn
sub_409930
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x10 ] eax
xor eax eax
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] al
pop ebp
retn 0x8
sub_409950
movzx eax [ ecx + 0x2f ]
and eax 0x1
retn
sub_409960
xor eax eax
cmp [ ecx + 0x31 ] 0x3
sete al
retn
sub_409970
movzx eax [ ecx + 0x2f ]
shr eax 0x2
and eax 0x1
retn
sub_409980
movzx eax [ ecx + 0x2f ]
shr eax 0x3
and eax 0x1
retn
sub_409990
mov al [ ecx + 0x2e ]
test al al
je r-xdata
movzx eax [ ecx + 0x32 ]
cmp al 0xa
je r-xdata
retn
or eax 0x10
xor eax eax
jmp r-xdata
cmp [ ecx + 0x31 ] 0x3
jne r-xdata
sub_4099b0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_409c90
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0xc
xor eax eax
pop ebp
retn 0x8
sub_409d00
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x5
xor eax eax
pop ebp
retn 0x8
sub_409dc0
cmp al 0xb
jae r-xdata
mov eax [ rwxdata ]
push eax
call sub_411620
retn
movzx eax al
mov eax [ eax * 4 + rwxdata ]
push eax
call sub_411620
retn
sub_409df0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xa80 ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
xor eax eax
pop ebp
retn 0x8
sub_409e10
push esi
push rwxdata
mov esi ecx
call sub_410c70
add esp 0x4
mov eax esi
pop esi
retn
sub_409e30
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_409e50
mov eax [ ecx + 0x8 ]
push eax
mov [ ecx ] r--data
call sub_43c44d
pop ecx
retn
sub_409e70
mov eax [ ecx + 0x8 ]
retn
sub_409e80
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_409ec0
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_409ed0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jb r-xdata
pop ebp
retn
mov eax ecx
sub_409f80
mov eax ecx
mov [ eax + 0x4 ] r--data
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
retn
sub_40a020
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
inc eax
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_40a070
sub [ esp + 0x4 ] 0x4
jmp sub_40a020
sub_40a080
sub [ esp + 0x4 ] 0x4
jmp sub_409fb0
sub_40a238
mov eax sub_40a23e
retn
sub_40a23e
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40a276
add [ 0x5050502 ] eax
add eax 0x5050505
add eax 0x5050305
add eax 0xcccc0405
int3
sub_40a2d0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
retn
sub_40a330
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40a350
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40a360
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_404ee0
mov eax esi
pop esi
retn
sub_40a3d0
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_40a3e0
sub [ esp + 0x4 ] 0x4
jmp sub_40a090
sub_40ac05
mov eax sub_40ac0b
retn
sub_40ac0b
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40ac65
or al 0xc
or al 0x7
or al 0xc
or [ ecx ] cl
or al 0xc
or al 0xc
or cl [ ebx ]
int3
sub_40ad90
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40aef0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40b91f
mov eax sub_40b925
retn
sub_40b925
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_40b954
int3
sub_40bddf
mov [ ebp + 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
mov eax sub_40bdf3
retn
sub_40be17
mov eax sub_40be1d
retn
sub_40be1d
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40beb0
mov eax ecx
mov [ eax ] 0x0
retn
sub_40bec0
mov eax [ ecx ]
push eax
call [ SysFreeString@IAT ]
retn
sub_40bed0
mov eax [ ecx ]
retn
sub_40bee0
mov eax ecx
retn
sub_40bef0
mov eax ecx
mov [ eax ] 0x0
retn
sub_40bf00
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x10 ]
add eax 0x4
push eax
call edx
sub_40bf20
mov [ ecx ] 0x3
retn
sub_40bf30
mov eax ecx
mov ecx 0x2
xor edx edx
mov [ eax ] cx
mov [ eax + 0x2 ] 0x3
mov [ eax + 0x4 ] dx
retn
sub_40bf50
xor eax eax
cmp [ ecx ] 0x1
sete al
retn
sub_40bf60
movzx eax [ ecx + 0x2 ]
shr eax 0xb
and eax 0x1
retn
sub_40bf70
movzx eax [ ecx + 0x2 ]
and eax 0x1
retn
sub_40bf80
mov eax 0x1
test [ ecx + 0x2 ] al
je r-xdata
xor eax eax
test [ ecx + 0x2 ] 0x40
jne r-xdata
retn
sub_40bfa0
movzx eax [ ecx + 0x2 ]
shr eax 0x1
and eax 0x1
retn
sub_40bfb0
xor al al
retn
sub_40bfc0
mov eax 0x1
retn
sub_40bfd0
mov eax [ ecx + 0x90 ]
xor edx edx
add eax [ ecx + 0x48 ]
adc edx [ ecx + 0x4c ]
retn
sub_40bfe0
movzx eax [ ecx + 0x94 ]
push esi
cdq
push edi
xor edi edi
add eax [ ecx + 0x90 ]
adc edx edi
add eax [ ecx + 0x48 ]
pop edi
adc edx [ ecx + 0x4c ]
pop esi
retn
sub_40c000
mov eax [ ecx + 0x10 ]
sub eax [ ecx + 0x8 ]
mov edx [ ecx + 0x14 ]
sbb edx [ ecx + 0xc ]
retn
sub_40c080
mov eax ecx
mov [ eax ] r--data
retn
sub_40c090
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0xe
xor eax eax
pop ebp
retn 0x8
sub_40c100
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x4
xor eax eax
pop ebp
retn 0x8
sub_40c170
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
xor eax eax
pop ebp
retn 0x8
sub_40c190
mov eax ecx
mov [ eax ] r--data
retn
sub_40c1a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x14 ]
call sub_404680
lea ecx [ esi + 0x28 ]
call sub_4174d0
xor eax eax
pop esi
pop ebp
retn 0x4
sub_40c1c0
mov eax ecx
mov [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_40c210
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40c230
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
pop ebp
retn 0x4
push ecx
call sub_43c44d
add esp 0x4
xor eax eax
sub_40c250
mov eax ecx
mov [ eax ] r--data
retn
sub_40c260
mov eax ecx
mov [ eax ] r--data
retn
sub_40c270
mov eax ecx
mov [ eax ] r--data
retn
sub_40c2b0
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_40c2f0
mov eax ecx
mov [ eax ] 0x0
retn
sub_40c300
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c310
mov eax ecx
retn
sub_40c320
mov eax [ ecx ]
retn
sub_40c330
mov eax ecx
mov [ eax ] 0x0
retn
sub_40c340
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c350
mov eax [ ecx ]
retn
sub_40c360
mov eax ecx
retn
sub_40c370
mov eax [ ecx ]
retn
sub_40c380
mov eax ecx
mov [ eax ] 0x0
retn
sub_40c390
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c400
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_40c410
mov eax [ ecx + 0x8 ]
retn
sub_40c420
mov eax [ ecx + 0x4 ]
retn
sub_40c430
xor eax eax
cmp [ ecx + 0x4 ] eax
sete al
retn
sub_40c440
mov eax ecx
mov [ eax ] 0x0
retn
sub_40c450
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c460
mov eax [ ecx ]
retn
sub_40c4c0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c4d0
mov eax [ ecx ]
retn
sub_40c4e0
mov eax [ ecx ]
retn
sub_40c4f0
mov eax [ ecx ]
retn
sub_40c500
mov eax ecx
mov [ eax ] 0x0
retn
sub_40c510
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c520
mov eax [ ecx ]
retn
sub_40c530
mov eax ecx
retn
sub_40c540
mov eax [ ecx ]
retn
sub_40c550
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_40c560
mov eax ecx
mov [ eax ] 0x0
retn
sub_40c570
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c580
mov eax [ ecx ]
retn
sub_40c590
mov eax ecx
retn
sub_40c5a0
mov eax [ ecx ]
retn
sub_40c5b0
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_40c5c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax + edx ] 0x0
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40c600
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
call sub_43c44d
xor eax eax
add esp 0x4
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
pop esi
retn
sub_40c640
mov eax ecx
xor ecx ecx
mov [ eax + 0x18 ] r--data
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax ] 0x3
retn
sub_40c660
mov eax [ ecx + 0x20 ]
push eax
mov [ ecx + 0x18 ] r--data
call sub_43c44d
pop ecx
retn
sub_40c680
mov eax [ ecx + 0x164 ]
push eax
mov [ ecx + 0x15c ] r--data
call sub_43c44d
pop ecx
retn
sub_40c780
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x18 ] r--data
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
retn
sub_40c7a0
mov eax [ ecx + 0x20 ]
push eax
mov [ ecx + 0x18 ] r--data
call sub_43c44d
pop ecx
retn
sub_40c8c0
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40c9b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40c9d0
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40ca90
mov eax ecx
mov [ eax + 0x4 ] 0x0
retn
sub_40caa0
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40cbf0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
inc eax
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_40cc10
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x8 ]
mov eax [ ecx + 0x8 ]
jne r-xdata
pop ebp
retn 0x4
push ecx
call sub_43c44d
add esp 0x4
xor eax eax
sub_40cc30
sub [ esp + 0x4 ] 0x4
jmp sub_40cc10
sub_40cc40
sub [ esp + 0x4 ] 0x4
jmp sub_40cbf0
sub_40cc50
sub [ esp + 0x4 ] 0x4
jmp sub_40cb80
sub_40cc60
mov eax ecx
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
retn
sub_40cd00
mov eax sub_40cd06
retn
sub_40cd06
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40cea0
mov eax [ ecx + 0xc ]
push eax
mov [ ecx + 0x4 ] r--data
call sub_43c44d
pop ecx
retn
sub_40cec0
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_40ced0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_40cf50
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_40cf60
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_40cf80
mov eax [ ecx ]
push eax
call sub_43c44d
pop ecx
retn
sub_40cff0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_40d070
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_40d380
mov eax [ ecx + 0x2c ]
push eax
mov [ ecx + 0x24 ] r--data
call sub_43c44d
pop ecx
retn
sub_40d930
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
inc eax
mov [ ecx + 0x10 ] eax
pop ebp
retn 0x4
sub_40d950
sub [ esp + 0x4 ] 0x4
jmp sub_40d930
sub_40d960
sub [ esp + 0x4 ] 0x8
jmp sub_40d930
sub_40d970
sub [ esp + 0x4 ] 0x4
jmp sub_40d830
sub_40d980
sub [ esp + 0x4 ] 0xc
jmp sub_40d930
sub_40d990
sub [ esp + 0x4 ] 0x8
jmp sub_40d830
sub_40d9a0
sub [ esp + 0x4 ] 0xc
jmp sub_40d830
sub_40db89
mov eax sub_40db8f
retn
sub_40db8f
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40dbc1
add al 0x4
add al 0x1
add al 0x4
add al 0x4
add al [ esp + eax ]
add ecx esp
int3
sub_40e06a
mov eax sub_40e070
retn
sub_40e23a
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push eax
call edx
mov eax sub_40e24b
retn
sub_40e24b
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40e264
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push eax
call edx
push 0x0
push 0x0
call sub_43d1c8
mov eax sub_40e27e
retn
sub_40e27e
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_40e450
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
inc eax
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_40e470
sub [ esp + 0x4 ] 0x238
jmp sub_40e3b0
sub_40e480
sub [ esp + 0x4 ] 0x4
jmp sub_40e450
sub_40e490
sub [ esp + 0x4 ] 0x238
jmp sub_40e450
sub_40e4a0
sub [ esp + 0x4 ] 0x4
jmp sub_40e3b0
sub_40e4b0
mov eax [ ecx + 0x2c ]
push eax
mov [ ecx + 0x24 ] r--data
call sub_43c44d
pop ecx
retn
sub_40e590
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
inc eax
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_40e5b0
sub [ esp + 0x4 ] 0x4
jmp sub_40e520
sub_40e5c0
sub [ esp + 0x4 ] 0x134
jmp sub_40e590
sub_40e5d0
sub [ esp + 0x4 ] 0x4
jmp sub_40e590
sub_40e5e0
sub [ esp + 0x4 ] 0x134
jmp sub_40e520
sub_40e5f0
mov eax [ ecx + 0x164 ]
push eax
mov [ ecx + 0x15c ] r--data
call sub_43c44d
pop ecx
retn
sub_40e610
mov eax ecx
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
retn
sub_40e6a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
inc eax
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_40e6c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x8 ]
mov eax [ ecx + 0x8 ]
jne r-xdata
pop ebp
retn 0x4
push ecx
call sub_43c44d
add esp 0x4
xor eax eax
sub_40e6e0
sub [ esp + 0x4 ] 0x4
jmp sub_40e6c0
sub_40e6f0
sub [ esp + 0x4 ] 0x4
jmp sub_40e6a0
sub_40e700
sub [ esp + 0x4 ] 0x4
jmp sub_40e630
j_sub_40f940
jmp sub_40f940
sub_40fc50
sub [ esp + 0x4 ] 0x134
jmp sub_40fad0
sub_40fc60
sub [ esp + 0x4 ] 0x4
jmp sub_40faa0
sub_40fc70
sub [ esp + 0x4 ] 0x4
jmp sub_40fad0
sub_40fc80
sub [ esp + 0x4 ] 0x238
jmp sub_40faa0
sub_40fd30
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404680
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_40fb80
pop esi
pop ebp
retn 0x4
sub_40fd50
sub [ esp + 0x4 ] 0x8
jmp sub_40fc90
sub_40fd60
sub [ esp + 0x4 ] 0xc
jmp sub_40fc90
sub_40fd70
sub [ esp + 0x4 ] 0x4
jmp sub_40fc90
sub_4105ba
mov eax sub_4105c0
retn
sub_4105c0
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_410630
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
push 0x8000
push 0x0
push eax
call [ VirtualFree@IAT ]
sub_410650
retn
sub_410680
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
push 0x8000
push 0x0
push eax
call [ VirtualFree@IAT ]
sub_4106a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
push esi
xor esi esi
mov [ edx + eax * 2 ] si
mov [ ecx + 0x4 ] eax
pop esi
pop ebp
retn 0x4
sub_410a50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0xa
push eax
push 0x0
push ecx
call sub_410940
add esp 0x10
pop ebp
retn
sub_410a70
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x0
push ecx
call sub_4109e0
add esp 0xc
pop ebp
retn
sub_410be0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn 0x4
call sub_405060
sub_410cb0
push eax
push ecx
call [ SysAllocStringByteLen@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
xor eax eax
retn
mov edx 0x8
mov [ esi ] dx
sub_410cd0
push 0x10
push eax
call [ SysAllocStringByteLen@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
xor eax eax
retn
mov ecx 0x8
mov [ esi ] cx
sub_410e67
mov eax sub_410e6d
retn
sub_410e6d
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_410fca
mov eax r-xdata
retn
sub_411010
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ rwxdata ]
push eax
push ecx
push edx
call sub_410e90
pop ebp
retn 0x8
sub_411030
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn 0x4
sub_4115e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_4113a0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411600
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_4113a0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411ea0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_411620
mov eax esi
pop esi
pop ebp
retn 0x4
sub_412010
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x13
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x4
sub_412030
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call [ CharUpperW@IAT ]
pop ebp
retn
sub_4121a0
mov eax [ ecx ]
push eax
call [ CharUpperW@IAT ]
retn
sub_4121b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ecx ]
push eax
push ecx
call sub_421a60
add esp 0x8
pop ebp
retn 0x4
sub_412620
push ebp
mov ebp esp
pop ebp
jmp sub_405100
sub_412630
push ebp
mov ebp esp
pop ebp
jmp sub_405150
sub_412640
push esi
mov esi ecx
call sub_405080
mov ecx 0xf
sub ecx [ esi + 0x28 ]
xor esi esi
shr ecx 0x3
add eax ecx
adc edx esi
pop esi
retn
sub_412660
push esi
mov esi ecx
call sub_405060
mov [ esi + 0x28 ] 0x8
mov [ esi + 0x2c ] 0x0
pop esi
retn
sub_412770
mov eax 0x8000
mov [ ecx ] ax
retn
sub_412780
mov eax 0x8000
cmp [ ecx ] ax
sbb eax eax
inc eax
retn
sub_412790
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_412860
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_4105e0
add esp 0x4
pop ebp
retn
sub_412880
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_410600
add esp 0x4
pop ebp
retn
sub_412a08
mov eax r-xdata
retn
sub_414340
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x14 ] 0x0
sub_414420
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x20 ] ecx
retn
sub_414490
mov eax ecx
mov [ eax + 0x4 ] 0x0
retn
sub_4144a0
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41488f
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov [ ebp + 0x18 ] edx
mov eax sub_41489d
retn
sub_41489d
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4148b4
mov eax sub_4148ba
retn
sub_4148ba
mov eax 0x80004005
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_414e60
mov eax [ ecx ]
push 0x0
push 0x0
push ecx
mov ecx [ eax + 0xc ]
call ecx
retn
sub_414e70
mov eax ecx
mov [ eax ] 0x0
retn
sub_414e80
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_414e90
mov eax [ ecx ]
retn
sub_414ed0
mov eax ecx
mov [ eax ] 0x0
retn
sub_414ee0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi ] 0x0
sub_414f00
mov eax ecx
retn
sub_414f10
mov eax [ ecx ]
retn
sub_414f40
mov eax ecx
mov [ eax ] r--data
retn
sub_4150d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_415220
mov eax [ ecx + 0xc ]
push eax
mov [ ecx ] r--data
mov [ ecx + 0x4 ] r--data
call sub_410630
pop ecx
retn
sub_415320
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] edx
mov eax [ eax + 0x10 ]
mov [ ecx + 0x4 ] eax
xor eax eax
pop ebp
retn 0x8
sub_4153f0
mov eax [ ecx ]
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
mov ecx [ eax + 0x10 ]
call ecx
retn
sub_4154f0
mov eax [ ecx ]
mov [ ecx ] 0x0
retn
sub_415500
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_4159b0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
retn
sub_415a20
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_415a40
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_415bc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x2
pop ebp
retn
sub_415c00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x2
pop ebp
retn
sub_415e80
mov edx [ ecx ]
cmp edx [ ecx + 0x4 ]
jb r-xdata
mov al [ edx ]
inc edx
mov [ ecx ] edx
retn
jmp sub_405000
sub_415ea0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebp
retn 0x4
sub_4161b0
push ebp
mov ebp esp
add ecx 0x8
pop ebp
jmp sub_404f00
sub_4161c0
push ebp
mov ebp esp
add ecx 0x8
pop ebp
jmp sub_404f60
sub_416280
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x14 ] 0x0
sub_4162a0
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_404e60
mov [ esi ] 0x20
mov ecx esi
pop esi
jmp sub_416230
sub_4162c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ ecx ] eax
call sub_416230
pop ebp
retn 0x4
sub_416b82
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp + 0x1c ] eax
mov eax sub_416b90
retn
sub_416b90
mov eax [ ebp + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_416ba7
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov [ ebp + 0x1c ] edx
mov eax sub_416b90
retn
sub_416bb5
mov eax sub_416bbb
retn
sub_416bbb
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_416be0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebp
retn 0x4
sub_4170c2
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp + 0x1c ] eax
mov eax sub_4170d0
retn
sub_4170d0
mov eax [ ebp + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4170e7
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov [ ebp + 0x1c ] edx
mov eax sub_4170d0
retn
sub_4170f5
mov eax sub_4170fb
retn
sub_4170fb
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_417120
push ebp
mov ebp esp
sub esp 0x24
lea eax [ ebp - 0x24 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_417140
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jb r-xdata
pop ebp
retn
mov eax ecx
sub_417210
xor eax eax
cmp [ ecx + 0x8 ] eax
sete al
retn
j_sub_404680
jmp sub_404680
sub_4172b0
movzx eax [ ecx + 0x2 ]
shr eax 0x3
and eax 0x1
retn
sub_4172c0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_4172d0
mov eax [ eax ]
mov [ ecx ] eax
cmp eax [ rwxdata ]
je r-xdata
mov eax 0x1
retn
cmp eax [ rwxdata ]
je r-xdata
xor eax eax
retn
sub_4173c0
push esi
push 0x30
mov esi ecx
push 0x0
push esi
call sub_43d590
add esp 0xc
mov eax esi
pop esi
retn
sub_417460
mov eax [ ecx ]
mov [ ecx ] 0x0
retn
sub_417470
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax ] r--data
retn
sub_417490
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
ja r-xdata
pop ebp
retn
mov eax ecx
sub_4174b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ ecx ]
push edx
push eax
call sub_421a20
add esp 0x8
pop ebp
retn 0x4
sub_417520
mov eax [ ecx + 0x8 ]
push eax
mov [ ecx ] r--data
call sub_43c44d
pop ecx
retn
sub_41758e
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
mov eax sub_41759c
retn
sub_41759c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_417880
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_417b30
push esi
mov esi [ ecx ]
test esi esi
je r-xdata
mov eax esi
pop esi
retn
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
sub_417ba0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_417ca0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_4180e0
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx eax
jae r-xdata
pop ebp
retn 0x4
sub eax edx
push eax
call sub_417bf0
sub_418a70
push esi
mov esi ecx
call sub_418450
mov eax esi
pop esi
retn
sub_418d97
mov eax r-xdata
retn
sub_418e9f
mov eax r-xdata
retn
sub_419906
mov [ ebp - 0x5c ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_41a462
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp + 0x1c ] eax
mov eax sub_41a470
retn
sub_41a470
mov eax [ ebp + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a487
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov [ ebp + 0x1c ] edx
mov eax sub_41a470
retn
sub_41a495
mov eax sub_41a49b
retn
sub_41a49b
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a508
int3
sub_41a510
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_4105e0
add esp 0x4
pop ebp
retn
sub_41a530
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_410600
add esp 0x4
pop ebp
retn
sub_41a550
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0xb4 ] ecx
xor eax eax
pop ebp
retn 0xc
sub_41a570
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0xb8 ] ecx
xor eax eax
pop ebp
retn 0xc
sub_41aa20
mov eax ecx
mov [ eax ] r--data
retn
sub_41abf0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x18 ]
inc eax
mov [ ecx + 0x18 ] eax
pop ebp
retn 0x4
sub_41ac30
sub [ esp + 0x4 ] 0x10
jmp sub_41ac10
sub_41ac40
sub [ esp + 0x4 ] 0x8
jmp sub_41abf0
sub_41ac50
sub [ esp + 0x4 ] 0x4
jmp sub_41aa90
sub_41ac60
sub [ esp + 0x4 ] 0x14
jmp sub_41ac10
sub_41ac70
sub [ esp + 0x4 ] 0xc
jmp sub_41abf0
sub_41ac80
sub [ esp + 0x4 ] 0x8
jmp sub_41aa90
sub_41ac90
sub [ esp + 0x4 ] 0x10
jmp sub_41abf0
sub_41aca0
sub [ esp + 0x4 ] 0xc
jmp sub_41aa90
sub_41acb0
sub [ esp + 0x4 ] 0x14
jmp sub_41abf0
sub_41acc0
sub [ esp + 0x4 ] 0x10
jmp sub_41aa90
sub_41acd0
sub [ esp + 0x4 ] 0x14
jmp sub_41aa90
sub_41ace0
sub [ esp + 0x4 ] 0x4
jmp sub_41ac10
sub_41acf0
sub [ esp + 0x4 ] 0x8
jmp sub_41ac10
sub_41ad00
sub [ esp + 0x4 ] 0xc
jmp sub_41ac10
sub_41ad10
sub [ esp + 0x4 ] 0x4
jmp sub_41abf0
sub_41b130
push ebp
mov ebp esp
pop ebp
jmp sub_426320
sub_41b140
mov eax [ ecx ]
and eax 0x3
lea eax [ eax * 8 + 0x8 ]
retn
sub_41b150
mov eax [ ecx ]
and eax 0x3
lea eax [ eax * 4 + 0x4 ]
retn
sub_41b420
mov eax ecx
mov ecx 0xfffffff8
sub ecx eax
shr ecx 0x2
and ecx 0x3
mov [ eax + 0x4 ] ecx
retn
sub_41b730
push esi
mov esi ecx
call sub_427b20
mov eax esi
pop esi
retn
sub_41b740
xor eax eax
retn 0x4
sub_41b810
mov eax ecx
mov [ eax ] r--data
retn
sub_41b820
mov eax ecx
mov ecx 0xfffffff8
sub ecx eax
mov [ eax + 0x4 ] r--data
shr ecx 0x2
mov [ eax + 0x8 ] 0x0
and ecx 0x3
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x14 ] ecx
retn
sub_41b8d0
push esi
mov esi ecx
call sub_425950
mov [ esi + 0x20 ] 0x0
pop esi
retn
sub_41ba90
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
add ecx 0x4
call sub_41ba00
xor eax eax
pop ebp
retn 0xc
sub_41be00
mov eax [ ecx + 0x18 ]
mov edx [ ecx + 0x1c ]
mov [ ecx + 0xc ] eax
mov eax [ ecx + 0x20 ]
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x14 ] eax
retn
sub_41bf10
xor eax eax
retn 0x4
sub_41bf20
mov ecx [ ecx + 0x14 ]
or ecx 0x2
mov eax ecx
xor eax 0x1
imul eax ecx
shr eax 0x8
retn
sub_41c140
mov eax 0x1
cmp [ ecx + 0x1c ] eax
jne r-xdata
xor eax eax
cmp [ ecx + 0x18 ] eax
je r-xdata
retn
sub_41c160
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp eax 0x40
jae r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ eax * 4 + rwxdata ] ecx
inc eax
mov [ rwxdata ] eax
sub_41c320
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ ecx ]
push edx
push eax
call sub_421ab0
add esp 0x8
pop ebp
retn 0x4
sub_41c340
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ecx ]
push eax
push ecx
call sub_421ab0
add esp 0x8
pop ebp
retn 0x4
sub_41c360
mov eax [ ecx ]
retn
sub_41c370
mov eax ecx
retn
sub_41c380
mov eax ecx
retn
sub_41c390
mov eax ecx
mov [ eax ] 0x0
retn
sub_41c3a0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41c3b0
mov eax ecx
retn
sub_41c440
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_41ce40
mov al [ ecx + 0x41 ]
test al al
je r-xdata
mov eax 0x1
retn
cmp al 0xb
je r-xdata
xor eax eax
retn
sub_41cec0
add ecx 0x20
push 0x1
push ecx
call sub_415c10
add esp 0x8
retn
sub_41cf5c
add al [ edx ]
add [ edx ] al
add eax [ ebx ]
add eax [ eax ]
add eax [ edx ]
add [ edx ] al
int3
sub_41d030
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffe
and [ ecx + 0x2 ] ax
pop ebp
retn 0x4
or [ ecx + 0x2 ] 0x1
pop ebp
retn 0x4
sub_41d050
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx 0xf7ff
and [ ecx + 0x2 ] dx
pop ebp
retn 0x4
mov eax 0x800
or [ ecx + 0x2 ] ax
pop ebp
retn 0x4
sub_41d4d0
mov eax 0x1
test [ ecx + 0x2 ] al
je r-xdata
xor eax eax
test [ ecx + 0x2 ] 0x40
jne r-xdata
retn
cmp [ ecx + 0x4 ] 0x63
je r-xdata
j_sub_404780#7
jmp sub_404780
sub_41d500
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x2
xor eax eax
pop ebp
retn 0x8
sub_41d600
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x1
mov [ eax ] r--data
retn
sub_41d650
mov eax ecx
mov [ eax ] 0x0
retn
sub_41d660
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41d670
mov eax [ ecx ]
retn
sub_41d680
mov eax ecx
retn
sub_41d690
mov eax [ ecx ]
retn
sub_41d6c0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41d770
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ ecx ]
push edx
push eax
call sub_421a60
add esp 0x8
pop ebp
retn 0x4
sub_41d790
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_41d7d0
mov eax [ ecx + 0x20 ]
push eax
call sub_43c44d
pop ecx
retn
sub_41d8c0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_41e56a
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] al
add [ ecx ] eax
add [ ecx ] al
add ah cl
int3
sub_41f6c4
mov eax [ ebp - 0x158 ]
mov ecx [ eax ]
mov [ ebp + 0x8 ] ecx
mov eax sub_41f6d5
retn
sub_41f6d5
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41f6ec
mov eax sub_41f6f2
retn
sub_41f6f2
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41f760
mov eax ecx
mov [ eax ] 0x0
retn
sub_41f770
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41f780
mov eax [ ecx ]
retn
sub_41f790
mov eax ecx
mov [ eax ] 0x0
retn
sub_41f7a0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41f7b0
mov eax [ ecx ]
retn
sub_41f7c0
mov eax ecx
mov [ eax ] 0x0
retn
sub_41f7d0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41f7e0
mov eax [ ecx ]
retn
sub_41f7f0
mov eax [ ecx ]
retn
sub_41f800
mov eax ecx
mov [ eax ] 0x0
retn
sub_41f810
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_41f820
mov eax [ ecx ]
retn
sub_41f830
mov eax ecx
retn
sub_41f840
mov eax [ ecx ]
retn
sub_41f870
xor eax eax
mov [ ecx + 0x58 ] eax
mov [ ecx + 0x5c ] eax
mov [ ecx + 0x48 ] al
mov ecx [ ecx + 0x74 ]
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0xc ]
call ecx
retn
sub_41f890
mov eax ecx
mov [ eax ] r--data
retn
sub_41f8a0
mov eax ecx
mov [ eax ] r--data
retn
sub_41f8b0
mov eax ecx
mov [ eax ] r--data
retn
sub_41f8c0
mov eax ecx
mov [ eax ] r--data
retn
sub_41fa00
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x2c ]
inc eax
mov [ ecx + 0x2c ] eax
pop ebp
retn 0x4
sub_41fa20
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_41fa30
mov eax ecx
retn
sub_41fa40
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_41fa50
mov eax ecx
retn
sub_41fa60
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_41fa70
mov eax ecx
retn
sub_41fa80
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_41fa90
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_41faa0
sub [ esp + 0x4 ] 0x18
jmp sub_41fa00
sub_41fab0
sub [ esp + 0x4 ] 0x1c
jmp sub_41fa00
sub_41fac0
sub [ esp + 0x4 ] 0x20
jmp sub_41fa00
sub_41fad0
sub [ esp + 0x4 ] 0x4
jmp sub_41fa00
sub_41fae0
sub [ esp + 0x4 ] 0x24
jmp sub_41fa00
sub_41faf0
sub [ esp + 0x4 ] 0x8
jmp sub_41fa00
sub_41fb00
sub [ esp + 0x4 ] 0x28
jmp sub_41fa00
sub_41fb10
sub [ esp + 0x4 ] 0xc
jmp sub_41fa00
sub_41fb20
sub [ esp + 0x4 ] 0x10
jmp sub_41fa00
sub_41fb30
sub [ esp + 0x4 ] 0x14
jmp sub_41fa00
sub_420460
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
pop ebp
retn 0x8
sub_420480
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x48 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push eax
call edx
pop ebp
retn 0x4
sub_4204c0
sub [ esp + 0x4 ] 0x14
jmp sub_41fb40
sub_4204d0
sub [ esp + 0x4 ] 0x18
jmp sub_41fb40
sub_4204e0
sub [ esp + 0x4 ] 0x1c
jmp sub_41fb40
sub_4204f0
sub [ esp + 0x4 ] 0x20
jmp sub_41fb40
sub_420500
sub [ esp + 0x4 ] 0x4
jmp sub_41fb40
sub_420510
sub [ esp + 0x4 ] 0x24
jmp sub_41fb40
sub_420520
sub [ esp + 0x4 ] 0x8
jmp sub_41fb40
sub_420530
sub [ esp + 0x4 ] 0x28
jmp sub_41fb40
sub_420540
sub [ esp + 0x4 ] 0xc
jmp sub_41fb40
sub_420550
sub [ esp + 0x4 ] 0x10
jmp sub_41fb40
sub_4206e0
sub [ esp + 0x4 ] 0x20
jmp sub_4206b0
sub_4206f0
sub [ esp + 0x4 ] 0x4
jmp sub_4206b0
sub_420700
sub [ esp + 0x4 ] 0x24
jmp sub_4206b0
sub_420710
sub [ esp + 0x4 ] 0x8
jmp sub_4206b0
sub_420720
sub [ esp + 0x4 ] 0x28
jmp sub_4206b0
sub_420730
sub [ esp + 0x4 ] 0xc
jmp sub_4206b0
sub_420740
sub [ esp + 0x4 ] 0x10
jmp sub_4206b0
sub_420750
sub [ esp + 0x4 ] 0x14
jmp sub_4206b0
sub_420760
sub [ esp + 0x4 ] 0x18
jmp sub_4206b0
sub_420770
sub [ esp + 0x4 ] 0x1c
jmp sub_4206b0
j_sub_42ed50
jmp sub_42ed50
sub_420790
mov eax [ ecx + 0xc ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
xor eax eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] al
mov [ ecx + 0x24 ] eax
retn
sub_4207b0
mov eax [ ecx + 0x4 ]
sub eax [ ecx + 0xc ]
cdq
add eax [ ecx + 0x18 ]
adc edx [ ecx + 0x1c ]
retn
sub_4207c0
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
jmp sub_42edc0
mov al [ edx ]
inc edx
mov [ ecx + 0x4 ] edx
retn
j_sub_42ee50
jmp sub_42ee50
sub_4207f0
mov eax [ ecx + 0xc ]
mov edx [ ecx + 0x10 ]
add edx eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
retn
sub_420810
mov eax [ ecx + 0x4 ]
sub eax [ ecx + 0xc ]
cdq
add eax [ ecx + 0x18 ]
adc edx [ ecx + 0x1c ]
retn
sub_420820
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
mov dl [ ebp + 0x8 ]
mov [ eax ] dl
inc [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
pop ebp
retn 0x4
call sub_42eeb0
sub_420840
mov eax ecx
mov [ eax ] 0x0
retn
sub_420850
mov eax [ ecx ]
push eax
call sub_410630
pop ecx
retn
sub_420880
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_410660
add esp 0x4
pop ebp
retn
sub_4208a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_410680
add esp 0x4
pop ebp
retn
sub_420930
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_420c40
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_4210e0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_4210f0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_421160
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jg r-xdata
pop ebp
retn
mov eax ecx
sub_421742
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebp + 0x1c ] eax
mov eax sub_421750
retn
sub_421750
mov eax [ ebp + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_421767
mov eax sub_42176d
retn
sub_42176d
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4218a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
inc eax
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_4218c0
sub [ esp + 0x4 ] 0x4
jmp sub_4218a0
sub_4218d0
sub [ esp + 0x4 ] 0x4
jmp sub_421830
sub_421a00
sub [ esp + 0x4 ] 0x4
jmp sub_4219d0
sub_421a10
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call [ CharUpperW@IAT ]
pop ebp
retn
sub_421ff0
cmp [ esi + 0x4c ] 0x0
jne r-xdata
retn
mov ecx [ esi + 0x30 ]
mov edx [ eax + 0x4 ]
push ecx
push eax
call edx
add esp 0x8
mov [ esi + 0x30 ] 0x0
sub_422080
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov al [ edx + ecx ]
pop ebp
retn
sub_422090
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x4 ]
pop ebp
retn
sub_4220a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub [ eax + 0x8 ] ecx
sub [ eax + 0x4 ] ecx
sub [ eax + 0xc ] ecx
pop ebp
retn
sub_422220
mov [ eax + 0x2c ] 0x20
mov [ eax + 0x54 ] 0x1
mov [ eax + 0x48 ] 0x4
mov [ eax + 0x58 ] 0x0
retn
sub_422320
mov ecx [ esi + 0x20 ]
mov edx [ eax + 0x4 ]
push ecx
push eax
call edx
add esp 0x8
mov [ esi + 0x20 ] 0x0
retn
sub_422680
mov eax [ ecx + 0x4 ]
sub eax [ ecx + 0x5c ]
dec eax
and eax 0xfffffc00
retn
sub_422ab0
mov ecx 0x1
add [ eax + 0x14 ] ecx
add [ eax ] ecx
add [ eax + 0x4 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
retn
jmp sub_422710
sub_423a00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push rwxdata
push eax
call [ rwxdata ]
pop ebp
retn 0x4
sub_423a20
mov eax 0x1
retn
sub_423b30
mov eax ecx
mov ecx 0x1
sub [ rwxdata ] ecx
sub [ rwxdata ] ecx
sub [ rwxdata ] ecx
sub [ rwxdata ] ecx
sub [ rwxdata ] ecx
sub [ rwxdata ] ecx
retn
sub_4255b0
mov ecx [ esi + 0x14 ]
mov edx [ eax + 0x4 ]
push ecx
push eax
call edx
add esp 0x8
mov [ esi + 0x14 ] 0x0
retn
sub_426300
push esi
mov esi ecx
push 0x0
push esi
lea eax [ esi + 0x24 ]
push eax
call sub_425980
add [ esi + 0x18 ] 0x1
adc [ esi + 0x1c ] 0x0
pop esi
retn
sub_426760
push esi
mov esi ecx
push esi
call sub_431f20
add esp 0x4
mov eax esi
pop esi
retn
sub_426770
push ecx
call [ DeleteCriticalSection@IAT ]
retn
sub_426780
push ecx
call [ EnterCriticalSection@IAT ]
retn
sub_426790
push ecx
call [ LeaveCriticalSection@IAT ]
retn
sub_4267a0
mov eax ecx
mov [ eax + 0x14 ] 0x1
retn
sub_427d00
push ebp
mov ebp esp
pop ebp
jmp sub_426650
sub_428000
mov eax ecx
mov [ eax ] 0x0
retn
sub_428010
push ecx
call sub_431c30
add esp 0x4
retn
sub_428020
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push ecx
call sub_431c90
add esp 0xc
pop ebp
retn 0x8
sub_428040
mov eax [ ecx ]
push eax
call sub_431c70
add esp 0x4
retn
sub_428050
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_428060
mov eax [ ecx ]
retn
sub_428070
mov eax ecx
mov [ eax ] 0x0
retn
sub_428080
push ecx
call sub_431c30
add esp 0x4
retn
sub_428090
push ecx
call sub_431d10
add esp 0x4
retn
sub_4280a0
mov eax [ ecx ]
push eax
call sub_431c70
add esp 0x4
retn
sub_4280b0
cmp [ ecx ] 0x0
je r-xdata
push ecx
call sub_431e20
add esp 0x4
retn
xor eax eax
retn
sub_4280d0
mov eax ecx
mov [ eax ] 0x0
retn
sub_4280e0
push ecx
call sub_431c30
add esp 0x4
retn
sub_4280f0
mov eax [ ecx ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_428100
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
mov [ esi ] eax
call [ EnterCriticalSection@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
sub_428120
mov eax [ ecx ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_428130
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x4
j_sub_432050
jmp sub_432050
sub_428160
mov eax [ ecx + 0x4 ]
retn
j_sub_404780#3
jmp sub_404780
sub_4281c0
mov al [ ecx + 0x15 ]
retn
sub_4281d0
mov [ ecx + 0x15 ] 0x1
add ecx 0x1c
push ecx
call sub_431d10
pop ecx
retn
sub_4281e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x20 ] eax
add ecx 0x18
push ecx
call sub_431d10
add esp 0x4
pop ebp
retn 0x4
j_sub_404780#6
jmp sub_404780
sub_428210
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
pop ebp
retn 0x8
sub_428230
mov eax [ ecx + 0xc ]
mov ecx [ ecx + 0x8 ]
push eax
call sub_432750
retn
sub_428240
xor eax eax
mov [ ecx + 0x2 ] ax
retn
sub_428250
mov eax [ ecx + 0x30 ]
mov edx [ ecx + 0x34 ]
retn
j_sub_404780#5
jmp sub_404780
j_sub_404780#4
jmp sub_404780
sub_4283a0
mov eax ecx
mov [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_4283f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_428410
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
pop ebp
retn 0x4
push ecx
call sub_43c44d
add esp 0x4
xor eax eax
j_sub_404780
jmp sub_404780
sub_4284e0
mov eax ecx
mov [ eax ] 0x0
retn
sub_4284f0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_428500
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi ] 0x0
sub_428520
mov eax [ ecx ]
retn
sub_428530
mov eax ecx
retn
sub_428540
mov eax [ ecx ]
retn
sub_428580
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_4285c0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x8
mov [ eax ] r--data
retn
sub_428600
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_428610
mov eax [ ecx ]
retn
sub_428620
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_4286a0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_428720
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_4287a0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_4287f0
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_428800
mov eax [ ecx + 0xc ]
retn
sub_428a70
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
add eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_428b00
push ecx
call sub_431c30
pop ecx
retn
sub_428b10
push ecx
call sub_431c30
pop ecx
retn
sub_428b20
push ecx
call sub_431c30
pop ecx
retn
sub_428be0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
retn
sub_428c10
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] 0x1
retn
sub_428cd0
mov eax ecx
mov [ eax ] 0x0
retn
sub_428ce0
push ecx
call sub_431c30
pop ecx
retn
sub_428e00
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_428d70
xor eax eax
pop ebp
retn 0x4
sub_428e20
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] 0x1
mov [ eax + 0x40 ] cx
retn
sub_429140
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_4291d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
mov ecx [ edx + 0x8 ]
push 0x1
call sub_428ef0
pop ebp
retn 0xc
sub_4291f0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
retn
sub_429250
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_429270
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_429340
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x4
mov [ eax ] r--data
retn
sub_4294d0
mov eax [ ecx + 0x38 ]
push eax
call sub_429410
retn
sub_4295e0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_429750
mov eax [ ecx + 0xc ]
retn
sub_429790
mov eax [ ecx + 0xc ]
retn
sub_4297a0
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_4297b0
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_4297c0
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_429840
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_429850
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_4298c0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404680
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_428aa0
pop esi
pop ebp
retn 0x4
sub_429970
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x8 ]
push eax
call sub_40d3a0
mov esp ebp
pop ebp
retn
sub_429bf0
push ecx
add ecx 0x8
push sub_428e00
push ecx
call sub_431c90
add esp 0xc
retn
sub_42a200
mov eax [ ecx + 0x30 ]
and eax 0xfffff
mov edx 0x100000
sub edx eax
push edx
call sub_429410
retn
sub_42a220
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_42a4c0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404680
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_429860
pop esi
pop ebp
retn 0x4
sub_42a6b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_42ea60
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] sub_42ea20
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x4
sub_42ebb0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] sub_42ead0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_42ebd0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax ] sub_42eb60
mov [ eax + 0x8 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
pop ebp
retn 0x4
sub_42ec4e
add eax 0x4050505
int3
sub_42ed20
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax ] sub_42ec60
mov [ eax + 0x4 ] sub_42ecb0
mov [ eax + 0xc ] 0x0
pop ebp
retn 0x4
sub_42ed50
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push eax
call sub_410630
add esp 0x4
mov [ esi + 0xc ] 0x0
pop esi
retn
sub_42ee40
mov eax ecx
mov [ eax + 0xc ] 0x0
mov [ eax ] sub_42ee20
retn
sub_42ee50
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push eax
call sub_410630
add esp 0x4
mov [ esi + 0xc ] 0x0
pop esi
retn
sub_42ef40
mov eax ecx
mov [ eax + 0xc ] 0x0
mov [ eax ] sub_42eef0
retn
sub_42f090
mov [ edx ] 0xffffffff
push esi
mov esi [ ecx + eax * 4 + 0x100 ]
mov [ edx + 0x4 ] esi
movzx esi [ ecx + eax + 0x58 ]
mov [ edx + 0x8 ] esi
inc [ ecx + eax * 4 + 0x198 ]
mov [ ecx + eax * 4 + 0x100 ] edx
pop esi
retn
sub_42f0c0
mov eax [ edx + ecx * 4 + 0x100 ]
push esi
mov esi [ eax + 0x4 ]
dec [ edx + ecx * 4 + 0x198 ]
mov [ edx + ecx * 4 + 0x100 ] esi
pop esi
retn
sub_42f4a0
movzx ecx [ eax + ecx + 0x7d ]
mov [ edx ] 0xffffffff
push esi
mov esi [ eax + ecx * 4 + 0x100 ]
mov [ edx + 0x4 ] esi
movzx esi [ ecx + eax + 0x58 ]
mov [ edx + 0x8 ] esi
inc [ eax + ecx * 4 + 0x198 ]
mov [ eax + ecx * 4 + 0x100 ] edx
pop esi
retn
sub_42f6b0
mov [ ecx + 0x2 ] ax
shr eax 0x10
mov [ ecx + 0x4 ] ax
retn
sub_430f30
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ esi + 0x48 ]
shr eax 0xe
imul eax [ ebp + 0x8 ]
mov [ esi + 0x48 ] eax
call sub_430eb0
pop esi
pop ebp
retn
sub_4313a0
mov eax [ ecx + 0x94 ]
push eax
call sub_43c44d
pop ecx
retn
sub_4318e0
push ebp
mov ebp esp
pop ebp
jmp sub_431830
sub_431be0
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
retn
mov eax 0x1
sub_431f7f
mov eax 0x1
retn
sub_431f85
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431fb0
push ebp
mov ebp esp
pop ebp
jmp sub_427990
sub_431fc0
push ebp
mov ebp esp
pop ebp
jmp sub_4279f0
sub_431fd0
push ebp
mov ebp esp
pop ebp
jmp sub_427a80
sub_431fe0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push edx
push ecx
call sub_431e50
add esp 0xc
pop ebp
retn 0x8
sub_432000
push ecx
call sub_431ef0
add esp 0x4
retn
sub_432010
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
call sub_431ec0
add esp 0x8
pop ebp
retn 0x4
sub_432030
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
add ecx 0x24
push ecx
call sub_431ec0
add esp 0x8
pop ebp
retn 0x4
sub_432050
push esi
mov esi ecx
mov eax [ esi ]
push eax
call sub_410630
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
sub_432070
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
retn
retn
sub_432080
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov [ ecx + 0x8 ] eax
sub_4321a0
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
lea eax [ ecx + eax * 4 - 0x4 ]
retn
sub_432390
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_432320
mov ecx esi
call sub_404740
pop esi
pop ebp
retn 0x4
sub_432650
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx * 8 ]
pop ebp
retn 0x4
sub_4328e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ ecx + 0x30 ] eax
mov edx [ ebp + 0xc ]
adc [ ecx + 0x34 ] edx
pop ebp
retn 0x8
sub_432bc0
mov eax [ ecx ]
mov [ ecx ] 0x0
retn
sub_432bd0
mov eax [ ecx ]
mov [ ecx ] 0x0
retn
sub_432d00
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_433800
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x10 ] ecx
retn
sub_433860
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_433880
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_433990
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0xc ] edx
pop ebp
retn 0x8
sub_4339b0
mov eax [ ecx + 0x10 ]
retn
sub_4339c0
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] 0xffffffff
retn
sub_4339d0
mov eax [ ecx + 0x18 ]
not eax
retn
sub_4339e0
mov eax [ ecx + 0x10 ]
mov edx [ ecx + 0x14 ]
retn
sub_4339f0
mov eax ecx
mov [ eax ] 0x0
retn
sub_433a00
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x10 ]
add eax 0xc
push eax
call edx
sub_433a20
mov eax [ ecx + 0xc ]
and eax 0x3
lea eax [ eax * 4 + 0x6 ]
retn
sub_433b00
mov eax ecx
retn
sub_433b10
mov eax [ ecx ]
retn
sub_433b20
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
add eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_433b80
mov eax ecx
mov [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_433bd0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_433bf0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jne r-xdata
pop ebp
retn 0x4
push ecx
call sub_43c44d
add esp 0x4
xor eax eax
sub_433c50
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
retn
sub_433cc0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_433ce0
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_433cf0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
retn
sub_433d50
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
inc eax
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_433d70
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_434070
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
inc eax
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_434090
sub [ esp + 0x4 ] 0x4
jmp sub_434070
sub_4340a0
sub [ esp + 0x4 ] 0x4
jmp sub_434000
sub_4340b0
mov eax ecx
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
retn
sub_434140
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
inc eax
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_434160
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x8 ]
mov eax [ ecx + 0x8 ]
jne r-xdata
pop ebp
retn 0x4
push ecx
call sub_43c44d
add esp 0x4
xor eax eax
sub_434180
sub [ esp + 0x4 ] 0x4
jmp sub_4340d0
sub_434190
sub [ esp + 0x4 ] 0x4
jmp sub_434160
sub_4341a0
sub [ esp + 0x4 ] 0x4
jmp sub_434140
sub_4341e0
mov eax [ ecx + 0x2c ]
push eax
mov [ ecx + 0x24 ] r--data
call sub_43c44d
pop ecx
retn
sub_434f70
sub [ esp + 0x4 ] 0x4
jmp sub_434f10
sub_434f80
push ecx
call sub_431d40
add esp 0x4
retn
sub_434f90
mov eax [ ecx ]
retn
sub_434fa0
mov eax [ ecx + 0x8 ]
mov eax [ eax + 0x4 ]
mul [ ecx + 0xc ]
mov ecx [ ecx + 0x10 ]
push esi
xor esi esi
add eax ecx
adc edx esi
pop esi
retn
sub_434fc0
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
lea ecx [ esi + 0x28 ]
call sub_4324d0
mov [ esi + 0x48 ] 0x1
pop esi
retn
sub_435410
mov eax [ ecx + 0x4 ]
retn
sub_435420
mov eax [ ecx + 0x4 ]
retn
sub_435430
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ ecx + 0x10 ] eax
pop ebp
retn 0x4
sub_435520
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push eax
call sub_43d6dd
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov [ esi ] 0x0
pop esi
retn
sub_435a60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_410660
add esp 0x4
pop ebp
retn
sub_435a80
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_410680
add esp 0x4
pop ebp
retn
sub_435aa0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_4105e0
add esp 0x4
pop ebp
retn
sub_435ac0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_410600
add esp 0x4
pop ebp
retn
sub_435ae0
mov [ ecx ] r--data
mov [ ecx + 0x4 ] r--data
mov [ ecx + 0x8 ] r--data
mov ecx [ ecx + 0x10 ]
test ecx ecx
je r-xdata
retn
push rwxdata
push rwxdata
push ecx
call sub_4393a0
add esp 0xc
sub_435bb0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0xc ]
inc eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x4
sub_435bf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp cx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffe0
sub_436000
sub [ esp + 0x4 ] 0x4
jmp sub_435bd0
sub_436010
sub [ esp + 0x4 ] 0x8
jmp sub_435bd0
sub_436020
sub [ esp + 0x4 ] 0x4
jmp sub_435bb0
sub_436030
sub [ esp + 0x4 ] 0x8
jmp sub_435bb0
sub_436040
sub [ esp + 0x4 ] 0x4
jmp sub_435b10
sub_436050
sub [ esp + 0x4 ] 0x8
jmp sub_435b10
sub_4368f0
xor ecx ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x20 ] ecx
retn
sub_436930
mov ecx [ esi + 0x20 ]
mov edx [ eax + 0x4 ]
push ecx
push eax
call edx
add esp 0x8
mov [ esi + 0x20 ] 0x0
retn
sub_437460
test ecx ecx
je r-xdata
retn
add [ eax + 0x31938 ] ecx
mov edx [ eax + 0x14 ]
push ecx
mov ecx [ eax + 0x18 ]
push ecx
call edx
add esp 0x8
sub_43a1e0
mov [ eax + 0x1e8 ] 0x1
mov [ eax + 0x1cc ] ecx
mov [ eax + 0x1ec ] edx
retn
sub_43a240
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebp
retn
add eax 0x20
push eax
call sub_43b3c0
add esp 0x4
sub_43a2a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x8 ]
push ecx
call edx
add esp 0x4
pop ebp
retn
sub_43a9a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1
pop ebp
retn
sub_43b170
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_43ab30
add esp 0x4
xor eax eax
pop ebp
retn 0x4
sub_43b3c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x2c
push eax
call sub_43a7a0
add esp 0x4
pop ebp
retn
sub_43b480
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_43b4b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov al [ edx + ecx ]
pop ebp
retn
j_sub_43c176#2
jmp sub_43c176
j_sub_43c176
jmp sub_43c176
j_sub_43c176#4
jmp sub_43c176
j_sub_43c176#3
jmp sub_43c176
j_sub_43c176#5
jmp sub_43c176
j_sub_43c176#6
jmp sub_43c176
sub_43badb
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43bb28
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43bb75
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43bbc2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43bcd5
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43bcf2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43c092
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_43c0af
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_43c0fc
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_43d6dd
pop ecx
sub_43c176
mov [ ecx ] r--data
jmp sub_43c0fc
sub_43c19f
mov [ ecx ] r--data
jmp sub_43c0fc
sub_43c1c8
mov [ ecx ] r--data
jmp sub_43c0fc
sub_43c1d3
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c1aa
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43c1f0
mov [ ecx ] r--data
jmp sub_43c0fc
sub_43c26e
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43c2b2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43c2f6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c2b2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_43c430
call sub_43e276
retn
sub_43c436
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43c3fa
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_43c44d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43d6dd
sub_43c458
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_43e68a
pop ecx
pop ecx
pop ebp
retn 0x4
sub_43c46c
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_43e61a
pop ecx
retn
sub_43c49d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_43e81f
pop ecx
pop ecx
pop ebp
retn 0x4
sub_43c4b3
push ecx
call sub_43e77c
pop ecx
retn
sub_43c520
lea eax [ ecx + 0x8 ]
retn
sub_43c524
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_43c52f
mov eax ecx
retn 0x4
sub_43c779
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_43ed10
pop ecx
pop ecx
retn
sub_43c78d
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_43e565
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_43e5e5
retn
push eax
call sub_43e540
_start
call sub_43faf7
jmp sub_43c64a
sub_43c820
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
sub_43c83e
mov eax [ ecx ]
mov edx [ eax - 0x4 ]
mov eax ecx
sub eax [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
retn
sub ecx edx
sub eax [ ecx ]
sub_43c91c
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
sub_43c930
mov esp [ ebp - 0x18 ]
push r--data
lea ecx [ ebp - 0x24 ]
call sub_43c1d3
push r--data
lea eax [ ebp - 0x24 ]
push eax
call sub_43d1c8
int3
sub_43cced
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_43eb02
push 0x1
push 0x0
call sub_43fbc5
add esp 0xc
jmp sub_43fb92
call eax
sub_43cd3e
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_43cd7d
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_43cd84
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_43cd8b
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_43ce88
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
push [ eax + 0x28 ]
push 0x0
push [ eax + 0x18 ]
call sub_43fe9f
add esp 0x10
pop ebp
retn 0x4
sub_43d828
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_440fce
xor eax eax
retn
sub_43d85d
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_440fce
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_43d8e3
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d83a
sub_43d9ab
mov edi edi
push ebp
mov ebp esp
call sub_43f708
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_43f8ca
pop ecx
sub_43d9ca
push 0xc
push r--data
call sub_43e5a0
call sub_43f781
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_43d9ab
sub_43d9ff
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_43e540
int3
sub_43db10
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_43bd0f
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_43bd0f
sub_43df85
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rwxdata ] eax
xor eax eax
retn
sub_43e0b1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_43e255
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43e22a
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_43e26d
push 0x8
call sub_4419e6
pop ecx
retn
sub_43e276
push 0x8
call sub_4418f5
pop ecx
retn
sub_43e515
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_4418f5
pop ecx
sub_43e52a
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_43e3ea
add esp 0xc
pop ebp
retn
sub_43e540
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_43e3ea
add esp 0xc
pop ebp
retn
sub_43e556
push 0x1
push 0x0
push 0x0
call sub_43e3ea
add esp 0xc
retn
sub_43e565
push 0x1
push 0x1
push 0x0
call sub_43e3ea
add esp 0xc
retn
sub_43e574
mov edi edi
push ebp
mov ebp esp
call sub_43ecb1
push [ ebp + 0x8 ]
call sub_43eb02
pop ecx
push 0xff
call sub_43e540
int3
sub_43e5e5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_43e681
push 0xe
call sub_4418f5
pop ecx
retn
sub_43e773
push 0xe
call sub_4418f5
pop ecx
retn
sub_43e7e3
push 0xe
call sub_4418f5
pop ecx
retn
sub_43e922
push 0xe
call sub_4418f5
pop ecx
retn
sub_43e975
push 0xe
call sub_4418f5
pop ecx
retn
sub_43ea08
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_43ea4e
push 0x0
call sub_43ea17
pop ecx
retn
sub_43ea57
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_43eace
push sub_43ea8c
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_43efb5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_43f594
push 0x0
call [ EncodePointer@IAT ]
retn
sub_43f59d
call [ TlsAlloc@IAT ]
retn 0x4
sub_43f5a6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_43f5c0
mov eax [ rwxdata ]
retn
sub_43f5fa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_43f6f6
push 0xd
call sub_4418f5
pop ecx
retn
sub_43f6ff
push 0xc
call sub_4418f5
pop ecx
retn
sub_43f8b5
push 0xd
call sub_4418f5
pop ecx
retn
sub_43f8c1
push 0xc
call sub_4418f5
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_43fabf
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rwxdata ] eax
mov eax ecx
retn
sub_43fadd
push [ rwxdata ]
call [ HeapDestroy@IAT ]
and [ rwxdata ] 0x0
retn
sub_43faf1
mov eax [ rwxdata ]
retn
sub_43fd92
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_43fdbf
mov [ ecx ] r--data
jmp sub_43c176
sub_43ff1d
push [ ebp - 0x14 ]
call sub_43fe50
pop ecx
retn
sub_43ff61
call sub_43f781
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_43f781
dec [ eax + 0x90 ]
sub_440003
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_44000c
mov esp [ ebp - 0x18 ]
call sub_440fce
sub_44003e
call sub_43f781
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_440294
push 0x10
pop eax
retn
sub_440298
push 0x8
push r--data
call sub_43e5a0
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
sub_4402b0
push [ ebp - 0x14 ]
call sub_43fe50
pop ecx
retn
sub_4402ba
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
sub_4402ca
push 0x8
push r--data
call sub_43e5a0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
sub_4402e3
push [ ebp - 0x14 ]
call sub_43fe50
pop ecx
retn
sub_4402ed
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
sub_4402fd
push 0x8
push r--data
call sub_43e5a0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
sub_440315
push [ ebp - 0x14 ]
call sub_43fe50
pop ecx
retn
sub_44031f
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
sub_440350
push [ ebp - 0x14 ]
call sub_43fe50
pop ecx
retn
sub_44035a
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e5e5
retn
sub_4403e5
push 0x4
mov eax sub_453a2d
call sub_448d55
call sub_43f781
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_441007
call sub_44101a
sub_440576
mov eax [ ebp - 0x14 ]
call sub_43ff7b
retn
sub_4407ed
xor eax eax
inc eax
retn
sub_4407f1
mov esp [ ebp - 0x18 ]
call sub_440fce
sub_440886
xor eax eax
inc eax
retn
sub_44088a
mov esp [ ebp - 0x18 ]
call sub_440fce
sub_440ecb
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43c222
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_440fce
push 0x8
push r--data
call sub_43e5a0
call sub_43f781
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_43fb92
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_440fee
xor eax eax
inc eax
retn
sub_441007
call sub_43f781
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_440fce
call eax
sub_44101a
push 0x8
push r--data
call sub_43e5a0
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_440fce
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_44103e
xor eax eax
inc eax
retn
sub_441052
push sub_440fce
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
retn
sub_4411cb
call sub_43f708
test eax eax
jne r-xdata
add eax 0xc
retn
mov eax rwxdata
retn
sub_44128d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_4413ec
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_44141e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4413f9
int3
sub_4414a3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_441438
sub_441586
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4414b0
add esp 0xc
pop ebp
retn 0x4
sub_4415b9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_448f85
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_4415eb
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4414b0
add esp 0xc
pop ebp
retn 0x8
sub_44172b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_44175c
and [ rwxdata ] 0x0
retn
sub_4418f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rwxdata ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_44190c
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_43e255
sub_4419dd
push 0xa
call sub_4418f5
pop ecx
retn
sub_441a19
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
pop ebp
retn
sub_441ab3
push edi
call sub_4418f5
pop ecx
retn
sub_441b0a
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_441b17
call sub_43f781
add eax 0x64
retn
sub_441b20
call sub_43f781
add eax 0x60
retn
sub_441d2e
push 0x0
call sub_4418f5
pop ecx
retn
sub_441ed0
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_4418f5
pop ecx
sub_441f0c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_44202e
mov eax ecx
and [ eax ] 0x0
retn
sub_4425c1
mov eax [ rwxdata ]
not eax
and eax 0x1
retn
sub_4425cc
mov eax [ rwxdata ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_4425d9
mov eax [ rwxdata ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_4425e7
mov eax [ rwxdata ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_4425f5
mov eax [ rwxdata ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_442603
mov eax [ rwxdata ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_442611
mov eax [ rwxdata ]
and eax 0x60
xor ecx ecx
cmp al 0x60
setne cl
mov eax ecx
retn
sub_442623
mov eax [ rwxdata ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_442631
mov eax [ rwxdata ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_44263f
mov eax [ rwxdata ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_44264d
mov eax [ rwxdata ]
and eax 0x1000
retn
sub_442658
mov eax [ rwxdata ]
and eax 0x2000
retn
sub_442663
mov eax [ rwxdata ]
and eax 0x4000
retn
sub_44266e
mov eax [ rwxdata ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_44267c
mov eax [ rwxdata ]
and eax 0x10000
retn
sub_442687
mov eax [ rwxdata ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_44273c
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
retn
sub_44274d
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_442765
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_44276f
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_442777
movsx eax [ ecx + 0x4 ]
retn
sub_44277c
mov eax ecx
or [ eax + 0x4 ] 0x100
retn
sub_442786
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_442790
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_4427a1
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_4427ae
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_4427bf
or [ ecx + 0x4 ] 0x800
retn
sub_4427c7
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_4427d1
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_4427db
or [ ecx + 0x4 ] 0x1000
retn
sub_4427e3
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_4427ed
or [ ecx + 0x4 ] 0x2000
retn
sub_4427f5
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_4427ff
or [ ecx + 0x4 ] 0x4000
retn
sub_442807
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_442811
or [ ecx + 0x4 ] 0x8000
retn
sub_442819
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax ]
xor eax eax
retn
sub_442834
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_44286b
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_442883
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_44288c
mov eax ecx
or [ eax ] 0xffffffff
retn
sub_442892
mov eax ecx
mov [ eax ] r--data
retn
sub_44289b
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_4428b2
xor eax eax
inc eax
retn
sub_4428b6
mov al [ ecx + 0x4 ]
retn
sub_4428ba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_4428fb
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx ]
sub_44296e
mov eax [ ecx + 0x8 ]
retn
sub_442972
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_442a04
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
or [ eax + 0xc ] 0xffffffff
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_442a98
xor eax eax
cmp [ ecx ] al
je r-xdata
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_442bc8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rwxdata
push [ ebp + 0x8 ]
call sub_4426b4
pop ebp
retn
sub_442ec9
mov eax [ ecx + 0x8 ]
retn
sub_442ecd
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
xor al al
retn
mov ecx [ ecx + 0x4 ]
mov al [ ecx + eax - 0x1 ]
retn
sub_442edf
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_442bdf
add esp 0x10
pop ebp
retn 0x8
sub_442f56
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_442b55
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_443f46
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_4437af
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_443f5c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4437af
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_443f72
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4437af
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4445c3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_443f88
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_44520d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_44512c
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_4471ab
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4470b2
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4471cb
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4470b2
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4471eb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4470b2
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_44729a
push 0x5
call sub_4418f5
pop ecx
retn
sub_447334
push 0x5
call sub_4418f5
pop ecx
retn
sub_447d64
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_447dfa
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_447e08
mov eax ecx
retn
sub_447e5e
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447e77
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447e8f
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447ea8
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447ec0
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447ed9
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447ef1
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447f0d
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447f28
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447f44
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447f5f
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447f7b
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447f96
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447fb2
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447fcd
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447fe6
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_447ffe
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_448017
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_44802f
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_448048
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_447e0b
add esp 0x10
pop ebp
retn
sub_4480b5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_448060
pop ecx
pop ecx
pop ebp
retn
sub_448386
push 0xd
call sub_4418f5
pop ecx
retn
sub_448793
push 0xd
call sub_4418f5
pop ecx
retn
sub_4487cc
cmp [ rwxdata ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_448632
pop ecx
mov [ rwxdata ] 0x1
sub_448b17
push 0xc
call sub_4418f5
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_448bd8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_448dfa
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_448e0e
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_43bd0f
jmp sub_448dfa
sub_448e1d
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43bd0f
jmp sub_448dfa
sub_448e2c
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_448e3e
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_448e50
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_448f59
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_448e90
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_448fa4
call eax
retn
sub_448fa7
push 0x2
call sub_43e574
sub_448fb0
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_44a957
add esp 0xc
pop ebp
retn
sub_448fc6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_44a982
add esp 0x10
pop ebp
retn
sub_448fdf
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_448fb0
sub_448fea
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_448fc6
sub_448ff5
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_44ac85
add esp 0xc
pop ebp
retn
sub_44900b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_44acb0
add esp 0x10
pop ebp
retn
sub_44a6a0
call sub_43f781
mov ecx [ eax + 0x6c ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ rwxdata ]
retn
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_448aaa
sub_44a6c6
mov eax [ rwxdata ]
retn
sub_44a6cc
call sub_43f781
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_448aaa
sub_44a700
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_43d980
sub_44a716
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_43d980
sub_44a982
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_44a72c
add esp 0x14
pop ebp
retn
sub_44a9cb
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_44a72c
add esp 0x14
pop ebp
retn
sub_44acb0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_44a9e8
add esp 0x14
pop ebp
retn
sub_44acf9
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_44a9e8
add esp 0x14
pop ebp
retn
sub_44ae00
mov eax [ rwxdata ]
retn
sub_44ae06
mov eax rwxdata
retn
sub_44ae90
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
retn
sub_44af66
push 0xd
call sub_4418f5
pop ecx
retn
sub_44af72
push 0xc
call sub_4418f5
pop ecx
retn
sub_44af7b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44aeb9
sub_44b020
push 0xc
call sub_4418f5
pop ecx
retn
sub_44b02c
push 0xd
call sub_4418f5
pop ecx
retn
j_sub_44af86
jmp sub_44af86
sub_44b03a
xor eax eax
retn
sub_44bbd9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44bae4
sub_44bd16
push 0xc
call sub_4418f5
pop ecx
retn
sub_44bd22
push 0xc
call sub_4418f5
pop ecx
retn
sub_44bd53
and [ esi + 0x70 ] 0xffffffef
retn
sub_44bd90
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_44bd58
pop ecx
pop ecx
pop ebp
retn
sub_44bda3
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bdb9
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bdcf
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bde2
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bdf5
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44be08
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44be1b
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44be2e
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44be41
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44be57
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44be6d
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44be80
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44be93
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bea6
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44beb9
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44becf
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bee5
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44befb
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bf11
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bf27
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bf3d
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bf50
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44bf63
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_44c3b6
call sub_43f781
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_448aaa
sub_44c3df
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_44c3b6
sub_44c3fb
call sub_43f781
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_448aaa
sub_44c421
call sub_43f781
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_448aaa
sub_44c447
call sub_43f781
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
add eax 0xc
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_448aaa
sub_44c46d
xor eax eax
retn
sub_44c588
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_44cce4
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_44ccf4
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_44f8b5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44f860
sub_44f8c0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f860
pop ecx
pop ecx
pop ebp
retn
sub_44fc54
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_44fb49
pop ebp
retn
sub_44fdae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
ReadFile
jmp [ ReadFile@IAT ]
SetFilePointerEx
jmp [ SetFilePointerEx@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
GetFileTime
jmp [ GetFileTime@IAT ]
GetFileAttributesW
jmp [ GetFileAttributesW@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
FileTimeToSystemTime
jmp [ FileTimeToSystemTime@IAT ]
GetVersionExW
jmp [ GetVersionExW@IAT ]
LocalFileTimeToFileTime
jmp [ LocalFileTimeToFileTime@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
CompareFileTime
jmp [ CompareFileTime@IAT ]
DosDateTimeToFileTime
jmp [ DosDateTimeToFileTime@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
SystemTimeToFileTime
jmp [ SystemTimeToFileTime@IAT ]
GetSystemTime
jmp [ GetSystemTime@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GlobalMemoryStatus
jmp [ GlobalMemoryStatus@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
WaitForMultipleObjects
jmp [ WaitForMultipleObjects@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
CreateEventW
jmp [ CreateEventW@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
CreateSemaphoreW
jmp [ CreateSemaphoreW@IAT ]
ReleaseSemaphore
jmp [ ReleaseSemaphore@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
ExitThread
jmp [ ExitThread@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
Sleep
jmp [ Sleep@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
CharToOemW
jmp [ CharToOemW@IAT ]
CharUpperW
jmp [ CharUpperW@IAT ]
CharPrevExA
jmp [ CharPrevExA@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
SysAllocStringByteLen
jmp [ SysAllocStringByteLen@IAT ]
VariantClear
jmp [ VariantClear@IAT ]
VariantCopy
jmp [ VariantCopy@IAT ]
SysAllocString
jmp [ SysAllocString@IAT ]
sub_4501e0
mov ecx [ ebp - 0x10 ]
jmp sub_401df0
sub_4501e8
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_4047c0
sub_4501f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450210
lea ecx [ ebp - 0x4c ]
jmp sub_404960
sub_450218
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450240
lea ecx [ ebp - 0x4c ]
jmp sub_404960
sub_450248
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450270
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_45027b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4502a0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402640
sub_4502ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4502d0
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402650
sub_4502db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450300
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402650
sub_45030b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450330
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402640
sub_45033b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450360
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_45036b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450390
mov ecx [ ebp - 0x10 ]
jmp sub_401df0
sub_450398
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_4047c0
sub_4503a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4503c0
mov ecx [ ebp - 0x10 ]
jmp sub_402610
sub_4503c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4503f0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4503f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450420
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_450428
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450450
mov ecx [ ebp - 0x10 ]
jmp sub_402610
sub_450458
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450480
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_45048b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4504b0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402640
sub_4504bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4504e0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_4504eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450510
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_45051b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450540
mov ecx [ ebp - 0x14 ]
jmp sub_402610
sub_450548
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450570
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_402900
sub_45057b
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_402640
sub_450586
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp sub_402650
sub_450591
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4505b0
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_402610
sub_4505bb
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402a00
sub_4505c6
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_402630
sub_4505d1
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_402670
sub_4505dc
mov eax [ ebp - 0x14 ]
push eax
call sub_43c44d
pop ecx
retn
sub_4505e7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450610
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402a00
sub_45061b
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_402630
sub_450626
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_450631
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450650
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402a00
sub_45065b
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_402630
sub_450666
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_450671
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450690
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_45069b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4506c0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_4506cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4506f0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_402f80
sub_4506fb
mov ecx [ ebp - 0x10 ]
add ecx 0xa78
jmp sub_402e40
sub_450709
mov ecx [ ebp - 0x14 ]
jmp j_sub_404780#2
sub_450711
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_402610
sub_45071c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450740
mov ecx [ ebp - 0x10 ]
jmp sub_401df0
sub_450748
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_4047c0
sub_450753
mov eax [ ebp + 0x20 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45075e
mov eax [ ebp + 0x20 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450769
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450790
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_450798
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4507c0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4507c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4507f0
mov ecx [ ebp - 0x10 ]
jmp sub_401df0
sub_4507f8
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_403f90
sub_450803
mov eax [ ebp - 0x14 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45080e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450830
mov ecx [ ebp - 0x10 ]
jmp sub_401df0
sub_450838
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_403f90
sub_450843
mov ecx [ ebp - 0x14 ]
jmp j_sub_404780#2
sub_45084b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450870
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45087b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4508a0
mov ecx [ ebp - 0x10 ]
jmp sub_401df0
sub_4508a8
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_403f90
sub_4508b3
mov ecx [ ebp - 0x14 ]
jmp j_sub_404780#2
sub_4508bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4508e0
lea ecx [ ebp - 0x48 ]
jmp sub_403ef0
sub_4508e8
mov eax [ ebp + 0x8 ]
push eax
call sub_43c44d
pop ecx
retn
sub_4508f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450910
lea ecx [ ebp - 0x3c ]
jmp sub_402610
sub_450918
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450940
lea ecx [ ebp - 0x20 ]
jmp sub_406840
sub_450948
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450970
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450990
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_402900
sub_45099b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4509c0
lea ecx [ ebp - 0x34 ]
jmp j_sub_4110c0
sub_4509c8
lea ecx [ ebp - 0x24 ]
jmp sub_4025e0
sub_4509d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4509f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450a20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450a40
lea ecx [ ebp + 0x10 ]
jmp sub_402650
sub_450a48
lea ecx [ ebp + 0xc ]
jmp sub_402650
sub_450a50
mov eax [ ebp + 0x14 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450a5b
lea ecx [ ebp + 0x8 ]
jmp sub_407a50
sub_450a63
lea ecx [ ebp - 0x48 ]
jmp sub_402610
sub_450a6b
lea ecx [ ebp - 0x58 ]
jmp sub_402a00
sub_450a73
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450a90
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402610
sub_450a9b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450ac0
lea ecx [ ebp - 0x1c ]
jmp sub_4025e0
sub_450ac8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450af0
lea ecx [ ebp - 0x10 ]
jmp sub_402640
sub_450af8
lea ecx [ ebp - 0x1c ]
jmp sub_402640
sub_450b00
mov eax [ ebp - 0x14 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450b0b
lea ecx [ ebp - 0x20 ]
jmp sub_407a50
sub_450b13
lea ecx [ ebp - 0x54 ]
jmp sub_402a00
sub_450b1b
mov eax [ ebp - 0x14 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450b26
lea ecx [ ebp - 0x24 ]
jmp sub_402670
sub_450b2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450b50
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450b5b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450b80
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450b8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450bb0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402640
sub_450bbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450be0
lea ecx [ ebp - 0x18 ]
jmp sub_4025e0
sub_450be8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450c10
lea ecx [ ebp - 0x20 ]
jmp j_sub_4110c0
sub_450c18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450c40
lea ecx [ ebp - 0x24 ]
jmp sub_402610
sub_450c48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450c70
lea ecx [ ebp - 0x2c ]
jmp sub_409e50
sub_450c78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450ca0
lea ecx [ ebp - 0x38 ]
jmp j_sub_4110c0
sub_450ca8
lea ecx [ ebp - 0x28 ]
jmp sub_4025e0
sub_450cb0
lea ecx [ ebp - 0x1c ]
jmp sub_4025e0
sub_450cb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450ce0
mov ecx [ ebp - 0x10 ]
jmp sub_402610
sub_450ce8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450d10
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_402900
sub_450d1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450d40
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_402900
sub_450d4b
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_402640
sub_450d56
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp sub_402650
sub_450d61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450d80
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_402900
sub_450d8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450db0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_402900
sub_450dbb
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_402640
sub_450dc6
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp sub_402650
sub_450dd1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450df0
mov ecx [ ebp - 0x10 ]
jmp sub_402610
sub_450df8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450e20
lea ecx [ ebp - 0x24 ]
jmp sub_402670
sub_450e28
lea ecx [ ebp - 0x20 ]
jmp sub_402670
sub_450e30
lea ecx [ ebp - 0x2c ]
jmp sub_402670
sub_450e38
mov eax [ ebp - 0x44 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450e43
lea ecx [ ebp - 0x1c ]
jmp sub_407a50
sub_450e4b
lea ecx [ ebp - 0x28 ]
jmp sub_402640
sub_450e53
lea ecx [ ebp - 0x18 ]
jmp sub_402650
sub_450e5b
lea ecx [ ebp - 0x44 ]
jmp sub_402650
sub_450e63
mov eax [ ebp - 0x34 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450e6e
mov eax [ ebp - 0x34 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450e79
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450ea0
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450eab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450ed0
lea ecx [ ebp - 0x58 ]
jmp sub_402610
sub_450ed8
lea ecx [ ebp - 0x58 ]
jmp sub_402de0
sub_450ee0
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450eeb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450f10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450f30
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450f3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450f60
mov ecx [ ebp - 0x10 ]
jmp sub_402630
sub_450f68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450f90
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402670
sub_450f9b
mov eax [ ebp - 0x14 ]
push eax
call sub_43c44d
pop ecx
retn
sub_450fa6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_450fd0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_40c660
sub_450fdb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451000
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451020
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_451028
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451050
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_451058
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451080
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_451088
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4510b0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4510b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4510e0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4510e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451110
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_451118
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451140
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_451148
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451170
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_451178
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4511a0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_4025e0
sub_4511b9
lea ecx [ ebp - 0x1c ]
jmp sub_4025e0
sub_4511c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4511e0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4511e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451210
mov ecx [ ebp - 0x10 ]
jmp sub_402630
sub_451218
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402840
sub_451223
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_402640
sub_45122e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451250
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_40cef0
sub_45125b
mov ecx [ ebp - 0x14 ]
jmp sub_402630
sub_451263
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_40d6a0
sub_45126e
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
jmp sub_40c450
sub_45127c
mov ecx [ ebp - 0x10 ]
add ecx 0xcc
jmp sub_40cf90
sub_45128a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4512b0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402610
sub_4512c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4512f0
lea ecx [ ebp - 0x38 ]
jmp j_sub_4110c0
sub_4512f8
lea ecx [ ebp - 0x28 ]
jmp sub_402610
sub_451300
lea ecx [ ebp - 0x1c ]
jmp sub_4025e0
sub_451308
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451330
lea ecx [ ebp - 0x58 ]
jmp j_sub_4110c0
sub_451338
lea ecx [ ebp - 0x7c ]
jmp sub_4025e0
sub_451340
lea ecx [ ebp - 0x70 ]
jmp sub_4025e0
sub_451348
lea ecx [ ebp - 0x88 ]
jmp sub_402610
sub_451353
lea ecx [ ebp - 0x94 ]
jmp sub_4025e0
sub_45135e
lea ecx [ ebp - 0x40 ]
jmp sub_402610
sub_451366
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451390
lea ecx [ ebp - 0x18 ]
jmp sub_40c8c0
sub_451398
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4513c0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_40c660
sub_4513cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4513f0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_40c390
sub_4513fb
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_40c390
sub_451406
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_40c390
sub_451411
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_402640
sub_45141c
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_40c510
sub_451427
mov ecx [ ebp - 0x14 ]
jmp j_sub_404780#2
sub_45142f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451450
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45145b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451480
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402610
sub_45148b
mov ecx [ ebp - 0x14 ]
jmp j_sub_404780#2
sub_451493
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4514b0
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_40cef0
sub_4514bb
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_40d6a0
sub_4514c6
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
jmp sub_40c450
sub_4514d4
mov ecx [ ebp - 0x14 ]
jmp j_sub_404780#2
sub_4514dc
mov ecx [ ebp - 0x14 ]
jmp j_sub_404780#2
sub_4514e4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451500
lea ecx [ ebp - 0x28 ]
jmp sub_40bf00
sub_451508
lea ecx [ ebp - 0x34 ]
jmp sub_402650
sub_451510
lea ecx [ ebp - 0x30 ]
jmp sub_402640
sub_451518
lea ecx [ ebp - 0x1c ]
jmp sub_40c390
sub_451520
mov eax [ ebp - 0x38 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45152b
mov eax [ ebp + 0x18 ]
push eax
call sub_43c44d
pop ecx
retn
sub_451536
lea ecx [ ebp - 0x24 ]
jmp sub_40c300
sub_45153e
lea ecx [ ebp + 0x18 ]
jmp sub_40bec0
sub_451546
lea ecx [ ebp - 0x44 ]
jmp sub_402610
sub_45154e
lea ecx [ ebp - 0x58 ]
jmp sub_4025e0
sub_451556
lea ecx [ ebp - 0x64 ]
jmp sub_402610
sub_45155e
lea ecx [ ebp - 0x58 ]
jmp sub_4025e0
sub_451566
lea ecx [ ebp - 0x64 ]
jmp sub_402610
sub_45156e
lea ecx [ ebp - 0x40 ]
jmp sub_40caa0
sub_451576
mov eax [ ebp + 0x18 ]
push eax
call sub_43c44d
pop ecx
retn
sub_451581
mov eax [ ebp + 0x18 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45158c
mov eax [ ebp + 0x18 ]
push eax
call sub_43c44d
pop ecx
retn
sub_451597
mov eax [ ebp + 0x18 ]
push eax
call sub_43c44d
pop ecx
retn
sub_4515a2
lea ecx [ ebp + 0x1c ]
jmp sub_40c340
sub_4515aa
lea ecx [ ebp + 0x18 ]
jmp sub_40c570
sub_4515b2
lea ecx [ ebp + 0x1c ]
jmp sub_402640
sub_4515ba
mov eax [ ebp + 0x18 ]
push eax
call sub_43c44d
pop ecx
retn
sub_4515c5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4515e0
mov ecx [ ebp - 0x10 ]
jmp sub_40eac0
sub_4515e8
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_40d640
sub_4515f3
mov ecx [ ebp - 0x14 ]
jmp j_sub_404780#2
sub_4515fb
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402610
sub_451606
mov ecx [ ebp - 0x14 ]
jmp j_sub_404780#2
sub_45160e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451630
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45163b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451660
mov eax [ ebp - 0x18 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45166b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451690
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_451698
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4516c0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4516c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4516f0
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402610
sub_4516fb
mov ecx [ ebp + 0x8 ]
jmp j_sub_404780#2
sub_451703
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451720
mov ecx [ ebp - 0x10 ]
jmp sub_40eac0
sub_451728
mov ecx [ ebp + 0x8 ]
jmp j_sub_404780#2
sub_451730
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_40d640
sub_45173b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451760
lea ecx [ ebp - 0x80 ]
jmp sub_40e710
sub_451768
mov eax [ ebp - 0x3c ]
push eax
call sub_43c44d
pop ecx
retn
sub_451773
lea ecx [ ebp - 0x18 ]
jmp sub_407a50
sub_45177b
lea ecx [ ebp - 0x14 ]
jmp sub_402650
sub_451783
lea ecx [ ebp - 0x118 ]
jmp j_sub_40f940
sub_45178e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x11c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4517b0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_4025e0
sub_4517c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4517f0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402610
sub_451809
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451830
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402610
sub_451849
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451870
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451890
lea ecx [ ebp - 0x34 ]
jmp j_sub_4110c0
sub_451898
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4518c0
push j_sub_4110c0
push 0x4
push 0x10
lea eax [ ebp - 0x60 ]
push eax
call sub_43d898
retn
sub_4518d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451900
lea ecx [ ebp - 0x20 ]
jmp sub_4025e0
sub_451908
lea ecx [ ebp - 0x70 ]
jmp sub_4025e0
sub_451910
lea ecx [ ebp - 0x34 ]
jmp sub_4025e0
sub_451918
lea ecx [ ebp - 0x58 ]
jmp sub_4025e0
sub_451920
lea ecx [ ebp - 0x88 ]
jmp sub_4025e0
sub_45192b
lea ecx [ ebp - 0x40 ]
jmp sub_4025e0
sub_451933
lea ecx [ ebp - 0x4c ]
jmp sub_4025e0
sub_45193b
lea ecx [ ebp - 0x64 ]
jmp sub_4025e0
sub_451943
lea ecx [ ebp - 0x7c ]
jmp sub_4025e0
sub_45194b
lea ecx [ ebp - 0x94 ]
jmp sub_4025e0
sub_451956
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451980
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4519a0
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402650
sub_4519ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4519d0
mov ecx [ ebp - 0x10 ]
add ecx 0x470
jmp sub_414430
sub_4519de
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402650
sub_4519e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451a10
lea ecx [ ebp + 0x8 ]
jmp sub_4143e0
sub_451a18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451a40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451a60
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_414e80
sub_451a6b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451a90
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_414e80
sub_451a9b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451ac0
lea ecx [ ebp - 0x10 ]
jmp sub_402670
sub_451ac8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451af0
lea ecx [ ebp - 0x10 ]
jmp sub_402640
sub_451af8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451b20
lea ecx [ ebp - 0x1c ]
jmp sub_4025e0
sub_451b28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451b50
lea ecx [ ebp - 0x1c ]
jmp sub_416360
sub_451b58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451b80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451ba0
lea ecx [ ebp - 0x28 ]
jmp sub_416c40
sub_451ba8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451bd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451bf0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451c10
lea ecx [ ebp - 0x34 ]
jmp sub_409e50
sub_451c18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451c40
lea ecx [ ebp - 0x2c ]
jmp sub_417520
sub_451c48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451c70
lea ecx [ ebp - 0x10 ]
jmp sub_402640
sub_451c78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451ca0
lea ecx [ ebp - 0x60 ]
jmp sub_40cea0
sub_451ca8
mov eax [ ebp - 0x2c ]
push eax
call sub_43c44d
pop ecx
retn
sub_451cb3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451ce0
lea ecx [ ebp - 0xa8 ]
jmp j_sub_40f940
sub_451ceb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xac ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451d10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451d30
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_451d3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451d60
lea ecx [ ebp - 0xb0 ]
jmp j_sub_40f940
sub_451d6b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb4 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451d90
lea ecx [ ebp - 0xac ]
jmp j_sub_40f940
sub_451d9b
mov eax [ ebp + 0x8 ]
push eax
call sub_43c44d
pop ecx
retn
sub_451da6
lea ecx [ ebp - 0x144 ]
jmp j_sub_40f940
sub_451db1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x148 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451dd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xcc ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451e00
lea ecx [ ebp - 0x88 ]
jmp sub_402960
sub_451e0b
lea ecx [ ebp - 0x58 ]
jmp sub_4028a0
sub_451e13
lea ecx [ ebp - 0x44 ]
jmp sub_402650
sub_451e1b
mov ecx [ ebp + 0x18 ]
add ecx 0xc
jmp sub_402640
sub_451e26
lea ecx [ ebp - 0x44 ]
jmp sub_402650
sub_451e2e
mov ecx [ ebp + 0x18 ]
add ecx 0xc
jmp sub_402640
sub_451e39
lea ecx [ ebp - 0x44 ]
jmp sub_402650
sub_451e41
mov ecx [ ebp + 0x18 ]
add ecx 0xc
jmp sub_402640
sub_451e4c
lea ecx [ ebp - 0x44 ]
jmp sub_402650
sub_451e54
mov ecx [ ebp + 0x18 ]
add ecx 0xc
jmp sub_402640
sub_451e5f
lea ecx [ ebp - 0x44 ]
jmp sub_402650
sub_451e67
mov ecx [ ebp + 0x18 ]
add ecx 0xc
jmp sub_402640
sub_451e72
lea ecx [ ebp - 0x44 ]
jmp sub_402650
sub_451e7a
mov ecx [ ebp + 0x18 ]
add ecx 0xc
jmp sub_402640
sub_451e85
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451eb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451ed0
lea ecx [ ebp - 0x1c ]
jmp j_sub_4110c0
sub_451ed8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451f00
lea ecx [ ebp - 0x1c ]
jmp j_sub_4110c0
sub_451f08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451f30
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_451f3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451f60
lea ecx [ ebp - 0x10 ]
jmp sub_40c390
sub_451f68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451f90
lea ecx [ ebp - 0x18 ]
jmp sub_40c390
sub_451f98
lea ecx [ ebp - 0x14 ]
jmp sub_41c3a0
sub_451fa0
lea ecx [ ebp - 0x10 ]
jmp sub_40c390
sub_451fa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_451fd0
lea ecx [ ebp - 0x14 ]
jmp sub_402670
sub_451fd8
lea ecx [ ebp - 0x10 ]
jmp sub_41c3a0
sub_451fe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452000
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45200b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452030
lea ecx [ ebp - 0x44 ]
jmp sub_40cf80
sub_452038
lea ecx [ ebp - 0x1c ]
jmp j_sub_4110c0
sub_452040
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452060
lea ecx [ ebp - 0x1c ]
jmp j_sub_4110c0
sub_452068
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452090
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#7
sub_452098
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_4025e0
sub_4520a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4520c0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4520c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4520f0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4520f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452120
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#7
sub_452128
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_4025e0
sub_452133
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452150
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45215b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452180
lea ecx [ ebp - 0x34 ]
jmp sub_41d8e0
sub_452188
lea ecx [ ebp - 0xe8 ]
jmp sub_41d7d0
sub_452193
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_45219b
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_4521a3
lea ecx [ ebp - 0x1c ]
jmp sub_4025e0
sub_4521ab
lea ecx [ ebp - 0x12c ]
jmp j_sub_4110c0
sub_4521b6
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_4521be
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_4521c6
lea ecx [ ebp - 0x10c ]
jmp j_sub_4110c0
sub_4521d1
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_4521d9
lea ecx [ ebp - 0x11c ]
jmp j_sub_4110c0
sub_4521e4
lea ecx [ ebp - 0x148 ]
jmp j_sub_4110c0
sub_4521ef
lea ecx [ ebp - 0x168 ]
jmp sub_4025e0
sub_4521fa
lea ecx [ ebp - 0x174 ]
jmp sub_402610
sub_452205
mov eax [ ebp - 0x44 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x44 ] 0xfffffffe
lea ecx [ ebp - 0x154 ]
jmp sub_4025e0
sub_452221
lea ecx [ ebp - 0xfc ]
jmp j_sub_4110c0
sub_45222c
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_452234
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_45223c
mov eax [ ebp - 0x15c ]
push eax
call sub_43c44d
pop ecx
retn
sub_45224a
lea ecx [ ebp - 0x40 ]
jmp sub_41d660
sub_452252
lea ecx [ ebp + 0x10 ]
jmp sub_41d6c0
sub_45225a
lea ecx [ ebp - 0xa0 ]
jmp j_sub_404780#7
sub_452265
lea ecx [ ebp - 0x8c ]
jmp sub_4025e0
sub_452270
lea ecx [ ebp - 0xa0 ]
jmp sub_41d7e0
sub_45227b
lea ecx [ ebp + 0x10 ]
jmp sub_40bec0
sub_452283
lea ecx [ ebp - 0xa0 ]
jmp j_sub_404780#7
sub_45228e
lea ecx [ ebp - 0x8c ]
jmp sub_4025e0
sub_452299
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_4522a1
lea ecx [ ebp - 0xa0 ]
jmp j_sub_404780#7
sub_4522ac
lea ecx [ ebp - 0x8c ]
jmp sub_4025e0
sub_4522b7
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_4522bf
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_4522c7
lea ecx [ ebp - 0x1c ]
jmp sub_4025e0
sub_4522cf
lea ecx [ ebp - 0x154 ]
jmp sub_402610
sub_4522da
lea ecx [ ebp - 0xa0 ]
jmp j_sub_404780#7
sub_4522e5
lea ecx [ ebp - 0x8c ]
jmp sub_4025e0
sub_4522f0
lea ecx [ ebp - 0x34 ]
jmp j_sub_404780#2
sub_4522f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x178 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452320
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_402640
sub_45232b
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_402650
sub_452336
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_40c300
sub_452341
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_41f770
sub_45234c
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_41f7a0
sub_452357
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_41f7d0
sub_452362
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_40c340
sub_45236d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452390
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_402640
sub_45239b
mov ecx [ ebp - 0x14 ]
add ecx 0x38
jmp sub_402650
sub_4523a6
mov ecx [ ebp - 0x14 ]
add ecx 0x60
jmp sub_40c300
sub_4523b1
mov ecx [ ebp - 0x14 ]
add ecx 0x64
jmp sub_41f770
sub_4523bc
mov ecx [ ebp - 0x14 ]
add ecx 0x68
jmp sub_41f7a0
sub_4523c7
mov ecx [ ebp - 0x14 ]
add ecx 0x6c
jmp sub_41f7d0
sub_4523d2
mov ecx [ ebp - 0x14 ]
add ecx 0x70
jmp sub_40c340
sub_4523dd
mov ecx [ ebp - 0x14 ]
add ecx 0x74
jmp sub_40c390
sub_4523e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452410
lea ecx [ ebp + 0x14 ]
jmp sub_421320
sub_452418
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452440
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452460
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402900
sub_45246b
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_402fe0
sub_452476
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_4313a0
sub_452481
mov ecx [ ebp - 0x10 ]
add ecx 0x108
jmp sub_4313a0
sub_45248f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4524b0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402900
sub_4524bb
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_402fe0
sub_4524c6
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_4313a0
sub_4524d1
mov ecx [ ebp - 0x10 ]
add ecx 0x108
jmp sub_4313a0
sub_4524df
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_402640
sub_4524ea
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp sub_402650
sub_4524f5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452510
lea ecx [ ebp - 0x1c ]
jmp sub_4025e0
sub_452518
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452540
lea ecx [ ebp - 0x18 ]
jmp sub_4025e0
sub_452548
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452570
lea ecx [ ebp - 0x18 ]
jmp sub_4025e0
sub_452578
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4525a0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4525a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4525d0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4525d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452600
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_452608
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452630
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_452638
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452660
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_452668
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452690
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_452698
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4526c0
mov ecx [ ebp - 0x10 ]
jmp j_sub_432050
sub_4526c8
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_426770
sub_4526d3
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_428b20
sub_4526de
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452700
lea ecx [ ebp - 0x10 ]
jmp sub_402650
sub_452708
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452730
lea ecx [ ebp - 0x10 ]
jmp sub_428120
sub_452738
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452760
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_414e80
sub_45276b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452790
mov ecx [ ebp - 0x10 ]
jmp sub_407a50
sub_452798
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp j_sub_404780
sub_4527a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4527c0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_4284f0
sub_4527cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4527f0
mov ecx [ ebp - 0x10 ]
jmp sub_4284f0
sub_4527f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452820
mov ecx [ ebp - 0x10 ]
jmp sub_4284f0
sub_452828
mov ecx [ ebp - 0x14 ]
add ecx 0x14
jmp sub_402650
sub_452833
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452850
lea ecx [ ebp - 0x18 ]
jmp sub_428600
sub_452858
lea ecx [ ebp - 0x10 ]
jmp sub_402650
sub_452860
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452880
mov ecx [ ebp - 0x10 ]
jmp sub_41d7e0
sub_452888
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_402670
sub_452893
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_402670
sub_45289e
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#7
sub_4528a6
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_4025e0
sub_4528b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4528d0
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_4528d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452900
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_4286c0
sub_45290b
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#2
sub_452913
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452930
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_414e80
sub_45293b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452960
mov ecx [ ebp - 0x10 ]
jmp sub_40c450
sub_452968
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_428b00
sub_452973
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_428ce0
sub_45297e
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_428ce0
sub_452989
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_407a50
sub_452994
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_4284f0
sub_45299f
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_402640
sub_4529aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4529d0
mov ecx [ ebp - 0x10 ]
jmp sub_404780
sub_4529d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452a00
mov ecx [ ebp - 0x10 ]
jmp sub_404780
sub_452a08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452a30
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_428ce0
sub_452a3b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_428ce0
sub_452a46
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp j_sub_404780#6
sub_452a51
mov ecx [ ebp - 0x10 ]
add ecx 0x50
jmp sub_402650
sub_452a5c
mov ecx [ ebp - 0x10 ]
add ecx 0x54
jmp sub_4284f0
sub_452a67
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452a90
mov ecx [ ebp - 0x10 ]
jmp sub_40c450
sub_452a98
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_428b00
sub_452aa3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_428ce0
sub_452aae
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_428ce0
sub_452ab9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_407a50
sub_452ac4
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_4284f0
sub_452acf
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_402640
sub_452ada
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452b00
mov ecx [ ebp - 0x10 ]
jmp sub_404780
sub_452b08
mov ecx [ ebp - 0x10 ]
jmp j_sub_404780#7
sub_452b10
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_4025e0
sub_452b1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452b40
mov ecx [ ebp - 0x10 ]
jmp sub_404780
sub_452b48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452b70
lea ecx [ ebp - 0x28 ]
jmp sub_40cea0
sub_452b78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452ba0
mov ecx [ ebp - 0x10 ]
jmp sub_41d7e0
sub_452ba8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_402670
sub_452bb3
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_402670
sub_452bbe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452be0
mov ecx [ ebp - 0x10 ]
jmp sub_404780
sub_452be8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452c10
mov ecx [ ebp - 0x10 ]
jmp sub_40c450
sub_452c18
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_428b00
sub_452c23
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_428ce0
sub_452c2e
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_428ce0
sub_452c39
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_407a50
sub_452c44
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_4284f0
sub_452c4f
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_402640
sub_452c5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452c80
mov ecx [ ebp - 0x10 ]
jmp sub_404780
sub_452c88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452cb0
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_452cbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452ce0
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_452ceb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452d10
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_452d1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452d40
mov eax [ ebp - 0x60 ]
push eax
call sub_43c44d
pop ecx
retn
sub_452d4b
lea ecx [ ebp - 0x128 ]
jmp sub_407a50
sub_452d56
lea ecx [ ebp - 0x1a0 ]
jmp sub_429c10
sub_452d61
lea ecx [ ebp - 0x44 ]
jmp sub_428740
sub_452d69
lea ecx [ ebp - 0x124 ]
jmp j_sub_40f940
sub_452d74
lea ecx [ ebp - 0x2c ]
jmp sub_402640
sub_452d7c
lea ecx [ ebp - 0x48 ]
jmp sub_4284f0
sub_452d84
mov eax [ ebp - 0x60 ]
push eax
call sub_43c44d
pop ecx
retn
sub_452d8f
lea ecx [ ebp - 0x44 ]
jmp j_sub_404780#2
sub_452d97
lea ecx [ ebp - 0x1a0 ]
jmp sub_41d7e0
sub_452da2
lea ecx [ ebp - 0x144 ]
jmp sub_402670
sub_452dad
lea ecx [ ebp - 0x140 ]
jmp sub_402670
sub_452db8
lea ecx [ ebp - 0x1a0 ]
jmp j_sub_404780#7
sub_452dc3
lea ecx [ ebp - 0x18c ]
jmp sub_4025e0
sub_452dce
lea ecx [ ebp - 0x44 ]
jmp j_sub_404780#2
sub_452dd6
lea ecx [ ebp - 0x44 ]
jmp j_sub_404780#2
sub_452dde
lea ecx [ ebp - 0x44 ]
jmp j_sub_404780#2
sub_452de6
lea ecx [ ebp - 0x44 ]
jmp j_sub_404780#2
sub_452dee
lea ecx [ ebp - 0x44 ]
jmp j_sub_404780#2
sub_452df6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_452e20
lea ecx [ ebp - 0x354 ]
jmp j_sub_40f940
sub_452e2b
lea ecx [ ebp - 0x3cc ]
jmp sub_429c10
sub_452e36
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_452e41
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_452e4c
lea ecx [ ebp - 0x264 ]
jmp sub_41d7e0
sub_452e57
lea ecx [ ebp - 0x170 ]
jmp sub_428740
sub_452e62
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_452e6d
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_452e78
lea ecx [ ebp - 0x200 ]
jmp sub_407a50
sub_452e83
lea ecx [ ebp - 0x2bc ]
jmp sub_4292c0
sub_452e8e
lea ecx [ ebp - 0x1b8 ]
jmp sub_428b70
sub_452e99
lea ecx [ ebp - 0x14c ]
jmp sub_429d80
sub_452ea4
lea ecx [ ebp - 0x1cc ]
jmp sub_429cc0
sub_452eaf
lea ecx [ ebp - 0x1f4 ]
jmp j_sub_404780#2
sub_452eba
lea ecx [ ebp - 0x1e0 ]
jmp j_sub_404780#5
sub_452ec5
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_452ed0
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_452edb
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_452ee6
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_452ef1
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_452efc
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_452f07
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_452f12
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_452f1d
lea ecx [ ebp - 0x120 ]
jmp j_sub_404780#4
sub_452f28
mov eax [ ebp - 0x130 ]
push eax
call sub_43c44d
pop ecx
retn
sub_452f36
lea ecx [ ebp - 0xd8 ]
jmp sub_40c450
sub_452f41
lea ecx [ ebp - 0xd0 ]
jmp sub_428b00
sub_452f4c
lea ecx [ ebp - 0xcc ]
jmp sub_428ce0
sub_452f57
lea ecx [ ebp - 0xc8 ]
jmp sub_428ce0
sub_452f62
lea ecx [ ebp - 0xbc ]
jmp sub_407a50
sub_452f6d
lea ecx [ ebp - 0xb4 ]
jmp sub_4284f0
sub_452f78
lea ecx [ ebp - 0xb0 ]
jmp sub_402640
sub_452f83
lea ecx [ ebp - 0xd8 ]
jmp sub_42a140
sub_452f8e
mov eax [ ebp - 0x208 ]
push eax
call sub_43c44d
pop ecx
retn
sub_452f9c
lea ecx [ ebp - 0xd8 ]
jmp sub_40c450
sub_452fa7
lea ecx [ ebp - 0xd0 ]
jmp sub_428b00
sub_452fb2
lea ecx [ ebp - 0xcc ]
jmp sub_428ce0
sub_452fbd
lea ecx [ ebp - 0xc8 ]
jmp sub_428ce0
sub_452fc8
lea ecx [ ebp - 0xbc ]
jmp sub_407a50
sub_452fd3
lea ecx [ ebp - 0xb4 ]
jmp sub_4284f0
sub_452fde
lea ecx [ ebp - 0xb0 ]
jmp sub_402640
sub_452fe9
mov ecx [ ebp - 0x130 ]
jmp sub_41d7e0
sub_452ff4
mov ecx [ ebp - 0x130 ]
add ecx 0x5c
jmp sub_402670
sub_453002
mov ecx [ ebp - 0x130 ]
add ecx 0x60
jmp sub_402670
sub_453010
mov ecx [ ebp - 0x130 ]
jmp j_sub_404780#7
sub_45301b
mov ecx [ ebp - 0x130 ]
add ecx 0x14
jmp sub_4025e0
sub_453029
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_453034
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_45303f
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_45304a
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_453055
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_453060
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_45306b
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_453076
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_453081
lea ecx [ ebp - 0x148 ]
jmp sub_4286c0
sub_45308c
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_453097
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_4530a2
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_4530ad
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_4530b8
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_4530c3
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_4530ce
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_4530d9
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_4530e4
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_4530ef
lea ecx [ ebp - 0x3cc ]
jmp sub_41d7e0
sub_4530fa
lea ecx [ ebp - 0x370 ]
jmp sub_402670
sub_453105
lea ecx [ ebp - 0x36c ]
jmp sub_402670
sub_453110
lea ecx [ ebp - 0x3cc ]
jmp j_sub_404780#7
sub_45311b
lea ecx [ ebp - 0x3b8 ]
jmp sub_4025e0
sub_453126
lea ecx [ ebp - 0x148 ]
jmp sub_4286c0
sub_453131
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_45313c
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_453147
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_453152
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_45315d
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_453168
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_453173
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_45317e
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_453189
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_453194
lea ecx [ ebp - 0x3cc ]
jmp sub_41d7e0
sub_45319f
lea ecx [ ebp - 0x370 ]
jmp sub_402670
sub_4531aa
lea ecx [ ebp - 0x36c ]
jmp sub_402670
sub_4531b5
lea ecx [ ebp - 0x3cc ]
jmp j_sub_404780#7
sub_4531c0
lea ecx [ ebp - 0x3b8 ]
jmp sub_4025e0
sub_4531cb
lea ecx [ ebp - 0x148 ]
jmp sub_4286c0
sub_4531d6
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_4531e1
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_4531ec
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_4531f7
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_453202
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_45320d
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_453218
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_453223
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_45322e
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_453239
lea ecx [ ebp - 0x3cc ]
jmp sub_41d7e0
sub_453244
lea ecx [ ebp - 0x370 ]
jmp sub_402670
sub_45324f
lea ecx [ ebp - 0x36c ]
jmp sub_402670
sub_45325a
lea ecx [ ebp - 0x3cc ]
jmp j_sub_404780#7
sub_453265
lea ecx [ ebp - 0x3b8 ]
jmp sub_4025e0
sub_453270
lea ecx [ ebp - 0x354 ]
jmp j_sub_40f940
sub_45327b
lea ecx [ ebp - 0x354 ]
jmp sub_40eac0
sub_453286
lea ecx [ ebp - 0x2ec ]
jmp sub_40d640
sub_453291
mov ecx [ ebp - 0x130 ]
jmp j_sub_404780#2
sub_45329c
lea ecx [ ebp - 0x334 ]
jmp sub_402610
sub_4532a7
mov ecx [ ebp - 0x130 ]
jmp j_sub_404780#2
sub_4532b2
lea ecx [ ebp - 0x174 ]
jmp sub_402640
sub_4532bd
lea ecx [ ebp - 0x188 ]
jmp sub_428120
sub_4532c8
lea ecx [ ebp - 0x354 ]
jmp sub_40eac0
sub_4532d3
lea ecx [ ebp - 0x2ec ]
jmp sub_40d640
sub_4532de
mov ecx [ ebp - 0x130 ]
jmp j_sub_404780#2
sub_4532e9
lea ecx [ ebp - 0x334 ]
jmp sub_402610
sub_4532f4
mov ecx [ ebp - 0x130 ]
jmp j_sub_404780#2
sub_4532ff
lea ecx [ ebp - 0xa8 ]
jmp j_sub_40f940
sub_45330a
lea ecx [ ebp - 0x188 ]
jmp sub_4284f0
sub_453315
lea ecx [ ebp - 0x18c ]
jmp sub_4284f0
sub_453320
mov eax [ ebp - 0x130 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45332e
lea ecx [ ebp - 0x354 ]
jmp sub_40eac0
sub_453339
lea ecx [ ebp - 0x2ec ]
jmp sub_40d640
sub_453344
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_45334f
lea ecx [ ebp - 0x334 ]
jmp sub_402610
sub_45335a
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_453365
lea ecx [ ebp - 0x148 ]
jmp sub_4286c0
sub_453370
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_45337b
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_453386
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_453391
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_45339c
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_4533a7
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_4533b2
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_4533bd
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_4533c8
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_4533d3
lea ecx [ ebp - 0x3cc ]
jmp sub_41d7e0
sub_4533de
lea ecx [ ebp - 0x370 ]
jmp sub_402670
sub_4533e9
lea ecx [ ebp - 0x36c ]
jmp sub_402670
sub_4533f4
lea ecx [ ebp - 0x3cc ]
jmp j_sub_404780#7
sub_4533ff
lea ecx [ ebp - 0x3b8 ]
jmp sub_4025e0
sub_45340a
lea ecx [ ebp - 0x148 ]
jmp sub_4286c0
sub_453415
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_453420
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_45342b
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_453436
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_453441
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_45344c
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_453457
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_453462
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_45346d
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_453478
lea ecx [ ebp - 0x3cc ]
jmp sub_41d7e0
sub_453483
lea ecx [ ebp - 0x370 ]
jmp sub_402670
sub_45348e
lea ecx [ ebp - 0x36c ]
jmp sub_402670
sub_453499
lea ecx [ ebp - 0x3cc ]
jmp j_sub_404780#7
sub_4534a4
lea ecx [ ebp - 0x3b8 ]
jmp sub_4025e0
sub_4534af
lea ecx [ ebp - 0x148 ]
jmp sub_4286c0
sub_4534ba
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_4534c5
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_4534d0
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_4534db
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_4534e6
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_4534f1
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_4534fc
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_453507
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_453512
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_45351d
lea ecx [ ebp - 0x3cc ]
jmp sub_41d7e0
sub_453528
lea ecx [ ebp - 0x370 ]
jmp sub_402670
sub_453533
lea ecx [ ebp - 0x36c ]
jmp sub_402670
sub_45353e
lea ecx [ ebp - 0x3cc ]
jmp j_sub_404780#7
sub_453549
lea ecx [ ebp - 0x3b8 ]
jmp sub_4025e0
sub_453554
lea ecx [ ebp - 0x148 ]
jmp sub_4286c0
sub_45355f
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_45356a
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_453575
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_453580
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_45358b
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_453596
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_4535a1
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_4535ac
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_4535b7
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_4535c2
lea ecx [ ebp - 0x3cc ]
jmp sub_41d7e0
sub_4535cd
lea ecx [ ebp - 0x370 ]
jmp sub_402670
sub_4535d8
lea ecx [ ebp - 0x36c ]
jmp sub_402670
sub_4535e3
lea ecx [ ebp - 0x3cc ]
jmp j_sub_404780#7
sub_4535ee
lea ecx [ ebp - 0x3b8 ]
jmp sub_4025e0
sub_4535f9
lea ecx [ ebp - 0xa8 ]
jmp sub_40eac0
sub_453604
lea ecx [ ebp - 0x40 ]
jmp sub_40d640
sub_45360c
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_453617
lea ecx [ ebp - 0x88 ]
jmp sub_402610
sub_453622
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_45362d
lea ecx [ ebp - 0x148 ]
jmp sub_4286c0
sub_453638
mov ecx [ ebp - 0x128 ]
jmp j_sub_404780#2
sub_453643
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_45364e
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_453659
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_453664
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_45366f
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_45367a
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_453685
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_453690
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_45369b
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_4536a6
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_4536b1
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_4536bc
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_4536c7
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_4536d2
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_4536dd
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_4536e8
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_4536f3
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_4536fe
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_453709
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_453714
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_45371f
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_45372a
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_453735
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_453740
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_45374b
lea ecx [ ebp - 0x1b8 ]
jmp j_sub_432050
sub_453756
lea ecx [ ebp - 0x1ac ]
jmp sub_426770
sub_453761
lea ecx [ ebp - 0x194 ]
jmp sub_428b20
sub_45376c
lea ecx [ ebp - 0x2bc ]
jmp sub_407a50
sub_453777
lea ecx [ ebp - 0x2b8 ]
jmp j_sub_404780
sub_453782
lea ecx [ ebp - 0x170 ]
jmp j_sub_404780#2
sub_45378d
lea ecx [ ebp - 0x264 ]
jmp j_sub_404780#7
sub_453798
lea ecx [ ebp - 0x250 ]
jmp sub_4025e0
sub_4537a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3d0 ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4537d0
lea ecx [ ebp - 0x14 ]
jmp sub_4284f0
sub_4537d8
lea ecx [ ebp - 0x10 ]
jmp sub_4284f0
sub_4537e0
lea ecx [ ebp - 0x5c ]
jmp sub_4284f0
sub_4537e8
lea ecx [ ebp - 0x5c ]
jmp sub_4296d0
sub_4537f0
lea ecx [ ebp + 0x18 ]
jmp sub_402630
sub_4537f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_453820
lea ecx [ ebp - 0x10 ]
jmp sub_428120
sub_453828
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_453850
lea ecx [ ebp - 0x10 ]
jmp sub_428120
sub_453858
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_453880
lea ecx [ ebp - 0x10 ]
jmp sub_4284f0
sub_453888
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4538b0
mov eax [ ebp - 0x10 ]
push eax
call sub_43c44d
pop ecx
retn
sub_4538bb
lea ecx [ ebp - 0x10 ]
jmp sub_402650
sub_4538c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_4538e0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_40c660
sub_4538eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_453910
lea ecx [ ebp - 0x10c ]
jmp sub_402640
sub_45391b
lea ecx [ ebp - 0x128 ]
jmp sub_402630
sub_453926
lea ecx [ ebp - 0x114 ]
jmp sub_433a00
sub_453931
mov eax [ ebp - 0x110 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45393f
mov eax [ ebp - 0x110 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45394d
lea ecx [ ebp - 0x108 ]
jmp j_sub_4110c0
sub_453958
lea ecx [ ebp - 0xf8 ]
jmp j_sub_4110c0
sub_453963
lea ecx [ ebp - 0xe8 ]
jmp j_sub_4110c0
sub_45396e
lea ecx [ ebp - 0xd8 ]
jmp j_sub_4110c0
sub_453979
push j_sub_4110c0
push 0x6
push 0x10
lea eax [ ebp - 0x108 ]
push eax
call sub_43d898
retn
sub_45398f
mov eax [ ebp - 0x110 ]
push eax
call sub_43c44d
pop ecx
retn
sub_45399d
push j_sub_4110c0
push 0x3
push 0x10
lea eax [ ebp - 0x40 ]
push eax
call sub_43d898
retn
sub_4539b0
push j_sub_4110c0
push 0x3
push 0x10
lea eax [ ebp - 0xa8 ]
push eax
call sub_43d898
retn
sub_4539c6
lea ecx [ ebp - 0x12c ]
jmp sub_41f770
sub_4539d1
push j_sub_4110c0
push 0x4
push 0x10
lea eax [ ebp - 0x50 ]
push eax
call sub_43d898
retn
sub_4539e4
lea ecx [ ebp - 0x110 ]
jmp sub_41f770
sub_4539ef
lea ecx [ ebp - 0x110 ]
jmp sub_402650
sub_4539fa
lea ecx [ ebp - 0x110 ]
jmp sub_402650
sub_453a05
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14c ]
xor ecx eax
call sub_43bd0f
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_453a2d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
j_sub_40142d
jmp sub_40142d
sub_453a4d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43bd0f
mov eax r--data
jmp sub_43ce1c
sub_453a70
call sub_4013f3
push j_sub_40137a
call sub_43c436
pop ecx
retn
sub_453a90
push rwxdata
call sub_410c70
pop ecx
retn
sub_453aa0
push rwxdata
call sub_410c70
pop ecx
retn
sub_453ab0
mov ecx rwxdata
jmp sub_410c00
sub_453ac0
mov ecx rwxdata
jmp sub_4127a0
j_sub_427b20
jmp sub_427b20
sub_453ae0
mov eax 0x1
sub [ rwxdata ] eax
sub [ rwxdata ] eax
sub [ rwxdata ] eax
sub [ rwxdata ] eax
sub [ rwxdata ] eax
sub [ rwxdata ] eax
retn
sub_453b10
push rwxdata
call sub_431f20
push sub_453b40
call sub_43c436
add esp 0x8
retn
j_sub_40137a
jmp sub_40137a
sub_453b40
push rwxdata
call [ DeleteCriticalSection@IAT ]
retn
sub_453b4c
mov [ rwxdata ] r--data
mov ecx rwxdata
jmp sub_43c176
