sub_4010d0
mov dh 0x49
std
into
salc
add esp [ ebx ]
xchg esi eax
inc esp
stosd [ edi ]
test eax 0x2c10dd2b
cmc
add [ edx + 0x45 ] ch
cwde
dec ebx
aas
or [ edi ] cl
xor ebp [ eax ]
adc al 0xe3
add bh ch
pop eax
clc
loop r-xdata
popfd
mov eax 0xe21c9139
add [ eax - 0x7348710f ] eax
add al 0x10
add ch bh
loopne 0x400f8f
push ss
pop esp
ja r-xdata
js r-xdata
int1
adc ebp [ ebx - 0x68 ]
bound edx [ ecx - 0x67 ]
cdq
rcr dl 0x19
push es
mov es [ edx ]
sub [ ecx + 0x4e ] 0x43
cmc
lodsd [ esi ]
mov al 0x82
push edx
add ebx 0xffffff94
lodsb [ esi ]
add eax 0x99fb01b4
xor cl 0x8e
mov bh 0x8c
cmc
dec eax
int 0x2b
adc al 0x7c
das
aaa
adc [ esi + edi * 2 - 0x223cbf33 ] ch
stc
push 0x56
add [ ecx ] edi
call 0xffffffffe4868187
pop ds
aas
cmp ebx [ esp + edx - 0x345907c6 ]
leave
mov esi 0x16b3eb53
aas
rcl [ edx + 0x72 ] 0x1
rol [ ecx ] 0x17
cmpsb [ esi ] [ edi ]
mov ecx 0xbe790f95
push edi
daa
shr [ esi ] 0x75
mov ah 0x74
pop ss
jge r-xdata
push eax
push 0xffffffc5
arpl ax ax
add eax 0x2582dc27
fcomi st5
std
pop ebx
jg r-xdata
mov bh 0x8
adc [ ecx ] ebx
cmp esp ebx
shl [ ecx ] 0x1
cmp ecx [ ecx + ebx * 4 + 0x8 ]
sbb edi [ edi ]
pop es
and dl [ edx + eax - 0x22 ]
test edx esi
arpl [ esi ] di
sbb dl [ edi - 0x6fa8e2bf ]
dec ebp
hlt
add ebx edi
cdq
push eax
loop r-xdata
jbe r-xdata
xor [ edi ] 0xce
inc edi
pushfd
fsubr [ edi + 0x7d ]
inc edi
cmp [ ecx - 0x17 ] dl
adc ebx edi
xor dh [ edx - 0x21 ]
mov bl [ edx ]
sub [ esi ] eax
je r-xdata
push fs
aad 0x6b
enter 0xa0a4 0xc3
mov ebx 0xb6aeb567
dec ecx
inc eax
jmp 0x143b86e7
adc eax [ 0xffffffffc93d279e ]
out 0xd0 eax
test [ esi + 0x6ecf9edf ] bh
jge r-xdata
mov esi 0x6ecf9edf
inc edx
sub al 0x57
jo r-xdata
cwde
jno r-xdata
0x6e775c16 0xc027
r-xdata
or edi esp
mov ebp 0xc6f48c04
cmpsd [ esi ] [ edi ]
scasb [ edi ]
xor al 0x56
leave
adc [ edi - 0x3f ] edi
dec [ ebp - 0x7e ]
sti
sti
xchg ecx eax
rcr [ ebx + 0x4b ] 0x8e
aas
mov al [ 0x32cd9044 ]
cmp ch dh
stosb [ di ]
[ edi ] [ esi ]
jmp r-xdata
je r-xdata
jo r-xdata
fcom st3
add [ eax - 0x62 ] 0xfffffffd
sub_401660
outsb
out 0x49 al
stc
jo r-xdata
and [ esi ] ebx
push 0xc1975c01
pop ds
adc esi [ eax + 0x7c ]
fisttp [ esi + 0x23 ]
jpo r-xdata
or [ cs : edi + 0x7b08a40c ] ebx
jl r-xdata
mov fs [ ebx + 0x3c ]
cmpsb [ esi ] [ edi ]
inc esp
clc
xchg al ch
xor ah [ edi + 0x69 ]
hlt
mov [ 0xfffffffffddaab7b ] eax
dec ebx
in al 0x3f
pushfd
pop edi
adc dl al
pop ebp
mov bl 0x90
insd
cmp al 0xe3
pushad
aaa
or [ ebp + 0x1c4e152f ] cl
cmpsb [ esi ] [ edi ]
mov eax [ 0xffffffff8baf1aaa ]
push [ ebp - 0x2e ]
push ebx
mov ah 0x85
pop ecx
0x3ffc
sub_402662
push ebp
mov ebp esp
sub esp 0x0
mov eax sub_40269d
mov ecx 0x4
xor edx edx
div ecx
mov eax [ ebp + 0x8 ]
sub eax edx
mov ecx 0x4
xor edx edx
div ecx
xor ecx ecx
mov eax [ ebp + 0x10 ]
cmp edx 0x0
je r-xdata
xor eax [ ebp + 0xc ]
pop ebp
retn 0x8
ror eax 0x8
inc ecx
cmp ecx edx
jne r-xdata
sub_4026f0
push ebp
jbe r-xdata
inc ebp
cld
sub esp 0xfffffff1
mov [ ebp - 0xc ] ecx
jbe r-xdata
jbe r-xdata
add [ esi + 0x45 ] dh
cld
cmp [ 0xffffffffe8ff5008 ] 0x54
sub al [ ecx - 0x3 ]
mov ecx [ ebp - 0x4 ]
adc eax 0xfd001642
mov eax [ ebp - 0x4 ]
pop ebp
retn 0xf9
push ebp
jbe r-xdata
hlt
call [ r--data ]
jbe r-xdata
sub esp 0xfffffff5
mov [ ebp - 0x8 ] ecx
jbe r-xdata
add [ esi - 0x3c ] bh
pop ebp
retn
cmp [ edi ] 0x1
mov eax [ ebp + 0x1 ]
mov [ eax + 0xfc0c ] edx
mov esi [ eax - 0xa3e7c08 ]
push ecx
call [ r--data ]
into
shr cl 0x98
clc
cmp [ 0xffffffffe8ff5008 ] 0x44
sub al [ ecx - 0x3 ]
mov ecx [ ebp - 0x8 ]
jbe r-xdata
cmp [ ebp - 0x4 ] 0xfffffffd
je r-xdata
add [ esi + 0x55 ] dh
cld
cld
add [ eax - 0x108aff04 ] 0xffffff8b
push ebp
clc
jle r-xdata
std
add [ eax ] al
push 0x1e9
adc eax 0xfd00476b
add esp 0x4
je r-xdata
cwde
add al 0x89
test al 0xfc
jmp r-xdata
mov edi [ eax - 0xa3f7c0c ]
push eax
mov ebp [ eax - 0x127d7404 ]
add [ eax ] eax
add [ ebp + eax * 2 - 0x8 ] dh
mov esi [ eax - 0x2917ae04 ]
inc edi
add [ eax ] al
jle r-xdata
cld
add [ eax ] al
or [ edx + 0x2 ] dl
adc eax 0xbc2a48
or eax 0x2
jmp r-xdata
jle r-xdata
add al 0x8b
test al 0xf8
mov [ ebp + 0x1 ] edx
jmp r-xdata
mov ebx [ eax ]
pop ebp
retn 0xfd0c
push ebp
int1
push edx
mov eax [ ebp + 0x1 ]
add eax 0x4
lodsd [ esi ]
call [ rw-data ]
jmp r-xdata
cld
add [ ecx + 0x1558b0e ] cl
mov eax [ edx ]
cmp edi [ eax + 0x16027508 ]
add ch bl
dec esp
xlat
inc ecx
add bl ch
cli
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx + 0x4 ]
cld
jge r-xdata
loopne r-xdata
add [ ecx + 0x14d8b29 ] cl
mov edx [ ecx + 0xfc0c ]
sub_402763
cld
mov esi [ ebp + 0x10 ]
add [ eax ] eax
std
mov [ ebp - 0x4 ] ecx
jle r-xdata
push ebp
int1
push edx
mov eax [ ebp + 0x1 ]
add eax 0x4
lodsd [ esi ]
call [ rw-data ]
jmp r-xdata
cld
add [ ecx + 0x1558b0e ] cl
mov eax [ edx ]
cmp edi [ eax + 0x16027508 ]
add ch bl
dec esp
xlat
inc ecx
add bl ch
cli
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx + 0x4 ]
cld
jge r-xdata
loopne r-xdata
add [ ecx + 0x14d8b29 ] cl
mov edx [ ecx + 0xfc0c ]
add [ esi + 0x55 ] dh
cld
cld
add [ eax - 0x108aff04 ] 0xffffff8b
push ebp
clc
jle r-xdata
cmp [ edi ] 0x1
mov eax [ ebp + 0x1 ]
mov [ eax + 0xfc0c ] edx
mov esi [ eax - 0xa3e7c08 ]
push ecx
call [ r--data ]
into
shr cl 0x98
std
add [ eax ] al
push 0x1e9
adc eax 0xfd00476b
add esp 0x4
je r-xdata
cld
add [ eax ] al
or [ edx + 0x2 ] dl
adc eax 0xbc2a48
or eax 0x2
jmp r-xdata
mov ebx [ eax ]
pop ebp
retn 0xfd0c
sub_4027d4
enter 0xeb02 0x70
mov edi [ eax - 0xab27404 ]
mov [ eax ] ecx
add [ eax - 0x1a8bfff4 ] 0x68
add al 0x1
std
add [ ebx - 0x74ad0eab ] cl
inc ebp
add [ ebx - 0x52fb40 ] eax
adc eax rw-data
jmp r-xdata
dec esp
xlat
inc ecx
add bl ch
cli
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx + 0x4 ]
add [ esi + 0x55 ] dh
cld
sub_40280b
add [ eax ] eax
std
add [ eax ] eax
add ch bh
mov eax [ ebp - 0x4 ]
jbe r-xdata
inc ecx
std
mov [ ebp - 0x4 ] 0xfd
jbe r-xdata
adc [ ecx + 0x10875 ] cl
std
mov edx [ ebp - 0x4 ]
jbe r-xdata
mov esi [ ebp + 0xc ]
add [ eax ] eax
std
sub ecx 0x1
hlt
cld
std
add [ eax ] al
add [ esi + 0x4d ] dh
clc
mov esi [ ebp - 0x127576fc ]
add [ eax ] eax
add [ esi + 0x55 ] dh
clc
mov edi [ eax - 0x6bd7604 ]
mov ecx [ ebp - 0x8 ]
jle r-xdata
inc ebp
std
add [ ebx + 0x1eebf9c4 ] al
clc
mov [ edi + 0xc ] esi
add [ eax ] eax
std
mov eax [ ebp + 0x10 ]
jbe r-xdata
jmp r-xdata
or [ ecx + 0x2 ] dl
adc eax 0xbc2a48
mov eax 0xfd01
mov ebx [ eax ]
pop ebp
retn 0xfd0c
mov ecx [ eax - 0x7 ]
or [ eax + 0x2 ] dl
adc eax 0xbc2a48
clc
mov ebp [ eax + ecx + 0x1 ]
add ch bh
mov [ eax ] edx
push 0x1f9
jbe r-xdata
dec esp
xlat
inc ecx
add bl ch
cli
mov ecx [ ebp - 0x4 ]
cmp eax [ ecx + 0x4 ]
add [ esi + 0x55 ] dh
cld
inc ebp
adc [ ecx ] al
std
add [ ecx + 0x4d8bf942 ] cl
clc
lodsb [ esi ]
call 0x13d6e48
add esp 0xfffffff9
jmp r-xdata
mov eax 0xfd01
jmp r-xdata
push eax
add dl [ 0xbc2a48 ]
mov [ edi + 0x10 ] esi
add [ eax ] eax
std
mov edx [ ebp - 0x8 ]
scasd [ edi ]
call 0x13d6e48
add esp 0xfffffff9
inc ebp
add eax 0xfc10888b
add [ eax ] al
clc
cmp [ 0xffffffffb08b5004 ] 0xc
push ecx
mov ecx [ ebp - 0x8 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
jle r-xdata
mov esi [ eax - 0x1700aef4 ]
dec esp
sub al [ ecx - 0x3 ]
mov edx [ ebp - 0x8 ]
jle r-xdata
cld
jmp r-xdata
push ebp
clc
jbe r-xdata
jle r-xdata
or al 0x1
std
add [ eax ] al
jne r-xdata
jbe r-xdata
cmc
jne r-xdata
cmp eax [ ebp - 0xb ]
mov ecx [ eax + 0x1ed ]
je r-xdata
adc eax 0x83f4a88b
retn 0x52f5
cmp [ ebp - 0x4 ] 0xfffffffd
jne r-xdata
adc [ esi + 0x4d ] dh
clc
add [ eax - 0x168bff08 ] 0xffffff8b
mov ebp [ eax + 0x5458bfc ]
mov ecx [ eax + 0xfc10 ]
mov edx [ ebp - 0xc ]
jbe r-xdata
mov edi [ eax - 0x6b7740c ]
sub_40285c
cmp [ 0xffffffffe8ff5008 ] 0x44
sub al [ ecx - 0x3 ]
mov [ ebp - 0x4 ] 0xfd
jbe r-xdata
mov esi [ ebp + 0xc ]
add [ eax ] eax
std
sub ecx 0x1
hlt
inc ebp
std
add [ ebx + 0x1eebf9c4 ] al
clc
mov [ edi + 0xc ] esi
add [ eax ] eax
std
mov eax [ ebp + 0x10 ]
jbe r-xdata
mov ecx [ eax - 0x7 ]
or [ eax + 0x2 ] dl
adc eax 0xbc2a48
clc
mov ebp [ eax + ecx + 0x1 ]
add ch bh
mov [ eax ] edx
push 0x1f9
jbe r-xdata
inc ebp
adc [ ecx ] al
std
add [ ecx + 0x4d8bf942 ] cl
clc
lodsb [ esi ]
call 0x13d6e48
add esp 0xfffffff9
jmp r-xdata
mov eax 0xfd01
jmp r-xdata
push eax
add dl [ 0xbc2a48 ]
mov [ edi + 0x10 ] esi
add [ eax ] eax
std
mov edx [ ebp - 0x8 ]
scasd [ edi ]
call 0x13d6e48
add esp 0xfffffff9
inc ebp
add eax 0xfc10888b
add [ eax ] al
clc
cmp [ 0xffffffffb08b5004 ] 0xc
push ecx
mov ecx [ ebp - 0x8 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
jle r-xdata
mov esi [ eax - 0x1700aef4 ]
dec esp
sub al [ ecx - 0x3 ]
mov edx [ ebp - 0x8 ]
jle r-xdata
cld
jmp r-xdata
push ebp
clc
jbe r-xdata
jle r-xdata
or al 0x1
std
add [ eax ] al
jne r-xdata
jbe r-xdata
cmc
jne r-xdata
cmp eax [ ebp - 0xb ]
mov ecx [ eax + 0x1ed ]
je r-xdata
adc eax 0x83f4a88b
retn 0x52f5
cmp [ ebp - 0x4 ] 0xfffffffd
jne r-xdata
adc [ esi + 0x4d ] dh
clc
add [ eax - 0x168bff08 ] 0xffffff8b
mov ebp [ eax + 0x5458bfc ]
mov ecx [ eax + 0xfc10 ]
mov edx [ ebp - 0xc ]
jbe r-xdata
mov edi [ eax - 0x6b7740c ]
sub_402970
push ebp
jbe r-xdata
dec eax
sub bh [ eax + eax - 0x1a893fcd ]
pop ebp
retn 0xf1
sub esp 0xfffffff5
mov [ ebp - 0x8 ] ecx
jle r-xdata
int3
or [ eax ] al
mov [ ebx + esi ] al
rcl [ esi ] 0x6c
mov eax [ ebp + 0x5 ]
add eax 0x8
lodsd [ esi ]
call [ rw-data ]
mov esi [ eax - 0x6ae7408 ]
mov [ ebp - 0x4 ] edx
push ss
or al 0x8b
inc ebp
add [ ebx + 0xfc1088 ] ecx
add [ ecx + 0x7d83fcb0 ] cl
add [ eax ] eax
je r-xdata
cmp [ ebp - 0x4 ] 0xfffffffd
jbe r-xdata
mov edi [ eax - 0xa3f7c08 ]
push eax
call [ r--data ]
into
ror [ ebx + 0x4c2a0e5 ] 0x0
xor esp ecx
int3
mov esi [ eax - 0xa3e7c08 ]
push ecx
in al dx
int1
or [ edx + 0x76 ] dl
inc ebp
cld
cmp [ 0xffffffffe8ff5004 ] 0x40
sub al [ ecx - 0x3 ]
test eax eax
jne r-xdata
adc eax r--data
jbe r-xdata
or [ eax ] al
mov [ ebx + eax * 4 ] ecx
jge r-xdata
jmp r-xdata
add ch bh
mov eax [ ebp + 0x8 ]
jbe r-xdata
adc [ edx + 0x76 ] dl
inc ebp
clc
cmp [ 0xffffffffb08b5004 ] 0xc
push ecx
mov [ ebp - 0xc ] ecx
jle r-xdata
sub esp 0xfffffff1
add [ esi + eax + 0x7e ] dh
jge r-xdata
movzx esi [ 0xffffffffe775c985 ]
mov edx [ ebp + 0xc ]
jl r-xdata
cmp al 0x8b
test al 0x8
lea eax [ edi + esi * 8 + 0x18 ]
mov [ ebp + 0x11 ] eax
mov ecx [ ebp - 0x14 ]
jbe r-xdata
or al 0xac
mov edx [ ebp + 0x8 ]
scasd [ edi ]
call [ rw-data ]
mov [ eax + 0x17d83fc ] edi
add [ ebp + eax + 0x76 ] dh
inc ebp
cld
jmp r-xdata
add [ eax + 0x14c03307 ] cl
fwait
add [ eax ] al
std
mov eax [ ebp + 0x10 ]
lodsd [ esi ]
mov ecx [ ebp + 0xc ]
lodsb [ esi ]
cmc
mov [ eax - 0x27c1610 ] edi
add [ eax ] al
mov ebp [ eax - 0x1abd7408 ]
mov [ ebp - 0x24 ] eax
jbe r-xdata
add edx [ ecx + 0x60 ]
je r-xdata
pop esp
mov [ eax + 0x157d83e8 ] ebp
adc [ ebp + 0x7 ] bh
into
shr cl 0xef
std
add [ eax ] al
mov edi [ eax - 0x66877c14 ]
add [ ebp + 0x7 ] dh
into
shr cl 0xdf
std
add [ eax ] al
mov esi [ eax - 0xaaa7414 ]
je r-xdata
cld
std
jmp r-xdata
clc
mov edi [ eax - 0x12173ef4 ]
and eax 0xfdffff
mov ebp [ eax - 0x48f02c ]
clc
mov ebp [ eax - 0x22aefcf8 ]
mov [ ebp - 0x20 ] edx
jbe r-xdata
mov [ ebp - 0x2c ] ecx
cmp al [ ebp - 0x28 ]
add ch bh
add [ eax ] al
test al 0xd4
add edx 0xffffffff
mov [ ebp - 0x2c ] edx
push ss
mov bl 0x8b
inc ebp
and eax 0x88dc453b
add al 0x33
rcl [ esi ] 0x24
mov ecx [ ebp + 0x5 ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
push ss
adc al 0x8b
dec ebp
sbb eax 0x7404c183
dec ebp
loopne r-xdata
mov bh 0xff
clc
mov esi [ eax - 0x26b7fcf8 ]
sub_4029d3
call [ r--data ]
jbe r-xdata
cmp bh dl
inc ecx
add [ ecx + 0x7d83fcb8 ] cl
add [ eax ] eax
je r-xdata
cld
mov edi edi
jmp r-xdata
mov eax [ ebp - 0xc ]
jle r-xdata
jbe r-xdata
mov esp ebp
mov al [ 0x310004c2 ]
int3
dec ebp
hlt
or [ eax + 0x2 ] dl
adc eax 0xbc2a44
mov ecx [ ebp + 0x9 ]
mov edx [ ecx + 0x4 ]
je r-xdata
shl ebp 0x51
call [ r--data ]
jbe r-xdata
cld
jmp r-xdata
jmp r-xdata
clc
jmp r-xdata
add ch bh
mov eax [ ebp + 0x8 ]
jbe r-xdata
adc [ edx + 0x76 ] dl
inc ebp
clc
cmp [ 0xffffffffb08b5004 ] 0xc
push ecx
cld
std
je r-xdata
inc ecx
std
mov edx [ ebp + 0xc ]
scasd [ edi ]
call [ rw-data ]
inc esp
sub bh [ eax + eax - 0x74f6b275 ]
push ecx
add al 0x74
push ebp
movzx esi [ 0xffffffffe775c985 ]
mov edx [ ebp + 0xc ]
jl r-xdata
cmp al 0x8b
test al 0x8
lea eax [ edi + esi * 8 + 0x18 ]
mov [ ebp + 0x11 ] eax
mov ecx [ ebp - 0x14 ]
jbe r-xdata
mov edi [ eax - 0xa3f7c08 ]
push eax
call [ r--data ]
into
ror [ ebx + 0x4c2a0e5 ] 0x0
xor esp ecx
int3
mov esi [ eax - 0xa3e7c08 ]
push ecx
cmc
mov [ eax - 0x27c1610 ] edi
add [ eax ] al
mov ebp [ eax - 0x1abd7408 ]
mov [ ebp - 0x24 ] eax
jbe r-xdata
add edx [ ecx + 0x60 ]
je r-xdata
pop esp
mov [ eax + 0x157d83e8 ] ebp
adc [ ebp + 0x7 ] bh
into
shr cl 0xef
std
add [ eax ] al
mov edi [ eax - 0x66877c14 ]
add [ ebp + 0x7 ] dh
into
shr cl 0xdf
std
add [ eax ] al
mov esi [ eax - 0xaaa7414 ]
jmp r-xdata
clc
mov edi [ eax - 0x12173ef4 ]
and eax 0xfdffff
mov ebp [ eax - 0x48f02c ]
clc
mov ebp [ eax - 0x22aefcf8 ]
mov [ ebp - 0x20 ] edx
jbe r-xdata
mov [ ebp - 0x2c ] ecx
cmp al [ ebp - 0x28 ]
add ch bh
add [ eax ] al
test al 0xd4
add edx 0xffffffff
mov [ ebp - 0x2c ] edx
push ss
mov bl 0x8b
inc ebp
and eax 0x88dc453b
add al 0x33
rcl [ esi ] 0x24
mov ecx [ ebp + 0x5 ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
push ss
adc al 0x8b
dec ebp
sbb eax 0x7404c183
dec ebp
loopne r-xdata
mov bh 0xff
clc
mov esi [ eax - 0x26b7fcf8 ]
sub_402ad0
push ebp
jbe r-xdata
pop ebp
retn 0xf1
sub esp 0xffffffc9
mov [ ebp - 0x34 ] ecx
jle r-xdata
inc edx
in eax 0x89
inc ebp
fdiv [ esi + 0x4d ]
or [ eax ] al
mov [ edi ] al
xor eax eax
adc al 0x15
add [ eax ] eax
std
mov eax [ ebp + 0x8 ]
jbe r-xdata
mov bh 0xff
clc
mov esi [ eax - 0x26b7fcf8 ]
movzx esi [ 0xffffffffe775c985 ]
mov edx [ ebp + 0xc ]
jl r-xdata
cmp al 0x8b
test al 0x8
lea eax [ edi + esi * 8 + 0x18 ]
mov [ ebp + 0x11 ] eax
mov ecx [ ebp - 0x14 ]
jbe r-xdata
mov [ eax - 0x27c1610 ] edi
add [ eax ] al
mov ebp [ eax - 0x1abd7408 ]
mov [ ebp - 0x24 ] eax
jbe r-xdata
test al 0xd4
add edx 0xffffffff
mov [ ebp - 0x2c ] edx
push ss
mov bl 0x8b
inc ebp
and eax 0x88dc453b
add al 0x33
rcl [ esi ] 0x24
mov ecx [ ebp + 0x5 ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x2c ] ecx
cmp al [ ebp - 0x28 ]
add ch bh
add [ eax ] al
cmc
add edx [ ecx + 0x60 ]
je r-xdata
pop esp
mov [ eax + 0x157d83e8 ] ebp
adc [ ebp + 0x7 ] bh
into
shr cl 0xef
std
add [ eax ] al
mov edi [ eax - 0x66877c14 ]
add [ ebp + 0x7 ] dh
into
shr cl 0xdf
std
add [ eax ] al
mov esi [ eax - 0xaaa7414 ]
mov [ ebp - 0x10 ] eax
push ss
adc al 0x8b
dec ebp
sbb eax 0x7404c183
dec ebp
loopne r-xdata
mov ebp [ eax - 0x48f02c ]
clc
mov ebp [ eax - 0x22aefcf8 ]
mov [ ebp - 0x20 ] edx
jbe r-xdata
jmp r-xdata
clc
mov edi [ eax - 0x12173ef4 ]
and eax 0xfdffff
sub_402b7e
mov edx [ ebp - 0x28 ]
jle r-xdata
aas
mov ecx [ ebp - 0x8 ]
salc
inc ecx
adc [ ecx - 0x7c160f48 ] cl
std
add [ ecx + 0x458bd8a8 ] ecx
and eax 0x80dc453b
cmp al 0x8b
dec ebp
sbb eax 0xfe08558b
adc [ ecx + 0x458b2d55 ] ecx
or al 0xad
mov ecx [ ebp - 0x30 ]
lodsb [ esi ]
call [ rw-data ]
test [ 0xffffffffa88b0b75 ] edi
aam 0xf
mov [ ebp - 0x10 ] eax
push ss
adc al 0x8b
dec ebp
sbb eax 0x7404c183
dec ebp
loopne r-xdata
mov ebp [ eax - 0x48f02c ]
clc
mov ebp [ eax - 0x22aefcf8 ]
mov [ ebp - 0x20 ] edx
jbe r-xdata
add [ eax ] al
mov ebp [ eax - 0x1abd7408 ]
mov [ ebp - 0x24 ] eax
jbe r-xdata
mov [ eax - 0x27c1610 ] edi
test al 0xd4
add edx 0xffffffff
mov [ ebp - 0x2c ] edx
push ss
mov bl 0x8b
inc ebp
and eax 0x88dc453b
add al 0x33
rcl [ esi ] 0x24
mov ecx [ ebp + 0x5 ]
mov edx [ ebp + 0x8 ]
mov bh 0xff
clc
mov esi [ eax - 0x26b7fcf8 ]
mov [ ebp - 0x2c ] ecx
cmp al [ ebp - 0x28 ]
add ch bh
add [ eax ] al
jmp r-xdata
sub_402bde
push ecx
sbb al 0x89
test al 0xf4
mov eax [ ebp + 0xd ]
mov ecx [ ebp - 0xc ]
jbe r-xdata
or [ eax ] al
xor esp ecx
int3
or [ ecx + 0x458be4a8 ] 0xe44503f5
je r-xdata
mov [ eax + 0x157d83e8 ] ebp
adc [ ebp + 0x7 ] bh
into
shr cl 0xf8
std
add [ eax ] al
mov edi [ eax - 0x66877c14 ]
add [ ebp + 0x7 ] dh
into
shr cl 0xe8
std
add [ eax ] al
mov esi [ eax - 0xaaa7414 ]
cld
mov edi [ eax - 0x5f1a7404 ]
retn 0x8
jmp r-xdata
cld
mov edi [ eax - 0x12173ef4 ]
and eax 0xfdffff
movzx esi [ 0xffffffffe775c985 ]
mov edx [ ebp + 0xc ]
jl r-xdata
mov [ ebp - 0x28 ] ecx
cmp al [ ebp - 0x24 ]
add ch bh
add [ eax ] al
add edx [ ecx + 0x60 ]
je r-xdata
cmc
sub_402c81
std
add [ edi ] cl
mov bh 0x3f
mov ecx [ ebp - 0x4 ]
salc
inc ecx
adc [ ecx - 0x7c160f48 ] cl
std
add [ eax ] al
mov ebp [ eax - 0x1abd7404 ]
mov ebp [ eax - 0x48f028 ]
cld
mov ebp [ eax - 0x22aefcf8 ]
mov [ ebp - 0x1c ] edx
jbe r-xdata
mov [ ebp - 0x20 ] eax
jbe r-xdata
add al 0x33
rcl [ esi ] 0x2d
mov ecx [ ebp + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
push ss
adc al 0x8b
dec ebp
sbb [ ebx + 0x4d7404c1 ] eax
in al 0x8b
test al 0xd8
add edx 0xffffffff
mov [ ebp - 0x28 ] edx
push ss
mov bl 0x8b
inc ebp
and [ ebx ] edi
inc ebp
loopne r-xdata
mov bh 0xff
cld
mov esi [ eax - 0x26b7fcf8 ]
mov [ ebp - 0x28 ] ecx
cmp al [ ebp - 0x24 ]
add ch bh
add [ eax ] al
jmp r-xdata
sub_402de4
inc [ edx ]
push edx
mov ecx [ ebp - 0x1e3 ]
adc eax 0xfd000bce
xor eax eax
jmp r-xdata
adc eax 0xfdfffffe
jne r-xdata
mov eax [ ebp - 0xf ]
push eax
mov ecx [ ebp - 0x1eb ]
lodsb [ esi ]
mov ecx [ ebp - 0xfc20 ]
call sub_4029d3
je r-xdata
xor edi [ 0xfffffffffd0085e9 ]
add [ ebx - 0x74af0ebb ] cl
lea edx [ 0xffffffffacfffffe ]
add [ eax + eax * 8 + 0x7b ] bl
inc esp
std
xor eax ebp
mov [ eax + 0x1d8d89fc ] edi
in al dx
inc [ edx ]
inc [ ebx - 0x1ee43 ]
sub_402e33
fscale
add bh bh
mov eax 0xfd01
jmp r-xdata
push [ ebx ]
ror [ ebx - 0x32cc0350 ] 0x15
movsd [ edi ] [ esi ]
inc ecx
add ch bh
mov esp ebp
pop ebp
aas
or [ eax ] al
push ebp
jbe r-xdata
sub esp 0xffffffe9
mov [ ebp - 0x14 ] ecx
jbe r-xdata
add [ eax + 0x945c709 ] cl
add [ eax ] al
add ch bh
jmp r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x7 ]
mov [ ebp - 0x10 ] eax
jbe r-xdata
mov edi [ eax - 0x5f1a740c ]
retn 0xc
or [ edi + edi * 8 + 0x4574fc55 ] ch
hlt
sub_4031f4
in al dx
leave
mov [ ebp - 0x34 ] ecx
jbe r-xdata
popad
cld
add [ eax ] al
mov edi [ eax - 0xab27408 ]
add ecx [ eax + 0xc ]
je r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x7 ]
mov [ ebp - 0xc ] eax
jbe r-xdata
inc ebp
sub eax 0x76f84d8b
push ecx
in al 0x8b
test al 0xf8
mov eax [ edx - 0x13 ]
mov [ ebp - 0x18 ] eax
cmp al [ ebp - 0x28 ]
add ch bh
add [ eax ] al
mov esi [ eax - 0x26ae7408 ]
and edx 0x8000fd00
mul [ edi ]
sbb edx edx
mul [ edi ]
mov [ ebp - 0x24 ] edx
jbe r-xdata
call 0x1187797
std
hlt
add [ ecx + 0x2d7d8315 ] cl
add [ edi + ecx + 0x7e ] dh
jge r-xdata
clc
mov esi [ ebp - 0x21e7edc ]
add [ eax ] al
inc eax
or bl cl
sbb ecx ecx
or bl cl
mov [ ebp + 0x1d ] ecx
mov edx [ ebp - 0x8 ]
jbe r-xdata
add [ ecx + 0x2545c709 ] cl
inc eax
add [ eax ] al
std
jmp r-xdata
and al 0x25
std
add [ eax ] al
and [ edx ] cl
fcomp [ ebx ]
ror [ edx ] 0xd8
mov [ ebp + 0x2d ] eax
mov ecx [ ebp - 0x8 ]
jbe r-xdata
add [ eax - 0x58bfff4 ] 0xffffffc7
inc ebp
fdiv st5
add [ eax ] al
add [ esi + 0x45 ] dh
clc
mov esi [ ebp - 0x21e7edc ]
add [ eax ] al
add al 0x89
or al 0x8b
push ebp
and eax 0xff00ca81
add [ eax ] al
mov [ eax + 0x257d83d8 ] ebp
add [ ebp + 0x4 ] dh
into
shr bl 0x29
jo r-xdata
movd [ ebp - 0x30 ] mm7
add [ ecx + 0x2545c709 ] cl
and [ eax ] al
add ch bh
jmp r-xdata
and al 0x81
pop ds
add [ eax ] al
add ch ch
neg edx
sbb ebp [ edi ]
neg edx
mov [ eax + 0x217d83d4 ] ebp
add [ ebx + ebx + 0x7e ] dh
jge r-xdata
in al dx
add ch bh
jmp r-xdata
in al dx
cmovpe edx [ ecx + 0x2 ]
mov [ eax - 0xaba740c ] ebp
mov ecx [ eax + 0x3c ]
jbe r-xdata
jbe r-xdata
mov esi [ eax - 0xeb7fcf4 ]
mov [ ebp - 0x20 ] ecx
jbe r-xdata
or [ ebp - 0x76e7f547 ] cl
mov eax 0x54d8bf8
mov edx [ ecx + 0x3c ]
je r-xdata
int3
call 0x7e34dc67
inc eax
jbe r-xdata
dec ebp
or eax 0x7c11b70f
cli
dec ebp
pop edx
std
add [ edi + eax - 0x32 ] dh
shr cl 0x77
inc [ eax ]
add [ ebx + 0x74000c80 ] al
in eax 0x8b
inc ebp
or al 0xad
call [ rw-data ]
cmp eax 0x1f9
add [ edi ] 0x5914c033
add eax [ eax ]
std
mov ecx [ ebp + 0x8 ]
jbe r-xdata
inc edx
jmp 0x771c79cf
cld
pop ebp
aas
or [ eax ] al
int3
add [ esi + 0x4d ] dh
in al dx
mov ebp [ esp + ebx - 0x74faaa77 ]
inc ebp
in al dx
jbe r-xdata
cmp al 0x8b
mov eax 0xed3c8108
push eax
inc ebp
add ch bh
je r-xdata
jbe r-xdata
inc esp
or bh cl
mov [ ebp - 0x14 ] eax
or al 0x8b
mov eax 0xc1488b08
mov edx [ ebp + 0x8 ]
jo r-xdata
push ecx
push 0xfffffffc
cmp [ ecx + 0x45c7fcb0 ] cl
or [ eax ] eax
add [ eax ] al
std
mov ecx [ ebp - 0xb ]
mov edx [ ecx + 0x3c ]
jbe r-xdata
xor edi [ 0xfffffffffd0340e9 ]
add [ ebx + 0x518bf54d ] cl
cmp al 0x76
inc ebp
in al 0x50
add dl [ 0xbc2a2c ]
mov ecx [ ebp + 0x5 ]
add ecx 0x28
je r-xdata
or bh al
std
add [ eax ] al
mov [ eax + 0x1545c7f0 ] edi
add [ eax ] al
push 0xfffffffd
push 0xffffffff
call 0xffffffff80c62748
add bh ch
add bh al
mov edx [ ebp + 0xc ]
scasd [ edi ]
mov ecx [ ebp - 0x34 ]
adc eax 0x2fff432
mov [ ebp - 0x18 ] eax
jle r-xdata
mov [ eax + 0x945c7fc ] esi
add [ eax ] al
add ch bh
or [ ebp - 0x76fbef4f ] cl
mov al 0xdc
mov edx [ ebp + 0x21 ]
movzx eax [ edx - 0x1 ]
mov [ ebp - 0x20 ] eax
jbe r-xdata
inc ebp
sub [ eax ] eax
add [ eax ] al
std
mov [ ebp - 0x28 ] 0xfd
jbe r-xdata
add dl dh
test [ eax - 0x38ff02fe ] eax
or [ ebx + 0x458b3cac ] cl
cmc
lea ecx [ eax + edx - 0x1b ]
mov [ ebp - 0x14 ] ecx
jbe r-xdata
mov edi [ eax - 0x4f74af04 ]
or [ ecx - 0x75 ] dl
test al 0xc
push edx
call sub_4070fb
jle r-xdata
clc
jmp r-xdata
adc eax r--data
je r-xdata
int3
add [ ebp + 0x790f0020 ] 0xffffffca
add [ eax ] al
std
cmp [ ebp + 0xc ] 0xfffffffd
je r-xdata
in al dx
cmovpe eax [ edx ]
cmp eax 0xfc0b
lea edi [ ecx + 0xa ]
clc
add ch bh
add [ ecx + 0x45c70545 ] cl
and dh [ esi + 0x4d ]
hlt
hlt
add [ eax - 0x558aff0c ] 0xffffff8b
push ebp
or al 0xaf
mov eax [ ebp - 0x4 ]
clc
add [ eax ] dl
add ch bh
push eax
push 0x0
xchg edi eax
inc eax
push 0x0
xchg edi eax
push 0x2
mov esi [ eax - 0x395aef4 ]
je r-xdata
or edi esp
add [ eax ] al
xor eax eax
jmp r-xdata
inc [ edx ]
call [ edx - 0x18 ]
sub bh [ 0xffffffffc47e0000 ]
call sub_40764b
jle r-xdata
mov edx [ ebp + 0x10 ]
jle r-xdata
les ecx [ edi + edx * 4 ]
inc eax
push 0xed00
mov ebp [ eax - 0x24 ]
adc [ ebx - 0x11788 ] cl
add dl [ eax - 0x18 ]
lodsb [ esi ]
mov [ eax ] 0x4398300
mov ecx [ ebp - 0x13 ]
and ecx 0xf900
je r-xdata
js r-xdata
not [ edx - 0x69 ]
add [ ebx - 0x1da7b ] cl
[ ebp + 0x3d48d8b ]
sub_403383
in al dx
push eax
jbe r-xdata
inc ebp
cmc
fcom [ ecx + 0x76 ]
push ebp
call 0xffffffffe485a9e2
push eax
mov esi [ eax - 0xeb7fcf4 ]
mov [ ebp - 0x20 ] ecx
jbe r-xdata
or [ ebp - 0x76e7f547 ] cl
mov eax 0x54d8bf8
mov edx [ ecx + 0x3c ]
je r-xdata
mov edi [ eax - 0x4f74af04 ]
or [ ecx - 0x75 ] dl
test al 0xc
push edx
call sub_4070fb
jle r-xdata
clc
jmp r-xdata
dec ebp
or eax 0x7c11b70f
cli
dec ebp
pop edx
std
add [ edi + eax - 0x32 ] dh
shr cl 0x77
inc [ eax ]
add [ ebx + 0x74000c80 ] al
in eax 0x8b
inc ebp
or al 0xad
call [ rw-data ]
cmp eax 0x1f9
add [ edi ] 0x5914c033
add eax [ eax ]
std
mov ecx [ ebp + 0x8 ]
jbe r-xdata
inc edx
jmp 0x771c79cf
cld
inc esp
or bh cl
mov [ ebp - 0x14 ] eax
jbe r-xdata
or al 0x8b
mov eax 0xc1488b08
mov edx [ ebp + 0x8 ]
jo r-xdata
lea edi [ ecx + 0xa ]
clc
add ch bh
add [ ecx + 0x45c70545 ] cl
add [ esi + 0x4d ] dh
in al dx
mov ebp [ esp + ebx - 0x74faaa77 ]
inc ebp
in al dx
jbe r-xdata
cmp al 0x8b
mov eax 0xed3c8108
push eax
inc ebp
add ch bh
je r-xdata
add ch bh
jmp r-xdata
mov ecx [ eax + 0x3c ]
jbe r-xdata
in al dx
cmovpe edx [ ecx + 0x2 ]
mov [ eax - 0xaba740c ] ebp
add dl [ 0xbc2a2c ]
mov ecx [ ebp + 0x5 ]
add ecx 0x28
je r-xdata
in al 0x50
or bh al
std
add [ eax ] al
mov [ eax + 0x1545c7f0 ] edi
add [ eax ] al
push ecx
push 0xfffffffc
cmp [ ecx + 0x45c7fcb0 ] cl
or [ eax ] eax
add [ eax ] al
std
mov ecx [ ebp - 0xb ]
mov edx [ ecx + 0x3c ]
jbe r-xdata
xor edi [ 0xfffffffffd0340e9 ]
add [ ebx + 0x518bf54d ] cl
cmp al 0x76
inc ebp
jbe r-xdata
push 0xfffffffd
push 0xffffffff
call 0xffffffff80c62748
add bh ch
add bh al
mov edx [ ebp + 0xc ]
scasd [ edi ]
mov ecx [ ebp - 0x34 ]
adc eax 0x2fff432
mov [ ebp - 0x18 ] eax
jle r-xdata
mov [ eax + 0x945c7fc ] esi
add [ eax ] al
add ch bh
or [ ebp - 0x76fbef4f ] cl
mov al 0xdc
mov edx [ ebp + 0x21 ]
movzx eax [ edx - 0x1 ]
mov [ ebp - 0x20 ] eax
jbe r-xdata
inc ebp
sub [ eax ] eax
add [ eax ] al
std
mov [ ebp - 0x28 ] 0xfd
jbe r-xdata
add dl dh
test [ eax - 0x38ff02fe ] eax
or [ ebx + 0x458b3cac ] cl
cmc
lea ecx [ eax + edx - 0x1b ]
mov [ ebp - 0x14 ] ecx
jbe r-xdata
int3
call 0x7e34dc67
inc eax
jbe r-xdata
adc eax r--data
je r-xdata
int3
add [ ebp + 0x790f0020 ] 0xffffffca
add [ eax ] al
std
cmp [ ebp + 0xc ] 0xfffffffd
je r-xdata
in al dx
cmovpe eax [ edx ]
cmp eax 0xfc0b
pop ebp
aas
or [ eax ] al
int3
and dh [ esi + 0x4d ]
hlt
hlt
add [ eax - 0x558aff0c ] 0xffffff8b
push ebp
or al 0xaf
mov eax [ ebp - 0x4 ]
clc
add [ eax ] dl
add ch bh
push eax
push 0x0
xchg edi eax
inc eax
push 0x0
xchg edi eax
push 0x2
mov esi [ eax - 0x395aef4 ]
je r-xdata
or edi esp
add [ eax ] al
xor eax eax
jmp r-xdata
inc [ edx ]
call [ edx - 0x18 ]
sub bh [ 0xffffffffc47e0000 ]
call sub_40764b
jle r-xdata
mov edx [ ebp + 0x10 ]
jle r-xdata
les ecx [ edi + edx * 4 ]
inc eax
push 0xed00
mov ebp [ eax - 0x24 ]
adc [ ebx - 0x11788 ] cl
add dl [ eax - 0x18 ]
lodsb [ esi ]
mov [ eax ] 0x4398300
mov ecx [ ebp - 0x13 ]
and ecx 0xf900
je r-xdata
js r-xdata
not [ edx - 0x69 ]
add [ ebx - 0x1da7b ] cl
[ ebp + 0x3d48d8b ]
sub_403480
push ebp
jbe r-xdata
add [ eax ] al
std
mov esp ebp
pop ebp
aas
or [ eax ] al
int3
sub esp 0xffffffc9
mov [ ebp - 0x34 ] ecx
jbe r-xdata
add ch bh
je r-xdata
or [ ecx + 0x4d8bf0b8 ] cl
or eax 0x7c11b70f
cli
dec ebp
pop edx
std
add [ edi + eax - 0x32 ] dh
shr cl 0x77
inc [ eax ]
add [ ebx + 0x74000c80 ] al
in eax 0x8b
inc ebp
or al 0xad
call [ rw-data ]
cmp eax 0x1f9
add [ edi ] 0x5914c033
add eax [ eax ]
std
mov ecx [ ebp + 0x8 ]
jbe r-xdata
mov ecx [ ebp - 0xb ]
mov edx [ ecx + 0x3c ]
jbe r-xdata
xor edi [ 0xfffffffffd0340e9 ]
add [ ebx + 0x518bf54d ] cl
cmp al 0x76
inc ebp
add [ esi + 0x4d ] dh
in al dx
mov ebp [ esp + ebx - 0x74faaa77 ]
inc ebp
in al dx
jbe r-xdata
cmp al 0x8b
mov eax 0xed3c8108
push eax
inc ebp
mov [ eax + 0x945c7fc ] esi
add [ eax ] al
add ch bh
or [ ebp - 0x76fbef4f ] cl
mov al 0xdc
mov edx [ ebp + 0x21 ]
movzx eax [ edx - 0x1 ]
mov [ ebp - 0x20 ] eax
jbe r-xdata
add dl dh
test [ eax - 0x38ff02fe ] eax
or [ ebx + 0x458b3cac ] cl
cmc
lea ecx [ eax + edx - 0x1b ]
mov [ ebp - 0x14 ] ecx
jbe r-xdata
push ecx
push 0xfffffffc
mov edx [ ebp + 0xc ]
scasd [ edi ]
mov ecx [ ebp - 0x34 ]
adc eax 0x2fff432
mov [ ebp - 0x18 ] eax
jle r-xdata
cmp [ ecx + 0x45c7fcb0 ] cl
or [ eax ] eax
add [ eax ] al
std
push 0xfffffffd
push 0xffffffff
inc ebp
sub [ eax ] eax
add [ eax ] al
std
mov [ ebp - 0x28 ] 0xfd
jbe r-xdata
call 0xffffffff80c62748
add bh ch
add bh al
adc eax r--data
je r-xdata
int3
add [ ebp + 0x790f0020 ] 0xffffffca
add [ eax ] al
std
cmp [ ebp + 0xc ] 0xfffffffd
je r-xdata
in al dx
cmovpe eax [ edx ]
cmp eax 0xfc0b
and dh [ esi + 0x4d ]
hlt
hlt
add [ eax - 0x558aff0c ] 0xffffff8b
push ebp
or al 0xaf
mov eax [ ebp - 0x4 ]
clc
add [ eax ] dl
add ch bh
push eax
push 0x0
xchg edi eax
inc eax
push 0x0
xchg edi eax
push 0x2
mov esi [ eax - 0x395aef4 ]
je r-xdata
or edi esp
add [ eax ] al
xor eax eax
jmp r-xdata
inc [ edx ]
call [ edx - 0x18 ]
sub bh [ 0xffffffffc47e0000 ]
call sub_40764b
jle r-xdata
mov edx [ ebp + 0x10 ]
jle r-xdata
les ecx [ edi + edx * 4 ]
inc eax
push 0xed00
mov ebp [ eax - 0x24 ]
adc [ ebx - 0x11788 ] cl
add dl [ eax - 0x18 ]
lodsb [ esi ]
mov [ eax ] 0x4398300
mov ecx [ ebp - 0x13 ]
and ecx 0xf900
je r-xdata
js r-xdata
not [ edx - 0x69 ]
add [ ebx - 0x1da7b ] cl
[ ebp + 0x3d48d8b ]
sub_403533
push ebp
or al 0xaf
mov ecx [ ebp - 0x34 ]
adc eax 0x2fff432
mov [ ebp - 0x18 ] eax
jle r-xdata
push 0xfffffffd
push 0xffffffff
call 0xffffffff80c62748
add bh ch
add bh al
inc ebp
sub [ eax ] eax
add [ eax ] al
std
mov [ ebp - 0x28 ] 0xfd
jbe r-xdata
adc eax r--data
je r-xdata
int3
and dh [ esi + 0x4d ]
hlt
hlt
sub_4035f0
push ecx
add dl [ 0xbc2a18 ]
mov [ ebp + 0x15 ] eax
cmp [ ebp - 0x18 ] 0xfffffffd
jne r-xdata
mov eax [ ebp + 0x9 ]
push eax
call [ r--data ]
jle r-xdata
push 0xfffffffd
push 0x0
push 0xfffffffd
push 0x0
push 0xffffffdf
mov edx [ ebp - 0xc ]
scasd [ edi ]
call [ rw-data ]
mov [ eax + 0x9458be8 ] edi
add [ ecx + 0x15558b0c ] cl
push edx
call [ r--data ]
call 0x3347be28
rcl [ ebp * 8 - 0x1402ffff ] 0x48
push 0xfffffff9
push 0xfd3000
mov ecx [ ebp + 0x1 ]
push ecx
mov edx [ ebp + 0x5 ]
push edx
call [ r--data ]
je r-xdata
add [ edx - 0x3 ] ch
or [ ebp + 0x15cc4d8b ] ch
sbb bh ch
inc [ edx ]
call 0x128b6cf
jne r-xdata
mov eax [ ebp - 0x18 ]
lodsd [ esi ]
call [ rw-data ]
xor edi [ 0xfffffffffd0154e9 ]
push 0x7d00
push 0xfffffffd
add [ eax + 0x76 ] edx
dec ebp
cld
push ecx
jbe r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x34 ]
jle r-xdata
add ch bh
jmp r-xdata
push 0x4
push 0x30fd
jbe r-xdata
call 0xffffffffcc8dad4e
call sub_402e33
js r-xdata
rcl [ esi ] 0x50
jmp r-xdata
push ss
adc [ eax ] ebp
jge r-xdata
and [ eax ] al
mov [ ebx + ecx * 4 ] ecx
push ebp
adc eax 0xd915ff52
sub al [ ecx ]
test eax eax
jne r-xdata
add [ eax - 0xa8aff2c ] 0xffffff8b
dec ebp
call 0x7538844b
mov esp 0xafe8558b
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x34 ]
adc eax 0x2fffd1a
int3
cld
push eax
xchg edi eax
add bh bh
adc eax r--data
je r-xdata
add [ ebx - 0x1e7c12b3 ] cl
add dh dl
test eax edi
add ch bh
add [ ebx - 0x1d7e12ab ] cl
add ah bh
add [ eax ] al
mul [ edi ]
sbb edx edx
mul [ edi ]
push edx
mov eax [ ebp - 0x13 ]
and eax 0x1
or bl al
sbb eax eax
jle r-xdata
push esp
add ebp edi
jne r-xdata
mov edi [ eax - 0x5f1a7418 ]
retn 0xc
add [ eax - 0x248bff0c ] 0xffffff8b
push ebp
int3
inc ebp
adc eax r--data
call 0x128b6eb
jne r-xdata
mov eax [ ebp + 0x10 ]
fadd [ eax ]
add al [ eax ]
std
neg eax
sbb edi [ 0x7650d8f7 ]
dec ebp
call 0xffffffffcc8dad99
call sub_4031ab
js r-xdata
jbe r-xdata
add [ eax - 0x58aff18 ] 0x33
shr cl 0x57
add [ eax ] eax
add [ edx ] bh
inc ebp
aam 0x1
std
add [ eax ] al
dec ebp
call 0x245636c1
xlat
inc ecx
add bl ch
in al dx
push 0xfd8000
push 0x0
jbe r-xdata
jne r-xdata
int3
rcl [ ebx * 4 - 0x74030000 ] 0x55
adc [ esi - 0x1e ] bh
call 0x2855397a
sub bh [ eax + eax - 0x16eb3fcd ]
add [ eax ] al
std
mov edx [ ebp + 0x10 ]
jle r-xdata
jbe r-xdata
inc ebp
adc eax 0xd915ff50
sub al [ ecx ]
push ss
adc [ eax ] ebp
jge r-xdata
int3
in al dx
push 0xfd8000
push 0x0
jbe r-xdata
add [ ebp - 0x48 ] esi
push 0x1
mov edi [ eax - 0x4f74af04 ]
call 0xffffffffccf0c2e4
call 0x3f4350
mov [ eax + 0x2d7d83d0 ] edi
add [ ebp + 0x2a ] dh
je r-xdata
int3
add [ edx - 0x3 ] ch
mov ecx [ ebp - 0x18 ]
lodsb [ esi ]
call [ rw-data ]
xor edi [ 0xffffffffb88b03eb ]
call 0xffffffffc2e11daa
or al 0x0
xor esp ecx
int3
mov edx [ ebp - 0x13 ]
push edx
mov eax [ ebp - 0xf ]
push eax
mov ecx [ ebp + 0x15 ]
push ecx
mov ecx [ ebp + 0x31 ]
call 0xffffffffff432740
mov [ ebp + 0x19 ] eax
cmp [ ebp - 0x1c ] 0x2
jne r-xdata
add [ esi + 0x4d ] dh
call 0x28553a15
sub bh [ eax + eax + 0x5016c033 ]
call 0x285539c5
sub bh [ eax + eax - 0x62eb3fcd ]
add [ eax ] al
std
cmp [ ebp + 0x2d ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
lodsd [ esi ]
call [ rw-data ]
jmp r-xdata
jbe r-xdata
push ebp
sub_4038f4
inc [ edx ]
push edx
push 0x0
add dl [ 0xbc2a20 ]
mov [ ebp - 0x1db ] eax
jbe r-xdata
pop es
into
shr cl 0xf9
std
add [ eax ] al
push r--data
jo r-xdata
call 0x513f3c0a
push 0xfffffffc
mov ecx [ ebp - 0xfc24 ]
push ecx
jbe r-xdata
int3
[ edx ]
call [ ecx - 0x18 ]
mov bl 0x42
add [ eax ] al
jle r-xdata
inc [ edx ]
push 0x2
fdivr st6
add bh bh
push edx
add [ eax ] al
xchg ebp eax
adc [ ecx + eax * 2 ] ch
std
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
push 0x0
push 0xfffffffd
or [ ecx - 0x11788 ] cl
add ch [ edx + 0x2 ]
push [ esi + 0x45 ]
adc [ ebx + 0x974081d ] al
into
shr cl 0x35
cld
add [ eax ] al
jmp r-xdata
call 0x513f3bc6
call sub_4077e5
jle r-xdata
les ecx [ edi + edx * 4 ]
inc eax
push 0xed00
mov ebp [ eax - 0x24 ]
adc [ ebx - 0x11788 ] cl
add dl [ eax - 0x18 ]
lodsb [ esi ]
mov [ eax ] 0x4398300
mov ecx [ ebp - 0x13 ]
and ecx 0xf900
je r-xdata
xor esp ecx
int3
add [ eax - 0x1b ] ch
sub al 0x41
add [ eax - 0x73 ] dh
add al 0x89
js r-xdata
call sub_40764b
jle r-xdata
mov edx [ ebp + 0x10 ]
jle r-xdata
mov edx [ ebp - 0xfc18 ]
push edx
adc eax 0xfd0040ec
add esp 0xc
jbe r-xdata
add ch [ edx - 0x3 ]
js r-xdata
not [ edx - 0x69 ]
add [ ebx - 0x1da7b ] cl
[ ebp + 0x3d48d8b ]
sub_403954
call sub_403533
je r-xdata
push ecx
adc eax 0xfd0040c4
add esp 0xc
xchg edi eax
inc eax
push 0xed00
mov ebp [ eax - 0x24 ]
in al 0xfe
add bh bh
jmp r-xdata
mov eax [ ebp - 0x1e7 ]
jbe r-xdata
add [ eax + 0x14c03307 ] cl
in eax 0x0
add ch bh
mov eax [ ebp + 0x8 ]
je r-xdata
cld
xor esi [ eax ]
call 0x13d6fef
mov esp ebp
mov al [ 0x31000cc2 ]
int3
add [ edi ] 0xfd00010b
je r-xdata
clc
mov esi [ eax - 0x1348f008 ]
cmp edx 0xa74d
je sub_4039f4
mov eax [ ebp + 0x9 ]
mov ecx [ eax + 0x38 ]
je r-xdata
xor edi [ 0xfffffffffd008ce9 ]
add [ ebx + 0x488b0945 ] cl
cmp [ ebp + ecx * 2 - 0x4 ] dh
xor eax eax
jmp r-xdata
call sub_402de3
jbe r-xdata
lea ebp [ eax + 0x788d52e8 ]
fdivr st6
inc [ edx ]
push eax
mov ecx [ ebp - 0xb ]
push ecx
mov ecx [ ebp - 0x1d7 ]
cld
in al dx
in eax dx
mov [ ebp - 0x10 ] ecx
jle r-xdata
in al dx
dec [ eax + 0x16c03304 ]
pop esp
mov [ ebp + 0xd ] 0xfd000001
mov edx [ ebp - 0x18 ]
jle r-xdata
aam 0xfe
add bh bh
cmp [ edx - 0x23 ] 0x0
je r-xdata
int3
or [ eax ] al
mov [ ebx + esi ] al
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
adc eax 0x2ffedee
mov [ ebp - 0x14 ] eax
jle r-xdata
add esi [ ebp - 0x49 ]
cmp [ ebp - 0x14 ] 0xfffffffd
je r-xdata
push 0x80fd
xchg edi eax
add [ ebx - 0xae0ab3 ] cl
adc eax r--data
jbe r-xdata
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xfffffffc
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff2f2
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov edi [ eax + 0x194d8bf0 ]
xor ecx ebp
call sub_4070bc
jbe r-xdata
push 0xfffffffd
mov eax [ ebp - 0x4 ]
lodsd [ esi ]
mov ecx [ ebp + 0x8 ]
lodsb [ esi ]
mov ecx [ ebp - 0xfc2c ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
inc ebp
cmc
jbe r-xdata
add [ eax + 0x16c03304 ] cl
imul ecx [ ebx + 0x4589f545 ] 0xfffffff8
or [ eax + 0x2 ] dl
adc eax 0xbc2a24
mov [ ebp + 0xd ] eax
jmp r-xdata
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
je r-xdata
dec ebp
cmc
push ecx
call [ r--data ]
pop ebp
retn 0xf9
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
hlt
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xffffffff
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff262
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
int3
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
hlt
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xfffffffe
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff1d2
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
int3
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
hlt
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xfffffffd
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff142
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
int3
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
mov [ eax - 0x5e727604 ] edi
hlt
sub_403963
adc [ ebx - 0x74ae08e4 ] al
push 0x2fffee0
push edx
mov eax [ ebp - 0x1db ]
lodsd [ esi ]
mov ecx [ ebp - 0xfc2c ]
call sub_403383
je r-xdata
inc [ edx ]
call [ eax + 0x6a ]
cld
mov ecx [ ebp - 0xfc24 ]
push ecx
jbe r-xdata
in al 0xfe
add bh bh
mov eax [ ebp - 0x1e7 ]
jbe r-xdata
inc [ edx ]
push 0x2
fdivr st6
add bh bh
push edx
add [ eax + 0x14c03307 ] cl
in eax 0x0
add ch bh
mov eax [ ebp + 0x8 ]
je r-xdata
cld
xor esi [ eax ]
call 0x13d6fef
mov esp ebp
mov al [ 0x31000cc2 ]
int3
push [ esi + 0x45 ]
adc [ ebx + 0x974081d ] al
into
shr cl 0x35
cld
add [ eax ] al
jmp r-xdata
call 0x513f3bc6
call sub_4077e5
jle r-xdata
les ecx [ edi + edx * 4 ]
inc eax
push 0xed00
mov ebp [ eax - 0x24 ]
adc [ ebx - 0x11788 ] cl
add dl [ eax - 0x18 ]
lodsb [ esi ]
mov [ eax ] 0x4398300
mov ecx [ ebp - 0x13 ]
and ecx 0xf900
je r-xdata
add [ edi ] 0xfd00010b
je r-xdata
clc
mov esi [ eax - 0x1348f008 ]
cmp edx 0xa74d
je sub_4039f4
xor esp ecx
int3
add [ eax - 0x1b ] ch
sub al 0x41
add [ eax - 0x73 ] dh
[ edx ]
call [ ecx - 0x18 ]
mov bl 0x42
add [ eax ] al
jle r-xdata
add al 0x89
js r-xdata
call sub_40764b
jle r-xdata
mov edx [ ebp + 0x10 ]
jle r-xdata
mov eax [ ebp + 0x9 ]
mov ecx [ eax + 0x38 ]
je r-xdata
xor edi [ 0xfffffffffd008ce9 ]
add [ ebx + 0x488b0945 ] cl
cmp [ ebp + ecx * 2 - 0x4 ] dh
xor eax eax
jmp r-xdata
add [ eax ] al
xchg ebp eax
adc [ ecx + eax * 2 ] ch
std
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
push 0x0
push 0xfffffffd
or [ ecx - 0x11788 ] cl
add ch [ edx + 0x2 ]
mov edx [ ebp - 0xfc18 ]
push edx
adc eax 0xfd0040ec
add esp 0xc
jbe r-xdata
add ch [ edx - 0x3 ]
js r-xdata
not [ edx - 0x69 ]
add [ ebx - 0x1da7b ] cl
[ ebp + 0x3d48d8b ]
call sub_402de3
jbe r-xdata
lea ebp [ eax + 0x788d52e8 ]
fdivr st6
inc [ edx ]
push eax
mov ecx [ ebp - 0xb ]
push ecx
mov ecx [ ebp - 0x1d7 ]
cld
in al dx
in eax dx
mov [ ebp - 0x10 ] ecx
jle r-xdata
in al dx
dec [ eax + 0x16c03304 ]
pop esp
mov [ ebp + 0xd ] 0xfd000001
mov edx [ ebp - 0x18 ]
jle r-xdata
aam 0xfe
add bh bh
cmp [ edx - 0x23 ] 0x0
je r-xdata
int3
or [ eax ] al
mov [ ebx + esi ] al
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
adc eax 0x2ffedee
mov [ ebp - 0x14 ] eax
jle r-xdata
add esi [ ebp - 0x49 ]
cmp [ ebp - 0x14 ] 0xfffffffd
je r-xdata
push 0x80fd
xchg edi eax
add [ ebx - 0xae0ab3 ] cl
adc eax r--data
jbe r-xdata
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xfffffffc
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff2f2
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov edi [ eax + 0x194d8bf0 ]
xor ecx ebp
call sub_4070bc
jbe r-xdata
push 0xfffffffd
mov eax [ ebp - 0x4 ]
lodsd [ esi ]
mov ecx [ ebp + 0x8 ]
lodsb [ esi ]
mov ecx [ ebp - 0xfc2c ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
inc ebp
cmc
jbe r-xdata
add [ eax + 0x16c03304 ] cl
imul ecx [ ebx + 0x4589f545 ] 0xfffffff8
or [ eax + 0x2 ] dl
adc eax 0xbc2a24
mov [ ebp + 0xd ] eax
jmp r-xdata
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
je r-xdata
dec ebp
cmc
push ecx
call [ r--data ]
pop ebp
retn 0xf9
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
hlt
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xffffffff
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff262
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
int3
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
hlt
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xfffffffe
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff1d2
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
int3
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
hlt
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xfffffffd
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff142
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
int3
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
mov [ eax - 0x5e727604 ] edi
hlt
sub_4039f4
dec ebp
cmpsd [ esi ] [ edi ]
add [ eax ] al
je sub_4039f4
xor eax eax
jmp r-xdata
xor edi [ 0xfffffffffd008ce9 ]
add [ ebx + 0x488b0945 ] cl
cmp [ ebp + ecx * 2 - 0x4 ] dh
in al dx
in eax dx
mov [ ebp - 0x10 ] ecx
jle r-xdata
in al dx
dec [ eax + 0x16c03304 ]
pop esp
mov [ ebp + 0xd ] 0xfd000001
mov edx [ ebp - 0x18 ]
jle r-xdata
int3
or [ eax ] al
mov [ ebx + esi ] al
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
adc eax 0x2ffedee
mov [ ebp - 0x14 ] eax
jle r-xdata
add esi [ ebp - 0x49 ]
cmp [ ebp - 0x14 ] 0xfffffffd
je r-xdata
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xfffffffc
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff2f2
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov edi [ eax + 0x194d8bf0 ]
xor ecx ebp
call sub_4070bc
jbe r-xdata
push 0xfffffffd
mov eax [ ebp - 0x4 ]
lodsd [ esi ]
mov ecx [ ebp + 0x8 ]
lodsb [ esi ]
mov ecx [ ebp - 0xfc2c ]
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
dec ebp
cmc
push ecx
call [ r--data ]
pop ebp
retn 0xf9
add [ edi ] 0xfd00010b
je r-xdata
aam 0xfe
add bh bh
cmp [ edx - 0x23 ] 0x0
je r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
mov ecx [ eax + 0x3c ]
jbe r-xdata
inc ebp
cmc
mov eax [ ebp + 0x9 ]
mov ecx [ eax + 0x38 ]
je r-xdata
je r-xdata
push 0x80fd
xchg edi eax
add [ ebx - 0xae0ab3 ] cl
adc eax r--data
jbe r-xdata
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
hlt
call sub_402de3
jbe r-xdata
lea ebp [ eax + 0x788d52e8 ]
fdivr st6
inc [ edx ]
push eax
mov ecx [ ebp - 0xb ]
push ecx
mov ecx [ ebp - 0x1d7 ]
cld
jbe r-xdata
add [ eax + 0x16c03304 ] cl
imul ecx [ ebx + 0x4589f545 ] 0xfffffff8
or [ eax + 0x2 ] dl
adc eax 0xbc2a24
mov [ ebp + 0xd ] eax
jmp r-xdata
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xffffffff
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff262
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
int3
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
hlt
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xfffffffe
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff1d2
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
int3
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
rcl [ esi ] 0x6b
mov eax [ ebp - 0xb ]
mov [ ebp - 0x8 ] eax
jbe r-xdata
hlt
cmp [ ebp + ecx * 2 - 0x4 ] dh
push 0xfffffffd
mov edx [ ebp - 0x4 ]
scasd [ edi ]
mov eax [ ebp + 0x8 ]
lodsd [ esi ]
mov ecx [ ebp - 0x10 ]
adc eax 0x2fff142
mov esp ebp
pop ebp
aas
add al 0x0
int3
clc
cmovpe edx [ ecx ]
cmp edx 0x5ab0
mov [ ebx + esi ] eax
rcl [ esi ] 0x53
mov eax [ ebp - 0xb ]
mov ecx [ eax + 0x3c ]
jbe r-xdata
int3
or [ ecx + 0x45500ac1 ] al
std
add [ esp + eax - 0x32 ] dh
shr bl 0x3d
jbe r-xdata
or [ ebx + 0x558b3cb5 ] cl
cmc
lea eax [ edx + ecx - 0x1b ]
mov [ ebp - 0xc ] eax
jbe r-xdata
mov [ eax - 0x5e727604 ] edi
hlt
sub_403e30
push r--data
jbe r-xdata
add ebp edi
add [ eax ] al
adc [ ecx + 0x15 ] dl
mov ch 0x3c
add ch bh
add esp 0x8
je r-xdata
mov ebx [ eax ]
pop ebp
retn
hlt
sub_404a20
and al 0xbc
add [ ecx - 0x5e73 ] cl
push [ esi + 0x15 ]
lodsb [ esi ]
and al 0xbc
add [ ecx - 0x5e6b ] cl
[ eax + ebp * 4 + 0x24 ]
inc ecx
std
mov [ ebp - 0xfda4 ] eax
mov esi eax
movsb [ edi ] [ esi ]
and al 0x41
std
mov [ ebp - 0xfda4 ] ecx
mov ebp eax
mov al [ 0xffffffff89fd4124 ]
xchg ebp eax
pop esp
add bh bh
jmp [ ecx + r--data ]
sub_404d34
push [ esi + 0x15 ]
nop
and al 0xbc
add [ ecx - 0x5e6b ] cl
[ eax + 0x23 ]
inc ecx
std
mov [ ebp - 0xfda4 ] eax
mov esi eax
sbb al 0x26
inc ecx
std
mov [ ebp - 0xfda4 ] ecx
mov ebp eax
adc [ esi ] ah
inc ecx
std
mov [ ebp - 0xfda4 ] edx
mov eax [ r--data ]
je r-xdata
adc eax r--data
je r-xdata
pop esp
inc [ edx ]
dec [ ebx + 0x4123250d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41232915 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
mov [ eax + 0x5c ] ebp
pop esp
inc [ edx ]
jmp [ ecx + rw-data ]
sub_404ed0
and eax 0x8d8900bc
mov eax [ 0x76ffffff ]
adc eax 0xbc2394
mov [ ebp - 0x5f ] edx
pop esp
pushad
inc ecx
std
mov [ ebp - 0xfda4 ] eax
mov esi eax
inc ecx
std
mov [ ebp - 0xfda4 ] ecx
mov ebp eax
push 0x89fd4126
xchg ebp eax
pop esp
add bh bh
jmp [ ecx + r--data ]
sub_405220
push [ esi + 0x15 ]
adc [ 0xffffffff958900bc ] ah
mov eax [ 0x5cffffff ]
and al 0x27
inc ecx
std
mov [ ebp - 0xfda4 ] eax
mov esi eax
sub [ edi ] ah
inc ecx
std
mov [ ebp - 0xfda4 ] ecx
mov ebp eax
sub al 0x27
inc ecx
std
mov [ ebp - 0xfda4 ] edx
mov eax [ r--data ]
je r-xdata
adc eax r--data
je r-xdata
pop esp
inc [ edx ]
dec [ ebx + 0x4127c90d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x4127c515 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
mov [ eax + 0x5c ] ebp
pop esp
inc [ edx ]
jmp [ ecx + rw-data ]
sub_4054dc
push [ esi + 0x15 ]
mov esp 0x8900bc27
xchg ebp eax
mov eax [ 0x5cffffff ]
shl [ edi ] 0x41
std
mov [ ebp - 0xfda4 ] eax
mov esi eax
les esp [ edi ]
inc ecx
std
mov [ ebp - 0xfda4 ] ecx
mov ebp eax
enter 0x4127 0xfd
mov [ ebp - 0xfda4 ] edx
mov eax [ r--data ]
je r-xdata
adc eax r--data
je r-xdata
pop esp
inc [ edx ]
dec [ ebx + 0x41272d0d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41272915 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
mov [ eax + 0x5c ] ebp
pop esp
inc [ edx ]
jmp [ ecx + rw-data ]
sub_4057e8
push [ esi + 0x15 ]
push 0x8900bc28
xchg ebp eax
mov eax [ 0x5cffffff ]
insb
sub [ ecx - 0x3 ] al
mov [ ebp - 0xfda4 ] eax
mov esi eax
pushfd
inc ecx
std
mov [ ebp - 0xfda4 ] ecx
mov ebp eax
jo r-xdata
inc [ edx ]
jmp [ ecx + rw-data ]
inc ecx
std
mov [ ebp - 0xfda4 ] edx
mov eax [ r--data ]
je r-xdata
adc eax r--data
je r-xdata
pop esp
inc [ edx ]
dec [ ebx + 0x4128890d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41288515 ]
add [ ebp + edx * 4 + 0x5c ] dh
mov [ eax + 0x5c ] ebp
pop esp
inc [ edx ]
jmp [ ecx + rw-data ]
sub_405bbc
push [ esi + 0x15 ]
adc [ 0xffffffff958900bc ] ah
mov eax [ 0x5cffffff ]
sbb al 0x29
inc ecx
std
mov [ ebp - 0xfda4 ] eax
mov esi eax
js r-xdata
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x4129d515 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
inc ecx
std
mov [ ebp - 0xfda4 ] ecx
mov ebp eax
and [ ecx ] ch
inc ecx
std
mov [ ebp - 0xfda4 ] edx
mov eax [ r--data ]
je r-xdata
adc eax r--data
je r-xdata
pop esp
inc [ edx ]
dec [ ebx + 0x412aa50d ]
mov [ eax + 0x5c ] ebp
pop esp
inc [ edx ]
jmp [ ecx + rw-data ]
sub_405cd4
push [ esi + 0x15 ]
mov esp 0x8900bc28
xchg ebp eax
mov eax [ 0x5cffffff ]
enter 0x4125 0xfd
mov [ ebp - 0xfda4 ] eax
mov esi eax
shr [ eax ] 0x41
std
mov [ ebp - 0xfda4 ] ecx
mov ebp eax
les ebp [ eax ]
inc ecx
std
mov [ ebp - 0xfda4 ] edx
mov eax [ r--data ]
je r-xdata
adc eax r--data
je r-xdata
pop esp
inc [ edx ]
dec [ ebx + 0x4126d90d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41261d15 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
mov [ eax + 0x5c ] ebp
pop esp
inc [ edx ]
jmp [ ecx + rw-data ]
sub_4060d0
inc ecx
std
mov [ ebp - 0xfda4 ] edx
mov eax [ r--data ]
je r-xdata
adc eax r--data
je r-xdata
pop esp
inc [ edx ]
dec [ ebx + 0x4122d50d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x4122d115 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
mov [ eax + 0x5c ] ebp
pop esp
inc [ edx ]
jmp [ ecx + rw-data ]
sub_40624c
push [ esi + 0x15 ]
push 0x8900bc21
xchg ebp eax
mov eax [ 0x5cffffff ]
nop
and al [ ecx - 0x3 ]
mov [ ebp - 0xfda4 ] eax
mov esi eax
sub [ edx ] ah
inc ecx
std
mov [ ebp - 0xfda4 ] ecx
mov ebp eax
xchg esp eax
and al [ ecx - 0x3 ]
mov [ ebp - 0xfda4 ] edx
mov eax [ r--data ]
je r-xdata
adc eax r--data
je r-xdata
pop esp
inc [ edx ]
dec [ ebx + 0x4122610d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x4122b515 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
mov [ eax + 0x5c ] ebp
pop esp
inc [ edx ]
jmp [ ecx + rw-data ]
sub_406b07
mov eax [ ebp - 0x5b ]
jbe r-xdata
sbb al 0xdd
inc ecx
add bh bh
fadd [ eax ]
inc ecx
std
jmp [ rw-data ]
clc
xor esi [ eax ]
call 0x13d6fef
mov esp ebp
mov al [ 0x310010c2 ]
int3
sub_406e5b
cmp [ rw-data ] 0xfffffffe
jne r-xdata
push esi
push 0xfffffffd
push [ rw-data ]
push 0xfffffff9
call 0x13d80d6
pop ecx
sbb [ eax + 0x155600fc ] 0xffffff93
adc al [ eax ]
std
pop ecx
mov [ ebp + 0x19 ] eax
test eax eax
je r-xdata
xchg ebx eax
push esi
push eax
call sub_4080ce
movsb [ edi ] [ esi ]
pop ecx
mov [ ebp + 0x1 ] 0x2fffffe
call 0x13d6e9e
sub_406eeb
mov [ edi + 0x227700b9 ] fs
xchg edi eax
add al 0xe8
fsubp st4
add [ eax ] al
pop ecx
jle r-xdata
mov eax [ rw-data ]
jle r-xdata
cld
add [ ebx - 0x2e61a18 ] ch
add [ ecx - 0x77 ] bl
mov eax 0x145c7e4
pop ecx
add [ ebp - 0xd ] esi
test esi esi
je r-xdata
mov eax esi
jmp r-xdata
sub_406fe5
std
or al 0x0
add ch bh
xor eax eax
pop esi
mov al [ 0x3d0d3bc3 ]
jpo r-xdata
shufps xmm7 xmm6 0x5e
pop edi
mov [ eax ] cl
pop esi
pop edi
mov al [ 0xfffffffffd2455e9 ]
add bh dh
add [ eax + 0x14c3f302 ] cl
adc [ ebx ] esp
add ch bh
int3
sub_4070bc
xchg ebp eax
mov [ ecx + 0x40 ] esi
add [ eax + 0x49 ] dh
add [ ebx ] ah
sub al 0x8a
push es
mov dl bh
mov al [ esi + 0x1 ]
cmp al 0xe9
add cl [ eax - 0x397cfe46 ]
inc [ ebx - 0x681fd39 ]
or [ edx + 0x5b ] dh
[ edi ] [ esi ]
sub_40719f
mov [ edi - 0x4 ] al
mov eax [ ebp + 0x8 ]
mov [ 0x70c3c95f ] eax
dec ecx
add [ edx - 0x75f87705 ] cl
mov ebx 0xfc478801
mov al [ esi + 0x2 ]
jne r-xdata
jb r-xdata
add cl [ ebx + 0x5f5e08b8 ]
xor al 0xc3
nop
lea ecx [ ecx - 0x7e7203cf ]
cmp esp edi
idiv [ edx ]
add eax [ eax ]
add ch bh
jne r-xdata
sbb [ 0x2c82b03 ] 0x24
test [ edi + ecx * 4 ] edx
inc eax
add bh bh
mov edi [ edx ]
mov edx 0xfd0003
cmp ecx 0xfffffff9
rcl [ edx + eax ] 0x83
loop r-xdata
cmp ecx 0x8
sub_4073e1
mov esp 0xeae8e800
add [ eax ] al
xor [ eax + 0x3d33ffe4 ] 0xffffff8b
jne r-xdata
cmp dh [ ebp + 0x1d ]
call sub_407e1e
cmp al [ eax ]
push ss
add ch bh
add [ edi + 0x57 ] dl
stosb [ edi ]
push edi
push edi
call sub_409a4f
jle r-xdata
into
pop edi
pop esi
cmpsb [ esi ] [ edi ]
pop ebp
retn
adc al 0x83
xor eax 0xb0cebff
inc esi
or al 0x40
mov [ ecx + ecx * 4 ] ecx
jle r-xdata
mov eax [ ebp - 0x1c ]
adc eax 0xfd0017eb
retn
sub_407458
mov eax [ edx ]
push ebp
mov ebp esp
jle r-xdata
jmp r-xdata
adc [ ebx - 0x74acf750 ] cl
mov al [ 0xffffffffce57560c ]
dec [ ecx + 0x5d89054d ]
cld
les edi [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x1c ]
adc eax 0xfd0017eb
retn
out dx al
daa
add ch bh
pop ecx
retn
cmp [ ebp + 0x14 ] edi
mov [ ebx + edi ] ebx
iretd
sub_4074f1
mov eax 0xfd1000f4
add [ ebp - 0x157b0d01 ] al
add ch bh
add bh dh
inc esi
int1
or al 0x1
add ch bh
je r-xdata
cmp esp [ eax + 0x7e6872f4 ]
jge r-xdata
mov edi [ ebx - 0x763f7afc ]
cmp eax 0x1c88c0f
add [ eax ] al
jbe r-xdata
xchg ebp eax
std
add [ eax ] al
add [ ecx + 0x2ffb91f ] cl
add [ eax ] eax
add [ esi - 0x5 ] dh
cmp ebx eax
pop [ edx ]
mov edi eax
sub_407523
add [ eax ] al
std
push edi
push [ esi ]
add dh [ ebp - 0x4 ]
dec [ eax - 0x2d9a1708 ]
add [ eax ] al
sub [ ebx - 0x3c1fefc ] eax
jge r-xdata
sub esp [ edx ]
add esp 0x10
aam 0x7d
cld
mov eax [ eax - 0x26a1610 ]
add [ eax ] al
cmp esp [ eax + 0x7e6872f4 ]
jge r-xdata
xchg ebp eax
std
add [ ecx + 0x2ffb91f ] cl
sub_40755d
das
cmp ebx ecx
jbe r-xdata
pop ds
mov ecx 0x7fff02ff
xor ebp [ edi ]
mov eax ecx
test [ eax + 0x16c18bf4 ] 0xac38b07
jne r-xdata
mov edi [ esi ]
sub eax edx
jmp r-xdata
retn
sub_407576
mov eax 0x7f02ffff
cmp ebx eax
mov al [ edx ]
mov eax ebx
mov [ ebp - 0x4 ] 0xf
jpe r-xdata
add cl [ ebx - 0x3823908 ]
add [ eax ] al
std
push eax
push [ ebp + 0x5 ]
push esi
call r--data
pop ecx
lodsd [ esi ]
call 0x13da39c
add esp 0xfffffff1
test eax eax
vmwrite esi [ esi - 0x7c030000 ]
clc
push edx
test [ ebx + 0x100fd00 ] bl
inc ebp
add eax 0xb829d82b
cld
jmp r-xdata
js r-xdata
add [ ecx - 0x7d ] bl
add eax 0x78840fff
add [ eax ] al
add [ esi + 0x7d ] bh
cld
add [ ecx + 0x54d8b4e ] cl
inc [ ebp - 0x8 ]
jne r-xdata
inc esi
in eax 0x4b
dec [ ebp + 0x1 ]
mov [ ebp - 0xc ] eax
mov eax [ esi - 0x1b ]
dec ebx
jne r-xdata
clc
jbe r-xdata
cmp [ ecx ] 0xc
call r--data
adc al 0xe9
push ebp
sub_40764b
dec esi
or al 0xdd
cmp [ ebp - 0x13 ] esi
je r-xdata
xor eax eax
adc eax 0xfd00155f
retn
cmp [ eax - 0x3bcd8bec ] ecx
jne r-xdata
inc ebp
cmc
add [ eax ] al
jne r-xdata
mov eax edi
sub edi [ esi ]
xor edx edx
test [ eax + 0x33de910 ] 0xb383ffff
or al 0x10
jmp r-xdata
or [ esi + 0xc ] 0xffffffdd
cmp [ ebp + 0xc ] 0x2
je r-xdata
call r--data
dec [ eax - 0x7700a9f4 ]
or al ch
mov ebx ss
add [ eax ] al
cmp [ ecx ] 0xc
sub_4076e4
call j_sub_4077e2
jbe r-xdata
push ebx
scasb [ edi ]
mov [ eax ] 0xfd16
call sub_409aa7
jle r-xdata
in al 0xeb
push [ ds : ebp + 0x18 ]
adc eax 0xfd00254e
pop ecx
retn
push [ ebp - 0xf ]
push 0xffffffff
dec [ eax + 0x252e808 ]
adc al 0x83
xor eax 0xfc66e9ff
add [ eax ] al
push edi
adc eax 0xfd002059
cmp [ edi + 0x4 ] ebx
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
add [ ebx ] 0x89
pop edi
stc
push 0x1
push ebx
lodsd [ esi ]
call 0x13da863
add esp 0xfffffff1
cmp eax ebx
mov [ eax + 0x76d37cf8 ] edi
push edi
or al 0xf7
aas
or [ ecx ] al
add ch bh
jne r-xdata
mov edi edx
sub edi [ edx - 0x3d116fc ]
add [ eax ] al
mov ecx [ edi + 0x8 ]
stosd [ edi ]
mov esi eax
sub ecx [ ecx + ecx * 4 ]
jne r-xdata
cli
or eax edx
add esi [ esp + edi * 4 - 0x75 ]
push ebp
cld
jbe r-xdata
add eax 0x8d1fe67e
loope r-xdata
cld
rol [ edi ] 0x5
mov edx [ eax + ebp * 2 ]
inc eax
xchg esi eax
inc esp
std
and esi 0x1f
cmp al 0xe6
rol esi 0x1
shl [ ebx + 0x11 ] 0x1
jbe r-xdata
inc eax
xchg esi eax
mov ecx 0xf5458900
push es
idiv [ ecx - 0x767ffbce ]
pop ss
cmp [ edx ] 0xf7
jne r-xdata
mov edx ecx
xor al [ eax + eax * 4 ]
mov [ edi ] edx
push 0x2
push 0xfffffffd
push [ ebp - 0x4 ]
adc eax 0xfd003031
add esp 0xc
mov [ ebp - 0x8 ] 0x75
fisttp [ ebx + 0x4d760847 ]
or [ ebx ] al
xor eax 0xc58009eb
or dh [ ebp + 0x3 ]
add al [ ebp + 0x8 ]
inc eax
mov cl 0x72
or al [ edi + 0xc ]
add ch bl
add [ eax ] al
jmp r-xdata
mov edi 0xc72d63b
cmp [ ebp - 0x8 ] ebx
mov [ ebx + ecx * 4 ] bl
inc ebp
or ecx ebp
fiadd [ eax ]
std
add [ edx + edx * 8 + 0x5e8ef85 ] al
cli
add [ eax ] al
mov eax [ ebx ]
rcr [ ebx ] 0x6
test [ ebp + ecx * 8 + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xb ] eax
sub_40770f
inc [ ebx - 0x3ca2ebc7 ]
jbe r-xdata
call [ ebp - 0x75 ]
adc [ ebx + 0x57ae0cec ] eax
mov edi [ ebp - 0xb ]
xor ebx ebx
cmp eax [ esi ]
jne r-xdata
push ebp
mov edx [ ecx ]
sub esp 0xc
scasb [ edi ]
push edi
push edi
adc eax 0xfd002059
cmp [ edi + 0x4 ] ebx
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
add [ ebx ] 0x89
pop edi
stc
push 0x1
push ebx
lodsd [ esi ]
call 0x13da863
add esp 0xfffffff1
cmp eax ebx
mov [ eax + 0x76d37cf8 ] edi
push edi
or al 0xf7
aas
or [ ecx ] al
add ch bh
jne r-xdata
call sub_407e76
scasb [ edi ]
push ebx
push ebx
push ebx
scasb [ edi ]
mov [ eax ] 0xfd16
call sub_409aa7
jle r-xdata
mov edi edx
sub edi [ edx - 0x3d116fc ]
add [ eax ] al
push [ ebp - 0xf ]
push 0xffffffff
dec [ eax + 0x252e808 ]
adc al 0x83
xor eax 0xfc66e9ff
add [ eax ] al
mov ecx [ edi + 0x8 ]
stosd [ edi ]
mov esi eax
sub ecx [ ecx + ecx * 4 ]
jne r-xdata
cli
or eax edx
add esi [ esp + edi * 4 - 0x75 ]
push ebp
cld
jbe r-xdata
add eax 0x8d1fe67e
loope r-xdata
cld
rol [ edi ] 0x5
mov edx [ eax + ebp * 2 ]
inc eax
xchg esi eax
inc esp
std
and esi 0x1f
cmp al 0xe6
rol esi 0x1
shl [ ebx + 0x11 ] 0x1
jbe r-xdata
inc eax
xchg esi eax
mov ecx 0xf5458900
push es
idiv [ ecx - 0x767ffbce ]
pop ss
cmp [ edx ] 0xf7
jne r-xdata
mov edx ecx
xor al [ eax + eax * 4 ]
mov [ edi ] edx
push 0x2
push 0xfffffffd
push [ ebp - 0x4 ]
adc eax 0xfd003031
add esp 0xc
mov [ ebp - 0x8 ] 0x75
fisttp [ ebx + 0x4d760847 ]
or [ ebx ] al
xor eax 0xc58009eb
or dh [ ebp + 0x3 ]
add al [ ebp + 0x8 ]
inc eax
mov cl 0x72
or al [ edi + 0xc ]
add ch bl
add [ eax ] al
jmp r-xdata
mov edi 0xc72d63b
cmp [ ebp - 0x8 ] ebx
mov [ ebx + ecx * 4 ] bl
inc ebp
or ecx ebp
fiadd [ eax ]
std
add [ edx + edx * 8 + 0x5e8ef85 ] al
cli
add [ eax ] al
mov eax [ ebx ]
rcr [ ebx ] 0x6
test [ ebp + ecx * 8 + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xb ] eax
sub_4077e5
std
add dh dh
inc edi
int1
add [ edi ] ecx
test [ ecx ] cl
add [ eax ] al
jbe r-xdata
inc ebp
or [ eax - 0x3a ] al
shl [ edx - 0xd ] 0xa
inc edi
or al 0x0
fld [ eax ]
add bl ch
mov ebp 0x88ff006a
clc
push [ ebp + 0x1 ]
call 0x13da863
add esp 0xfffffff1
test eax eax
add al 0x3b
jge r-xdata
add [ ebx - 0x3f7a0e3c ] al
or eax 0xffffffff
push ss
cmp bh [ eax + 0xff00 ]
cmp [ eax + 0x76107708 ] edi
dec edi
or al 0xf6
cmp al 0x8
je r-xdata
mov esp [ eax + 0x1758bfc ]
sub eax ecx
add edi [ edi ]
sar ebx 0x5
jle r-xdata
mov [ eax - 0x25a160c ] esp
add [ eax ] al
jbe r-xdata
or al cl
add [ edi * 8 + 0x76037400 ] al
inc edi
r-xdata
pop ds
add [ esi + 0x56 ] dl
stosd [ edi ]
push esi
push esi
call sub_4099ef
jle r-xdata
sbb [ ecx + 0x38b08b8 ] cl
or eax [ eax + esi + 0x4 ]
stc
je r-xdata
mov eax [ ebp - 0xb ]
sub [ ebp - 0x8 ] eax
jbe r-xdata
hlt
adc al 0x83
xor eax 0x227ebff
jne r-xdata
call sub_409b0e
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] esi
add dh [ ebp + 0x8 ]
call sub_4077e2
movsb [ edi ] [ esi ]
mov [ ebp - 0x1c ] eax
cmp al [ ebp - 0x4 ]
inc [ edx ]
cld
sub_4078a8
mov esi [ eax - 0x5c3efc08 ]
pop edi
pop ebx
leave
push 0xc
push r--data
adc eax 0xfd001312
xor eax eax
xor ecx [ ebx ]
cmp [ ebp + 0x8 ] esi
xchg ebp eax
sar [ ebx ] 0x3b
jne r-xdata
add dh [ ebp + 0x8 ]
call sub_407fbe
cmp al [ eax ]
push ss
add ch bh
add [ esi + 0x56 ] dl
stosd [ edi ]
push esi
push esi
call sub_4099ef
jle r-xdata
hlt
adc al 0x83
xor eax 0x227ebff
jne r-xdata
add dh [ ebp + 0x8 ]
call sub_4077e2
movsb [ edi ] [ esi ]
mov [ ebp - 0x1c ] eax
cmp al [ ebp - 0x4 ]
inc [ edx ]
cld
call sub_409b0e
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] esi
sub_407948
inc esi
int1
jne r-xdata
push esi
call r--data
mov edi [ ebx + 0x3d84590c ]
jns r-xdata
push esi
adc eax 0x2fffdc3
add [ ebp + 0xc ] eax
jle r-xdata
test al 0xfc
je r-xdata
sbb [ 0xfffffffff14689fc ] 0xffffffeb
push ss
or dl dh
xchg ebp eax
adc [ eax ] al
movsb [ edi ] [ esi ]
sar [ ebx ] 0x3b
jne r-xdata
push [ ebp + 0x10 ]
add dh [ ebp + 0xc ]
push esi
adc eax 0xfd001e15
pop ecx
push eax
call sub_40a7d0
into
leave
add esp 0xfffffff1
cmp eax 0xffffffff
xchg ebp eax
test al 0xf5
je r-xdata
jbe r-xdata
call sub_407fae
cmp al [ eax ]
push ss
add ch bh
add [ esi + 0x56 ] dl
stosd [ edi ]
push esi
push esi
call sub_4099df
jle r-xdata
test eax 0x4fd
mov [ edi ] al
mov [ esi - 0x1b ] 0xfd000200
and ch bh
add [ ebx - 0x3fcc163c ] al
adc [ ebx ] bh
add esi [ edx + ecx - 0x7d ]
add al [ ecx ]
ror [ ecx + 0x76 ] 0xc1
pop esi
pop ebp
push 0xc
push r--data
adc eax 0xfd00121a
xor eax eax
xor ecx [ ebx ]
cmp [ ebp + 0x8 ] esi
xchg ebp eax
clc
push edx
xchg ebp eax
adc al 0x83
xor eax 0x763eebff
jge r-xdata
inc [ edx ]
jne r-xdata
push [ ebp + 0x8 ]
adc eax 0xfd0021d7
jle r-xdata
pop ecx
mov [ ebp + 0x1 ] esi
push edi
push [ ebp - 0xf ]
push [ ebp + 0x8 ]
adc eax 0x2ffff16
add esp 0xc
je r-xdata
or [ 0xfffffffffd0021d7 ] dl
cmp eax [ ebx ]
je r-xdata
in al dx
add [ eax ] al
retn
jmp r-xdata
add bl ch
add [ eax ] al
add [ esi - 0x51acacad ] ch
call 0x13d9ad4
add esp 0xffffffe9
xor eax eax
in al 0xc7
mov eax 0x2fffefc
add dh [ ebp + 0x2f ]
je r-xdata
add [ edx ] 0x1
sub_407a6a
xor eax eax
mov ecx [ eax - 0xd0cc4f4 ]
xchg ebp eax
sar [ ebx ] 0x3e
je r-xdata
call 0x13d7ee1
mov [ eax ] 0xeb
scasb [ edi ]
push ebx
push ebx
push ebx
scasb [ edi ]
xor edi [ 0x680f1e38 ]
sar [ ebx ] 0xc3
mov ebx ecx
call __import_lookup_table_0(KERNEL32:SetConsoleCursorInfo)
mov [ eax - 0x773cc4f8 ] edi
or eax 0xf94de8
add bh al
std
sbb [ eax ] al
add ch bh
jmp r-xdata
inc [ edx ]
jne r-xdata
xor eax eax
jmp r-xdata
in al dx
add [ eax ] al
retn
push [ ebp + 0x8 ]
adc eax 0xfd0021d7
pop ecx
mov [ ebp + 0x1 ] esi
push edi
push [ ebp - 0xf ]
push [ ebp + 0x8 ]
adc eax 0x2ffff16
add esp 0xc
je r-xdata
call 0x13d9ad4
add esp 0xffffffe9
add bl ch
add [ eax ] al
add [ esi - 0x51acacad ] ch
in al 0xc7
mov eax 0x2fffefc
sub_407b17
cmp [ ebp - 0xf ] edi
je r-xdata
xor edi [ 0x345b5e5f ]
cmp [ eax + 0x761f7410 ] eax
jne r-xdata
call sub_409aa7
jle r-xdata
cmp ecx [ edx ]
jne r-xdata
retn
adc al 0x33
cmp eax 0x345b5e5f
mov ecx [ ebp - 0xb ]
cmp ecx edi
je r-xdata
call sub_407e76
stosb [ edi ]
push edi
push edi
push edi
stosb [ edi ]
mov [ eax ] 0xfd16
in eax 0x89
inc ebp
or eax 0xffffffff
into
shl bh cl
jne r-xdata
test [ 0x710f2874 ] edi
scasd [ edi ]
add [ eax ] al
std
mov edi ebx
cmp esp [ 0x58b0272 ]
push edi
push [ ebp + 0x1 ]
push [ esi ]
call sub_40706b
aam 0x7e
add al 0x1
retn
add ebp edi
add [ edi + ebp + 0x76 ] dh
inc esi
add al 0x85
cmp eax 0x710f2874
cmp [ ebp + 0x10 ] eax
mov cl ch
mov edi [ ebp - 0xf ]
imul edi [ ebp - 0x13 ]
test [ esi + 0xc ] 0x1f1
je r-xdata
add ebx eax
add esp 0xc
salc
fild [ ecx ]
jge r-xdata
clc
push ss
pop es
mov [ ebp + 0x5 ] 0xfd001000
test edi edi
vmwrite edi [ edi - 0x74030000 ]
dec esi
or al 0x7c
loope r-xdata
cld
mov [ eax - 0x7620740c ] eax
or [ ebx + 0x4589e546 ] cl
dec edi
cmp esp [ eax + 0x784f72f8 ]
leave
je r-xdata
jmp r-xdata
add [ eax + 0x68b00f8 ] 0x74
or [ ebx ] esi
das
mov eax ebx
test [ eax - 0x5505d408 ] 0xabfc75ff
call 0x13d97a7
pop ecx
push eax
adc eax 0xfd003b30
stosd [ edi ]
call 0x13d980a
pop ecx
test [ 0xffffffff80837d75 ] edi
clc
add [ ebx + 0x33097406 ] cl
mov edi [ ebp + 0x9 ]
jmp r-xdata
add esp 0xc
jle r-xdata
cmp eax [ eax ]
std
push [ esp + ebx * 4 - 0x75 ]
iretd
js r-xdata
push esi
push eax
call sub_40aeb8
movsb [ edi ] [ esi ]
pop ecx
cmp eax 0x2
je r-xdata
jne r-xdata
jbe r-xdata
cmp dh [ edi + 0x2 ]
mov esi [ 0xffffffffd6fc4d01 ]
fnstcw [ ebx ]
jbe r-xdata
sub eax ebx
into
shl bh cl
jne r-xdata
call sub_407f46
adc cl ch
or al 0xfe
jmp 0xffffffffff437b42
jmp r-xdata
adc al 0x33
cmp eax 0xfd0f66e8
add bl al
dec [ eax - 0x1de617ec ]
add [ eax ] al
pop ecx
je r-xdata
inc ecx
cld
dec [ eax - 0x128a00ec ]
push [ ebp + 0xc ]
add dh [ ebp + 0x8 ]
call sub_407b8d
jle r-xdata
add [ eax - 0x40 ] bh
jge r-xdata
cld
mov eax 0x5ab0
fwait
cmp [ r-xdata ] eax
jne r-xdata
cmp al [ eax ]
push ss
add ch bh
add [ esi + 0x56 ] dl
stosd [ edi ]
push esi
push esi
call sub_409b77
jle r-xdata
add [ eax ] al
adc [ ecx + 0x45c7e4b8 ] cl
add esi edi
add dl [ 0xbc26c0 ]
mov [ rw-data ] eax
call sub_40bd56
xchg edi eax
sbb ebp eax
sub al 0xed
add [ eax ] al
pop ecx
add [ eax ] al
std
call 0x13d8e40
pop ecx
pop ecx
mov al [ 0xffffffff95586ac3 ]
fdivr [ esi ]
inc ecx
std
call 0x13d8bd0
xor esi esi
je r-xdata
mov eax [ 0xbd003c ]
cmp [ eax + r--data ] 0x45ad
mov [ edi ] ah
mov ecx 0xfc0b
les cx [ eax + 0xbd0018 ]
jne r-xdata
push 0xa
pop ecx
lodsb [ esi ]
cmovpe ecx [ ebp - 0x38 ]
test [ 0xffffffffed6a0875 ] edi
call 0xffffffffff437cee
pop ecx
call sub_40bddb
std
push 0xfffffffe
pop edi
je r-xdata
cld
mov [ ebp - 0x1c ] esi
into
fild [ ebx + 0x53 ]
jle r-xdata
jmp r-xdata
lea edi [ eax - 0x1700af68 ]
shr [ ecx ] 0x41
lodsd [ esi ]
push cs
std
add [ ebx ] dh
div [ ebp + esi * 2 - 0x4 ]
je r-xdata
mov ebp 0xed760e00
xor ecx ecx
cmp [ ebp - 0x18 ] ecx
add [ eax - 0x3 ] al
setne cl
je r-xdata
pop esi
les ecx [ ebx - 0x4c1702bc ]
std
add [ ebp + 0x6a0880c0 ] al
or [ 0xfffffffffd001006 ] dl
pop ecx
call r--data
test [ 0xfffffffff46a087d ] edi
call 0x13d8dec
pop ecx
push ebx
adc eax 0xfd0010ad
pop ecx
cmp eax esi
mov [ edi ] eax
push eax
call sub_408d27
movsb [ edi ] [ esi ]
call 0x13db9b7
test [ ebp + 0x39 ] bl
je r-xdata
mov al [ 0xffffffffe800445a ]
test [ edi ] edi
add [ eax ] al
adc eax 0xfd0001a0
pop ecx
test eax eax
mov [ eax ] cl
push 0x1c
adc eax 0x2ffff58
pop ecx
call r--data
in al 0xeb
dec [ ecx - 0x24311b8b ]
inc ebx
push ebx
sub_407b48
dec ebp
cmc
in eax 0x89
inc ebp
or eax 0xffffffff
into
shl bh cl
jne r-xdata
test [ 0x710f2874 ] edi
scasd [ edi ]
add [ eax ] al
std
mov edi ebx
cmp esp [ 0x58b0272 ]
push edi
push [ ebp + 0x1 ]
push [ esi ]
call sub_40706b
aam 0x7e
add al 0x1
retn
add ebp edi
add [ edi + ebp + 0x76 ] dh
inc esi
add al 0x85
cmp eax 0x710f2874
cmp ecx edi
je r-xdata
mov ecx [ ebp - 0xb ]
cmp [ ebp + 0x10 ] eax
mov cl ch
mov edi [ ebp - 0xf ]
imul edi [ ebp - 0x13 ]
test [ esi + 0xc ] 0x1f1
je r-xdata
add ebx eax
add esp 0xc
salc
fild [ ecx ]
jge r-xdata
clc
push ss
pop es
mov [ ebp + 0x5 ] 0xfd001000
test edi edi
vmwrite edi [ edi - 0x74030000 ]
dec esi
or al 0x7c
loope r-xdata
cld
mov [ eax - 0x7620740c ] eax
or [ ebx + 0x4589e546 ] cl
dec edi
cmp esp [ eax + 0x784f72f8 ]
leave
je r-xdata
jmp r-xdata
add [ eax + 0x68b00f8 ] 0x74
or [ ebx ] esi
das
mov eax ebx
test [ eax - 0x5505d408 ] 0xabfc75ff
call 0x13d97a7
pop ecx
push eax
adc eax 0xfd003b30
stosd [ edi ]
call 0x13d980a
pop ecx
test [ 0xffffffff80837d75 ] edi
clc
add [ ebx + 0x33097406 ] cl
mov edi [ ebp + 0x9 ]
jmp r-xdata
add esp 0xc
jle r-xdata
cmp eax [ eax ]
std
push [ esp + ebx * 4 - 0x75 ]
iretd
js r-xdata
push esi
push eax
call sub_40aeb8
movsb [ edi ] [ esi ]
pop ecx
cmp eax 0x2
je r-xdata
jne r-xdata
jbe r-xdata
cmp dh [ edi + 0x2 ]
mov esi [ 0xffffffffd6fc4d01 ]
fnstcw [ ebx ]
jbe r-xdata
sub eax ebx
into
shl bh cl
jne r-xdata
call sub_407f46
adc cl ch
or al 0xfe
jmp 0xffffffffff437b42
jmp r-xdata
adc al 0x33
cmp eax 0xfd0f66e8
add bl al
dec [ eax - 0x1de617ec ]
add [ eax ] al
pop ecx
je r-xdata
inc ecx
cld
dec [ eax - 0x128a00ec ]
push [ ebp + 0xc ]
add dh [ ebp + 0x8 ]
call sub_407b8d
jle r-xdata
add [ eax - 0x40 ] bh
jge r-xdata
cld
mov eax 0x5ab0
fwait
cmp [ r-xdata ] eax
jne r-xdata
cmp al [ eax ]
push ss
add ch bh
add [ esi + 0x56 ] dl
stosd [ edi ]
push esi
push esi
call sub_409b77
jle r-xdata
add [ eax ] al
adc [ ecx + 0x45c7e4b8 ] cl
add esi edi
add dl [ 0xbc26c0 ]
mov [ rw-data ] eax
call sub_40bd56
xchg edi eax
sbb ebp eax
sub al 0xed
add [ eax ] al
pop ecx
add [ eax ] al
std
call 0x13d8e40
pop ecx
pop ecx
mov al [ 0xffffffff95586ac3 ]
fdivr [ esi ]
inc ecx
std
call 0x13d8bd0
xor esi esi
je r-xdata
mov eax [ 0xbd003c ]
cmp [ eax + r--data ] 0x45ad
mov [ edi ] ah
mov ecx 0xfc0b
les cx [ eax + 0xbd0018 ]
jne r-xdata
push 0xa
pop ecx
lodsb [ esi ]
cmovpe ecx [ ebp - 0x38 ]
test [ 0xffffffffed6a0875 ] edi
call 0xffffffffff437cee
pop ecx
call sub_40bddb
std
push 0xfffffffe
pop edi
je r-xdata
cld
mov [ ebp - 0x1c ] esi
into
fild [ ebx + 0x53 ]
jle r-xdata
jmp r-xdata
lea edi [ eax - 0x1700af68 ]
shr [ ecx ] 0x41
lodsd [ esi ]
push cs
std
add [ ebx ] dh
div [ ebp + esi * 2 - 0x4 ]
je r-xdata
mov ebp 0xed760e00
xor ecx ecx
cmp [ ebp - 0x18 ] ecx
add [ eax - 0x3 ] al
setne cl
je r-xdata
pop esi
les ecx [ ebx - 0x4c1702bc ]
std
add [ ebp + 0x6a0880c0 ] al
or [ 0xfffffffffd001006 ] dl
pop ecx
call r--data
test [ 0xfffffffff46a087d ] edi
call 0x13d8dec
pop ecx
push ebx
adc eax 0xfd0010ad
pop ecx
cmp eax esi
mov [ edi ] eax
push eax
call sub_408d27
movsb [ edi ] [ esi ]
call 0x13db9b7
test [ ebp + 0x39 ] bl
je r-xdata
mov al [ 0xffffffffe800445a ]
test [ edi ] edi
add [ eax ] al
adc eax 0xfd0001a0
pop ecx
test eax eax
mov [ eax ] cl
push 0x1c
adc eax 0x2ffff58
pop ecx
call r--data
in al 0xeb
dec [ ecx - 0x24311b8b ]
inc ebx
push ebx
sub_407b8d
jl r-xdata
fisttp [ ecx - 0x1ab974f8 ]
mov [ ebp - 0x8 ] eax
push ss
pop es
mov [ ebp + 0x5 ] 0xfd001000
test edi edi
vmwrite edi [ edi - 0x74030000 ]
dec esi
or al 0x7c
loope r-xdata
or [ ecx ] al
std
scasd [ edi ]
add [ eax ] al
std
mov edi ebx
cmp esp [ 0x58b0272 ]
push edi
push [ ebp + 0x1 ]
push [ esi ]
call sub_40706b
aam 0x7e
add al 0x1
retn
test [ 0x710f2874 ] edi
add [ edi + ebp + 0x76 ] dh
inc esi
add al 0x85
cmp eax 0x710f2874
add ebp edi
sub_407dfc
add ch bh
pop ecx
cmp eax esi
mov [ edi ] eax
push eax
call sub_408d27
movsb [ edi ] [ esi ]
call 0x13db9b7
test [ ebp + 0x39 ] bl
je r-xdata
push 0xa
pop ecx
lodsb [ esi ]
cmovpe ecx [ ebp - 0x38 ]
jmp r-xdata
sub_407e1e
push eax
push esi
push r--data
adc eax 0x2ffc066
mov [ ebp - 0x20 ] eax
les esi [ ebp - 0x1c ]
jne r-xdata
push eax
call r--data
call sub_4090f3
je r-xdata
stc
in al dx
ja r-xdata
cld
jmp r-xdata
add eax 0xff02ff44
push 0xe
movsb [ edi ] [ esi ]
cmp ecx eax
sbb edi [ 0x3d83c123 ]
or [ ebp - 0x3d ] bl
adc eax 0xfd004234
push 0xfffffff0
pop eax
pop ebp
retn
call 0x13db9b7
test [ ebp + 0x39 ] bl
je r-xdata
test eax eax
jne r-xdata
std
mov eax 0xb97d40
retn
push 0xa
pop ecx
lodsb [ esi ]
cmovpe ecx [ ebp - 0x38 ]
jmp r-xdata
sub_407e37
add al ch
mov dh 0x12
add [ eax ] al
je r-xdata
stc
in al dx
ja r-xdata
cld
jmp r-xdata
add eax 0xff02ff44
push 0xe
movsb [ edi ] [ esi ]
cmp ecx eax
sbb edi [ 0x3d83c123 ]
or [ ebp - 0x3d ] bl
adc eax 0xfd004234
push 0xfffffff0
pop eax
pop ebp
retn
call 0x13db9b7
test [ ebp + 0x39 ] bl
je r-xdata
test eax eax
jne r-xdata
std
mov eax 0xb97d40
retn
push 0xa
pop ecx
lodsb [ esi ]
cmovpe ecx [ ebp - 0x38 ]
jmp r-xdata
sub_407e42
mov eax [ ebp - 0x14 ]
jbe sub_407e4f
mov ecx [ ecx ]
je r-xdata
add ch bh
jmp 0xffffffffff437d17
fcom [ eax - 0x54 ]
call 0x13db857
pop ecx
pop ecx
mov esp [ ds : ebp - 0x18 ]
jbe r-xdata
[ eax - 0x47741375 ]
fmul [ ecx + 0x7d83e0b8 ]
sbb [ eax ] eax
jne r-xdata
call r--data
lodsd [ esi ]
call 0x13d9072
sub_407e9c
inc [ edx ]
dec [ ebx - 0x13745701 ]
mov edi [ eax - 0x3936ccf8 ]
add al 0xcd
fadd [ esi - 0x118bffbc ]
inc ecx
cmp ecx 0xffffffd0
jb r-xdata
mov [ ecx * 8 + rw-data ] 0x74
out dx al
lea esi [ ebp - 0x13067c13 ]
ja r-xdata
add eax 0xff02ff44
push 0xe
movsb [ edi ] [ esi ]
cmp ecx eax
sbb edi [ 0x3d83c123 ]
or [ ebp - 0x3d ] bl
adc eax 0xfd004234
push 0xfffffff0
pop eax
pop ebp
retn
test eax eax
jne r-xdata
std
mov eax 0xb97d40
retn
sub_407f26
xor [ esi + 0x5d ] bl
mov edi edi
push ebp
jbe r-xdata
xor eax eax
les eax [ ebp + 0x8 ]
push 0xfffffffd
sete al
xchg ebp eax
add [ eax ] dl
add ch bh
push eax
call [ r--data ]
pop esi
sub_407f46
ror [ ebx - 0x3f7a02bc ] 0x1
jne r-xdata
[ ebp - 0x3d ]
xor edi [ 0x5a9ca340 ]
inc esp
add [ ebp + 0x3e ] bl
mov edi edi
push esi
stosb [ edi ]
xor esi esi
mov edi rw-data
jle r-xdata
jmp r-xdata
cmc
push esp
add [ eax + eax + 0x1 ] 0x88
push ds
lea eax [ eax + ecx ]
push eax
jge r-xdata
pop edi
pop esi
retn
mov [ ebx ] edx
cmp [ esi - 0x7 ] 0x1
std
mov [ eax ] edi
push 0xf5d
add dh [ eax ]
add edi 0xffffffe5
call 0x13dc50e
pop ecx
pop ecx
js r-xdata
add esi 0x8
stosb [ edi ]
call ebx
push edi
adc eax 0x2ffee7e
and [ esi ] 0x0
movsb [ edi ] [ esi ]
shl [ ebp - 0x1 ] 0x5d
retn
je r-xdata
jl r-xdata
jo r-xdata
jle r-xdata
mov ebx 0x8124fe83
shl [ ebx ] cl
je r-xdata
mov ecx 0x43dc7c00
push eax
jge r-xdata
je r-xdata
cmc
push eax
add [ eax + eax ] 0xce
shr bl 0xf1
jbe r-xdata
xchg edi eax
sbb al ch
push cs
mov eax 0x76590000
clc
cmp edi ebx
jbe r-xdata
mov edx 0xcee47d89
fstp [ ecx ]
sbb eax rw-data
mov [ eax ] bl
call r--data
push 0xffffffe3
call 0x13d90f4
push 0xfdff
call sub_408d4b
movsb [ edi ] [ esi ]
pop ecx
mov esi [ ebp - 0xb ]
lea esi [ esi * 8 + rw-data ]
les ebx [ esi ]
std
pop edi
mov eax [ esi ]
js r-xdata
call [ ebx - 0x75 ]
loopne r-xdata
push ebx
mov esp eax
push eax
add [ ebx ] dh
jmp r-xdata
je r-xdata
retn
sub al [ ecx - 0x3 ]
call r--data
retn
add esi 0x8
jle r-xdata
jl r-xdata
jo r-xdata
mov [ edi ] cl
call 0x3f83e1
shr bl 0xac
push 0xa
call sub_408121
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] ebx
mov ecx 0xa3e67c00
pop ebx
sub_407f57
add [ ebp + 0x3e ] bl
mov edi edi
push esi
stosb [ edi ]
xor esi esi
mov edi rw-data
jle r-xdata
jmp r-xdata
cmc
push esp
add [ eax + eax + 0x1 ] 0x88
push ds
lea eax [ eax + ecx ]
push eax
jge r-xdata
pop edi
pop esi
retn
mov [ ebx ] edx
cmp [ esi - 0x7 ] 0x1
std
mov [ eax ] edi
push 0xf5d
add dh [ eax ]
add edi 0xffffffe5
call 0x13dc50e
pop ecx
pop ecx
js r-xdata
add esi 0x8
stosb [ edi ]
call ebx
push edi
adc eax 0x2ffee7e
and [ esi ] 0x0
movsb [ edi ] [ esi ]
shl [ ebp - 0x1 ] 0x5d
retn
je r-xdata
jl r-xdata
jo r-xdata
jle r-xdata
mov ebx 0x8124fe83
shl [ ebx ] cl
je r-xdata
mov ecx 0x43dc7c00
push eax
jge r-xdata
je r-xdata
cmc
push eax
add [ eax + eax ] 0xce
shr bl 0xf1
jbe r-xdata
xchg edi eax
sbb al ch
push cs
mov eax 0x76590000
clc
cmp edi ebx
jbe r-xdata
mov edx 0xcee47d89
fstp [ ecx ]
sbb eax rw-data
mov [ eax ] bl
call r--data
push 0xffffffe3
call 0x13d90f4
push 0xfdff
call sub_408d4b
movsb [ edi ] [ esi ]
pop ecx
mov esi [ ebp - 0xb ]
lea esi [ esi * 8 + rw-data ]
les ebx [ esi ]
std
pop edi
mov eax [ esi ]
js r-xdata
call [ ebx - 0x75 ]
loopne r-xdata
push ebx
mov esp eax
push eax
add [ ebx ] dh
jmp r-xdata
je r-xdata
retn
sub al [ ecx - 0x3 ]
call r--data
retn
add esi 0x8
jle r-xdata
jl r-xdata
jo r-xdata
mov [ edi ] cl
call 0x3f83e1
shr bl 0xac
push 0xa
call sub_408121
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] ebx
mov ecx 0xa3e67c00
pop ebx
sub_407f94
sar [ ebp + 0x7ec35e5f ] 0x24
cmc
push eax
add [ eax + eax ] 0xce
shr bl 0xf1
jbe r-xdata
call [ ebx - 0x75 ]
loopne r-xdata
push ebx
mov esp eax
push eax
retn
sub al [ ecx - 0x3 ]
sub_407fae
push esi
mov esi rw-data
push edi
jbe r-xdata
mov ecx 0xa3e67c00
pop ebx
retn
test edi edi
mov [ ebx ] edx
cmp [ esi - 0x7 ] 0x1
je r-xdata
add esi 0x8
stosb [ edi ]
call ebx
push edi
adc eax 0x2ffee7e
and [ esi ] 0x0
movsb [ edi ] [ esi ]
jl r-xdata
jo r-xdata
je r-xdata
mov ecx 0x43dc7c00
push eax
jge r-xdata
xchg edi eax
sbb al ch
push cs
mov eax 0x76590000
clc
cmp edi ebx
jbe r-xdata
mov edx 0xcee47d89
fstp [ ecx ]
sbb eax rw-data
mov [ eax ] bl
call r--data
push 0xffffffe3
call 0x13d90f4
push 0xfdff
call sub_408d4b
movsb [ edi ] [ esi ]
pop ecx
mov esi [ ebp - 0xb ]
lea esi [ esi * 8 + rw-data ]
les ebx [ esi ]
std
pop edi
mov eax [ esi ]
js r-xdata
add [ ebx ] dh
jmp r-xdata
jmp r-xdata
je r-xdata
call r--data
retn
pop edi
pop esi
retn
add esi 0x8
jle r-xdata
jl r-xdata
jo r-xdata
mov [ edi ] cl
call 0x3f83e1
shr bl 0xac
push 0xa
call sub_408121
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] ebx
sub_407fbe
add [ ebp + ecx - 0x56 ] esi
call ebx
push edi
adc eax 0x2ffee7e
and [ esi ] 0x0
movsb [ edi ] [ esi ]
add esi 0x8
jl r-xdata
jo r-xdata
je r-xdata
mov ecx 0x43dc7c00
push eax
jge r-xdata
xchg edi eax
sbb al ch
push cs
mov eax 0x76590000
clc
cmp edi ebx
jbe r-xdata
mov edx 0xcee47d89
fstp [ ecx ]
sbb eax rw-data
mov [ eax ] bl
call r--data
push 0xffffffe3
call 0x13d90f4
push 0xfdff
call sub_408d4b
movsb [ edi ] [ esi ]
pop ecx
mov esi [ ebp - 0xb ]
lea esi [ esi * 8 + rw-data ]
les ebx [ esi ]
std
pop edi
mov eax [ esi ]
js r-xdata
add [ ebx ] dh
jmp r-xdata
jmp r-xdata
je r-xdata
call r--data
retn
pop edi
pop esi
retn
add esi 0x8
jle r-xdata
jl r-xdata
jo r-xdata
mov [ edi ] cl
call 0x3f83e1
shr bl 0xac
push 0xa
call sub_408121
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] ebx
mov ecx 0xa3e67c00
pop ebx
retn
sub_408081
les ebx [ esi ]
jne r-xdata
stosb [ edi ]
call 0xffffffffff436e48
pop ecx
xchg ebp eax
mov al [ 0x57fd000f ]
call r--data
pop ecx
movsb [ edi ] [ esi ]
test eax eax
jne r-xdata
cld
push edi
call 0x3f9148
pop ecx
adc eax 0x2fffe3f
mov [ eax ] 0xfd0c
mov [ eax + 0x740bebe4 ] esp
jmp r-xdata
sub_4080cf
call 0x3f82fc
pop ecx
mov edi edi
push ebp
jbe r-xdata
call r--data
retn
mov eax [ ebp - 0xb ]
push esi
lea esi [ eax + edi ]
push eax
jge r-xdata
std
adc [ eax ] al
std
cmp [ esi ] 0x0
mov [ ebx ] dl
jb r-xdata
or [ ebx ] ch
push eax
int1
cmp edx 0x10fd00
add eax 0x14
mov cl 0x72
jmp r-xdata
push eax
call sub_4080d0
movsb [ edi ] [ esi ]
test eax eax
jne r-xdata
push 0x11
call sub_408d0f
movsb [ edi ] [ esi ]
push [ esi ]
inc ecx
std
pop esi
pop ebp
retn
sub_408121
test al 0x8
sub edx [ eax - 0xf ]
cmp edx 0x10fd00
jb r-xdata
or [ ebx ] ch
push eax
int1
add eax 0x14
mov cl 0x72
jmp r-xdata
inc ecx
std
pop esi
pop ebp
retn
sub_4081a2
dec ebx
or [ ebp - 0x41 ] dh
mov ebx 0x80fd0000
cmp edx 0xffffffdd
jae r-xdata
jo r-xdata
mov esi [ edi ]
shr ebx cl
lea esi [ ecx + 0x2ef70402 ]
and [ eax + edi * 4 - 0x47 ] ebx
dec [ ecx ]
jne r-xdata
mov al [ 0xfffffffffce383f8 ]
loopne r-xdata
add al 0xc6
mov ecx [ ebp + 0x8 ]
fcomp [ ecx ]
jmp r-xdata
add al 0x6a
retn 0x7589
mov ebx [ ebp - 0x8 ]
cmp al 0xfb
push ss
lea ecx [ edx + eax - 0x7 ]
not ebx
and [ ecx - 0x48 ] esp
les eax [ eax ]
std
add dh bh
or [ eax - 0xab274fa ] ecx
and [ ecx + 0x4 ] ebx
jbe r-xdata
cld
or al 0x8b
scasb [ edi ]
or [ ebx + 0x4d8bf95b ] cl
cld
dec [ ebp - 0xc ]
mov [ edi - 0xeaa74fc ] esp
mov ebx [ edx + 0x4 ]
jbe r-xdata
int1
mov esi [ ecx + 0x4 ]
or [ ecx + 0x4d8908ae ] cl
add [ ebx + 0x407c1d1 ] ecx
dec edx
add [ edi ] 0x3f
jbe r-xdata
mov [ ebp - 0xc ] ebx
test [ edi + 0x2b00fd00 ] ecx
jne r-xdata
mov esp [ eax - 0x31c7c08 ]
xchg edi eax
aas
pop edx
sub_4081d1
stc
not ebx
and [ ecx - 0x48 ] esp
les eax [ eax ]
std
add dh bh
or [ eax - 0xab274fa ] ecx
and [ ecx + 0x4 ] ebx
jbe r-xdata
cld
or al 0x8b
scasb [ edi ]
or [ ebx + 0x4d8bf95b ] cl
cld
dec [ ebp - 0xc ]
mov [ edi - 0xeaa74fc ] esp
mov ebx [ edx + 0x4 ]
jbe r-xdata
int1
mov esi [ ecx + 0x4 ]
or [ ecx + 0x4d8908ae ] cl
add [ ebx + 0x407c1d1 ] ecx
dec edx
add [ edi ] 0x3f
jbe r-xdata
mov esp [ eax - 0x31c7c08 ]
mov [ ebp - 0xc ] ebx
test [ edi + 0x2b00fd00 ] ecx
jne r-xdata
xchg edi eax
aas
pop edx
add al 0x6a
retn 0x7589
mov ebx [ ebp - 0x8 ]
cmp al 0xfb
sub_408246
salc
jbe r-xdata
cmp ebx edx
mov [ esi - 0x75 ] ebx
dec ebp
int1
mov esi [ ecx + 0x4 ]
jbe r-xdata
std
add [ ebx ] ch
jne r-xdata
add al 0x6a
retn 0x7589
mov ebx [ ebp - 0x8 ]
cmp al 0xfb
sub_40825a
mov esi 0x80fd0000
cmp ebx 0xffffffdd
jae r-xdata
lea ecx [ ebx + 0x1d ]
shr esi cl
mov esi [ esi ]
shr esi cl
imul [ ebx ]
and [ eax + edi * 4 - 0x47 ] esi
dec [ ebx + eax - 0x7 ]
jne r-xdata
dec esp
inc [ eax + ecx * 4 ]
dec ebp
inc cl
mov [ ecx + 0x7830402 ] dh
and [ ebx + 0x25 ] dh
or al 0x8b
mov [ eax ] cs
mov ecx [ ecx - 0x7 ]
mov [ esi + 0x4 ] ecx
jbe r-xdata
jbe r-xdata
imul [ ebx ]
and [ eax + edi * 4 + 0x39 ] esi
add ecx [ ebx + eax + 0x4 ]
mov [ esi ] al
mov ecx [ ebp - 0xb ]
mov esi [ eax + 0x16312108 ]
sbb cl [ ebp - 0x112ce2b5 ]
add [ ecx ] bh
lsl esi [ ebp + 0x7d00bb0c ]
add [ eax ] al
push ebx
lodsb [ esi ]
call esi
mov esi eax
cwde
cmpsd [ esi ] [ edi ]
inc esp
std
mov eax [ 0xb98d28 ]
mov edx 0x8000fd00
rcl [ edi ] cl
or [ eax + 0x8 ] edx
pop esp
sub [ ebp + 0x408bfd44 ] cl
adc [ esi + 0xd ] dh
cwde
cmpsd [ esi ] [ edi ]
mov ecx 0x75a48300
les eax [ eax ]
add ch bh
add [ ecx + rw-data ] ah
mov edi [ ebp - 0x41b701f0 ]
mov eax [ 0xb98d28 ]
mov ecx [ eax - 0x13 ]
cmp [ ecx + 0x43 ] 0xfd
jne r-xdata
str [ eax + 0x46ca8b0e ]
add [ eax ] al
add [ ebp - 0x2d ] bh
jmp r-xdata
add [ edi ] 0x20
jae r-xdata
or al 0x8b
mov [ ebx + ecx * 4 ] es
dec ecx
cmc
mov [ esi + 0x8 ] ecx
jbe r-xdata
jle r-xdata
sbb [ ebp - 0x2a5e01fc ] 0xffffff8d
inc esp
add [ esi + 0x78 ] bh
and [ ecx + 0x4 ] esi
dec ebp
cmc
cmp [ ebp + 0xf ] 0xfd
jne r-xdata
jge r-xdata
add ch bh
or al 0xeb
dec [ ebx + 0x7d7e085d ]
hlt
pop edi
pop esi
xor al 0xc3
mov eax [ rw-data ]
push esi
jbe r-xdata
or bh bh
mov [ ebp + 0x53 ] ah
push 0xfffffffd
push [ eax + 0xc ]
add dl dh
mov eax [ rw-data ]
dec [ ebp + 0x2006a10 ]
xor eax 0xb98bd0
adc eax rw-data
salc
enter 0x4c8d 0xec
in al dx
push ecx
lea esi [ ebp + 0x15505114 ]
inc edx
add ch bh
mov eax [ ebp + 0x8 ]
jle r-xdata
test [ edi + 0x28a100b9 ] ah
jo r-xdata
hlt
lea esi [ edi - 0x2ff4520 ]
add [ eax - 0x7b72e82d ] al
mov eax 0x39
add [ eax + 0x4d8b16d3 ] al
or ah dh
pop ecx
add al 0x8d
mov bh 0xe0
mov edx 0x8000fd00
rcl [ edi ] cl
lea eax [ eax + edi * 4 + 0x39 ]
lea esi [ edi - 0x2ff4420 ]
xor eax rw-data
pop esi
mov [ edi - 0x99402bc ] ah
adc al 0xfe
xor eax 0xb9a788
push 0xbcc4
push 0xfffffff5
push [ rw-data ]
test [ edi + 0x335700b9 ] ah
add bh [ ebx ]
call [ r--data ]
jbe r-xdata
add bh bh
lea edx [ eax ]
push 0x0
add dh [ 0xb98bd0 ]
or al 0xff
add [ ecx + 0x44a798c0 ] cl
std
pop ebx
add [ ebx + 0x34 ] ch
adc al 0x8b
sub_4084b9
xchg edi eax
add al 0x68
add ch bl
add [ eax ] al
push 0x1000fd
stosb [ edi ]
call [ rw-data ]
mov [ ebx - 0x7738c4f4 ] edi
adc bh bh
jbe r-xdata
adc [ eax ] al
push edi
push [ rw-data ]
add dl [ 0xbc23b0 ]
jmp r-xdata
xor edi [ 0xfffffffff88378eb ]
xchg esp eax
cmpsd [ esi ] [ edi ]
inc esp
std
adc [ ebx + 0x44a77935 ] cl
add [ esi - 0x78 ] bl
cmpsd [ esi ] [ edi ]
inc esp
std
imul esi esi 0x14
sub_4084e7
or bh bh
je r-xdata
cld
add [ eax ] al
push 0xffffffc2
mov [ esi - 0x7 ] edi
inc [ rw-data ]
mov edi [ ebx + 0x2088310 ]
mov eax esi
pop edi
mov [ 0xffffffffa8ff8bc3 ] eax
mov ebp esp
push ecx
lodsb [ esi ]
mov ecx [ ebp + 0x8 ]
jbe r-xdata
jmp 0x1087f588
add al 0x83
cmp eax 0x9754a08
push 0x4
mov eax [ esi ]
push 0xfd1000
shl edi 0xf2
add edi [ ecx + 0xc ]
xchg ebp eax
add [ eax - 0xa80300 ] al
adc eax r--data
js r-xdata
or al 0x95
or [ ebx - 0x55 ] dl
mov esi [ ecx + 0x10 ]
stosb [ edi ]
xor ebx ebx
jge r-xdata
jne r-xdata
jmp r-xdata
add eax eax
inc ebx
js r-xdata
jbe r-xdata
jo r-xdata
jle r-xdata
inc esp
add [ edx ] al
adc eax 0xbc23b0
jmp r-xdata
add bl ch
fwait
jle r-xdata
imul eax eax 0x2f9
jo r-xdata
retn
add [ eax - 0x3 ] dh
add [ ecx - 0x5c4feab ] cl
ja r-xdata
mov [ ebp - 0x8 ] eax
xor [ esp + edi * 8 ] al
add [ edx - 0x3e ] ch
xor edi [ 0xfffffffff88378eb ]
xchg esp eax
cmpsd [ esi ] [ edi ]
inc esp
std
adc [ ebx + 0x44a77935 ] cl
add [ esi - 0x78 ] bl
cmpsd [ esi ] [ edi ]
inc esp
std
imul esi esi 0x14
je r-xdata
add bh bh
call 0xfffffffffd81ae76
mov [ esi + 0x10 ] eax
mov bh 0x74
cmpsd [ esi ] [ edi ]
mov [ eax + 0x8 ] eax
clc
mov ecx edx
sub esi [ edx ]
shr ecx 0xc
jo r-xdata
add al 0x89
inc ecx
cmc
adc [ ecx + 0x7e ] al
dec eax
clc
inc ecx
adc [ esi - 0x128a74aa ] ch
or [ ecx + 0x648304bc ] cl
arpl [ eax + eax + 0x33 ] ax
add al [ edi - 0x77 ]
mov esp 0xc463
std
mov al [ esi + 0x43 ]
ja r-xdata
add [ eax ] dl
std
add [ ecx + 0x75 ] cl
mov edx [ ebp - 0x4 ]
jbe r-xdata
inc cl
jns r-xdata
push edi
mov edi [ ebp - 0xf ]
mov edx edi
sub ebp [ esp + ecx - 0x3e15397d ]
0x69ca760f 0xf9c9
rcr ah cl
push eax
or [ ebx + 0x5b5e5f3e ] cl
xor al 0xc3
mov edi edi
test al 0x8b
in al dx
adc [ ecx ] 0xc
mov ecx [ ebp - 0xb ]
clc
add eax 0x105
jo r-xdata
mov eax [ ebp - 0xb ]
mov [ esi + 0x43 ] cl
mov [ ebx ] al
or [ eax - 0x7 ] edi
mov edx 0x80fd0000
mov ecx ebx
0x50dcd2f7 0x8b08
mov eax [ ecx + 0x10 ]
scasb [ edi ]
push esi
mov esi [ ebp - 0x13 ]
or al 0x8b
dec ebp
cmc
lea ecx [ edx + 0xc ]
je r-xdata
or al 0x89
mov ch 0x4
mov [ ecx - 0xb ] eax
sub_408b16
dec edx
or [ ebp - 0x5d ] dh
cmp [ ebp - 0xa ] 0x0
jne r-xdata
add [ eax - 0x98afff5 ] 0xbf
add [ eax ] al
std
or [ ebx + 0x9ef2ece ] 0x3b
jbe r-xdata
mov ecx [ ebp - 0x4 ]
jo r-xdata
jo r-xdata
mov bh 0x4
mov [ ecx - 0xb ] edx
mov ecx [ edx + 0x4 ]
mov edi 0x8000fd00
rcl [ edx ] cl
mov ecx [ ebp - 0x4 ]
hlt
cmp esi 0xffffffdd
mov [ esi + eax - 0x7 ] cl
jge r-xdata
mov ah al
std
add [ eax ] al
out 0x3b eax
sbb eax rw-data
jne r-xdata
loopne r-xdata
jo r-xdata
mov ecx [ ebp - 0x4 ]
jne r-xdata
std
add [ eax ] al
je r-xdata
add [ ecx + 0x75c985c3 ] ecx
cmp [ eax ] eax
add [ eax ] al
jo r-xdata
mov cl [ esi + eax - 0x7 ]
mov [ ebp + 0xb ] cl
add eax ecx
retn
add [ eax ] al
std
add [ ecx + 0x5f ] bl
mov [ 0x188b5b5e ] al
pop ebp
push ecx
cmp [ edx + ecx ] al
shl [ ecx ] cl
sbb [ ebx ] eax
jns 0xbb59c2d
mov esp [ eax + 0x114d8b08 ]
and [ ebx + 0x4 ] ecx
push ss
add ecx [ ebx + 0x7d83f55d ]
clc
std
stc
add al 0x89
test [ ebx + ecx * 4 ] al
dec edx
stc
mov edi [ edx + 0x8 ]
je r-xdata
lea esi [ ebx - 0x2ff4120 ]
add [ eax + 0x370913d3 ] al
mov esi [ eax - 0x76367a08 ]
or ecx [ ecx + 0x114c740a ]
cld
push ss
add ecx [ ebx + 0x758b054d ]
or [ edi ] cl
jns r-xdata
and [ esi ] al
add [ eax ] al
jge r-xdata
add [ eax ] al
std
mov ecx [ ebp - 0xc ]
jo r-xdata
add al 0x74
push ecx
mov esi [ es : edx ]
shr ebx cl
mov esi [ eax - 0x3a837204 ]
add al 0xf7
shl [ ebp + ebx * 2 - 0x14 ] cl
and esp [ ecx - 0x5e76bb78 ]
mov [ esi + edi * 8 - 0xe ] al
jne r-xdata
add al 0x8b
int1
mov eax [ esp + eax - 0x760ab577 ]
jpe r-xdata
mov ecx [ edx + 0x8 ]
jbe r-xdata
mov ebx [ ebp - 0xb ]
cmp [ ebp - 0x8 ] 0xfffffffd
mov esi [ eax - 0xaa27414 ]
and [ ebx ] ecx
jmp r-xdata
je r-xdata
jmp [ eax ]
sub [ esi ] 0xef
or [ ebx - 0x7 ] edi
sub_408c3a
pop ebp
or al 0x56
jbe r-xdata
clc
test ecx ecx
mov [ ebx + ecx * 4 ] edx
xlat
adc eax 0xfd002174
mov [ ebp - 0x1 ] 0xfc
test eax eax
jl r-xdata
or [ ebx ] dh
enter 0x7bc0 0x44
std
push edi
mov eax [ esi ]
cmp eax [ ebp - 0x1 ]
add [ edx ] bh
inc ebp
hlt
add [ eax ] eax
std
mov ecx [ ebp + 0x10 ]
jo r-xdata
jg sub_408d0f
dec esi
stc
add ecx edi
xor esi ecx
cmp al ch
add ebx [ esi ]
call 0xffffffff8c3d3b19
pop ebx
int1
mov edi [ eax + 0x7ed88bf8 ]
clc
sub_408c92
mov [ ebp - 0x18 ] eax
je r-xdata
xor esi ecx
cmp al ch
in al dx
add [ esi ] 0xfffffffe
je r-xdata
mov edi [ eax - 0x59a1a00c ]
mov esp ebp
pop ebp
mov [ ds : ebp - 0xc ] 0xfd
push ss
leave
jo r-xdata
add ebx [ esi ]
add [ ebp + 0x4c8b5bf9 ] cl
jpo r-xdata
and [ eax ] eax
std
mov [ ebp - 0x1 ] 0xfc
test eax eax
jl r-xdata
lea eax [ ebx + edi * 2 + 0x10 ]
mov [ ebp + 0xd ] eax
mov eax [ eax ]
mov [ eax - 0x76367a08 ] edi
adc al 0x8b
xlat
adc eax 0xfd002174
add [ eax ] eax
std
mov ecx [ ebp + 0x10 ]
jo r-xdata
jg sub_408d0f
dec esi
stc
add ecx edi
call 0xffffffff8c3d3b19
pop ebx
int1
mov edi [ eax + 0x7ed88bf8 ]
clc
sub_408d0f
mov ecx [ ebp - 0xb ]
cmp [ ecx ] 0xe06d8e63
jne r-xdata
or al 0x8b
push esi
cmc
add ecx edi
xor esi ecx
cmp ch al
pop ds
cmp [ rw-data ] 0x0
mov [ eax ] esp
push rw-data
call sub_40cb0b
jle r-xdata
iretd
add al 0x85
cmp eax 0xa88b0f74
or [ edx + 0x1 ] ch
scasd [ edi ]
call [ rw-data ]
cmp [ ecx ] 0x8
mov ecx [ ebp - 0xf ]
call 0x13dae62
sub_408d4b
mov eax [ ebp - 0xf ]
cmp [ eax + 0xc ] ebx
mov [ edx ] edx
push rw-data
push edi
jbe r-xdata
les eax [ eax * 4 - 0x74f08bc3 ]
test al 0x8
push 0x1
scasd [ edi ]
call [ rw-data ]
cmp [ ecx ] 0x8
mov ecx [ ebp - 0xf ]
call 0x13dae62
mov ecx eax
adc eax 0xfd00211a
mov eax [ ebp + 0xc ]
jbe r-xdata
and ch bh
add cl ch
sbb al 0x2
clc
mov [ ebp + 0x7e068b0c ] esi
clc
sub_408d4f
pop eax
or al 0x89
adc ch [ eax - 0x40 ]
xchg [ eax + eax + 0x57 ] al
jbe r-xdata
les eax [ eax * 4 - 0x74f08bc3 ]
test al 0x8
push 0x1
scasd [ edi ]
call [ rw-data ]
cmp [ ecx ] 0x8
mov ecx [ ebp - 0xf ]
call 0x13dae62
mov ecx eax
adc eax 0xfd00211a
mov eax [ ebp + 0xc ]
jbe r-xdata
and ch bh
add cl ch
sbb al 0x2
clc
mov [ ebp + 0x7e068b0c ] esi
clc
sub_408def
mov ebp esp
adc eax 0xfd0004a9
push [ ebp + 0x8 ]
adc eax 0xfd0002f6
push [ rw-data ]
call sub_40bfcc
xchg ebp eax
inc [ eax ]
add ch bh
call eax
cmp [ ecx ] 0xc
pop ebp
retn
sub_408e17
push ebp
mov edx [ ecx ]
push 0xbc2c60
call [ r--data ]
js r-xdata
je r-xdata
je r-xdata
push edi
mov [ 0x28bc35d ] al
push ebp
pop ebp
retn
xchg ebp eax
push eax
sub al 0x41
std
push eax
call [ r--data ]
js r-xdata
jne r-xdata
je r-xdata
add [ eax + eax - 0x18 ] 0xffffffc3
xor [ eax ] eax
add [ ebp - 0x2ffff01 ] dl
call eax
cmp [ ecx ] 0xc
pop ebp
retn
adc eax 0xfd0002f6
push [ rw-data ]
call sub_40bfcc
xchg ebp eax
inc [ eax ]
add ch bh
add dh [ ebp + 0x8 ]
[ 0x28bc35d ]
sub_408e77
shl [ edi + edi * 8 - 0x1 ] 0xd0
mov edi ebx
pop esi
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
push esi
jbe r-xdata
cmp [ ebx ] 0x4
cmp esi [ ebp - 0xb ]
jb r-xdata
call eax
inc [ edx ]
inc [ ebx + 0x44a7813d ]
add ch bh
or [ ebx ] dh
cmp eax 0x3d850feb
jne r-xdata
xor edi [ 0xffffffffe56ac35d ]
push 0xbc3f20
call 0x3f90d0
push 0xfffffff5
call 0xffffffffff4380d6
pop ecx
sbb [ eax + 0x263300fc ] 0x43
cmp [ rw-data ] ebx
test ch al
add ch bh
add [ ecx + 0x448da51d ] cl
add [ edi + 0x45 ] dh
adc [ edx + rw-data ] ah
jle r-xdata
xchg ebp eax
jl sub_408ebb
pop esi
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
add eax 0x78
cmpsd [ esi ] [ edi ]
inc esp
std
add [ ecx + ebx - 0x6b ] dh
js r-xdata
mov esi ebx
cmp [ eax + 0x740e74e0 ] edi
jge r-xdata
or al 0x0
test [ ebp - 0xff0300 ] ebx
xor eax rw-data
adc eax 0xfd002fcd
pop ecx
mov edi eax
inc esp
std
call 0x13dca50
pop ecx
test [ 0xfffffffffd6a0c74 ] edi
push 0x2
push 0xfffffffd
call [ rw-data ]
call 0x3f9afc
pop ecx
mov edi edi
push ebp
jbe r-xdata
pop ecx
je r-xdata
inc esp
std
call 0x13dca50
pop ecx
test [ 0xffffffff88ff0a74 ] edi
or bh bh
adc eax rw-data
movsb [ edi ] [ esi ]
call 0x13dcc4b
push rw-data
push r--data
adc eax 0x2ffffa1
pop ecx
pop ecx
test [ 0x5b684275 ] edi
mov esi 0x3e150040
cmp eax 0xd4b8fd00
sub edi [ eax + eax - 0x2726fb39 ]
sub eax [ ecx - 0x3 ]
call 0xffffffffff438e6a
cmp [ rw-data ] 0xfffffffd
call ecx
cmp [ ebx ] 0x4
cmp esi [ ebp - 0xf ]
jb r-xdata
clc
add dh [ 0xb9a76c ]
call r--data
cmp [ ecx ] 0xc
cmp [ ebp + 0x19 ] edi
jne r-xdata
mov [ eax + 0x1d4589d8 ] eax
mov esi eax
mov [ eax + 0x257d8bdc ] ecx
jmp r-xdata
push r--data
inc ebp
clc
sub eax [ ecx - 0x3 ]
call 0xffffffffff438e6a
pop ecx
push r--data
inc ebp
or [ ecx + eax * 2 ] ch
std
call 0xffffffffff438e6a
pop ecx
fadd [ ebp - 0x878bfe ]
enter 0xa76c 0x44
std
call 0x13dbf47
pop ecx
mov ecx [ 0x74dc7589 ]
jge r-xdata
ja r-xdata
test eax eax
je r-xdata
push esi
mov ecx [ 0xfffffffffb8b0beb ]
test ecx ecx
je r-xdata
test [ 0xfffffffff38b1075 ] edi
je r-xdata
sub esi 0xfffffff9
je r-xdata
clc
mov [ ebp - 0x24 ] esi
mov [ eax - 0x6117c20 ] ecx
jne r-xdata
add bh bh
call sub_408eab
jle r-xdata
in al 0x89
sbb al 0x89
inc ebp
sbb eax 0x8889f08b
fmul [ ebx - 0x6014da83 ]
pop ecx
retn
cmc
call 0xffffffffff4380d6
add dl [ 0xbc2a64 ]
int3
add [ edx - 0xb ] ch
call 0xffffffffff437ffc
pop ecx
dec [ eax + 0xfce808 ]
or al 0x5d
mov edi edi
push ebp
jbe r-xdata
push 0x0
add dh [ ebp + 0x8 ]
push 0x0
xchg edi eax
add edi edi
jne r-xdata
call [ ebp + 0x76 ]
in al dx
call 0xffffffffff438f30
add esp 0xfffffff1
pop ebp
retn
sub_408eab
mov edi edi
test al 0x8b
in al dx
call 0x3f9afc
pop ecx
mov edi edi
push ebp
jbe r-xdata
inc esp
std
call 0x13dca50
pop ecx
test [ 0xffffffff88ff0a74 ] edi
or bh bh
adc eax rw-data
movsb [ edi ] [ esi ]
call 0x13dcc4b
push rw-data
push r--data
adc eax 0x2ffffa1
pop ecx
pop ecx
test [ 0x5b684275 ] edi
mov esi 0x3e150040
cmp eax 0xd4b8fd00
sub edi [ eax + eax - 0x2726fb39 ]
sub eax [ ecx - 0x3 ]
call 0xffffffffff438e6a
cmp [ rw-data ] 0xfffffffd
ja r-xdata
push esi
mov ecx [ 0xfffffffffb8b0beb ]
xor edi [ 0xffffffffe56ac35d ]
push 0xbc3f20
call 0x3f90d0
push 0xfffffff5
call 0xffffffffff4380d6
pop ecx
sbb [ eax + 0x263300fc ] 0x43
cmp [ rw-data ] ebx
test ch al
add ch bh
add [ ecx + 0x448da51d ] cl
add [ edi + 0x45 ] dh
adc [ edx + rw-data ] ah
jle r-xdata
xchg ebp eax
jl sub_408ebb
jne r-xdata
add bh bh
call eax
cmp [ ebx ] 0x4
cmp esi [ ebp - 0xb ]
jb r-xdata
cmp [ eax + 0x740e74e0 ] edi
jge r-xdata
or al 0x0
test [ ebp - 0xff0300 ] ebx
xor eax rw-data
adc eax 0xfd002fcd
pop ecx
mov edi eax
inc esp
std
call 0x13dca50
pop ecx
test [ 0xfffffffffd6a0c74 ] edi
push 0x2
push 0xfffffffd
call [ rw-data ]
pop ecx
retn
cmc
call 0xffffffffff4380d6
add dl [ 0xbc2a64 ]
int3
test eax eax
je r-xdata
mov edi ebx
pop esi
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
push esi
jbe r-xdata
clc
add dh [ 0xb9a76c ]
call r--data
cmp [ ecx ] 0xc
cmp [ ebp + 0x19 ] edi
jne r-xdata
mov [ eax + 0x1d4589d8 ] eax
mov esi eax
mov [ eax + 0x257d8bdc ] ecx
jmp r-xdata
push r--data
inc ebp
clc
sub eax [ ecx - 0x3 ]
call 0xffffffffff438e6a
pop ecx
push r--data
inc ebp
or [ ecx + eax * 2 ] ch
std
call 0xffffffffff438e6a
pop ecx
fadd [ ebp - 0x878bfe ]
enter 0xa76c 0x44
std
call 0x13dbf47
pop ecx
mov ecx [ 0x74dc7589 ]
jge r-xdata
pop ecx
je r-xdata
inc [ edx ]
inc [ ebx + 0x44a7813d ]
add ch bh
or [ ebx ] dh
cmp eax 0x3d850feb
jne r-xdata
je r-xdata
sub esi 0xfffffff9
je r-xdata
clc
mov [ ebp - 0x24 ] esi
mov [ eax - 0x6117c20 ] ecx
add eax 0x78
cmpsd [ esi ] [ edi ]
inc esp
std
add [ ecx + ebx - 0x6b ] dh
js r-xdata
pop esi
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
mov esi ebx
call sub_408eab
jle r-xdata
in al 0x89
sbb al 0x89
inc ebp
sbb eax 0x8889f08b
fmul [ ebx - 0x6014da83 ]
call ecx
cmp [ ebx ] 0x4
cmp esi [ ebp - 0xf ]
jb r-xdata
add [ edx - 0xb ] ch
call 0xffffffffff437ffc
pop ecx
dec [ eax + 0xfce808 ]
or al 0x5d
mov edi edi
push ebp
jbe r-xdata
test ecx ecx
je r-xdata
test [ 0xfffffffff38b1075 ] edi
push 0x0
add dh [ ebp + 0x8 ]
push 0x0
xchg edi eax
add edi edi
jne r-xdata
call [ ebp + 0x76 ]
in al dx
call 0xffffffffff438f30
add esp 0xfffffff1
pop ebp
retn
sub_408ebb
cmpsd [ esi ] [ edi ]
inc esp
std
call 0x13dca50
pop ecx
test [ 0xffffffff88ff0a74 ] edi
or bh bh
adc eax rw-data
movsb [ edi ] [ esi ]
call 0x13dcc4b
push rw-data
push r--data
adc eax 0x2ffffa1
pop ecx
pop ecx
test [ 0x5b684275 ] edi
mov esi 0x3e150040
cmp eax 0xd4b8fd00
sub edi [ eax + eax - 0x2726fb39 ]
sub eax [ ecx - 0x3 ]
call 0xffffffffff438e6a
cmp [ rw-data ] 0xfffffffd
pop ecx
je r-xdata
xor edi [ 0xffffffffe56ac35d ]
push 0xbc3f20
call 0x3f90d0
push 0xfffffff5
call 0xffffffffff4380d6
pop ecx
sbb [ eax + 0x263300fc ] 0x43
cmp [ rw-data ] ebx
test ch al
add ch bh
add [ ecx + 0x448da51d ] cl
add [ edi + 0x45 ] dh
adc [ edx + rw-data ] ah
jle r-xdata
xchg ebp eax
jl sub_408ebb
cmp [ eax + 0x740e74e0 ] edi
jge r-xdata
or al 0x0
test [ ebp - 0xff0300 ] ebx
xor eax rw-data
adc eax 0xfd002fcd
pop ecx
mov edi eax
inc esp
std
call 0x13dca50
pop ecx
test [ 0xfffffffffd6a0c74 ] edi
push 0x2
push 0xfffffffd
call [ rw-data ]
clc
add dh [ 0xb9a76c ]
call r--data
cmp [ ecx ] 0xc
cmp [ ebp + 0x19 ] edi
jne r-xdata
mov [ eax + 0x1d4589d8 ] eax
mov esi eax
mov [ eax + 0x257d8bdc ] ecx
jmp r-xdata
push r--data
inc ebp
clc
sub eax [ ecx - 0x3 ]
call 0xffffffffff438e6a
pop ecx
push r--data
inc ebp
or [ ecx + eax * 2 ] ch
std
call 0xffffffffff438e6a
pop ecx
fadd [ ebp - 0x878bfe ]
enter 0xa76c 0x44
std
call 0x13dbf47
pop ecx
mov ecx [ 0x74dc7589 ]
jge r-xdata
je r-xdata
sub esi 0xfffffff9
je r-xdata
clc
mov [ ebp - 0x24 ] esi
mov [ eax - 0x6117c20 ] ecx
call sub_408eab
jle r-xdata
in al 0x89
sbb al 0x89
inc ebp
sbb eax 0x8889f08b
fmul [ ebx - 0x6014da83 ]
add [ edx - 0xb ] ch
call 0xffffffffff437ffc
pop ecx
dec [ eax + 0xfce808 ]
or al 0x5d
mov edi edi
push ebp
jbe r-xdata
push 0x0
add dh [ ebp + 0x8 ]
push 0x0
xchg edi eax
add edi edi
jne r-xdata
call [ ebp + 0x76 ]
in al dx
call 0xffffffffff438f30
add esp 0xfffffff1
pop ebp
retn
sub_408fa2
div [ edx + 0x57 ]
adc eax 0xfd002f94
cmp [ esi ] eax
je r-xdata
add [ eax ] al
cmp esi edi
jb r-xdata
push [ rw-data ]
inc esp
std
call 0x13dbf47
mov edi eax
adc eax 0xfd002fcd
pop ecx
mov edi eax
test [ ebp - 0xff0300 ] ebx
xor eax rw-data
push [ esi ]
call sub_40bf2c
push r--data
inc ebp
clc
sub eax [ ecx - 0x3 ]
call 0xffffffffff438e6a
pop ecx
push r--data
inc ebp
or [ ecx + eax * 2 ] ch
std
call 0xffffffffff438e6a
pop ecx
fadd [ ebp - 0x878bfe ]
enter 0xa76c 0x44
std
call 0x13dbf47
pop ecx
mov ecx [ 0x74dc7589 ]
jge r-xdata
je r-xdata
cmp [ eax + 0x740e74e0 ] edi
jge r-xdata
jbe r-xdata
call sub_40bf2c
mov ebx edi
call edi
dec eax
jo r-xdata
call r--data
je r-xdata
clc
mov [ eax - 0x6117c20 ] ecx
call sub_408eab
jle r-xdata
in al 0x89
sbb al 0x89
inc ebp
sbb eax 0x8889f08b
fmul [ ebx - 0x6014da83 ]
add dh [ 0xb9a76c ]
call r--data
cmp [ ecx ] 0xc
cmp [ ebp + 0x19 ] edi
jne r-xdata
clc
mov [ eax + 0x1d4589d8 ] eax
mov esi eax
mov [ eax + 0x257d8bdc ] ecx
jmp r-xdata
add [ edx - 0xb ] ch
call 0xffffffffff437ffc
pop ecx
dec [ eax + 0xfce808 ]
or al 0x5d
mov edi edi
push ebp
jbe r-xdata
mov [ ebp - 0x24 ] esi
sub esi 0xfffffff9
push 0x0
add dh [ ebp + 0x8 ]
push 0x0
xchg edi eax
add edi edi
jne r-xdata
call [ ebp + 0x76 ]
in al dx
call 0xffffffffff438f30
add esp 0xfffffff1
pop ebp
retn
sub_4091b7
rdpmc
cmp eax 0xad505050
xor ecx [ ebx ]
push esi
adc eax 0xfd003fa6
sub esi 0x3b
inc dh
push 0x3
inc esp
je r-xdata
je r-xdata
je r-xdata
inc esp
std
push 0xbc3204
sub ecx eax
lodsb [ esi ]
push eax
call r--data
cmp [ ecx ] 0x14
test eax eax
mov [ ecx ] edx
xor esi esi
stosd [ edi ]
push esi
push esi
push esi
stosd [ edi ]
call 0x13d99ac
add esp 0xffffffe9
jmp r-xdata
mov eax [ ebp - 0x4 ]
add dh [ eax * 8 + rw-data ]
push ebx
stosb [ edi ]
stosd [ edi ]
push esi
push esi
push esi
stosd [ edi ]
call 0x13d99ac
add esp 0xffffffe9
lea eax [ eax + eax - 0x56 ]
call 0x13dd20b
add esp 0xfffffff1
test eax eax
push esi
push 0xbc3200
push ebx
push edi
adc eax 0xfd003e35
add esp 0xc
js r-xdata
call 0x13dd04f
add esp 0xfffffff1
test eax eax
je r-xdata
inc esp
add [ ebx - 0x56 ] dl
push esi
push esi
push esi
stosd [ edi ]
push esi
call r--data
cmp [ ecx ] 0x14
push 0x1dd10
push r--data
stosb [ edi ]
call 0x13dcee6
add esp 0xfffffff1
jmp r-xdata
mov es [ ebp + edi * 8 ]
call [ r--data ]
js r-xdata
pop edi
pop esi
pop ebx
xor al 0xc3
push 0x3
adc eax 0xfd003fcd
pop ecx
cmp eax 0xfffffffc
je r-xdata
adc al 0x3
std
add [ ebx - 0x41 ] dl
popfd
jne r-xdata
xchg ebp eax
cld
add [ eax ] al
std
call 0xffffffffff4390f4
push 0xfdff
call sub_4091b7
movsb [ edi ] [ esi ]
pop ecx
retn
push 0xfffffffe
call 0x13dd273
pop ecx
test [ 0xffffffffc0831f75 ] edi
sar [ ebx + 0x44 ] 0x1
std
add [ ebp + 0x16 ] esi
push esi
call sub_40d11b
mov ebp 0xc1f88359
jbe r-xdata
xchg ebp eax
or [ edx ] dh
inc ecx
std
push 0xfd02fb
push esi
call sub_40d258
jle r-xdata
push esi
push esi
stosd [ edi ]
push esi
call r--data
cmp [ ecx ] 0x14
push 0xfc04
mov esi rw-data
stosd [ edi ]
push 0x0
xabort 0x7d
push eax
call r--data
cmp [ ecx ] 0x14
or al 0x85
cmp eax 0x3d330f74
push eax
push eax
push eax
lodsd [ esi ]
sub_4092fc
dec [ eax - 0x5b2f00f8 ]
or bh bh
shl [ ebp + eax * 4 + 0x33f874c0 ] 0x1
rol [ eax - 0x60 ] 0xc3
xor eax eax
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
adc [ ecx ] 0xfd000328
mov [ 0xb99188 ] eax
mov [ rw-data ] ecx
je r-xdata
xor eax eax
inc eax
mov al [ 0xffffffffa0c033c3 ]
retn
add [ ebx + 0x6ca0158c ] bl
inc esp
add [ esi + 0x71 ] ah
or eax 0xb99194
mov ax fs
adc [ ecx + 0x1d8900b9 ] 0x81
xchg ecx eax
inc esp
add [ ebp + esi + 0x78 ] dh
xchg ecx eax
mov ecx 0x893d8900
xchg ecx eax
inc esp
mov [ eax - 0x3c5fffbc ] edx
mov edi edi
test al 0x8b
in al dx
dec eax
je r-xdata
inc esp
std
mov [ rw-data ] es
push eax
jo r-xdata
inc esp
std
call 0x13dbf47
pop ecx
test [ 0xffffffff88ff0f74 ] edi
inc esp
std
xchg ecx eax
mov ecx 0xf88f9c00
cwde
xchg ecx eax
inc esp
std
mov eax [ ebp ]
pop esi
mov [ ecx + 0x458bfd44 ] ss
add al 0x5e
nop
xchg ecx eax
inc esp
std
lea eax [ ebp + 0x8 ]
pop esi
pushfd
xchg ecx eax
inc esp
std
mov eax [ ebp - 0xfe20 ]
xbegin 0xfffffffffd85246a
pop ds
add eax 0xffffffd0
jpo r-xdata
std
jl r-xdata
or [ eax + eax ] eax
add [ eax ] eax
add ebp edi
mov eax [ 0xb99190 ]
mov [ rw-data ] eax
xbegin 0xfffffffffd852426
test eax eax
je r-xdata
movsb [ edi ] [ esi ]
std
add [ ebp + 0x16 ] esi
xchg ebp eax
cld
add [ eax ] al
std
call 0xffffffffff4390f4
push 0xfdff
call sub_4091b7
movsb [ edi ] [ esi ]
pop ecx
retn
jmp 0xb7394f9
inc esp
add bh bh

mov al [ 0x6600446c ]
jno r-xdata
fdivr st4
add bh bh
mov eax [ rw-data ]
mov [ eax - 0x24 ] edi
cld
inc [ edx ]
call [ rw-data ]
mov [ rw-data ] eax
xchg edi eax
add eax ebp
loop r-xdata
fwait
mov [ rw-data ] fs
jno r-xdata
add eax rw-data
jo r-xdata
xchg esp eax
xchg ecx eax
mov ecx 0xe08c6600
cmp eax 0x6d8405c7
inc esp
add [ ecx ] al
std
add [ eax ] al
mov eax [ rw-data ]
je r-xdata
insd
inc esp
add bh al
clc
adc [ eax + 0x409fd44 ] 0x0
add [ eax ] al
pop ecx
xchg edi eax
add bh bh
adc eax r--data
xchg ebp eax
cmp al 0x32
inc ecx
std
call [ rw-data ]
add eax 0xffffffd0
nop
inc esp
std
add [ ebp + 0x8 ] dh
xchg edi eax
add eax ebp
mov esi 0x590000c3
xchg ebp eax
or [ eax + eax ] eax
cmp eax 0xdab015ff
inc ecx
add [ eax + 0x2 ] dl
adc eax 0xbc29a8
leave
retn
sub_40949c
push ebp
jbe r-xdata
add [ eax ] 0xfd
add [ ecx + 0x75 ] cl
pop esi
mov esi [ ebp - 0x8 ]
jbe r-xdata
sub esp 0xffffffe1
mov [ ebp - 0xc ] edi
je r-xdata
cld
mov ebx [ eax ]
pop ebp
retn
or [ esi ] dl
push ebx
cmp ecx edi
mov [ 0xffffffffc17ed9f7 ] dh
adc [ ecx + 0x758be4b0 ] cl
int1
mov edi [ ebp + 0x8 ]
jbe r-xdata
clc
mov [ eax - 0xea27404 ] esp
or al 0x95
inc eax
aas
inc ecx
std
call 0xffffffffff438bd0
and [ ebp + 0x1 ] 0x0
pmullw xmm0 xmm1
mov [ ebp + 0x19 ] 0xfd000001
jmp r-xdata
in al 0xf3
pop ecx
mov ecx [ ebp + 0x8 ]
dec [ ebp - 0x1c ]
mov ebp [ eax + 0x1955030c ]
jg r-xdata
mov eax [ ebp - 0xb ]
xor ecx edx
sub esi [ edi ]
and ecx 0xf
into
0xca2b
mov [ ebp + 0x1 ] 0x2fffffe
mov eax [ ebp - 0x1c ]
adc eax 0x2fff647
retn
mov ebx [ ebp - 0x4 ]
jbe r-xdata
mov esi [ eax - 0x76367a18 ]
ja r-xdata
popfd
add [ ebp - 0x29a56363 ] ch
shl [ edi + ebx - 0x54 ] 0x1
popfd
xor eax eax
mov [ 0xffffffff89094589 ] al
pop ebp
call 0xffffffff8a2ceb79
mov al 0xf0
mov eax 0xfd01
maxps xmm1 [ ecx + 0x4574fc55 ]
clc
pop ebx
or al [ ebp - 0x4 ]
add ch bh
add [ esp + esi * 2 ] al
call 0xffffffffff43957f
test eax eax
mov [ 0xffffffffebbdc033 ] eax
add dh [ ebx ]
cmp eax 0x15c3c95b
cdq
clc
mov eax [ eax - 0x5f1a740c ]
retn
add [ eax ] al
jo r-xdata
pop ebp
in eax dx
mov edx [ ebp + 0xc ]
jg r-xdata
jg r-xdata
r-xdata
mov eax ebx
cdq
jbe r-xdata
pop ebp
int1
frstor [ esi + 0xf ]
jg r-xdata
adc [ ebx - 0x22a880f1 ] bl
movdqa [ edx - 0x6df099d0 ] xmm4
mov esi 0x590000c3
xchg ebp eax
or [ eax + eax ] eax
cmp eax 0xdab015ff
inc ecx
add [ eax + 0x2 ] dl
adc eax 0xbc29a8
leave
retn
inc ax

outsb
push eax
fwait
movq mm6 [ esi - 0x63 ]
movdqa xmm0 [ ebx - 0x7df09990 ]
inc eax
r-xdata
xor [ esi + 0xf ] ah
xchg edx eax
push ebx
push eax
adc eax 0x2ffff27
add esp 0xc
jbe r-xdata
movdqa [ edx + 0x7db68d70 ] xmm0
add [ eax ] al
add [ eax - 0x41 ] dh
push eax
fwait
movq [ edi - 0x63 ] mm6
mov eax [ ebp + 0x10 ]
salc
inc ebp
in al 0x50
scasd [ edi ]
push ecx
call 0x3f979c
cmp [ ecx ] 0xc
mov eax [ ebp - 0xb ]
jmp r-xdata
or dh bh
dec ebp
in al 0x8b
test al 0xc
add edx [ ebp + 0x19 ]
or [ ebx - 0x367a1750 ] cl
mov [ edi - 0x75 ] esi
sub_40950f
mov esi [ ebp + 0x11 ]
mov edi [ ebp - 0x10 ]
jbe r-xdata
jmp 0xffffffff8be68968
call 0x45cbef0f
or [ esi ] dl
push ebx
cmp ecx edi
mov [ 0xffffffffc17ed9f7 ] dh
adc [ ecx + 0x758be4b0 ] cl
int1
mov edi [ ebp + 0x8 ]
jbe r-xdata
or al 0x95
inc eax
aas
inc ecx
std
call 0xffffffffff438bd0
and [ ebp + 0x1 ] 0x0
pmullw xmm0 xmm1
mov [ ebp + 0x19 ] 0xfd000001
jmp r-xdata
in al 0xf3
pop ecx
mov ecx [ ebp + 0x8 ]
dec [ ebp - 0x1c ]
mov ebp [ eax + 0x1955030c ]
mov eax [ ebp + 0x10 ]
salc
inc ebp
in al 0x50
scasd [ edi ]
push ecx
call 0x3f979c
cmp [ ecx ] 0xc
mov eax [ ebp - 0xb ]
jmp r-xdata
mov [ ebp + 0x1 ] 0x2fffffe
mov eax [ ebp - 0x1c ]
adc eax 0x2fff647
retn
mov ebx [ ebp - 0x4 ]
jbe r-xdata
add [ ebp - 0x29a56363 ] ch
shl [ edi + ebx - 0x54 ] 0x1
popfd
xor eax eax
mov [ 0xffffffff89094589 ] al
pop ebp
call 0xffffffff8a2ceb79
mov al 0xf0
mov eax 0xfd01
maxps xmm1 [ ecx + 0x4574fc55 ]
clc
pop ebx
or al [ ebp - 0x4 ]
add ch bh
add [ esp + esi * 2 ] al
call 0xffffffffff43957f
test eax eax
mov [ 0xffffffffebbdc033 ] eax
add dh [ ebx ]
cmp eax 0x15c3c95b
cdq
clc
mov eax [ eax - 0x5f1a740c ]
retn
sub_40957f
push 0xc
xchg ebp eax
inc eax
aas
inc ecx
std
call 0xffffffffff438bd0
and [ ebp + 0x1 ] 0x0
pmullw xmm0 xmm1
mov [ ebp + 0x19 ] 0xfd000001
jmp r-xdata
mov [ ebp + 0x1 ] 0x2fffffe
mov eax [ ebp - 0x1c ]
adc eax 0x2fff647
retn
sub_40959c
mov edi [ eax + 0x76008bec ]
add [ 0xffffffffc000fd05 ] bh
jbe r-xdata
cmp eax 0xc0fd001d
je r-xdata
je r-xdata
cmp eax 0xc000fd05
xor edi [ 0xffffffff988bc340 ]
call 0x59fb42
mov [ ebp + 0x1 ] 0x2fffffe
mov eax [ ebp - 0x1c ]
adc eax 0x2fff647
retn
into
rol bl 0x33
cmp eax 0x988bc340
sub_409738
mov esi [ 0x7005f9c1 ]
sbb al 0x8d
inc eax
imul eax [ eax + eax - 0x75 ] 0xd
and esi 0x1f
cmp al 0xe6
push es
mov esi esi
movsx ecx [ esp + ecx * 8 + 0x4 ]
and ecx 0xfffffffc
je r-xdata
call 0x3fb1f4
mov ebp eax
call 0xffffffffff437ee1
mov [ eax ] 0xf4
stosb [ edi ]
push edi
push edi
push edi
stosb [ edi ]
call 0x13d9ad4
add esp 0xffffffe9
jmp r-xdata
push eax
adc eax 0xfd003ce6
pop ecx
mov [ ebp + 0x1 ] edi
mov eax [ ebx ]
idiv [ ecx - 0x76fefbd0 ]
push cs
push [ ebp - 0xb ]
call 0xffffffffff43963e
pop ecx
mov [ eax + 0x150febe4 ] edi
arpl di sp
inc [ edx ]
mov [ eax ] 0xfd09
xor [ eax - 0x4738001c ] 0xfffffffc
jle r-xdata
call 0xffffffff839999cf
enter 0xeb02 0x2
xor edi [ 0x3e5d5e5f ]
push 0x10
push r--data
adc eax 0x2fff4ea
mov eax [ ebp + 0x8 ]
jle r-xdata
hlt
sub_409876
in al dx
pop esi
pop ebp
push 0x14
push r--data
adc eax 0x2fff30a
xor edi edi
mov [ eax + 0x217d89e4 ] eax
push 0x1
call sub_4081d1
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] edi
into
test [ ecx + 0x353b1d75 ] 0x60
pop edx
inc esp
add [ edi ] cl
jo r-xdata
mov [ esi ] eax
pop esi
jbe r-xdata
add [ eax ] al
std
mov eax [ 0xb99740 ]
lea eax [ ecx * 2 - 0x5c8bc7c7 ]
mov eax [ eax ]
idiv [ ebp - 0x548b7cf4 ]
test edi edi
jle r-xdata
pop ebx
pop ebp
mov edi edi
push ebp
jbe r-xdata
inc esp
add [ edx ] al
or al 0xf6
cmp al 0x83
je r-xdata
pop esi
pop ebp
push edi
push eax
push esi
adc eax 0x2ffff69
pop ecx
push eax
call sub_40b65d
jle r-xdata
mov eax [ esi - 0xb ]
push esi
mov ecx [ eax - 0x77097af8 ]
or [ esi - 0x18 ] edx
enter 0x0 0x0
movsb [ edi ] [ esi ]
jmp r-xdata
mov [ eax - 0x2f71704 ] eax
les edx [ ebp + 0x8 ]
jne r-xdata
mov edi edi
push ebp
jbe r-xdata
push [ ebx ]
cmp eax 0x74068959
push ebx
push esi
jbe r-xdata
call [ ebp + 0x76 ]
in al dx
or al 0x3b
push eax
push esi
call sub_409cf5
movsb [ edi ] [ esi ]
pop ecx
xor edx edx
mov edi 0x5cfc5589
xor al 0xb0
push esi
adc eax 0xfd000316
pop ecx
pop ecx
retn
mov ebp 0x2004497
inc eax
xchg edi eax
inc esp
std
mov eax [ eax + esi * 4 ]
jbe r-xdata
push eax
push esi
adc eax 0x2ffff7c
pop ecx
test eax eax
mov [ 0xffffffffeb02c883 ] eax
pop ds
idiv [ ebx - 0x2bffff4 ]
add [ esp + edx - 0x55 ] dh
call 0xffffffffff4397a7
push eax
call sub_40d5b2
movsb [ edi ] [ esi ]
neg eax
pop ecx
out 0xc0 al
jmp r-xdata
or [ ebx - 0x3774f345 ] cl
jge r-xdata
or al 0x16
pop es
or [ esi - 0xf ] 0x20
or ebx 0x2
pop edi
call 0x3f9b72
pop ecx
jle r-xdata
push [ ebx - 0x1 ]
inc ebp
in al 0x16
sbb [ ecx ] edi
jge r-xdata
inc esi
xor edi [ 0x74068959 ]
add esi [ ebx ]
cmp cl 0x2
mov [ eax - 0x57 ] al
or ah bh
add [ eax ] al
je r-xdata
jne r-xdata
jbe r-xdata
mov eax [ esi + 0x8 ]
stosb [ edi ]
mov edi [ esi ]
sub eax [ 0xffffffffd17eff85 ]
idiv [ edx + eax ]
je r-xdata
test [ esi ] 0x3d33ffff
pop ecx
mov [ esi ] eax
je r-xdata
call sub_406ea3
jl r-xdata
add [ eax ] al
inc esi
push ss
test [ ebx ] dh
push [ esi + 0x75 ]
loopne r-xdata
lodsd [ esi ]
call 0xffffffffff439872
pop ecx
add [ 0xfffffffff40375ff ] 0x45
fmul [ ecx + 0x8e8fc80 ]
std
cmp dh [ ebp + 0xf ]
mov edi [ ebx - 0x7b3f7bf4 ]
jae 0x46c99938
or [ ecx + 0x5d5e04bb ] cl
and [ esi + 0x4 ] 0xfffffffd
int1
and [ ebx - 0x74a0fd35 ] al
inc esi
cmc
or al 0xf7
push es
sub_4099df
mov [ ebp - 0x22b ] eax
jo r-xdata
retn
xor ch bh
add bh bh
add esp 0xfffffff1
mov [ ebp - 0xffd4 ] eax
mov [ eax - 0x20 ] edi
std
inc [ edx ]
mov [ ebp - 0xff24 ] ecx
mov [ eax - 0x28 ] ebp
std
inc [ edx ]
mov [ ebp - 0xff2c ] ebx
mov [ eax - 0x30 ] ecx
std
inc [ edx ]
mov [ ebp - 0xff34 ] edi
jno r-xdata
in al dx
jl r-xdata
clc
std
add bh bh
push ebp
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
pop esi
movsb [ edi ] [ esi ]
xchg ebx eax
inc esp
std
pop ebp
retn
sub [ ebx ] al
std
add [ ecx + rw-data ] ah
xor edi [ eax ]
mov [ ebp - 0x4 ] eax
jle r-xdata
add ch bh
pop ecx
pop ecx
fdivr st4
add bh bh
add [ ebx - 0x69 ] dl
dec esp
lea eax [ ebp - 0x3df ]
xchg edi eax
add [ eax - 0x18 ] dl
mov edx 0x7000000b
test eax ebx
cld
add bh bh
sub_409a3d
push eax
mov esp 0x9c02fffd
pop [ ebp - 0x2f3 ]
jbe r-xdata
mov esp [ 0xffffffffd4a015ff ]
inc ecx
add [ ebp - 0x2d788 ] cl
add dl [ eax - 0x1 ]
adc eax r--data
js r-xdata
add al 0x8d
mov al 0x4
cld
mov [ eax - 0x1c ] esi
std
inc [ edx ]
mov [ ebp - 0xfe28 ] 0xc000f917
sub_409aa7
jne r-xdata
xchg ebp eax
pop ss
add al 0x0
cmp eax 0xdab015ff
inc ecx
add [ eax + 0x2 ] dl
adc eax 0xbc29a8
mov ecx [ ebp + 0x1 ]
xor ecx ebp
pop ebx
adc eax 0x2ffd51d
leave
retn
js r-xdata
jne r-xdata
xchg edi eax
add ch al
or al ch
add [ eax ] al
pop ecx
sub_409b0e
add [ edx ] al
add ch bh
jmp r-xdata
mov [ 0xb9a760 ] eax
push 0x4
lodsd [ esi ]
call 0x13dc5b3
pop ecx
pop ecx
pop esi
inc eax
xchg edi eax
inc esp
std
test eax eax
jne r-xdata
cmp edi [ ebp + 0x7 ]
mov edi [ ebx ]
push 0x4
push esi
je r-xdata
add [ ecx - 0x5c019516 ] al
xor edx edx
mov ecx rw-data
stosb [ edi ]
mov eax edx
rol [ 0x78048b05 ] 0x40
xchg esi eax
inc esp
std
mov edi edx
sbb [ edx ] 0x1f
pushad
cmpsd [ esi ] [ edi ]
mov ecx 0xd773e800
add [ eax ] al
pop ecx
movsb [ edi ] [ esi ]
mov [ 0xb99740 ] eax
test eax eax
mov [ 0x5ea51a6a ] al
retn
shl edi 0xfb
mov eax [ edi + eax ]
jle r-xdata
push [ ebp + esi * 8 + 0x3b ]
sub_409b50
xor ebp [ edi ]
mov ecx 0xb97f30
jmp r-xdata
mov [ edx + eax ] ecx
jle r-xdata
sub bh ch
add [ ecx + 0x59 ] bl
and [ ebx - 0x67efbc1 ] al
dec ebp
add [ eax + eax - 0x7f ] 0xa3fe6aea
pop esi
inc eax
xchg edi eax
inc esp
std
test eax eax
jne r-xdata
cmp edi [ ebp + 0x7 ]
mov edi [ ebx ]
mov [ 0xb9a760 ] eax
push 0x4
lodsd [ esi ]
call 0x13dc5b3
pop ecx
pop ecx
push 0x4
push esi
je r-xdata
shl edi 0xfb
mov eax [ edi + eax ]
jle r-xdata
push [ ebp + esi * 8 + 0x3b ]
xor edx edx
mov ecx rw-data
stosb [ edi ]
mov eax edx
rol [ 0x78048b05 ] 0x40
xchg esi eax
inc esp
std
mov edi edx
sbb [ edx ] 0x1f
add [ ecx - 0x5c019516 ] al
pushad
cmpsd [ esi ] [ edi ]
mov ecx 0xd773e800
add [ eax ] al
pop ecx
movsb [ edi ] [ esi ]
mov [ 0xb99740 ] eax
test eax eax
mov [ 0x5ea51a6a ] al
retn
sub_409b5f
or al 0x2
jle r-xdata
sub bh ch
add [ ecx + 0x59 ] bl
and [ ebx - 0x67efbc1 ] al
dec ebp
add [ eax + eax - 0x7f ] 0xa3fe6aea
pop esi
inc eax
xchg edi eax
inc esp
std
test eax eax
jne r-xdata
cmp edi [ ebp + 0x7 ]
mov edi [ ebx ]
mov [ 0xb9a760 ] eax
push 0x4
lodsd [ esi ]
call 0x13dc5b3
pop ecx
pop ecx
push 0x4
push esi
je r-xdata
shl edi 0xfb
mov eax [ edi + eax ]
jle r-xdata
push [ ebp + esi * 8 + 0x3b ]
xor edx edx
mov ecx rw-data
stosb [ edi ]
mov eax edx
rol [ 0x78048b05 ] 0x40
xchg esi eax
inc esp
std
mov edi edx
sbb [ edx ] 0x1f
add [ ecx - 0x5c019516 ] al
pushad
cmpsd [ esi ] [ edi ]
mov ecx 0xd773e800
add [ eax ] al
pop ecx
movsb [ edi ] [ esi ]
mov [ 0xb99740 ] eax
test eax eax
mov [ 0x5ea51a6a ] al
retn
sub_409b9a
test eax eax
jne r-xdata
dec [ ecx + 0x203c8331 ]
inc edx
add [ eax ] 0x7cfd447f
into
pop edi
into
rcr [ esi - 0x3d ] 0x15
fdivp st5
inc [ edx ]
cmp [ rw-data ] 0x0
mov [ 0xc6c2e8 ] eax
add bh bh
enter 0x9740 0x44
std
call 0xffffffffff436e48
pop ecx
retn
mov [ ecx ] esi
cmp [ eax ] 0x42
sub_409c07
and [ esi + 0x2 ] dl
adc eax 0xbc2a44
jmp r-xdata
mov eax [ ebp - 0xb ]
cmp eax 0x14
adc [ esi ] 0x83
shr ch 0x50
call 0x3fb5d6
mov edi [ eax - 0xeb77ef4 ]
add [ eax + 0x5d59fd00 ] al
retn
pop esi
pop ebp
mov edi edi
push ebp
jbe r-xdata
sub_409c44
mov eax [ edx ]
push ebp
mov ebp esp
jbe r-xdata
sbb [ ebp + 0x27fff0c ] 0xedc183ff
push ecx
call 0x3fbafc
pop ecx
mov al [ 0xffffffffddc083c3 ]
push eax
call [ r--data ]
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
push esi
jbe r-xdata
or [ ecx + rw-data ] bh
mov cl 0x72
pop ds
rcl [ eax + 0x77fd4481 ] 0x18
sbb [ ebp + 0x27fff0c ] 0x3cc12bff
clc
add eax 0x50103d83
call sub_407fe7
movsb [ edi ] [ esi ]
pop ebp
retn
cmp [ ecx ] 0xc
mov [ esi - 0x7 ] eax
cmp eax edi
vmwrite ecx [ ecx - 0x7c030000 ]
clc
push edx
test [ eax - 0x9ff0300 ] al
inc esi
int1
xor [ ebp + 0x4f ] 0xab
call 0xffffffffff4397a7
pop ecx
add [ 0xffffffffab2e74ff ] 0xffffffe8
dec esp
cli
add bh bh
pop ecx
add [ 0xffffffffab2274fe ] 0xffffffe8
inc eax
cli
add bh bh
sar eax 0xf8
push esi
lea edi [ eax + edi * 2 ]
inc eax
xchg esi eax
inc esp
std
call 0xffffffffff4397a7
and eax 0xffffffe2
pop ecx
shl eax 0xfb
add eax [ edi ]
pop ecx
push ss
add eax 0x447fb0b8
add [ edx - 0x7ddbfb43 ] cl
rol [ edx + 0x4e7c0775 ] 0xc
add ch bl
add [ eax ] al
add [ ebx - 0x2fdffe8 ] 0x76157500
inc esi
or al 0xa8
cmc
je r-xdata
or [ edi - 0x32 ] dl
mov ecx [ esi ]
push [ ebx - 0x349f0fc ]
inc ecx
mov [ esi ] ecx
push ss
adc esi edi
fsub st6
rol [ ebx - 0x3f7c1220 ] 0x10
hlt
test eax 0x4fd
mov [ edi ] al
mov [ esi - 0x1b ] 0xfd001000
sub_409c80
mov eax [ edx ]
push ebp
mov ebp esp
jbe r-xdata
cmp [ ecx ] 0x14
jmp rw-data
or [ ebx + 0x458b1404 ] al
int1
jge r-xdata
add eax 0xffffffdd
push eax
call [ r--data ]
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
push esi
jbe r-xdata
sbb [ ebp + 0x27fff0c ] 0xedc183ff
push ecx
call 0x3fbafc
pop ecx
mov al [ 0xffffffffddc083c3 ]
cmp [ ecx ] 0xc
mov [ esi - 0x7 ] eax
cmp eax edi
vmwrite ecx [ ecx - 0x7c030000 ]
clc
push edx
test [ eax - 0x9ff0300 ] al
inc esi
int1
xor [ ebp + 0x4f ] 0xab
call 0xffffffffff4397a7
pop ecx
add [ 0xffffffffab2e74ff ] 0xffffffe8
dec esp
cli
add bh bh
pop ecx
add [ 0xffffffffab2274fe ] 0xffffffe8
inc eax
cli
add bh bh
sar eax 0xf8
push esi
lea edi [ eax + edi * 2 ]
inc eax
xchg esi eax
inc esp
std
call 0xffffffffff4397a7
and eax 0xffffffe2
pop ecx
shl eax 0xfb
add eax [ edi ]
pop ecx
push ss
add eax 0x447fb0b8
add [ edx - 0x7ddbfb43 ] cl
rol [ edx + 0x4e7c0775 ] 0xc
add ch bl
add [ eax ] al
add [ ebx - 0x2fdffe8 ] 0x76157500
inc esi
or al 0xa8
cmc
je r-xdata
or [ edi - 0x32 ] dl
mov ecx [ esi ]
push [ ebx - 0x349f0fc ]
inc ecx
mov [ esi ] ecx
push ss
adc esi edi
fsub st6
rol [ ebx - 0x3f7c1220 ] 0x10
hlt
test eax 0x4fd
mov [ edi ] al
mov [ esi - 0x1b ] 0xfd001000
sub_409cf5
fisttp [ ecx - 0x2aebf3ba ]
add [ eax ] al
std
or eax 0x1
je r-xdata
stosd [ edi ]
call 0xffffffffff4397a7
pop ecx
add [ 0xffffffffab2e74ff ] 0xffffffe8
dec esp
cli
add bh bh
pop ecx
add [ 0xffffffffab2274fe ] 0xffffffe8
inc eax
cli
add bh bh
sar eax 0xf8
push esi
lea edi [ eax + edi * 2 ]
inc eax
xchg esi eax
inc esp
std
call 0xffffffffff4397a7
and eax 0xffffffe2
pop ecx
shl eax 0xfb
add eax [ edi ]
pop ecx
push ss
add eax 0x447fb0b8
add [ edx - 0x7ddbfb43 ] cl
rol [ edx + 0x4e7c0775 ] 0xc
add ch bl
add [ eax ] al
add [ ebx - 0x2fdffe8 ] 0x76157500
inc esi
or al 0xa8
cmc
je r-xdata
or al 0xa9
int1
add [ eax ] eax
add [ eax - 0x1617a9f7 ] cl
cmp eax [ eax ]
add [ ebx + ebp * 8 + 0x8bb8b05 ] ah
mov ecx [ esi ]
push [ ebx - 0x349f0fc ]
inc ecx
mov [ esi ] ecx
push ss
adc esi edi
fsub st6
rol [ ebx - 0x3f7c1220 ] 0x10
hlt
test eax 0x4fd
mov [ edi ] al
mov [ esi - 0x1b ] 0xfd001000
sub_40a148
dec ebx
mov dh 0xb
inc eax
jge r-xdata
jmp sub_40a102
mov al 0x81
mov ecx 0x15740000
mov dl [ ebx ]
cmovpo ecx edx
movsx esi [ eax + esi * 4 - 0x7f ]
inc esp
std
test ecx ecx
jne r-xdata
call 0xffffffffff437ee1
mov [ eax ] 0xd7
push ss
jpe r-xdata
dec eax
add [ ss : eax ] al
cmp esi [ 0x25030475 ]
jmp r-xdata
into
idiv [ esp + eax + 0x43d97448 ]
cmp eax 0xffffffff
mov [ ecx + 0x5 ] dl
or [ ecx ] 0xf76138a
mov [ ebx + esi * 8 + 0x25 ] dl
inc ebx
add [ 0x77097503 ] 0x13
mov ecx [ edi ]
jne r-xdata
adc [ ebx + 0x5d2be4b8 ] cl
or ecx edx
call 0xcb5a418
push ebx
add dh [ ebp - 0xc ]
push 0xfffffffd
push 0xfdfde9
call [ r--data ]
je r-xdata
mov edi [ eax + 0x95d2be4 ]
shr eax 0x1
push eax
add dh [ ebp + 0xc ]
je r-xdata
jle r-xdata
push cs
mov esi 0xefebd82b
neg eax
cdq
xchg edi eax
add [ edx + 0x50 ] edx
add dh [ ebp + 0x8 ]
call sub_40d801
add edi [ 0x74f04589 ]
dec esp
mov edi [ eax + 0x3f883ec ]
jne rw-data
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
mov edi [ eax - 0x37c1610 ]
add [ eax ] al
mov edi [ eax - 0x31e87410 ]
leave
cmp eax ebx
xchg ebp eax
rol [ ebx ] 0x3d
mov [ ebp - 0x10 ] eax
je r-xdata
mov [ ebp - 0x13 ] eax
jmp 0x13da32f
push ss
xor [ esi ] dl
sub_40a38c
push [ ebp + ebx * 2 - 0x14 ]
jne r-xdata
jge r-xdata
xor ch 0x4
jmp r-xdata
sbb cl [ edi ]
jns r-xdata
sti
mov esp [ eax + 0xd458bf4 ]
add eax ebx
mov [ eax + 0xd458910 ] esp
cmp ebx eax
movd edi mm7
add [ eax ] al
std
mov eax [ ebp + 0x10 ]
mov bh 0x8
add al 0xeb
add edi [ ebp + 0x20 ]
add [ eax ] al
std
cmp cx 0xfff0
je r-xdata
jle r-xdata
adc dl dh
mov bh 0x8
mov ecx [ ebp + 0xd ]
je r-xdata
add [ eax + ebp * 4 - 0x75 ] dh
pop es
idiv [ ecx - 0x76b7fbfa ]
sub [ esi - 0x7d ] ah
cmp al 0xa
je r-xdata
add ah [ esi + 0x7e ]
cmp [ edx ] ecx
jne r-xdata
add [ ebx - 0x3e7cf2b3 ] cl
inc dh
shl [ ebx + 0x1e ] 0x70
dec eax
inc ebx
inc ebx
mov ebp 0xed458940
jmp 0x13da32f
or eax 0xf2104539
sbb [ ebx ] 0xff
add bh bh
push 0xd
pop eax
fwait
mov [ ebx ] eax
add ecx 0xfffffffe
mov cl 0x73
push ds
jo r-xdata
add eax 0x4
je r-xdata
jmp sub_40a355
push es
add eax 0x4d8a0776
add al 0x88
dec esp
push es
fmul [ ebx + 0x6b9c607 ]
or dl [ es : esi ]
sub bh [ ebx ]
pop ebp
or [ ebp + 0x7 ] esi
jle r-xdata
mov edi edx
mov cl [ ebp - 0x8 ]
jne r-xdata
dec eax
mov [ eax ] ebp
add [ eax + 0x4f740af8 ] 0x6a
or eax 0x3899b58
adc [ edx - 0x9 ] ch
jmp 0x13da329
jmp r-xdata
test [ esi + edi * 8 + 0x5d74ffff ] esp
in al dx
clc
or cl [ ecx - 0x68fe957b ]
[ edx - 0x2 ]
sub_40a4cd
les edi [ ebp + 0x10 ]
je r-xdata
stosb [ edi ]
push edi
push edi
push edi
adc eax 0x2fff60e
add esp 0x14
jbe r-xdata
cmp [ ebp + 0xc ] esi
cmc
call 0x13dd4e4
pop ecx
retn
jmp r-xdata
pop edi
pop esi
pop ebp
int3
sub_40a4e8
dec [ eax - 0x7700a8f4 ]
or al ch
sub al 0xfd
add [ eax ] al
cmp [ ecx ] 0xc
cmp [ ebp - 0x13 ] edi
je r-xdata
call 0xffffffffff437ee1
push 0x16
mov [ 0xffffffffaa573089 ] eax
push edi
push edi
push edi
adc eax 0x2fff60e
add esp 0x14
jbe r-xdata
cmp [ eax + 0x150e730c ] ecx
fcmovnu st1
inc [ edx ]
push 0x22
pop ecx
je r-xdata
cmc
call 0x13dd4e4
pop ecx
retn
jmp r-xdata
pop esi
pop ebp
int3
mov esi ecx
push ss
lodsd [ esi ]
push 0x16
movsd [ edi ] [ esi ]
pop edi
sub_40a5eb
mov [ eax - 0x8 ] 0xa
mov [ eax - 0xb ] edi
mov [ eax + 0x24 ] 0xfd
mov [ eax + 0x25 ] 0xf7
mov [ eax + 0x26 ] 0xf7
mov [ eax + 0x38 ] edi
cmp eax [ eax + 0x34 ]
add [ esi - 0x40 ] bh
inc eax
mov esi eax
inc eax
xchg esi eax
inc esp
std
add ecx 0xf500
cmp edi [ edx + esi * 2 ]
int3
sub_40a809
std
or [ eax ] eax
add ch bh
or eax 0xffffffff
push ss
dec ebp
push edi
dec [ eax + 0x2006a10 ]
jne r-xdata
jne r-xdata
push eax
add dl [ 0xbc2990 ]
mov edi eax
jle r-xdata
nop
sub [ eax + eax - 0x810775 ] edi
call [ rw-data ]
jmp r-xdata
push [ ebp - 0xb ]
push [ ebx ]
rol [ ebp + 0x500c743d ] 0x15
leave
salc
inc [ edx ]
pop ecx
or eax 0x2
jmp r-xdata
pop edi
pop esi
mov al [ 0xffffffff95106ac3 ]
call 0xffffffffe93de9aa
popad
jecxz r-xdata
inc ebp
cmc
cmp eax 0xfffffffe
mov [ ebx ] bl
call 0x3fd3f4
sbb ebp 0x0
call 0x3fd3e1
dec [ ebx - 0x77c0abb ]
dec [ eax + 0x2b78e81b ]
sub_40a844
mov edi [ ebx ]
sar eax 0x5
jbe r-xdata
add [ ebx - 0x193ee0e5 ] al
sti
lea eax [ eax + esi - 0x7 ]
and [ eax ] 0xfd
jbe r-xdata
test [ eax + 0x6b ] eax
inc esp
pop edi
pop esi
mov al [ 0xffffffff95106ac3 ]
call 0xffffffffe93de9aa
popad
jecxz r-xdata
inc ebp
cmc
cmp eax 0xfffffffe
mov [ ebx ] bl
call 0x3fd3f4
sbb ebp 0x0
call 0x3fd3e1
dec [ ebx - 0x77c0abb ]
dec [ eax + 0x2b78e81b ]
sub_40a881
sub edi edi
inc edi
std
or [ eax ] eax
add ch bh
call sub_407f57
je r-xdata
cmp edi eax
and al 0x96
inc esp
std
jb r-xdata
je r-xdata
call 0x3fd3e1
jbe r-xdata
lodsd [ esi ]
add [ eax ] al
std
xor edi edi
cmp edi [ edx ]
jl r-xdata
enter 0x14ff 0x9d
sar ecx 0xf8
lea ebx [ ecx * 4 + rw-data ]
jbe r-xdata
call 0xffffffffff437ee1
mov [ eax ] 0xf4
adc eax 0x2ffd5da
mov [ eax ] edi
xor [ eax - 0x4738001c ] 0xfffffffc
dec [ eax - 0xe8a00f0 ]
push [ ebp + 0x8 ]
adc eax 0x2fffeec
add esp 0xc
je r-xdata
jmp r-xdata
and esi 0xffffffe2
shl esi 0x6
jbe r-xdata
push ebx
into
fist [ esi - 0x75 ]
mov [ ecx + ecx * 4 ] cl
inc ebp
add [ ecx + 0x5d74f45d ] ecx
clc
mov [ eax - 0x44fe1410 ] esp
cmp [ esi ] 0x20
mov edx edi
mov al [ esi ]
shl [ ecx + 0x74 ] 0x39
shl [ edx + 0x74 ] 0x2c
shl [ edi + 0x74 ] 0x1f
adc eax 0x2ffd567
push ebx
push ebx
push ebx
scasb [ edi ]
push ebx
mov [ eax ] 0xeb
adc eax 0x2fff14a
add esp 0x14
into
shr cl 0x70
inc [ eax ]
add bh al
mov eax 0xfd03010c
add bl ch
in al 0xeb
jmp r-xdata
or eax 0xffffffff
adc al 0x9d
call 0x13dd444
pop ecx
mov [ eax + 0xb038bfc ] eax
inc esp
xor [ esp + edi * 8 ] al
je r-xdata
movsx esi [ ecx + 0x1c830431 ]
add [ edi + edi * 4 - 0x53 ] esi
adc [ esi + 0x4d ] bh
cld
add [ ebp + ebx * 2 + 0xc ] esi
jmp r-xdata
push ss
sub_40aac5
mov eax 0xfd0001f4
add bl ch
or al [ es : ebp + 0xc ]
add [ 0xffffffffef750000 ] bh
or [ ebp + 0xc ] 0x80fd
push ss
adc al 0xf7
inc ebp
int1
add [ eax ] dl
add ch bh
je r-xdata
xor [ eax - 0x2effff4 ] 0xfb8a4600
cmp al bl
vmread edx ecx
xor esi [ ebx + ebp * 8 ]
pop es
sub_40ab2a
jmp r-xdata
jge r-xdata
js r-xdata
and [ edi + eax - 0x80 ] dh
cmp eax 0x80467088
jne r-xdata
xchg edi eax
pop es
push rw-data
push esi
adc eax 0xfd003a25
add esp 0xc
js r-xdata
jle r-xdata
jne r-xdata
jne r-xdata
retn
or [ ecx + 0xcb0 ] al
inc [ eax ]
jmp r-xdata
xchg edi eax
or [ eax + 0x50 ] ch
iretd
jle r-xdata
call 0x3fd9e1
push ebx
scasb [ edi ]
push ebx
push ebx
push ebx
cmp al [ eax ]
push ss
add ch bh
add al ch
sbb [ edx ] dl
jle r-xdata
cmp [ esi ] 0x20
mov edx edi
cmp [ esi ] bl
mov [ edx ] ebx
rol [ eax ] 0x0
cmp [ ecx ] 0xc
test eax eax
test [ eax - 0x7cff0300 ] eax
add eax 0xcb081
add cl bh
add bl ch
inc ecx
stc
pop es
xor [ eax - 0x3fffff4 ] 0xbb01eb00
sub_40ab2c
inc esi
jge r-xdata
js r-xdata
and [ edi + eax - 0x80 ] dh
cmp eax 0x80467088
jne r-xdata
xchg edi eax
pop es
push rw-data
push esi
adc eax 0xfd003a25
add esp 0xc
js r-xdata
jle r-xdata
jne r-xdata
jne r-xdata
retn
or [ ecx + 0xcb0 ] al
inc [ eax ]
jmp r-xdata
xchg edi eax
or [ eax + 0x50 ] ch
iretd
jle r-xdata
call 0x3fd9e1
push ebx
scasb [ edi ]
push ebx
push ebx
push ebx
cmp al [ eax ]
push ss
add ch bh
add al ch
sbb [ edx ] dl
jle r-xdata
cmp [ esi ] 0x20
mov edx edi
cmp [ esi ] bl
mov [ edx ] ebx
rol [ eax ] 0x0
cmp [ ecx ] 0xc
test eax eax
test [ eax - 0x7cff0300 ] eax
add eax 0xcb081
add cl bh
add bl ch
inc ecx
stc
pop es
xor [ eax - 0x3fffff4 ] 0xbb01eb00
sub_40abbb
inc [ ebx + 0x1eeb1439 ]
xchg ebp eax
add [ ecx ] 0x0
std
push [ ebp + 0x10 ]
jo r-xdata
mov esp 0x33ffff22
xor edi edi
mov [ eax + 0x15016ae4 ] eax
mov ah 0xd4
inc [ edx ]
pop ecx
mov [ ebp + 0x1 ] ebx
xor esi esi
mov [ eax - 0x62cac420 ] ecx
[ eax - 0xa8a00f4 ]
push eax
call r--data
cmp [ ecx ] 0x14
test eax eax
mov [ ebx + esi ] eax
rcl [ esi ] 0x20
mov eax [ ebp - 0x17 ]
inc [ rw-data ]
mov esi [ eax - 0xeb77604 ]
mov ecx [ ebp - 0x10 ]
je r-xdata
add [ eax ] al
mov [ ecx - 0x73 ] al
inc esi
add [ ebx + 0x128a10f8 ] al
lea eax [ esi - 0x13 ]
push eax
call 0x3fdb13
pop ecx
js r-xdata
add al 0x89
in eax 0x89
pop eax
or [ eax + ebx * 2 + 0x1c ] dh
mov [ ebp - 0x59a1a0f0 ] esi
leave
retn
cmpsd [ esi ] [ edi ]
inc esp
add dl dh
test [ ecx + 0x353be088 ] 0x9d
je r-xdata
pop esp
inc eax
xchg edi eax
inc esp
std
jne r-xdata
pop esp
inc eax
xchg edi eax
inc esp
std
push [ eax + esi * 4 ]
stosd [ edi ]
call 0xffffffffff439c12
pop ecx
pop ecx
pop esp
inc eax
xchg edi eax
inc esp
std
mov eax [ eax + esi * 4 ]
or eax [ eax + 0xc ]
or [ ecx + 0x1556500c ] 0xffffffee
out dx eax
inc [ edx ]
pop ecx
pop ecx
inc esi
push ss
xchg ecx eax
mov edi eax
je r-xdata
mov eax [ ebx + edi * 8 ]
add eax 0x20
lodsd [ esi ]
call [ rw-data ]
mov eax [ rw-data ]
jbe r-xdata
dec ecx
push es
call 0x3fe948
pop ecx
pop esp
inc eax
xchg edi eax
inc esp
std
mov [ esi + eax ] ebx
push ss
sbb ecx [ ebx - 0x3f7c04fc ]
and [ ebp - 0x28bbea01 ] ch
pop ds
je r-xdata
in al 0xeb
xchg ebp eax
shl esi 0x2
xchg edi eax
cmp al ch
sar bh cl
add bl [ ecx - 0x3d ]
push ebx
stosd [ edi ]
push edi
mov edx [ ecx + ebx * 8 + 0x10 ]
mov eax [ ecx + ebx * 8 + 0x14 ]
mov ecx [ ecx + ebx * 8 + 0x18 ]
push ebp
push edx
lodsd [ esi ]
push ecx
push ecx
push r-xdata
cdq
push [ 0xfd00 ]
mov eax [ rw-data ]
into
les ecx [ ecx + 0x6408d944 ]
mov eax ebx
add [ eax ] al
add ch bh
push es
mov [ eax - 0xea0761c ] eax
cmp edi ebx
je r-xdata
dec esp
sbb al 0x83
mov dl 0x10
inc edi
mov eax 0x2fffefc
add [ eax ] al
jle r-xdata
and al 0x2c
into
sbb [ ebx - 0x17c0e90 ] ecx
dec [ ecx - 0x26ab74c5 ]
xor al 0x83
cli
add esi [ esp + eax + 0x3b ]
inc ecx
add [ ecx + rw-data ] ah
xlat
and [ edi + 0xc ] 0x80fd
je r-xdata
pcmpeqd mm5 [ esi ]
add al 0x3b
sbb [ edi - 0x5d ] bl
pop ebx
retn
mov eax [ esp - 0x33 ]
mov ebx [ eax + 0x8 ]
jbe r-xdata
add al 0x89
mov [ 0x741f8908 ] al
pop edi
sub_40ac3d
stc
mov al 0x39
sbb [ ecx + 0x76008b5b ] cl
inc eax
or al 0xa8
jle r-xdata
add ch bh
mov eax [ eax ]
cmp [ 0xffffffffbce85020 ] 0x18
add [ eax ] al
movsb [ edi ] [ esi ]
pop ecx
test eax eax
dec eax
test eax 0x80fd
mov [ ecx - 0x73 ] al
inc esi
add [ ebx + 0x128a10f8 ] al
lea eax [ esi - 0x13 ]
push eax
call 0x3fdb13
pop ecx
js r-xdata
mov eax [ ebx + edi * 8 ]
add eax 0x20
lodsd [ esi ]
call [ rw-data ]
mov eax [ rw-data ]
jbe r-xdata
dec ecx
push es
call 0x3fe948
pop ecx
pop esp
inc eax
xchg edi eax
inc esp
std
mov [ esi + eax ] ebx
push ss
sbb ecx [ ebx - 0x3f7c04fc ]
and [ ebp - 0x28bbea01 ] ch
test [ ecx + 0x353be088 ] 0x9d
cmpsd [ esi ] [ edi ]
inc esp
add dl dh
je r-xdata
sar bh cl
add bl [ ecx - 0x3d ]
push ebx
stosd [ edi ]
push edi
mov edx [ ecx + ebx * 8 + 0x10 ]
mov eax [ ecx + ebx * 8 + 0x14 ]
mov ecx [ ecx + ebx * 8 + 0x18 ]
push ebp
push edx
lodsd [ esi ]
push ecx
push ecx
push r-xdata
cdq
push [ 0xfd00 ]
mov eax [ rw-data ]
into
les ecx [ ecx + 0x6408d944 ]
mov eax ebx
add [ eax ] al
add ch bh
push es
mov [ eax - 0xea0761c ] eax
cmp edi ebx
je r-xdata
pop esp
inc eax
xchg edi eax
inc esp
std
jne r-xdata
pop esp
inc eax
xchg edi eax
inc esp
std
push [ eax + esi * 4 ]
stosd [ edi ]
call 0xffffffffff439c12
pop ecx
pop ecx
pop esp
inc eax
xchg edi eax
inc esp
std
mov eax [ eax + esi * 4 ]
or eax [ eax + 0xc ]
or [ ecx + 0x1556500c ] 0xffffffee
out dx eax
inc [ edx ]
pop ecx
pop ecx
inc esi
push ss
xchg ecx eax
mov edi eax
je r-xdata
add [ eax ] al
jle r-xdata
and al 0x2c
into
sbb [ ebx - 0x17c0e90 ] ecx
dec [ ecx - 0x26ab74c5 ]
xor al 0x83
cli
add esi [ esp + eax + 0x3b ]
inc ecx
add [ ecx + rw-data ] ah
xlat
and [ edi + 0xc ] 0x80fd
je r-xdata
pop ds
je r-xdata
in al 0xeb
xchg ebp eax
shl esi 0x2
xchg edi eax
cmp al ch
pcmpeqd mm5 [ esi ]
add al 0x3b
sbb [ edi - 0x5d ] bl
pop ebx
retn
mov eax [ esp - 0x33 ]
mov ebx [ eax + 0x8 ]
jbe r-xdata
add al 0x89
mov [ 0x741f8908 ] al
pop edi
dec esp
sbb al 0x83
mov dl 0x10
inc edi
mov eax 0x2fffefc
sub_40af7a
mov ecx [ ebp + 0xc ]
jle r-xdata
jmp r-xdata
push [ esi - 0x7d ]
stc
dec [ ecx + 0x7ec18b16 ]
loopne r-xdata
or al 0x89
pop esi
push ebx
push ecx
adc eax 0xfd002941
mov ebp [ ecx + eax * 8 ]
cli
add eax 0x306e03c
stc
xchg ebp eax
inc eax
xchg esi eax
mov ecx 0x4505eb00
mov al 0x82
inc esp
std
test [ eax + 0x4 ] 0xdd
je r-xdata
idiv [ ebx - 0x2fef7f4 ]
add [ edi + 0xf ] dl
jns r-xdata
call sub_409a25
jle r-xdata
jle r-xdata
mov edi [ ebx - 0xab275f8 ]
mov [ eax ] cl
jmp r-xdata
push 0xffffffff
push ebx
add [ eax ] al
push ebp
inc eax
je r-xdata
add [ eax ] al
std
mov eax [ esi + 0x8 ]
jbe r-xdata
add bl ch
push ds
and [ ebx ] bh
or eax 0x20e80c74
jmp r-xdata
sti
add [ eax ] al
cmp edi [ ebx ]
jne r-xdata
or al 0x20
jle r-xdata
and eax edx
cmp [ ecx ] 0x10
cmp eax 0x2
je r-xdata
std
push ebx
xor ebx ebx
push ebp
add [ esi + edx + 0x74 ] esi
pop esi
add al 0xa8
in eax dx
je rw-data
adc eax 0x2ffd013
mov [ eax ] 0xfd22
jmp r-xdata
jle r-xdata
lea ecx [ eax - 0x4 ]
mov [ esi ] ecx
mov esi [ ebx - 0x4b07d4e8 ]
cmp edi ebx
mov [ ebx - 0x55e281fc ] esi
push eax
push [ ebp - 0xf ]
call 0x13db72a
add esp 0xfffffff1
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x3e08308 ]
mov [ esi ] ecx
mov [ ebx - 0xeb974f4 ] edi
push ebx
call sub_407e87
je r-xdata
sub [ eax ] eax
and eax 0xffffffef
jle r-xdata
inc esi
int1
push ss
dec ebp
or eax 0xffffffdd
mov [ esi + 0xc ] eax
jle r-xdata
inc ebp
cld
pop ds
push edi
vmwrite eax [ eax - 0x74030000 ]
inc esi
or [ esi + 0x3e ] dh
stc
mov [ ebp - 0x4 ] ebx
push esp
or al 0x1
add ch bh
jne r-xdata
add cl [ ecx + 0x5e890cbb ]
or [ 0xfffffffffd0037a1 ] dl
or [ ebx + 0x5f8c13a ] cl
jo r-xdata
add [ ebx + 0x1fe783fb ] cl
cmp al 0xe7
push es
add edi [ edx ]
mov bl [ eax + 0x24 ]
push edi
jbe r-xdata
call 0x3fe3e1
push esi
stosd [ edi ]
push esi
push esi
push esi
cmp al [ eax ]
push ss
add ch bh
add al ch
adc [ edi ] 0xff
inc [ ebx - 0x377cebc7 ]
add ch cl
mov esi 0x5300fd06
cmp [ eax + 0x14 ] ecx
jo r-xdata
test [ eax - 0x17ffff01 ] dl
outsd
adc [ eax ] al
add [ esi + 0x40 ] dh
insb
xor esi [ ecx + edi ]
dec eax
adc al 0x70
test [ 0xffffffff940fff02 ] ebx
cmp al 0x50
jne r-xdata
test [ eax + 0x6b ] eax
inc esp
je r-xdata
mov eax [ esi ]
add dh [ edi + eax ]
mov [ eax + 0x20 ] esi
in eax 0xff
add bh bh
adc eax rw-data
test [ 0xffffffffff60840f ] edi
add [ eax ] al
xor esi [ ecx + edi ]
lea esp [ eax ]
sbb bh bh
push [ ebp + esi * 8 - 0x7c ]
fisttp [ edi ]
jns r-xdata
sbb al 0xe5
add bh bh
sete [ eax + edx * 2 ]
mov eax [ esi ]
inc bh
cmp [ eax - 0x3b ] 0x0
je r-xdata
add al [ eax ]
std
call [ rw-data ]
mov esp [ eax + 0x34 ]
in eax 0xff
add cl [ ecx - 0xe7e37b ]
push [ ebx ]
cmp eax 0x183c8589
test [ eax - 0x7 ] 0x20
adc eax 0x2ffce4e
xor esi esi
mov ebp ecx
call 0xffffffffff437ee1
push esi
push esi
stosd [ edi ]
push esi
push esi
in eax 0xff
cmp bl 0x1
mov [ eax ] dh
mov ecx [ ebp - 0x13 ]
not ecx
movsx eax cl
lodsd [ esi ]
call 0x13deb19
pop ecx
test [ 0x708b3a74 ] edi
xor al 0xe5
inc [ edx ]
sub ecx ebx
add esi [ eax - 0x423fccf0 ]
cmp ecx eax
ja r-xdata
pop ecx
test eax eax
test [ ebp - 0x74ff02fe ] bl
push es
or eax [ edi + eax + 0x4 ]
jge r-xdata
push [ ebp + 0x8 ]
adc eax 0xfd0037a1
xchg edi eax
add ch [ edx ]
xchg edi eax
add bh bh
jne r-xdata
add [ eax ] al
mov esi 0x184485ff
xor al 0x88
test al 0xf4
mov [ ebp + 0x8 ] cl
and [ eax + 0x38 ] 0xfffffffd
push 0x2
lea edi [ eax - 0x4914af0c ]
je r-xdata
call 0x13dd86e
add esp 0xffffffed
sub_40b09c
idiv [ ecx + eax ]
jne r-xdata
test [ eax - 0x7 ] 0x20
adc eax 0x2ffce4e
xor esi esi
mov ebp ecx
call 0xffffffffff437ee1
push esi
push esi
stosd [ edi ]
push esi
push esi
push [ ebp + 0x8 ]
adc eax 0xfd0037a1
pop ecx
test eax eax
test [ ebp - 0x74ff02fe ] bl
push es
or eax [ edi + eax + 0x4 ]
jge r-xdata
xchg edi eax
add ch [ edx ]
xchg edi eax
add bh bh
jne r-xdata
cmp [ eax + 0x14 ] ecx
jo r-xdata
test [ eax - 0x17ffff01 ] dl
outsd
adc [ eax ] al
add [ esi + 0x40 ] dh
insb
xor esi [ ecx + edi ]
dec eax
adc al 0x70
test [ 0xffffffff940fff02 ] ebx
cmp al 0x50
je r-xdata
call 0x13dd86e
add esp 0xffffffed
je r-xdata
mov eax [ esi ]
add dh [ edi + eax ]
mov [ eax + 0x20 ] esi
in eax 0xff
add bh bh
adc eax rw-data
test [ 0xffffffffff60840f ] edi
add [ eax ] al
xor esi [ ecx + edi ]
lea esp [ eax ]
sbb bh bh
push [ ebp + esi * 8 - 0x7c ]
fisttp [ edi ]
jns r-xdata
sbb al 0xe5
add bh bh
sete [ eax + edx * 2 ]
mov eax [ esi ]
inc bh
cmp [ eax - 0x3b ] 0x0
je r-xdata
add al [ eax ]
std
call [ rw-data ]
mov esp [ eax + 0x34 ]
in eax 0xff
add cl [ ecx - 0xe7e37b ]
push [ ebx ]
cmp eax 0x183c8589
in eax 0xff
cmp bl 0x1
mov [ eax ] dh
mov ecx [ ebp - 0x13 ]
not ecx
movsx eax cl
lodsd [ esi ]
call 0x13deb19
pop ecx
test [ 0x708b3a74 ] edi
xor al 0xe5
inc [ edx ]
sub ecx ebx
add esi [ eax - 0x423fccf0 ]
cmp ecx eax
ja r-xdata
add [ eax ] al
mov esi 0x184485ff
xor al 0x88
test al 0xf4
mov [ ebp + 0x8 ] cl
and [ eax + 0x38 ] 0xfffffffd
push 0x2
lea edi [ eax - 0x4914af0c ]
sub_40b1d8
call sub_40e9f4
jle r-xdata
add cl [ ebp - 0x14af0b48 ]
mov dh 0xf
mov esi 0x66e8adc1
cmp ebp edi
add [ ecx - 0x7b ] bl
cmp eax 0x708b3a74
xor al 0xe5
inc [ edx ]
sub ecx ebx
add esi [ eax - 0x423fccf0 ]
cmp ecx eax
or al 0x83
add eax 0x4c840fff
add al 0x0
add [ esi + 0x184485ff ] bh
sub_40b1f2
push 0x1
push ebx
jo r-xdata
dec esi
rol [ eax - 0x6bf00807 ] 0xc0
je r-xdata
inc eax
in eax 0x2
call [ eax - 0x18 ]
cmp edi [ eax ]
add [ eax ] al
jle r-xdata
in eax 0x2
dec [ edi ]
xchg esp eax
cmp al 0x50
mov eax [ esi ]
add dh [ edi + eax ]
mov [ eax + 0x20 ] esi
in eax 0xff
add bh bh
adc eax rw-data
test [ 0xffffffffff60840f ] edi
add [ eax ] al
xor esi [ ecx + edi ]
lea esp [ eax ]
sbb bh bh
push [ ebp + esi * 8 - 0x7c ]
fisttp [ edi ]
jns r-xdata
and ch ah
add bh bh
enter 0x7b0f 0xa5
add [ eax ] eax
std
push 0x2
lea edi [ eax + 0x40 ]
in eax 0xff
add dl [ ebx + 0x50 ]
or al 0x83
add eax 0x70840fff
add al 0x0
add dh cl
rcl [ eax + 0x50 ] 0x97
add eax 0x51094d8d
push 0x1
jo r-xdata
mov eax [ esi ]
inc bh
cmp [ eax - 0x3b ] 0x0
je r-xdata
add al [ eax ]
std
call [ rw-data ]
mov esp [ eax + 0x34 ]
in eax 0xff
add cl [ ecx - 0xe7e37b ]
push [ ebx ]
cmp eax 0x183c8589
movsx eax cl
lodsd [ esi ]
call 0x13deb19
pop ecx
test [ 0x708b3a74 ] edi
xor al 0xe5
inc [ edx ]
sub ecx ebx
add esi [ eax - 0x423fccf0 ]
cmp ecx eax
ja r-xdata
jmp sub_40b160
inc eax
in eax 0x2
call [ ecx + 0x50 ]
add dh [ ebp - 0xfd1ae4 ]
inc ebx
add [ eax ] al
mov esi 0x184485ff
xor al 0x88
test al 0xf4
mov [ ebp + 0x8 ] cl
and [ eax + 0x38 ] 0xfffffffd
push 0x2
lea edi [ eax - 0x4914af0c ]
sub_40b271
inc cl
cmp [ ebp - 0x1a3f ] esi
je r-xdata
add [ esi - 0x3c ] bh
or al 0x83
add eax 0x70840fff
add al 0x0
add dh cl
rcl [ eax + 0x50 ] 0x97
add eax 0x51094d8d
push 0x1
jo r-xdata
cmp ch ah
add bh bh
jl r-xdata
jmp sub_40b160
inc eax
in eax 0x2
call [ ecx + 0x50 ]
jle r-xdata
inc [ edx ]
push eax
push esi
lea edi [ eax + 0x788b50f4 ]
sub ch ah
inc [ edx ]
mov eax [ eax ]
dec ecx
pop es
call [ r--data ]
js r-xdata
and ch ah
add bh bh
add [ edi ] cl
jns r-xdata
add dh [ ebp - 0xfd1ae4 ]
inc ebx
push ecx
push eax
je r-xdata
add [ eax - 0x40 ] bh
add [ eax ] al
std
push 0x0
lea edi [ eax + 0x3c ]
in eax 0xff
add dl [ eax + 0x6a ]
add [ eax + 0x45 ] esi
hlt
jle r-xdata
jbe r-xdata
aam 0xff
add cl [ ebx - 0x781f7bb ]
inc esp
sbb bh bh
inc esp
in eax 0x2
dec [ ebx - 0x1a3273 ]
sub_40b65d
jo r-xdata
add [ esi - 0x28 ] dh
cmp ebx esi
test [ edi + 0x6a00fd00 ] dl
add [ eax - 0x7b ] dh
sub al 0xe5
add bh bh
push eax
sub al 0xe5
add bh bh
push ecx
dec [ eax - 0x364a00f0 ]
in eax 0xff
inc [ edx ]
xor bh bh
adc eax r--data
js r-xdata
mov bh 0x12
cld
mov ch 0x44
in eax 0x2
inc [ ebx ]
xor eax 0xffff16f0
push eax
jbe r-xdata
in eax 0xff
add bh [ ebx ]
fidivr [ edi - 0x5f ]
mov eax [ ebp - 0xe7bc ]
sub edi [ eax + 0x34 ]
in eax 0xff
add cl [ ecx - 0xe7c77b ]
je r-xdata
into
fwait
cmp edx 0xa
mov [ esi ] cl
push 0xd
cmpsb [ esi ] [ edi ]
mov [ eax ] bx
inc dh
add [ ebp - 0x1a3f ] esi
cld
mov ch 0x3c
in eax 0x2
jmp [ esi - 0x77 ]
sub ch ah
add bh bh
mov eax [ eax ]
add dh [ edi + eax ]
call [ rw-data ]
jbe r-xdata
jbe r-xdata
push 0xfffffff8
pop esi
cmp [ ebp - 0x1a43 ] esi
mov [ eax + ebp * 8 ] dl
and eax 0xc7ffff35
std
or [ eax ] eax
add ch bh
call 0xffffffffff437ef4
mov [ eax ] esi
push ss
aas
push [ ebp - 0x1a43 ]
adc eax 0x2ffc831
pop ecx
jmp r-xdata
mov edi [ esi ]
sub eax esi
push eax
jo r-xdata
sub al 0xe5
add bh bh
mov [ eax + 0x40 ] edi
in eax 0xff
add al [ ebx - 0xe7c743 ]
inc [ eax ]
mov [ ebx + eax * 4 - 0x43 ] ch
mov ebp 0xfdffffe5
je r-xdata
enter 0x41d4 0x0
sub ch ah
add bh bh
mov eax [ esi ]
or eax [ edi + eax + 0x4 ]
mov ebp 0x788b0f74
xor al 0xe5
inc [ edx ]
cmp [ eax ] 0x1a
mov [ ebx + esi ] al
rcl [ esi ] 0x24
call 0x3ff1e1
or eax 0xffffffff
push ss
or al 0x8b
test ebp eax
in eax 0xff
call esi
test [ eax ] esi
in eax 0x2
[ edi + 0x5b ]
and [ ebp - 0x1a43 ] 0xfffffffd
mov [ ebp - 0xe7c8 ] eax
jmp r-xdata
mov ebp eax
call 0xffffffffff437ee1
mov [ eax ] 0xf4
stosb [ edi ]
push edi
push edi
push edi
stosb [ edi ]
call 0xffffffffff439ad4
add esp 0xffffffe9
jmp r-xdata
cld
xor esi [ eax ]
pop esi
call 0x3ffcef
leave
push 0x10
push r--data
adc eax 0x2ffd49a
mov eax [ ebp + 0x8 ]
jle r-xdata
jle r-xdata
aam 0xff
add cl [ ebx - 0x781f7bb ]
jbe r-xdata
pop edi
pop ebx
sub_40ba70
push esi
adc eax 0xfd00170a
cmp [ ebx - 0x79eaffbc ] ecx
mov bl 0xff
add al [ ebx + 0x4476c425 ]
add [ eax ] al
cmp eax 0x6a318959
add [ esi - 0x2f4d318 ] ebp
add [ ecx + 0x59 ] bl
je r-xdata
jmp r-xdata
add bh al
clc
push 0x1fd44a7
add [ eax ] al
std
xor eax eax
call 0x13dd20b
add esp 0xfffffff1
test eax eax
je r-xdata
test eax eax
mov [ esi + 0x56 ] ecx
pop ecx
cmpsb [ esi ] [ edi ]
pop edi
pop esi
retn
push ebx
lodsd [ esi ]
xor eax eax
push eax
lodsd [ esi ]
push eax
push eax
push eax
adc eax 0x2ffdf02
add esp 0x14
jle r-xdata
mov ebx eax
inc ebx
jge r-xdata
jle r-xdata
add al 0x3
push cs
cmp [ esi ] 0x0
mov [ ecx - 0x74c6ca01 ] bh
inc esp
add [ 0x2ffb386 ] dl
and [ rw-data ] 0x0
sub_40baf4
mov eax [ edx ]
push ebp
mov ebp esp
lodsb [ esi ]
mov ecx [ ebp + 0x10 ]
scasb [ edi ]
xor eax eax
push esi
je r-xdata
add [ eax ] eax
add ch bh
cmp [ ebp + 0x8 ] eax
mov [ ecx ] ecx
mov ebx [ ebp - 0xb ]
add [ ebp + 0x8 ] 0xfffffff9
mov [ ebx ] edx
mov [ eax - 0x20c17f04 ] edi
mov esi edx
jbe r-xdata
xor edi [ 0x4efc4539 ]
and cl [ edi ]
xchg esp eax
cmp eax 0x1458946
jmp r-xdata
dec ebp
int1
mov al [ esi ]
or al 0xc7
cld
add [ eax + 0x547500fc ] 0xffffff80
sti
and [ ecx - 0xb047ffb ] cl
jne r-xdata
cmp [ esi ] 0xdf
test [ edi ] ebp
je r-xdata
sbb [ eax - 0x3c7fff04 ] 0x0
je r-xdata
jns r-xdata
ja r-xdata
jne r-xdata
cmp bl 0xf4
add [ eax ] al
std
cmp [ ebp + 0x8 ] 0xfffffffd
mov [ esi ] al
inc esi
jmp r-xdata
cmp al 0x20
mov [ esp + edi ] eax
or [ eax + 0xeeb4606 ] ecx
dec esi
jmp r-xdata
add al [ ecx ]
xor ebx ebx
mov esi 0xffebc933
inc esi
inc ecx
add bl 0x5c
je r-xdata
mov edi [ eax - 0xaba7cf8 ]
add al 0x89
adc [ edx ] al
add [ ebx ] esi
fstp [ esi - 0x1436cd ]
je r-xdata
or ch bh
jge r-xdata
int1
and dh [ ebp - 0x25 ]
test cl 0x1
mov [ edi ] bl
add [ eax + 0x17d831f ] ecx
add [ esp + ecx + 0x70 ] dh
cmp al 0x9
je r-xdata
mov al [ esi ]
test [ 0xffffffff80835574 ] bh
cld
add [ ebp - 0xb ] dh
cmp al 0x20
je r-xdata
into
shl [ ebx ] 0xdb
les eax [ ebp - 0x4 ]
punpckhwd mmx0 mmx0
mov [ ebp + 0x1 ] eax
jo r-xdata
cmp [ ebp + 0x1 ] 0x0
je r-xdata
jmp r-xdata
inc esi
or al 0x70
test ebx ebx
je r-xdata
ror [ edi ] 0xbe
shr [ ebp - 0x218b2d7b ] 0xe8
jpo r-xdata
add [ eax + 0x47522c5 ] eax
jbe r-xdata
shr ecx 0x1
test [ esp + esi * 2 ] esi
adc cl [ ecx + 0x78 ]
shl [ esp + eax + 0x3b ] cl
add bl [ edx + eax * 2 + 0x2 ]
pop es
test ecx ecx
mov cl dh
mov [ ebp - 0xf ] edx
movsx eax al
lodsd [ esi ]
test edx edx
je r-xdata
mov ebp [ eax - 0x5416b9f4 ]
std
add [ ecx - 0x7b ] bl
cmp eax 0xfb8a0d74
push ebp
mov ecx [ ebp + 0xc ]
add al [ ebp + 0xc ]
mov ah bh
inc esi
inc [ edi ]
jbe r-xdata
call 0x13debae
pop ecx
test [ 0xfffffffffb8a0d74 ] edi
in al dx
int1
push ebx
xor ebx ebx
stosd [ edi ]
push edi
cmp [ rw-data ] ebx
mov [ 0xc8e3e8 ] al
add [ eax - 0x7 ] ch
add [ eax ] eax
add [ ebx - 0x50 ] al
xchg ebx eax
inc esp
std
push esi
or al 0x8a
sti
inc [ ebp + 0xc ]
jne r-xdata
dec [ esi + 0x3cf88b42 ]
out 0x2 eax
dec esp
lea edi [ ecx - 0x763cc500 ]
pop es
mov [ ebp + 0x1 ] eax
cmp [ eax ] bl
or eax 0x2f5815
std
pop ecx
test eax eax
mov [ ebx ] eax
inc esi
jmp r-xdata
jne r-xdata
mov [ ebp - 0x4 ] esi
jbe r-xdata
inc [ edi ]
or al 0xb5
mov [ 0xb98d30 ] eax
mov [ rw-data ] esi
into
cld
lea edi [ eax - 0x51acaf08 ]
lea edi [ ebp - 0xc ]
adc eax 0x2fffe0a
mov eax [ ebp - 0x8 ]
jle r-xdata
push eax
call sub_40c5b1
jbe r-xdata
[ edi - 0x5d ]
pop ebx
leave
retn
push ebx
mov al ah
mov ah 0x94
inc esp
std
call [ rw-data ]
mov eax [ rw-data ]
je r-xdata
or al 0x3d
add bh bh
add cl [ ebp - 0x3ec4f007 ]
pop ecx
cmp ecx [ esi ]
je r-xdata
jle r-xdata
shr bl 0x3
mov ebp [ eax + 0x5458dfc ]
push eax
add edi esi
stosb [ edi ]
push esi
lea edi [ ebp + 0x9 ]
call 0xffffffffff43baf4
mov eax [ ebp + 0x5 ]
add esp 0xc
mov ch 0xa3
xor [ ebp + 0x358900b9 ] cl
leave
lea eax [ eax + eax - 0x32 ]
sub_40bb85
mov edi 0x988300ff
cld
add [ eax - 0x7bf0ff3d ] al
adc al 0x0
add [ eax ] al
mov [ esi ] al
inc esi
jmp r-xdata
cmp al 0x20
mov [ esp + edi ] eax
or [ eax + 0xeeb4606 ] ecx
dec esi
jmp r-xdata
or ch bh
sbb [ eax - 0x3c7fff04 ] 0x0
je r-xdata
add al [ ecx ]
xor ebx ebx
mov esi 0xffebc933
inc esi
inc ecx
add bl 0x5c
je r-xdata
mov edi [ eax - 0xaba7cf8 ]
add al 0x89
adc [ edx ] al
add [ ebx ] esi
fstp [ esi - 0x1436cd ]
jns r-xdata
ja r-xdata
jge r-xdata
cmp bl 0xf4
je r-xdata
add [ eax ] al
std
cmp [ ebp + 0x8 ] 0xfffffffd
int1
and dh [ ebp - 0x25 ]
test cl 0x1
mov [ edi ] bl
cmp [ esi ] 0xdf
jne r-xdata
test [ edi ] ebp
je r-xdata
add [ eax + 0x17d831f ] ecx
add [ esp + ecx + 0x70 ] dh
cmp al 0x9
je r-xdata
mov al [ esi ]
test [ 0xffffffff80835574 ] bh
cld
add [ ebp - 0xb ] dh
cmp al 0x20
je r-xdata
into
shl [ ebx ] 0xdb
les eax [ ebp - 0x4 ]
punpckhwd mmx0 mmx0
mov [ ebp + 0x1 ] eax
jo r-xdata
xor edi [ 0x4efc4539 ]
and cl [ edi ]
xchg esp eax
cmp eax 0x1458946
jmp r-xdata
cmp [ ebp + 0x1 ] 0x0
je r-xdata
jmp r-xdata
inc esi
or al 0x70
test ebx ebx
je r-xdata
ror [ edi ] 0xbe
shr [ ebp - 0x218b2d7b ] 0xe8
jpo r-xdata
add [ eax + 0x47522c5 ] eax
jbe r-xdata
jne r-xdata
add [ eax + 0x547500fc ] 0xffffff80
sti
and [ ecx - 0xb047ffb ] cl
shr ecx 0x1
test [ esp + esi * 2 ] esi
adc cl [ ecx + 0x78 ]
shl [ esp + eax + 0x3b ] cl
add bl [ edx + eax * 2 + 0x2 ]
pop es
test ecx ecx
mov cl dh
mov [ ebp - 0xf ] edx
movsx eax al
lodsd [ esi ]
test edx edx
je r-xdata
mov ebp [ eax - 0x5416b9f4 ]
std
add [ ecx - 0x7b ] bl
cmp eax 0xfb8a0d74
push ebp
mov ecx [ ebp + 0xc ]
add al [ ebp + 0xc ]
mov ah bh
inc esi
inc [ edi ]
jbe r-xdata
call 0x13debae
pop ecx
test [ 0xfffffffffb8a0d74 ] edi
in al dx
int1
push ebx
xor ebx ebx
stosd [ edi ]
push edi
cmp [ rw-data ] ebx
mov [ 0xc8e3e8 ] al
add [ eax - 0x7 ] ch
add [ eax ] eax
add [ ebx - 0x50 ] al
xchg ebx eax
inc esp
std
push esi
or al 0x8a
sti
inc [ ebp + 0xc ]
jne r-xdata
dec [ esi + 0x3cf88b42 ]
out 0x2 eax
dec esp
lea edi [ ecx - 0x763cc500 ]
pop es
mov [ ebp + 0x1 ] eax
cmp [ eax ] bl
or eax 0x2f5815
std
pop ecx
test eax eax
mov [ ebx ] eax
inc esi
jmp r-xdata
jne r-xdata
mov [ ebp - 0x4 ] esi
jbe r-xdata
inc [ edi ]
or al 0xb5
mov [ 0xb98d30 ] eax
mov [ rw-data ] esi
into
cld
lea edi [ eax - 0x51acaf08 ]
lea edi [ ebp - 0xc ]
adc eax 0x2fffe0a
mov eax [ ebp - 0x8 ]
jle r-xdata
push eax
call sub_40c5b1
jbe r-xdata
[ edi - 0x5d ]
pop ebx
leave
retn
push ebx
mov al ah
mov ah 0x94
inc esp
std
call [ rw-data ]
mov eax [ rw-data ]
je r-xdata
or al 0x3d
add bh bh
add cl [ ebp - 0x3ec4f007 ]
pop ecx
cmp ecx [ esi ]
je r-xdata
jle r-xdata
shr bl 0x3
mov ebp [ eax + 0x5458dfc ]
push eax
add edi esi
stosb [ edi ]
push esi
lea edi [ ebp + 0x9 ]
call 0xffffffffff43baf4
mov eax [ ebp + 0x5 ]
add esp 0xc
mov ch 0xa3
xor [ ebp + 0x358900b9 ] cl
leave
lea eax [ eax + eax - 0x32 ]
sub_40bba7
add [ edi ] cl
cmp bl 0xf4
add [ eax ] al
std
cmp [ ebp + 0x8 ] 0xfffffffd
cmp [ esi ] 0xdf
jne r-xdata
test [ edi ] ebp
je r-xdata
add al [ ecx ]
xor ebx ebx
mov esi 0xffebc933
inc esi
inc ecx
add bl 0x5c
je r-xdata
mov edi [ eax - 0xaba7cf8 ]
add al 0x89
adc [ edx ] al
add [ ebx ] esi
fstp [ esi - 0x1436cd ]
xor edi [ 0x4efc4539 ]
and cl [ edi ]
xchg esp eax
cmp eax 0x1458946
jmp r-xdata
sbb [ eax - 0x3c7fff04 ] 0x0
je r-xdata
jge r-xdata
jne r-xdata
add [ eax + 0x547500fc ] 0xffffff80
sti
and [ ecx - 0xb047ffb ] cl
jns r-xdata
ja r-xdata
int1
and dh [ ebp - 0x25 ]
test cl 0x1
mov [ edi ] bl
mov [ esi ] al
inc esi
jmp r-xdata
cmp al 0x20
mov [ esp + edi ] eax
or [ eax + 0xeeb4606 ] ecx
dec esi
jmp r-xdata
add [ eax + 0x17d831f ] ecx
add [ esp + ecx + 0x70 ] dh
cmp al 0x9
je r-xdata
mov al [ esi ]
test [ 0xffffffff80835574 ] bh
cld
add [ ebp - 0xb ] dh
cmp al 0x20
je r-xdata
into
shl [ ebx ] 0xdb
les eax [ ebp - 0x4 ]
punpckhwd mmx0 mmx0
mov [ ebp + 0x1 ] eax
jo r-xdata
je r-xdata
or ch bh
cmp [ ebp + 0x1 ] 0x0
je r-xdata
jmp r-xdata
inc esi
or al 0x70
test ebx ebx
je r-xdata
ror [ edi ] 0xbe
shr [ ebp - 0x218b2d7b ] 0xe8
jpo r-xdata
add [ eax + 0x47522c5 ] eax
jbe r-xdata
shr ecx 0x1
test [ esp + esi * 2 ] esi
adc cl [ ecx + 0x78 ]
shl [ esp + eax + 0x3b ] cl
add bl [ edx + eax * 2 + 0x2 ]
pop es
test ecx ecx
mov cl dh
mov [ ebp - 0xf ] edx
movsx eax al
lodsd [ esi ]
test edx edx
je r-xdata
mov ebp [ eax - 0x5416b9f4 ]
std
add [ ecx - 0x7b ] bl
cmp eax 0xfb8a0d74
push ebp
mov ecx [ ebp + 0xc ]
add al [ ebp + 0xc ]
mov ah bh
inc esi
inc [ edi ]
jbe r-xdata
call 0x13debae
pop ecx
test [ 0xfffffffffb8a0d74 ] edi
in al dx
int1
push ebx
xor ebx ebx
stosd [ edi ]
push edi
cmp [ rw-data ] ebx
mov [ 0xc8e3e8 ] al
add [ eax - 0x7 ] ch
add [ eax ] eax
add [ ebx - 0x50 ] al
xchg ebx eax
inc esp
std
push esi
or al 0x8a
sti
inc [ ebp + 0xc ]
jne r-xdata
dec [ esi + 0x3cf88b42 ]
out 0x2 eax
dec esp
lea edi [ ecx - 0x763cc500 ]
pop es
mov [ ebp + 0x1 ] eax
cmp [ eax ] bl
or eax 0x2f5815
std
pop ecx
test eax eax
mov [ ebx ] eax
inc esi
jmp r-xdata
jne r-xdata
mov [ ebp - 0x4 ] esi
jbe r-xdata
inc [ edi ]
or al 0xb5
mov [ 0xb98d30 ] eax
mov [ rw-data ] esi
into
cld
lea edi [ eax - 0x51acaf08 ]
lea edi [ ebp - 0xc ]
adc eax 0x2fffe0a
mov eax [ ebp - 0x8 ]
jle r-xdata
push eax
call sub_40c5b1
jbe r-xdata
[ edi - 0x5d ]
pop ebx
leave
retn
push ebx
mov al ah
mov ah 0x94
inc esp
std
call [ rw-data ]
mov eax [ rw-data ]
je r-xdata
or al 0x3d
add bh bh
add cl [ ebp - 0x3ec4f007 ]
pop ecx
cmp ecx [ esi ]
je r-xdata
jle r-xdata
shr bl 0x3
mov ebp [ eax + 0x5458dfc ]
push eax
add edi esi
stosb [ edi ]
push esi
lea edi [ ebp + 0x9 ]
call 0xffffffffff43baf4
mov eax [ ebp + 0x5 ]
add esp 0xc
mov ch 0xa3
xor [ ebp + 0x358900b9 ] cl
leave
lea eax [ eax + eax - 0x32 ]
sub_40bc7c
inc [ edx ]
mov eax [ ebp + 0x8 ]
mov [ 0xffffffff89c0855b ] eax
add eax [ ebx + 0x1fffd20 ]
leave
mov edi edi
push ebp
jbe r-xdata
inc ebp
or [ ebx - 0x763f7aa5 ] ah
sub esp 0xfffffff1
push ebx
xor ebx ebx
stosd [ edi ]
push edi
cmp [ rw-data ] ebx
mov [ 0xc8e3e8 ] al
add [ eax - 0x7 ] ch
add [ eax ] eax
add [ ebx - 0x50 ] al
xchg ebx eax
inc esp
std
push esi
dec [ esi + 0x3cf88b42 ]
out 0x2 eax
dec esp
lea edi [ ecx - 0x763cc500 ]
pop es
mov [ ebp + 0x1 ] eax
cmp [ eax ] bl
jne r-xdata
mov [ ebp - 0x4 ] esi
jbe r-xdata
or al 0xb5
mov [ 0xb98d30 ] eax
mov [ rw-data ] esi
into
cld
lea edi [ eax - 0x51acaf08 ]
lea edi [ ebp - 0xc ]
adc eax 0x2fffe0a
mov eax [ ebp - 0x8 ]
jle r-xdata
push eax
call sub_40c5b1
jbe r-xdata
[ edi - 0x5d ]
pop ebx
leave
retn
push ebx
mov al ah
mov ah 0x94
inc esp
std
call [ rw-data ]
mov eax [ rw-data ]
je r-xdata
or al 0x3d
add bh bh
add cl [ ebp - 0x3ec4f007 ]
pop ecx
cmp ecx [ esi ]
je r-xdata
jle r-xdata
shr bl 0x3
mov ebp [ eax + 0x5458dfc ]
push eax
add edi esi
stosb [ edi ]
push esi
lea edi [ ebp + 0x9 ]
call 0xffffffffff43baf4
mov eax [ ebp + 0x5 ]
add esp 0xc
mov ch 0xa3
xor [ ebp + 0x358900b9 ] cl
leave
lea eax [ eax + eax - 0x32 ]
sub_40bd0a
push eax
add cl [ ebp - 0x3ec4f007 ]
pop ecx
cmp ecx [ esi ]
je r-xdata
jle r-xdata
mov ebp [ eax + 0x5458dfc ]
push eax
add edi esi
stosb [ edi ]
push esi
lea edi [ ebp + 0x9 ]
call 0xffffffffff43baf4
mov eax [ ebp + 0x5 ]
add esp 0xc
mov ch 0xa3
xor [ ebp + 0x358900b9 ] cl
leave
lea eax [ eax + eax - 0x32 ]
shr bl 0x3
call sub_40c5b1
jbe r-xdata
push eax
[ edi - 0x5d ]
pop ebx
leave
retn
sub_40bde7
add [ edi ] 0xfffffffd
sbb [ ebp + 0xf ] dh
mov esi [ rw-data ]
push ebx
scasb [ edi ]
push ebx
sub eax edi
scasb [ edi ]
sar eax 0x1
inc eax
lodsd [ esi ]
push edi
push ebx
push ebx
je r-xdata
jne r-xdata
clc
push [ esp + eax + 0x3b ]
r-xdata
jbe r-xdata
add dh [ ebp - 0x4 ]
call sub_406ed3
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] ebx
xor eax eax
jmp r-xdata
cld
push edi
add dl [ 0xbc297c ]
mov eax ebx
push ss
pop esp
cmp eax 0xffffffff
je r-xdata
add [ ecx - 0x77 ] bl
mov eax 0x89c33bfc
and [ ebx + 0x53 ] edx
add dh [ ebp - 0x8 ]
push eax
add dh [ ebp - 0xc ]
push edi
scasb [ edi ]
push ebx
call esi
js r-xdata
pop es
std
cmp edi [ esi ]
jne r-xdata
sub_40be07
cld
cld
push edi
add dl [ 0xbc297c ]
mov eax ebx
push ss
pop esp
cmp eax 0xffffffff
je r-xdata
cmp edi [ esi ]
jne r-xdata
xor eax eax
jmp r-xdata
pop es
std
add [ ecx - 0x77 ] bl
mov eax 0x89c33bfc
and [ ebx + 0x53 ] edx
add dh [ ebp - 0x8 ]
push eax
add dh [ ebp - 0xc ]
push edi
scasb [ edi ]
push ebx
call esi
js r-xdata
sbb [ ebp + 0xf ] dh
mov esi [ rw-data ]
push ebx
scasb [ edi ]
push ebx
sub eax edi
scasb [ edi ]
sar eax 0x1
inc eax
lodsd [ esi ]
push edi
push ebx
push ebx
je r-xdata
jne r-xdata
clc
push [ esp + eax + 0x3b ]
r-xdata
jbe r-xdata
call sub_406ed3
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] ebx
add dh [ ebp - 0x4 ]
sub_40be56
sti
jne r-xdata
add dh [ ebp - 0x8 ]
push esi
stosb [ edi ]
call 0xffffffffff437000
add esp 0xfffffff1
push esi
call [ r--data ]
jbe r-xdata
stosd [ edi ]
call [ rw-data ]
jmp r-xdata
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
cmpsb [ esi ] [ edi ]
leave
retn
push ss
pop esp
cmp eax 0xffffffff
je r-xdata
std
mov edi eax
pop ecx
sub eax esi
inc eax
lodsd [ esi ]
mov [ ebp - 0x8 ] eax
adc eax 0xfd00071c
cmp edi [ esi ]
jne r-xdata
xor eax eax
jmp r-xdata
pop es
std
add [ ecx - 0x77 ] bl
mov eax 0x89c33bfc
and [ ebx + 0x53 ] edx
add dh [ ebp - 0x8 ]
push eax
add dh [ ebp - 0xc ]
push edi
scasb [ edi ]
push ebx
call esi
js r-xdata
sbb [ ebp + 0xf ] dh
mov esi [ rw-data ]
push ebx
scasb [ edi ]
push ebx
sub eax edi
scasb [ edi ]
sar eax 0x1
inc eax
lodsd [ esi ]
push edi
push ebx
push ebx
je r-xdata
jne r-xdata
clc
push [ esp + eax + 0x3b ]
r-xdata
jbe r-xdata
add dh [ ebp - 0x4 ]
call sub_406ed3
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] ebx
cld
push edi
add dl [ 0xbc297c ]
mov eax ebx
sub_40bec9
mov [ 0x28bc35e ] al
push ebp
mov ebp esp
stosd [ edi ]
push [ rw-data ]
mov ecx eax
test al 0x28
inc ecx
std
call esi
test [ 0xfffffffffda12174 ] edi
add [ eax + eax + 0x7e ] 0xfffffff8
push [ edx + ebp * 8 + 0x50 ]
push [ rw-data ]
add dl dh
call eax
js r-xdata
pop es
test [ 0x2dff0274 ] edi
add edi 0x4
je r-xdata
inc ebx
hlt
jbe r-xdata
retn
clc
add ebp edi
add bl ch
daa
sub_40bf87
adc eax rw-data
test [ 0x15560b75 ] edi
into
inc [ edx ]
pop ecx
test eax eax
mov [ eax ] ebx
push rw-data
push eax
add dl [ 0xbc2a58 ]
test eax eax
mov [ eax ] ecx
push [ ebp - 0xb ]
call eax
mov [ eax - 0xaba74f8 ] edi
pop esi
pop ebp
retn
sub_40bfc7
add al 0x83
mov ecx 0x5515ff00
sub [ ecx ] al
jbe r-xdata
call [ esi + 0x2 ]
xor eax 0xb98304
call [ r--data ]
test esi esi
mov [ ebx ] bl
push [ rw-data ]
adc eax 0x2ffff65
pop ecx
mov esi eax
stosd [ edi ]
push [ rw-data ]
sub_40bfcc
adc eax r--data
jbe r-xdata
call [ esi + 0x2 ]
xor eax 0xb98304
call [ r--data ]
test esi esi
mov [ ebx ] bl
push [ rw-data ]
adc eax 0x2ffff65
pop ecx
mov esi eax
stosd [ edi ]
push [ rw-data ]
sub_40c1bb
or [ ebp - 0x77bf0f5 ] al
std
add [ eax ] al
mov edi [ ebx - 0x763f7adc ]
pop es
push eax
call sub_406e5b
movsb [ edi ] [ esi ]
mov eax [ esi + 0x2c ]
js r-xdata
jg r-xdata
je r-xdata
inc [ edx ]
dec [ ebx + 0x75f678f0 ]
or [ edi + 0x3144e810 ] dl
add bh bh
mov edi [ ebx - 0x763f7acc ]
pop es
push eax
call sub_406e93
movsb [ edi ] [ esi ]
mov eax [ esi + 0x3c ]
js r-xdata
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
mov esi eax
stosd [ edi ]
call 0xffffffffff43c11a
jne r-xdata
add al ch
0x76ffffca 0x875
je r-xdata
jbe r-xdata
xchg edi eax
adc al ch
inc esp
xor edi edi
[ ecx + 0x76 ]
mov edi [ ebx - 0x763f7ac0 ]
pop es
push eax
call sub_406ecb
movsb [ edi ] [ esi ]
mov eax [ esi + 0x44 ]
js r-xdata
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
call 0xfffffffffd81eaee
je r-xdata
js r-xdata
mov edi [ ebx - 0x763f7ab8 ]
pop es
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
js r-xdata
or [ esi + 0x4 ] 0x2
mov [ esi ] eax
jmp r-xdata
inc ecx
std
push 0xd
adc eax 0x2ffbe98
pop ecx
and [ ebp + 0x1 ] 0x0
mov edi [ esi - 0x6b ]
test edi edi
je r-xdata
push eax
adc eax 0x2ffac12
pop ecx
push edi
call [ r--data ]
js r-xdata
push eax
call sub_406f03
movsb [ edi ] [ esi ]
mov eax [ esi + 0x5c ]
shr [ eax + 0x32 ] 0x41
std
je r-xdata
xor [ edx + eax - 0x4474a601 ] ebp
dec eax
test eax eax
mov [ edi ] eax
jne r-xdata
jl r-xdata
jmp [ eax - 0x7d ]
pushad
cmp [ ecx - 0x55f88c00 ] 0xffffffe8
in eax 0xab
add bh bh
pop ecx
sub_40c240
add [ gs : eax ] eax
mov edi [ esi - 0x6b ]
test edi edi
je r-xdata
adc eax 0x2ffac12
pop ecx
push edi
call [ r--data ]
js r-xdata
xor [ edx + eax - 0x4474a601 ] ebp
dec eax
test eax eax
mov [ edi ] eax
push eax
call sub_406f03
movsb [ edi ] [ esi ]
mov eax [ esi + 0x5c ]
shr [ eax + 0x32 ] 0x41
std
je r-xdata
jne r-xdata
push 0xd
adc eax 0x2ffbe98
pop ecx
and [ ebp + 0x1 ] 0x0
push eax
jl r-xdata
jmp [ eax - 0x7d ]
pushad
cmp [ ecx - 0x55f88c00 ] 0xffffffe8
in eax 0xab
add bh bh
pop ecx
sub_40c2f6
pop ecx
mov edi eax
js r-xdata
dec [ edi ]
test [ ebx + 0x76000001 ] ah
xor eax 0xbc2a58
push rw-data
push edi
add dl dh
je r-xdata
inc ecx
std
mov esi [ ebp - 0x4 ]
into
jne r-xdata
jbe r-xdata
mov esp 0x4469
push rw-data
push edi
pop esi
mov esp 0xfffd4494
salc
push r--data
stosb [ edi ]
mov [ 0xb994c0 ] eax
call esi
xchg ebp eax
and [ ebx ] dh
inc ecx
std
push edi
mov [ rw-data ] eax
[ ebx ]
pop eax
sub bh [ eax + eax + 0x41ce4068 ]
add [ edi + 0x2 ] dl
salc
add [ edi + edi * 4 + 0x40 ] al
add [ ebp + esi - 0x3c ] dh
xchg esp eax
mov ecx 0x69c8a300
and al 0xbc
add [ ebx + rw-data ] ah
je r-xdata
jbe r-xdata
sub eax [ ebx + 0x4469bc3d ]
add [ eax ] al
cmp [ rw-data ] 0x0
mov [ 0xffffffff94393d83 ] ecx
inc esp
add ch bh
je r-xdata
inc esp
add bh bh
call 0xfffffffffd81e782
mov [ 0xb98304 ] eax
cmp eax 0x2
je rw-data
mov eax [ r--data ]
pop esi
rcl [ esp + eax * 2 + 0x2590a1fd ] 0xbc
add bh al
add eax rw-data
inc esp
mov edi 0x35740040
les edx [ ecx + edi * 4 + 0x69c8a300 ]
test [ 0x55a12475 ] edi
sub [ ecx ] al
sub_40c398
dec eax
rcl [ esp + eax * 2 - 0x2900af03 ] 0x78
ror [ edi ] 0x84
inc esi
add [ eax ] al
add [ 0x2ffccf8 ] dl
push [ rw-data ]
call sub_40bfa7
add dh [ 0xb994c0 ]
mov [ rw-data ] eax
call sub_40bfc7
add dh [ 0xb994c4 ]
mov [ rw-data ] eax
call sub_40bde7
add dh [ 0xb994c8 ]
mov [ rw-data ] eax
call sub_40be07
jle r-xdata
xor eax rw-data
adc [ ebx + rw-data ] ah
adc eax 0x2ffbb64
test eax eax
je r-xdata
je rw-data
push 0xbdc1ad
push [ rw-data ]
adc eax 0x2fffb3d
pop ecx
call eax
pop esi
add [ ebx - 0x77c02bc ] al
dec [ ecx - 0xeb97b8 ]
add [ eax ] al
push 0xfffffffc
call 0x13dc5b3
mov esi eax
movsb [ edi ] [ esi ]
pop ecx
test esi esi
mov [ esi + edx * 2 ] esi
dec eax
add [ ebx + 0x35fffd44 ] al
les ebp [ ecx + 0x44 ]
add al ch
idiv ebx
sub_40c570
push ebp
jbe r-xdata
inc ebp
push esi
push edi
into
idiv bh
jne r-xdata
call [ ebp + 0x76 ]
in al dx
call 0xffffffffff436f25
mov edi eax
movsb [ edi ] [ esi ]
test edi edi
jne r-xdata
cld
add edi edi
cmp [ rw-data ] eax
jbe sub_40c570
push esi
call [ r--data ]
jo r-xdata
std
push [ ebp + 0xc ]
add dh [ ebp + 0x8 ]
call 0x3b41c29f
add eax rw-data
mov eax [ ebx ]
or eax 0x2
mov esi eax
add [ 0x76ca75ff ] 0xffffffc7
pop edi
pop esi
sub_40c588
shr [ ecx + 0x44 ] 0x1
add [ esi - 0x1e ] dh
push esi
call [ r--data ]
jo r-xdata
std
push [ ebp + 0xc ]
add dh [ ebp + 0x8 ]
call 0x3b41c29f
add eax rw-data
mov eax [ ebx ]
or eax 0x2
mov esi eax
add [ 0x76ca75ff ] 0xffffffc7
pop edi
pop esi
sub_40c5b1
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
push esi
stosb [ edi ]
xor esi esi
or al ch
clc
xor [ eax ] al
add [ esi - 0x8 ] dh
add esp 0xfffffff1
test edi edi
jne r-xdata
0xc776
cmp [ rw-data ] eax
jbe r-xdata
push 0xfffffffd
push [ ebp + 0xc ]
add dh [ ebp + 0x8 ]
call sub_40f6c1
jbe r-xdata
push esi
call [ r--data ]
jo r-xdata
push ebp
call 0x3b41c2eb
add eax rw-data
mov eax [ ebx ]
or eax 0x2
mov esi eax
add [ 0x76c375ff ] 0xffffffc7
pop edi
pop esi
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
push esi
stosb [ edi ]
xor esi esi
dec [ eax - 0xa8a00f4 ]
call 0x13df6ec
mov edi eax
movsb [ edi ] [ esi ]
pop ecx
test edi edi
mov [ ecx + edi ] ch
inc ebp
int1
je r-xdata
mov eax edi
mov [ 0x31c35d5e ] al
int3
cmp eax edi
rcl [ esp + eax * 2 + 0x561f76fd ] 0x1
add dl [ 0xbc29b4 ]
lea eax [ esi + 0x315 ]
mov [ 0xb994d0 ] 0x76
add edi [ esi - 0x38 ]
dec [ ebx - 0x77cf3 ]
mov cl al
sub_40c614
clc
movsb [ edi ] [ esi ]
pop ecx
test edi edi
mov [ ecx + edi ] ch
inc ebp
int1
je r-xdata
mov eax edi
mov [ 0x31c35d5e ] al
int3
cmp eax edi
rcl [ esp + eax * 2 + 0x561f76fd ] 0x1
add dl [ 0xbc29b4 ]
lea eax [ esi + 0x315 ]
mov [ 0xb994d0 ] 0x76
add edi [ esi - 0x38 ]
dec [ ebx - 0x77cf3 ]
mov cl al
sub_40c95a
pushad
leave
inc eax
std
mov edi edi
jo r-xdata
or [ esi + 0x5f ] bl
xor al 0xc3
nop
mov bh [ ebx - 0x1b877fd ]
mov al [ esi + 0x2 ]
jne r-xdata
inc eax
add [ eax + 0x34 ] bh
inc eax
add [ eax - 0x63ffbfcc ] cl
xor al 0x40
add [ ebx + 0x5f5e08b8 ] cl
xor al 0xc3
nop
mov bh [ ebx - 0x1b877fd ]
mov eax [ ebp + 0x8 ]
mov [ 0x70c3c95f ] eax
dec ecx
add [ edx + 0x478803bb ] cl
dec [ edx + 0x47750246 ]
add cl [ ebx + 0x5f5e08b8 ]
sete dl
jbe r-xdata
add cl [ edx + 0x478801bb ]
cld
mov eax [ ebp + 0x8 ]
mov [ 0x31c3c95f ] eax
int3
xor esp ecx
int3
pop ebp
retn
sub_40ca1a
lea eax [ eax + ecx - 0x1b ]
test esi esi
jbe r-xdata
mov esi [ ebp - 0xd37fcc4 ]
mov bh 0x41
adc al 0xae
push esi
movzx ecx [ esi + eax - 0x72552dcd ]
inc esp
or ch ah
mov edi [ ebp + 0xc ]
jbe r-xdata
sar [ ebx - 0x47 ] 0x0
xor [ ebp + 0x5 ] eax
xor eax ebp
push eax
jo r-xdata
or al 0x3b
add al 0x72
or [ ebx - 0x26fcf75b ] ecx
loopne r-xdata
rol [ ebx + 0x45c7fce0 ] 0x1
cld
add edi edi
mov [ ebp - 0x4 ] 0xffffff03
jbe r-xdata
jo r-xdata
pop ecx
js r-xdata
inc esp
add al ch
jb r-xdata
jne r-xdata
inc ebp
or [ ebx + ebp * 8 + 0x5f3d3302 ] ah
jbe r-xdata
sar ebx 0xff
push eax
lea esi [ 0x2f331e8 ]
[ ecx - 0x5d ]
lea esp [ edi + 0x75020044 ]
or al ch
fdivrp st3
jo r-xdata
jle r-xdata
push 0xffffffe5
pop eax
pop esi
retn
fcomi st4
sub ebx edi
jo r-xdata
pop esi
pop ebx
xor al 0xc3
mov edi edi
stosd [ edi ]
push 0x4
push 0xffffffdd
call 0xffffffffff43c5b3
mov esi eax
stosd [ edi ]
call 0xffffffffff43becc
add esp 0xfffffff1
mov [ 0xb9a770 ] eax
mov [ rw-data ] eax
test [ ebx ] ecx
jne r-xdata
pop edi
adc [ ebx ] bh
cmp dh [ edx + 0x40 ]
push eax
add dh [ ebp - 0x4 ]
call sub_40c614
cmp al [ ebp - 0x4 ]
add [ ebx ] dh
cmp eax 0xf16ac35e
push 0xbc40d8
call 0x400ed0
call sub_408ebb
jle r-xdata
cli
add al 0x83
add eax 0xaa777204
call 0x13df907
mov edi eax
jo r-xdata
inc eax
mov esp 0x4258e800
cld
add [ edx ] al
jne r-xdata
call 0xffffffffff43becc
pop ecx
mov [ rw-data ] eax
add dh [ ebp + 0x8 ]
call sub_40bf87
je r-xdata
add al 0x59
xabort 0x73
inc [ edx ]
in al 0x3a
inc ebp
cld
call sub_40ca1a
movsb [ edi ] [ esi ]
mov [ ebp - 0x1c ] eax
push cs
add esi 0xfffffff9
push esi
call 0x3fd9cc
pop ecx
pop esi
insb
cmpsd [ esi ] [ edi ]
inc esp
std
mov eax [ ebp + 0x8 ]
movsb [ edi ] [ esi ]
jmp r-xdata
dec eax
inc ebp
add [ eax ] cl
dec [ ebx + 0x3b3a03c7 ]
mov eax edi
add edi [ edx ]
cmp eax edi
jb r-xdata
add ch bh
cmp edi eax
jae r-xdata
push eax
push [ ebp + 0x1 ]
call 0xffffffffff43c5ff
pop ecx
sub_40ca32
sti
jb r-xdata
pop edi
pop esi
cmpsb [ esi ] [ edi ]
mov edi 0xc628c083
salc
jb r-xdata
jbe r-xdata
pop ebp
retn
into
rcr [ edi + 0x5e ] 0xa6
sar [ ebx - 0x47 ] 0x0
xor [ ebp + 0x5 ] eax
xor eax ebp
push eax
jo r-xdata
or al 0x3b
add al 0x72
or [ ebx - 0x26fcf75b ] ecx
loopne r-xdata
rol [ ebx + 0x45c7fce0 ] 0x1
cld
add edi edi
mov [ ebp - 0x4 ] 0xffffff03
jbe r-xdata
jo r-xdata
pop ecx
js r-xdata
inc esp
add al ch
jb r-xdata
jne r-xdata
inc ebp
or [ ebx + ebp * 8 + 0x5f3d3302 ] ah
jbe r-xdata
sar ebx 0xff
push eax
lea esi [ 0x2f331e8 ]
[ ecx - 0x5d ]
lea esp [ edi + 0x75020044 ]
or al ch
fdivrp st3
jo r-xdata
jle r-xdata
push 0xffffffe5
pop eax
pop esi
retn
fcomi st4
sub ebx edi
jo r-xdata
pop esi
pop ebx
xor al 0xc3
mov edi edi
stosd [ edi ]
push 0x4
push 0xffffffdd
call 0xffffffffff43c5b3
mov esi eax
stosd [ edi ]
call 0xffffffffff43becc
add esp 0xfffffff1
mov [ 0xb9a770 ] eax
mov [ rw-data ] eax
test [ ebx ] ecx
jne r-xdata
pop edi
adc [ ebx ] bh
cmp dh [ edx + 0x40 ]
push eax
add dh [ ebp - 0x4 ]
call sub_40c614
cmp al [ ebp - 0x4 ]
add [ ebx ] dh
cmp eax 0xf16ac35e
push 0xbc40d8
call 0x400ed0
call sub_408ebb
jle r-xdata
cli
add al 0x83
add eax 0xaa777204
call 0x13df907
mov edi eax
jo r-xdata
inc eax
mov esp 0x4258e800
cld
add [ edx ] al
jne r-xdata
call 0xffffffffff43becc
pop ecx
mov [ rw-data ] eax
add dh [ ebp + 0x8 ]
call sub_40bf87
je r-xdata
add al 0x59
xabort 0x73
inc [ edx ]
in al 0x3a
inc ebp
cld
call sub_40ca1a
movsb [ edi ] [ esi ]
mov [ ebp - 0x1c ] eax
push cs
add esi 0xfffffff9
push esi
call 0x3fd9cc
pop ecx
pop esi
insb
cmpsd [ esi ] [ edi ]
inc esp
std
mov eax [ ebp + 0x8 ]
movsb [ edi ] [ esi ]
jmp r-xdata
dec eax
inc ebp
add [ eax ] cl
dec [ ebx + 0x3b3a03c7 ]
mov eax edi
add edi [ edx ]
cmp eax edi
jb r-xdata
add ch bh
cmp edi eax
jae r-xdata
push eax
push [ ebp + 0x1 ]
call 0xffffffffff43c5ff
pop ecx
sub_40ca7c
pop esi
add [ eax ] al
add ch bh
mov [ ebp - 0x18 ] esp
cmp al [ ebp - 0x4 ]
add ch bh
add [ eax ] al
push r--data
adc eax 0x2ffff2a
add esp 0x4
js r-xdata
add [ eax - 0x33 ] ch
mov [ eax ] es
cdq
mov eax [ 0xfd0000 ]
push eax
adc [ ecx ] 0x8
push ebx
push esi
stosb [ edi ]
mov eax [ 0xb97bc0 ]
xor [ ebp + 0x5 ] eax
xor eax ebp
push eax
jo r-xdata
je r-xdata
loopne r-xdata
mov [ ebp - 0x4 ] 0xffffff03
into
ror [ ebx - 0x769bf2b3 ] 0xd
std
add [ eax ] al
add [ edi + ebx * 2 - 0x1a89a4a2 ] ah
jbe r-xdata
rol [ ebx + 0x45c7fce0 ] 0x1
cld
add edi edi
mov [ ebp - 0x4 ] 0xffffff03
jbe r-xdata
cmp eax 0xc00000f8
xchg esp eax
retn 0x3f8b
or [ r--data ] ch
lodsd [ esi ]
push 0xbd0000
call 0x3fcd00
cmp [ ecx ] 0x8
test eax eax
mov [ ebx ] edi
mov eax [ eax - 0x27 ]
shr eax 0x1f
or dl al
and eax 0xfffffffc
jo r-xdata
pop ecx
js r-xdata
inc esp
add al ch
jb r-xdata
jne r-xdata
inc ebp
or [ ebx + ebp * 8 + 0x5f3d3302 ] ah
jbe r-xdata
sar ebx 0xff
push eax
lea esi [ 0x2f331e8 ]
[ ecx - 0x5d ]
lea esp [ edi + 0x75020044 ]
or al ch
fdivrp st3
jo r-xdata
jle r-xdata
push 0xffffffe5
pop eax
pop esi
retn
fcomi st4
sub ebx edi
jo r-xdata
pop esi
pop ebx
xor al 0xc3
mov edi edi
stosd [ edi ]
push 0x4
push 0xffffffdd
call 0xffffffffff43c5b3
mov esi eax
stosd [ edi ]
call 0xffffffffff43becc
add esp 0xfffffff1
mov [ 0xb9a770 ] eax
mov [ rw-data ] eax
test [ ebx ] ecx
jne r-xdata
pop edi
adc [ ebx ] bh
cmp dh [ edx + 0x40 ]
push eax
add dh [ ebp - 0x4 ]
call sub_40c614
cmp al [ ebp - 0x4 ]
add [ ebx ] dh
cmp eax 0xf16ac35e
push 0xbc40d8
call 0x400ed0
call sub_408ebb
jle r-xdata
cli
add al 0x83
add eax 0xaa777204
call 0x13df907
mov edi eax
jo r-xdata
inc eax
mov esp 0x4258e800
cld
add [ edx ] al
jne r-xdata
call 0xffffffffff43becc
pop ecx
mov [ rw-data ] eax
add dh [ ebp + 0x8 ]
call sub_40bf87
je r-xdata
add al 0x59
xabort 0x73
inc [ edx ]
in al 0x3a
inc ebp
cld
call sub_40ca1a
movsb [ edi ] [ esi ]
mov [ ebp - 0x1c ] eax
push cs
add esi 0xfffffff9
push esi
call 0x3fd9cc
pop ecx
pop esi
insb
cmpsd [ esi ] [ edi ]
inc esp
std
mov eax [ ebp + 0x8 ]
movsb [ edi ] [ esi ]
jmp r-xdata
dec eax
inc ebp
add [ eax ] cl
dec [ ebx + 0x3b3a03c7 ]
mov eax edi
add edi [ edx ]
cmp eax edi
jb r-xdata
add ch bh
cmp edi eax
jae r-xdata
push eax
push [ ebp + 0x1 ]
call 0xffffffffff43c5ff
pop ecx
sub_40cc20
call sub_40cd19
jbe r-xdata
push 0xfffffff5
push 0xbc40f8
call 0x400ed0
call sub_40c268
jbe r-xdata
in al 0xe8
adc eax 0x3effffbf
call 0xffffffffff438e61
retn
fcom [ ecx + edi * 4 + 0x69dca300 ]
inc esp
add [ ebx + rw-data ] ah
pop esi
in al 0x94
inc esp
std
pop ebp
retn
js r-xdata
retn 0xffff
cmp eax 0x98831674
cld
add bh bh
sub eax 0x3d3307eb
inc eax
retn
sub_40ccf6
in al dx
imul ecx ecx 0xfffffff1
add ecx [ ebp + 0x8 ]
mov [ 0xfffffffff873c13b ] eax
cmp [ eax + 0x4 ] edx
mov [ edx ] eax
xor eax eax
mov al [ 0x1d35ffc3 ]
xchg esp eax
inc esp
add [ 0x2fff231 ] dl
pop ecx
retn
sub_40cd5c
jmp r-xdata
imul eax [ eax + eax ] 0x850fd876
jae r-xdata
add [ eax ] al
xchg ebp eax
mov al 0x33
inc ecx
std
call [ rw-data ]
mov eax [ 0x790fff85 ]
sub al [ ecx ]
add ch bh
mov esi [ rw-data ]
push r--data
stosb [ edi ]
call esi
test [ 0xfffffffffc14840f ] edi
add [ eax ] al
push eax
adc eax 0x2ffef92
mov [ esp ] r--data
stosb [ edi ]
mov [ 0xb994fc ] eax
call esi
lodsd [ esi ]
call 0xffffffffff43becc
mov [ ecx + ebx * 8 ] 0xfd413380
push edi
mov [ rw-data ] eax
[ ebx ]
sub_40ce48
cmp [ ecx - 0x3b35fd00 ] 0x4d
fdivr [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
xchg esi eax
leave
or al 0x8b
stosb [ edi ]
pop esp
mov [ esp + ebp * 8 + 0x8 ] eax
inc [ ebp + 0x21 ]
jmp r-xdata
mov ecx [ rw-data ]
jbe r-xdata
inc esp
in al dx
or bh bh
inc ebp
and ebx ebp
fucomi st0
sub al dh
sub_40cea2
or [ edx + ecx + 0x7e ] dh
sti
or esi [ eax + edi * 8 - 0x7d ]
sti
add al 0x88
adc [ ebx + 0x47892945 ] ecx
pushad
jle r-xdata
mov [ edi + 0x60 ] eax
or [ ebp - 0x5 ] dh
mov eax [ ebp - 0x30 ]
je r-xdata
add [ eax ] al
add [ ebp - 0x2becc50 ] dl
xor edi [ fs : 0x2bd4ee8 ]
inc ebx
mov eax [ edx ]
push ebp
mov ebp esp
jbe r-xdata
mov eax [ 0x790fff85 ]
sub al [ ecx ]
add ch bh
mov esi [ rw-data ]
push r--data
stosb [ edi ]
call esi
test [ 0xfffffffffc14840f ] edi
add [ eax ] al
push eax
adc eax 0x2ffef92
mov [ esp ] r--data
stosb [ edi ]
mov [ 0xb994fc ] eax
call esi
lodsd [ esi ]
call 0xffffffffff43becc
mov [ ecx + ebx * 8 ] 0xfd413380
push edi
mov [ rw-data ] eax
[ ebx ]
or [ ebx + rw-data ] ah
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
mov edi [ eax + 0x69f8a308 ]
inc esp
add [ ebp + 0x3e ] bl
mov edi edi
push ebp
jbe r-xdata
mov edi edi
test al 0x8b
sub esp 0xffffffe9
push ebx
push esi
push edi
adc eax 0x2fff048
and [ ebp - 0x4 ] 0xfffffffd
cmp [ rw-data ] 0x0
jbe r-xdata
in al dx
jne r-xdata
xchg ebp eax
mov ecx 0x89c08500
adc al 0x68
dec esp
into
inc ecx
add [ edi + 0x2 ] dl
salc
call [ rw-data ]
xchg ebp eax
mov al 0x33
inc ecx
std
mov eax [ rw-data ]
cmp eax esp
or al 0x95
inc esp
std
je r-xdata
dec eax
cld
xchg esp eax
inc esp
std
call 0xffffffffff43bf47
push eax
adc eax 0x2ffef49
pop ecx
test eax eax
mov [ 0x4574d0ff ] esp
cld
test [ 0xfffffffff9a11c74 ] edi
xchg ebp eax
inc esp
add dh al
retn
push eax
adc eax 0x2ffef99
push [ rw-data ]
mov ecx [ 0x2ef8ce8 ]
[ ecx + 0x59 ]
pop ecx
test [ 0xffffffff88ff1074 ] edi
adc bh bh
jne r-xdata
adc al 0xef
add bh bh
push [ ebp + 0x8 ]
add dh [ ebp - 0x4 ]
jbe r-xdata
mov edi gs
add bh bh
pop ecx
pop ecx
test esi esi
mov [ eax * 4 - 0xd77601 ] ebp
salc
js r-xdata
push eax
call sub_40bf57
movsb [ edi ] [ esi ]
mov [ 0xb99508 ] eax
mov eax [ rw-data ]
cmp edi [ esi ]
je r-xdata
je r-xdata
cmp edi [ esi ]
je r-xdata
or [ ebp + 0x10 ] 0x2000fd
push ss
cmp [ ecx + rw-data ] esp
jo r-xdata
test [ 0xffffffff88ff0874 ] edi
cld
call eax
je r-xdata
clc
push ecx
xchg edi eax
or al 0x8d
dec ebp
adc [ ecx + 0x6a ] edx
add [ ebp + 0x3d85d7ff ] ebp
je r-xdata
push 0xffffffeb
pop esi
mov [ eax ] esi
scasb [ edi ]
push ebx
push ebx
push ebx
scasb [ edi ]
call 0xffffffffff439ad4
add esp 0xffffffe9
mov eax esi
jmp r-xdata
cld
idiv [ eax - 0xb8afe0c ]
[ 0x3d3302eb ]
cld
sub_40cf65
stc
and al 0x64
xor edi [ eax + eax - 0x6a065ca9 ]
inc esp
add [ edx ] al
salc
push eax
call sub_40bf27
movsb [ edi ] [ esi ]
mov [ 0xb9950c ] eax
test eax eax
mov [ eax + ebp * 2 ] edx
dec esp
into
inc ecx
add [ edi + 0x2 ] dl
salc
mov eax [ rw-data ]
cmp eax esp
or al 0x95
inc esp
std
je r-xdata
dec eax
cld
xchg esp eax
inc esp
std
call 0xffffffffff43bf47
push eax
adc eax 0x2ffef49
pop ecx
test eax eax
mov [ 0x4574d0ff ] esp
cld
test [ 0xfffffffff9a11c74 ] edi
xchg ebp eax
inc esp
add dh al
retn
push eax
adc eax 0x2ffef99
push [ rw-data ]
mov ecx [ 0x2ef8ce8 ]
[ ecx + 0x59 ]
pop ecx
test [ 0xffffffff88ff1074 ] edi
adc bh bh
jne r-xdata
adc al 0xef
add bh bh
push [ ebp + 0x8 ]
add dh [ ebp - 0x4 ]
jbe r-xdata
mov edi gs
add bh bh
pop ecx
pop ecx
test esi esi
mov [ eax * 4 - 0xd77601 ] ebp
salc
js r-xdata
push eax
call sub_40bf57
movsb [ edi ] [ esi ]
mov [ 0xb99508 ] eax
mov eax [ rw-data ]
cmp edi [ esi ]
je r-xdata
je r-xdata
cmp edi [ esi ]
je r-xdata
or [ ebp + 0x10 ] 0x2000fd
push ss
cmp [ ecx + rw-data ] esp
jo r-xdata
test [ 0xffffffff88ff0874 ] edi
cld
call eax
je r-xdata
clc
push ecx
xchg edi eax
or al 0x8d
dec ebp
adc [ ecx + 0x6a ] edx
add [ ebp + 0x3d85d7ff ] ebp
je r-xdata
push 0xffffffeb
pop esi
mov [ eax ] esi
scasb [ edi ]
push ebx
push ebx
push ebx
scasb [ edi ]
call 0xffffffffff439ad4
add esp 0xffffffe9
mov eax esi
jmp r-xdata
cld
idiv [ eax - 0xb8afe0c ]
[ 0x3d3302eb ]
cld
sub_40d0c3
mov edi edi
test al 0x8b
in al dx
push ebx
stosd [ edi ]
mov esi [ ebp + 0x8 ]
jbe r-xdata
les ebx [ ebp + 0xc ]
jne r-xdata
mov bl ah
call 0xffffffffff437ee1
push 0x22
movsb [ edi ] [ esi ]
mov [ eax ] ecx
mov ecx [ ebx + ebp * 8 ]
or ah 0x31
int3
or al 0x3b
push es
ja r-xdata
into
fist [ edi + 0x39 ]
mov al [ 0xffffffffc6107514 ]
jne r-xdata
xor eax eax
pop edi
mov [ 0xffffffffc6c35d5b ] eax
je r-xdata
cmp [ ebp - 0x17 ] ebx
jne r-xdata
call sub_407e06
xchg edi eax
push ss
pop esi
mov ebp ecx
push ebx
push ebx
push ebx
scasb [ edi ]
push ebx
call 0x4005d4
cmp [ ecx ] 0x14
mov eax esi
push ss
aad 0x39
pop ebp
jmp 0xffffffffe3c8d587
mov ebp [ eax - 0x772cc4f0 ]
add al 0x88
push ds
push ss
rol [ ebx - 0x74001683 ] 0x1
mov bl ah
jmp r-xdata
sub_40d20b
mov edi edi
test al 0x8b
in al dx
mov esi [ eax + 0x26335308 ]
push esi
push edi
cmp esi [ esi ]
je r-xdata
call sub_4023e1
push 0xffffffeb
pop esi
mov [ eax ] esi
scasb [ edi ]
push ebx
push ebx
push ebx
scasb [ edi ]
call 0xffffffffff439ad4
add esp 0xffffffe9
mov eax esi
jmp sub_40d20b
mov eax [ eax - 0x7504c4f4 ]
sbb ebp eax
mov ecx 0x6affff51
jmp r-xdata
sub_40d258
cmp eax [ esi ]
jne r-xdata
xor edi [ 0xffffffffa05b5e5f ]
retn
mov ah ah
call 0xffffffffff437ee1
push 0x22
movsb [ edi ] [ esi ]
mov [ eax ] ecx
mov ecx [ ebx + ebp * 8 ]
shl [ ebx ] 0x3d
pop edi
pop esi
pop ebx
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
mov esi [ eax + 0xb335608 ]
cmp ecx esi
jl r-xdata
cmp ecx 0x2
or [ ebx + eax * 4 ] 0xfffffff9
sub_40d31a
push ebx
push 0xfffffff6
add dl [ 0xbc24b0 ]
mov eax [ edi ]
je r-xdata
pop edi
pop esi
push es
xor edi [ 0x1516eb5b ]
scasd [ edi ]
stosd [ edi ]
inc [ edx ]
mov [ eax ] 0xfd09
call sub_407e87
jle r-xdata
call sub_4029e1
cmp esi eax
and al 0x96
inc esp
std
jae r-xdata
push ebx
mov al [ 0xffffffffa8ff8bc3 ]
mov ebp esp
mov esi [ eax + 0x26335308 ]
cmp ecx ebx
push esi
stosb [ edi ]
jl r-xdata
add [ ebx + 0x5e5fff35 ] al
mov edi [ ecx + eax * 8 ]
clc
add eax 0x3c8df176
js r-xdata
or [ ebx + edi * 8 ] 0xffffffff
xor eax eax
push ss
xchg esi eax
inc esp
std
mov eax [ edi ]
sbb [ ebx ] 0x1f
shl esi 0xfb
add eax esi
idiv [ ebp - 0x378bfefc ]
cmp [ eax ] 0xffffffff
mov [ eax ] esi
cmp [ rw-data ] 0xfffffffc
adc [ ecx - 0x77 ] cl
or [ ecx + 0x75 ] cl
out dx al
[ edi - 0x5d ]
pop ebx
pop ebp
retn
jbe r-xdata
sub esi [ esi ]
je r-xdata
adc eax 0xff5629e8
inc edi
std
or [ eax ] eax
add ch bh
call 0xffffffffff437ef4
mov [ eax ] ebx
jle r-xdata
idiv bh
adc eax r--data
push ebx
xchg edi eax
dec ecx
mov [ eax ] ecx
dec ecx
jne r-xdata
jne r-xdata
cmp eax rw-data
cld
push ebx
push 0xfffffff4
push ss
or [ ebx + 0x6a ] dl
or bl ch
add edx [ ebx - 0x69 ]
sub_40d497
jne r-xdata
je r-xdata
xchg esi eax
mov ecx 0xfbe0c100
lea eax [ ecx + eax - 0xf ]
push eax
call [ r--data ]
mov al [ 0xffffffff95186ac3 ]
pop eax
inc ecx
inc ecx
std
call 0xffffffffff438bd0
or [ ebp + 0x19 ] 0xffffffff
xor edi edi
je r-xdata
in al 0xff
mov ebx 0x145c708
out dx eax
add bh bh
pop ecx
pop ecx
js r-xdata
fsubr [ edx - 0xa ]
call 0xffffffffff438013
pop ecx
test [ 0x35830875 ] edi
add [ 0x8fd ] al
jne r-xdata
inc [ esi + 0x8 ]
jle r-xdata
je r-xdata
push 0xffffffbd
push 0x20
call sub_40c588
movsb [ edi ] [ esi ]
pop ecx
mov [ ebp + 0x1d ] eax
test eax eax
je r-xdata
cld
fsub st3
inc esp
sub al [ ecx - 0x3 ]
test [ esi + 0x4 ] 0xfc
je r-xdata
lea ecx [ edi * 4 + rw-data ]
je r-xdata
cmp [ ebp + 0x21 ] 0x0
jne r-xdata
push ebx
add dl [ 0xbc2a48 ]
add eax rw-data
fisttp [ ebx + 0x3f8111 ]
or [ eax ] al
std
cmp eax edx
jae r-xdata
add [ rw-data ] 0xffffffdd
mov edx [ ecx ]
cmp [ edi ] 0xfd000800
add esi 0xffffffbd
jmp r-xdata
cmp eax [ esi + 0x4 ]
add [ esi + 0xe ] edi
[ ebx ]
mov [ ebp - 0x20 ] esi
jbe r-xdata
add [ ecx + eax - 0x7d ] dh
mov [ eax + 0x4 ] 0xfd
or [ eax ] 0xffffffff
cmp eax [ eax + 0x5 ]
or bh [ esi + 0x60 ]
or [ eax ] al
jle r-xdata
mov ebp rw-data
add eax 0x8fd
[ edx - 0x43 ]
inc eax
mov [ eax + 0x3cddebe0 ] edi
out 0x5 eax
mov [ eax + 0x3cc78be4 ] eax
clc
add eax 0xe183328b
pop ds
cmp al 0xe1
push es
mov edi ecx
test [ eax - 0x6a ] eax
mov ecx 0xf544c600
add al 0x1
push edi
adc eax 0x2fffdc6
pop ecx
test eax eax
mov [ ebx + eax * 4 ] al
dec ebp
sbb edi edi
mov [ ebp + 0x1 ] 0x2fffffe
call 0x13dd69c
mov eax [ ebp + 0x19 ]
call 0xffffffffff438c15
retn
sub_40d53f
mov [ ebp + 0x25 ] edi
cmp ah 0x89
jge sub_40d567
jbe r-xdata
cmp edi 0x40
lea edi [ ecx + eax ]
std
add [ ebx - 0x69bfbfcc ] cl
inc esp
std
test esi esi
vmwrite edi [ edx - 0x76030000 ]
jne r-xdata
add [ 0x8fd ] al
mov ebp rw-data
add eax 0x8fd
sub_40d5b0
add [ 0xfffffffffd000028 ] dl
cmp [ ebp - 0x24 ] 0xfffffffd
jne r-xdata
add esi 0xffffffbd
jmp r-xdata
lea esp [ ebx - 0x1700acf4 ]
inc esp
sub al [ ecx - 0x3 ]
test [ esi + 0x4 ] 0xfc
je r-xdata
mov [ ebp - 0x20 ] esi
jbe r-xdata
cmp [ ebp + 0x21 ] 0x0
jne r-xdata
push ebx
add dl [ 0xbc2a48 ]
add [ 0x8fd ] al
mov ebp rw-data
add eax 0x8fd
cmp eax [ esi + 0x4 ]
add [ esi + 0xe ] edi
[ ebx ]
sub_40d5b2
sub [ eax ] al
add ch bh
cmp [ ebp - 0x24 ] 0xfffffffd
jne r-xdata
add esi 0xffffffbd
jmp r-xdata
lea esp [ ebx - 0x1700acf4 ]
inc esp
sub al [ ecx - 0x3 ]
test [ esi + 0x4 ] 0xfc
je r-xdata
mov [ ebp - 0x20 ] esi
jbe r-xdata
cmp [ ebp + 0x21 ] 0x0
jne r-xdata
push ebx
add dl [ 0xbc2a48 ]
add [ 0x8fd ] al
mov ebp rw-data
add eax 0x8fd
cmp eax [ esi + 0x4 ]
add [ esi + 0xe ] edi
[ ebx ]
sub_40d6a5
xchg edi eax
adc [ eax - 0x80 ] ch
mov esp 0xe2e80041
mov ch 0xff
push [ esi + 0x45 ]
or [ ebx + 0x1375fe05 ] al
adc eax 0x2ffa823
mov [ eax ] 0xfd09
jmp rw-data
cmp eax [ rw-data ]
jb r-xdata
xor [ 0xfffffffffdaae9ff ] 0x0
add [ ebx ] dh
cmp eax ebx
jl r-xdata
std
add [ eax ] al
call 0xffffffffff437ee1
mov [ eax ] 0xf4
scasb [ edi ]
push ebx
push ebx
push ebx
scasb [ edi ]
call 0xffffffffff439ad4
add esp 0xffffffe9
jmp r-xdata
sub_40d801
je r-xdata
fldenv [ edi - 0x3ca600fe ]
jbe r-xdata
push es
inc edi
push ss
sahf
mov [ ebp + 0x1 ] 0x2fffffe
call 0x13dd81c
mov eax [ ebp + 0x19 ]
call 0xffffffffff438c15
retn
call [ ebp - 0x75 ]
adc edi edi
add eax rw-data
push 0x10fd
adc eax 0x2ffed34
pop ecx
mov ecx [ ebp - 0xb ]
push ebp
mov edx [ ecx ]
inc [ rw-data ]
je r-xdata
or [ ecx + 0xc ] 0xfffffff9
lea eax [ ecx + 0x14 ]
je r-xdata
jle r-xdata
add ch bh
or bh al
mov esp 0xfd000218
cmp edi [ edx ]
jne r-xdata
or al 0x8
cmp al [ ecx + 0x18 ]
add ch ch
add [ eax ] al
jmp r-xdata
add [ ebx + 0x6183f541 ] cl
add al 0xfd
mov [ ecx ] eax
pop ebp
mov edi edi
push ebp
jbe r-xdata
add al [ eax ]
std
push ecx
push ecx
jbe r-xdata
add dh [ ebp + 0x14 ]
lea esi [ eax - 0x7700ae04 ]
clc
push eax
add [ ebx - 0x14288939 ] cl
dec edx
call sub_407f4e
cmp al [ eax ]
or [ eax ] eax
std
mov [ ecx + 0x8 ] eax
js r-xdata
adc eax [ edx ]
adc eax 0xbc29c8
test eax eax
mov [ ecx ] ecx
push eax
call sub_407f94
movsb [ edi ] [ esi ]
jmp r-xdata
or al 0x56
jbe r-xdata
mov eax edi
jbe r-xdata
pop esi
xor al 0xc3
push 0x14
xchg ebp eax
rol [ ecx + 0x41 ] 0xfd
call 0xffffffffff438bd0
or esi 0x2
mov [ ebp - 0x24 ] esi
je r-xdata
or [ ecx + 0x458bf8b8 ] cl
in eax dx
jne r-xdata
jmp r-xdata
je r-xdata
loopne r-xdata
mov [ eax + 0x641e8fc ] edi
push edi
push esi
mov [ eax - 0x12ba7408 ] edi
pop edi
add [ ecx ] cl
add ch bh
add al ch
adc al 0x58
mov eax 0x3f88308
jne r-xdata
xor eax [ edx ]
cmp eax edi
jl r-xdata
call sub_407e37
jle r-xdata
jmp rw-data
cmp eax [ rw-data ]
jb r-xdata
add [ edx - 0x24 ] dh
add al ch
cmp [ ebp + 0x3affff ] esp
or [ eax ] eax
std
add [ ebx - 0x1629893a ] cl
sar ch 0x1
add [ eax ] al
and [ eax ] al
call sub_407e56
cmp al [ eax ]
call 0xffffffffff437ef4
mov [ eax ] edi
adc eax 0x2ffa59b
mov [ eax ] 0xfd09
push edi
stosb [ edi ]
push edi
push edi
push edi
adc eax 0x2ffc17e
add esp 0x14
push ss
enter 0xc88b 0x3c
stc
add eax 0x408de18d
call sub_4031f4
mov ebp eax
call 0xffffffffff437ee1
mov [ eax ] 0xf4
stosb [ edi ]
push edi
push edi
push edi
stosb [ edi ]
call 0xffffffffff439ad4
add esp 0xffffffe9
or edx 0xffffffff
jbe r-xdata
mov [ esi ] ah
call sub_4031f4
loope r-xdata
jmp r-xdata
xchg esi eax
mov ecx 0x7ef08b00
out 0x1f al
rcr [ ebx ] 0x6
mov ecx [ ebx ]
mov esi 0x83f9314c
loope r-xdata
inc eax
call sub_408cea
push [ ds : ebp + 0x8 ]
adc eax 0x2fffada
pop ecx
retn
sub_40da0c
push ebp
jbe r-xdata
loopne r-xdata
sub esp 0xfffffff9
mov [ ebp - 0x4 ] edi
jbe r-xdata
add al [ ebx - 0x38fd1fb3 ]
inc ebp
cld
add edi edi
jmp 0x3f40d9b4
call sub_40da27
jle r-xdata
or [ ebx - 0x163ef350 ] cl
cli
pxor xmm7 [ 0x598d08eb ]
and al 0x0
add ch bh
add [ eax + 0x77ff266 ] dl
r-xdata
mov esp ebp
mov al [ 0x118b55c3 ]
sub esp 0x10
je r-xdata
or [ ebx + 0x558b08b8 ] cl
or [ ebp + 0x3b874d2 ] eax
inc ebp
adc dh dl
retn 0x4589
sub edi edx
js r-xdata
adc [ ebx - 0x22b880f1 ] bl
movdqa [ edx - 0x7df099d0 ] xmm7
inc edi
inc eax
r-xdata
mov edi [ eax + 0x17d8b08 ]
cld
mov edi [ eax + 0x58b9908 ]
xor edi edx
sub eax [ edi ]
and edi 0xf
into
cli
push [ ebp + 0x3c ]
jne r-xdata
adc ch [ ebx ]
push eax
fwait
movq [ edi - 0x63 ] mmx0
movdqa [ edx + 0x7dbf8d70 ] xmm7
add [ eax ] al
add [ ebp + esi * 2 - 0x37f7430 ] dh
sub esp 0xffffffcd
push ebx
xor ebx ebx
or eax [ ebp + 0x10 ]
sub [ ebx + 0x74f08b57 ] 0x5d
loopne r-xdata
inc ebp
or eax 0x76084d8b
push ebp
adc [ ebx + 0x7fe2832c ] cl
je r-xdata
or bl bh
add edi 0xffffffed
mov [ ebp - 0x10 ] edi
into
ror [ ebx + 0x4d8bf57d ] 0xf0
push cs
stosb [ edi ]
mov eax [ ebp + 0xd ]
mov ecx [ ebp + 0x8 ]
jbe r-xdata
jbe r-xdata
aaa
push ecx
push eax
mov al [ 0x2d45c7fe ]
or al 0x0
add ch bh
mov [ ebp - 0x2c ] ebx
mov [ ecx ] ecx
call sub_40da68
jle r-xdata
hlt
loopne r-xdata
adc [ ebx ] al
xor eax 0x9752d02b
lea eax [ ebp - 0x20 ]
lodsd [ esi ]
mov [ ebp + 0x5 ] eax
xor eax eax
mov eax [ eax + 0x94d8bf8 ]
[ edi ]
mov edi [ eax + 0xa2eeb08 ]
fild [ ebx + 0x7d89edc7 ]
mov esp ebp
pop ebp
mov edi edi
push ebp
jbe r-xdata
or al 0x8b
mov eax 0x17d8b08
add [ ecx - 0x18 ] dl
cmp edi 0xffffffff
rcl [ edx - 0x69 ] 0x1
call 0x13dfd5c
pop ecx
test [ 0xffffffffae530d74 ] edi
push ebx
push ebx
push ebx
adc eax 0x2ffbe6a
add esp 0x14
jbe r-xdata
call sub_409b5f
jle r-xdata
adc [ eax + 0x80fd ] bh
js r-xdata
dec ebp
adc al 0xe9
std
add eax 0x55740000
clc
jmp r-xdata
mov [ ebp + 0x25 ] ebx
mov [ ebp - 0x1 ] 0xed
jmp r-xdata
jne r-xdata
push 0x16
pop esi
scasb [ edi ]
push ebx
push ebx
push ebx
scasb [ edi ]
mov [ eax ] esi
mov eax ecx
sbb [ 0x47c32b03 ] 0x0
add [ eax ] al
cmp eax 0xfd0000bf
xor [ edi + eax * 2 - 0x4b ] 0x74
dec eax
mov [ esi ] esp
call sub_4039f4
mov ebp esp
or [ esi ] 0xffffffff
adc eax 0x2ffa357
or al cl
add [ eax - 0x6 ] al
add [ ebp + 0x5 ] dh
jne r-xdata
or [ ebp - 0x1 ] 0x7d
les eax [ ebp - 0x20 ]
je r-xdata
sub_40da27
add [ eax ] al
std
add [ eax + 0x77ff266 ] dl
r-xdata
sub edi edx
js r-xdata
adc [ ebx - 0x22b880f1 ] bl
movdqa [ edx - 0x7df099d0 ] xmm7
inc edi
inc eax
r-xdata
push [ ebp + 0x3c ]
jne r-xdata
adc ch [ ebx ]
push eax
fwait
movq [ edi - 0x63 ] mmx0
movdqa [ edx + 0x7dbf8d70 ] xmm7
add [ eax ] al
add [ ebp + esi * 2 - 0x37f7430 ] dh
inc ebp
or eax 0x76084d8b
push ebp
adc [ ebx + 0x7fe2832c ] cl
je r-xdata
or bl bh
add edi 0xffffffed
mov [ ebp - 0x10 ] edi
into
ror [ ebx + 0x4d8bf57d ] 0xf0
push cs
stosb [ edi ]
mov eax [ ebp + 0xd ]
mov ecx [ ebp + 0x8 ]
jbe r-xdata
jbe r-xdata
mov esp ebp
mov al [ 0x118b55c3 ]
sub esp 0x10
je r-xdata
or [ ebx + 0x558b08b8 ] cl
or [ ebp + 0x3b874d2 ] eax
inc ebp
adc dh dl
retn 0x4589
mov edi [ eax + 0x17d8b08 ]
cld
mov edi [ eax + 0x58b9908 ]
xor edi edx
sub eax [ edi ]
and edi 0xf
into
cli
call sub_40da68
jle r-xdata
hlt
loopne r-xdata
adc [ ebx ] al
xor eax 0x9752d02b
sub esp 0xffffffcd
push ebx
xor ebx ebx
or eax [ ebp + 0x10 ]
sub [ ebx + 0x74f08b57 ] 0x5d
loopne r-xdata
mov [ ebp + 0x5 ] eax
xor eax eax
mov eax [ eax + 0x94d8bf8 ]
[ edi ]
mov edi [ eax + 0xa2eeb08 ]
fild [ ebx + 0x7d89edc7 ]
mov esp ebp
pop ebp
mov edi edi
push ebp
jbe r-xdata
or al 0x8b
mov eax 0x17d8b08
add [ ecx - 0x18 ] dl
cmp edi 0xffffffff
rcl [ edx - 0x69 ] 0x1
call 0x13dfd5c
pop ecx
test [ 0xffffffffae530d74 ] edi
push ebx
push ebx
push ebx
adc eax 0x2ffbe6a
add esp 0x14
jbe r-xdata
aaa
push ecx
push eax
call sub_40da27
jle r-xdata
mov al [ 0x2d45c7fe ]
or al 0x0
add ch bh
mov [ ebp - 0x2c ] ebx
mov [ ecx ] ecx
call sub_409b5f
jle r-xdata
adc [ eax + 0x80fd ] bh
js r-xdata
lea eax [ ebp - 0x20 ]
lodsd [ esi ]
dec ebp
adc al 0xe9
std
add eax 0x55740000
clc
jmp r-xdata
mov [ ebp + 0x25 ] ebx
mov [ ebp - 0x1 ] 0xed
jmp r-xdata
jne r-xdata
push 0x16
pop esi
scasb [ edi ]
push ebx
push ebx
push ebx
scasb [ edi ]
mov [ eax ] esi
mov eax ecx
sbb [ 0x47c32b03 ] 0x0
add [ eax ] al
cmp eax 0xfd0000bf
xor [ edi + eax * 2 - 0x4b ] 0x74
dec eax
mov [ esi ] esp
call sub_4039f4
mov ebp esp
or [ esi ] 0xffffffff
adc eax 0x2ffa357
or al cl
add [ eax - 0x6 ] al
add [ ebp + 0x5 ] dh
jne r-xdata
or [ ebp - 0x1 ] 0x7d
les eax [ ebp - 0x20 ]
je r-xdata
sub_40da68
adc [ ebp + edi * 2 - 0x4 ] dh
push [ ebp + 0x3c ]
jne r-xdata
inc ebp
or eax 0x76084d8b
push ebp
adc [ ebx + 0x7fe2832c ] cl
je r-xdata
or bl bh
add edi 0xffffffed
mov [ ebp - 0x10 ] edi
into
ror [ ebx + 0x4d8bf57d ] 0xf0
push cs
stosb [ edi ]
mov eax [ ebp + 0xd ]
mov ecx [ ebp + 0x8 ]
jbe r-xdata
jbe r-xdata
call sub_40da68
jle r-xdata
hlt
loopne r-xdata
adc [ ebx ] al
xor eax 0x9752d02b
mov [ ebp + 0x5 ] eax
xor eax eax
mov eax [ eax + 0x94d8bf8 ]
[ edi ]
mov edi [ eax + 0xa2eeb08 ]
fild [ ebx + 0x7d89edc7 ]
or al 0x8b
mov eax 0x17d8b08
add [ ecx - 0x18 ] dl
cmp edi 0xffffffff
rcl [ edx - 0x69 ] 0x1
call 0x13dfd5c
pop ecx
test [ 0xffffffffae530d74 ] edi
push ebx
push ebx
push ebx
adc eax 0x2ffbe6a
add esp 0x14
jbe r-xdata
sub esp 0xffffffcd
push ebx
xor ebx ebx
or eax [ ebp + 0x10 ]
sub [ ebx + 0x74f08b57 ] 0x5d
loopne r-xdata
call sub_409b5f
jle r-xdata
adc [ eax + 0x80fd ] bh
js r-xdata
aaa
push ecx
push eax
call sub_40da27
jle r-xdata
mov al [ 0x2d45c7fe ]
or al 0x0
add ch bh
mov [ ebp - 0x2c ] ebx
mov [ ecx ] ecx
dec ebp
adc al 0xe9
std
add eax 0x55740000
clc
jmp r-xdata
mov [ ebp + 0x25 ] ebx
mov [ ebp - 0x1 ] 0xed
jmp r-xdata
jne r-xdata
mov esp ebp
mov al [ 0x118b55c3 ]
sub esp 0x10
je r-xdata
or [ ebx + 0x558b08b8 ] cl
or [ ebp + 0x3b874d2 ] eax
inc ebp
adc dh dl
retn 0x4589
lea eax [ ebp - 0x20 ]
lodsd [ esi ]
push 0x16
pop esi
scasb [ edi ]
push ebx
push ebx
push ebx
scasb [ edi ]
mov [ eax ] esi
mov eax ecx
sbb [ 0x47c32b03 ] 0x0
add [ eax ] al
cmp eax 0xfd0000bf
xor [ edi + eax * 2 - 0x4b ] 0x74
dec eax
mov [ esi ] esp
call sub_4039f4
mov ebp esp
or [ esi ] 0xffffffff
adc eax 0x2ffa357
or al cl
add [ eax - 0x6 ] al
add [ ebp + 0x5 ] dh
mov esp ebp
pop ebp
mov edi edi
push ebp
jbe r-xdata
mov edi [ eax + 0x17d8b08 ]
mov edi [ eax + 0x58b9908 ]
xor edi edx
sub eax [ edi ]
and edi 0xf
into
cli
sub edi edx
js r-xdata
cld
jne r-xdata
or [ ebp - 0x1 ] 0x7d
les eax [ ebp - 0x20 ]
je r-xdata
sub_40e3f2
add [ eax ] al
add [ 0x2ffb6da ] dl
add esp 0x14
lds ebx [ ebp - 0xc ]
je r-xdata
adc al 0xc5
pop ebp
hlt
mov eax [ ebp - 0x10 ]
jle r-xdata
cmp [ ebp - 0x13 ] ebx
jne r-xdata
jo r-xdata
mov ebp [ eax - 0x38ed75f8 ]
shl [ ebp + 0x5 ] cl
je r-xdata
cmovpo ecx [ edi ]
test [ esp + edi * 8 + 0x1d ] 0x4
mov [ eax - 0x97af008 ] esp
add [ eax ] eax
add dl dh
mov bh 0xc9
pushad
inc ebp
jbe r-xdata
clc
jmp r-xdata
clc
jne r-xdata
jmp rw-data
leave
clc
mov dh 0xf
cmovpe ecx ecx
movzx ebp [ edi + eax * 2 ]
test [ edi + edi * 8 + 0x1d ] 0x4
mov [ eax - 0x3bb78b04 ] esi
pop ebp
adc [ ebp - 0x8 ] dh
pushad
jo r-xdata
jbe r-xdata
mov bh 0xc9
push ss
add ecx [ edi ]
mov bh 0x37
mov [ ebp - 0x4 ] ecx
fwait
mov ecx [ ebp - 0x4 ]
fwait
cmp ecx esi
jne r-xdata
or al 0x2
idiv [ ebp + ebx + 0x66f07410 ]
movzx esi [ ebp + ebx + 0x1 ]
add ch bh
movzx ecx cx
cmp si bx
mov [ ecx ] ecx
mov [ ebp - 0x4 ] ebx
push ss
pop esi
mov dl [ edi ]
add cl [ ebp + 0x10 ]
cmp ch [ esi ]
je r-xdata
rcr [ eax + ecx ] 0x66
cmovpo edx edx
or si [ edi ]
movzx ecx cx
mov edx 0x9bfc4d89
cmp ecx [ eax + 0x10 ]
mov eax 0x7f02ffff
jmp r-xdata
cmp [ eax + 0x760774f4 ] ah
inc ebp
[ ebp + 0x3d33fd70 ] 0x5e
pop edi
pop ebx
xor al 0xc3
sbb eax eax
jle r-xdata
pop esi
cmp [ ebp - 0x13 ] ebx
jne 0x3fe94a
add cl [ eax - 0x3b ]
pop ebp
hlt
rcr [ eax + ecx ] 0x66
cmovpo eax eax
or si [ 0xfffffffff20845ff ]
mov bh 0xc9
mov dh 0x6
cmovpe eax eax
movzx ebp [ 0xffffffffc744f646 ]
sbb eax 0x39dd7404
pop ebp
adc [ eax + 0x16c03304 ] cl
xor esi [ ebx + ebp * 8 ]
adc cl al
sbb al 0x8
cmovpo ax ax
pop ss
mov dl [ esi ]
add cl [ ebp + 0x10 ]
cmp ch [ esi ]
je r-xdata
xor eax eax
push ss
mov dh 0xd2
rcr [ 0x3f0b6608 ] 0x46
movzx edi [ 0xffffffff88c13b66 ]
adc [ esi + 0x3b ] ah
je r-xdata
pop edi
pop ebx
xor al 0xc3
mov eax [ ebp - 0xb ]
mov al [ eax ]
cmp bh [ esi ]
jne r-xdata
cmp [ eax + 0x760774fc ] ah
inc ebp
clc
sbb [ ebp + 0x3d33fd70 ] 0x5e
cmp [ eax - 0x627af0f0 ] esp
sub_40e750
push ebp
jbe r-xdata
or al 0xff
mov [ eax ] cl
call 0x3feac9
cmp [ ecx ] 0x10
pop ebp
retn
push ebx
push esi
stosb [ edi ]
push ebp
push 0x0
xchg edi eax
add [ eax + 0x68 ] ch
sbb al [ eax ]
dec [ eax - 0x287917f8 ]
add [ eax ] al
pop ebp
mov [ 0x188b5b5e ] al
pop ebp
retn
sub_40e78f
call [ ebp + 0x76 ]
push 0x28ad8b10
push edx
mov ebp [ ebp - 0x1617addc ]
add [ eax ] al
add [ esi - 0x3c ] bh
or [ ebp + 0x76 ] bl
inc esp
and al 0x8
jbe r-xdata
mov bl 0x89
mov cl 0x24
or al 0x89
mov ch 0xc
cmp [ esi + ecx * 2 + 0x4 ] 0x0
jne r-xdata
and al 0x10
je r-xdata
jbe r-xdata
push 0xfd0101
mov eax [ esi + ecx * 2 + 0x8 ]
call rw-data
mov edi [ ecx - 0x5d17f74d ]
add [ eax ] al
add [ esi ] dl
mov bh 0x8b
dec esp
fld [ esp ]
mov eax esi
std
add [ eax ] al
retn
mov eax 0xfd03
add [ eax ] al
mov eax [ rw-data ]
into
les edx [ eax - 0x73 ]
mov ecx 0x5e640424
add [ eax ] al
add ch bh
mov eax [ esp - 0x2b ]
mov ebx [ eax + 0x8 ]
jbe r-xdata
lea esi [ esi + esi * 2 ]
jbe r-xdata
mov edx [ edx + 0xc ]
les edx [ ecx + 0x8 ]
jne r-xdata
mov eax 0xfd0001
retn
add [ eax ] eax
std
add bl al
push ebx
lodsb [ esi ]
mov ebx 0xb98340
jmp r-xdata
or al 0x83
add edi edi
je r-xdata
add [ ebp - 0x16 ] dh
mov [ esi - 0x6bc76f8 ] esi
add [ eax ] al
add ch bh
add esp 0x18
mov [ 0xffffffffcec35b5e ] al
shl [ ebx + ecx * 4 - 0x10 ] 0x0
add [ eax ] al
std
cmp [ ecx + 0x4 ] r-xdata
mov [ eax ] dl
mov edx [ ecx - 0xf ]
mov ecx [ ecx + ebx * 8 + 0x4 ]
mov eax esi
jle r-xdata
mov [ ebx + 0xc ] ebp
test al 0x51
push eax
pop eax
movsb [ edi ] [ esi ]
pop ebp
pop ecx
pop ebx
aas
add al 0x0
[ 0xffffffffa8ff8bc3 ]
add [ ebx - 0x76f3db4f ] cl
mov dh 0x8
mov [ ebx - 0x7 ] eax
and al 0x2c
add dh [ esi + eax + 0x3b ]
mov [ esp + ebp ] esp
sub_40e7b5
scasb [ edi ]
push esi
push edi
mov edi [ ecx - 0x52aaefdc ]
push 0xfffffffe
push r-xdata
cdq
push [ 0xfd00 ]
add [ eax ] eax
std
add bl al
push ebx
lodsb [ esi ]
mov ebx 0xb98340
jmp r-xdata
or al 0x83
add edi edi
je r-xdata
mov [ esi - 0x6bc76f8 ] esi
mov ecx [ ecx + ebx * 8 + 0x4 ]
mov eax esi
jle r-xdata
mov edx [ edx + 0xc ]
les edx [ ecx + 0x8 ]
jne r-xdata
mov eax 0xfd0001
retn
mov [ ebx + 0xc ] ebp
test al 0x51
push eax
pop eax
movsb [ edi ] [ esi ]
pop ebp
pop ecx
pop ebx
aas
add al 0x0
[ 0xffffffffa8ff8bc3 ]
add [ ebx - 0x76f3db4f ] cl
mov dh 0x8
mov [ ebx - 0x7 ] eax
and al 0x2c
add dh [ esi + eax + 0x3b ]
mov [ esp + ebp ] esp
mov eax [ rw-data ]
into
les edx [ eax - 0x73 ]
mov ecx 0x5e640424
add [ eax ] al
add ch bh
mov eax [ esp - 0x2b ]
mov ebx [ eax + 0x8 ]
jbe r-xdata
add [ eax ] al
lea esi [ esi + esi * 2 ]
jbe r-xdata
add [ eax ] al
add ch bh
add esp 0x18
mov [ 0xffffffffcec35b5e ] al
shl [ ebx + ecx * 4 - 0x10 ] 0x0
add [ eax ] al
std
cmp [ ecx + 0x4 ] r-xdata
mov [ eax ] dl
mov edx [ ecx - 0xf ]
add [ ebp - 0x16 ] dh
mov bl 0x89
mov cl 0x24
or al 0x89
mov ch 0xc
cmp [ esi + ecx * 2 + 0x4 ] 0x0
jne r-xdata
jbe r-xdata
push 0xfd0101
mov eax [ esi + ecx * 2 + 0x8 ]
call rw-data
mov edi [ ecx - 0x5d17f74d ]
add [ eax ] al
add [ esi ] dl
mov bh 0x8b
dec esp
fld [ esp ]
mov eax esi
sub_40e865
scasb [ edi ]
push ecx
mov ebx rw-data
mov esi [ ecx - 0x4976f3dc ]
or [ ecx + 0x6b89f943 ] cl
or al 0xa8
push ecx
push eax
pop eax
movsb [ edi ] [ esi ]
pop ebp
pop ecx
pop ebx
aas
add al 0x0
[ 0xffffffffa8ff8bc3 ]
sub_40eaf3
dec [ edi ]
dec ebx
inc ebp
or [ ebx - 0x76740f50 ] cl
xor eax 0xf2000000
mov bh 0x4
inc ecx
fadd [ eax ]
add [ eax ] 0xfd
cmp [ ebp - 0x4 ] 0xfd
je r-xdata
leave
retn
mov esi [ eax - 0x729e7c08 ]
std
sub_40eb6e
movzx eax [ ebp - 0xf ]
mov ecx [ ebp - 0xc ]
ja r-xdata
and bh [ esi - 0x18 ]
adc al 0x84
test eax 0xe3751d01
cmp [ ebp + 0x10 ] 0xfffffffd
je r-xdata
xor eax eax
test [ 0x3d330374 ] edi
mov esi [ eax + 0x35898bf0 ]
add [ eax ] al
add dl dh
mov bh 0x4
leave
mov edi edi
jbe r-xdata
inc eax
push [ ebx ]
rol [ ebp + 0x3303743d ] 0x3d
cmp [ ebp + 0x1 ] 0x0
je r-xdata
push 0x4
xchg edi eax
add bh bh
jne r-xdata
retn
push ebp
jbe r-xdata
clc
sbb [ eax + esi * 2 - 0x74c13603 ] 0xffffffff
call [ ebp + 0x76 ]
in al dx
push 0x0
call sub_40eb28
jle r-xdata
inc ecx
fiadd [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ecx + 0x35 ]
mov bh 0x4
adc [ ebp + 0x3e ] bl
sub eax 0xfd03a4
je r-xdata
mov eax 0xf911
jle r-xdata
push [ ebp - 0xb ]
add al 0x74
0x890de883 0x480c
sub_40ec9b
mov al [ ebp - 0x5ed ]
cmp eax [ ebp - 0xfd0104 ]
and [ ebp + edi + 0x608d2e74 ] al
out dx eax
cli
inc [ edx ]
movzx ecx al
mov dh 0x3
cmp esi [ 0x3c2b1677 ]
inc eax
push eax
lea ebp [ ecx + 0xd ]
cld
inc [ edx ]
[ edx + 0x20 ]
sub_40ed5c
call [ esi ]
adc esi esi
sar edi 0x74
adc eax 0x1d06b180
and [ edi - 0x74 ] dh
add eax 0xffff01fc
mov [ ecx + 0x6 ] dh
sbb eax 0xeb00fd01
or [ ebx ] bh
test [ esi ] al
sbb eax 0xfc
mov ebp 0x4372c73b
jmp sub_40edde
sub_40edec
push 0xfffffff1
push 0xbc4200
call sub_404ed0
call sub_40c168
jbe r-xdata
mov eax [ rw-data ]
test [ edx + 0x7e1d7470 ] edi
jg r-xdata
cld
add edi edi
add [ ecx - 0x6a8874e9 ] cl
insb
push 0x20
call sub_408d4f
movsb [ edi ] [ esi ]
mov eax esi
call sub_408b32
push 0xd
call sub_408081
movsb [ edi ] [ esi ]
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ edi + 0x68 ]
je r-xdata
dec [ eax - 0x16fa38e2 ]
xchg ebp eax
inc esp
add ah bh
add [ eax ] al
add [ edx ] al
adc eax 0xbc25c0
cmp [ ebp + 0x1 ] bl
je r-xdata
in al 0x3b
enter 0x8788 0x44
std
je r-xdata
cmpsb [ esi ] [ edi ]
leave
retn
mov esi [ eax - 0x729e7c08 ]
std
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffff03
adc eax 0xfd000005
jmp r-xdata
test [ ebx ] ecx
je r-xdata
test esi esi
jne r-xdata
mov eax [ 0xb98788 ]
mov [ edi - 0x6b ] eax
mov esi [ rw-data ]
mov [ eax - 0x1700a91c ] ecx
sub al 0x26
inc ecx
std
push esi
add dl [ 0xbc2684 ]
test eax eax
mov [ edi ] cl
cmp esi rw-data
mov [ edi ] eax
push esi
call sub_406d73
movsb [ edi ] [ esi ]
sub_40eeec
mov edi [ ebp - 0x16fa38fc ]
xchg ebp eax
inc esp
add ah bh
add [ eax ] al
add [ esi ] dl
les edi [ eax ]
pop ebp
add [ edi + eax - 0x75 ] esi
mov eax 0x8d6083f8
std
mov eax esi
cmpsb [ esi ] [ edi ]
leave
retn
sub_40f0b3
dec [ ecx + 0x53890cbe ]
cmc
jmp r-xdata
xor eax eax
test [ eax - 0x2 ] ebx
add bh bh
or eax 0x2
mov ecx [ ebp - 0x4 ]
mov [ 0xffffffffa6cd335e ] al
call 0xffffffffff436fef
leave
retn
test cl 0x8d
jpo r-xdata
mov bh 0xc8
mov edi [ ecx + eax * 8 ]
loope r-xdata
add ecx [ ecx - 0x3fccf772 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push ss
test al 0x39
xor eax rw-data
sub_40f153
[ ecx - 0x5c ]
mov [ ebp - 0x20 ] eax
js r-xdata
mov [ ebp - 0xb ] eax
cmp eax [ ebx + 0x4 ]
test [ edi + 0x1 ] dl
std
add [ eax + 0x20 ] ch
inc [ eax ]
add al ch
rcl ah 0xff
jmp [ ebx + ecx * 4 + 0xf2685d8 ]
jne r-xdata
jne r-xdata
jbe r-xdata
add [ esi + 0x77 ] dh
push 0xa5f3068b
sbb esi 0x0
push ebx
dec [ eax + 0xb8e808 ]
dec [ ebx + 0x7915ff68 ]
inc ecx
add [ eax - 0x40 ] bh
je r-xdata
fdiv st7
mov ebp [ eax - 0x1 ]
adc eax r--data
js r-xdata
mov [ esi + 0x68 ] ebx
scasb [ edi ]
mov edi [ rw-data ]
[ edx ]
jbe r-xdata
in al 0x3d
cld
add [ eax ] eax
add [ eax - 0x1ab375f3 ] al
sbb al 0x88
mov [ ebp - 0x7b ] bh
inc esp
add [ ebp + 0x3d33e9eb ] bh
inc ebp
jne r-xdata
jbe r-xdata
push 0x44839d3d
add [ ecx + 0x3ae85007 ] cl
jl r-xdata
dec eax
mov [ edi + 0x15fffd44 ] al
test bl bl
inc ecx
add [ ebp - 0x5eec8ac3 ] al
jne r-xdata
mov dh [ ecx + 0x18 ]
sbb eax 0x8800fd01
mov [ ebp - 0x7a ] dh
inc esp
add [ ebp - 0x37001915 ] bh
mov [ ebp - 0x1c ] eax
rol [ eax ] 0x1
add ch bh
or [ ebx + rw-data ] ah
jbe r-xdata
jmp [ ecx + ecx * 4 - 0x745197a2 ]
inc ebx
add al 0xa3
fst [ ebp + 0x43760044 ]
inc esp
add al al
pushad
add [ ebp + edi * 8 + 0x74 ] 0x7
push eax
adc eax 0x2ff7c0e
pop ecx
mov [ rw-data ] ebx
scasb [ edi ]
call edi
jge r-xdata
sbb [ eax + 0x44 ] ch
add [ eax + 0x16 ] al
call 0x45b5b21a
or al 0xa3
rcl [ ebp - 0x3f31ffbc ] 0x1
mov [ ebp + 0x19 ] eax
cmp eax 0x5
adc [ eax ] 0x66
mov esi [ ecx + 0x74661043 ]
or al 0x45
sub_40f36d
add bh bh
push [ esi + 0x3d ]
adc eax 0x2ff7ace
add esp 0x10
jbe r-xdata
aam 0x0
std
add [ ebx - 0x766f3ff9 ] cl
inc esp
std
je r-xdata
mov [ eax - 0x75 ] ebp
xchg [ ebp ] cl
add [ eax ] al
mov bl 0x74
pop esi
les ebx [ eax ]
jne r-xdata
les eax [ eax ]
std
add [ 0xfdfe ] ch
push eax
adc eax 0x2ff7afa
mov eax [ esi + 0xfdcc ]
mov edi 0x7d
salc
lea edi [ esi - 0x53 ]
mov [ ebp + 0x8 ] 0xfb
jl r-xdata
cmp [ ebp - 0x4c ] esp
add [ eax ] al
std
jne r-xdata
mov eax [ esi + 0x3d ]
mov bl 0x74
inc esp
les ebx [ eax ]
jne r-xdata
jbe r-xdata
xchg eax eax
clc
mov [ ebp + 0x44 ] dh
add [ esp + ebp * 8 - 0x75 ] dh
pop es
push eax
adc eax 0xfd00123d
push [ edi ]
call sub_406dfb
movsb [ edi ] [ esi ]
pop ecx
jo r-xdata
jle r-xdata
mov eax 0x3b00fd00
retn
cmp [ edi + 0x1 ] ebx
je r-xdata
cmp ebp esp
jne r-xdata
push [ ebp - 0x23 ]
cmp ebx rw-data
je r-xdata
add edi 0x10
add cl [ ebp + 0x8 ]
jne r-xdata
mov edi [ edx - 0x763cc4fc ]
or edi [ ecx ]
sbb [ eax - 0x6917aff9 ] cl
jpe r-xdata
push eax
adc eax 0x2ff7a82
pop ecx
pushad
jle r-xdata
push ebx
mov edi [ edx - 0x4c ]
add [ eax ] al
std
test eax eax
push esi
call sub_407b48
pop ecx
mov [ 0x3e5d5b5e ] al
mov edi edi
push ebp
jbe r-xdata
jmp [ ebx + eax * 4 + 0x4d0210c7 ]
push ebp
mov edx [ ecx ]
push ebx
push esi
mov ecx [ eax + 0x41868b08 ]
add [ eax ] al
add dh cl
fist [ edi + 0x3b ]
r-xdata
call sub_407948
pop ecx
adc eax 0x2ff8c6b
mov [ eax ] 0xfd16
add [ edx + edi * 8 + 0x53 ] dh
jmp r-xdata
add [ esi ] dl
std
add [ eax ] al
je r-xdata
push eax
call esi
jbe r-xdata
or [ ebp + 0x3a ] dh
push ebx
push esi
jbe r-xdata
cmp eax rw-data
cmp edi [ esi ]
je r-xdata
mov eax [ edi ]
add [ ebp + 0x500389c0 ] al
[ ebx ]
rol [ eax ] 0xfd
add ch bh
sub al 0x26
mov esp 0x808b5700
or [ edi - 0x1 ] dl
sub ecx [ ebx + 0xfdb087 ]
add [ ebp + 0x5003743d ] al
add dl dh
mov eax [ edi + 0x45 ]
js r-xdata
je r-xdata
lodsd [ esi ]
call esi
sub_40fa27
std
inc [ edx ]
mov [ ebp - 0x2cb ] ds
fwait
mov [ ebp - 0xff3c ] es
jno r-xdata
ror [ ecx + 0x15166a08 ] 0x2e
sar edi cl
add bl [ ecx - 0xa ]
add eax rw-data
dec [ edi ]
test dl cl
std
add [ eax ] al
mov [ eax - 0x20 ] edi
std
inc [ edx ]
mov [ ebp - 0xff24 ] ecx
mov [ eax - 0x28 ] ebp
std
inc [ edx ]
mov [ ebp - 0xff2c ] ebx
mov [ eax - 0x30 ] ecx
std
inc [ edx ]
mov [ ebp - 0xff34 ] edi
jno r-xdata
sar ch 0x2
jmp [ esi - 0x74 ]
[ eax + 0x1181ec8b ]
clc
std
add bh bh
sub_41009e
inc ebp
and [ ebx + 0x4127ecc8 ] cl
std
xor eax eax
cmp [ eax + 0x2535324 ] esp
jne r-xdata
clc
punpckhbw mmx0 mmx0
push [ ebp - 0x13 ]
lea eax [ eax * 8 + 0xfc ]
lodsd [ esi ]
push [ ebp + 0x20 ]
add dl dh
mov edi eax
sub_4100c6
sti
je r-xdata
pop ebp
and [ eax + 0x76068b08 ] cl
inc eax
add al 0x89
mov eax 0xf575ff20
call 0x13e0bd1
pop ecx
mov [ eax + 0x2f883ec ] edi
jne r-xdata
add [ ebx + 0x6a ] 0xffffffe0
into
rcr [ eax - 0x9 ] cl
or al [ ebx + 0x378f02f8 ]
cmp eax [ ebp - 0x23 ]
je rw-data
xor edi [ 0xfffffffffd0121e9 ]
add [ ebx ] bh
inc ebp
fisttp [ edi ]
test bl bl
std
add [ eax ] al
lea eax [ edx + eax * 8 + 0x8 ]
cmp eax 0xf900
ja r-xdata
test [ edx ] 0x8f02f883
aaa
call 0x13e0a20
mov eax esp
mov bl 0x74
sbb al 0x3a
add ah cl
int3
push ebx
scasb [ edi ]
lea ecx [ ebp + 0x14 ]
lodsb [ esi ]
push [ ebp + 0x10 ]
lodsd [ esi ]
push [ ebp + 0x20 ]
adc eax 0xfd00099c
add esp 0x18
je r-xdata
int3
hlt
sub_410486
sti
je r-xdata
push [ ebp - 0xf ]
push 0x1
dec [ eax + 0x78d6ff18 ]
shl [ ecx + edx + 0x2 ] 0x75
adc al 0x50
scasb [ edi ]
push [ ebp + 0x8 ]
add dl [ 0xbc2950 ]
mov [ ebp + 0x5 ] eax
push ebx
call 0x400dca
mov edi [ eax - 0x7714a608 ]
xor esi esi
cmp [ eax + 0x7608751c ] esp
pop es
cmp [ ecx + eax * 4 ] 0xffffffff
or eax 0x8a7fffff
xor al 0x8d
inc esp
retn 0x3d08
mov eax [ eax - 0x17 ]
mov [ ebp + 0x1c ] eax
les ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ edi ]
mov edi [ ebp - 0x1aba76fc ]
push [ ebp + 0x1c ]
adc eax 0xfd00069f
pop ecx
cmp eax 0x2
jne r-xdata
cmp edi [ eax - 0x51e18be8 ]
push ebx
lea ecx [ ebp - 0x13 ]
push ecx
push [ ebp - 0xf ]
xor edi [ 0xffffffffb83b47eb ]
sbb [ esi + ebx - 0x52 ] dh
inc ebp
sbb al 0xc4
pop ebp
sbb [ ebp - 0xb ] dh
sbb [ ebx ] bh
push cs
je r-xdata
mov [ eax - 0x168a00f4 ] ecx
push [ ebp + 0x10 ]
add dh [ ebp + 0xc ]
dec [ eax - 0x1e8a00f8 ]
call [ rw-data ]
mov eax [ 0xfffffffffa74f33b ]
push esi
call sub_409b48
pop ecx
jbe r-xdata
push eax
push [ ebp - 0x1b ]
call 0x13e0c1a
mov esi eax
jle r-xdata
lea esp [ ebp + 0x11 ]
pop edi
pop esi
pop ebx
jbe r-xdata
[ eax + 0x7656ec8b ]
cld
xor esi [ eax ]
call 0xffffffffff436fef
leave
retn
sub_4107b3
push ebp
mov edx [ ecx ]
push esi
mov esi [ ebp - 0xb ]
test esi esi
je r-xdata
mov eax [ esi + 0xc ]
mov [ 0xb98a5c ] 0x74
pop es
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
mov edi [ ebx - 0x62fac4f0 ]
mov al [ eax + eax - 0x77 ]
pop es
push eax
call sub_406e7b
movsb [ edi ] [ esi ]
mov eax [ esi + 0x14 ]
mov [ 0xb98a64 ] 0x74
pop es
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
mov edi [ ebx - 0x6afac4e8 ]
mov al [ eax + eax - 0x77 ]
pop es
push eax
call sub_406ec3
movsb [ edi ] [ esi ]
mov eax [ esi + 0x1c ]
mov [ 0xb98a6c ] 0x74
pop es
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
mov edi [ ebx - 0x72fac4e0 ]
mov al [ eax + eax - 0x77 ]
pop es
push eax
call sub_406f0b
movsb [ edi ] [ esi ]
mov esi [ esi + 0x24 ]
sub_4107bf
inc esi
or al 0xc6
add eax 0xb98a5c
je r-xdata
mov edi [ ebx - 0x62fac4f0 ]
mov al [ eax + eax - 0x77 ]
pop es
push eax
call sub_406e7b
movsb [ edi ] [ esi ]
mov eax [ esi + 0x14 ]
mov [ 0xb98a64 ] 0x74
pop es
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
mov edi [ ebx - 0x6afac4e8 ]
mov al [ eax + eax - 0x77 ]
pop es
push eax
call sub_406ec3
movsb [ edi ] [ esi ]
mov eax [ esi + 0x1c ]
mov [ 0xb98a6c ] 0x74
pop es
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
mov edi [ ebx - 0x72fac4e0 ]
mov al [ eax + eax - 0x77 ]
pop es
push eax
call sub_406f0b
movsb [ edi ] [ esi ]
mov esi [ esi + 0x24 ]
lodsd [ esi ]
call 0xffffffffff436e48
pop ecx
sub_41082e
xor eax 0xb98a74
je r-xdata
pop esi
mov al [ 0x7655ccc3 ]
in al dx
push esi
xor edi [ 0xffffffffad505050 ]
push eax
push eax
push eax
lodsd [ esi ]
mov edx [ ebp + 0xc ]
jo r-xdata
stosd [ edi ]
call 0xffffffffff436e48
pop ecx
add ch bh
jne r-xdata
add [ edx + 0x74c00aff ] cl
hlt
idiv [ edi ]
add [ eax ] eax
add ch bh
je r-xdata
mov edi edi
cmp al [ ecx ]
jne r-xdata
jbe r-xdata
mov bh bh
add edx 0x1
mov [ ecx ] 0xc17ee775
add [ edx ] ecx
cmp eax 0x3ff7dc74
add al [ eax ]
add ch bh
je r-xdata
pop esi
add al 0x24
jae r-xdata
or al al
je r-xdata
add edx 0xffffffff
cmp al [ ecx ]
jne r-xdata
test eax 0xb18b0424
and al 0x8
idiv [ edi ]
add eax [ eax ]
mov eax ecx
cmp [ ecx ] 0x20
pop esi
leave
int3
cmp ah [ ecx + 0x1 ]
mov [ 0x1d89e40a ] ah
shr eax 0xed
cmp al [ ecx + 0x2 ]
mov [ ecx ] bl
or al al
mov [ ecx ] edx
cmp ah [ ecx - 0x2 ]
jne r-xdata
hlt
or al al
je r-xdata
sbb edi [ 0x3d83e0d1 ]
add ebx eax
cmp [ esp + eax ] 0xffffff83
retn 0xaf9
cmc
cmp ah [ ecx + 0x1 ]
mov ch al
or ah ah
mov [ ebp - 0x14003e7d ] edi
mov ah cl
xor esp ecx
int3
mov edi edi
mov bh bl
or al al
je r-xdata
add al 0x24
push ss
int1
mov esi [ ebp - 0xb ]
add esi 0x1
mov [ 0xfffffffff18e2404 ] eax
lea eax [ esi + 0x2 ]
add esp 0x20
mov [ 0x28bc3c9 ] eax
push ebp
mov ebp esp
jle r-xdata
add al 0x24
sbb [ ebx + 0x2 ] dl
jne r-xdata
add ebp edi
add [ edi + 0xf ] dh
jbe r-xdata
lea esi [ eax + 0x2489e8e8 ]
stc
std
inc ecx
call 0x1098713
add ch bh
movzx eax [ 0xffffffffa08975eb ]
or cl al
jge r-xdata
mov al [ ebp - 0xb ]
push 0x2
mov [ eax + 0x45d88f8 ] bh
mov [ ebp - 0x6 ] 0xfd
pop ecx
jmp r-xdata
jne r-xdata
mov bh 0x4
movsd [ edi ] [ esi ]
jmp r-xdata
or [ ebp - 0x74afeabb ] cl
inc ebp
cmc
and eax 0xfd00ff
push eax
call sub_40eb6e
movsb [ edi ] [ esi ]
pop ecx
test eax eax
mov [ edx ] edx
mov eax [ ebp + 0x15 ]
push 0x1
dec [ ebp - 0x68f00ec ]
lea eax [ ebp - 0x4 ]
lodsd [ esi ]
push ecx
lea eax [ ebp + 0x5 ]
push eax
lea eax [ ebp + 0x15 ]
push 0x1
push eax
adc eax 0x2fffbab
add esp 0x20
js r-xdata
mov bh 0x45
cld
lds eax [ ebp - 0xc ]
je r-xdata
fiadd [ ebp + 0xc ]
add [ eax - 0x58bff0c ] 0x8b
dec ebp
adc ch al
inc ebp
hlt
mov eax [ ebp - 0x10 ]
jle r-xdata
call 0x196c48
push [ esi + 0x5d ]
or [ esi + 0x1fd ] bh
jo r-xdata
pushad
into
shr bl 0x14
sub_4108cb
in al 0x75
das
mov edi edi
xor edi [ 0x3d1b90c3 ]
shl eax 0x1
cmp [ 0x3ff7c301 ] 0x1
add [ eax ] al
std
jbe r-xdata
mov bh bh
add edx 0x1
mov [ ecx ] 0xc17ee775
add [ edx ] ecx
cmp eax 0x3ff7dc74
add al [ eax ]
add ch bh
je r-xdata
add edx 0xffffffff
cmp al [ ecx ]
jne r-xdata
mov edi edi
cmp al [ ecx ]
jne r-xdata
hlt
or al al
je r-xdata
pop esi
add al 0x24
jae r-xdata
or al al
je r-xdata
cmc
cmp ah [ ecx + 0x1 ]
mov ch al
or ah ah
mov [ ebp - 0x14003e7d ] edi
mov ah cl
xor esp ecx
int3
test eax 0xb18b0424
and al 0x8
idiv [ edi ]
add eax [ eax ]
add ch bh
jne r-xdata
mov eax ecx
cmp [ ecx ] 0x20
pop esi
leave
int3
cmp ah [ ecx + 0x1 ]
mov [ 0x1d89e40a ] ah
shr eax 0xed
cmp al [ ecx + 0x2 ]
mov [ ecx ] bl
or al al
mov [ ecx ] edx
cmp ah [ ecx - 0x2 ]
jne r-xdata
mov edi edi
mov bh bl
or al al
je r-xdata
add al 0x24
push ss
int1
mov esi [ ebp - 0xb ]
add esi 0x1
mov [ 0xfffffffff18e2404 ] eax
lea eax [ esi + 0x2 ]
add esp 0x20
mov [ 0x28bc3c9 ] eax
push ebp
mov ebp esp
jle r-xdata
je r-xdata
idiv [ edi ]
add [ eax ] eax
add ch bh
sbb edi [ 0x3d83e0d1 ]
add ebx eax
cmp [ esp + eax ] 0xffffff83
retn 0xaf9
add al 0x24
sbb [ ebx + 0x2 ] dl
jne r-xdata
add ebp edi
add [ edi + 0xf ] dh
jbe r-xdata
lea esi [ eax + 0x2489e8e8 ]
stc
std
inc ecx
call 0x1098713
add ch bh
movzx eax [ 0xffffffffa08975eb ]
or cl al
jge r-xdata
mov al [ ebp - 0xb ]
push 0x2
mov [ eax + 0x45d88f8 ] bh
mov [ ebp - 0x6 ] 0xfd
pop ecx
jmp r-xdata
jne r-xdata
mov bh 0x4
movsd [ edi ] [ esi ]
jmp r-xdata
or [ ebp - 0x74afeabb ] cl
inc ebp
cmc
and eax 0xfd00ff
push eax
call sub_40eb6e
movsb [ edi ] [ esi ]
pop ecx
test eax eax
mov [ edx ] edx
mov eax [ ebp + 0x15 ]
push 0x1
dec [ ebp - 0x68f00ec ]
lea eax [ ebp - 0x4 ]
lodsd [ esi ]
push ecx
lea eax [ ebp + 0x5 ]
push eax
lea eax [ ebp + 0x15 ]
push 0x1
push eax
adc eax 0x2fffbab
add esp 0x20
js r-xdata
mov bh 0x45
cld
lds eax [ ebp - 0xc ]
je r-xdata
fiadd [ ebp + 0xc ]
add [ eax - 0x58bff0c ] 0x8b
dec ebp
adc ch al
inc ebp
hlt
mov eax [ ebp - 0x10 ]
jle r-xdata
call 0x196c48
push [ esi + 0x5d ]
or [ esi + 0x1fd ] bh
jo r-xdata
pushad
into
shr bl 0x14
sub_410973
dec [ ebx + 0x438d08a0 ]
cld
cmp eax 0xfd0100
ja r-xdata
mov [ eax - 0xa823ef8 ] esp
jbe r-xdata
mov eax [ ebp + 0x15 ]
push 0x1
dec [ ebp - 0x68f00ec ]
lea eax [ ebp - 0x4 ]
lodsd [ esi ]
push ecx
lea eax [ ebp + 0x5 ]
push eax
lea eax [ ebp + 0x15 ]
push 0x1
push eax
adc eax 0x2fffbab
add esp 0x20
js r-xdata
stc
std
inc ecx
call 0x1098713
add ch bh
movzx eax [ 0xffffffffa08975eb ]
or cl al
jge r-xdata
mov al [ ebp - 0xb ]
push 0x2
mov [ eax + 0x45d88f8 ] bh
mov [ ebp - 0x6 ] 0xfd
pop ecx
jmp r-xdata
jne r-xdata
mov bh 0x4
movsd [ edi ] [ esi ]
jmp r-xdata
or [ ebp - 0x74afeabb ] cl
inc ebp
cmc
and eax 0xfd00ff
push eax
call sub_40eb6e
movsb [ edi ] [ esi ]
pop ecx
test eax eax
mov [ edx ] edx
mov bh 0x45
cld
lds eax [ ebp - 0xc ]
je r-xdata
fiadd [ ebp + 0xc ]
add [ eax - 0x58bff0c ] 0x8b
dec ebp
adc ch al
inc ebp
hlt
mov eax [ ebp - 0x10 ]
jle r-xdata
call 0x196c48
push [ esi + 0x5d ]
or [ esi + 0x1fd ] bh
jo r-xdata
pushad
into
shr bl 0x14
sub_410987
add [ eax ] al
std
movzx eax [ 0xffffffffa08975eb ]
or cl al
jge r-xdata
mov bh 0x4
movsd [ edi ] [ esi ]
jmp r-xdata
or [ ebp - 0x74afeabb ] cl
inc ebp
cmc
and eax 0xfd00ff
push eax
call sub_40eb6e
movsb [ edi ] [ esi ]
pop ecx
test eax eax
mov [ edx ] edx
fiadd [ ebp + 0xc ]
add [ eax - 0x58bff0c ] 0x8b
dec ebp
mov eax [ ebp + 0x15 ]
push 0x1
dec [ ebp - 0x68f00ec ]
lea eax [ ebp - 0x4 ]
lodsd [ esi ]
push ecx
lea eax [ ebp + 0x5 ]
push eax
lea eax [ ebp + 0x15 ]
push 0x1
push eax
adc eax 0x2fffbab
add esp 0x20
js r-xdata
mov al [ ebp - 0xb ]
push 0x2
mov [ eax + 0x45d88f8 ] bh
mov [ ebp - 0x6 ] 0xfd
pop ecx
jmp r-xdata
jne r-xdata
mov bh 0x45
cld
lds eax [ ebp - 0xc ]
je r-xdata
adc ch al
inc ebp
hlt
mov eax [ ebp - 0x10 ]
jle r-xdata
call 0x196c48
push [ esi + 0x5d ]
or [ esi + 0x1fd ] bh
jo r-xdata
pushad
into
shr bl 0x14
sub_410a6a
fidiv [ ebx + 0x54 ]
jbe r-xdata
jmp r-xdata
call 0xed4ef7
add ch bh
add [ esi + 0x14 ] edi
jo r-xdata
lea ecx [ ebp - 0x4 ]
lodsb [ esi ]
push esi
push [ eax - 0x17 ]
lea eax [ ebp - 0x18 ]
lodsd [ esi ]
call 0xffffffffff440396
add [ esi + 0x45 ] dh
call 0xed504b
add ch bh
add [ esi + 0x31 ] edi
je r-xdata
call 0x5342a1d0
call sub_4108ab
jbe r-xdata
add esp 0xffffffd9
test eax eax
call 0xfffffffff8a4f3de
add bh bh
or cl al
or [ eax ] 0x8
lea edi [ eax - 0x4774af18 ]
or [ 0xfdff ] ah
push eax
adc eax 0x2ffdffb
pop ecx
pop ecx
test [ 0xffffffffb88a1274 ] edi
or [ edx + 0x2 ] ch
jne r-xdata
call 0xffffffffeb4d440f
or eax 0xc88176
std
vmwrite ebp [ edi - 0x1 ]
inc [ edx ]
cmp eax 0x1
mov dh 0x45
clc
mov [ ecx ] ecx
movzx esi [ eax - 0xa1f3e07 ]
or eax ecx
add [ eax - 0x58bff0c ] 0x8b
dec ebp
cld
mov [ eax + 0x345c6fd ] ah
add [ ecx - 0x15 ] bl
call 0x2b4e9ea
inc edi
add bh dl
add [ eax ] al
add dh cl
leave
add [ edi ] cl
mov bh 0xf9
pop eax
and eax 0xfffffffc
test eax eax
je r-xdata
add ch bh
mov eax [ ecx + 0xfdcc ]
cmovpo eax [ eax + ebx ]
jmp r-xdata
mov [ ebp + 0x1 ] bl
mov [ ebp - 0x3 ] 0xfd
inc ecx
mov eax [ ebp + 0x15 ]
push 0x1
dec [ ebp + 0x5558d04 ]
push 0x3
push edx
lodsb [ esi ]
sub_410ab0
add [ ecx + 0xd458b07 ] cl
and [ eax + 0x70 ] 0x0
mov eax ebx
jmp r-xdata
lea ecx [ ebp - 0x4 ]
lodsb [ esi ]
push esi
push [ eax - 0x17 ]
lea eax [ ebp - 0x18 ]
lodsd [ esi ]
call 0xffffffffff440396
add esp 0xffffffd9
test eax eax
vmwrite ebp [ edi - 0x1 ]
inc [ edx ]
cmp eax 0x1
mov dh 0x45
clc
mov [ ecx ] ecx
movzx esi [ eax - 0xa1f3e07 ]
or eax ecx
add [ eax - 0x58bff0c ] 0x8b
dec ebp
sub_411040
push esi
jbe r-xdata
or ecx ecx
mov ah dh
div ebx
jbe r-xdata
and al 0x14
test al 0x75
sub [ esi + 0x4c ] dh
and al 0x10
jbe r-xdata
shr ecx 0x1
sub al 0xdb
shr edx 0x1
sub al 0xd8
mul [ ecx + ebx * 8 + 0x14 ]
mov ecx eax
jbe r-xdata
and al 0xc
into
shl bh cl
int1
jbe r-xdata
int3
and al 0x10
or ah dh
add edx ecx
inc esp
add [ esi ] dl
add [ eax - 0x18 ] edx
push esi
std
mov eax [ ecx + ebx * 8 + 0x8 ]
div ecx
jbe r-xdata
mov eax ebx
or ah [ esp + 0x10 ]
jbe r-xdata
mov eax esi
or ah [ esp + 0x10 ]
sub_41106e
shr ebx 0x1
inc edi
jbe r-xdata
adc al 0x5d
int3
mov ebx [ ecx + ebx * 8 + 0x10 ]
mov edx [ ecx + ebx * 8 + 0xc ]
mov eax [ ecx + ebx * 8 + 0x8 ]
shr ecx 0x1
sub al 0xdb
shr edx 0x1
sub al 0xd8
or ecx ecx
mov ah dh
div ebx
jbe r-xdata
mul [ ecx + ebx * 8 + 0x14 ]
mov ecx eax
jbe r-xdata
int3
and al 0x10
or ah dh
add edx ecx
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call $+5
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_44bfe0
add esp 0x4
call sub_44c110
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_44c140
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0xd0
mov [ ebp - 0x128 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x653d3f3c
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_44c140
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x34
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov edx [ ebp - 0x294 ]
push edx
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x21
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3b
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x33
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_44bfe0
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_44bfe0
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_44bfe0
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_44bfe0
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_44bfe0
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
mov [ ebp - 0x288 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_44bfe0
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x288 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x288 ] edx
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea ecx [ ebp - 0x120 ]
push ecx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x148 ]
mov [ eax ] 0x5a
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov edx [ ebp - 0x148 ]
mov [ edx ] 0x4d
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
mov eax [ ebp - 0x558 ]
push eax
call [ ebp - 0x28c ]
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x13c ]
mov edx [ ebp - 0x144 ]
and edx 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x574 ] 0x44
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov edx [ ebp - 0x144 ]
and edx 0x1000
je rwxdata
mov eax [ ebp - 0x574 ]
sub eax 0x1
mov [ ebp - 0x574 ] eax
mov ecx [ ebp - 0x574 ]
mov [ ebp + ecx - 0x300 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov ecx 0x5
mov [ ebp - 0x2d0 ] cx
xor eax eax
mov [ ebp - 0x2d0 ] ax
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
lea edx [ ebp - 0x278 ]
push edx
lea eax [ ebp - 0x300 ]
push eax
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x120 ]
push ecx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_44bfe0
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_44c110
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_44c140
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401348

sub_401aee
retn
sub_401ed0
push ss
rcl [ edx + edx * 4 ] 0x24
das
pop esp
xor al 0x3f
inc ebp
jmp 0x2d9e4f49
sub_4023e1
inc [ edi - 0x3a ]
test [ ebx - 0x1 ] ebp
sub_4023e8
jmp [ ebp - 0x3a ]
sub_40269d
mov [ 0xffffffffdd706d6d ] al
outsb
mov [ fs : 0x31cccccc ] al
int3
sub_4026ad
xor esp ecx
int3
sub_4026e9
xor esp ecx
int3
sub_4026ed
xor esp ecx
int3
sub_402739
xor esp ecx
int3
sub_40273d
xor esp ecx
int3
sub_40293e
add [ ebx + 0x458bf9c4 ] al
hlt
sub_40296d
xor esp ecx
int3
sub_4029e1
mov eax 0xf5c083f8
push eax
call [ r--data ]
into
ror [ ebx + 0x4c2a0e5 ] 0x0
xor esp ecx
int3
sub_4029f9
xor esp ecx
int3
sub_4029fd
xor esp ecx
int3
sub_402ac5
xor esp ecx
int3
sub_402ac9
xor esp ecx
int3
sub_402acd
xor esp ecx
int3
sub_402c05
xor esp ecx
int3
sub_402c09
xor esp ecx
int3
sub_402c0d
xor esp ecx
int3
sub_402d32
mov eax [ ebp + 0x10 ]
salc
inc ebp
or [ ebx + 0x558bf0b0 ] cl
add eax 0x768a0489
inc ebp
hlt
sub_402d4d
xor esp ecx
int3
sub_402da0
call sub_40381b
sub_402de3
sub_402ec9
xor esp ecx
int3
sub_402ecd
xor esp ecx
int3
sub_4031ab
add eax 0xffffffff
mov [ ebp - 0x44 ] eax
adc al 0x1
sub_4031c7
mov eax 0xfd01
mov ebx [ eax ]
pop ebp
retn 0xfd10
sub_4031d4
bswap esp
inc eax
add [ esp + ecx * 8 ] dl
inc eax
add [ ebx ] dh
int3
sub_4031ed
xor esp ecx
int3
sub_403479
xor esp ecx
int3
sub_40347d
xor esp ecx
int3
sub_40381b
mov esp ebp
mov al [ 0x31000cc2 ]
int3
sub_403825
xor esp ecx
int3
sub_403829
xor esp ecx
int3
sub_40382d
xor esp ecx
int3
sub_403add
xor esp ecx
int3
sub_403b65
xor esp ecx
int3
sub_403b69
xor esp ecx
int3
sub_403b6d
xor esp ecx
int3
sub_403bf5
xor esp ecx
int3
sub_403bf9
xor esp ecx
int3
sub_403bfd
xor esp ecx
int3
sub_403c85
xor esp ecx
int3
sub_403c89
xor esp ecx
int3
sub_403c8d
xor esp ecx
int3
sub_403d15
xor esp ecx
int3
sub_403d19
xor esp ecx
int3
sub_403d1d
xor esp ecx
int3
sub_403d39
cmp al [ ebp - 0xfd00a0 ]
xchg esp eax
add ch bh
add [ ebp - 0x627b ] cl
[ ebp - 0x28f7ea01 ]
sub_403da5
mov esp 0xfd000024
add [ ebx - 0x32ccfeb3 ] cl
call sub_40707c
jbe r-xdata
jmp r-xdata
pop ebp
retn
jpo 0x3fdf19
sub_403db9
xor esp ecx
int3
sub_403dbd
xor esp ecx
int3
sub_403e8d
xor esp ecx
int3
sub_403fb8
jmp ebp
sub_4046c7
pop esp
inc [ edx ]
dec [ ebx + 0x41254d0d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x412ab515 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_404753
pop esp
inc [ edx ]
dec [ ebx + 0x4125790d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41257d15 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_40482f
pop esp
inc [ edx ]
dec [ ebx + 0x412a9d0d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x4125c115 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_404a5f
pop esp
inc [ edx ]
dec [ ebx + 0x4124610d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41246515 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_404df7
pop esp
inc [ edx ]
dec [ ebx + 0x4123450d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41234915 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_404f0f
pop esp
inc [ edx ]
dec [ ebx + 0x41268d0d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41268915 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_4055f4
push [ esi + 0x15 ]
hlt
sub_405e23
pop esp
inc [ edx ]
dec [ ebx + 0x4129110d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41290d15 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_406427
pop esp
inc [ edx ]
dec [ ebx + 0x41211d0d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x4123f915 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_4066f7
pop esp
inc [ edx ]
dec [ ebx + 0x4120910d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41209d15 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_40685f
pop esp
inc [ edx ]
dec [ ebx + 0x4120490d ]
add [ ebp + ecx * 4 + 0x5c ] dh
inc [ edx ]
dec [ ebx + 0x41201d15 ]
add [ ebp + edx * 4 + 0x5c ] dh
inc [ edx ]
jmp [ ecx + rw-data ]
sub_4068b4
push [ esi + 0x15 ]
int3
sub_406915
add bh bh
jmp [ esi ]
sub_406b36
jmp [ rw-data ]
sub_406c09
fdiv [ eax + 0x23 ]
inc ecx
std
jmp [ rw-data ]
sub_406d73
sub al [ ecx - 0x3 ]
jmp [ rw-data ]
sub_406dbb
sub al [ ecx - 0x3 ]
jmp [ rw-data ]
sub_406dfb
and eax rw-data
sub_406e01
fdivr [ eax + 0x2a ]
inc ecx
std
jmp [ rw-data ]
sub_406e7b
shl [ esp + esi * 8 + 0x56 ] 0x50
call sub_4080ce
movsb [ edi ] [ esi ]
pop ecx
mov [ ebp + 0x1 ] 0x2fffffe
call 0x13d6e9e
sub_406e93
cmp [ ebp + 0x19 ] 0x0
call sub_408c92
push 0xc
push r--data
adc eax 0xfd001cee
and [ ebp - 0x1c ] 0xfffffffd
mov esi [ ebp + 0x8 ]
add dh [ ebp + 0x8 ]
jmp r-xdata
jne r-xdata
sbb [ eax ] eax
sub_406ea3
add [ eax ] al
movsb [ edi ] [ esi ]
retn
sub_406ec3
enter 0xbc29 0x0
push eax
call sub_407dfc
je r-xdata
push 0xc
push r--data
adc eax 0xfd001cee
and [ ebp - 0x1c ] 0xfffffffd
mov esi [ ebp + 0x8 ]
pop ecx
call sub_408c92
sub_406ecb
add [ eax ] al
je r-xdata
push 0xc
push r--data
adc eax 0xfd001cee
and [ ebp - 0x1c ] 0xfffffffd
mov esi [ ebp + 0x8 ]
pop ecx
call sub_408c92
sub_406ed3
add [ eax ] al
push 0xc
push r--data
adc eax 0xfd001cee
and [ ebp - 0x1c ] 0xfffffffd
mov esi [ ebp + 0x8 ]
sub_406f03
pop ecx
mov [ eax + 0x145c7e4 ] edi
sub_406f0b
sub_406f72
xor eax eax
inc eax
lodsd [ esi ]
jmp sub_406f94
sub_406f94
push 0xfffffffd
push [ rw-data ]
[ edx ]
sub_40706b
sub ecx 0xfffffff9
jb sub_40707c
sbb [ 0x2c80303 ] 0x24
test [ eax - 0xffbf73 ] ecx
sub_40707c
sub_4070fb
mov bl dh
pop eax
jmp [ edx * 4 + r-xdata ]
sub_4071e1
pop eax
cld
jmp [ eax + ebp * 2 ]
sub_407294
inc [ edx ]
std
[ edi ] [ esi ]
add edi edi
and al 0x95
in eax dx
jae r-xdata
mov [ ecx - 0x4674ef71 ] edi
add [ eax + 0x49 ] dh
add ah al
pop [ eax ]
int3
sub_407306
clc
jmp [ eax + ebp * 2 ]
sub_40744f
or [ esi + 0x15 ] dl
out dx al
daa
add ch bh
pop ecx
retn
sub_4075f0
dec esi
test [ ebx + 0x74fff17d ] 0xf
add dh [ ebp + 0xc ]
push esi
add dh [ ebp + 0x8 ]
call sub_40a5eb
j_sub_4077e2
std
sub_4077e2
jmp 0x13d786e
sub_407a25
add dh [ ebp + 0x8 ]
call sub_409d17
movsb [ edi ] [ esi ]
retn
sub_407adc
or ebp edi
add [ eax ] al
mov edi [ eax - 0x13d2171c ]
add [ eax ] al
retn
sub_407ae9
add dh [ ebp + 0x8 ]
call sub_409c9f
movsb [ edi ] [ esi ]
retn
sub_407e06
sldt [ eax ]
movsb [ edi ] [ esi ]
call 0x13db9b7
test [ ebp + 0x39 ] bl
je r-xdata
push 0xa
pop ecx
lodsb [ esi ]
cmovpe ecx [ ebp - 0x38 ]
jmp r-xdata
sub_407e4f
add al 0x3a
std
add [ ecx + 0x59 ] bl
mov esp [ ds : ebp - 0x18 ]
jbe r-xdata
[ eax - 0x47741375 ]
fmul [ ecx + 0x7d83e0b8 ]
sbb [ eax ] eax
jne r-xdata
call r--data
lodsd [ esi ]
call 0x13d9072
sub_407e56
mov esp [ ebp - 0x18 ]
jbe r-xdata
[ eax - 0x47741375 ]
fmul [ ecx + 0x7d83e0b8 ]
sbb [ eax ] eax
jne r-xdata
call r--data
lodsd [ esi ]
call 0x13d9072
sub_407e76
dec [ ebx + 0x13eb1d45 ]
xor edi [ 0xffffffff988bc340 ]
call 0xfffffffffe41c44e
sub_407e87
sub_407f1c
jmp [ ebx + ecx * 4 - 0xbe1710 ]
sub_407f4e
pop ebp
retn
sub_407fe7
add al 0x1
mov [ ebx ] al
push eax
[ esi ]
sub_4080a7
add [ ecx + 0xbebe4a0 ] cl
je r-xdata
jmp r-xdata
sub_4080ce
or ch al
sub [ edx ] al
sub_4080d0
sub [ edx ] al
sub_408305
mov al 0x8
or [ ecx ] ebx
inc esi
add [ eax ] al
add [ ebp - 0x75 ] bh
0x16d3
sub_408b32
mov edi 0x80fd0000
mov ecx esi
out dx eax
or [ ebx ] edi
jbe r-xdata
mov bh 0x4
mov [ ecx - 0xb ] edx
mov ecx [ edx + 0x4 ]
mov edi 0x8000fd00
rcl [ edx ] cl
mov ecx [ ebp - 0x4 ]
hlt
sub_408c29
xor esp ecx
int3
sub_408c2d
xor esp ecx
int3
sub_408cea
sub_408d27
add al ch
fidivr [ 0xffffffffc47e0000 ]
add al 0x85
cmp eax 0xa88b0f74
or [ edx + 0x1 ] ch
scasd [ edi ]
call [ rw-data ]
cmp [ ecx ] 0x8
mov ecx [ ebp - 0xf ]
call 0x13dae62
sub_408d72
mov ecx [ esi + 0x4 ]
dec bh
xor ecx [ eax * 8 + 0x2e270e8 ]
dec [ ebx + 0x568bf14e ]
or dh bh
iretd
sub_4090f3
retn
sub_409704
jmp r-xdata
inc [ edx ]
mov [ eax ] 0xfd09
xor [ eax - 0x4738001c ] 0xfffffffc
sub_40979b
inc ebx
add dh [ ebp + 0x8 ]
call sub_40d567
movsb [ edi ] [ esi ]
retn
sub_40998b
push 0x1
adc eax 0x2ffe66a
pop ecx
retn
sub_4099ef
test [ eax + eax ] ebp
sub_409a23
std
inc [ edx ]
mov [ ebp - 0x2cb ] ds
fwait
mov [ ebp - 0xff3c ] es
jno r-xdata
cld
add bh bh
sar ch 0x2
jmp [ esi - 0x74 ]
sub_409a25
add ah [ esi - 0x74 ]
popfd
xor eax 0x9bfffffd
mov [ ebp - 0xff3c ] es
jno r-xdata
cld
add bh bh
sar ch 0x2
jmp [ esi - 0x74 ]
sub_409a4f
mov [ ebp - 0x233 ] 0x100fc
je r-xdata
test ebp edx
std
call 0xffffffff8a3f9d5d
lea ecx [ ecx ]
std
sub_409af8
inc [ edx ]
mov eax 0xb97f30
retn
sub_409b48
ror [ eax - 0x5ae595fb ] 0x5e
retn
sub_409b77
inc esp
add [ edx + 0x5c1c28b ] ch
add eax 0x4078048b
xchg esi eax
inc esp
std
mov edi edx
sbb [ edx ] 0x1f
shl edi 0xfb
mov eax [ edi + eax ]
jle r-xdata
push [ ebp + esi * 8 + 0x3b ]
sub_409c37
or al 0x83
cmp eax 0xe8ff5020
inc esp
sub al [ ecx - 0x3 ]
pop ebp
retn
sub_409c74
cmp [ 0xffffffffe8ff5020 ] 0x48
sub al [ ecx - 0x3 ]
pop ebp
retn
sub_409c9f
[ ecx - 0x60 ]
retn
sub_409d17
mov [ esi ] eax
add dh [ esi + 0x18 ]
dec [ ebx + 0x7fe85608 ]
cli
sub_409d24
jmp [ eax + edx * 2 + 0xfb70e8 ]
sub_409e65
jmp 0x3212852
sub_40a102
inc eax
jne r-xdata
mov al [ ecx ]
mov dh bh
inc ebx
jge r-xdata
mov eax ebx
salc
inc ebp
hlt
add ch bl
clc
sub_40a348
xor bl 0x2
jmp sub_40a355
sub_40a355
salc
pop ebp
hlt
sub_40a519
xor esp ecx
int3
sub_40a51d
xor esp ecx
int3
sub_40a5d3
xchg esi eax
inc esp
std
mov [ rw-data ] esi
lea esi [ ebp ]
or [ eax ] al
std
jmp r-xdata
cmp edi [ edx + esi * 2 ]
int3
sub_40a7d0
sub [ eax + eax + 0x1116c033 ] edi
xor eax eax
mov ebp 0x15658bc3
mov [ ebp - 0x4 ] 0xffffff03
jle r-xdata
inc esi
or [ esi ] dl
or al [ eax - 0x38bf06b2 ]
push es
add edi edi
sub_40a933
inc ebx
add dh [ ebp + 0x8 ]
call sub_40d497
movsb [ edi ] [ esi ]
retn
sub_40ac33
iretd
sub_40ad34
mov eax [ eax + 0x15016ae4 ]
mov esi 0x5902ffd2
retn
sub_40adc2
pop [ fs : 0xfd ]
jle r-xdata
add al 0x3b
pcmpeqd mm5 [ esi ]
sbb [ edi - 0x5d ] bl
pop ebx
retn
sub_40ae2d
int1
pop ebp
retn 0xfd04
sub_40ae32
push ebp
push esi
push edi
scasb [ edi ]
mov ebp edx
xor edi [ 0x2f33db33 ]
xor esi esi
xor eax [ edx ]
call ecx
pop ebx
mov [ 0x76c35d5e ] al
0xc176f18b 0x16a
sub_40aeb8
add [ esi + 0x4e ] bh
or al 0x20
jle r-xdata
call 0x3fb240
cmp [ ecx ] 0xc
pop ebp
retn 0xf5
sub_40b160
add [ ebp + eax * 4 + 0x44 ] dh
in eax 0x2
dec [ edx - 0x1a257b ]
j_sub_40b1d8
jmp sub_40b1d8
sub_40bd56
push ebx
push esi
mov ecx eax
xor [ 0x3357fd41 ] ah
fcmovne st6
sub_40bddb
hlt
sub_40be91
cmp esi [ ebx + 0xf ]
mov edi edx
test eax eax
je r-xdata
call eax
cmp [ edx ] 0x4
cmp edi esi
sub_40bebf
add bh bh
sub eax 0xc604c783
sub_40bf27
adc eax rw-data
sub_40bf2c
test [ 0xffffffff88ff0874 ] edi
or bh bh
shl [ ebp + eax * 2 + 0x8 ] 0x1
mov edi [ eax + 0x3e5d5e08 ]
push 0x0
call sub_40bebf
movsb [ edi ] [ esi ]
retn
sub_40bf57
inc ecx
add [ edx ] al
salc
test eax eax
mov [ ecx ] esp
mov eax [ rw-data ]
add [ 0xffffffffad1774ff ] 0xffffffff
xor eax rw-data
[ ebx ]
sub_40bf72
call eax
test [ 0x7d8b0874 ] edi
cld
add [ eax ] eax
std
jmp sub_40bfa7
sub_40bf9d
into
inc ecx
add [ eax + 0x2 ] dl
adc eax 0xbc2a58
sub_40bfa7
test eax eax
mov [ eax ] ecx
push [ ebp - 0xb ]
call eax
mov [ eax - 0xaba74f8 ] edi
pop esi
pop ebp
retn
sub_40bfb9
add dl [ 0xbc23f8 ]
retn 0xfd04
sub_40c01c
clc
add dh [ esi + ecx + 0x50 ]
add dl [ 0xbc2590 ]
or [ rw-data ] 0x2
jmp 0xffffffffff437fa5
sub_40c168
push esi
adc eax 0x2fffec5
pop ecx
pop ecx
sub_40c1ab
pop esi
retn
sub_40c1ad
xchg edi eax
or [ eax + 0x70 ] ch
mov ebp 0xeae80041
0xffff
sub_40c268
inc [ edx ]
sub_40c2f3
0x2ff
sub_40c9b9
xor esp ecx
int3
sub_40c9bd
xor esp ecx
int3
sub_40c9f5
xor esp ecx
int3
sub_40c9f9
xor esp ecx
int3
sub_40c9fd
xor esp ecx
int3
sub_40ca45
xor esp ecx
int3
sub_40ca49
xor esp ecx
int3
sub_40ca4d
xor esp ecx
int3
sub_40cacf
add [ eax ] al
std
add [ ecx + 0x5f ] bl
mov [ 0xffffffffa0e58b5b ] eax
retn
sub_40cadb
mov eax [ ebp + 0x11 ]
mov ecx [ eax ]
mov edi esp
xor edx edx
cmp eax 0xc00000f8
xchg esp eax
retn 0x3f8b
sub_40caee
retn
sub_40cb0b
pop ebp
retn
sub_40cb8b
test eax eax
mov [ ecx ] esi
sar ebx 0xff
push eax
lea esi [ 0x2f331e8 ]
[ ecx - 0x5d ]
lea esp [ edi + 0x75020044 ]
or al ch
fdivrp st3
sub_40cca5
xchg ebp eax
insb
int3
sub_40cd19
sub_40d06b
[ edx - 0x15 ]
sub_40d0a2

sub_40d11b
mov [ esi ] bl
push ss
rol [ ebx - 0x74001683 ] 0x1
sub_40d17d
xor esp ecx
int3
sub_40d28c
mov eax [ rw-data ]
push ss
sub [ ecx + rw-data ] ah
mov eax esi
int3
sub_40d567
add [ eax ] al
sub_40d5d8
mov eax [ eax + 0x1d758bd8 ]
push 0xa
call sub_4080cf
movsb [ edi ] [ esi ]
retn
sub_40e352
add [ ebp + 0x8758d48 ] al
call sub_40edcf
sub_40e3d2
add [ eax ] al
mov esi [ eax - 0x729e7c10 ]
std
jmp rw-data
sub_40e74d
xor esp ecx
int3
sub_40e9f4
cmp edi [ esi ]
je r-xdata
cmp [ ebp + 0x1 ] bl
je r-xdata
mov dh 0xe
je r-xdata
xor eax eax
mov ebp 0xb88dcaeb
mov edi [ eax - 0x729f7c08 ]
std
and [ eax - 0x73 ] 0xfffffffd
sub_40eb28
pop ecx
movsb [ edi ] [ esi ]
pop ebp
retn
sub_40eb2d
xor esp ecx
int3
sub_40eb49
cmp al 0x59
xchg esp eax
mov edi ebp
mov [ esp ] eax
sub eax 0xfd1000
test [ eax ] eax
push ss
jmp 0xffffffff8be9eaea
sub_40ebdd
inc ebp
add al 0x4
add ch bh
retn
sub_40ebe3
mov eax 0xf912
retn
sub_40ebe9
inc ebp
add al 0x8
add ch bh
retn
sub_40edae
ror [ ebp - 0x47c22a6 ] 0x1
sbb [ edx - 0xcb37ff4 ] ecx
sbb eax 0x802c8a10
retn 0x1620
sub_40edcf
sub dl 0xdd
mov [ eax ] dl
jmp r-xdata
sub_40edd6
mov [ eax ] 0x0
mov esp 0x3f72cf3b
sub_40edde
mov ecx [ ebp - 0x4 ]
mov [ 0x155bcd33 ] al
add eax 0xc902ff82
retn
sub_40ee84
mov ecx [ eax + 0x150d6ae4 ]
outsb
xchg ecx eax
inc [ edx ]
pop ecx
retn
sub_40f6c1
mov eax 0xceffffff
dec [ ebx + 0x46af175 ]
call sub_4080a7
movsb [ edi ] [ esi ]
retn
sub_40f81e
inc esp
add bh bh
call 0xfffffffffd821fb6
mov edi eax
jmp r-xdata
std
push [ rw-data ]
sub_40f82a
mov esi [ ebp + 0xc ]
jbe r-xdata
or al 0xfd
add [ eax ] al
jmp sub_40f81e
or [ edx - 0x7 ] ch
call 0xffffffffff437ffc
pop ecx
retn
sub_40f999
into
dec [ ebx + 0x758bf55d ]
in al 0x97
add al 0xe8
push esp
jpo r-xdata
[ ecx + 0x3e ]
push 0x2
call sub_408e77
movsb [ edi ] [ esi ]
retn
sub_40fd04
xor [ esi + 0xa ] 0x8d
dec esp
int3
sub_40ff42
push ecx
push [ ebp - 0xa ]
add [ ebp - 0x4 ] 0xfffffff9
cmp [ ebp - 0x4 ] edi
pop edx
jmp r-xdata
cmp [ eax - 0x31138d04 ] esp
rcr [ edi + 0x5b ] 0x34
retn
sub_40ff63
jmp r-xdata
salc
shr ebx 0xf2
into
rcl [ eax + 0x50 ] 0x97
add edx [ eax + 0x6a ]
sub_410431
pop esp
pop eax
xchg ebp eax
inc esp
std
cmp eax 0x2
test bh cl
add ch bh
add [ ebx ] bh
retn
sub_4104b0
int3
sub_4105a8
dec [ eax + 0xd4d8d24 ]
push [ ebp + 0x20 ]
add dh [ ebp + 0x1c ]
dec [ eax - 0x168a00e8 ]
push [ ebp + 0x10 ]
add dh [ ebp + 0xc ]
call sub_4104b0
sub_410889
xor esp ecx
int3
sub_41088d
xor esp ecx
int3
sub_4108ab
popad
add [ eax - 0x761bf5db ] ecx
sbb eax 0x3aede8c1
inc ecx
add cl [ eax - 0x763ff5e7 ]
adc [ edx ] edi
popad
sub_41091d
xor esp ecx
int3
sub_410a15
cmpsb [ esi ] [ edi ]
leave
retn
sub_410a19
xor esp ecx
int3
sub_410a1d
xor esp ecx
int3
sub_410b5d
mov [ 0x31c3c95b ] eax
int3
sub_410b65
xor esp ecx
int3
sub_410b69
xor esp ecx
int3
sub_410b6d
xor esp ecx
int3
sub_410bd3
push ebp
mov edx [ ecx ]
sub esp 0xc
pop esp
sar [ ebx + 0x44 ] 0xfd
xor eax ebp
mov [ eax + 0x70066afc ] edi
inc ebp
hlt
sub_4110d9
xor esp ecx
int3
sub_4110dd
xor esp ecx
int3
sub_411115
xor esp ecx
int3
sub_411119
xor esp ecx
int3
sub_41111d
xor esp ecx
int3
