sub_401080
push 0xffffffff
push sub_402108
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_540
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4010f0
push 0xffffffff
push sub_402128
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_800
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401150
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
jne r-xdata
mov ecx esi
call sub_401390
mov ecx esi
call sub_401860
mov ecx esi
call sub_4011a0
mov ecx [ esi + 0xc0 ]
push 0x5
push ecx
call [ WinExec@IAT ]
mov ecx rw-data
call sub_401c40
xor eax eax
pop esi
retn 0x4
or eax eax
pop esi
retn 0x4
sub_4011a0
push 0xffffffff
push sub_40216c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3a8
push ebp
mov ebp ecx
push esi
push edi
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_354
mov eax [ ebp + 0x1c8 ]
mov [ esp + 0x3bc ] 0x0
test eax eax
je r-xdata
push 0x0
lea ecx [ esp + 0x2b4 ]
push 0x1a
push ecx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
lea edi [ esp + 0x2b0 ]
lea eax [ esp + 0x1ac ]
push 0x105
push eax
call [ GetSystemDirectoryA@IAT ]
lea edi [ esp + 0x1ac ]
jmp r-xdata
push 0x23000
push rw-data
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_1979
mov ecx [ rw-data ]
push ecx
mov ecx ebp
call sub_401600
lea ecx [ esp + 0x18 ]
mov [ esp + 0x3bc ] 0xffffffff
call Ordinal_MFC42_665
mov eax 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0x3bc ] 0xffffffff
call Ordinal_MFC42_665
xor eax eax
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xa8 ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x28 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push rw-data
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x2c ]
push ecx
mov ecx ebp
call sub_401810
lea edx [ esp + 0xa8 ]
lea ecx [ esp + 0x14 ]
push edx
call Ordinal_MFC42_537
push rw-data
push eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x3c4 ] 0x1
push eax
call Ordinal_MFC42_924
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x10 ]
push ecx
push eax
push edx
mov [ esp + 0x3c8 ] 0x2
call Ordinal_MFC42_924
push eax
mov ecx rw-data
mov [ esp + 0x3c0 ] 0x3
call Ordinal_MFC42_858
lea ecx [ esp + 0x10 ]
mov [ esp + 0x3bc ] 0x2
call Ordinal_MFC42_800
lea ecx [ esp + 0xc ]
mov [ esp + 0x3bc ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x14 ]
mov [ esp + 0x3bc ] 0x0
call Ordinal_MFC42_800
mov eax [ rw-data ]
push 0x0
push 0x1001
push eax
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_5186
test eax eax
jne r-xdata
mov ecx [ esp + 0x3b4 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x3b4
retn
sub_401390
push 0xffffffff
push sub_4021ac
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2a4
push ebx
push ebp
mov ebx ecx
push esi
push edi
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_354
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2c ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x2c0 ] 0x0
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x30 ]
push ecx
mov ecx ebx
call sub_401810
mov ecx ebx
call sub_401750
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x1b4 ]
push 0x1a
push edx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
lea eax [ esp + 0x2c ]
lea ebp [ ebx + 0xc4 ]
push eax
lea ecx [ esp + 0x1b4 ]
lea edx [ esp + 0xac ]
push 0x105
push edx
call [ GetSystemDirectoryA@IAT ]
lea eax [ esp + 0x2c ]
lea ebp [ ebx + 0xc4 ]
push eax
lea ecx [ esp + 0xb0 ]
jmp r-xdata
mov eax [ esi ]
push 0x0
push 0x1001
push eax
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_5186
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x2bc ] 0xffffffff
call Ordinal_MFC42_665
xor eax eax
jmp r-xdata
push ecx
push rw-data
push ebp
call [ sprintf@IAT ]
add esp 0x10
push 0x0
push ebp
call [ CreateDirectoryA@IAT ]
push ebp
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
push ebp
call [ SetFileAttributesA@IAT ]
mov ecx ebx
call sub_401670
push ebp
call [ SetCurrentDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2c ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x30 ]
push ecx
mov ecx ebx
call sub_401810
push ebp
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_537
push rw-data
lea edx [ esp + 0x2c ]
push eax
push edx
mov [ esp + 0x2c8 ] 0x1
call Ordinal_MFC42_924
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0x20 ]
push ecx
push eax
push edx
mov [ esp + 0x2c8 ] 0x2
call Ordinal_MFC42_924
lea esi [ ebx + 0xc0 ]
push eax
mov ecx esi
mov [ esp + 0x2c0 ] 0x3
call Ordinal_MFC42_858
lea ecx [ esp + 0x20 ]
mov [ esp + 0x2bc ] 0x2
call Ordinal_MFC42_800
lea ecx [ esp + 0x28 ]
mov [ esp + 0x2bc ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x24 ]
mov [ esp + 0x2bc ] 0x0
call Ordinal_MFC42_800
mov eax [ esi ]
push 0x0
push 0x0
push eax
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_5186
test eax eax
je r-xdata
push 0x9000
push rw-data
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_1979
mov esi [ esi ]
mov ecx ebx
push esi
call sub_401600
lea ecx [ esp + 0x10 ]
mov [ esp + 0x2bc ] 0xffffffff
call Ordinal_MFC42_665
mov eax 0x1
lea ecx [ esp + 0x10 ]
mov [ esp + 0x2bc ] 0xffffffff
call Ordinal_MFC42_665
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x2b4 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2b0
retn
sub_401600
sub esp 0x264
lea eax [ esp ]
push esi
push 0x32
push eax
call [ GetWindowsDirectoryA@IAT ]
lea ecx [ esp + 0x150 ]
lea edx [ esp + 0x4 ]
push ecx
push edx
call Ordinal_MFC42_3790
mov esi [ esp + 0x26c ]
lea eax [ esp + 0x38 ]
push eax
push esi
call Ordinal_MFC42_3790
test eax eax
je r-xdata
pop esi
add esp 0x264
retn 0x4
mov eax [ esp + 0x150 ]
lea ecx [ esp + 0x38 ]
push ecx
push esi
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
call Ordinal_MFC42_6153
sub_401670
sub esp 0x88
push ebx
push esi
mov edx ecx
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx edx
call sub_401810
lea edx [ esp + 0xc ]
lea eax [ esp + 0x14 ]
push edx
push 0xf003f
push 0x0
push eax
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov edx [ esp + 0xc ]
mov esi [ RegSetValueExA@IAT ]
lea ecx [ esp + 0x10 ]
push 0x4
push ecx
push 0x4
push 0x0
push rw-data
push edx
mov [ esp + 0x28 ] 0x0
call esi
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push rw-data
push ecx
call esi
mov edx [ esp + 0xc ]
push edx
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebx
add esp 0x88
retn
sub_401720
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi + 0x20 ]
push esi
and ah 0x7f
mov [ esi + 0x20 ] eax
call Ordinal_MFC42_5252
test eax eax
jne r-xdata
push esi
mov ecx edi
call Ordinal_MFC42_5252
pop edi
pop esi
retn 0x4
pop edi
pop esi
retn 0x4
sub_401750
sub esp 0x88
xor eax eax
lea edx [ esp + 0x8 ]
push ebx
push esi
mov ebx ecx
push edi
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx ebx
call sub_401810
lea edx [ esp + 0x10 ]
lea eax [ esp + 0xc ]
push edx
push eax
push 0x0
push 0xf003f
push 0x0
push rw-data
lea ecx [ esp + 0x2c ]
push 0x0
push ecx
push 0x80000002
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
mov [ ebx + 0x1c8 ] 0x0
pop esi
xor eax eax
pop ebx
add esp 0x88
retn
lea edx [ esp + 0x14 ]
push edx
push 0x80000002
call [ RegDeleteKeyA@IAT ]
mov eax [ esp + 0xc ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop edi
mov [ ebx + 0x1c8 ] eax
pop esi
pop ebx
add esp 0x88
retn
sub_401810
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edi [ esp + 0x18 ]
xor esi esi
not ecx
dec ecx
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
test ebp ebp
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax esi
cdq
idiv ecx
mov eax [ esp + 0x18 ]
mov dl [ edx + eax ]
mov al [ esi + ebx ]
xor dl al
xor dl 0x96
mov [ esi + ebx ] dl
inc esi
cmp esi ebp
jl r-xdata
sub_401860
sub esp 0x19c
xor eax eax
lea edx [ esp + 0x18 ]
push ebx
push ebp
push esi
mov ebx ecx
push edi
mov edi rw-data
or ecx 0xffffffff
push rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x2c ]
push ecx
mov ecx ebx
call sub_401810
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x10 ]
push edx
push eax
push 0x0
push 0xf003f
push 0x0
push rw-data
lea ecx [ esp + 0x40 ]
push 0x0
push ecx
push 0x80000001
call [ RegCreateKeyExA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx ebx
call sub_401810
mov edi [ ebx + 0xc0 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xa8 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xac ]
push ecx
mov ecx ebx
call sub_401810
lea edi [ esp + 0xa8 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xa8 ]
[ edi ]
not ecx
dec ecx
mov ebp [ RegSetValueExA@IAT ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push 0x3
push eax
lea eax [ esp + 0x24 ]
push eax
push ecx
call ebp
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx ebx
call sub_401810
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push 0x3
push eax
mov eax [ esp + 0x20 ]
push edx
push eax
call ebp
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx ebx
call sub_401810
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push 0x1
push eax
mov eax [ esp + 0x20 ]
push edx
push eax
call ebp
mov ecx [ esp + 0x10 ]
push ecx
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x19c
retn
sub_401a80
push 0xffffffff
push sub_4021c8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push 0x0
mov [ esp + 0x8 ] esi
call Ordinal_MFC42_561
lea ecx [ esi + 0xc4 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_540
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401af0
push 0xffffffff
push sub_4021e8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xc4 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_800
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_815
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401b80
push 0xffffffff
push sub_40220a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x8c ]
lea edi [ esi + 0xc4 ]
push eax
mov ecx edi
call Ordinal_MFC42_860
mov edi [ edi ]
push edi
push 0x0
call [ FindWindowA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push eax
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push rw-data
mov ecx esi
call Ordinal_MFC42_6117
push 0x1cc
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
xor eax eax
mov ecx eax
call sub_401080
jmp r-xdata
push 0x0
mov [ esi + 0x20 ] eax
mov edx [ eax ]
push 0x0
push 0xcf8000
push 0x80
mov ecx eax
mov [ esp + 0x24 ] 0xffffffff
call [ edx + 0xc0 ]
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402085
cmp [ rw-data ] ebx
jne r-xdata
call sub_402070
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402082
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_402092
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4020aa
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
call sub_401010
jmp sub_401020
sub_401010
mov ecx rw-data
jmp Ordinal_MFC42_540
sub_401020
push sub_401030
call sub_401ee4
pop ecx
retn
sub_401030
mov ecx rw-data
jmp Ordinal_MFC42_800
sub_401040
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_401050
mov eax r--data
retn
sub_401060
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_401070
mov eax r--data
retn
sub_4010d0
push esi
mov esi ecx
call sub_4010f0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401a40
retn 0x4
sub_401a50
retn
sub_401a60
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_401a70
mov eax r--data
retn
sub_401ad0
push esi
mov esi ecx
call sub_401af0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401b40
call sub_401b50
jmp sub_401b60
sub_401b50
mov ecx rw-data
jmp sub_401a80
sub_401b60
push sub_401b70
call sub_401ee4
pop ecx
retn
sub_401b70
mov ecx rw-data
jmp sub_401af0
sub_401c40
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
jmp [ eax + 0x60 ]
sub_401c50
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_1979
jmp [ Ordinal_MFC42_1979@IAT ]
Ordinal_MFC42_6385
jmp [ Ordinal_MFC42_6385@IAT ]
Ordinal_MFC42_665
jmp [ Ordinal_MFC42_665@IAT ]
Ordinal_MFC42_5186
jmp [ Ordinal_MFC42_5186@IAT ]
Ordinal_MFC42_858
jmp [ Ordinal_MFC42_858@IAT ]
Ordinal_MFC42_924
jmp [ Ordinal_MFC42_924@IAT ]
Ordinal_MFC42_537
jmp [ Ordinal_MFC42_537@IAT ]
Ordinal_MFC42_354
jmp [ Ordinal_MFC42_354@IAT ]
Ordinal_MFC42_6153
jmp [ Ordinal_MFC42_6153@IAT ]
Ordinal_MFC42_3790
jmp [ Ordinal_MFC42_3790@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_860
jmp [ Ordinal_MFC42_860@IAT ]
sub_401eb8
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_401ee4
push [ esp + 0x4 ]
call sub_401eb8
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402070
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402082
xor eax eax
retn
sub_402085
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_402092
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_4020d8
jmp sub_4020d8
sub_4020d8
push 0x600
push 0x0
call sub_4020aa
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_402100
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_402108
mov eax r--data
jmp __CxxFrameHandler
sub_402120
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_402128
mov eax r--data
jmp __CxxFrameHandler
sub_402140
lea ecx [ ebp - 0x3a8 ]
jmp Ordinal_MFC42_665
sub_40214b
lea ecx [ ebp - 0x3ac ]
jmp Ordinal_MFC42_800
sub_402156
lea ecx [ ebp - 0x3b4 ]
jmp Ordinal_MFC42_800
sub_402161
lea ecx [ ebp - 0x3b0 ]
jmp Ordinal_MFC42_800
sub_40216c
mov eax r--data
jmp __CxxFrameHandler
sub_402180
lea ecx [ ebp - 0x2b0 ]
jmp Ordinal_MFC42_665
sub_40218b
lea ecx [ ebp - 0x29c ]
jmp Ordinal_MFC42_800
sub_402196
lea ecx [ ebp - 0x298 ]
jmp Ordinal_MFC42_800
sub_4021a1
lea ecx [ ebp - 0x2a0 ]
jmp Ordinal_MFC42_800
sub_4021ac
mov eax r--data
jmp __CxxFrameHandler
sub_4021c0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_815
sub_4021c8
mov eax r--data
jmp __CxxFrameHandler
sub_4021e0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_815
sub_4021e8
mov eax r--data
jmp __CxxFrameHandler
sub_402200
mov eax [ ebp - 0x10 ]
push eax
call sub_401c50
retn
sub_40220a
mov eax r--data
jmp __CxxFrameHandler
